var my_calls;
(function() {
	var a = {
		type_name_user: "Person",
		type_name_group: "Group",
		type_name_queue: "Queue",
		type_name_conference: "Conference",
		type_name_valet_parking: "Parking",
		type_name_auto_attendant: "Automated Attendant",
		type_name_router: "Advanced Call Router",
		type_name_phone: "Unassigned Phone",
		type_name_alloc: "Allocation Block",
		type_icon_user: "/cudatel/images/typeicons/user.png",
		type_icon_group: "/cudatel/images/typeicons/group.png",
		type_icon_queue: "/cudatel/images/typeicons/queue.png",
		type_icon_conference: "/cudatel/images/typeicons/conference.png",
		type_icon_valet_parking: "/cudatel/images/typeicons/valet_parking.png",
		type_icon_auto_attendant: "/cudatel/images/typeicons/auto_attendant.png",
		type_icon_router: "/cudatel/images/typeicons/router.png",
		type_icon_phone: "/cudatel/images/typeicons/phone.png",
		type_icon_extension: "/cudatel/images/typeicons/extension.png",
		type_icon_alloc: "/cudatel/images/typeicons/extension.png"
	};
	txt = function(e) {
		return a[e] || e
	}
})();
this.JSON || (JSON = {});
(function() {
	function a(l) {
		return l < 10 ? "0" + l : l
	}
	function e(l) {
		d.lastIndex = 0;
		return d.test(l) ? '"' + l.replace(d, function(o) {
			var q = j[o];
			return typeof q === "string" ? q : "\\u" + ("0000" + o.charCodeAt(0).toString(16)).slice(-4)
		}) + '"' : '"' + l + '"'
	}
	function g(l, o) {
		var q, v, x, y, D = b,
			B, u = o[l];
		if(u && typeof u === "object" && typeof u.toJSON === "function") u = u.toJSON(l);
		if(typeof n === "function") u = n.call(o, l, u);
		switch(typeof u) {
		case "string":
			return e(u);
		case "number":
			return isFinite(u) ? String(u) : "null";
		case "boolean":
		case "null":
			return String(u);
		case "object":
			if(!u) return "null";
			b += f;
			B = [];
			if(Object.prototype.toString.apply(u) === "[object Array]") {
				y = u.length;
				for(q = 0; q < y; q += 1) B[q] = g(q, u) || "null";
				x = B.length === 0 ? "[]" : b ? "[\n" + b + B.join(",\n" + b) + "\n" + D + "]" : "[" + B.join(",") + "]";
				b = D;
				return x
			}
			if(n && typeof n === "object") {
				y = n.length;
				for(q = 0; q < y; q += 1) {
					v = n[q];
					if(typeof v === "string") if(x = g(v, u)) B.push(e(v) + (b ? ": " : ":") + x)
				}
			} else for(v in u) if(Object.hasOwnProperty.call(u, v)) if(x = g(v, u)) B.push(e(v) + (b ? ": " : ":") + x);
			x = B.length === 0 ? "{}" : b ? "{\n" + b + B.join(",\n" + b) + "\n" + D + "}" : "{" + B.join(",") + "}";
			b = D;
			return x
		}
	}
	if(typeof Date.prototype.toJSON !== "function") {
		Date.prototype.toJSON = function() {
			return this.getUTCFullYear() + "-" + a(this.getUTCMonth() + 1) + "-" + a(this.getUTCDate()) + "T" + a(this.getUTCHours()) + ":" + a(this.getUTCMinutes()) + ":" + a(this.getUTCSeconds()) + "Z"
		};
		String.prototype.toJSON = Number.prototype.toJSON = Boolean.prototype.toJSON = function() {
			return this.valueOf()
		}
	}
	var c = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
		d = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
		b, f, j = {
			"\u0008": "\\b",
			"\t": "\\t",
			"\n": "\\n",
			"\u000c": "\\f",
			"\r": "\\r",
			'"': '\\"',
			"\\": "\\\\"
		},
		n;
	if(typeof JSON.stringify !== "function") JSON.stringify = function(l, o, q) {
		var v;
		f = b = "";
		if(typeof q === "number") for(v = 0; v < q; v += 1) f += " ";
		else if(typeof q === "string") f = q;
		if((n = o) && typeof o !== "function" && (typeof o !== "object" || typeof o.length !== "number")) throw Error("JSON.stringify");
		return g("", {
			"": l
		})
	};
	if(typeof JSON.parse !== "function") JSON.parse = function(l, o) {
		function q(x, y) {
			var D, B, u = x[y];
			if(u && typeof u === "object") for(D in u) if(Object.hasOwnProperty.call(u, D)) {
				B = q(u, D);
				if(B !== undefined) u[D] = B;
				else delete u[D]
			}
			return o.call(x, y, u)
		}
		var v;
		c.lastIndex = 0;
		if(c.test(l)) l = l.replace(c, function(x) {
			return "\\u" + ("0000" + x.charCodeAt(0).toString(16)).slice(-4)
		});
		if(/^[\],:{}\s]*$/.test(l.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]").replace(/(?:^|:|,)(?:\s*\[)+/g, ""))) {
			v = eval("(" + l + ")");
			return typeof o === "function" ? q({
				"": v
			}, "") : v
		}
		throw new SyntaxError("JSON.parse");
	}
})();
(function(a, e) {
	function g(z, A, H) {
		if(H === e && z.nodeType === 1) {
			H = z.getAttribute("data-" + A);
			if(typeof H === "string") {
				try {
					H = H === "true" ? true : H === "false" ? false : H === "null" ? null : !u.isNaN(H) ? parseFloat(H) : I.test(H) ? u.parseJSON(H) : H
				} catch(P) {}
				u.data(z, A, H)
			} else H = e
		}
		return H
	}
	function c() {
		return false
	}
	function d() {
		return true
	}
	function b(z, A, H) {
		H[0].type = z;
		return u.event.handle.apply(A, H)
	}
	function f(z) {
		var A, H, P, T, W, ka, ja, wa, Va, Ga, Ya, hb = [];
		T = [];
		W = u.data(this, this.nodeType ? "events" : "__events__");
		if(typeof W === "function") W = W.events;
		if(!(z.liveFired === this || !W || !W.live || z.button && z.type === "click")) {
			if(z.namespace) Ya = RegExp("(^|\\.)" + z.namespace.split(".").join("\\.(?:.*\\.)?") + "(\\.|$)");
			z.liveFired = this;
			var tb = W.live.slice(0);
			for(ja = 0; ja < tb.length; ja++) {
				W = tb[ja];
				W.origType.replace(oa, "") === z.type ? T.push(W.selector) : tb.splice(ja--, 1)
			}
			T = u(z.target).closest(T, z.currentTarget);
			wa = 0;
			for(Va = T.length; wa < Va; wa++) {
				Ga = T[wa];
				for(ja = 0; ja < tb.length; ja++) {
					W = tb[ja];
					if(Ga.selector === W.selector && (!Ya || Ya.test(W.namespace))) {
						ka = Ga.elem;
						P = null;
						if(W.preType === "mouseenter" || W.preType === "mouseleave") {
							z.type = W.preType;
							P = u(z.relatedTarget).closest(W.selector)[0]
						}
						if(!P || P !== ka) hb.push({
							elem: ka,
							handleObj: W,
							level: Ga.level
						})
					}
				}
			}
			wa = 0;
			for(Va = hb.length; wa < Va; wa++) {
				T = hb[wa];
				if(H && T.level > H) break;
				z.currentTarget = T.elem;
				z.data = T.handleObj.data;
				z.handleObj = T.handleObj;
				Ya = T.handleObj.origHandler.apply(T.elem, arguments);
				if(Ya === false || z.isPropagationStopped()) {
					H = T.level;
					if(Ya === false) A = false;
					if(z.isImmediatePropagationStopped()) break
				}
			}
			return A
		}
	}
	function j(z, A) {
		return(z && z !== "*" ? z + "." : "") + A.replace(Za, "`").replace(eb, "&")
	}
	function n(z, A, H) {
		if(u.isFunction(A)) return u.grep(z, function(T, W) {
			return !!A.call(T, W, T) === H
		});
		else if(A.nodeType) return u.grep(z, function(T) {
			return T === A === H
		});
		else if(typeof A === "string") {
			var P = u.grep(z, function(T) {
				return T.nodeType === 1
			});
			if(V.test(A)) return u.filter(A, P, !H);
			else A = u.filter(A, P)
		}
		return u.grep(z, function(T) {
			return u.inArray(T, A) >= 0 === H
		})
	}
	function l(z, A) {
		var H = 0;
		A.each(function() {
			if(this.nodeName === (z[H] && z[H].nodeName)) {
				var P = u.data(z[H++]),
					T = u.data(this, P);
				if(P = P && P.events) {
					delete T.handle;
					T.events = {};
					for(var W in P) for(var ka in P[W]) u.event.add(this, W, P[W][ka], P[W][ka].data)
				}
			}
		})
	}
	function o(z, A) {
		A.src ? u.ajax({
			url: A.src,
			async: false,
			dataType: "script"
		}) : u.globalEval(A.text || A.textContent || A.innerHTML || "");
		A.parentNode && A.parentNode.removeChild(A)
	}
	function q(z, A, H) {
		var P = A === "width" ? z.offsetWidth : z.offsetHeight;
		if(H === "border") return P;
		u.each(A === "width" ? da : ba, function() {
			H || (P -= parseFloat(u.css(z, "padding" + this)) || 0);
			if(H === "margin") P += parseFloat(u.css(z, "margin" + this)) || 0;
			else P -= parseFloat(u.css(z, "border" + this + "Width")) || 0
		});
		return P
	}
	function v(z, A, H, P) {
		if(u.isArray(A) && A.length) u.each(A, function(T, W) {
			H || w.test(z) ? P(z, W) : v(z + "[" + (typeof W === "object" || u.isArray(W) ? T : "") + "]", W, H, P)
		});
		else if(!H && A != null && typeof A === "object") u.isEmptyObject(A) ? P(z, "") : u.each(A, function(T, W) {
			v(z + "[" + T + "]", W, H, P)
		});
		else P(z, A)
	}
	function x(z, A) {
		var H = {};
		u.each(xb.concat.apply([], xb.slice(0, A)), function() {
			H[this] = z
		});
		return H
	}
	function y(z) {
		if(!Ca[z]) {
			var A = u("<" + z + ">").appendTo("body"),
				H = A.css("display");
			A.remove();
			if(H === "none" || H === "") H = "block";
			Ca[z] = H
		}
		return Ca[z]
	}
	function D(z) {
		return u.isWindow(z) ? z : z.nodeType === 9 ? z.defaultView || z.parentWindow : false
	}
	var B = a.document,
		u = function() {
			function z() {
				if(!A.isReady) {
					try {
						B.documentElement.doScroll("left")
					} catch(ia) {
						setTimeout(z, 1);
						return
					}
					A.ready()
				}
			}
			var A = function(ia, Ha) {
					return new A.fn.init(ia, Ha)
				},
				H = a.jQuery,
				P = a.$,
				T, W = /^(?:[^<]*(<[\w\W]+>)[^>]*$|#([\w\-]+)$)/,
				ka = /\S/,
				ja = /^\s+/,
				wa = /\s+$/,
				Va = /\W/,
				Ga = /\d/,
				Ya = /^<(\w+)\s*\/?>(?:<\/\1>)?$/,
				hb = /^[\],:{}\s]*$/,
				tb = /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,
				Ta = /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,
				sb = /(?:^|:|,)(?:\s*\[)+/g,
				Ab = /(webkit)[ \/]([\w.]+)/,
				U = /(opera)(?:.*version)?[ \/]([\w.]+)/,
				ha = /(msie) ([\w.]+)/,
				va = /(mozilla)(?:.*? rv:([\w.]+))?/,
				ta = navigator.userAgent,
				Aa = false,
				Ba = [],
				Qa, Wa = Object.prototype.toString,
				mb = Object.prototype.hasOwnProperty,
				Bb = Array.prototype.push,
				Cb = Array.prototype.slice,
				Db = String.prototype.trim,
				jb = Array.prototype.indexOf,
				Hb = {};
			A.fn = A.prototype = {
				init: function(ia, Ha) {
					var Ra, Xa, rb;
					if(!ia) return this;
					if(ia.nodeType) {
						this.context = this[0] = ia;
						this.length = 1;
						return this
					}
					if(ia === "body" && !Ha && B.body) {
						this.context = B;
						this[0] = B.body;
						this.selector = "body";
						this.length = 1;
						return this
					}
					if(typeof ia === "string") if((Ra = W.exec(ia)) && (Ra[1] || !Ha)) if(Ra[1]) {
						rb = Ha ? Ha.ownerDocument || Ha : B;
						if(Xa = Ya.exec(ia)) if(A.isPlainObject(Ha)) {
							ia = [B.createElement(Xa[1])];
							A.fn.attr.call(ia, Ha, true)
						} else ia = [rb.createElement(Xa[1])];
						else {
							Xa = A.buildFragment([Ra[1]], [rb]);
							ia = (Xa.cacheable ? Xa.fragment.cloneNode(true) : Xa.fragment).childNodes
						}
						return A.merge(this, ia)
					} else {
						if((Xa = B.getElementById(Ra[2])) && Xa.parentNode) {
							if(Xa.id !== Ra[2]) return T.find(ia);
							this.length = 1;
							this[0] = Xa
						}
						this.context = B;
						this.selector = ia;
						return this
					} else if(!Ha && !Va.test(ia)) {
						this.selector = ia;
						this.context = B;
						ia = B.getElementsByTagName(ia);
						return A.merge(this, ia)
					} else return !Ha || Ha.jquery ? (Ha || T).find(ia) : A(Ha).find(ia);
					else if(A.isFunction(ia)) return T.ready(ia);
					if(ia.selector !== e) {
						this.selector = ia.selector;
						this.context = ia.context
					}
					return A.makeArray(ia, this)
				},
				selector: "",
				jquery: "1.7.1",
				length: 0,
				size: function() {
					return this.length
				},
				toArray: function() {
					return Cb.call(this, 0)
				},
				get: function(ia) {
					return ia == null ? this.toArray() : ia < 0 ? this.slice(ia)[0] : this[ia]
				},
				pushStack: function(ia, Ha, Ra) {
					var Xa = A();
					A.isArray(ia) ? Bb.apply(Xa, ia) : A.merge(Xa, ia);
					Xa.prevObject = this;
					Xa.context = this.context;
					if(Ha === "find") Xa.selector = this.selector + (this.selector ? " " : "") + Ra;
					else if(Ha) Xa.selector = this.selector + "." + Ha + "(" + Ra + ")";
					return Xa
				},
				each: function(ia, Ha) {
					return A.each(this, ia, Ha)
				},
				ready: function(ia) {
					A.bindReady();
					if(A.isReady) ia.call(B, A);
					else Ba && Ba.push(ia);
					return this
				},
				eq: function(ia) {
					return ia === -1 ? this.slice(ia) : this.slice(ia, +ia + 1)
				},
				first: function() {
					return this.eq(0)
				},
				last: function() {
					return this.eq(-1)
				},
				slice: function() {
					return this.pushStack(Cb.apply(this, arguments), "slice", Cb.call(arguments).join(","))
				},
				map: function(ia) {
					return this.pushStack(A.map(this, function(Ha, Ra) {
						return ia.call(Ha, Ra, Ha)
					}))
				},
				end: function() {
					return this.prevObject || A(null)
				},
				push: Bb,
				sort: [].sort,
				splice: [].splice
			};
			A.fn.init.prototype = A.fn;
			A.extend = A.fn.extend = function() {
				var ia, Ha, Ra, Xa, rb, pb = arguments[0] || {},
					yb = 1,
					Eb = arguments.length,
					Ib = false;
				if(typeof pb === "boolean") {
					Ib = pb;
					pb = arguments[1] || {};
					yb = 2
				}
				if(typeof pb !== "object" && !A.isFunction(pb)) pb = {};
				if(Eb === yb) {
					pb = this;
					--yb
				}
				for(; yb < Eb; yb++) if((ia = arguments[yb]) != null) for(Ha in ia) {
					Ra = pb[Ha];
					Xa = ia[Ha];
					if(pb !== Xa) if(Ib && Xa && (A.isPlainObject(Xa) || (rb = A.isArray(Xa)))) {
						if(rb) {
							rb = false;
							Ra = Ra && A.isArray(Ra) ? Ra : []
						} else Ra = Ra && A.isPlainObject(Ra) ? Ra : {};
						pb[Ha] = A.extend(Ib, Ra, Xa)
					} else if(Xa !== e) pb[Ha] = Xa
				}
				return pb
			};
			A.extend({
				noConflict: function(ia) {
					a.$ = P;
					if(ia) a.jQuery = H;
					return A
				},
				isReady: false,
				readyWait: 1,
				ready: function(ia) {
					ia === true && A.readyWait--;
					if(!A.readyWait || ia !== true && !A.isReady) {
						if(!B.body) return setTimeout(A.ready, 1);
						A.isReady = true;
						if(!(ia !== true && --A.readyWait > 0)) if(Ba) {
							var Ha = 0,
								Ra = Ba;
							for(Ba = null; ia = Ra[Ha++];) ia.call(B, A);
							A.fn.trigger && A(B).trigger("ready").unbind("ready")
						}
					}
				},
				bindReady: function() {
					if(!Aa) {
						Aa = true;
						if(B.readyState === "complete") return setTimeout(A.ready, 1);
						if(B.addEventListener) {
							B.addEventListener("DOMContentLoaded", Qa, false);
							a.addEventListener("load", A.ready, false)
						} else if(B.attachEvent) {
							B.attachEvent("onreadystatechange", Qa);
							a.attachEvent("onload", A.ready);
							var ia = false;
							try {
								ia = a.frameElement == null
							} catch(Ha) {}
							B.documentElement.doScroll && ia && z()
						}
					}
				},
				isFunction: function(ia) {
					return A.type(ia) === "function"
				},
				isArray: Array.isArray ||
				function(ia) {
					return A.type(ia) === "array"
				},
				isWindow: function(ia) {
					return ia && typeof ia === "object" && "setInterval" in ia
				},
				isNaN: function(ia) {
					return ia == null || !Ga.test(ia) || isNaN(ia)
				},
				type: function(ia) {
					return ia == null ? String(ia) : Hb[Wa.call(ia)] || "object"
				},
				isPlainObject: function(ia) {
					if(!ia || A.type(ia) !== "object" || ia.nodeType || A.isWindow(ia)) return false;
					if(ia.constructor && !mb.call(ia, "constructor") && !mb.call(ia.constructor.prototype, "isPrototypeOf")) return false;
					for(var Ha in ia);
					return Ha === e || mb.call(ia, Ha)
				},
				isEmptyObject: function(ia) {
					for(var Ha in ia) return false;
					return true
				},
				error: function(ia) {
					throw ia;
				},
				parseJSON: function(ia) {
					if(typeof ia !== "string" || !ia) return null;
					ia = A.trim(ia);
					if(hb.test(ia.replace(tb, "@").replace(Ta, "]").replace(sb, ""))) return a.JSON && a.JSON.parse ? a.JSON.parse(ia) : (new Function("return " + ia))();
					else A.error("Invalid JSON: " + ia)
				},
				noop: function() {},
				globalEval: function(ia) {
					if(ia && ka.test(ia)) {
						var Ha = B.getElementsByTagName("head")[0] || B.documentElement,
							Ra = B.createElement("script");
						Ra.type = "text/javascript";
						if(A.support.scriptEval) Ra.appendChild(B.createTextNode(ia));
						else Ra.text = ia;
					Ba.push(ia);
					return this
				},
				eq: function(ia) {
					return ia === -1 ? this.slice(ia) : this.slice(ia, +ia + 1)
				},
				first: function() {
					return this.eq(0)
				},
				last: function() {
					return this.eq(-1)
				},
				slice: function() {
					return this.pushStack(Cb.apply(this, arguments), "slice", Cb.call(arguments).join(","))
				},
				map: function(ia) {
					return this.pushStack(A.map(this, function(Ha, Ra) {
						return ia.call(Ha, Ra, Ha)
					}))
				},
				end: function() {
					return this.prevObject || A(null)
				},
				push: Bb,
				sort: [].sort,
				splice: [].splice
			};
			A.fn.init.prototype = A.fn;
			A.extend = A.fn.extend = function() {
				var ia, Ha, Ra, Xa, rb, pb = arguments[0] || {},
					yb = 1,
					Eb = arguments.length,
					Ib = false;
				if(typeof pb === "boolean") {
					Ib = pb;
					pb = arguments[1] || {};
					yb = 2
				}
				if(typeof pb !== "object" && !A.isFunction(pb)) pb = {};
				if(Eb === yb) {
					pb = this;
					--yb
				}
				for(; yb < Eb; yb++) if((ia = arguments[yb]) != null) for(Ha in ia) {
					Ra = pb[Ha];
					Xa = ia[Ha];
					if(pb !== Xa) if(Ib && Xa && (A.isPlainObject(Xa) || (rb = A.isArray(Xa)))) {
						if(rb) {
							rb = false;
							Ra = Ra && A.isArray(Ra) ? Ra : []
						} else Ra = Ra && A.isPlainObject(Ra) ? Ra : {};
						pb[Ha] = A.extend(Ib, Ra, Xa)
					} else if(Xa !== e) pb[Ha] = Xa
				}
				return pb
			};
			A.extend({
				noConflict: function(ia) {
					a.$ = P;
					if(ia) a.jQuery = H;
					return A
				},
				isReady: false,
				readyWait: 1,
				ready: function(ia) {
					ia === true && A.readyWait--;
					if(!A.readyWait || ia !== true && !A.isReady) {
						if(!B.body) return setTimeout(A.ready, 1);
						A.isReady = true;
						if(!(ia !== true && --A.readyWait > 0)) if(Ba) {
							var Ha = 0,
								Ra = Ba;
							for(Ba = null; ia = Ra[Ha++];) ia.call(B, A);
							A.fn.trigger && A(B).trigger("ready").unbind("ready")
						}
					}
				},
				bindReady: function() {
					if(!Aa) {
						Aa = true;
						if(B.readyState === "complete") return setTimeout(A.ready, 1);
						if(B.addEventListener) {
							B.addEventListener("DOMContentLoaded", Qa, false);
							a.addEventListener("load", A.ready, false)
						} else if(B.attachEvent) {
							B.attachEvent("onreadystatechange", Qa);
							a.attachEvent("onload", A.ready);
							var ia = false;
							try {
								ia = a.frameElement == null
							} catch(Ha) {}
							B.documentElement.doScroll && ia && z()
						}
					}
				},
				isFunction: function(ia) {
					return A.type(ia) === "function"
				},
				isArray: Array.isArray ||
				function(ia) {
					return A.type(ia) === "array"
				},
				isWindow: function(ia) {
					return ia && typeof ia === "object" && "setInterval" in ia
				},
				isNaN: function(ia) {
					return ia == null || !Ga.test(ia) || isNaN(ia)
				},
				type: function(ia) {
					return ia == null ? String(ia) : Hb[Wa.call(ia)] || "object"
				},
				isPlainObject: function(ia) {
					if(!ia || A.type(ia) !== "object" || ia.nodeType || A.isWindow(ia)) return false;
					if(ia.constructor && !mb.call(ia, "constructor") && !mb.call(ia.constructor.prototype, "isPrototypeOf")) return false;
					for(var Ha in ia);
					return Ha === e || mb.call(ia, Ha)
				},
				isEmptyObject: function(ia) {
					for(var Ha in ia) return false;
					return true
				},
				error: function(ia) {
					throw ia;
				},
				parseJSON: function(ia) {
					if(typeof ia !== "string" || !ia) return null;
					ia = A.trim(ia);
					if(hb.test(ia.replace(tb, "@").replace(Ta, "]").replace(sb, ""))) return a.JSON && a.JSON.parse ? a.JSON.parse(ia) : (new Function("return " + ia))();
					else A.error("Invalid JSON: " + ia)
				},
				noop: function() {},
				globalEval: function(ia) {
					if(ia && ka.test(ia)) {
						var Ha = B.getElementsByTagName("head")[0] || B.documentElement,
							Ra = B.createElement("script");
						Ra.type = "text/javascript";
						if(A.support.scriptEval) Ra.appendChild(B.createTextNode(ia));
						else Ra.text = ia;
					script" + u.now();
		H.style.display = "none";
		H.innerHTML = "   <link/><table></table><a href='/a' style='color:red;float:left;opacity:.55;'>a</a><input type='checkbox'/>";
		var T = H.getElementsByTagName("*"),
			W = H.getElementsByTagName("a")[0],
			ka = B.createElement("select"),
			ja = ka.appendChild(B.createElement("option"));
		if(!(!T || !T.length || !W)) {
			u.support = {
				leadingWhitespace: H.firstChild.nodeType === 3,
				tbody: !H.getElementsByTagName("tbody").length,
				htmlSerialize: !! H.getElementsByTagName("link").length,
				style: /red/.test(W.getAttribute("style")),
				hrefNormalized: W.getAttribute("href") === "/a",
				opacity: /^0.55$/.test(W.style.opacity),
				cssFloat: !! W.style.cssFloat,
				checkOn: H.getElementsByTagName("input")[0].value === "on",
				optSelected: ja.selected,
				deleteExpando: true,
				optDisabled: false,
				checkClone: false,
				scriptEval: false,
				noCloneEvent: true,
				boxModel: null,
				inlineBlockNeedsLayout: false,
				shrinkWrapBlocks: false,
				reliableHiddenOffsets: true
			};
			ka.disabled = true;
			u.support.optDisabled = !ja.disabled;
			A.type = "text/javascript";
			try {
				A.appendChild(B.createTextNode("window." + P + "=1;"))
			} catch(wa) {}
			z.insertBefore(A, z.firstChild);
			if(a[P]) {
				u.support.scriptEval = true;
				delete a[P]
			}
			try {
				delete A.test
			} catch(Va) {
				u.support.deleteExpando = false
			}
			z.removeChild(A);
			if(H.attachEvent && H.fireEvent) {
				H.attachEvent("onclick", function Ga() {
					u.support.noCloneEvent = false;
					H.detachEvent("onclick", Ga)
				});
				H.cloneNode(true).fireEvent("onclick")
			}
			H = B.createElement("div");
			H.innerHTML = "<input type='radio' name='radiotest' checked='checked'/>";
			z = B.createDocumentFragment();
			z.appendChild(H.firstChild);
			u.support.checkClone = z.cloneNode(true).cloneNode(true).lastChild.checked;
			u(function() {
				var Ga = B.createElement("div");
				Ga.style.width = Ga.style.paddingLeft = "1px";
				B.body.appendChild(Ga);
				u.boxModel = u.support.boxModel = Ga.offsetWidth === 2;
				if("zoom" in Ga.style) {
					Ga.style.display = "inline";
					Ga.style.zoom = 1;
					u.support.inlineBlockNeedsLayout = Ga.offsetWidth === 2;
					Ga.style.display = "";
					Ga.innerHTML = "<div style='width:4px;'></div>";
					u.support.shrinkWrapBlocks = Ga.offsetWidth !== 2
				}
				Ga.innerHTML = "<table><tr><td style='padding:0;display:none'></td><td>t</td></tr></table>";
				var Ya = Ga.getElementsByTagName("td");
				u.support.reliableHiddenOffsets = Ya[0].offsetHeight === 0;
				Ya[0].style.display = "";
				Ya[1].style.display = "none";
				u.support.reliableHiddenOffsets = u.support.reliableHiddenOffsets && Ya[0].offsetHeight === 0;
				Ga.innerHTML = "";
				B.body.removeChild(Ga).style.display = "none"
			});
			z = function(Ga) {
				var Ya = B.createElement("div");
				Ga = "on" + Ga;
				var hb = Ga in Ya;
				if(!hb) {
					Ya.setAttribute(Ga, "return;");
					hb = typeof Ya[Ga] === "function"
				}
				return hb
			};
			u.support.submitBubbles = z("submit");
			u.support.changeBubbles = z("change");
			z = A = H = T = W = null
		}
	})();
	var F = {},
		I = /^(?:\{.*\}|\[.*\])$/;
	u.extend({
		cache: {},
		uuid: 0,
		expando: "jQuery" + u.now(),
		noData: {
			embed: true,
			object: "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",
			applet: true
		},
		data: function(z, A, H) {
			if(u.acceptData(z)) {
				z = z == a ? F : z;
				var P = z.nodeType,
					T = P ? z[u.expando] : null,
					W = u.cache;
				if(!(P && !T && typeof A === "string" && H === e)) {
					if(P) T || (z[u.expando] = T = ++u.uuid);
					else W = z;
					if(typeof A === "object") if(P) W[T] = u.extend(W[T], A);
					else u.extend(W, A);
					else if(P && !W[T]) W[T] = {};
					z = P ? W[T] : W;
					if(H !== e) z[A] = H;
					return typeof A === "string" ? z[A] : z
				}
			}
		},
		removeData: function(z, A) {
			if(u.acceptData(z)) {
				z = z == a ? F : z;
				var H = z.nodeType,
					P = H ? z[u.expando] : z,
					T = u.cache,
					W = H ? T[P] : P;
				if(A) {
					if(W) {
						delete W[A];
						H && u.isEmptyObject(W) && u.removeData(z)
					}
				} else if(H && u.support.deleteExpando) delete z[u.expando];
				else if(z.removeAttribute) z.removeAttribute(u.expando);
				else if(H) delete T[P];
				else for(var ka in z) delete z[ka]
			}
		},
		acceptData: function(z) {
			if(z.nodeName) {
				var A = u.noData[z.nodeName.toLowerCase()];
				if(A) return !(A === true || z.getAttribute("classid") !== A)
			}
			return true
		}
	});
	u.fn.extend({
		data: function(z, A) {
			var H = null;
			if(typeof z === "undefined") {
				if(this.length) {
					var P = this[0].attributes,
						T;
					H = u.data(this[0]);
					for(var W = 0, ka = P.length; W < ka; W++) {
						T = P[W].name;
						if(T.indexOf("data-") === 0) {
							T = T.substr(5);
							g(this[0], T, H[T])
						}
					}
				}
				return H
			} else if(typeof z === "object") return this.each(function() {
				u.data(this, z)
			});
			var ja = z.split(".");
			ja[1] = ja[1] ? "." + ja[1] : "";
			if(A === e) {
				H = this.triggerHandler("getData" + ja[1] + "!", [ja[0]]);
				if(H === e && this.length) {
					H = u.data(this[0], z);
					H = g(this[0], z, H)
				}
				return H === e && ja[1] ? this.data(ja[0]) : H
			} else return this.each(function() {
				var wa = u(this),
					Va = [ja[0], A];
				wa.triggerHandler("setData" + ja[1] + "!", Va);
				u.data(this, z, A);
				wa.triggerHandler("changeData" + ja[1] + "!", Va)
			})
		},
		removeData: function(z) {
			return this.each(function() {
				u.removeData(this, z)
			})
		}
	});
	u.extend({
		queue: function(z, A, H) {
			if(z) {
				A = (A || "fx") + "queue";
				var P = u.data(z, A);
				if(!H) return P || [];
				if(!P || u.isArray(H)) P = u.data(z, A, u.makeArray(H));
				else P.push(H);
				return P
			}
		},
		dequeue: function(z, A) {
			A = A || "fx";
			var H = u.queue(z, A),
				P = H.shift();
			if(P === "inprogress") P = H.shift();
			if(P) {
				A === "fx" && H.unshift("inprogress");
				P.call(z, function() {
					u.dequeue(z, A)
				})
			}
		}
	});
	u.fn.extend({
		queue: function(z, A) {
			if(typeof z !== "string") {
				A = z;
				z = "fx"
			}
			if(A === e) return u.queue(this[0], z);
			return this.each(function() {
				var H = u.queue(this, z, A);
				z === "fx" && H[0] !== "inprogress" && u.dequeue(this, z)
			})
		},
		dequeue: function(z) {
			return this.each(function() {
				u.dequeue(this, z)
			})
		},
		delay: function(z, A) {
			z = u.fx ? u.fx.speeds[z] || z : z;
			A = A || "fx";
			return this.queue(A, function() {
				var H = this;
				setTimeout(function() {
					u.dequeue(H, A)
				}, z)
			})
		},
		clearQueue: function(z) {
			return this.queue(z || "fx", [])
		}
	});
	var C = /[\n\t]/g,
		M = /\s+/,
		Q = /\r/g,
		N = /^(?:href|src|style)$/,
		X = /^(?:button|input)$/i,
		ma = /^(?:button|input|object|select|textarea)$/i,
		pa = /^a(?:rea)?$/i,
		Ma = /^(?:radio|checkbox)$/i;
	u.props = {
		"for": "htmlFor",
		"class": "className",
		readonly: "readOnly",
		maxlength: "maxLength",
		cellspacing: "cellSpacing",
		rowspan: "rowSpan",
		colspan: "colSpan",
		tabindex: "tabIndex",
		usemap: "useMap",
		frameborder: "frameBorder"
	};
	u.fn.extend({
		attr: function(z, A) {
			return u.access(this, z, A, true, u.attr)
		},
		removeAttr: function(z) {
			return this.each(function() {
				u.attr(this, z, "");
				this.nodeType === 1 && this.removeAttribute(z)
			})
		},
		addClass: function(z) {
			if(u.isFunction(z)) return this.each(function(Va) {
				var Ga = u(this);
				Ga.addClass(z.call(this, Va, Ga.attr("class")))
			});
			if(z && typeof z === "string") for(var A = (z || "").split(M), H = 0, P = this.length; H < P; H++) {
				var T = this[H];
				if(T.nodeType === 1) if(T.className) {
					for(var W = " " + T.className + " ", ka = T.className, ja = 0, wa = A.length; ja < wa; ja++) if(W.indexOf(" " + A[ja] + " ") < 0) ka += " " + A[ja];
					T.className = u.trim(ka)
				} else T.className = z
			}
			return this
		},
		removeClass: function(z) {
			if(u.isFunction(z)) return this.each(function(wa) {
				 : P;
				if(A) {
					if(W) {
						delete W[A];
						H && u.isEmptyObject(W) && u.removeData(z)
					}
				} else if(H && u.support.deleteExpando) delete z[u.expando];
				else if(z.removeAttribute) z.removeAttribute(u.expando);
				else if(H) delete T[P];
				else for(var ka in z) delete z[ka]
			}
		},
		acceptData: function(z) {
			if(z.nodeName) {
				var A = u.noData[z.nodeName.toLowerCase()];
				if(A) return !(A === true || z.getAttribute("classid") !== A)
			}
			return true
		}
	});
	u.fn.extend({
		data: function(z, A) {
			var H = null;
			if(typeof z === "undefined") {
				if(this.length) {
					var P = this[0].attributes,
						T;
					H = u.data(this[0]);
					for(var W = 0, ka = P.length; W < ka; W++) {
						T = P[W].name;
						if(T.indexOf("data-") === 0) {
							T = T.substr(5);
							g(this[0], T, H[T])
						}
					}
				}
				return H
			} else if(typeof z === "object") return this.each(function() {
				u.data(this, z)
			});
			var ja = z.split(".");
			ja[1] = ja[1] ? "." + ja[1] : "";
			if(A === e) {
				H = this.triggerHandler("getData" + ja[1] + "!", [ja[0]]);
				if(H === e && this.length) {
					H = u.data(this[0], z);
					H = g(this[0], z, H)
				}
				return H === e && ja[1] ? this.data(ja[0]) : H
			} else return this.each(function() {
				var wa = u(this),
					Va = [ja[0], A];
				wa.triggerHandler("setData" + ja[1] + "!", Va);
				u.data(this, z, A);
				wa.triggerHandler("changeData" + ja[1] + "!", Va)
			})
		},
		removeData: function(z) {
			return this.each(function() {
				u.removeData(this, z)
			})
		}
	});
	u.extend({
		queue: function(z, A, H) {
			if(z) {
				A = (A || "fx") + "queue";
				var P = u.data(z, A);
				if(!H) return P || [];
				if(!P || u.isArray(H)) P = u.data(z, A, u.makeArray(H));
				else P.push(H);
				return P
			}
		},
		dequeue: function(z, A) {
			A = A || "fx";
			var H = u.queue(z, A),
				P = H.shift();
			if(P === "inprogress") P = H.shift();
			if(P) {
				A === "fx" && H.unshift("inprogress");
				P.call(z, function() {
					u.dequeue(z, A)
				})
			}
		}
	});
	u.fn.extend({
		queue: function(z, A) {
			if(typeof z !== "string") {
				A = z;
				z = "fx"
			}
			if(A === e) return u.queue(this[0], z);
			return this.each(function() {
				var H = u.queue(this, z, A);
				z === "fx" && H[0] !== "inprogress" && u.dequeue(this, z)
			})
		},
		dequeue: function(z) {
			return this.each(function() {
				u.dequeue(this, z)
			})
		},
		delay: function(z, A) {
			z = u.fx ? u.fx.speeds[z] || z : z;
			A = A || "fx";
			return this.queue(A, function() {
				var H = this;
				setTimeout(function() {
					u.dequeue(H, A)
				}, z)
			})
		},
		clearQueue: function(z) {
			return this.queue(z || "fx", [])
		}
	});
	var C = /[\n\t]/g,
		M = /\s+/,
		Q = /\r/g,
		N = /^(?:href|src|style)$/,
		X = /^(?:button|input)$/i,
		ma = /^(?:button|input|object|select|textarea)$/i,
		pa = /^a(?:rea)?$/i,
		Ma = /^(?:radio|checkbox)$/i;
	u.props = {
		"for": "htmlFor",
		"class": "className",
		readonly: "readOnly",
		maxlength: "maxLength",
		cellspacing: "cellSpacing",
		rowspan: "rowSpan",
		colspan: "colSpan",
		tabindex: "tabIndex",
		usemap: "useMap",
		frameborder: "frameBorder"
	};
	u.fn.extend({
		attr: function(z, A) {
			return u.access(this, z, A, true, u.attr)
		},
		removeAttr: function(z) {
			return this.each(function() {
				u.attr(this, z, "");
				this.nodeType === 1 && this.removeAttribute(z)
			})
		},
		addClass: function(z) {
			if(u.isFunction(z)) return this.each(function(Va) {
				var Ga = u(this);
				Ga.addClass(z.call(this, Va, Ga.attr("class")))
			});
			if(z && typeof z === "string") for(var A = (z || "").split(M), H = 0, P = this.length; H < P; H++) {
				var T = this[H];
				if(T.nodeType === 1) if(T.className) {
					for(var W = " " + T.className + " ", ka = T.className, ja = 0, wa = A.length; ja < wa; ja++) if(W.indexOf(" " + A[ja] + " ") < 0) ka += " " + A[ja];
					T.className = u.trim(ka)
				} else T.className = z
			}
			return this
		},
		removeClass: function(z) {
			if(u.isFunction(z)) return this.each(function(wa) {
				var Va = u(this);
				Va.removeClass(z.call(this, wa, Va.attr("class")))
			});
			if(z && typeof z === "string" || z === e) for(var A = (z || "").split(M), H = 0, P = this.length; H < P; H++) {
				var T = this[H];
				if(T.nodeType === 1 && T.className) if(z) {
					for(var W = (" " + T.className + " ").replace(C, " "), ka = 0, ja = A.length; ka < ja; ka++) W = W.replace(" " + A[ka] + " ", " ");
					T.className = u.trim(W)
				} else T.className = ""
			}
			return this
		},
		toggleClass: function(z, A) {
			var H = typeof z,
				P = typeof A === "boolean";
			if(u.isFunction(z)) return this.each(function(T) {
				var W = u(this);
				W.toggleClass(z.call(this, T, W.attr("class"), A), A)
			});
			return this.each(function() {
				if(H === "string") for(var T, W = 0, ka = u(this), ja = A, wa = z.split(M); T = wa[W++];) {
					ja = P ? ja : !ka.hasClass(T);
					ka[ja ? "addClass" : "removeClass"](T)
				} else if(H === "undefined" || H === "boolean") {
					this.className && u.data(this, "__className__", this.className);
					this.className = this.className || z === false ? "" : u.data(this, "__className__") || ""
				}
			})
		},
		hasClass: function(z) {
			z = " " + z + " ";
			for(var A = 0, H = this.length; A < H; A++) if((" " + this[A].className + " ").replace(C, " ").indexOf(z) > -1) return true;
			return false
		},
		val: function(z) {
			if(!arguments.length) {
				var A = this[0];
				if(A) {
					if(u.nodeName(A, "option")) {
						var H = A.attributes.value;
						return !H || H.specified ? A.value : A.text
					}
					if(u.nodeName(A, "select")) {
						var P = A.selectedIndex;
						H = [];
						var T = A.options;
						A = A.type === "select-one";
						if(P < 0) return null;
						var W = A ? P : 0;
						for(P = A ? P + 1 : T.length; W < P; W++) {
							var ka = T[W];
							if(ka.selected && (u.support.optDisabled ? !ka.disabled : ka.getAttribute("disabled") === null) && (!ka.parentNode.disabled || !u.nodeName(ka.parentNode, "optgroup"))) {
								z = u(ka).val();
								if(A) return z;
								H.push(z)
							}
						}
						return H
					}
					if(Ma.test(A.type) && !u.support.checkOn) return A.getAttribute("value") === null ? "on" : A.value;
					return(A.value || "").replace(Q, "")
				}
				return e
			}
			var ja = u.isFunction(z);
			return this.each(function(wa) {
				var Va = u(this),
					Ga = z;
				if(this.nodeType === 1) {
					if(ja) Ga = z.call(this, wa, Va.val());
					if(Ga == null) Ga = "";
					else if(typeof Ga === "number") Ga += "";
					else if(u.isArray(Ga)) Ga = u.map(Ga, function(hb) {
						return hb == null ? "" : hb + ""
					});
					if(u.isArray(Ga) && Ma.test(this.type)) this.checked = u.inArray(Va.val(), Ga) >= 0;
					else if(u.nodeName(this, "select")) {
						var Ya = u.makeArray(Ga);
						u("option", this).each(function() {
							this.selected = u.inArray(u(this).val(), Ya) >= 0
						});
						if(!Ya.length) this.selectedIndex = -1
					} else this.value = Ga
				}
			})
		}
	});
	u.extend({
		attrFn: {
			val: true,
			css: true,
			html: true,
			text: true,
			data: true,
			width: true,
			height: true,
			offset: true
		},
		attr: function(z, A, H, P) {
			if(!z || z.nodeType === 3 || z.nodeType === 8) return e;
			if(P && A in u.attrFn) return u(z)[A](H);
			P = z.nodeType !== 1 || !u.isXMLDoc(z);
			var T = H !== e;
			A = P && u.props[A] || A;
			var W = N.test(A);
			if((A in z || z[A] !== e) && P && !W) {
				if(T) {
					A === "type" && X.test(z.nodeName) && z.parentNode && u.error("type property can't be changed");
					if(H === null) z.nodeType === 1 && z.removeAttribute(A);
					else z[A] = H
				}
				if(u.nodeName(z, "form") && z.getAttributeNode(A)) return z.getAttributeNode(A).nodeValue;
				if(A === "tabIndex") return(A = z.getAttributeNode("tabIndex")) && A.specified ? A.value : ma.test(z.nodeName) || pa.test(z.nodeName) && z.href ? 0 : e;
				return z[A]
			}
			if(!u.support.style && P && A === "style") {
				if(T) z.style.cssText = "" + H;
				return z.style.cssText
			}
			T && z.setAttribute(A, "" + H);
			if(!z.attributes[A] && z.hasAttribute && !z.hasAttribute(A)) return e;
			z = !u.support.hrefNormalized && P && W ? z.getAttribute(A, 2) : z.getAttribute(A);
			return z === null ? e : z
		}
	});
	var oa = /\.(.*)$/,
		Ka = /^(?:textarea|input|select)$/i,
		Za = /\./g,
		eb = / /g,
		ib = /[^\w\s.|`]/g,
		Ea = function(z) {
			return z.replace(ib, "\\$&")
		},
		cb = {
			focusin: 0,
			focusout: 0
		};
	u.event = {
		add: function(z, A, H, P) {
			if(!(z.nodeType === 3 || z.nodeType === 8)) {
				if(u.isWindow(z) && z !== a && !z.frameElement) z = a;
				if(H === false) H = c;
				else if(!H) return;
				var T, W;
				if(H.handler) {
					T = H;
					H = T.handler
				}
				if(!H.guid) H.guid = u.guid++;
				if(W = u.data(z)) {
					var ka = z.nodeType ? "events" : "__events__",
						ja = W[ka],
						wa = W.handle;
					if(typeof ja === "function") {
						wa = ja.handle;
						ja = ja.events
					} else if(!ja) {
						z.nodeType || (W[ka] = W = function() {});
						W.events = ja = {}
					}
					if(!wa) W.handle = wa = function() {
						return typeof u !== "undefined" && !u.event.triggered ? u.event.handle.apply(wa.elem, arguments) : e
					};
					wa.elem = z;
					A = A.split(" ");
					for(var Va = 0, Ga; ka = A[Va++];) {
						W = T ? u.extend({}, T) : {
							handler: H,
							data: P
						};
						if(ka.indexOf(".") > -1) {
							Ga = ka.split(".");
							ka = Ga.shift();
							W.namespace = Ga.slice(0).sort().join(".")
						} else {
							Ga = [];
							W.namespace = ""
						}
						W.type = ka;
						if(!W.guid) W.guid = H.guid;
						var Ya = ja[ka],
							hb = u.event.special[ka] || {};
						if(!Ya) {
							Ya = ja[ka] = [];
							if(!hb.setup || hb.setup.call(z, P, Ga, wa) === false) if(z.addEventListener) z.addEventListener(ka, wa, false);
							else z.attachEvent && z.attachEvent("on" + ka, wa)
						}
						if(hb.add) {
							hb.add.call(z, W);
							if(!W.handler.guid) W.handler.guid = H.guid
						}
						Ya.push(W);
						u.event.global[ka] = true
					}
					z = null
				}
			}
		},
		global: {},
		remove: function(z, A, H, P) {
			if(!(z.nodeType === 3 || z.nodeType === 8)) {
				if(H === false) H = c;
				var T, W, ka = 0,
					ja, wa, Va, Ga, Ya, hb, tb = z.nodeType ? "events" : "__events__",
					Ta = u.data(z),
					sb = Ta && Ta[tb];
				if(Ta && sb) {
					if(typeof sb === "function") {
						Ta = sb;
						sb = sb.events
					}
					if(A && A.type) {
						H = A.handler;
						A = A.type
					}
					if(!A || typeof A === "string" && A.charAt(0) === ".") {
						A = A || "";
						for(T in sb) u.event.remove(z, T + A)
					} else {
						for(A = A.split(" "); T = A[ka++];) {
							Ga = T;
							ja = T.indexOf(".") < 0;
							wa = [];
							if(!ja) {
								wa = T.split(".");
								T = wa.shift();
								Va = RegExp("(^|\\.)" + u.map(wa.slice(0).sort(), Ea).join("\\.(?:.*\\.)?") + "(\\.|$)")
							}
							if(Ya = sb[T]) if(H) {
								Ga = u.event.special[T] || {};
								for(W = P || 0; W < Ya.length; W++) {
									hb = Ya[W];
									if(H.guid === hb.guid) {
										if(ja || Va.test(hb.namespace)) {
											P == null && Ya.splice(W--, 1);
											Ga.remove && Ga.remove.call(z, hb)
										}
										if(P != null) break
									}
								}
								if(Ya.length === 0 || P != null && Ya.length === 1) {
									if(!Ga.teardown || Ga.teardown.call(z, wa) === false) u.removeEvent(z, T, Ta.handle);
									delete sb[T]
								}
							} else for(W = 0; W < Ya.length; W++) {
								hb = Ya[W];
								if(ja || Va.test(hb.namespace)) {
									u.event.remove(z, Ga, hb.handler, W);
									Ya.splice(W--, 1)
								}
							}
						}
						if(u.isEmptyObject(sb)) {
							if(A = Ta.handle) A.elem = null;
							delete Ta.events;
							delete Ta.handle;
							if(typeof Ta === "function") u.removeData(z, tb);
							else u.isEmptyObject(Ta) && u.removeData(z)
						}
					}
				}
			}
		},
		trigger: function(z, A, H, P) {
			var T = z.type || z;
			if(!P) {
				z = typeof z === "object" ? z[u.expando] ? z : u.extend(u.Event(T), z) : u.Event(T);
				if(T.indexOf("!") >= 0 j(z.origType, z.selector), z)
				}
			},
			beforeunload: {
				setup: function(z, A, H) {
					if(u.isWindow(this)) this.onbeforeunload = H
				},
				teardown: function(z, A) {
					if(this.onbeforeunload === A) this.onbeforeunload = null
				}
			}
		}
	};
	u.removeEvent = B.removeEventListener ?
	function(z, A, H) {
		z.removeEventListener && z.removeEventListener(A, H, false)
	} : function(z, A, H) {
		z.detachEvent && z.detachEvent("on" + A, H)
	};
	u.Event = function(z) {
		if(!this.preventDefault) return new u.Event(z);
		if(z && z.type) {
			this.originalEvent = z;
			this.type = z.type
		} else this.type = z;
		this.timeStamp = u.now();
		this[u.expando] = true
	};
	u.Event.prototype = {
		preventDefault: function() {
			this.isDefaultPrevented = d;
			var z = this.originalEvent;
			if(z) if(z.preventDefault) z.preventDefault();
			else z.returnValue = false
		},
		stopPropagation: function() {
			this.isPropagationStopped = d;
			var z = this.originalEvent;
			if(z) {
				z.stopPropagation && z.stopPropagation();
				z.cancelBubble = true
			}
		},
		stopImmediatePropagation: function() {
			this.isImmediatePropagationStopped = d;
			this.stopPropagation()
		},
		isDefaultPrevented: c,
		isPropagationStopped: c,
		isImmediatePropagationStopped: c
	};
	var db = function(z) {
			var A = z.relatedTarget;
			try {
				for(; A && A !== this;) A = A.parentNode;
				if(A !== this) {
					z.type = z.data;
					u.event.handle.apply(this, arguments)
				}
			} catch(H) {}
		},
		$a = function(z) {
			z.type = z.data;
			u.event.handle.apply(this, arguments)
		};
	u.each({
		mouseenter: "mouseover",
		mouseleave: "mouseout"
	}, function(z, A) {
		u.event.special[z] = {
			setup: function(H) {
				u.event.add(this, A, H && H.selector ? $a : db, z)
			},
			teardown: function(H) {
				u.event.remove(this, A, H && H.selector ? $a : db)
			}
		}
	});
	if(!u.support.submitBubbles) u.event.special.submit = {
		setup: function() {
			if(this.nodeName.toLowerCase() !== "form") {
				u.event.add(this, "click.specialSubmit", function(z) {
					var A = z.target,
						H = A.type;
					if((H === "submit" || H === "image") && u(A).closest("form").length) {
						z.liveFired = e;
						return b("submit", this, arguments)
					}
				});
				u.event.add(this, "keypress.specialSubmit", function(z) {
					var A = z.target,
						H = A.type;
					if((H === "text" || H === "password") && u(A).closest("form").length && z.keyCode === 13) {
						z.liveFired = e;
						return b("submit", this, arguments)
					}
				})
			} else return false
		},
		teardown: function() {
			u.event.remove(this, ".specialSubmit")
		}
	};
	if(!u.support.changeBubbles) {
		var qb, wb = function(z) {
				var A = z.type,
					H = z.value;
				if(A === "radio" || A === "checkbox") H = z.checked;
				else if(A === "select-multiple") H = z.selectedIndex > -1 ? u.map(z.options, function(P) {
					return P.selected
				}).join("-") : "";
				else if(z.nodeName.toLowerCase() === "select") H = z.selectedIndex;
				return H
			},
			Oa = function(z, A) {
				var H = z.target,
					P, T;
				if(!(!Ka.test(H.nodeName) || H.readOnly)) {
					P = u.data(H, "_change_data");
					T = wb(H);
					if(z.type !== "focusout" || H.type !== "radio") u.data(H, "_change_data", T);
					if(!(P === e || T === P)) if(P != null || T) {
						z.type = "change";
						z.liveFired = e;
						return u.event.trigger(z, A, H)
					}
				}
			};
		u.event.special.change = {
			filters: {
				focusout: Oa,
				beforedeactivate: Oa,
				click: function(z) {
					var A = z.target,
						H = A.type;
					if(H === "radio" || H === "checkbox" || A.nodeName.toLowerCase() === "select") return Oa.call(this, z)
				},
				keydown: function(z) {
					var A = z.target,
						H = A.type;
					if(z.keyCode === 13 && A.nodeName.toLowerCase() !== "textarea" || z.keyCode === 32 && (H === "checkbox" || H === "radio") || H === "select-multiple") return Oa.call(this, z)
				},
				beforeactivate: function(z) {
					z = z.target;
					u.data(z, "_change_data", wb(z))
				}
			},
			setup: function() {
				if(this.type === "file") return false;
				for(var z in qb) u.event.add(this, z + ".specialChange", qb[z]);
				return Ka.test(this.nodeName)
			},
			teardown: function() {
				u.event.remove(this, ".specialChange");
				return Ka.test(this.nodeName)
			}
		};
		qb = u.event.special.change.filters;
		qb.focus = qb.beforeactivate
	}
	B.addEventListener && u.each({
		focus: "focusin",
		blur: "focusout"
	}, function(z, A) {
		function H(P) {
			P = u.event.fix(P);
			P.type = A;
			return u.event.trigger(P, null, P.target)
		}
		u.event.special[A] = {
			setup: function() {
				cb[A]++ === 0 && B.addEventListener(z, H, true)
			},
			teardown: function() {
				--cb[A] === 0 && B.removeEventListener(z, H, true)
			}
		}
	});
	u.each(["bind", "one"], function(z, A) {
		u.fn[A] = function(H, P, T) {
			if(typeof H === "object") {
				for(var W in H) this[A](W, P, H[W], T);
				return this
			}
			if(u.isFunction(P) || P === false) {
				T = P;
				P = e
			}
			var ka = A === "one" ? u.proxy(T, function(wa) {
				u(this).unbind(wa, ka);
				return T.apply(this, arguments)
			}) : T;
			if(H === "unload" && A !== "one") this.one(H, P, T);
			else {
				W = 0;
				for(var ja = this.length; W < ja; W++) u.event.add(this[W], H, ka, P)
			}
			return this
		}
	});
	u.fn.extend({
		unbind: function(z, A) {
			if(typeof z === "object" && !z.preventDefault) for(var H in z) this.unbind(H, z[H]);
			else {
				H = 0;
				for(var P = this.length; H < P; H++) u.event.remove(this[H], z, A)
			}
			return this
		},
		delegate: function(z, A, H, P) {
			return this.live(A, H, P, z)
		},
		undelegate: function(z, A, H) {
			return arguments.length === 0 ? this.unbind("live") : this.die(A, null, H, z)
		},
		trigger: function(z, A) {
			return this.each(function() {
				u.event.trigger(z, A, this)
			})
		},
		triggerHandler: function(z, A) {
			if(this[0]) {
				var H = u.Event(z);
				H.preventDefault();
				H.stopPropagation();
				u.event.trigger(H, A, this[0]);
				return H.result
			}
		},
		toggle: function(z) {
			for(var A = arguments, H = 1; H < A.length;) u.proxy(z, A[H++]);
			return this.click(u.proxy(z, function(P) {
				var T = (u.data(this, "lastToggle" + z.guid) || 0) % H;
				u.data(this, "lastToggle" + z.guid, T + 1);
				P.preventDefault();
				return A[T].apply(this, arguments) || false
			}))
		},
		hover: function(z, A) {
			return this.mouseenter(z).mouseleave(A || z)
		}
	});
	var O = {
		focus: "focusin",
		blur: "focusout",
		mouseenter: "mouseover",
		mouseleave: "mouseout"
	};
	u.each(["live", "die"], function(z, A) {
		u.fn[A] = function(H, P, T, W) {
			var ka, ja = 0,
				wa, Va, Ga = W || this.selector;
			W = W ? this : u(this.context);
			if(typeof H === "object" && !H.preventDefault) {
				for(ka in H) W[A](ka, P, H[ka], Ga);
				return this
			}
			if(u.isFunction(P)) {
				T = P;
				P = e
			}
			for(H = (H || "").split(" ");
			(ka = H[ja++]) != null;) {
				wa = oa.exec(ka);
				Va = "";
				if(wa) {
					Va = wa[0];
					ka = ka.replace(oa, "")
				}
				if(ka === "hover") H.push("mouseenter" + Va, "mouseleave" + Va);
				else {
					wa = ka;
					if(ka === "focus" || ka === "blur") {
						H.push(O[ka] + Va);
						ka += Va
					} else ka = (O[ka] || ka) + Va;
					if(A === "live") {
						Va = 0;
						for(var Ya = W.length; Va < Ya; Va++) u.event.add(W[Va], "live." + j(ka, Ga), {
							data: P,
							selector: Ga,
							handler: T,
							origType: ka,
							origHandler: T,
							preType: wa
						})
					} else W.unbind("live." + j(ka, Ga), T)
				}
			}
			return this
		}
	});
	u.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error".split(" "), function(z, A) {
		u.fn[A] = function(H, P) {
			if(P == null) {
				P = H;
				H = null
			}
			return arguments.length > 0 ? this.bind(A, H, P) : this.trigger(A)
		};
		if(u.attrFn) u.attrFn[A] = true
	});
	a.attachEvent && !a.addEventListener && u(a).bind("unload", function() {
		for(var z in u.cache) if(u.cache[z].handle) try {
			u.event.remove(u.cache[z].handle.elem)
		} catch(A) {}
	});
	(function() {
		function z(U, ha, va, ta, Aa, Ba) {
			Aa = 0;
			for(var Qa = ta.length; Aa < Qa; Aa++) {
				var Wa = ta[Aa];
				if(Wa) {
					var mb = false;
					for(Wa = Wa[U]; Wa;) {
						if(Wa.sizcache === va) {
							mb = ta[Wa.sizset];
							break
						}
						if(Wa.nodeType === 1 && !Ba) {
							Wa.sizcache = va;
							Wa.sizset = Aa
						}
						if(Wa.nodeName.toLowerCase() === ha) {
							mb = Wa;
							break
						}
						Wa = Wa[U]
					}
					ta[Aa] = mb
				}
			}
		}
		function A(U, ha, va, ta, Aa, Ba) {
			Aa = 0;
			for(var Qa = ta.length; Aa < Qa; Aa++) {
				var Wa = ta[Aa];
				if(Wa) {
					var mb = false;
					for(Wa = Wa[U]; Wa;) {
						if(Wa.sizcache === va) {
							mb = ta[Wa.sizset];
							break
						}
						if(Wa.nodeType === 1) {
							if(!Ba) {
								Wa.sizcache = va;
								Wa.sizset = Aa
							}
							if(typeof ha !== "string") {
								if(Wa === ha) {
									mb = true;
									break
								}
							} else if(ja.filter(ha, [Wa]).length > 0) {
								mb = Wa;
								break
							}
						}
						Wa = Wa[U]
					}
					ta[Aa] = mb
				}
			}
		}
		var H = /((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,
			P = 0,
			T = Object.prototype.toString,
			W = false,
			ka = true;
		[0, 0].sort(function() {
			ka = false;
			return 0
		});
		var ja = function(U, ha, va, ta) {
				va = va || [];
				var Aa = ha = ha || B;
				if(ha.nodeType !== 1 && ha.nodeType !== 9) return [];
				if(!U || typeof U !== "string") return va;
				var Ba, Qa, Wa, mb, Bb, Cb = true,
					Db = ja.isXML(ha),
					jb = [],
					Hb = U;
				do {
					H.exec("");
					if(Ba = H.exec(Hb)) {
						Hb = Ba[3];
						jb.push(Ba[1]);
						if(Ba[2]) {
							mb = Ba[3];
							break
						}
					}
				} while (Ba);
				if(jb.length > 1 && Va.exec(U)) if(jb.length === 2 && wa.relative[jb[0]]) Qa = Ab(jb[0] + jb[1], ha);
				else for(Qa = wa.relative[jb[0]] ? [ha] : ja(jb.shift(), ha); jb.length;) {
					U = jb.shift();
					if(wa.relative[U]) U += jb.shift();
					Qa = Ab(U, Qa)
				} else {
					if(!ta && jb.length > 1 && ha.nodeType === 9 && !Db && wa.match.ID.test(jb[0]) && !wa.match.ID.test(jb[jb.length - 1])) {
						Ba = ja.find(jb.shift(), ha, Db);
						ha = Ba.expr ? ja.filter(Ba.expr, Ba.set)[0] : Ba.set[0]
					}
					if(ha) {
						Ba = ta ? {
							expr: jb.pop(),
							set: hb(ta)
						} : ja.find(jb.pop(), jb.length === 1 && (jb[0] === "~" || jb[0] === "+") && ha.parentNode ? ha.parentNode : ha, Db);
						Qa = Ba.expr ? ja.filter(Ba.expr, Ba.set) : Ba.set;
						if(jb.length > 0) Wa = hb(Qa);
						else Cb = false;
						for(; jb.length;) {
							Ba = Bb = jb.pop();
							if(wa.relative[Bb]) Ba = jb.pop();
							else Bb = "";
							if(Ba == null) Ba = ha;
							wa.relative[Bb](Wa, Ba, Db)
						}
					} else Wa = []
				}
				Wa || (Wa = Qa);
				Wa || ja.error(Bb || U);
				if(T.call(Wa) === "[object Array]") if(Cb) if(ha && ha.nodeType === 1) for(U = 0; Wa[U] != null; U++) {
					if(Wa[U] && (Wa[U] === true || Wa[U].nodeType === 1 && ja.contains(ha, Wa[U]))) va.push(Qa[U])
				} else for(U = 0; Wa[U] != null; U++) Wa[U] && Wa[U].nodeType === 1 && va.push(Qa[U]);
				else va.push.apply(va, Wa);
				else hb(Wa, va);
				if(mb) {
					ja(mb, Aa, va, ta);
					ja.uniqueSort(va)
				}
				return va
			};
		ja.uniqueSort = function(U) {
			if(Ta) {
				W = ka;
				U.sort(Ta);
				if(W) for(var ha = 1; ha < U.length; ha++) U[ha] === U[ha - 1] && U.splice(ha--, 1)
			}
			return U
		};
		ja.matches = function(U, ha) {
			return ja(U, null, null, ha)
		};
		ja.matchesSelector = function(U, ha) {
			return ja(ha, null, null, [U]).length > 0
		};
		ja.find = function(U, ha, va) {
			var ta;
			if(!U) return [];
			for(var Aa = 0, Ba = wa.order.length; Aa < Ba; Aa++) {
				var Qa, Wa = wa.order[Aa];
				if(Qa = wa.leftMatch[Wa].exec(U)) {
					var mb = Qa[1];
					Qa.splice(1, 1);
					if(mb.substr(mb.length - 1) !== "\\") {
						Qa[1] = (Qa[1] || "").replace(/\\/g, "");
						ta = wa.find[Wa](Qa, ha, va);
						if(ta != null) {
							U = U.replace(wa.match[Wa], "");
							break
						}
					}
				}
			}
			ta || (ta = ha.getElementsByTagName("*"));
			return {
				set: ta,
				expr: U
			}
		};
		ja.filter = function(U, ha, va, ta) {
			for(var Aa, Ba, Qa = U, Wa = [], mb = ha, Bb = ha && ha[0] && ja.isXML(ha[0]); U && ha.length;) {
				for(var Cb in wa.filter) if((Aa = wa.leftMatch[Cb].exec(U)) != null && Aa[2]) {
					var Db, jb, Hb = wa.filter[Cb];
					jb = Aa[1];
					Ba = false;
					Aa.splice(1, 1);
					if(jb.substr(jb.length - 1) !== "\\") {
						if(mb === Wa) Wa = [];
						if(wa.preFilter[Cb]) if(Aa = wa.preFilter[Cb](Aa, mb, va, Wa, ta, Bb)) {
							if(Aa === true) continue
						} else Ba = Db = true;
						if(Aa) for(var ia = 0;
						(jb = mb[ia]) != null; ia++) if(jb) {
							Db = Hb(jb, Aa, ia, mb);
							var Ha = ta ^ !! Db;
							if(va && Db != null) if(Ha) Ba = true;
							else mb[ia] = false;
							else if(Ha) {
								Wa.push(jb);
								Ba = true
							}
						}
						if(Db !== e) {
							va || (mb = Wa);
							U = U.replace(wa.match[Cb], "");
							if(!Ba) return [];
							break
						}
					}
				}
				if(U === Qa) if(Ba == null) ja.error(U);
				else break;
				Qa = U
			}
			return mb
		};
		ja.error = function(U) {
			throw "Syntax error, unrecognized expression: " + U;
		};
		var wa = ja.selectors = {
			order: ["ID", "NAME", "TAG"],
			match: {
				ID: /#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,
				CLASS: /\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,
				NAME: /\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/,
				ATTR: /\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(['"]*)(.*?)\3|)\s*\]/,
				TAG: /^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/,
				CHILD: /:(only|nth|last|first)-child(?:\((even|odd|[\dn+\-]*)\))?/,
				POS: /:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/,
				PSEUDO: /:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/
			},
			leftMatch: {},
			attrMap: {
				"class": "className",
				"for": "htmlFor"
			},
			attrHandle: {
				href: function(U) {
					return U.getAttribute("href")
				}
			},
			relative: {
				"+": function(U, ha) {
					var va = typeof ha === "string",
						ta = va && !/\W/.test(ha);
					va = va && !ta;
					if(ta) ha = ha.toLowerCase();
					ta = 0;
					for(var Aa = U.length, Ba; ta < Aa; ta++) if(Ba = U[ta]) {
						for(;
						(Ba = Ba.previousSibling) && Ba.nodeType !== 1;);
						U[ta] = va || Ba && Ba.nodeName.toLowerCase() === ha ? Ba || false : Ba === ha
					}
					va && ja.filter(ha, U, true)
				},
				">": function(U, ha) {
					var va, ta = typeof ha === "string",
						Aa = 0,
						Ba = U.length;
					if(ta && !/\W/.test(ha)) for(ha = ha.toLowerCase(); Aa < Ba; Aa++) {
						if(va = U[Aa]) {
							va = va.parentNode;
							U[Aa] = va.nodeName.toLowerCase() === ha ? va : false
						}
					} else {
						for(; Aa < Ba; Aa++) if(va = U[Aa]) U[Aa] = ta ? va.parentNode : va.parentNode === ha;
						ta && ja.filter(ha, U, true)
					}
				},
				"": function(U, ha, va) {
					var ta, Aa = P++,
						Ba = A;
					if(typeof ha === "string" && !/\W/.test(ha)) {
						ta = ha = ha.toLowerCase();
						Ba = z
					}
					Ba("parentNode", ha, Aa, U, ta, va)
				},
				"~": function(U, ha, va) {
					var ta, Aa = P++,
						Ba = A;
					if(typeof ha === "string" && !/\W/.test(ha)) {
						ta = ha = ha.toLowerCase();
						Ba = z
					}
					Ba("previousSibling", ha, Aa, U, ta, va)
				}
			},
			find: {
				ID: function(U, ha, va) {
					if(typeof ha.getElementById !== "undefined" && !va) return(U = ha.getElementById(U[1])) && U.parentNode ? [U] : []
				},
				NAME: function(U, ha) {
					if(typeof ha.getElementsByName !== "undefined") {
						for(var va = [], ta = ha.getElementsByName(U[1]), Aa = 0, Ba = ta.length; Aa < Ba; Aa++) ta[Aa].getAttribute("name") === U[1] && va.push(ta[Aa]);
						return va.length === 0 ? null : va
					}
				},
				TAG: function(U, ha) {
					return ha.getElementsByTagName(U[1])
				}
			},
			preFilter: {
				CLASS: function(U, ha, va, ta, Aa, Ba) {
					U = " " + U[1].replace(/\\/g, "") + " ";
					if(Ba) return U;
					Ba = 0;
					for(var Qa;
					(Qa = ha[Ba]) != null; Ba++) if(Qa) if(Aa ^ (Qa.className && (" " + Qa.className + " ").replace(/[\t\n]/g, " ").indexOf(U) >= 0)) va || ta.push(Qa);
					else if(va) ha[Ba] = false;
					return false
				},
				ID: function(U) {
					return U[1].replace(/\\/g, "")
				},
				TAG: function(U) {
					return U[1].toLowerCase()
				},
				CHILD: function(U) {
					if(U[1] === "nth") {
						var ha = /(-?)(\d*)n((?:\+|-)?\d*)/.exec(U[2] === "even" && "2n" || U[2] === "odd" && "2n+1" || !/\D/.test(U[2]) && "0n+" + U[2] || U[2]);
						U[2] = ha[1] + (ha[2] || 1) - 0;
						U[3] = ha[3] - 0
					}
					U[0] = P++;
					return U
				},
				ATTR: function(U, ha, va, ta, Aa, Ba) {
					ha = U[1].replace(/\\/g, "");
					if(!Ba && wa.attrMap[ha]) U[1] = wa.attrMap[ha];
					if(U[2] === "~=") U[4] = " " + U[4] + " ";
					return U
				},
				PSEUDO: function(U, ha, va, ta, Aa) {
					if(U[1] === "not") if((H.exec(U[3]) || "").length > 1 || /^\w/.test(U[3])) U[3] = ja(U[3], null, null, ha);
					else {
						U = ja.filter(U[3], ha, va, true ^ Aa);
						va || ta.push.apply(ta, U);
						return false
					} else if(wa.match.POS.test(U[0]) || wa.match.CHILD.test(U[0])) return true;
					return U
				},
				POS: function(U) {
					U.unshift(true);
					return U
				}
			},
			filters: {
				enabled: function(U) {
					return U.disabled === false && U.type !== "hidden"
				},
				disabled: function(U) {
					return U.disabled === true
				},
				checked: function(U) {
					return U.checked === true
				},
				selected: function(U) {
					return U.selected === true
				},
				parent: function(U) {
					return !!U.firstChild
				},
				empty: function(U) {
					return !U.firstChild
				},
				has: function(U, ha, va) {
					return !!ja(va[3], U).length
				},
				header: function(U) {
					return /h\d/i.test(U.nodeName)
				},
				text: function(U) {
					return "text" === U.type
				},
				radio: function(U) {
					return "radio" === U.type
				},
				checkbox: function(U) {
					return "checkbox" === U.type
				},
				file: function(U) {
					return "file" === U.type
				},
				password: function(U) {
					return "password" === U.type
				},
				submit: function(U) {
					return "submit" === U.type
				},
				image: function(U) {
					return "image" === U.type
				},
				reset: function(U) {
					return "reset" === U.type
				},
				button: function(U) {
					return "button" === U.type || U.nodeName.toLowerCase() === "button"
				},
				input: function(U) {
					return /input|select|textarea|button/i.test(U.nodeName)
				}
			},
			setFilters: {
				first: function(U, ha) {
					return ha === 0
				},
				last: function(U, ha, va, ta) {
					return ha === ta.length - 1
				},
				even: function(U, ha) {
					return ha % 2 === 0
				},
				odd: function(U, ha) {
					return ha % 2 === 1
				},
				lt: function(U, ha, va) {
					return ha < va[3] - 0
				},
				gt: function(U, ha, va) {
					return ha > va[3] - 0
				},
				nth: function(U, ha, va) {
					return va[3] - 0 === ha
				},
				eq: function(U, ha, va) {
					return va[3] - 0 === ha
				}
			},
			filter: {
				PSEUDO: function(U, ha, va, ta) {
					var Aa = ha[1],
						Ba = wa.filters[Aa];
					if(Ba) return Ba(U, va, ha, ta);
					else if(Aa === "contains") return(U.textContent || U.innerText || ja.getText([U]) || "").indexOf(ha[3]) >= 0;
					else if(Aa === "not") {
						ha = ha[3];
						va = 0;
						for(ta = ha.length; va < ta; va++) if(ha[va] === U) return false;
						return true
					} else ja.error("Syntax error, unrecognized expression: " + Aa)
				},
				CHILD: function(U, ha) {
					var va = ha[1],
						ta = U;
					switch(va) {
					case "only":
					case "first":
						for(; ta = ta.previousSibling;) if(ta.nodeType === 1) return false;
						if(va === "first") return true;
						ta = U;
					case "last":
						for(; ta = ta.nextSibling;) if(ta.nodeType === 1) return false;
						return true;
					case "nth":
						va = ha[2];
						var Aa = ha[3];
						if(va === 1 && Aa === 0) return true;
						var Ba = ha[0],
							Qa = U.parentNode;
						if(Qa && (Qa.sizcache !== Ba || !U.nodeIndex)) {
							var Wa = 0;
							for(ta = Qa.firstChild; ta; ta = ta.nextSibling) if(ta.nodeType === 1) ta.nodeIndex = ++Wa;
							Qa.sizcache = Ba
						}
						ta = U.nodeIndex - Aa;
						return va === 0 ? ta === 0 : ta % va === 0 && ta / va >= 0
					}
				},
				ID: function(U, ha) {
					return U.nodeType === 1 && U.getAttribute("id") === ha
				},
				TAG: function(U, ha) {
					return ha === "*" && U.nodeType === 1 || U.nodeName.toLowerCase() === ha
				},
				CLASS: function(U, ha) {
					return(" " + (U.className || U.getAttribute("class")) + " ").indexOf(ha) > -1
				},
				ATTR: function(U, ha) {
					var va = ha[1];
					va = wa.attrHandle[va] ? wa.attrHandle[va](U) : U[va] != null ? U[va] : U.getAttribute(va);
					var ta = va + "",
						Aa = ha[2],
						Ba = ha[4];
					return va == null ? Aa === "!=" : Aa === "=" ? ta === Ba : Aa === "*=" ? ta.indexOf(Ba) >= 0 : Aa === "~=" ? (" " + ta + " ").indexOf(Ba) >= 0 : !Ba ? ta && va !== false : Aa === "!=" ? ta !== Ba : Aa === "^=" ? ta.indexOf(Ba) === 0 : Aa === "$=" ? ta.substr(ta.length - Ba.length) === Ba : Aa === "|=" ? ta === Ba || ta.substr(0, Ba.length + 1) === Ba + "-" : false
				},
				POS: function(U, ha, va, ta) {
					var Aa = wa.setFilters[ha[2]];
					if(Aa) return Aa(U, va, ha, ta)
				}
			}
		},
			Va = wa.match.POS,
			Ga = function(U, ha) {
				return "\\" + (ha - 0 + 1)
			},
			Ya;
		for(Ya in wa.match) {
			wa.match[Ya] = RegExp(wa.match[Ya].source + /(?![^\[]*\])(?![^\(]*\))/.source);
			wa.leftMatch[Ya] = RegExp(/(^(?:.|\r|\n)*?)/.source + wa.match[Ya].source.replace(/\\(\d+)/g, Ga))
		}
		var hb = function(U, ha) {
				U = Array.prototype.slice.call(U, 0);
				if(ha) {
					ha.push.apply(ha, U);
					return ha
				}
				return U
			};
		try {
			Array.prototype.slice.call(B.documentElement.childNodes, 0)
		} catch(tb) {
			hb = function(U, ha) {
				var va = 0,
					ta = ha || [];
				if(T.call(U) === "[object Array]") Array.prototype.push.apply(ta, U);
				else if(typeof U.length === "number") for(var Aa = U.length; va < Aa; va++) ta.push(U[va]);
				else for(; U[va]; va++) ta.push(U[va]);
				return ta
			}
		}
		var Ta, sb;
		if(B.documentElement.compareDocumentPosition) Ta = function(U, ha) {
			if(U === ha) {
				W = true;
				return 0
			}
			if(!U.compareDocumentPosition || !ha.compareDocumentPosition) return U.compareDocumentPosition ? -1 : 1;
			return U.compareDocumentPosition(ha) & 4 ? -1 : 1
		};
		else {
			Ta = function(U, ha) {
				var va, ta, Aa = [],
					Ba = [];
				va = U.parentNode;
				ta = ha.parentNode;
				var Qa = va;
				if(U === ha) {
					W = true;
					return 0
				} else if(va === ta) return sb(U, ha);
				else if(va) {
					if(!ta) return 1
				} else return -1;
				for(; Qa;) {
					Aa.unshift(Qa);
					Qa = Qa.parentNode
				}
				for(Qa = ta; Qa;) {
					Ba.unshift(Qa);
					Qa = Qa.parentNode
				}
				va = Aa.length;
				ta = Ba.length;
				for(Qa = 0; Qa < va && Qa < ta; Qa++) if(Aa[Qa] !== Ba[Qa]) return sb(Aa[Qa], Ba[Qa]);
				return Qa === va ? sb(U, Ba[Qa], -1) : sb(Aa[Qa], ha, 1)
			};
			sb = function(U, ha, va) {
				if(U === ha) return va;
				for(U = U.nextSibling; U;) {
					if(U === ha) return -1;
					U = U.nextSibling
				}
				return 1
			}
		}
		ja.getText = function(U) {
			for(var ha = "", va, ta = 0; U[ta]; ta++) {
				va = U[ta];
				if(va.nodeType === 3 || va.nodeType === 4) ha += va.nodeValue;
				else if(va.nodeType !== 8) ha += ja.getText(va.childNodes)
			}
			return ha
		};
		(function() {
			var U = B.createElement("div"),
				ha = "script" + (new Date).getTime(),
				va = B.documentElement;
			U.innerHTML = "<a name='" + ha + "'/>";
			va.insertBefore(U, va.firstChild);
			if(B.getElementById(ha)) {
				wa.find.ID = function(ta, Aa, Ba) {
					if(typeof Aa.getElementById !== "undefined" && !Ba) return(Aa = Aa.getElementById(ta[1])) ? Aa.id === ta[1] || typeof Aa.getAttributeNode !== "undefined" && Aa.getAttributeNode("id").nodeValue === ta[1] ? [Aa] : e : []
				};
				wa.filter.ID = function(ta, Aa) {
					var Ba = typeof ta.getAttributeNode !== "undefined" && ta.getAttributeNode("id");
					return ta.nodeType === 1 && Ba && Ba.nodeValue === Aa
				}
			}
			va.removeChild(U);
			va = U = null
		})();
		(function() {
			var U = B.createElement("div");
			U.appendChild(B.createComment(""));
			if(U.getElementsByTagName("*").length > 0) wa.find.TAG = function(ha, va) {
				var ta = va.getElementsByTagName(ha[1]);
				if(ha[1] === "*") {
					for(var Aa = [], Ba = 0; ta[Ba]; Ba++) ta[Ba].nodeType === 1 && Aa.push(ta[Ba]);
					ta = Aa
				}
				return ta
			};
			U.innerHTML = "<a href='#'></a>";
			if(U.firstChild && typeof U.firstChild.getAttribute !== "undefined" && U.firstChild.getAttribute("href") !== "#") wa.attrHandle.href = function(ha) {
				return ha.getAttribute("href", 2)
			};
			U = null
		})();
		B.querySelectorAll &&
		function() {
			var U = ja,
				ha = B.createElement("div");
			ha.innerHTML = "<p class='TEST'></p>";
			if(!(ha.querySelectorAll && ha.querySelectorAll(".TEST").length === 0)) {
				ja = function(ta, Aa, Ba, Qa) {
					Aa = Aa || B;
					ta = ta.replace(/\=\s*([^'"\]]*)\s*\]/g, "='$1']");
					if(!Qa && !ja.isXML(Aa)) if(Aa.nodeType === 9) try {
						return hb(Aa.querySelectorAll(ta), Ba)
					} catch(Wa) {} else if(Aa.nodeType === 1 && Aa.nodeName.toLowerCase() !== "object") {
						var mb = Aa.getAttribute("id"),
							Bb = mb || "__sizzle__";
						mb || Aa.setAttribute("id", Bb);
						try {
							return hb(Aa.querySelectorAll("#" + Bb + " " + ta), Ba)
						} catch(Cb) {} finally {
							mb || Aa.removeAttribute("id")
						}
					}
					return U(ta, Aa, Ba, Qa)
				};
				for(var va in U) ja[va] = U[va];
				ha = null
			}
		}();
		(function() {
			var U = B.documentElement,
				ha = U.matchesSelector || U.mozMatchesSelector || U.webkitMatchesSelector || U.msMatchesSelector,
				va = false;
			try {
				ha.call(B.documentElement, "[test!='']:sizzle")
			} catch(ta) {
				va = true
			}
			if(ha) ja.matchesSelector = function(Aa, Ba) {
				Ba = Ba.replace(/\=\s*([^'"\]]*)\s*\]/g, "='$1']");
				if(!ja.isXML(Aa)) try {
					if(va || !wa.match.PSEUDO.test(Ba) && !/!=/.test(Ba)) return ha.call(Aa, Ba)
				} catch(Qa) {}
				return ja(Ba, null, null, [Aa]).length > 0
			}
		})();
		(function() {
			var U = B.createElement("div");
			U.innerHTML = "<div class='test e'></div><div class='test'></div>";
			if(!(!U.getElementsByClassName || U.getElementsByClassName("e").length === 0)) {
				U.lastChild.className = "e";
				if(U.getElementsByClassName("e").length !== 1) {
					wa.order.splice(1, 0, "CLASS");
					wa.find.CLASS = function(ha, va, ta) {
						if(typeof va.getElementsByClassName !== "undefined" && !ta) return va.getElementsByClassName(ha[1])
					};
					U = null
				}
			}
		})();
		ja.contains = B.documentElement.contains ?
		function(U, ha) {
			return U !== ha && (U.contains ? U.contains(ha) : true)
		} : B.documentElement.compareDocumentPosition ?
		function(U, ha) {
			return !!(U.compareDocumentPosition(ha) & 16)
		} : function() {
			return false
		};
		ja.isXML = function(U) {
			return(U = (U ? U.ownerDocument || U : 0).documentElement) ? U.nodeName !== "HTML" : false
		};
		var Ab = function(U, ha) {
				for(var va, ta = [], Aa = "", Ba = ha.nodeType ? [ha] : ha; va = wa.match.PSEUDO.exec(U);) {
					Aa += va[0];
					U = U.replace(wa.match.PSEUDO, "")
				}
				U = wa.relative[U] ? U + "*" : U;
				va = 0;
				for(var Qa = Ba.length; va < Qa; va++) ja(U, Ba[va], ta);
				return ja.filter(Aa, ta)
			};
		u.find = ja;
		u.expr = ja.selectors;
		u.expr[":"] = u.expr.filters;
		u.unique = ja.uniqueSort;
		u.text = ja.getText;
		u.isXMLDoc = ja.isXML;
		u.contains = ja.contains
	})();
	var S = /Until$/,
		Z = /^(?:parents|prevUntil|prevAll)/,
		fa = /,/,
		V = /^.[^:#\[\.,]*$/,
		Da = Array.prototype.slice,
		ya = u.expr.match.POS;
	u.fn.extend({
		find: function(z) {
			for(var A = this.pushStack("", "find", z), H = 0, P = 0, T = this.length; P < T; P++) {
				H = A.length;
				u.find(z, this[P], A);
				if(P > 0) for(var W = H; W < A.length; W++) for(var ka = 0; ka < H; ka++) if(A[ka] === A[W]) {
					A.splice(W--, 1);
					break
				}
			}
			return A
		},
		has: function(z) {
			var A = u(z);
			return this.filter(function() {
				for(var H = 0, P = A.length; H < P; H++) if(u.contains(this, A[H])) return true
			})
		},
		not: function(z) {
			return this.pushStack(n(this, z, false), "not", z)
		},
		filter: function(z) {
			return this.pushStack(n(this, z, true), "filter", z)
		},
		is: function(z) {
			return !!z && u.filter(z, this).length > 0
		},
		closest: function(z, A) {
			var H = [],
				P, T, W = this[0];
			if(u.isArray(z)) {
				var ka, ja = {},
					wa = 1;
				if(W && z.length) {
					P = 0;
					for(T = z.length; P < T; P++) {
						ka = z[P];
						ja[ka] || (ja[ka] = u.expr.match.POS.test(ka) ? u(ka, A || this.context) : ka)
					}
					for(; W && W.ownerDocument && W !== A;) {
						for(ka in ja) {
							P = ja[ka];
							if(P.jquery ? P.index(W) > -1 : u(W).is(P)) H.push({
								selector: ka,
								elem: W,
								level: wa
							})
						}
						W = W.parentNode;
						wa++
					}
				}
				return H
			}
			ka = ya.test(z) ? u(z, A || this.context) : null;
			P = 0;
			for(T = this.length; P < T; P++) for(W = this[P]; W;) if(ka ? ka.index(W) > -1 : u.find.matchesSelector(W, z)) {
				H.push(W);
				break
			} else {
				W = W.parentNode;
				if(!W || !W.ownerDocument || W === A) break
			}
			H = H.length > 1 ? u.unique(H) : H;
			return this.pushStack(H, "closest", z)
		},
		index: function(z) {
			if(!z || typeof z === "string") return u.inArray(this[0], z ? u(z) : this.parent().children());
			return u.inArray(z.jquery ? z[0] : z, this)
		},
		add: function(z, A) {
			var H = typeof z === "string" ? u(z, A || this.context) : u.makeArray(z),
				P = u.merge(this.get(), H);
			return this.pushStack(!H[0] || !H[0].parentNode || H[0].parentNode.nodeType === 11 || !P[0] || !P[0].parentNode || P[0].parentNode.nodeType === 11 ? P : u.unique(P))
		},
		andSelf: function() {
			return this.add(this.prevObject)
		}
	});
	u.each({
		parent: function(z) {
			return(z = z.parentNode) && z.nodeType !== 11 ? z : null
		},
		parents: function(z) {
			return u.dir(z, "parentNode")
		},
		parentsUntil: function(z, A, H) {
			return u.dir(z, "parentNode", H)
		},
		next: function(z) {
			return u.nth(z, 2, "nextSibling")
		},
		prev: function(z) {
			return u.nth(z, 2, "previousSibling")
		},
		nextAll: function(z) {
			return u.dir(z, "nextSibling")
		},
		prevAll: function(z) {
			return u.dir(z, "previousSibling")
		},
		nextUntil: function(z, A, H) {
			return u.dir(z, "nextSibling", H)
		},
		prevUntil: function(z, A, H) {
			return u.dir(z, "previousSibling", H)
		},
		siblings: function(z) {
			return u.sibling(z.parentNode.firstChild, z)
		},
		children: function(z) {
			return u.sibling(z.firstChild)
		},
		contents: function(z) {
			return u.nodeName(z, "iframe") ? z.contentDocument || z.contentWindow.document : u.makeArray(z.childNodes)
		}
	}, function(z, A) {
		u.fn[z] = function(H, P) {
			var T = u.map(this, A, H);
			S.test(z) || (P = H);
			if(P && typeof P === "string") T = u.filter(P, T);
			T = this.length > 1 ? u.unique(T) : T;
			if((this.length > 1 || fa.test(P)) && Z.test(z)) T = T.reverse();
			return this.pushStack(T, z, Da.call(arguments).join(","))
		}
	});
	u.extend({
		filter: function(z, A, H) {
			if(H) z = ":not(" + z + ")";
			return A.length === 1 ? u.find.matchesSelector(A[0], z) ? [A[0]] : [] : u.find.matches(z, A)
		},
		dir: function(z, A, H) {
			var P = [];
			for(z = z[A]; z && z.nodeType !== 9 && (H === e || z.nodeType !== 1 || !u(z).is(H));) {
				z.nodeType === 1 && P.push(z);
				z = z[A]
			}
			return P
		},
		nth: function(z, A, H) {
			A = A || 1;
			for(var P = 0; z; z = z[H]) if(z.nodeType === 1 && ++P === A) break;
			return z
		},
		sibling: function(z, A) {
			for(var H = []; z; z = z.nextSibling) z.nodeType === 1 && z !== A && H.push(z);
			return H
		}
	});
	var Ja = / jQuery\d+="(?:\d+|null)"/g,
		ra = /^\s+/,
		Na = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig,
		Ua = /<([\w:]+)/,
		fb = /<tbody/i,
		Fa = /<|&#?\w+;/,
		Pa = /<(?:script|object|embed|option|style)/i,
		nb = /checked\s*(?:[^=]|=\s*.checked.)/i,
		kb = /\=([^="'>\s]+\/)>/g,
		ob = {
			option: [1, "<select multiple='multiple'>", "</select>"],
			legend: [1, "<fieldset>", "</fieldset>"],
			thead: [1, "<table>", "</table>"],
			tr: [2, "<table><tbody>", "</tbody></table>"],
			td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
			col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"],
			area: [1, "<map>", "</map>"],
			_default: [0, "", ""]
		};
	ob.optgroup = ob.option;
	ob.tbody = ob.tfoot = ob.colgroup = ob.caption = ob.thead;
	ob.th = ob.td;
	if(!u.support.htmlSerialize) ob._default = [1, "div<div>", "</div>"];
	u.fn.extend({
		text: function(z) {
			if(u.isFunction(z)) return this.each(function(A) {
				var H = u(this);
				H.text(z.call(this, A, H.text()))
			});
			if(typeof z !== "object" && z !== e) return this.empty().append((this[0] && this[0].ownerDocument || B).createTextNode(z));
			return u.text(this)
		},
		wrapAll: function(z) {
			if(u.isFunction(z)) return this.each(function(H) {
				u(this).wrapAll(z.call(this, H))
			});
			if(this[0]) {
				var A = u(z, this[0].ownerDocument).eq(0).clone(true);
				this[0].parentNode && A.insertBefore(this[0]);
				A.map(function() {
					for(var H = this; H.firstChild && H.firstChild.nodeType === 1;) H = H.firstChild;
					return H
				}).append(this)
			}
			return this
		},
		wrapInner: function(z) {
			if(u.isFunction(z)) return this.each(function(A) {
				u(this).wrapInner(z.call(this, A))
			});
			return this.each(function() {
				var A = u(this),
					H = A.contents();
				H.length ? H.wrapAll(z) : A.append(z)
			})
		},
		wrap: function(z) {
			return this.each(function() {
				u(this).wrapAll(z)
			})
		},
		unwrap: function() {
			return this.parent().each(function() {
				u.nodeName(this, "body") || u(this).replaceWith(this.childNodes)
			}).end()
		},
		append: function() {
			return this.domManip(arguments, true, function(z) {
				this.nodeType === 1 && this.appendChild(z)
			})
		},
		prepend: function() {
			return this.domManip(arguments, true, function(z) {
				this.nodeType === 1 && this.insertBefore(z, this.firstChild)
			})
		},
		before: function() {
			if(this[0] && this[0].parentNode) return this.domManip(arguments, false, function(A) {
				this.parentNode.insertBefore(A, this)
			});
			else if(arguments.length) {
				var z = u(arguments[0]);
				z.push.apply(z, this.toArray());
				return this.pushStack(z, "before", arguments)
			}
		},
		after: function() {
			if(this[0] && this[0].parentNode) return this.domManip(arguments, false, function(A) {
				this.parentNode.insertBefore(A, this.nextSibling)
			});
			else if(arguments.length) {
				var z = this.pushStack(this, "after", arguments);
				z.push.apply(z, u(arguments[0]).toArray());
				return z
			}
		},
		remove: function(z, A) {
			for(var H = 0, P;
			(P = this[H]) != null; H++) if(!z || u.filter(z, [P]).length) {
				if(!A && P.nodeType === 1) {
					u.cleanData(P.getElementsByTagName("*"));
					u.cleanData([P])
				}
				P.parentNode && P.parentNode.removeChild(P)
			}
			return this
		},
		empty: function() {
			for(var z = 0, A;
			(A = this[z]) != null; z++) for(A.nodeType === 1 && u.cleanData(A.getElementsByTagName("*")); A.firstChild;) A.removeChild(A.firstChild);
			return this
		},
		clone: function(z) {
			var A = this.map(function() {
				if(!u.support.noCloneEvent && !u.isXMLDoc(this)) {
					var H = this.outerHTML,
						P = this.ownerDocument;
					if(!H) {
						H = P.createElement("div");
						H.appendChild(this.cloneNode(true));
						H = H.innerHTML
					}
					return u.clean([H.replace(Ja, "").replace(kb, '="$1">').replace(ra, "")], P)[0]
				} else return this.cloneNode(true)
			});
			if(z === true) {
				l(this, A);
				l(this.find("*"), A.find("*"))
			}
			return A
		},
		html: function(z) {
			if(z === e) return this[0] && this[0].nodeType === 1 ? this[0].innerHTML.replace(Ja, "") : null;
			else if(typeof z === "string" && !Pa.test(z) && (u.support.leadingWhitespace || !ra.test(z)) && !ob[(Ua.exec(z) || ["", ""])[1].toLowerCase()]) {
				z = z.replace(Na, "<$1></$2>");
				try {
					for(var A = 0, H = this.length; A < H; A++) if(this[A].nodeType === 1) {
						u.cleanData(this[A].getElementsByTagName("*"));
						this[A].innerHTML = z
					}
				} catch(P) {
					this.empty().append(z)
				}
			} else u.isFunction(z) ? this.each(function(T) {
				var W = u(this);
				W.html(z.call(this, T, W.html()))
			}) : this.empty().append(z);
			return this
		},
		replaceWith: function(z) {
			if(this[0] && this[0].parentNode) {
				if(u.isFunction(z)) return this.each(function(A) {
					var H = u(this),
						P = H.html();
					H.replaceWith(z.call(this, A, P))
				});
				if(typeof z !== "string") z = u(z).detach();
				return this.each(function() {
					var A = this.nextSibling,
						H = this.parentNode;
					u(this).remove();
					A ? u(A).before(z) : u(H).append(z)
				})
			} else return this.pushStack(u(u.isFunction(z) ? z() : z), "replaceWith", z)
		},
		detach: function(z) {
			return this.remove(z, true)
		},
		domManip: function(z, A, H) {
			var P, T, W, ka = z[0],
				ja = [];
			if(!u.support.checkClone && arguments.length === 3 && typeof ka === "string" && nb.test(ka)) return this.each(function() {
				u(this).domManip(z, A, H, true)
			});
			if(u.isFunction(ka)) return this.each(function(Va) {
				var Ga = u(this);
				z[0] = ka.call(this, Va, A ? Ga.html() : e);
				Ga.domManip(z, A, H)
			});
			if(this[0]) {
				P = ka && ka.parentNode;
				P = u.support.parentNode && P && P.nodeType === 11 && P.childNodes.length === this.length ? {
					fragment: P
				} : u.buildFragment(z, this, ja);
				W = P.fragment;
				if(T = W.childNodes.length === 1 ? W = W.firstChild : W.firstChild) {
					A = A && u.nodeName(T, "tr");
					T = 0;
					for(var wa = this.length; T < wa; T++) H.call(A ? u.nodeName(this[T], "table") ? this[T].getElementsByTagName("tbody")[0] || this[T].appendChild(this[T].ownerDocument.createElement("tbody")) : this[T] : this[T], T > 0 || P.cacheable || this.length > 1 ? W.cloneNode(true) : W)
				}
				ja.length && u.each(ja, o)
			}
			return this
		}
	});
	u.buildFragment = function(z, A, H) {
		var P, T, W;
		A = A && A[0] ? A[0].ownerDocument || A[0] : B;
		if(z.length === 1 && typeof z[0] === "string" && z[0].length < 512 && A === B && !Pa.test(z[0]) && (u.support.checkClone || !nb.test(z[0]))) {
			T = true;
			if(W = u.fragments[z[0]]) if(W !== 1) P = W
		}
		if(!P) {
			P = A.createDocumentFragment();
			u.clean(z, A, P, H)
		}
		if(T) u.fragments[z[0]] = W ? P : 1;
		return {
			fragment: P,
			cacheable: T
		}
	};
	u.fragments = {};
	u.each({
		appendTo: "append",
		prependTo: "prepend",
		insertBefore: "before",
		insertAfter: "after",
		replaceAll: "replaceWith"
	}, function(z, A) {
		u.fn[z] = function(H) {
			var P = [];
			H = u(H);
			var T = this.length === 1 && this[0].parentNode;
			if(T && T.nodeType === 11 && T.childNodes.length === 1 && H.length === 1) {
				H[A](this[0]);
				return this
			} else {
				T = 0;
				for(var W = H.length; T < W; T++) {
					var ka = (T > 0 ? this.clone(true) : this).get();
					u(H[T])[A](ka);
					P = P.concat(ka)
				}
				return this.pushStack(P, z, H.selector)
			}
		}
	});
	u.extend({
		clean: function(z, A, H, P) {
			A = A || B;
			if(typeof A.createElement === "undefined") A = A.ownerDocument || A[0] && A[0].ownerDocument || B;
			for(var T = [], W = 0, ka;
			(ka = z[W]) != null; W++) {
				if(typeof ka === "number") ka += "";
				if(ka) {
					if(typeof ka === "string" && !Fa.test(ka)) ka = A.createTextNode(ka);
					else if(typeof ka === "string") {
						ka = ka.replace(Na, "<$1></$2>");
						var ja = (Ua.exec(ka) || ["", ""])[1].toLowerCase(),
							wa = ob[ja] || ob._default,
							Va = wa[0],
							Ga = A.createElement("div");
						for(Ga.innerHTML = wa[1] + ka + wa[2]; Va--;) Ga = Ga.lastChild;
						if(!u.support.tbody) {
							Va = fb.test(ka);
							ja = ja === "table" && !Va ? Ga.firstChild && Ga.firstChild.childNodes : wa[1] === "<table>" && !Va ? Ga.childNodes : [];
							for(wa = ja.length - 1; wa >= 0; --wa) u.nodeName(ja[wa], "tbody") && !ja[wa].childNodes.length && ja[wa].parentNode.removeChild(ja[wa])
						}!u.support.leadingWhitespace && ra.test(ka) && Ga.insertBefore(A.createTextNode(ra.exec(ka)[0]), Ga.firstChild);
						ka = Ga.childNodes
					}
					if(ka.nodeType) T.push(ka);
					else T = u.merge(T, ka)
				}
			}
			if(H) for(W = 0; T[W]; W++) if(P && u.nodeName(T[W], "script") && (!T[W].type || T[W].type.toLowerCase() === "text/javascript")) P.push(T[W].parentNode ? T[W].parentNode.removeChild(T[W]) : T[W]);
			else {
				T[W].nodeType === 1 && T.splice.apply(T, [W + 1, 0].concat(u.makeArray(T[W].getElementsByTagName("script"))));
				H.appendChild(T[W])
			}
			return T
		},
		cleanData: function(z) {
			for(var A, H, P = u.cache, T = u.event.special, W = u.support.deleteExpando, ka = 0, ja;
			(ja = z[ka]) != null; ka++) if(!(ja.nodeName && u.noData[ja.nodeName.toLowerCase()])) if(H = ja[u.expando]) {
				if((A = P[H]) && A.events) for(var wa in A.events) T[wa] ? u.event.remove(ja, wa) : u.removeEvent(ja, wa, A.handle);
				if(W) delete ja[u.expando];
				else ja.removeAttribute && ja.removeAttribute(u.expando);
				delete P[H]
			}
		}
	});
	var vb = /alpha\([^)]*\)/i,
		lb = /opacity=([^)]*)/,
		zb = /-([a-z])/ig,
		Gb = /([A-Z])/g,
		R = /^-?\d+(?:px)?$/i,
		ca = /^-?\d/,
		Y = {
			position: "absolute",
			visibility: "hidden",
			display: "block"
		},
		da = ["Left", "Right"],
		ba = ["Top", "Bottom"],
		la, na, xa, sa = function(z, A) {
			return A.toUpperCase()
		};
	u.fn.css = function(z, A) {
		if(arguments.length === 2 && A === e) return this;
		return u.access(this, z, A, true, function(H, P, T) {
			return T !== e ? u.style(H, P, T) : u.css(H, P)
		})
	};
	u.extend({
		cssHooks: {
			opacity: {
				get: function(z, A) {
					if(A) {
						var H = la(z, "opacity", "opacity");
						return H === "" ? "1" : H
					} else return z.style.opacity
				}
			}
		},
		cssNumber: {
			zIndex: true,
			fontWeight: true,
			opacity: true,
			zoom: true,
			lineHeight: true
		},
		cssProps: {
			"float": u.support.cssFloat ? "cssFloat" : "styleFloat"
		},
		style: function(z, A, H, P) {
			if(!(!z || z.nodeType === 3 || z.nodeType === 8 || !z.style)) {
				var T, W = u.camelCase(A),
					ka = z.style,
					ja = u.cssHooks[W];
				A = u.cssProps[W] || W;
				if(H !== e) {
					if(!(typeof H === "number" && isNaN(H) || H == null)) {
						if(typeof H === "number" && !u.cssNumber[W]) H += "px";
						if(!ja || !("set" in ja) || (H = ja.set(z, H)) !== e) try {
							ka[A] = H
						} catch(wa) {}
					}
				} else {
					if(ja && "get" in ja && (T = ja.get(z, false, P)) !== e) return T;
					return ka[A]
				}
			}
		},
		css: function(z, A, H) {
			var P, T = u.camelCase(A),
				W = u.cssHooks[T];
			A = u.cssProps[T] || T;
			if(W && "get" in W && (P = W.get(z, true, H)) !== e) return P;
			else if(la) return la(z, A, T)
		},
		swap: function(z, A, H) {
			var P = {},
				T;
			for(T in A) {
				P[T] = z.style[T];
				z.style[T] = A[T]
			}
			H.call(z);
			for(T in A) z.style[T] = P[T]
		},
		camelCase: function(z) {
			return z.replace(zb, sa)
		}
	});
	u.curCSS = u.css;
	u.each(["height", "width"], function(z, A) {
		u.cssHooks[A] = {
			get: function(H, P, T) {
				var W;
				if(P) {
					if(H.offsetWidth !== 0) W = q(H, A, T);
					else u.swap(H, Y, function() {
						W = q(H, A, T)
					});
					if(W <= 0) {
						W = la(H, A, A);
						if(W === "0px" && xa) W = xa(H, A, A);
						if(W != null) return W === "" || W === "auto" ? "0px" : W
					}
					if(W < 0 || W == null) {
						W = H.style[A];
						return W === "" || W === "auto" ? "0px" : W
					}
					return typeof W === "string" ? W : W + "px"
				}
			},
			set: function(H, P) {
				if(R.test(P)) {
					P = parseFloat(P);
					if(P >= 0) return P + "px"
				} else return P
			}
		}
	});
	if(!u.support.opacity) u.cssHooks.opacity = {
		get: function(z, A) {
			return lb.test((A && z.currentStyle ? z.currentStyle.filter : z.style.filter) || "") ? parseFloat(RegExp.$1) / 100 + "" : A ? "1" : ""
		},
		set: function(z, A) {
			var H = z.style;
			H.zoom = 1;
			var P = u.isNaN(A) ? "" : "alpha(opacity=" + A * 100 + ")",
				T = H.filter || "";
			H.filter = vb.test(T) ? T.replace(vb, P) : H.filter + " " + P
		}
	};
	if(B.defaultView && B.defaultView.getComputedStyle) na = function(z, A, H) {
		var P;
		H = H.replace(Gb, "-$1").toLowerCase();
		if(!(A = z.ownerDocument.defaultView)) return e;
		if(A = A.getComputedStyle(z, null)) {
			P = A.getPropertyValue(H);
			if(P === "" && !u.contains(z.ownerDocument.documentElement, z)) P = u.style(z, H)
		}
		return P
	};
	if(B.documentElement.currentStyle) xa = function(z, A) {
		var H, P, T = z.currentStyle && z.currentStyle[A],
			W = z.style;
		if(!R.test(T) && ca.test(T)) {
			H = W.left;
			P = z.runtimeStyle.left;
			z.runtimeStyle.left = z.currentStyle.left;
			W.left = A === "fontSize" ? "1em" : T || 0;
			T = W.pixelLeft + "px";
			W.left = H;
			z.runtimeStyle.left = P
		}
		return T === "" ? "auto" : T
	};
	la = na || xa;
	if(u.expr && u.expr.filters) {
		u.expr.filters.hidden = function(z) {
			var A = z.offsetHeight;
			return z.offsetWidth === 0 && A === 0 || !u.support.reliableHiddenOffsets && (z.style.display || u.css(z, "display")) === "none"
		};
		u.expr.filters.visible = function(z) {
			return !u.expr.filters.hidden(z)
		}
	}
	var za = u.now(),
		ua = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,
		qa = /^(?:select|textarea)/i,
		La = /^(?:color|date|datetime|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,
		Sa = /^(?:GET|HEAD)$/,
		w = /\[\]$/,
		E = /\=\?(&|$)/,
		G = /\?/,
		J = /([?&])_=[^&]*/,
		L = /^(\w+:)?\/\/([^\/?#]+)/,
		K = /%20/g,
		ea = /#.*$/,
		ga = u.fn.load;
	u.fn.extend({
		load: function(z, A, H) {
			if(typeof z !== "string" && ga) return ga.apply(this, arguments);
			else if(!this.length) return this;
			var P = z.indexOf(" ");
			if(P >= 0) {
				var T = z.slice(P, z.length);
				z = z.slice(0, P)
			}
			P = "GET";
			if(A) if(u.isFunction(A)) {
				H = A;
				A = null
			} else if(typeof A === "object") {
				A = u.param(A, u.ajaxSettings.traditional);
				P = "POST"
			}
			var W = this;
			u.ajax({
				url: z,
				type: P,
				dataType: "html",
				data: A,
				complete: function(ka, ja) {
					if(ja === "success" || ja === "notmodified") W.html(T ? u("<div>").append(ka.responseText.replace(ua, "")).find(T) : ka.responseText);
					H && W.each(H, [ka.responseText, ja, ka])
				}
			});
			return this
		},
		serialize: function() {
			return u.param(this.serializeArray())
		},
		serializeArray: function() {
			return this.map(function() {
				return this.elements ? u.makeArray(this.elements) : this
			}).filter(function() {
				return this.name && !this.disabled && (this.checked || qa.test(this.nodeName) || La.test(this.type))
			}).map(function(z, A) {
				var H = u(this).val();
				return H == null ? null : u.isArray(H) ? u.map(H, function(P) {
					return {
						name: A.name,
						value: P
					}
				}) : {
					name: A.name,
					value: H
				}
			}).get()
		}
	});
	u.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "), function(z, A) {
		u.fn[A] = function(H) {
			return this.bind(A, H)
		}
	});
	u.extend({
		get: function(z, A, H, P) {
			if(u.isFunction(A)) {
				P = P || H;
				H = A;
				A = null
			}
			return u.ajax({
				type: "GET",
				url: z,
				data: A,
				success: H,
				dataType: P
			})
		},
		getScript: function(z, A) {
			return u.get(z, null, A, "script")
		},
		getJSON: function(z, A, H) {
			return u.get(z, A, H, "json")
		},
		post: function(z, A, H, P) {
			if(u.isFunction(A)) {
				P = P || H;
				H = A;
				A = {}
			}
			return u.ajax({
				type: "POST",
				url: z,
				data: A,
				success: H,
				dataType: P
			})
		},
		ajaxSetup: function(z) {
			u.extend(u.ajaxSettings, z)
		},
		ajaxSettings: {
			url: location.href,
			global: true,
			type: "GET",
			contentType: "application/x-www-form-urlencoded",
			processData: true,
			async: true,
			xhr: function() {
				return new a.XMLHttpRequest
			},
			accepts: {
				xml: "application/xml, text/xml",
				html: "text/html",
				script: "text/javascript, application/javascript",
				json: "application/json, text/javascript",
				text: "text/plain",
				_default: "*/*"
			}
		},
		ajax: function(z) {
			var A = u.extend(true, {}, u.ajaxSettings, z),
				H, P, T, W = A.type.toUpperCase(),
				ka = Sa.test(W);
			A.url = A.url.replace(ea, "");
			A.context = z && z.context != null ? z.context : A;
			if(A.data && A.processData && typeof A.data !== "string") A.data = u.param(A.data, A.traditional);
			if(A.dataType === "jsonp") {
				if(W === "GET") E.test(A.url) || (A.url += (G.test(A.url) ? "&" : "?") + (A.jsonp || "callback") + "=?");
				else if(!A.data || !E.test(A.data)) A.data = (A.data ? A.data + "&" : "") + (A.jsonp || "callback") + "=?";
				A.dataType = "json"
			}
			if(A.dataType === "json" && (A.data && E.test(A.data) || E.test(A.url))) {
				H = A.jsonpCallback || "jsonp" + za++;
				if(A.data) A.data = (A.data + "").replace(E, "=" + H + "$1");
				A.url = A.url.replace(E, "=" + H + "$1");
				A.dataType = "script";
				var ja = a[H];
				a[H] = function(ta) {
					if(u.isFunction(ja)) ja(ta);
					else {
						a[H] = e;
						try {
							delete a[H]
						} catch(Aa) {}
					}
					T = ta;
					u.handleSuccess(A, Ta, P, T);
					u.handleComplete(A, Ta, P, T);
					Ga && Ga.removeChild(Ya)
				}
			}
			if(A.dataType === "script" && A.cache === null) A.cache = false;
			if(A.cache === false && ka) {
				var wa = u.now(),
					Va = A.url.replace(J, "$1_=" + wa);
				A.url = Va + (Va === A.url ? (G.test(A.url) ? "&" : "?") + "_=" + wa : "")
			}
			if(A.data && ka) A.url += (G.test(A.url) ? "&" : "?") + A.data;
			A.global && u.active++ === 0 && u.event.trigger("ajaxStart");
			wa = (wa = L.exec(A.url)) && (wa[1] && wa[1].toLowerCase() !== location.protocol || wa[2].toLowerCase() !== location.host);
			if(A.dataType === "script" && W === "GET" && wa) {
				var Ga = B.getElementsByTagName("head")[0] || B.documentElement,
					Ya = B.createElement("script");
				if(A.scriptCharset) Ya.charset = A.scriptCharset;
				Ya.src = A.url;
				if(!H) {
					var hb = false;
					Ya.onload = Ya.onreadystatechange = function() {
						if(!hb && (!this.readyState || this.readyState === "loaded" || this.readyState === "complete")) {
							hb = true;
							u.handleSuccess(A, Ta, P, T);
							u.handleComplete(A, Ta, P, T);
							Ya.onload = Ya.onreadystatechange = null;
							Ga && Ya.parentNode && Ga.removeChild(Ya)
						}
					}
				}
				Ga.insertBefore(Ya, Ga.firstChild);
				return e
			}
			var tb = false,
				Ta = A.xhr();
			if(Ta) {
				A.username ? Ta.open(W, A.url, A.async, A.username, A.password) : Ta.open(W, A.url, A.async);
				try {
					if(A.data != null && !ka || z && z.contentType) Ta.setRequestHeader("Content-Type", A.contentType);
					if(A.ifModified) {
						u.lastModified[A.url] && Ta.setRequestHeader("If-Modified-Since", u.lastModified[A.url]);
						u.etag[A.url] && Ta.setRequestHeader("If-None-Match", u.etag[A.url])
					}
					wa || Ta.setRequestHeader("X-Requested-With", "XMLHttpRequest");
					Ta.setRequestHeader("Accept", A.dataType && A.accepts[A.dataType] ? A.accepts[A.dataType] + ", */*; q=0.01" : A.accepts._default)
				} catch(sb) {}
				if(A.beforeSend && A.beforeSend.call(A.context, Ta, A) === false) {
					A.global && u.active-- === 1 && u.event.trigger("ajaxStop");
					Ta.abort();
					return false
				}
				A.global && u.triggerGlobal(A, "ajaxSend", [Ta, A]);
				var Ab = Ta.onreadystatechange = function(ta) {
						if(!Ta || Ta.readyState === 0 || ta === "abort") {
							tb || u.handleComplete(A, Ta, P, T);
							tb = true;
							if(Ta) Ta.onreadystatechange = u.noop
						} else if(!tb && Ta && (Ta.readyState === 4 || ta === "timeout")) {
							tb = true;
							Ta.onreadystatechange = u.noop;
							P = ta === "timeout" ? "timeout" : !u.httpSuccess(Ta) ? "error" : A.ifModified && u.httpNotModified(Ta, A.url) ? "notmodified" : "success";
							var Aa;
							if(P === "success") try {
								T = u.httpData(Ta, A.dataType, A)
							} catch(Ba) {
								P = "parsererror";
								Aa = Ba
							}
							if(P === "success" || P === "notmodified") H || u.handleSuccess(A, Ta, P, T);
							else u.handleError(A, Ta, P, Aa);
							H || u.handleComplete(A, Ta, P, T);
							ta === "timeout" && Ta.abort();
							if(A.async) Ta = null
						}
					};
				try {
					var U = Ta.abort;
					Ta.abort = function() {
						Ta && Function.prototype.call.call(U, Ta);
						Ab("abort")
					}
				} catch(ha) {}
				A.async && A.timeout > 0 && setTimeout(function() {
					Ta && !tb && Ab("timeout")
				}, A.timeout);
				try {
					Ta.send(ka || A.data == null ? null : A.data)
				} catch(va) {
					u.handleError(A, Ta, null, va);
					u.handleComplete(A, Ta, P, T)
				}
				A.async || Ab();
				return Ta
			}
		},
		param: function(z, A) {
			var H = [],
				P = function(W, ka) {
					ka = u.isFunction(ka) ? ka() : ka;
					H[H.length] = encodeURIComponent(W) + "=" + encodeURIComponent(ka)
				};
			if(A === e) A = u.ajaxSettings.traditional;
			if(u.isArray(z) || z.jquery) u.each(z, function() {
				P(this.name, this.value)
			});
			else for(var T in z) v(T, z[T], A, P);
			return H.join("&").replace(K, "+")
		}
	});
	u.extend({
		active: 0,
		lastModified: {},
		etag: {},
		handleError: function(z, A, H, P) {
			z.error && z.error.call(z.context, A, H, P);
			z.global && u.triggerGlobal(z, "ajaxError", [A, z, P])
		},
		handleSuccess: function(z, A, H, P) {
			z.success && z.success.call(z.context, P, H, A);
			z.global && u.triggerGlobal(z, "ajaxSuccess", [A, z])
		},
		handleComplete: function(z, A, H) {
			z.complete && z.complete.call(z.context, A, H);
			z.global && u.triggerGlobal(z, "ajaxComplete", [A, z]);
			z.global && u.active-- === 1 && u.event.trigger("ajaxStop")
		},
		triggerGlobal: function(z, A, H) {
			(z.context && z.context.url == null ? u(z.context) : u.event).trigger(A, H)
		},
		httpSuccess: function(z) {
			try {
				return !z.status && location.protocol === "file:" || z.status >= 200 && z.status < 300 || z.status === 304 || z.status === 1223
			} catch(A) {}
			return false
		},
		httpNotModified: function(z, A) {
			var H = z.getResponseHeader("Last-Modified"),
				P = z.getResponseHeader("Etag");
			if(H) u.lastModified[A] = H;
			if(P) u.etag[A] = P;
			return z.status === 304
		},
		httpData: function(z, A, H) {
			var P = z.getResponseHeader("content-type") || "",
				T = A === "xml" || !A && P.indexOf("xml") >= 0;
			z = T ? z.responseXML : z.responseText;
			T && z.documentElement.nodeName === "parsererror" && u.error("parsererror");
			if(H && H.dataFilter) z = H.dataFilter(z, A);
			if(typeof z === "string") if(A === "json" || !A && P.indexOf("json") >= 0) z = u.parseJSON(z);
			else if(A === "script" || !A && P.indexOf("javascript") >= 0) u.globalEval(z);
			return z
		}
	});
	if(a.ActiveXObject) u.ajaxSettings.xhr = function() {
		if(a.location.protocol !== "file:") try {
			return new a.XMLHttpRequest
		} catch(z) {}
		try {
			return new a.ActiveXObject("Microsoft.XMLHTTP")
		} catch(A) {}
	};
	u.support.ajax = !! u.ajaxSettings.xhr();
	var Ca = {},
		Ia = /^(?:toggle|show|hide)$/,
		ab = /^([+\-]=)?([\d+.\-]+)(.*)$/,
		gb, xb = [
			["height", "marginTop", "marginBottom", "paddingTop", "paddingBottom"],
			["width", "marginLeft", "marginRight", "paddingLeft", "paddingRight"],
			["opacity"]
		];
	u.fn.extend({
		show: function(z, A, H) {
			if(z || z === 0) return this.animate(x("show", 3), z, A, H);
			else {
				H = 0;
				for(var P = this.length; H < P; H++) {
					z = this[H];
					A = z.style.display;
					if(!u.data(z, "olddisplay") && A === "none") A = z.style.display = "";
					A === "" && u.css(z, "display") === "none" && u.data(z, "olddisplay", y(z.nodeName))
				}
				for(H = 0; H < P; H++) {
					z = this[H];
					A = z.style.display;
					if(A === "" || A === "none") z.style.display = u.data(z, "olddisplay") || ""
				}
				return this
			}
		},
		hide: function(z, A, H) {
			if(z || z === 0) return this.animate(x("hide", 3), z, A, H);
			else {
				z = 0;
				for(A = this.length; z < A; z++) {
					H = u.css(this[z], "display");
					H !== "none" && u.data(this[z], "olddisplay", H)
				}
				for(z = 0; z < A; z++) this[z].style.display = "none";
				return this
			}
		},
		_toggle: u.fn.toggle,
		toggle: function(z, A, H) {
			var P = typeof z === "boolean";
			if(u.isFunction(z) && u.isFunction(A)) this._toggle.apply(this, arguments);
			else z == null || P ? this.each(function() {
				var T = P ? z : u(this).is(":hidden");
				u(this)[T ? "show" : "hide"]()
			}) : this.animate(x("toggle", 3), z, A, H);
			return this
		},
		fadeTo: function(z, A, H, P) {
			return this.filter(":hidden").css("opacity", 0).show().end().animate({
				opacity: A
			}, z, H, P)
		},
		animate: function(z, A, H, P) {
			var T = u.speed(A, H, P);
			if(u.isEmptyObject(z)) return this.each(T.complete);
			return this[T.queue === false ? "each" : "queue"](function() {
				var W = u.extend({}, T),
					ka, ja = this.nodeType === 1,
					wa = ja && u(this).is(":hidden"),
					Va = this;
				for(ka in z) {
					var Ga = u.camelCase(ka);
					if(ka !== Ga) {
						z[Ga] = z[ka];
						delete z[ka];
						ka = Ga
					}
					if(z[ka] === "hide" && wa || z[ka] === "show" && !wa) return W.complete.call(this);
					if(ja && (ka === "height" || ka === "width")) {
						W.overflow = [this.style.overflow, this.style.overflowX, this.style.overflowY];
						if(u.css(this, "display") === "inline" && u.css(this, "float") === "none") if(u.support.inlineBlockNeedsLayout) if(y(this.nodeName) === "inline") this.style.display = "inline-block";
						else {
							this.style.display = "inline";
							this.style.zoom = 1
						} else this.style.display = "inline-block"
					}
					if(u.isArray(z[ka])) {
						(W.specialEasing = W.specialEasing || {})[ka] = z[ka][1];
						z[ka] = z[ka][0]
					}
				}
				if(W.overflow != null) this.style.overflow = "hidden";
				W.curAnim = u.extend({}, z);
				u.each(z, function(Ya, hb) {
					var tb = new u.fx(Va, W, Ya);
					if(Ia.test(hb)) tb[hb === "toggle" ? wa ? "show" : "hide" : hb](z);
					else {
						var Ta = ab.exec(hb),
							sb = tb.cur() || 0;
						if(Ta) {
							var Ab = parseFloat(Ta[2]),
								U = Ta[3] || "px";
							if(U !== "px") {
								u.style(Va, Ya, (Ab || 1) + U);
								sb = (Ab || 1) / tb.cur() * sb;
								u.style(Va, Ya, sb + U)
							}
							if(Ta[1]) Ab = (Ta[1] === "-=" ? -1 : 1) * Ab + sb;
							tb.custom(sb, Ab, U)
						} else tb.custom(sb, hb, "")
					}
				});
				return true
			})
		},
		stop: function(z, A) {
			var H = u.timers;
			z && this.queue([]);
			this.each(function() {
				for(var P = H.length - 1; P >= 0; P--) if(H[P].elem === this) {
					A && H[P](true);
					H.splice(P, 1)
				}
			});
			A || this.dequeue();
			return this
		}
	});
	u.each({
		slideDown: x("show", 1),
		slideUp: x("hide", 1),
		slideToggle: x("toggle", 1),
		fadeIn: {
			opacity: "show"
		},
		fadeOut: {
			opacity: "hide"
		},
		fadeToggle: {
			opacity: "toggle"
		}
	}, function(z, A) {
		u.fn[z] = function(H, P, T) {
			return this.animate(A, H, P, T)
		}
	});
	u.extend({
		speed: function(z, A, H) {
			var P = z && typeof z === "object" ? u.extend({}, z) : {
				complete: H || !H && A || u.isFunction(z) && z,
				duration: z,
				easing: H && A || A && !u.isFunction(A) && A
			};
			P.duration = u.fx.off ? 0 : typeof P.duration === "number" ? P.duration : P.duration in u.fx.speeds ? u.fx.speeds[P.duration] : u.fx.speeds._default;
			P.old = P.complete;
			P.complete = function() {
				P.queue !== false && u(this).dequeue();
				u.isFunction(P.old) && P.old.call(this)
			};
			return P
		},
		easing: {
			linear: function(z, A, H, P) {
				return H + P * z
			},
			swing: function(z, A, H, P) {
				return(-Math.cos(z * Math.PI) / 2 + 0.5) * P + H
			}
		},
		timers: [],
		fx: function(z, A, H) {
			this.options = A;
			this.elem = z;
			this.prop = H;
			if(!A.orig) A.orig = {}
		}
	});
	u.fx.prototype = {
		update: function() {
			this.options.step && this.options.step.call(this.elem, this.now, this);
			(u.fx.step[this.prop] || u.fx.step._default)(this)
		},
		cur: function() {
			if(this.elem[this.prop] != null && (!this.elem.style || this.elem.style[this.prop] == null)) return this.elem[this.prop];
			var z = parseFloat(u.css(this.elem, this.prop));
			return z && z > -1E4 ? z : 0
		},
		custom: function(z, A, H) {
			function P(ka) {
				return T.step(ka)
			}
			var T = this,
				W = u.fx;
			this.startTime = u.now();
			this.start = z;
			this.end = A;
			this.unit = H || this.unit || "px";
			this.now = this.start;
			this.pos = this.state = 0;
			P.elem = this.elem;
			if(P() && u.timers.push(P) && !gb) gb = setInterval(W.tick, W.interval)
		},
		show: function() {
			this.options.orig[this.prop] = u.style(this.elem, this.prop);
			this.options.show = true;
			this.custom(this.prop === "width" || this.prop === "height" ? 1 : 0, this.cur());
			u(this.elem).show()
		},
		hide: function() {
			this.options.orig[this.prop] = u.style(this.elem, this.prop);
			this.options.hide = true;
			this.custom(this.cur(), 0)
		},
		step: function(z) {
			var A = u.now(),
				H = true;
			if(z || A >= this.options.duration + this.startTime) {
				this.now = this.end;
				this.pos = this.state = 1;
				this.update();
				this.options.curAnim[this.prop] = true;
				for(var P in this.options.curAnim) if(this.options.curAnim[P] !== true) H = false;
				if(H) {
					if(this.options.overflow != null && !u.support.shrinkWrapBlocks) {
						var T = this.elem,
							W = this.options;
						u.each(["", "X", "Y"], function(ja, wa) {
							T.style["overflow" + wa] = W.overflow[ja]
						})
					}
					this.options.hide && u(this.elem).hide();
					if(this.options.hide || this.options.show) for(var ka in this.options.curAnim) u.style(this.elem, ka, this.options.orig[ka]);
					this.options.complete.call(this.elem)
				}
				return false
			} else {
				z = A - this.startTime;
				this.state = z / this.options.duration;
				A = this.options.easing || (u.easing.swing ? "swing" : "linear");
				this.pos = u.easing[this.options.specialEasing && this.options.specialEasing[this.prop] || A](this.state, z, 0, 1, this.options.duration);
				this.now = this.start + (this.end - this.start) * this.pos;
				this.update()
			}
			return true
		}
	};
	u.extend(u.fx, {
		tick: function() {
			for(var z = u.timers, A = 0; A < z.length; A++) z[A]() || z.splice(A--, 1);
			z.length || u.fx.stop()
		},
		interval: 13,
		stop: function() {
			clearInterval(gb);
			gb = null
		},
		speeds: {
			slow: 600,
			fast: 200,
			_default: 400
		},
		step: {
			opacity: function(z) {
				u.style(z.elem, "opacity", z.now)
			},
			_default: function(z) {
				if(z.elem.style && z.elem.style[z.prop] != null) {
					if(isNaN(z.now)) z.now = 0;
					z.elem.style[z.prop] = (z.prop === "width" || z.prop === "height" ? Math.max(0, z.now) : z.now) + z.unit
				} else z.elem[z.prop] = z.now
			}
		}
	});
	if(u.expr && u.expr.filters) u.expr.filters.animated = function(z) {
		return u.grep(u.timers, function(A) {
			return z === A.elem
		}).length
	};
	var Fb = /^t(?:able|d|h)$/i,
		ub = /^(?:body|html)$/i;
	u.fn.offset = "getBoundingClientRect" in B.documentElement ?
	function(z) {
		var A = this[0],
			H;
		if(z) return this.each(function(ka) {
			u.offset.setOffset(this, z, ka)
		});
		if(!A || !A.ownerDocument) return null;
		if(A === A.ownerDocument.body) return u.offset.bodyOffset(A);
		try {
			H = A.getBoundingClientRect()
		} catch(P) {}
		var T = A.ownerDocument,
			W = T.documentElement;
		if(!H || !u.contains(W, A)) return H || {
			top: 0,
			left: 0
		};
		A = T.body;
		T = D(T);
		return {
			top: H.top + (T.pageYOffset || u.support.boxModel && W.scrollTop || A.scrollTop) - (W.clientTop || A.clientTop || 0),
			left: H.left + (T.pageXOffset || u.support.boxModel && W.scrollLeft || A.scrollLeft) - (W.clientLeft || A.clientLeft || 0)
		}
	} : function(z) {
		var A = this[0];
		if(z) return this.each(function(Va) {
			u.offset.setOffset(this, z, Va)
		});
		if(!A || !A.ownerDocument) return null;
		if(A === A.ownerDocument.body) return u.offset.bodyOffset(A);
		u.offset.initialize();
		var H, P = A.offsetParent,
			T = A.ownerDocument,
			W = T.documentElement,
			ka = T.body;
		H = (T = T.defaultView) ? T.getComputedStyle(A, null) : A.currentStyle;
		for(var ja = A.offsetTop, wa = A.offsetLeft;
		(A = A.parentNode) && A !== ka && A !== W;) {
			if(u.offset.supportsFixedPosition && H.position === "fixed") break;
			H = T ? T.getComputedStyle(A, null) : A.currentStyle;
			ja -= A.scrollTop;
			wa -= A.scrollLeft;
			if(A === P) {
				ja += A.offsetTop;
				wa += A.offsetLeft;
				if(u.offset.doesNotAddBorder && !(u.offset.doesAddBorderForTableAndCells && Fb.test(A.nodeName))) {
					ja += parseFloat(H.borderTopWidth) || 0;
					wa += parseFloat(H.borderLeftWidth) || 0
				}
				P = A.offsetParent
			}
			if(u.offset.subtractsBorderForOverflowNotVisible && H.overflow !== "visible") {
				ja += parseFloat(H.borderTopWidth) || 0;
				wa += parseFloat(H.borderLeftWidth) || 0
			}
			H = H
		}
		if(H.position === "relative" || H.position === "static") {
			ja += ka.offsetTop;
			wa += ka.offsetLeft
		}
		if(u.offset.supportsFixedPosition && H.position === "fixed") {
			ja += Math.max(W.scrollTop, ka.scrollTop);
			wa += Math.max(W.scrollLeft, ka.scrollLeft)
		}
		return {
			top: ja,
			left: wa
		}
	};
	u.offset = {
		initialize: function() {
			var z = B.body,
				A = B.createElement("div"),
				H, P, T, W = parseFloat(u.css(z, "marginTop")) || 0;
			u.extend(A.style, {
				position: "absolute",
				top: 0,
				left: 0,
				margin: 0,
				border: 0,
				width: "1px",
				height: "1px",
				visibility: "hidden"
			});
			A.innerHTML = "<div style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;'><div></div></div><table style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;' cellpadding='0' cellspacing='0'><tr><td></td></tr></table>";
			z.insertBefore(A, z.firstChild);
			H = A.firstChild;
			P = H.firstChild;
			T = H.nextSibling.firstChild.firstChild;
			this.doesNotAddBorder = P.offsetTop !== 5;
			this.doesAddBorderForTableAndCells = T.offsetTop === 5;
			P.style.position = "fixed";
			P.style.top = "20px";
			this.supportsFixedPosition = P.offsetTop === 20 || P.offsetTop === 15;
			P.style.position = P.style.top = "";
			H.style.overflow = "hidden";
			H.style.position = "relative";
			this.subtractsBorderForOverflowNotVisible = P.offsetTop === -5;
			this.doesNotIncludeMarginInBodyOffset = z.offsetTop !== W;
			z.removeChild(A);
			u.offset.initialize = u.noop
		},
		bodyOffset: function(z) {
			var A = z.offsetTop,
				H = z.offsetLeft;
			u.offset.initialize();
			if(u.offset.doesNotIncludeMarginInBodyOffset) {
				A += parseFloat(u.css(z, "marginTop")) || 0;
				H += parseFloat(u.css(z, "marginLeft")) || 0
			}
			return {
				top: A,
				left: H
			}
		},
		setOffset: function(z, A, H) {
			var P = u.css(z, "position");
			if(P === "static") z.style.position = "relative";
			var T = u(z),
				W = T.offset(),
				ka = u.css(z, "top"),
				ja = u.css(z, "left"),
				wa = P === "absolute" && u.inArray("auto", [ka, ja]) > -1;
			P = {};
			var Va = {};
			if(wa) Va = T.position();
			ka = wa ? Va.top : parseInt(ka, 10) || 0;
			ja = wa ? Va.left : parseInt(ja, 10) || 0;
			if(u.isFunction(A)) A = A.call(z, H, W);
			if(A.top != null) P.top = A.top - W.top + ka;
			if(A.left != null) P.left = A.left - W.left + ja;
			"using" in A ? A.using.call(z, P) : T.css(P)
		}
	};
	u.fn.extend({
		position: function() {
			if(!this[0]) return null;
			var z = this[0],
				A = this.offsetParent(),
				H = this.offset(),
				P = ub.test(A[0].nodeName) ? {
					top: 0,
					left: 0
				} : A.offset();
			H.top -= parseFloat(u.css(z, "marginTop")) || 0;
			H.left -= parseFloat(u.css(z, "marginLeft")) || 0;
			P.top += parseFloat(u.css(A[0], "borderTopWidth")) || 0;
			P.left += parseFloat(u.css(A[0], "borderLeftWidth")) || 0;
			return {
				top: H.top - P.top,
				left: H.left - P.left
			}
		},
		offsetParent: function() {
			return this.map(function() {
				for(var z = this.offsetParent || B.body; z && !ub.test(z.nodeName) && u.css(z, "position") === "static";) z = z.offsetParent;
				return z
			})
		}
	});
	u.each(["Left", "Top"], function(z, A) {
		var H = "scroll" + A;
		u.fn[H] = function(P) {
			var T = this[0],
				W;
			if(!T) return null;
			if(P !== e) return this.each(function() {
				if(W = D(this)) W.scrollTo(!z ? P : u(W).scrollLeft(), z ? P : u(W).scrollTop());
				else this[H] = P
			});
			else return(W = D(T)) ? "pageXOffset" in W ? W[z ? "pageYOffset" : "pageXOffset"] : u.support.boxModel && W.document.documentElement[H] || W.document.body[H] : T[H]
		}
	});
	u.each(["Height", "Width"], function(z, A) {
		var H = A.toLowerCase();
		u.fn["inner" + A] = function() {
			return this[0] ? parseFloat(u.css(this[0], H, "padding")) : null
		};
		u.fn["outer" + A] = function(P) {
			return this[0] ? parseFloat(u.css(this[0], H, P ? "margin" : "border")) : null
		};
		u.fn[H] = function(P) {
			var T = this[0];
			if(!T) return P == null ? null : this;
			if(u.isFunction(P)) return this.each(function(ka) {
				var ja = u(this);
				ja[H](P.call(this, ka, ja[H]()))
			});
			if(u.isWindow(T)) return T.document.compatMode === "CSS1Compat" && T.document.documentElement["client" + A] || T.document.body["client" + A];
			else if(T.nodeType === 9) return Math.max(T.documentElement["client" + A], T.body["scroll" + A], T.documentElement["scroll" + A], T.body["offset" + A], T.documentElement["offset" + A]);
			else if(P === e) {
				T = u.css(T, H);
				var W = parseFloat(T);
				return u.isNaN(W) ? T : W
			} else return this.css(H, typeof P === "string" ? P : P + "px")
		}
	})
})(window);
var loginData = {};
SUPPRESS_ERROR_DISPLAY = false;
jQuery.ajaxSettings.traditional = true;
$.ajaxSetup({
	cache: false,
	type: "POST",
	dataType: "text",
	timeout: 6E4
});

function printData(a) {
	return a ? typeof a == "string" ? a : $.param(a) : ""
}
_defaultAJAXErrorHandler = function(a, e, g, c) {
	c || (c = {});
	var d = {
		login: "Your login session has expired: Please wait",
		permission: "You do not have the proper permission to complete the operations",
		notfound: "There was an internal error processing your request (Resource Not Found)",
		dynamic: "There was an internal error processing your request (Dynamic Module Error)",
		controller: "There was an internal error processing your request (Contorller Error)",
		timeout: "There was no response from the server",
		other: "There was an internal error processing your request"
	},
		b = function(o) {
			SUPPRESS_ERROR_DISPLAY ? console_log("Error suppressed: ", o) : showError(o)
		},
		f = false;
	if(a.readyState === 4) try {
		f = true;
		if(a.responseText !== undefined) f = false
	} catch(j) {
		f = true
	}
	if(!f) {
		if(e == "timeout") b("Server timed out while executing this request");
		else if(a.status == 401) if(a.getResponseHeader("X-Reason") == "Role Failed") if(loginData.devbox && c.url) b(d.permission + " url: " + c.url + " data: " + printData(c.data));
		else loginData.demo || b(d.permission);
		else {
			b(d.login);
			location.reload()
		} else if(a.status == 404) loginData.devbox && c.url ? b(d.notfound + " url: " + c.url + " data: " + printData(c.data)) : b(d.notfound);
		else if(a.getResponseHeader("X-Reason") == "Role Failed") if(!loginData.demo && loginData.devbox && c.url) b(d.permission + " url: " + c.url + " data: " + printData(c.data));
		else loginData.demo || b(d.permission);
		else if(a.getResponseHeader("X-Error-Source") == "catalyst") {
			f = $.parseJSON(a.responseText);
			if(f.errors) for(var n in f.errors) b(f.errors[n]);
			else if(f.error && $.isPlainObject(f.error)) for(var l in f.error) typeof f.error[l] === "string" && b(errorTextConvert(f.error[l]));
			else if(f.error) b(f.error);
			else loginData.devbox && c.url ? b(d.controller + " url: " + c.url + " data: " + printData(c.data)) : b(d.controller)
		} else if(a.getResponseHeader("X-Error-Source") == "dynamic") {
			f = $.parseJSON(a.responseText);
			if(f.errors) for(n in f.errors) loginData.devbox ? b(f.errors[n].text + " " + f.errors[n].verbose) : b(f.errors[n].text);
			else loginData.devbox && c.url ? b(d.dynamic + " url: " + c.url + " data: " + printData(c.data)) : b(d.dynamic)
		} else a.status == 0 || !a || (loginData.devbox && c.url ? b(d.other + " url: " + c.url + " data: " + printData(c.data)) : b(d.other));
		c.afterError && c.afterError(a, e, g)
	}
};
$.ajax_orig = $.ajax;
$.ajax = function(a) {
	if(!a.error) a.error = function(e, g, c) {
		_defaultAJAXErrorHandler(e, g, c, a)
	};
	if((!a.data || a.data == {} || a.data == "" || a.data == []) && (a.type == "POST" || !a.type)) a.type = "GET";
	if(a.accept) a.beforeSend = function(e) {
		e.setRequestHeader("Accept", a.accept)
	};
	return $.ajax_orig(a)
};
$.doREST = function(a, e, g, c) {
	if(typeof g == "function") {
		c = g;
		g = ""
	}
	g || (g = "");
	c || (c = {});
	a = {
		url: e,
		data: g,
		type: a,
		accept: "application/json",
		dataType: "json"
	};
	if(typeof c == "function") c = {
		success: c
	};
	$.extend(a, c);
	return $.ajax(a)
};
$.getREST = function(a, e, g) {
	return $.doREST("GET", a, e, g)
};
$.putREST = function(a, e, g) {
	return $.doREST("PUT", a, e, g)
};
$.postREST = function(a, e, g) {
	return $.doREST("POST", a, e, g)
};
$.deleteREST = function(a, e, g) {
	return $.doREST("DELETE", a, e, g)
};
(function() {
	var a = {};
	$.getJSONCached = function(e, g, c, d) {
		var b = "GET:" + e + "?" + $.param(g),
			f = a[b];
		if(f && f.time + c >= (new Date).getTime()) f.loaded ? d(a[b].data) : f.callbacks.push(d);
		else {
			a[b] = {
				loaded: false,
				time: (new Date).getTime(),
				callbacks: []
			};
			f = a[b];
			$.getJSON(e, g, function(j) {
				f.data = j;
				f.loaded = true;
				d(j);
				for(var n in f.callbacks) f.callbacks[n](j);
				f.callbacks = []
			})
		}
	}
})();

function IDManager() {
	this.IDs = [];
	this.nextID = function() {
		this.IDs.length == 0 ? this.IDs.push(1) : this.IDs.push(this.lastID() + 1);
		return this.lastID()
	};
	this.lastID = function() {
		if(this.IDs != 0) {
			var a = this.IDs.pop();
			this.IDs.push(a);
			return a
		} else return null
	}
}
AsyncSequencer.prototype.IDManager = new IDManager;

function AsyncSequencer() {
	var a = [],
		e = this;
	this.getActiveProcessList = function() {
		var j = e.getProcessQueue(),
			n = "",
			l;
		for(l in j) if(j[l].processHandler != "") n += j[l].pid + " " + j[l].process.prototype.constructor.name + " " + j[l].priority + "\n";
		return n
	};
	this.getAllProcessList = function() {
		var j = e.getProcessQueue(),
			n = "",
			l;
		for(l in j) n += j[l].pid + " " + j[l].process.prototype.constructor.name + " " + j[l].priority + "\n";
		return n
	};
	var g = function(j, n, l, o, q, v) {
			if(typeof j != "number") j = -1;
			if(typeof n != "function") n = function() {};
			if(typeof l != "object") l = [];
			if(typeof o != "number" && typeof o != "undefined") o = 1E3;
			this.pid = j;
			this.process = n;
			this.args = l;
			this.priority = o;
			this.processHandler = "";
			if(typeof q == "function") this.cleanup = q;
			this.cleanupArgs = v
		};
	this.getProcessQueue = function() {
		return a
	};
	this.enQueueProcess = function(j, n, l, o, q) {
		var v = this.IDManager.nextID();
		a.push(new g(v, j, n, l, o, q));
		return v
	};
	this.enQueueStart = function(j, n, l, o, q) {
		var v = this.IDManager.nextID();
		a.push(new g(v, j, n, l, o, q));
		this.startProcess(v);
		return v
	};
	var c = function() {
			var j = [],
				n;
			for(n in a) a[n].process != null && j.push(a[n]);
			a = j
		},
		d = function(j) {
			for(var n in a) if(j == a[n].pid) {
				clearInterval(a[n].processHandler);
				a[n].processHandler = "";
				a[n].process = null;
				c();
				return true
			}
			return false
		};
	this.deQueueProcess = d;
	this.deQueueAll = function() {
		for(var j in a) {
			clearInterval(a[j].processHandler);
			a[j].processHandler = "";
			a[j].process = null
		}
		c();
		internalLister()
	};
	this.killProcess = function(j) {
		for(var n in a) if(j == a[n].pid) {
			clearInterval(a[n].processHandler);
			a[n].processHandler = "";
			return true
		}
		return false
	};
	this.killAll = function() {
		for(var j in a) if(a[j].processHander != "") {
			clearInterval(a[j].processHandler);
			a[j].processHandler = ""
		}
	};
	this.startProcess = function(j) {
		for(var n in a) if(j == a[n].pid && a[n].processHandler == "") {
			a[n].processHandler = f(a[n]);
			return true
		}
		return false
	};
	this.spawnProcesses = function() {
		for(var j in a) if(a[j].processHandler == "") a[j].processHandler = f(a[j])
	};
	var b = function(j, n) {
			this.pid = j;
			this.handler = n
		};
	this.getProcessHandler = function(j) {
		var n = [],
			l;
		for(l in a) j == a[l].process.prototype.constructor.name && n.push(new b(a[l].pid, a[l].processHandler));
		return n.length > 1 ? n : n[0]
	};
	this.stopSpawnedProcess = function(j) {
		var n = false,
			l;
		for(l in a) if(j == a[l].process.prototype.constructor.name) {
			clearInterval(a[l].processHandler);
			a[l].processHandler = "";
			n = true
		}
		return n
	};
	var f = function(j) {
			var n = false,
				l, o = 0;
			if(typeof j.priority == "number") l = j.priority;
			else {
				l = 100;
				o = 1
			}
			return setInterval(function() {
				var q = [],
					v;
				for(v in j.args) typeof j.args[v] == "function" ? q.push(j.args[v]()) : q.push(j.args[v]);
				if(!n) {
					n = true;
					j.process.apply(null, q);
					j.cleanup && typeof j.cleanup == "function" && j.cleanup(j.cleanupArgs);
					o && d(j.pid);
					n = false
				}
			}, l)
		}
}

function jSoffGlobal() {
	var a = new AsyncSequencer;
	this.windowMan = new function() {
		this.entity = function() {}
	};
	var e = new function() {
			function f(x) {
				return l.lastCC[x] || 0
			}
			function j(x) {
				var y = 0;
				if(l.bindings[x] && "count" in l.bindings[x]) y += l.bindings[x].count;
				if(l.contextBindings[x] && "length" in l.contextBindings[x]) y += l.contextBindings[x].length;
				if(l.bindings[x]) for(var D in l.bindings[x]) if(D != "count") y += l.bindings[x][D].length;
				D = f(x);
				l.lastCC[x] = y;
				v(x, y, D)
			}
			function n(x, y) {
				var D = false;
				if(!x) return false;
				var B = [],
					u;
				for(u in x) if(x[u] != y) B.push(x[u]);
				else D = true;
				return D ? B : undefined
			}
			var l = {
				lastCC: {},
				bindings: {},
				globalBindings: [],
				contextBindings: {}
			},
				o = "none",
				q = 0,
				v = function() {};
			this.contextUseCount = f;
			this.lastError = function() {
				return o
			};
			this.onContextChange = function(x) {
				if(typeof x != "function") {
					o = "INVALID FUNCTION!";
					return false
				}
				v = x;
				return true
			};
			this.unBind = function(x) {
				if(typeof x == "object" && "length" in x) {
					var y = false,
						D;
					for(D in x) if(this.unBind(x[D])) y = true;
					return y
				}
				D = undefined;
				if(y = l.globalBindings) if(D = n(y, x)) {
					delete l.globalBindings;
					l.globalBindings = D;
					return true
				}
				if(!D) if(y = l.contextBindings[x.context]) if(D = n(y, x)) {
					delete l.contextBindings[x.context];
					l.contextBindings[x.context] = D;
					j(x.context);
					return true
				}
				if(!D && l.bindings[x.context]) if(y = l.bindings[x.context][x.name]) if(D = n(y, x)) {
					delete l.bindings[x.context][x.name];
					l.bindings[x.context][x.name] = D;
					j(x.context)
				}
				return D ? true : false
			};
			this.reserveContext = function(x) {
				if(!x || typeof x != "string") {
					o = "Missing context or invalid type";
					return false
				}
				l.bindings[x] || (l.bindings[x] = {
					count: 0
				});
				l.bindings[x].count++;
				j(x);
				return true
			};
			this.unReserveContext = function(x) {
				if(!x || typeof x != "string") {
					o = "Missing context or invalid type";
					return false
				}
				if(!l.bindings[x]) {
					o = "Non-existant context";
					return false
				}
				l.bindings[x].count--;
				if(l.bindings[x].count < 0) l.bindings[x].count = 0;
				j(x)
			};
			this.bindGlobal = function(x, y) {
				if(!x || typeof x != "function") o = "Missing callBack or invalid type";
				else {
					var D = {
						name: "ALL",
						context: "ALL",
						callBack: x,
						userData: y,
						nodeID: ++q
					};
					l.globalBindings.push(D);
					return D
				}
			};
			this.bindContext = function(x, y, D) {
				if(typeof x == "object") {
					var B = [],
						u;
					for(u in x) {
						B.push(this.bindContext(x[u], y, D));
						j(x[u])
					}
					return B
				}
				if(!x || typeof x != "string") o = "Missing context or invalid type " + typeof x;
				else if(!y || typeof y != "function") o = "Missing callBack or invalid type";
				else {
					y = {
						name: "ALL",
						context: x,
						callBack: y,
						userData: D,
						nodeID: ++q
					};
					l.contextBindings[x] || (l.contextBindings[x] = []);
					l.contextBindings[x].push(y);
					j(x);
					return y
				}
			};
			this.bind = function(x, y, D, B) {
				if(!x || typeof x != "string") o = "Missing context or invalid type";
				else {
					if(typeof y == "object") {
						var u = [],
							F;
						for(F in y) {
							u.push(this.bind(x, y[F], D, B));
							j(x)
						}
						return u
					}
					if(!y || typeof y != "string") o = "Missing name or invaild type";
					else if(!D || typeof D != "function") o = "Missing callBack or invalid type";
					else {
						l.bindings[x] || (l.bindings[x] = {
							count: 0
						});
						l.bindings[x][y] || (l.bindings[x][y] = []);
						D = {
							name: y,
							context: x,
							callBack: D,
							userData: B,
							nodeID: ++q
						};
						l.bindings[x][y].push(D);
						j(D.context);
						return D
					}
				}
			};
			this.event = function(x, y) {
				function D(B, u) {
					for(var F = B.length, I = 0, C = 0; C < F; C++) {
						a.enQueueProcess(B[C].callBack, [u, B[C].userData], undefined, u.destroy);
						I++
					}
					I && a.spawnProcesses();
					return I
				}
				if(!x || typeof x != "string") {
					o = "Missing context or invalid type";
					return false
				}
				if(!y || typeof y != "string") {
					o = "Missing name or invaild type";
					return false
				}
				this.name = y;
				this.context = x;
				this.destroy = function() {
					delete this.body;
					delete this.name;
					delete this.context;
					delete this.fire;
					this.error = "This event has already been fired."
				};
				this.fire = function() {
					var B, u = 0;
					if(this.error) return false;
					if(B = l.globalBindings) u += D(B, this);
					if(B = l.contextBindings[this.context]) u += D(B, this);
					if(l.bindings[this.context]) if(B = l.bindings[this.context][this.name]) u += D(B, this);
					return u
				};
				if(l.globalBindings.length == 0 && (!l.contextBindings[this.context] || l.contextBindings[this.context].length == 0)) if(!l.bindings[this.context] || !l.bindings[this.context][this.name] && !l.bindings[this.context]._ALL) {
					this.error = o = "no binding exists for this context/name " + this.context + "/" + this.name;
					return false
				}
				return true
			}
		};
	this.eventSys = e;
	var g = function() {
			var f = {},
				j = [];
			this.reorder = function(n) {
				j = n;
				n = f;
				f = {};
				for(var l = j.length, o = 0; o < l; o++) {
					var q = j[o];
					if(n[q]) {
						f[q] = n[q];
						delete n[q]
					}
				}
			};
			this.clear = function() {
				j = f = undefined;
				f = {};
				j = []
			};
			this.add = function(n, l, o) {
				if(!f[n]) if(o < 0 || o >= j.length) j.push(n);
				else {
					for(var q = 0, v = [], x = j.length, y = 0; y < x; y++) {
						q++ == o && v.push(n);
						v.push(j[y])
					}
					j = undefined;
					j = v
				}
				f[n] = l
			};
			this.del = function(n) {
				if(f[n]) {
					for(var l = j, o = [], q = l.length, v = 0; v < q; v++) l[v] != n && o.push(l[v]);
					j = o;
					delete f[n]
				}
			};
			this.get = function(n) {
				return f[n]
			};
			this.order = function() {
				return j
			};
			this.hash = function() {
				return f
			};
			this.indexOf = function(n) {
				for(var l = j.length, o = 0; o < l; o++) if(j[o] == n) return o
			};
			this.arrayLen = function() {
				return j.length
			};
			this.asArray = function() {
				for(var n = [], l = j.length, o = 0; o < l; o++) n.push(f[j[o]]);
				return n
			};
			this.each = function(n) {
				for(var l = j.length, o = 0; o < l; o++) n(j[o], f[j[o]])
			};
			this.dump = function(n) {
				var l = new String;
				this.each(function(o, q) {
					l += "name: " + o + " val: " + JSON.stringify(q) + (n ? "<br>" : "\n")
				});
				return l
			}
		},
		c = function(f, j) {
			var n = f.json;
			switch(n.action) {
			case "init":
				j.init(n.wireSerno, n.data, n.hashKey, parseInt(n.arrIndex));
				break;
			case "add":
				j.add(n.wireSerno, n.data, n.hashKey, parseInt(n.arrIndex));
				break;
			case "modify":
				j.modify(n.wireSerno, n.data, n.hashKey, parseInt(n.arrIndex));
				break;
			case "del":
				j.del(n.wireSerno, n.hashKey, parseInt(n.arrIndex));
				break;
			case "clear":
				j.clear();
				break;
			case "reorder":
				j.reorder(n.wireSerno, n.order);
				break;
			default:
				j.checkSerno(n.wireSerno) && j.onChange && j.onChange(j, {
					serno: n.wireSerno,
					action: n.action,
					data: n.data
				})
			}
		},
		d = function(f, j, n) {
			var l = 0,
				o = null;
			g.call(this);
			this._add = this.add;
			this._del = this.del;
			this._reorder = this.reorder;
			this._clear = this.clear;
			this.context = f;
			this.name = j;
			this.user_obj = n;
			this.clear = function() {
				this._clear();
				l = 0;
				this.onChange && this.onChange(this, {
					action: "clear"
				})
			};
			this.checkSerno = function(q) {
				if(q < 0) return true;
				if(l > 0 && q != l + 1) {
					this.onErr && this.onErr(this, {
						lastSerno: l,
						serno: q
					});
					this.bootstrap(this.user_obj);
					return false
				} else {
					l = q;
					return true
				}
			};
			this.reorder = function(q, v) {
				if(this.checkSerno(q)) {
					this._reorder(v);
					this.onChange && this.onChange(this, {
						serno: q,
						action: "reorder"
					})
				}
			};
			this.init = function(q, v, x, y) {
				if(x === null || x === undefined) x = q;
				this.checkSerno(q) && this.onChange && this.onChange(this, {
					serno: q,
					action: "init",
					index: y,
					key: x,
					data: v
				})
			};
			this.add = function(q, v, x, y) {
				if(x === null || x === undefined) x = q;
				if(this.checkSerno(q)) {
					this._add(x, v, y);
					this.onChange && this.onChange(this, {
						serno: q,
						action: "add",
						index: y,
						key: x,
						data: v
					})
				}
			};
			this.modify = function(q, v, x, y) {
				if(x === null || x === undefined) x = q;
				if(this.checkSerno(q)) {
					this._add(x, v, y);
					this.onChange && this.onChange(this, {
						serno: q,
						action: "modify",
						key: x,
						data: v,
						index: y
					})
				}
			};
			this.del = function(q, v, x) {
				if(v === null || v === undefined) v = q;
				if(this.checkSerno(q)) {
					if(x === null || x < 0 || x === undefined) x = this.indexOf(v);
					this._del(v);
					this.onChange && this.onChange(this, {
						serno: q,
						action: "del",
						key: v,
						index: x
					})
				}
			};
			if(f) o = j ? e.bind(f, j, c, this) : e.bindContext(f, c, this);
			this.destroy = function() {
				this._clear();
				e.unBind(o);
				clearTimeout(this.hb_pid)
			};
			this.bootstrap = function(q) {
				var v = this;
				v.clear();
				Ape.broadcast({
					liveArray: {
						command: "bootstrap",
						context: v.context,
						name: v.name,
						obj: q
					}
				});
				v.hb_pid = setTimeout(function() {
					v.heartbeat.call(v, q)
				}, 3E4)
			};
			this.changepage = function(q) {
				this.clear();
				Ape.broadcast({
					liveArray: {
						command: "changepage",
						context: this.context,
						name: this.name,
						obj: q
					}
				})
			};
			this.heartbeat = function(q) {
				var v = this;
				Ape.broadcast({
					liveArray: {
						command: "heartbeat",
						context: v.context,
						name: v.name,
						obj: q
					}
				});
				v.hb_pid = setTimeout(function() {
					v.heartbeat.call(v, q)
				}, 3E4)
			};
			this.bootstrap(this.user_obj)
		};
	this.liveArray = d;
	this.liveTable = function(f, j, n, l) {
		var o = undefined;
		n = n;
		l = l;
		var q = new d(f, j);
		this.liveArray = q;
		this.dataTable = o;
		this.destroy = function() {
			o && o.fnDestroy();
			q && q.destroy();
			delete o;
			delete q;
			q = o = null
		};
		q.onErr = function(v, x) {
			console_log("Error: ", v, x)
		};
		q.onChange = function(v, x) {
			var y;
			if(!o) {
				if(!l.aoColumns) {
					if(x.action != "init") return;
					l.aoColumns = [];
					for(var D in x.data) l.aoColumns.push({
						sTitle: x.data[D]
					})
				}
				o = n.dataTable(l)
			}
			if(o && (x.action == "del" || x.action == "modify")) {
				y = x.index;
				if(y == undefined && x.key) y = q.indexOf(x.key)
			}
			try {
				switch(x.action) {
				case "add":
					if(!x.data) return;
					if(x.pos > -1) {
						o.fnClearTable();
						o.fnAddData(v.asArray())
					} else o.fnAddData(x.data);
					break;
				case "modify":
					if(!x.data) return;
					o.fnUpdate(x.data, y);
					break;
				case "del":
					o.fnDeleteRow(y);
					break;
				case "clear":
					o.fnClearTable();
					break;
				case "reorder":
					o.fnClearTable();
					o.fnAddData(v.asArray());
					break;
				case "hide":
					n.hide();
					break;
				case "show":
					n.show()
				}
			} catch(B) {
				v.bootstrap(v.user_obj);
				console_log("ERROR: " + B)
			}
			l.onChange && l.onChange(v, x)
		}
	};
	this.liveAccordion = function(f, j, n, l) {
		function o(q, v, x, y) {
			q.each(function(D, B) {
				x.append("<div><" + y + '><a href="#">' + B[0] + "</a></" + y + "><div>" + B[1] + "</div></div>")
			})
		}
		n = n;
		l = l;
		f = new d(f, j);
		this.destroy = function() {};
		f.onErr = function(q, v) {
			console_log("Error: ", q, v)
		};
		f.onChange = function(q, v) {
			console_log(v.action);
			if(v.action == "hide") n.hide();
			else if(v.action == "show") n.show();
			else {
				n.accordion("destroy").html("");
				o(q, v, n, l.header);
				n.accordion(l)
			}
		}
	};
	this.liveComplete = function(f, j, n) {
		var l;
		e.bind(f, j, function(o) {
			l(o.json.matches)
		});
		n.autocomplete({
			source: function(o, q) {
				l = q;
				Ape.broadcast({
					Complete: {
						command: "complete",
						text: o.term,
						context: f,
						name: j
					}
				})
			}
		})
	};
	var b = 0;
	this.liveLog = function() {
		$("body").append("<div id='logdiv" + b + "' ><pre id='logpre" + b + "'></pre></div>");
		var f = $("#logdiv" + b),
			j = $("#logpre" + b),
			n = ["#aaaaaa", "#aa0000", "#aa0000", "#aa0000", "#aa00aa", "#00aaaa", "#00aa00", "#ffff44"],
			l, o = false;
		b++;
		this.open = function() {
			if(!o) {
				o = true;
				f.css({
					width: "90%",
					height: "500px",
					overflow: "auto",
					"background-color": "black",
					"font-family": "courier",
					size: "10pt"
				}).dialog({
					width: "90%",
					height: 500,
					title: "LOGGER",
					beforeClose: function() {
						jSoff.eventSys.unBind(l);
						j.text(" ");
						o = false
					}
				});
				l = jSoff.eventSys.bind("liveLogs", "FSLOG", function(q) {
					j.append($("<span />").text(q.json.logData).css({
						color: n[q.json.logLevel]
					}));
					f.scrollTo("max", 0, {
						axis: "y"
					})
				})
			}
		}
	}
}
jSoff = new jSoffGlobal;
ERROR_KEY_TO_VALUE = {
	en_US: {
		PHONE_ALREADY_ASSIGNED: "This phone already exists on the system, and cannot be added again"
	}
};

function errorTextConvert(a, e) {
	return ERROR_KEY_TO_VALUE[e || "en_US"][a] || a
};
var swfobject = function() {
		function a() {
			if(!cb) {
				try {
					var O = N.getElementsByTagName("body")[0].appendChild(N.createElement("span"));
					O.parentNode.removeChild(O)
				} catch(S) {
					return
				}
				cb = true;
				O = pa.length;
				for(var Z = 0; Z < O; Z++) pa[Z]()
			}
		}
		function e(O) {
			if(cb) O();
			else pa[pa.length] = O
		}
		function g(O) {
			if(typeof Q.addEventListener != F) Q.addEventListener("load", O, false);
			else if(typeof N.addEventListener != F) N.addEventListener("load", O, false);
			else if(typeof Q.attachEvent != F) x(Q, "onload", O);
			else if(typeof Q.onload == "function") {
				var S = Q.onload;
				Q.onload = function() {
					S();
					O()
				}
			} else Q.onload = O
		}
		function c() {
			var O = N.getElementsByTagName("body")[0],
				S = N.createElement(I);
			S.setAttribute("type", C);
			var Z = O.appendChild(S);
			if(Z) {
				var fa = 0;
				(function() {
					if(typeof Z.GetVariable != F) {
						var V = Z.GetVariable("$version");
						if(V) {
							V = V.split(" ")[1].split(",");
							Oa.pv = [parseInt(V[0], 10), parseInt(V[1], 10), parseInt(V[2], 10)]
						}
					} else if(fa < 10) {
						fa++;
						setTimeout(arguments.callee, 10);
						return
					}
					O.removeChild(S);
					Z = null;
					d()
				})()
			} else d()
		}
		function d() {
			var O = Ma.length;
			if(O > 0) for(var S = 0; S < O; S++) {
				var Z = Ma[S].id,
					fa = Ma[S].callbackFn,
					V = {
						success: false,
						id: Z
					};
				if(Oa.pv[0] > 0) {
					var Da = v(Z);
					if(Da) if(y(Ma[S].swfVersion) && !(Oa.wk && Oa.wk < 312)) {
						B(Z, true);
						if(fa) {
							V.success = true;
							V.ref = b(Z);
							fa(V)
						}
					} else if(Ma[S].expressInstall && f()) {
						V = {};
						V.data = Ma[S].expressInstall;
						V.width = Da.getAttribute("width") || "0";
						V.height = Da.getAttribute("height") || "0";
						if(Da.getAttribute("class")) V.styleclass = Da.getAttribute("class");
						if(Da.getAttribute("align")) V.align = Da.getAttribute("align");
						var ya = {};
						Da = Da.getElementsByTagName("param");
						for(var Ja = Da.length, ra = 0; ra < Ja; ra++) if(Da[ra].getAttribute("name").toLowerCase() != "movie") ya[Da[ra].getAttribute("name")] = Da[ra].getAttribute("value");
						j(V, ya, Z, fa)
					} else {
						n(Da);
						fa && fa(V)
					}
				} else {
					B(Z, true);
					if(fa) {
						if((Z = b(Z)) && typeof Z.SetVariable != F) {
							V.success = true;
							V.ref = Z
						}
						fa(V)
					}
				}
			}
		}
		function b(O) {
			var S = null;
			if((O = v(O)) && O.nodeName == "OBJECT") if(typeof O.SetVariable != F) S = O;
			else if(O = O.getElementsByTagName(I)[0]) S = O;
			return S
		}
		function f() {
			return !db && y("6.0.65") && (Oa.win || Oa.mac) && !(Oa.wk && Oa.wk < 312)
		}
		function j(O, S, Z, fa) {
			db = true;
			ib = fa || null;
			Ea = {
				success: false,
				id: Z
			};
			var V = v(Z);
			if(V) {
				if(V.nodeName == "OBJECT") {
					Za = l(V);
					eb = null
				} else {
					Za = V;
					eb = Z
				}
				O.id = M;
				if(typeof O.width == F || !/%$/.test(O.width) && parseInt(O.width, 10) < 310) O.width = "310";
				if(typeof O.height == F || !/%$/.test(O.height) && parseInt(O.height, 10) < 137) O.height = "137";
				N.title = N.title.slice(0, 47) + " - Flash Player Installation";
				fa = Oa.ie && Oa.win ? "ActiveX" : "PlugIn";
				fa = "MMredirectURL=" + Q.location.toString().replace(/&/g, "%26") + "&MMplayerType=" + fa + "&MMdoctitle=" + N.title;
				if(typeof S.flashvars != F) S.flashvars += "&" + fa;
				else S.flashvars = fa;
				if(Oa.ie && Oa.win && V.readyState != 4) {
					fa = N.createElement("div");
					Z += "SWFObjectNew";
					fa.setAttribute("id", Z);
					V.parentNode.insertBefore(fa, V);
					V.style.display = "none";
					(function() {
						V.readyState == 4 ? V.parentNode.removeChild(V) : setTimeout(arguments.callee, 10)
					})()
				}
				o(O, S, Z)
			}
		}
		function n(O) {
			if(Oa.ie && Oa.win && O.readyState != 4) {
				var S = N.createElement("div");
				O.parentNode.insertBefore(S, O);
				S.parentNode.replaceChild(l(O), S);
				O.style.display = "none";
				(function() {
					O.readyState == 4 ? O.parentNode.removeChild(O) : setTimeout(arguments.callee, 10)
				})()
			} else O.parentNode.replaceChild(l(O), O)
		}
		function l(O) {
			var S = N.createElement("div");
			if(Oa.win && Oa.ie) S.innerHTML = O.innerHTML;
			else if(O = O.getElementsByTagName(I)[0]) if(O = O.childNodes) for(var Z = O.length, fa = 0; fa < Z; fa++)!(O[fa].nodeType == 1 && O[fa].nodeName == "PARAM") && O[fa].nodeType != 8 && S.appendChild(O[fa].cloneNode(true));
			return S
		}
		function o(O, S, Z) {
			var fa, V = v(Z);
			if(Oa.wk && Oa.wk < 312) return fa;
			if(V) {
				if(typeof O.id == F) O.id = Z;
				if(Oa.ie && Oa.win) {
					var Da = "",
						ya;
					for(ya in O) if(O0],
				S = N.createElement(I);
			S.setAttribute("type", C);
			var Z = O.appendChild(S);
			if(Z) {
				var fa = 0;
				(function() {
					if(typeof Z.GetVariable != F) {
						var V = Z.GetVariable("$version");
						if(V) {
							V = V.split(" ")[1].split(",");
							Oa.pv = [parseInt(V[0], 10), parseInt(V[1], 10), parseInt(V[2], 10)]
						}
					} else if(fa < 10) {
						fa++;
						setTimeout(arguments.callee, 10);
						return
					}
					O.removeChild(S);
					Z = null;
					d()
				})()
			} else d()
		}
		function d() {
			var O = Ma.length;
			if(O > 0) for(var S = 0; S < O; S++) {
				var Z = Ma[S].id,
					fa = Ma[S].callbackFn,
					V = {
						success: false,
						id: Z
					};
				if(Oa.pv[0] > 0) {
					var Da = v(Z);
					if(Da) if(y(Ma[S].swfVersion) && !(Oa.wk && Oa.wk < 312)) {
						B(Z, true);
						if(fa) {
							V.success = true;
							V.ref = b(Z);
							fa(V)
						}
					} else if(Ma[S].expressInstall && f()) {
						V = {};
						V.data = Ma[S].expressInstall;
						V.width = Da.getAttribute("width") || "0";
						V.height = Da.getAttribute("height") || "0";
						if(Da.getAttribute("class")) V.styleclass = Da.getAttribute("class");
						if(Da.getAttribute("align")) V.align = Da.getAttribute("align");
						var ya = {};
						Da = Da.getElementsByTagName("param");
						for(var Ja = Da.length, ra = 0; ra < Ja; ra++) if(Da[ra].getAttribute("name").toLowerCase() != "movie") ya[Da[ra].getAttribute("name")] = Da[ra].getAttribute("value");
						j(V, ya, Z, fa)
					} else {
						n(Da);
						fa && fa(V)
					}
				} else {
					B(Z, true);
					if(fa) {
						if((Z = b(Z)) && typeof Z.SetVariable != F) {
							V.success = true;
							V.ref = Z
						}
						fa(V)
					}
				}
			}
		}
		function b(O) {
			var S = null;
			if((O = v(O)) && O.nodeName == "OBJECT") if(typeof O.SetVariable != F) S = O;
			else if(O = O.getElementsByTagName(I)[0]) S = O;
			return S
		}
		function f() {
			return !db && y("6.0.65") && (Oa.win || Oa.mac) && !(Oa.wk && Oa.wk < 312)
		}
		function j(O, S, Z, fa) {
			db = true;
			ib = fa || null;
			Ea = {
				success: false,
				id: Z
			};
			var V = v(Z);
			if(V) {
				if(V.nodeName == "OBJECT") {
					Za = l(V);
					eb = null
				} else {
					Za = V;
					eb = Z
				}
				O.id = M;
				if(typeof O.width == F || !/%$/.test(O.width) && parseInt(O.width, 10) < 310) O.width = "310";
				if(typeof O.height == F || !/%$/.test(O.height) && parseInt(O.height, 10) < 137) O.height = "137";
				N.title = N.title.slice(0, 47) + " - Flash Player Installation";
				fa = Oa.ie && Oa.win ? "ActiveX" : "PlugIn";
				fa = "MMredirectURL=" + Q.location.toString().replace(/&/g, "%26") + "&MMplayerType=" + fa + "&MMdoctitle=" + N.title;
				if(typeof S.flashvars != F) S.flashvars += "&" + fa;
				else S.flashvars = fa;
				if(Oa.ie && Oa.win && V.readyState != 4) {
					fa = N.createElement("div");
					Z += "SWFObjectNew";
					fa.setAttribute("id", Z);
					V.parentNode.insertBefore(fa, V);
					V.style.display = "none";
					(function() {
						V.readyState == 4 ? V.parentNode.removeChild(V) : setTimeout(arguments.callee, 10)
					})()
				}
				o(O, S, Z)
			}
		}
		function n(O) {
			if(Oa.ie && Oa.win && O.readyState != 4) {
				var S = N.createElement("div");
				O.parentNode.insertBefore(S, O);
				S.parentNode.replaceChild(l(O), S);
				O.style.display = "none";
				(function() {
					O.readyState == 4 ? O.parentNode.removeChild(O) : setTimeout(arguments.callee, 10)
				})()
			} else O.parentNode.replaceChild(l(O), O)
		}
		function l(O) {
			var S = N.createElement("div");
			if(Oa.win && Oa.ie) S.innerHTML = O.innerHTML;
			else if(O = O.getElementsByTagName(I)[0]) if(O = O.childNodes) for(var Z = O.length, fa = 0; fa < Z; fa++)!(O[fa].nodeType == 1 && O[fa].nodeName == "PARAM") && O[fa].nodeType != 8 && S.appendChild(O[fa].cloneNode(true));
			return S
		}
		function o(O, S, Z) {
			var fa, V = v(Z);
			if(Oa.wk && Oa.wk < 312) return fa;
			if(V) {
				if(typeof O.id == F) O.id = Z;
				if(Oa.ie && Oa.win) {
					var Da = "",
						ya;
					for(ya in O) if(O[ya] != Object.prototype[ya]) if(ya.toLowerCase() == "data") S.movie = O[ya];
					else if(ya.toLowerCase() == "styleclass") Da += ' class="' + O[ya] + '"';
					else if(ya.toLowerCase() != "classid") Da += " " + ya + '="' + O[ya] + '"';
					ya = "";
					for(var Ja in S) if(S[Ja] != Object.prototype[Ja]) ya += '<param name="' + Ja + '" value="' + S[Ja] + '" />';
					V.outerHTML = '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"' + Da + ">" + ya + "</object>";
					oa[oa.length] = O.id;
					fa = v(O.id)
				} else {
					Ja = N.createElement(I);
					Ja.setAttribute("type", C);
					for(var ra in O) if(O[ra] != Object.prototype[ra]) if(ra.toLowerCase() == "styleclass") Ja.setAttribute("class", O[ra]);
					else ra.toLowerCase() != "classid" && Ja.setAttribute(ra, O[ra]);
					for(Da in S) if(S[Da] != Object.prototype[Da] && Da.toLowerCase() != "movie") {
						O = Ja;
						ya = Da;
						ra = S[Da];
						Z = N.createElement("param");
						Z.setAttribute("name", ya);
						Z.setAttribute("value", ra);
						O.appendChild(Z)
					}
					V.parentNode.replaceChild(Ja, V);
					fa = Ja
				}
			}
			return fa
		}
		function q(O) {
			var S = v(O);
			if(S && S.nodeName == "OBJECT") if(Oa.ie && Oa.win) {
				S.style.display = "none";
				(function() {
					if(S.readyState == 4) {
						var Z = v(O);
						if(Z) {
							for(var fa in Z) if(typeof Z[fa] == "function") Z[fa] = null;
							Z.parentNode.removeChild(Z)
						}
					} else setTimeout(arguments.callee, 10)
				})()
			} else S.parentNode.removeChild(S)
		}
		function v(O) {
			var S = null;
			try {
				S = N.getElementById(O)
			} catch(Z) {}
			return S
		}
		function x(O, S, Z) {
			O.attachEvent(S, Z);
			Ka[Ka.length] = [O, S, Z]
		}
		function y(O) {
			var S = Oa.pv;
			O = O.split(".");
			O[0] = parseInt(O[0], 10);
			O[1] = parseInt(O[1], 10) || 0;
			O[2] = parseInt(O[2], 10) || 0;
			return S[0] > O[0] || S[0] == O[0] && S[1] > O[1] || S[0] == O[0] && S[1] == O[1] && S[2] >= O[2] ? true : false
		}
		function D(O, S, Z, fa) {
			if(!(Oa.ie && Oa.mac)) {
				var V = N.getElementsByTagName("head")[0];
				if(V) {
					Z = Z && typeof Z == "string" ? Z : "screen";
					if(fa) qb = $a = null;
					if(!$a || qb != Z) {
						fa = N.createElement("style");
						fa.setAttribute("type", "text/css");
						fa.setAttribute("media", Z);
						$a = V.appendChild(fa);
						if(Oa.ie && Oa.win && typeof N.styleSheets != F && N.styleSheets.length > 0) $a = N.styleSheets[N.styleSheets.length - 1];
						qb = Z
					}
					if(Oa.ie && Oa.win) $a && typeof $a.addRule == I && $a.addRule(O, S);
					else $a && typeof N.createTextNode != F && $a.appendChild(N.createTextNode(O + " {" + S + "}"))
				}
			}
		}
		function B(O, S) {
			if(wb) {
				var Z = S ? "visible" : "hidden";
				if(cb && v(O)) v(O).style.visibility = Z;
				else D("#" + O, "visibility:" + Z)
			}
		}
		function u(O) {
			return /[\\\"<>\.;]/.exec(O) != null && typeof encodeURIComponent != F ? encodeURIComponent(O) : O
		}
		var F = "undefined",
			I = "object",
			C = "application/x-shockwave-flash",
			M = "SWFObjectExprInst",
			Q = window,
			N = document,
			X = navigator,
			ma = false,
			pa = [function() {
				ma ? c() : d()
			}],
			Ma = [],
			oa = [],
			Ka = [],
			Za, eb, ib, Ea, cb = false,
			db = false,
			$a, qb, wb = true,
			Oa = function() {
				var O = typeof N.getElementById != F && typeof N.getElementsByTagName != F && typeof N.createElement != F,
					S = X.userAgent.toLowerCase(),
					Z = X.platform.toLowerCase(),
					fa = Z ? /win/.test(Z) : /win/.test(S);
				Z = Z ? /mac/.test(Z) : /mac/.test(S);
				S = /webkit/.test(S) ? parseFloat(S.replace(/^.*webkit\/(\d+(\.\d+)?).*$/, "$1")) : false;
				var V = !+"\u000b1",
					Da = [0, 0, 0],
					ya = null;
				if(typeof X.plugins != F && typeof X.plugins["Shockwave Flash"] == I) {
					if((ya = X.plugins["Shockwave Flash"].description) && !(typeof X.mimeTypes != F && X.mimeTypes[C] && !X.mimeTypes[C].enabledPlugin)) {
						ma = true;
						V = false;
						ya = ya.replace(/^.*\s+(\S+\s+\S+$)/, "$1");
						Da[0] = parseInt(ya.replace(/^(.*)\..*$/, "$1"), 10);
						Da[1] = parseInt(ya.replace(/^.*\.(.*)\s.*$/, "$1"), 10);
						Da[2] = /[a-zA-Z]/.test(ya) ? parseInt(ya.replace(/^.*[a-zA-Z]+(.*)$/, "$1"), 10) : 0
					}
				} else if(typeof Q.ActiveXObject != F) try {
					var Ja = new ActiveXObject("ShockwaveFlash.ShockwaveFlash");
					if(Ja) if(ya = Ja.GetVariable("$version")) {
						V = true;
						ya = ya.split(" ")[1].split(",");
						Da = [parseInt(ya[0], 10), parseInt(ya[1], 10), parseInt(ya[2], 10)]
					}
				} catch(ra) {}
				return {
					w3: O,
					pv: Da,
					wk: S,
					ie: V,
					win: fa,
					mac: Z
				}
			}();
		(function() {
			if(Oa.w3) {
				if(typeof N.readyState != F && N.readyState == "complete" || typeof N.readyState == F && (N.getElementsByTagName("body")[0] || N.body)) a();
				if(!cb) {
					typeof N.addEventListener != F && N.addEventListener("DOMContentLoaded", a, false);
					if(Oa.ie && Oa.win) {
						N.attachEvent("onreadystatechange", function() {
							if(N.readyState == "complete") {
								N.detachEvent("onreadystatechange", arguments.callee);
								a()
							}
						});
						Q == top &&
						function() {
							if(!cb) {
								try {
									N.documentElement.doScroll("left")
								} catch(O) {
									setTimeout(arguments.callee, 0);
									return
								}
								a()
							}
						}()
					}
					Oa.wk &&
					function() {
						cb || (/loaded|complete/.test(N.readyState) ? a() : setTimeout(arguments.callee, 0))
					}();
					g(a)
				}
			}
		})();
		(function() {
			Oa.ie && Oa.win && window.attachEvent("onunload", function() {
				for(var O = Ka.length, S = 0; S < O; S++) Ka[S][0].detachEvent(Ka[S][1], Ka[S][2]);
				O = oa.length;
				for(S = 0; S < O; S++) q(oa[S]);
				for(var Z in Oa) Oa[Z] = null;
				Oa = null;
				for(var fa in swfobject) swfobject[fa] = null;
				swfobject = null
			})
		})();
		return {
			registerObject: function(O, S, Z, fa) {
				if(Oa.w3 && O && S) {
					var V = {};
					V.id = O;
					V.swfVersion = S;
					V.expressInstall = Z;
					V.callbackFn = fa;
					Ma[Ma.length] = V;
					B(O, false)
				} else fa && fa({
					success: false,
					id: O
				})
			},
			getObjectById: function(O) {
				if(Oa.w3) return b(O)
			},
			embedSWF: function(O, S, Z, fa, V, Da, ya, Ja, ra, Na) {
				var Ua = {
					success: false,
					id: S
				};
				if(Oa.w3 && !(Oa.wk && Oa.wk < 312) && O && S && Z && fa && V) {
					B(S, false);
					e(function() {
						Z += "";
						fa += "";
						var fb = {};
						if(ra && typeof ra === I) for(var Fa in ra) fb[Fa] = ra[Fa];
						fb.data = O;
						fb.width = Z;
						fb.height = fa;
						Fa = {};
						if(Ja && typeof Ja === I) for(var Pa in Ja) Fa[Pa] = Ja[Pa];
						if(ya && typeof ya === I) for(var nb in ya) if(typeof Fa.flashvars != F) Fa.flashvars += "&" + nb + "=" + ya[nb];
						else Fa.flashvars = nb + "=" + ya[nb];
						if(y(V)) {
							Pa = o(fb, Fa, S);
							fb.id == S && B(S, true);
							Ua.success = true;
							Ua.ref = Pa
						} else if(Da && f()) {
							fb.data = Da;
							j(fb, Fa, S, Na);
							return
						} else B(S, true);
						Na && Na(Ua)
					})
				} else Na && Na(Ua)
			},
			switchOffAutoHideShow: function() {
				wb = false
			},
			ua: Oa,
			getFlashPlayerVersion: function() {
				return {
					major: Oa.pv[0],
					minor: Oa.pv[1],
					release: Oa.pv[2]
				}
			},
			hasFlashPlayerVersion: y,
			createSWF: function(O, S, Z) {
				if(Oa.w3) return o(O, S, Z)
			},
			showExpressInstall: function(O, S, Z, fa) {
				Oa.w3 && f() && j(O, S, Z, fa)
			},
			removeSWF: function(O) {
				Oa.w3 && q(O)
			},
			createCSS: function(O, S, Z, fa) {
				Oa.w3 && D(O, S, Z, fa)
			},
			addDomLoadEvent: e,
			addLoadEvent: g,
			getQueryParamValue: function(O) {
				var S = N.location.search || N.location.hash;
				if(S) {
					if(/\?/.test(S)) S = S.split("?")[1];
					if(O == null) return u(S);
					S = S.split("&");
					for(var Z = 0; Z < S.length; Z++) if(S[Z].substring(0, S[Z].indexOf("=")) == O) return u(S[Z].substring(S[Z].indexOf("=") + 1))
				}
				returnto call recursively into the Flash Player which is not allowed. In most cases the JavaScript setTimeout function, can be used as a workaround.");
		else {
			FABridge.refCount++;
			retVal = this.target.setPropInAS(a, e, this.serialize(g));
			retVal = this.handleError(retVal);
			FABridge.refCount--;
			return retVal
		}
	},
	callASFunction: function(a, e) {
		if(FABridge.refCount > 0) throw Error("You are trying to call recursively into the Flash Player which is not allowed. In most cases the JavaScript setTimeout function, can be used as a workaround.");
		else {
			FABridge.refCount++;
			retVal = this.target.invokeASFunction(a, this.serialize(e));
			retVal = this.handleError(retVal);
			FABridge.refCount--;
			return retVal
		}
	},
	callASMethod: function(a, e, g) {
		if(FABridge.refCount > 0) throw Error("You are trying to call recursively into the Flash Player which is not allowed. In most cases the JavaScript setTimeout function, can be used as a workaround.");
		else {
			FABridge.refCount++;
			g = this.serialize(g);
			retVal = this.target.invokeASMethod(a, e, g);
			retVal = this.handleError(retVal);
			FABridge.refCount--;
			return retVal
		}
	},
	invokeLocalFunction: function(a, e) {
		var g, c = this.localFunctionCache[a];
		if(c != undefined) g = this.serialize(c.apply(null, this.deserialize(e)));
		return g
	},
	getTypeFromName: function(a) {
		return this.remoteTypeCache[a]
	},
	createProxy: function(a, e) {
		var g = this.getTypeFromName(e);
		instanceFactory.prototype = g;
		g = new instanceFactory(a);
		return this.remoteInstanceCache[a] = g
	},
	getProxy: function(a) {
		return this.remoteInstanceCache[a]
	},
	addTypeDataToCache: function(a) {
		for(var e = new ASProxy(this, a.name), g = a.accessors, c = 0; c < g.length; c++) this.addPropertyToType(e, g[c]);
		a = a.methods;
		for(c = 0; c < a.length; c++) FABridge.blockedMethods[a[c]] == undefined && this.addMethodToType(e, a[c]);
		return this.remoteTypeCache[e.typeName] = e
	},
	addPropertyToType: function(a, e) {
		var g = e.charAt(0),
			c;
		if(g >= "a" && g <= "z") {
			c = "get" + g.toUpperCase() + e.substr(1);
			g = "set" + g.toUpperCase() + e.substr(1)
		} else {
			c = "get" + e;
			g = "set" + e
		}
		a[g] = function(d) {
			this.bridge.setPropertyInAS(this.fb_instance_id, e, d)
		};
		a[c] = function() {
			return this.bridge.deserialize(this.bridge.getPropertyFromAS(this.fb_instance_id, e))
		}
	},
	addMethodToType: function(a, e) {
		a[e] = function() {
			return this.bridge.deserialize(this.bridge.callASMethod(this.fb_instance_id, e, FABridge.argsToArray(arguments)))
		}
	},
	getFunctionProxy: function(a) {
		var e = this;
		if(this.remoteFunctionCache[a] == null) this.remoteFunctionCache[a] = function() {
			e.callASFunction(a, FABridge.argsToArray(arguments))
		};
		return this.remoteFunctionCache[a]
	},
	getFunctionID: function(a) {
		if(a.__bridge_id__ == undefined) {
			a.__bridge_id__ = this.makeID(this.nextLocalFuncID++);
			this.localFunctionCache[a.__bridge_id__] = a
		}
		return a.__bridge_id__
	},
	serialize: function(a) {
		var e = {},
			g = typeof a;
		if(g == "number" || g == "string" || g == "boolean" || g == null || g == undefined) e = a;
		else if(a instanceof Array) {
			e = [];
			for(g = 0; g < a.length; g++) e[g] = this.serialize(a[g])
		} else if(g == "function") {
			e.type = FABridge.TYPE_JSFUNCTION;
			e.value = this.getFunctionID(a)
		} else if(a instanceof
		ASProxy) {
			e.type = FABridge.TYPE_ASINSTANCE;
			e.value = a.fb_instance_id
		} else {
			e.type = FABridge.TYPE_ANONYMOUS;
			e.value = a
		}
		return e
	},
	deserialize: function(a) {
		var e, g = typeof a;
		if(g == "number" || g == "string" || g == "boolean" || a == null || a == undefined) e = this.handleError(a);
		else if(a instanceof Array) {
			e = [];
			for(g = 0; g < a.length; g++) e[g] = this.deserialize(a[g])
		} else if(g == "object") {
			for(g = 0; g < a.newTypes.length; g++) this.addTypeDataToCache(a.newTypes[g]);
			for(var c in a.newRefs) this.createProxy(c, a.newRefs[c]);
			if(a.type == FABridge.TYPE_PRIMITIVE) e = a.value;
			else if(a.type == FABridge.TYPE_ASFUNCTION) e = this.getFunctionProxy(a.value);
			else if(a.type == FABridge.TYPE_ASINSTANCE) e = this.getProxy(a.value);
			else if(a.type == FABridge.TYPE_ANONYMOUS) e = a.value
		}
		return e
	},
	addRef: function(a) {
		this.target.incRef(a.fb_instance_id)
	},
	release: function(a) {
		this.target.releaseRef(a.fb_instance_id)
	},
	handleError: function(a) {
		if(typeof a == "string" && a.indexOf("__FLASHERROR") == 0) {
			a = a.split("||");
			FABridge.refCount > 0 && FABridge.refCount--;
			throw Error(a[1]);
		}
		return a
	}
};
ASProxy = function(a, e) {
	this.bridge = a;
	this.typeName = e;
	return this
};
ASProxy.prototype = {
	get: function(a) {
		return this.bridge.deserialize(this.bridge.getPropertyFromAS(this.fb_instance_id, a))
	},
	set: function(a, e) {
		this.bridge.setPropertyInAS(this.fb_instance_id, a, e)
	},
	call: function(a, e) {
		this.bridge.callASMethod(this.fb_instance_id, a, e)
	},
	addRef: function() {
		this.bridge.addRef(this)
	},
	release: function() {
		this.bridge.release(this)
	}
};
//websocket
(function() {
	function a() {}
	if(!window.WebSocket) {
		var e = window.console;
		if(!e || !e.log || !e.error) e = {
			log: function() {},
			error: function() {}
		};
		if(swfobject.hasFlashPlayerVersion("9.0.0")) {
			location.protocol == "file:" && e.error("WARNING: web-socket-js doesn't work in file:///... URL unless you set Flash Security Settings properly. Open the page via Web server i.e. http://...");
			WebSocket = function(g, c, d, b, f) {
				var j = this;
				j.readyState = WebSocket.CONNECTING;
				j.bufferedAmount = 0;
				setTimeout(function() {
					WebSocket.__addTask(function() {
						j.__createFlash(g, c, d, b, f)
					})
				}, 0)
			};
			WebSocket.prototype.__createFlash = function(g, c, d, b, f) {
				var j = this;
				j.__flash = WebSocket.__flash.create(g, c, d || null, b || 0, f || null);
				j.__flash.addEventListener("event", function() {
					setTimeout(function() {
						j.__handleEvents()
					}, 0)
				})
			};
			WebSocket.prototype.send = function(g) {
				if(!this.__flash || this.readyState == WebSocket.CONNECTING) throw "INVALID_STATE_ERR: Web Socket connection has not been established";
				g = this.__flash.send(encodeURIComponent(g));
				if(g < 0) return true;
				else {
					this.bufferedAmount += g;
					return false
				}
			};
			WebSocket.prototype.close = function() {
				if(this.__flash) if(!(this.readyState == WebSocket.CLOSED || this.readyState == WebSocket.CLOSING)) {
					this.__flash.close();
					this.readyState = WebSocket.CLOSED;
					this.__timer && clearInterval(this.__timer);
					this.onclose && setTimeout(this.onclose, 0)
				}
			};
			WebSocket.prototype.addEventListener = function(g, c) {
				if(!("__events" in this)) this.__events = {};
				if(!(g in this.__events)) {
					this.__events[g] = [];
					if("function" == typeof this["on" + g]) {
						this.__events[g].defaultHandler = this["on" + g];
						this["on" + g] = this.__createEventHandler(this, g)
					}
				}
				this.__events[g].push(c)
			};
			WebSocket.prototype.removeEventListener = function(g, c) {
				if(!("__events" in this)) this.__events = {};
				if(g in this.__events) for(var d = this.__events.length; d > -1; --d) if(c === this.__events[g][d]) {
					this.__events[g].splice(d, 1);
					break
				}
			};
			WebSocket.prototype.dispatchEvent = function(g) {
				if(!("__events" in this)) throw "UNSPECIFIED_EVENT_TYPE_ERR";
				if(!(g.type in this.__events)) throw "UNSPECIFIED_EVENT_TYPE_ERR";
				for(var c = 0, d = this.__events[g.type].length; c < d; ++c) {
					this.__events[g.type][c](g);
					if(g.cancelBubble) break
				}
				false !== g.returnValue && "function" == typeof this.__events[g.type].defaultHandler && this.__events[g.type].defaultHandler(g)
			};
			WebSocket.prototype.__handleEvents = function() {
				for(var g = this.__flash.receiveEvents(), c = 0; c < g.length; c++) try {
					var d = g[c];
					if("readyState" in d) this.readyState = d.readyState;
					if(d.type == "open") {
						this.__timer && clearInterval(this.__timer);
						if(window.opera) this.__timer = setInterval(function() {
							this.__handleEvents()
						}, 500);
						this.onopen && this.onopen()
					} else if(d.type == "close") {
						this.__timer && clearInterval(this.__timer);
						this.onclose && this.onclose()
					} else if(d.type == "message") {
						if(this.onmessage) {
							var b = decodeURIComponent(d.data),
								f;
							if(window.MessageEvent && !window.opera) {
								f = document.createEvent("MessageEvent");
								f.initMessageEvent("message", false, false, b, null, null, window, null)
							} else f = {
								data: b
							};
							this.onmessage(f)
						}
					} else if(d.type == "error") {
						this.__timer && clearInterval(this.__timer);
						this.onerror && this.onerror()
					} else throw "unknown event type: " + d.type;
				} catch(j) {
					if(typeof e === "object") {
						e.log && console_log("web_socket.js error:", j);
						e.error && e.error(j.toString())
					}
				}
			};
			WebSocket.prototype.__createEventHandler = function(g, c) {
				return function(d) {
					var b = new a;
					b.initEvent(c, true, true);
					b.target = b.currentTarget = g;
					for(var f in d) b[f] = d[f];
					g.dispatchEvent(b, arguments)
				}
			};
			a.prototype.cancelable = true;
			a.prototype.cancelBubble = false;
			a.prototype.preventDefault = function() {
				if(this.cancelable) this.returnValue = false
			};
			a.prototype.stopPropagation = function() {
				this.cancelBubble = true
			};
			a.prototype.initEvent = function(g, c, d) {
				this.type = g;
				this.cancelable = d;
				this.timeStamp = new Date
			};
			WebSocket.CONNECTING = 0;
			WebSocket.OPEN = 1;
			WebSocket.CLOSING = 2;
			WebSocket.CLOSED = 3;
			WebSocket.__tasks = [];
			WebSocket.loadFlashPolicyFile = function(g) {
				WebSocket.__addTask(function() {
					WebSocket.__flash.loadManualPolicyFile(g)
				})
			};
			WebSocket.__initialize = function() {
				if(WebSocket.__swfLocation) window.WEB_SOCKET_SWF_LOCATION = WebSocket.__swfLocation;
				if(window.WEB_SOCKET_SWF_LOCATION) {
					var g = document.createElement("div");
					g.id = "webSocketContainer";
					g.style.position = "absolute";
					if(WebSocket.__isFlashLite()) {
						g.style.left = "0px";
						g.style.top = "0px"
					} else {
						g.style.left = "-100px";
						g.style.top = "-100px"
					}
					var c = document.createElement("div");
					c.id = "webSocketFlash";
					g.appendChild(c);
					document.body.appendChild(g);
					swfobject.embedSWF(WEB_SOCKET_SWF_LOCATION, "webSocketFlash", "1", "1", "9.0.0", null, {
						bridgeName: "webSocket"
					}, {
						hasPriority: true,
						allowScriptAccess: "always"
					}, null, function(d) {
						d.success || e.error("[WebSocket] swfobject.embedSWF failed")
					});
					FABridge.addInitializationCallback("webSocket", function() {
						try {
							WebSocket.__flash = FABridge.webSocket.root();
							WebSocket.__flash.setCallerUrl(location.href);
							WebSocket.__flash.setDebug( !! window.WEB_SOCKET_DEBUG);
							for(var d = 0; d < WebSocket.__tasks.length; ++d) WebSocket.__tasks[d]();
							WebSocket.__tasks = []
						} catch(b) {
							e.error("[WebSocket] " + b.toString())
						}
					})
				} else e.error("[WebSocket] set WEB_SOCKET_SWF_LOCATION to location of WebSocketMain.swf")
			};
			WebSocket.__addTask = function(g) {
				WebSocket.__flash ? g() : WebSocket.__tasks.push(g)
			};
			WebSocket.__isFlashLite = function() {
				if(!window.navigator || !window.navigator.mimeTypes) return false;
				var g = window.navigator.mimeTypes["application/x-shockwave-flash"];
				if(!g || !g.enabledPlugin || !g.enabledPlugin.filename) return false;
				return g.enabledPlugin.filename.match(/flashlite/i) ? true : false
			};
			window.webSocketLog = function(g) {
				e.log(decodeURIComponent(g))
			};
			window.webSocketError = function(g) {
				e.error(decodeURIComponent(g))
			};
			window.WEB_SOCKET_DISABLE_AUTO_INITIALIZATION || (window.addEventListener ? window.addEventListener("load", WebSocket.__initialize, false) : window.attachEvent("onload", WebSocket.__initialize))
		} else e.error("Flash Player is not installed.")
	}
})();
$.browser.mozilla && $(document).bind("keydown.block_escape", function(a) {
	if(a.which === 27) {
		console_log('ApeConnection.js: Blocked "Esc" key to prevent socket interruption. (This is okay)');
		a.preventDefault()
	}
});

function badsleep(a) {
	var e = new Date,
		g = null;
	do g = new Date;
	while(g - e < a)
}
WEB_SOCKET_SWF_LOCATION = $.browser.msie && $.browser.version == "9.0" ? "/cudatel/js/web-socket-js/WebSocketMain.swf?" + Math.random() : "/cudatel/js/web-socket-js/WebSocketMain.swf";
APE_INITIAL_TIMEOUT = 6E3;
APE_RECONNECT_TIMEOUT = 3E3;
APE_ALIVE_TIMEOUT = 6E4;
window.webSocketError = function() {};
MAX_APE_FAILURES = 6;
MAX_APE_FAILURES_WS = 2;
APE_FAILURES = 0;
APE_READY = false;

function ApeConnectionWS(a) {
	var e = 0;
	a = a;
	var g = null,
		c = null,
		d, b, f = "ws://",
		j = location.port;
	location.port || (j = location.protocol == "https:" ? 443 : 80);
	if(location.protocol == "https:") if(APE_FAILURES == 0) f = "wss://";
	else if(APE_FAILURES == 1) j = 80;
	else {
		if(APE_FAILURES == 2) j = 7838
	} else if(APE_FAILURES != 0) if(APE_FAILURES == 1) j = 7838;
	else if(APE_FAILURES >= 2) j = 7838;
	f = f + '192.168.1.254' + ":" + j + "/6/";
	try {
		console_log("Establishing a live data connection: Attempt #" + (APE_FAILURES + 1) + " via WebSocket to " + f);
		this.ws = new WebSocket(f)
	} catch(n) {
		b = n
	}
	if(b || !this.ws || !("send" in this.ws)) a.connect_failed(b ? b : "");
	else {
		var l = false,
			o = this;
		d = setTimeout(function() {
			o.disconnect();
			a.connect_failed()
		}, 5500);
		this.subscribe = function(q) {
			$.isArray(q) || (q = [q]);
			this.ws.send(JSON.stringify([{
				cmd: "JOIN",
				sessid: g,
				chl: e++,
				params: {
					channels: q
				}
			}]))
		};
		this.unsubscribe = function(q) {
			this.ws.send(JSON.stringify([{
				cmd: "LEFT",
				sessid: g,
				chl: e++,
				params: {
					channel: q
				}
			}]))
		};
		this.broadcast = function(q) {
			badsleep(100);
			this.ws.send(JSON.stringify([{
				cmd: "BROADCAST",
				sessid: g,
				chl: e++,
				params: {
					data: q
				}
			}]))
		};
		this.login = function(q) {
			q || (q = {});
			this.ws.send(JSON.stringify([{
				cmd: "CONNECT",
				chl: e++,
				params: q
			}]))
		};
		this.disconnect = function() {
			this.ws.onclose = function() {};
			this.ws.onopen = function() {};
			this.ws.close()
		};
		this.ws.onopen = function() {
			l = true;
			a.open()
		};
		this.ws.onclose = function() {
			clearTimeout(d);
			clearInterval(c);
			c = null;
			l ? a.disconnected() : a.connect_failed()
		};
		this.ws.onerror = function() {
			console_log("error", arguments)
		};
		this.id = function() {
			return g
		};
		this._getKeepAliveRef = function(q) {
			return function() {
				o.ws.send(JSON.stringify([{
					cmd: "CHECK",
					sessid: q,
					chl: e++,
					params: {}
				}]))
			}
		};
		this.ws.onmessage = function(q) {
			q = $.parseJSON(q.data);
			for(var v in q) {
				if(!c && q[v].raw == "LOGIN") {
					clearTimeout(d);
					console_log("A live data connection was successfully established.");
					g = q[v].data.sessid;
					c = setInterval(o._getKeepAliveRef(g), 3E4);
					APE_READY = 1;
					a.onConnect && a.onConnect(a)
				}
				a.message(q[v])
			}
			delete q
		}
	}
}

function ApeConnectionLP(a) {
	var e = location.protocol + "//" + '192.168.1.254' + "/event/",
		g = 0,
		c = null,
		d = false;
	if(APE_FAILURES > MAX_APE_FAILURES) APE_FAILURES = 0;
	console_log("Establishing a live data connection: Attempt #" + (APE_FAILURES + 1) + " via long-poll to " + e);
	$.ajax({
		url: e,
		success: function() {
			a.open()
		},
		error: function() {
			a.connect_failed()
		}
	});
	var b = function() {
			var f = arguments.callee,
				j, n = $.ajax({
					url: e + "?" + escape(JSON.stringify([{
						cmd: "CHECK",
						sessid: c,
						chl: g++,
						params: {}
					}])),
					cache: true,
					success: function(l) {
						clearTimeout(j);
						l = $.parseJSON(l);
						for(var o in l) a.message(l[o]);
						d || f()
					},
					error: function() {
						console_log("poll failure");
						a.disconnected()
					}
				});
			j = setTimeout(function() {
				n.abort()
			}, 3E4)
		};
	this.id = function() {
		return c
	};
	this.login = function(f) {
		f || (f = {});
		$.ajax({
			url: e + "?" + escape(JSON.stringify([{
				cmd: "CONNECT",
				chl: g++,
				params: f
			}])),
			cache: true,
			success: function(j) {
				j = $.parseJSON(j);
				for(var n in j) {
					if(j[n].raw == "LOGIN") {
						c = j[n].data.sessid;
						APE_READY = 1;
						a.onConnect && a.onConnect(a)
					}
					a.message(j[n])
				}
				setTimeout(b, 1E3)
			},
			error: function() {
				a.disconnected()
			}
		})
	};
	this.subscribe = function(f) {
		$.isArray(f) || (f = [f]);
		$.ajax({
			url: e + "?" + escape(JSON.stringify([{
				cmd: "JOIN",
				sessid: c,
				chl: g++,
				params: {
					channels: f
				}
			}])),
			cache: true,
			success: function(j) {
				j = $.parseJSON(j);
				for(var n in j) a.message(j[n])
			}
		})
	};
	this.unsubscribe = function(f) {
		$.ajax({
			url: e + "?" + escape(JSON.stringify([{
				cmd: "LEFT",
				sessid: c,
				chl: g++,
				params: {
					channel: f
				}
			}])),
			cache: true,
			success: function(j) {
				j = $.parseJSON(j);
				for(var n in j) a.message(j[n])
			}
		})
	};
	this.broadcast = function(f) {
		$.ajax({
			url: e + "?" + escape(JSON.stringify([{
				cmd: "BROADCAST",
				sessid: c,
				chl: g++,
				params: {
					data: f
				}
			}])),
			cache: true,
			success: function(j) {
				j = $.parseJSON(j);
				for(var n in j) a.message(j[n])
			}
		})
	};
	this.disconnect = function() {
		d = true
	}
}

function ApeConnection(a, e) {
	var g, c = 0;
	this.connected = false;
	var d = ["meteor_alive"],
		b = undefined;
	this.debug = false;
	var f = this,
		j, n, l = false;
	this.onConnect = a;
	this.userData = e;
	var o = function() {
			var v = new jSoff.eventSys.event("noEventConnection", "NO_NAME");
			v.json = {
				error: "true"
			};
			v.fire();
			$(document).trigger("noEventConnection")
		},
		q = function() {
			console_log("did not receive periodic alive event");
			o();
			l = true;
			APE_FAILURES = 0;
			f.disconnected()
		};
	n = setTimeout(o, APE_INITIAL_TIMEOUT);
	this.open = function() {
		var v = (new Date).getTime(),
			x;
		x = location.search.search(/uncompiled_js/) ? 6E8 : 6E5;
		if(this.userData) x = this.userData.reloadAfter;
		if(!b || v - b < x && !l) {
			clearTimeout(n);
			c = 0;
			g.login({
				session: $.cookie("bps_session")
			})
		} else {
			console_log("disconnected for ", (new Date).getTime() - b);
			setTimeout(function() {
				location.reload()
			}, Math.floor(Math.random() * 2E4))
		}
	};
	this.subscribe = function(v) {
		if($.isArray(v)) for(var x in v) $.inArray(v[x], d) == -1 && d.push(v[x]);
		else $.inArray(v, d) == -1 && d.push(v);
		if(this.connected) {
			f.debug && console_log("subscribing to", v);
			g.subscribe(v)
		}
	};
	this.unsubscribe = function(v) {
		var x;
		if((x = $.inArray(v, d)) != -1) d.splice(x, 1);
		if(this.connected) {
			f.debug && console_log("unsubscribing from " + v);
			g.unsubscribe(v)
		}
	};
	this.id = function() {
		return g.id()
	};
	this.broadcast = function(v) {
		return g.broadcast(v)
	};
	this.disconnected = function(v) {
		this.connected = false;
		clearTimeout(j);
		if(!l) {
			clearTimeout(n);
			n = setTimeout(o, APE_RECONNECT_TIMEOUT)
		}
		v || (b = (new Date).getTime());
		g && "disconnect" in g && g.disconnect();
		var x = this;
		v && APE_FAILURES++;
		if(APE_FAILURES > MAX_APE_FAILURES) APE_FAILURES = 0;
		setTimeout(function() {
			g = typeof WebSocket != "undefined" && APE_FAILURES < MAX_APE_FAILURES_WS ? new ApeConnectionWS(x, APE_FAILURES) : new ApeConnectionLP(x, APE_FAILURES);
			c++
		}, 500 * c)
	};
	this.connect_failed = function(v) {
		console_log("connect failed: " + (v ? v : ""));
		this.disconnected(true)
	};
	this.message = function(v) {
		switch(v.raw) {
		case "LOGIN":
			this.connected = true;
			if(d.length > 0) {
				f.debug && console_log("resubscribing to", d);
				g.subscribe(d)
			}
			j = setTimeout(q, APE_ALIVE_TIMEOUT);
			break;
		case "MSG":
			f.debug && console_log(v.data.channel, v);
			if(!v.data.data) v.data.data = {};
			if(!v.data.data.name) v.data.data.name = "NO_NAME";
			var x = new jSoff.eventSys.event(v.data.channel, v.data.data.name);
			if(!x.error) {
				x.channel = v.data.channel;
				x.msgTime = v.time;
				x.json = v.data.data;
				x.fire()
			}
			$(window).trigger("meteor_" + v.data.channel, {
				channel: v.data.channel,
				json: v.data.data,
				msgTime: v.time
			}).trigger("meteor_all", {
				channel: v.data.channel,
				json: v.data.data,
				msgTime: v.time
			});
			if(v.data.channel == "meteor_alive") {
				clearTimeout(j);
				j = setTimeout(q, APE_ALIVE_TIMEOUT)
			}
			break;
		case "ERR":
			switch(v.data.value) {
			case "ALREADY_ON_CHANNEL":
			case "UNKNOWN_CHANNEL":
			case "NOT_IN_CHANNEL":
				break;
			case "BAD_CHANNEL_PERMISSION":
				console_log("unable to join channel ", v.data.channel);
				break;
			case "CANT_JOIN_CHANNEL":
				console_log("cant join channel ", v.data.channel);
				break;
			default:
				console_log("error: ", v.data.value, v);
				this.disconnected()
			}
		}
	};
	this.subscriptions = function() {
		return d
	};
	this.connectionType = function() {
		if(g instanceof ApeConnectionLP) return "long polling";
		else if(g instanceof ApeConnectionWS) return g.ws.__flash ? "flash websocket" : "native websocket";
		return "not connected"
	};
	g = typeof WebSocket != "undefined" && !document.domain.match("support.barracudanetworks.com") ? new ApeConnectionWS(this) : new ApeConnectionLP(this);
	this.ready = function() {
		return APE_READY
	}
};
(function(a, e) {
	function g(c) {
		return !a(c).parents().andSelf().filter(function() {
			return a.curCSS(this, "visibility") === "hidden" || a.expr.filters.hidden(this)
		}).length
	}
	a.ui = a.ui || {};
	if(!a.ui.version) {
		a.extend(a.ui, {
			version: "1.8.6",
			keyCode: {
				ALT: 18,
				BACKSPACE: 8,
				CAPS_LOCK: 20,
				COMMA: 188,
				COMMAND: 91,
				COMMAND_LEFT: 91,
				COMMAND_RIGHT: 93,
				CONTROL: 17,
				DELETE: 46,
				DOWN: 40,
				END: 35,
				ENTER: 13,
				ESCAPE: 27,
				HOME: 36,
				INSERT: 45,
				LEFT: 37,
				MENU: 93,
				NUMPAD_ADD: 107,
				NUMPAD_DECIMAL: 110,
				NUMPAD_DIVIDE: 111,
				NUMPAD_ENTER: 108,
				NUMPAD_MULTIPLY: 106,
				NUMPAD_SUBTRACT: 109,
				PAGE_DOWN: 34,
				PAGE_UP: 33,
				PERIOD: 190,
				RIGHT: 39,
				SHIFT: 16,
				SPACE: 32,
				TAB: 9,
				UP: 38,
				WINDOWS: 91
			}
		});
		a.fn.extend({
			_focus: a.fn.focus,
			focus: function(c, d) {
				return typeof c === "number" ? this.each(function() {
					var b = this;
					setTimeout(function() {
						a(b).focus();
						d && d.call(b)
					}, c)
				}) : this._focus.apply(this, arguments)
			},
			scrollParent: function() {
				var c;
				c = a.browser.msie && /(static|relative)/.test(this.css("position")) || /absolute/.test(this.css("position")) ? this.parents().filter(function() {
					return /(relative|absolute|fixed)/.test(a.curCSS(this, "position", 1)) && /(auto|scroll)/.test(a.curCSS(this, "overflow", 1) + a.curCSS(this, "overflow-y", 1) + a.curCSS(this, "overflow-x", 1))
				}).eq(0) : this.parents().filter(function() {
					return /(auto|scroll)/.test(a.curCSS(this, "overflow", 1) + a.curCSS(this, "overflow-y", 1) + a.curCSS(this, "overflow-x", 1))
				}).eq(0);
				return /fixed/.test(this.css("position")) || !c.length ? a(document) : c
			},
			zIndex: function(c) {
				if(c !== e) return this.css("zIndex", c);
				if(this.length) {
					c = a(this[0]);
					for(var d; c.length && c[0] !== document;) {
						d = c.css("position");
						if(d === "absolute" || d === "relative" || d === "fixed") {
							d = parseInt(c.css("zIndex"), 10);
							if(!isNaN(d) && d !== 0) return d
						}
						c = c.parent()
					}
				}
				return 0
			},
			disableSelection: function() {
				return this.bind((a.support.selectstart ? "selectstart" : "mousedown") + ".ui-disableSelection", function(c) {
					c.preventDefault()
				})
			},
			enableSelection: function() {
				return this.unbind(".ui-disableSelection")
			}
		});
		a.each(["Width", "Height"], function(c, d) {
			function b(l, o, q, v) {
				a.each(f, function() {
					o -= parseFloat(a.curCSS(l, "padding" + this, true)) || 0;
					if(q) o -= parseFloat(a.curCSS(l, "border" + this + "Width", true)) || 0;
					if(v) o -= parseFloat(a.curCSS(l, "margin" + this, true)) || 0
				});
				return o
			}
			var f = d === "Width" ? ["Left", "Right"] : ["Top", "Bottom"],
				j = d.toLowerCase(),
				n = {
					innerWidth: a.fn.innerWidth,
					innerHeight: a.fn.innerHeight,
					outerWidth: a.fn.outerWidth,
					outerHeight: a.fn.outerHeight
				};
			a.fn["inner" + d] = function(l) {
				if(l === e) return n["inner" + d].call(this);
				return this.each(function() {
					a(this).css(j, b(this, l) + "px")
				})
			};
			a.fn["outer" + d] = function(l, o) {
				if(typeof l !== "number") return n["outer" + d].call(this, l);
				return this.each(function() {
					a(this).css(j, b(this, l, true, o) + "px")
				})
			}
		});
		a.extend(a.expr[":"], {
			data: function(c, d, b) {
				return !!a.data(c, b[3])
			},
			focusable: function(c) {
				var d = c.nodeName.toLowerCase(),
					b = a.attr(c, "tabindex");
				if("area" === d) {
					d = c.parentNode;
					b = d.name;
					if(!c.href || !b || d.nodeName.toLowerCase() !== "map") return false;
					c = a("img[usemap=#" + b + "]")[0];
					return !!c && g(c)
				}
				return(/input|select|textarea|button|object/.test(d) ? !c.disabled : "a" == d ? c.href || !isNaN(b) : !isNaN(b)) && g(c)
			},
			tabbable: function(c) {
				var d = a.attr(c, "tabindex");
				return(isNaN(d) || d >= 0) && a(c).is(":focusable")
			}
		});
		a(function() {
			var c = document.body,
				d = c.appendChild(d = document.createElement("div"));
			a.extend(d.style, {
				minHeight: "100px",
				height: "auto",
				padding: 0,
				borderWidth: 0
			});
			a.support.minHeight = d.offsetHeight === 100;
			a.support.selectstart = "onselectstart" in d;
			c.removeChild(d).style.display = "none"
		});
		a.extend(a.ui, {
			plugin: {
				add: function(c, d, b) {
					c = a.ui[c].prototype;
					for(var f in b) {
						c.plugins[f] = c.plugins[f] || [];
						c.plugins[f].push([d, b[f]])
					}
				},
				call: function(c, d, b) {
					if((d = c.plugins[d]) && c.element[0].parentNode) for(var f = 0; f < d.length; f++) c.options[d[f][0]] && d[f][1].apply(c.element, b)
				}
			},
			contains: function(c, d) {
				return document.compareDocumentPosition ? c.compareDocumentPosition(d) & 16 : c !== d && c.contains(d)
			},
			hasScroll: function(c, d) {
				if(a(c).css("overflow") === "hidden") return false;
				var b = d && d === "left" ? "scrollLeft" : "scrollTop",
					f = false;
				if(c[b] > 0) return true;
				c[b] = 1;
				f = c[b] > 0;
				c[b] = 0;
				return f
			},
			isOverAxis: function(c, d, b) {
				return c > d && c < d + b
			},
			isOver: function(c, d, b, f, j, n) {
				return a.ui.isOverAxis(c, b, j) && a.ui.isOverAxis(d, f, n)
			}
		})
	}
})(jQuery);
(function(a, e) {
	if(a.cleanData) {
		var g = a.cleanData;
		a.cleanData = function(d) {
			for(var b = 0, f;
			(f = d[b]) != null; b++) a(f).triggerHandler("remove");
			g(d)
		}
	} else {
		var c = a.fn.remove;
		a.fn.remove = function(d, b) {
			return this.each(function() {
				if(!b) if(!d || a.filter(d, [this]).length) a("*", this).add([this]).each(function() {
					a(this).triggerHandler("remove")
				});
				return c.call(a(this), d, b)
			})
		}
	}
	a.widget = function(d, b, f) {
		var j = d.split(".")[0],
			n;
		d = d.split(".")[1];
		n = j + "-" + d;
		if(!f) {
			f = b;
			b = a.Widget
		}
		a.expr[":"][n] = function(l) {
			return !!a.data(l, d)
		};
		a[j] = a[j] || {};
		a[j][d] = function(l, o) {
			arguments.length && this._createWidget(l, o)
		};
		b = new b;
		b.options = a.extend(true, {}, b.options);
		a[j][d].prototype = a.extend(true, b, {
			namespace: j,
			widgetName: d,
			widgetEventPrefix: a[j][d].prototype.widgetEventPrefix || d,
			widgetBaseClass: n
		}, f);
		a.widget.bridge(d, a[j][d])
	};
	a.widget.bridge = function(d, b) {
		a.fn[d] = function(f) {
			var j = typeof f === "string",
				n = Array.prototype.slice.call(arguments, 1),
				l = this;
			f = !j && n.length ? a.extend.apply(null, [true, f].concat(n)) : f;
			if(j && f.charAt(0) === "_") return l;
			j ? this.each(function() {
				var o = a.data(this, d),
					q = o && a.isFunction(o[f]) ? o[f].apply(o, n) : o;
				if(q !== o && q !== e) {
					l = q;
					return false
				}
			}) : this.each(function() {
				var o = a.data(this, d);
				o ? o.option(f || {})._init() : a.data(this, d, new b(f, this))
			});
			return l
		}
	};
	a.Widget = function(d, b) {
		arguments.length && this._createWidget(d, b)
	};
	a.Widget.prototype = {
		widgetName: "widget",
		widgetEventPrefix: "",
		options: {
			disabled: false
		},
		_createWidget: function(d, b) {
			a.data(b, this.widgetName, this);
			this.element = a(b);
			this.options = a.extend(true, {}, this.options, this._getCreateOptions(), d);
			var f = this;
			this.element.bind("remove." + this.widgetName, function() {
				f.destroy()
			});
			this._create();
			this._trigger("create");
			this._init()
		},
		_getCreateOptions: function() {
			return a.metadata && a.metadata.get(this.element[0])[this.widgetName]
		},
		_create: function() {},
		_init: function() {},
		destroy: function() {
			this.element.unbind("." + this.widgetName).removeData(this.widgetName);
			this.widget().unbind("." + this.widgetName).removeAttr("aria-disabled").removeClass(this.widgetBaseClass + "-disabled ui-state-disabled")
		},
		widget: function() {
			return this.element
		},
		option: function(d, b) {
			var f = d;
			if(arguments.length === 0) return a.extend({}, this.options);
			if(typeof d === "string") {
				if(b === e) return this.options[d];
				f = {};
				f[d] = b
			}
			this._setOptions(f);
			return this
		},
		_setOptions: function(d) {
			var b = this;
			a.each(d, function(f, j) {
				b._setOption(f, j)
			});
			return this
		},
		_setOption: function(d, b) {
			this.options[d] = b;
			if(d === "disabled") this.widget()[b ? "addClass" : "removeClass"](this.widgetBaseClass + "-disabled ui-state-disabled").attr("aria-disabled", b);
			return this
		},
		enable: function() {
			return this._setOption("disabled", false)
		},
		disable: function() {
			return this._setOption("disabled", true)
		},
		_trigger: function(d, b, f) {
			var j = this.options[d];
			b = a.Event(b);
			b.type = (d === this.widgetEventPrefix ? d : this.widgetEventPrefix + d).toLowerCase();
			f = f || {};
			if(b.originalEvent) {
				d = a.event.props.length;
				for(var n; d;) {
					n = a.event.props[--d];
					b[n] = b.originalEvent[n]
				}
			}
			this.element.trigger(b, f);
			return !(a.isFunction(j) && j.call(this.element[0], b, f) === false || b.isDefaultPrevented())
		}
	}
})(jQuery);
(function(a) {
	a.widget("ui.mouse", {
		options: {
			cancel: ":input,option",
			distance: 1,
			delay: 0
		},
		_mouseInit: function() {
			var e = this;
			this.element.bind("mousedown." + this.widgetName, function(g) {
				return e._mouseDown(g)
			}).bind("click." + this.widgetName, function(g) {
				if(e._preventClickEvent) {
					e._preventClickEvent = false;
					g.stopImmediatePropagation();
					return false
				}
			});
			this.started = false
		},
		_mouseDestroy: function() {
			this.element.unbind("." + this.widgetName)
		},
		_mouseDown: function(e) {
			e.originalEvent = e.originalEvent || {};
			if(!e.originalEvent.mouseHandled) {
				this._mouseStarted && this._mouseUp(e);
				this._mouseDownEvent = e;
				var g = this,
					c = e.which == 1,
					d = typeof this.options.cancel == "string" ? a(e.target).parents().add(e.target).filter(this.options.cancel).length : false;
				if(!c || d || !this._mouseCapture(e)) return true;
				this.mouseDelayMet = !this.options.delay;
				if(!this.mouseDelayMet) this._mouseDelayTimer = setTimeout(function() {
					g.mouseDelayMet = true
				}, this.options.delay);
				if(this._mouseDistanceMet(e) && this._mouseDelayMet(e)) {
					this._mouseStarted = this._mouseStart(e) !== false;
					if(!this._mouseStarted) {
						e.preventDefault();
						return true
					}
				}
				this._mouseMoveDelegate = function(b) {
					return g._mouseMove(b)
				};
				this._mouseUpDelegate = function(b) {
					return g._mouseUp(b)
				};
				a(document).bind("mousemove." + this.widgetName, this._mouseMoveDelegate).bind("mouseup." + this.widgetName, this._mouseUpDelegate);
				e.preventDefault();
				return e.originalEvent.mouseHandled = true
			}
		},
		_mouseMove: function(e) {
			if(a.browser.msie && !(document.documentMode >= 9) && !e.button) return this._mouseUp(e);
			if(this._mouseStarted) {
				this._mouseDrag(e);
				return e.preventDefault()
			}
			if(this._mouseDistanceMet(e) && this._mouseDelayMet(e))(this._mouseStarted = this._mouseStart(this._mouseDownEvent, e) !== false) ? this._mouseDrag(e) : this._mouseUp(e);
			return !this._mouseStarted
		},
		_mouseUp: function(e) {
			a(document).unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate);
			if(this._mouseStarted) {
				this._mouseStarted = false;
				this._preventClickEvent = e.target == this._mouseDownEvent.target;
				this._mouseStop(e)
			}
			return false
		},
		_mouseDistanceMet: function(e) {
			return Math.max(Math.abs(this._mouseDownEvent.pageX - e.pageX), Math.abs(this._mouseDownEvent.pageY - e.pageY)) >= this.options.distance
		},
		_mouseDelayMet: function() {
			return this.mouseDelayMet
		},
		_mouseStart: function() {},
		_mouseDrag: function() {},
		_mouseStop: function() {},
		_mouseCapture: function() {
			return true
		}
	})
})(jQuery);
(function(a) {
	a.ui = a.ui || {};
	var e = /left|center|right/,
		g = /top|center|bottom/,
		c = a.fn.position,
		d = a.fn.offset;
	a.fn.position = function(b) {
		if(!b || !b.of) return c.apply(this, arguments);
		b = a.extend({}, b);
		var f = a(b.of),
			j = f[0],
			n = (b.collision || "flip").split(" "),
			l = b.offset ? b.offset.split(" ") : [0, 0],
			o, q, v;
		if(j.nodeType === 9) {
			o = f.width();
			q = f.height();
			v = {
				top: 0,
				left: 0
			}
		} else if(j.setTimeout) {
			o = f.width();
			q = f.height();
			v = {
				top: f.scrollTop(),
				left: f.scrollLeft()
			}
		} else if(j.preventDefault) {
			b.at = "left top";
			o = q = 0;
			v = {
				top: b.of.pageY,
				left: b.of.pageX
			}
		} else {
			o = f.outerWidth();
			q = f.outerHeight();
			v = f.offset()
		}
		a.each(["my", "at"], function() {
			var x = (b[this] || "").split(" ");
			if(x.length === 1) x = e.test(x[0]) ? x.concat(["center"]) : g.test(x[0]) ? ["center"].concat(x) : ["center", "center"];
			x[0] = e.test(x[0]) ? x[0] : "center";
			x[1] = g.test(x[1]) ? x[1] : "center";
			b[this] = x
		});
		if(n.length === 1) n[1] = n[0];
		l[0] = parseInt(l[0], 10) || 0;
		if(l.length === 1) l[1] = l[0];
		l[1] = parseInt(l[1], 10) || 0;
		if(b.at[0] === "right") v.left += o;
		else if(b.at[0] === "center") v.left += o / 2;
		if(b.at[1] === "bottom") v.top += q;
		else if(b.at[1] === "center") v.top += q / 2;
		v.left += l[0];
		v.top += l[1];
		return this.each(function() {
			var x = a(this),
				y = x.outerWidth(),
				D = x.outerHeight(),
				B = parseInt(a.curCSS(this, "marginLeft", true)) || 0,
				u = parseInt(a.curCSS(this, "marginTop", true)) || 0,
				F = y + B + parseInt(a.curCSS(this, "marginRight", true)) || 0,
				I = D + u + parseInt(a.curCSS(this, "marginBottom", true)) || 0,
				C = a.extend({}, v),
				M;
			if(b.my[0] === "right") C.left -= y;
			else if(b.my[0] === "center") C.left -= y / 2;
			if(b.my[1] === "bottom") C.top -= D;
			else if(b.my[1] === "center") C.top -= D / 2;
			C.left = parseInt(C.left);
			C.top = parseInt(C.top);
			M = {
				left: C.left - B,
				top: C.top - u
			};
			a.each(["left", "top"], function(Q, N) {
				a.ui.position[n[Q]] && a.ui.position[n[Q]][N](C, {
					targetWidth: o,
					targetHeight: q,
					elemWidth: y,
					elemHeight: D,
					collisionPosition: M,
					collisionWidth: F,
					collisionHeight: I,
					offset: l,
					my: b.my,
					at: b.at
				})
			});
			a.fn.bgiframe && x.bgiframe();
			x.offset(a.extend(C, {
				using: b.using
			}))
		})
	};
	a.ui.position = {
		fit: {
			left: function(b, f) {
				var j = a(window);
				j = f.collisionPosition.left + f.collisionWidth - j.width() - j.scrollLeft();
				b.left = j > 0 ? b.left - j : Math.max(b.left - f.collisionPosition.left, b.left)
			},
			top: function(b, f) {
				var j = a(window);
				j = f.collisionPosition.top + f.collisionHeight - j.height() - j.scrollTop();
				b.top = j > 0 ? b.top - j : Math.max(b.top - f.collisionPosition.top, b.top)
			}
		},
		flip: {
			left: function(b, f) {
				if(f.at[0] !== "center") {
					var j = a(window);
					j = f.collisionPosition.left + f.collisionWidth - j.width() - j.scrollLeft();
					var n = f.my[0] === "left" ? -f.elemWidth : f.my[0] === "right" ? f.elemWidth : 0,
						l = f.at[0] === "left" ? f.targetWidth : -f.targetWidth,
						o = -2 * f.offset[0];
					b.left += f.collisionPosition.left < 0 ? n + l + o : j > 0 ? n + l + o : 0
				}
			},
			top: function(b, f) {
				if(f.at[1] !== "center") {
					var j = a(window);
					j = f.collisionPosition.top + f.collisionHeight - j.height() - j.scrollTop();
					var n = f.my[1] === "top" ? -f.elemHeight : f.my[1] === "bottom" ? f.elemHeight : 0,
						l = f.at[1] === "top" ? f.targetHeight : -f.targetHeight,
						o = -2 * f.offset[1];
					b.top += f.collisionPosition.top < 0 ? n + l + o : j > 0 ? n + l + o : 0
				}
			}
		}
	};
	if(!a.offset.setOffset) {
		a.offset.setOffset = function(b, f) {
			if(/static/.test(a.curCSS(b, "position"))) b.style.position = "relative";
			var j = a(b),
				n = j.offset(),
				l = parseInt(a.curCSS(b, "top", true), 10) || 0,
				o = parseInt(a.curCSS(b, "left", true), 10) || 0;
			n = {
				top: f.top - n.top + l,
				left: f.left - n.left + o
			};
			"using" in f ? f.using.call(b, n) : j.css(n)
		};
		a.fn.offset = function(b) {
			var f = this[0];
			if(!f || !f.ownerDocument) return null;
			if(b) return this.each(function() {
				a.offset.setOffset(this, b)
			});
			return d.call(this)
		}
	}
})(jQuery);
(function(a) {
	a.widget("ui.draggable", a.ui.mouse, {
		widgetEventPrefix: "drag",
		options: {
			addClasses: true,
			appendTo: "parent",
			axis: false,
			connectToSortable: false,
			containment: false,
			cursor: "auto",
			cursorAt: false,
			grid: false,
			handle: false,
			helper: "original",
			iframeFix: false,
			opacity: false,
			refreshPositions: false,
			revert: false,
			revertDuration: 500,
			scope: "default",
			scroll: true,
			scrollSensitivity: 20,
			scrollSpeed: 20,
			snap: false,
			snapMode: "both",
			snapTolerance: 20,
			stack: false,
			zIndex: false
		},
		_create: function() {
			if(this.options.helper == "original" && !/^(?:r|a|f)/.test(this.element.css("position"))) this.element[0].style.position = "relative";
			this.options.addClasses && this.element.addClass("ui-draggable");
			this.options.disabled && this.element.addClass("ui-draggable-disabled");
			this._mouseInit()
		},
		destroy: function() {
			if(this.element.data("draggable")) {
				this.element.removeData("draggable").unbind(".draggable").removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled");
				this._mouseDestroy();
				return this
			}
		},
		_mouseCapture: function(e) {
			var g = this.options;
			if(this.helper || g.disabled || a(e.target).is(".ui-resizable-handle")) return false;
			this.handle = this._getHandle(e);
			if(!this.handle) return false;
			return true
		},
		_mouseStart: function(e) {
			var g = this.options;
			this.helper = this._createHelper(e);
			this._cacheHelperProportions();
			if(a.ui.ddmanager) a.ui.ddmanager.current = this;
			this._cacheMargins();
			this.cssPosition = this.helper.css("position");
			this.scrollParent = this.helper.scrollParent();
			this.offset = this.positionAbs = this.element.offset();
			this.offset = {
				top: this.offset.top - this.margins.top,
				left: this.offset.left - this.margins.left
			};
			a.extend(this.offset, {
				click: {
					left: e.pageX - this.offset.left,
					top: e.pageY - this.offset.top
				},
				parent: this._getParentOffset(),
				relative: this._getRelativeOffset()
			});
			this.originalPosition = this.position = this._generatePosition(e);
			this.originalPageX = e.pageX;
			this.originalPageY = e.pageY;
			g.cursorAt && this._adjustOffsetFromHelper(g.cursorAt);
			g.containment && this._setContainment();
			if(this._trigger("start", e) === false) {
				this._clear();
				return false
			}
			this._cacheHelperProportions();
			a.ui.ddmanager && !g.dropBehaviour && a.ui.ddmanager.prepareOffsets(this, e);
			this.helper.addClass("ui-draggable-dragging");
			this._mouseDrag(e, true);
			return true
		},
		_mouseDrag: function(e, g) {
			this.position = this._generatePosition(e);
			this.positionAbs = this._convertPositionTo("absolute");
			if(!g) {
				var c = this._uiHash();
				if(this._trigger("drag", e, c) === false) {
					this._mouseUp({});
					return false
				}
				this.position = c.position
			}
			if(!this.options.axis || this.options.axis != "y") this.helper[0].style.left = this.position.left + "px";
			if(!this.options.axis || this.options.axis != "x") this.helper[0].style.top = this.position.top + "px";
			a.ui.ddmanager && a.ui.ddmanager.drag(this, e);
			return false
		},
		_mouseStop: function(e) {
			var g = false;
			if(a.ui.ddmanager && !this.options.dropBehaviour) g = a.ui.ddmanager.drop(this, e);
			if(this.dropped) {
				g = this.dropped;
				this.dropped = false
			}
			if(!this.element[0] || !this.element[0].parentNode) return false;
			if(this.options.revert == "invalid" && !g || this.options.revert == "valid" && g || this.options.revert === true || a.isFunction(this.options.revert) && this.options.revert.call(this.element, g)) {
				var c = this;
				a(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function() {
					c._trigger("stop", e) !== false && c._clear()
				})
			} else this._trigger("stop", e) !== false && this._clear();
			return false
		},
		cancel: function() {
			this.helper.is(".ui-draggable-dragging") ? this._mouseUp({}) : this._clear();
			return this
		},
		_getHandle: function(e) {
			var g = !this.options.handle || !a(this.options.handle, this.element).length ? true : false;
			a(this.options.handle, this.element).find("*").andSelf().each(function() {
				if(this == e.target) g = true
			});
			return g
		},
		_createHelper: function(e) {
			var g = this.options;
			e = a.isFunction(g.helper) ? a(g.helper.apply(this.element[0], [e])) : g.helper == "clone" ? this.element.clone() : this.element;
			e.parents("body").length || e.appendTo(g.appendTo == "parent" ? this.element[0].parentNode : g.appendTo);
			e[0] != this.element[0] && !/(fixed|absolute)/.test(e.css("position")) && e.css("position", "absolute");
			return e
		},
		_adjustOffsetFromHelper: function(e) {
			if(typeof e == "string") e = e.split(" ");
			if(a.isArray(e)) e = {
				left: +e[0],
				top: +e[1] || 0
			};
			if("left" in e) this.offset.click.left = e.left + this.margins.left;
			if("right" in e) this.offset.click.left = this.helperProportions.width - e.right + this.margins.left;
			if("top" in e) this.offset.click.top = e.top + this.margins.top;
			if("bottom" in e) this.offset.click.top = this.helperProportions.height - e.bottom + this.margins.top
		},
		_getParentOffset: function() {
			this.offsetParent = this.helper.offsetParent();
			var e = this.offsetParent.offset();
			if(this.cssPosition == "absolute" && this.scrollParent[0] != document && a.ui.contains(this.scrollParent[0], this.offsetParent[0])) {
				e.left += this.scrollParent.scrollLeft();
				e.top += this.scrollParent.scrollTop()
			}
			if(this.offsetParent[0] == document.body || this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() == "html" && a.browser.msie) e = {
				top: 0,
				left: 0
			};
			return {
				top: e.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
				left: e.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
			}
		},
		_getRelativeOffset: function() {
			if(this.cssPosition == "relative") {
				var e = this.element.position();
				return {
					top: e.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(),
					left: e.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()
				}
			} else return {
				top: 0,
				left: 0
			}
		},
		_cacheMargins: function() {
			this.margins = {
				left: parseInt(this.element.css("marginLeft"), 10) || 0,
				top: parseInt(this.element.css("marginTop"), 10) || 0
			}
		},
		_cacheHelperProportions: function() {
			this.helperProportions = {
				width: this.helper.outerWidth(),
				height: this.helper.outerHeight()
			}
		},
		_setContainment: function() {
			var e = this.options;
			if(e.containment == "parent") e.containment = this.helper[0].parentNode;
			if(e.containment == "document" || e.containment == "window") this.containment = [0 - this.offset.relative.left - this.offset.parent.left, 0 - this.offset.relative.top - this.offset.parent.top, a(e.containment == "document" ? document : window).width() - this.helperProportions.width - this.margins.left, (a(e.containment == "document" ? document : window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top];
			if(!/^(document|window|parent)$/.test(e.containment) && e.containment.constructor != Array) {
				var g = a(e.containment)[0];
				if(g) {
					e = a(e.containment).offset();
					var c = a(g).css("overflow") != "hidden";
					this.containment = [e.left + (parseInt(a(g).css("borderLeftWidth"), 10) || 0) + (parseInt(a(g).css("paddingLeft"), 10) || 0) - this.margins.left, e.top + (parseInt(a(g).css("borderTopWidth"), 10) || 0) + (parseInt(a(g).css("paddingTop"), 10) || 0) - this.margins.top, e.left + (c ? Math.max(g.scrollWidth, g.offsetWidth) : g.offsetWidth) - (parseInt(a(g).css("borderLeftWidth"), 10) || 0) - (parseInt(a(g).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left, e.top + (c ? Math.max(g.scrollHeight, g.offsetHeight) : g.offsetHeight) - (parseInt(a(g).css("borderTopWidth"), 10) || 0) - (parseInt(a(g).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top]
				}
			} else if(e.containment.constructor == Array) this.containment = e.containment
		},
		_convertPositionTo: function(e, g) {
			if(!g) g = this.position;
			var c = e == "absolute" ? 1 : -1,
				d = this.cssPosition == "absolute" && !(this.scrollParent[0] != document && a.ui.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent,
				b = /(html|body)/i.test(d[0].tagName);
			return {
				top: g.top + this.offset.relative.top * c + this.offset.parent.top * c - (a.browser.safari && a.browser.version < 526 && this.cssPosition == "fixed" ? 0 : (this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : b ? 0 : d.scrollTop()) * c),
				left: g.left + this.offset.relative.left * c + this.offset.parent.left * c - (a.browser.safari && a.browser.version < 526 && this.cssPosition == "fixed" ? 0 : (this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : b ? 0 : d.scrollLeft()) * c)
			}
		},
		_generatePosition: function(e) {
			var g = this.options,
				c = this.cssPosition == "absolute" && !(this.scrollParent[0] != document && a.ui.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent,
				d = /(html|body)/i.test(c[0].tagName),
				b = e.pageX,
				f = e.pageY;
			if(this.originalPosition) {
				if(this.containment) {
					if(e.pageX - this.offset.click.left < this.containment[0]) b = this.containment[0] + this.offset.click.left;
					if(e.pageY - this.offset.click.top < this.containment[1]) f = this.containment[1] + this.offset.click.top;
					if(e.pageX - this.offset.click.left > this.containment[2]) b = this.containment[2] + this.offset.click.left;
					if(e.pageY - this.offset.click.top > this.containment[3]) f = this.containment[3] + this.offset.click.top
				}
				if(g.grid) {
					f = this.originalPageY + Math.round((f - this.originalPageY) / g.grid[1]) * g.grid[1];
					f = this.containment ? !(f - this.offset.click.top < this.containment[1] || f - this.offset.click.top > this.containment[3]) ? f : !(f - this.offset.click.top < this.containment[1]) ? f - g.grid[1] : f + g.grid[1] : f;
					b = this.originalPageX + Math.round((b - this.originalPageX) / g.grid[0]) * g.grid[0];
					b = this.containment ? !(b - this.offset.click.left < this.containment[0] || b - this.offset.click.left > this.containment[2]) ? b : !(b - this.offset.click.left < this.containment[0]) ? b - g.grid[0] : b + g.grid[0] : b
				}
			}
			return {
				top: f - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + (a.browser.safari && a.browser.version < 526 && this.cssPosition == "fixed" ? 0 : this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : d ? 0 : c.scrollTop()),
				left: b - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + (a.browser.safari && a.browser.version < 526 && this.cssPosition == "fixed" ? 0 : this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : d ? 0 : c.scrollLeft())
			}
		},
		_clear: function() {
			this.helper.removeClass("ui-draggable-dragging");
			this.helper[0] != this.element[0] && !this.cancelHelperRemoval && this.helper.remove();
			this.helper = null;
			this.cancelHelperRemoval = false
		},
		_trigger: function(e, g, c) {
			c = c || this._uiHash();
			a.ui.plugin.call(this, e, [g, c]);
			if(e == "drag") this.positionAbs = this._convertPositionTo("absolute");
			return a.Widget.prototype._trigger.call(this, e, g, c)
		},
		plugins: {},
		_uiHash: function() {
			return {
				helper: this.helper,
				position: this.position,
				originalPosition: this.originalPosition,
				offset: this.positionAbs
			}
		}
	});
	a.extend(a.ui.draggable, {
		version: "1.8.6"
	});
	a.ui.plugin.add("draggable", "connectToSortable", {
		start: function(e, g) {
			var c = a(this).data("draggable"),
				d = c.options,
				b = a.extend({}, g, {
					item: c.element
				});
			c.sortables = [];
			a(d.connectToSortable).each(function() {
				var f = a.data(this, "sortable");
				if(f && !f.options.disabled) {
					c.sortables.push({
						instance: f,
						shouldRevert: f.options.revert
					});
					f._refreshItems();
					f._trigger("activate", e, b)
				}
			})
		},
		stop: function(e, g) {
			var c = a(this).data("draggable"),
				d = a.extend({}, g, {
					item: c.element
				});
			a.each(c.sortables, function() {
				if(this.instance.isOver) {
					this.instance.isOver = 0;
					c.cancelHelperRemoval = true;
					this.instance.cancelHelperRemoval = false;
					if(this.shouldRevert) this.instance.options.revert = true;
					this.instance._mouseStop(e);
					this.instance.options.helper = this.instance.options._helper;
					c.options.helper == "original" && this.instance.currentItem.css({
						top: "auto",
						left: "auto"
					})
				} else {
					this.instance.cancelHelperRemoval = false;
					this.instance._trigger("deactivate", e, d)
				}
			})
		},
		drag: function(e, g) {
			var c = a(this).data("draggable"),
				d = this;
			a.each(c.sortables, function() {
				this.instance.positionAbs = c.positionAbs;
				this.instance.helperProportions = c.helperProportions;
				this.instance.offset.click = c.offset.click;
				if(this.instance._intersectsWith(this.instance.containerCache)) {
					if(!this.instance.isOver) {
						this.instance.isOver = 1;
						this.instance.currentItem = a(d).clone().appendTo(this.instance.element).data("sortable-item", true);
						this.instance.options._helper = this.instance.options.helper;
						this.instance.options.helper = function() {
							return g.helper[0]
						};
						e.target = this.instance.currentItem[0];
						this.instance._mouseCapture(e, true);
						this.instance._mouseStart(e, true, true);
						this.instance.offset.click.top = c.offset.click.top;
						this.instance.offset.click.left = c.offset.click.left;
						this.instance.offset.parent.left -= c.offset.parent.left - this.instance.offset.parent.left;
						this.instance.offset.parent.top -= c.offset.parent.top - this.instance.offset.parent.top;
						c._trigger("toSortable", e);
						c.dropped = this.instance.element;
						s.containment[3]) ? f : !(f - this.offset.click.top < this.containment[1]) ? f - g.grid[1] : f + g.grid[1] : f;
					b = this.originalPageX + Math.round((b - this.originalPageX) / g.grid[0]) * g.grid[0];
					b = this.containment ? !(b - this.offset.click.left < this.containment[0] || b - this.offset.click.left > this.containment[2]) ? b : !(b - this.offset.click.left < this.containment[0]) ? b - g.grid[0] : b + g.grid[0] : b
				}
			}
			return {
				top: f - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + (a.browser.safari && a.browser.version < 526 && this.cssPosition == "fixed" ? 0 : this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : d ? 0 : c.scrollTop()),
				left: b - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + (a.browser.safari && a.browser.version < 526 && this.cssPosition == "fixed" ? 0 : this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : d ? 0 : c.scrollLeft())
			}
		},
		_clear: function() {
			this.helper.removeClass("ui-draggable-dragging");
			this.helper[0] != this.element[0] && !this.cancelHelperRemoval && this.helper.remove();
			this.helper = null;
			this.cancelHelperRemoval = false
		},
		_trigger: function(e, g, c) {
			c = c || this._uiHash();
			a.ui.plugin.call(this, e, [g, c]);
			if(e == "drag") this.positionAbs = this._convertPositionTo("absolute");
			return a.Widget.prototype._trigger.call(this, e, g, c)
		},
		plugins: {},
		_uiHash: function() {
			return {
				helper: this.helper,
				position: this.position,
				originalPosition: this.originalPosition,
				offset: this.positionAbs
			}
		}
	});
	a.extend(a.ui.draggable, {
		version: "1.8.6"
	});
	a.ui.plugin.add("draggable", "connectToSortable", {
		start: function(e, g) {
			var c = a(this).data("draggable"),
				d = c.options,
				b = a.extend({}, g, {
					item: c.element
				});
			c.sortables = [];
			a(d.connectToSortable).each(function() {
				var f = a.data(this, "sortable");
				if(f && !f.options.disabled) {
					c.sortables.push({
						instance: f,
						shouldRevert: f.options.revert
					});
					f._refreshItems();
					f._trigger("activate", e, b)
				}
			})
		},
		stop: function(e, g) {
			var c = a(this).data("draggable"),
				d = a.extend({}, g, {
					item: c.element
				});
			a.each(c.sortables, function() {
				if(this.instance.isOver) {
					this.instance.isOver = 0;
					c.cancelHelperRemoval = true;
					this.instance.cancelHelperRemoval = false;
					if(this.shouldRevert) this.instance.options.revert = true;
					this.instance._mouseStop(e);
					this.instance.options.helper = this.instance.options._helper;
					c.options.helper == "original" && this.instance.currentItem.css({
						top: "auto",
						left: "auto"
					})
				} else {
					this.instance.cancelHelperRemoval = false;
					this.instance._trigger("deactivate", e, d)
				}
			})
		},
		drag: function(e, g) {
			var c = a(this).data("draggable"),
				d = this;
			a.each(c.sortables, function() {
				this.instance.positionAbs = c.positionAbs;
				this.instance.helperProportions = c.helperProportions;
				this.instance.offset.click = c.offset.click;
				if(this.instance._intersectsWith(this.instance.containerCache)) {
					if(!this.instance.isOver) {
						this.instance.isOver = 1;
						this.instance.currentItem = a(d).clone().appendTo(this.instance.element).data("sortable-item", true);
						this.instance.options._helper = this.instance.options.helper;
						this.instance.options.helper = function() {
							return g.helper[0]
						};
						e.target = this.instance.currentItem[0];
						this.instance._mouseCapture(e, true);
						this.instance._mouseStart(e, true, true);
						this.instance.offset.click.top = c.offset.click.top;
						this.instance.offset.click.left = c.offset.click.left;
						this.instance.offset.parent.left -= c.offset.parent.left - this.instance.offset.parent.left;
						this.instance.offset.parent.top -= c.offset.parent.top - this.instance.offset.parent.top;
						c._trigger("toSortable", e);
						c.dropped = this.instance.element;
						c.currentItem = c.element;
						this.instance.fromOutside = c
					}
					this.instance.currentItem && this.instance._mouseDrag(e)
				} else if(this.instance.isOver) {
					this.instance.isOver = 0;
					this.instance.cancelHelperRemoval = true;
					this.instance.options.revert = false;
					this.instance._trigger("out", e, this.instance._uiHash(this.instance));
					this.instance._mouseStop(e, true);
					this.instance.options.helper = this.instance.options._helper;
					this.instance.currentItem.remove();
					this.instance.placeholder && this.instance.placeholder.remove();
					c._trigger("fromSortable", e);
					c.dropped = false
				}
			})
		}
	});
	a.ui.plugin.add("draggable", "cursor", {
		start: function() {
			var e = a("body"),
				g = a(this).data("draggable").options;
			if(e.css("cursor")) g._cursor = e.css("cursor");
			e.css("cursor", g.cursor)
		},
		stop: function() {
			var e = a(this).data("draggable").options;
			e._cursor && a("body").css("cursor", e._cursor)
		}
	});
	a.ui.plugin.add("draggable", "iframeFix", {
		start: function() {
			var e = a(this).data("draggable").options;
			a(e.iframeFix === true ? "iframe" : e.iframeFix).each(function() {
				a('<div class="ui-draggable-iframeFix" style="background: #fff;"></div>').css({
					width: this.offsetWidth + "px",
					height: this.offsetHeight + "px",
					position: "absolute",
					opacity: "0.001",
					zIndex: 1E3
				}).css(a(this).offset()).appendTo("body")
			})
		},
		stop: function() {
			a("div.ui-draggable-iframeFix").each(function() {
				this.parentNode.removeChild(this)
			})
		}
	});
	a.ui.plugin.add("draggable", "opacity", {
		start: function(e, g) {
			var c = a(g.helper),
				d = a(this).data("draggable").options;
			if(c.css("opacity")) d._opacity = c.css("opacity");
			c.css("opacity", d.opacity)
		},
		stop: function(e, g) {
			var c = a(this).data("draggable").options;
			c._opacity && a(g.helper).css("opacity", c._opacity)
		}
	});
	a.ui.plugin.add("draggable", "scroll", {
		start: function() {
			var e = a(this).data("draggable");
			if(e.scrollParent[0] != document && e.scrollParent[0].tagName != "HTML") e.overflowOffset = e.scrollParent.offset()
		},
		drag: function(e) {
			var g = a(this).data("draggable"),
				c = g.options,
				d = false;
			if(g.scrollParent[0] != document && g.scrollParent[0].tagName != "HTML") {
				if(!c.axis || c.axis != "x") if(g.overflowOffset.top + g.scrollParent[0].offsetHeight - e.pageY < c.scrollSensitivity) g.scrollParent[0].scrollTop = d = g.scrollParent[0].scrollTop + c.scrollSpeed;
				else if(e.pageY - g.overflowOffset.top < c.scrollSensitivity) g.scrollParent[0].scrollTop = d = g.scrollParent[0].scrollTop - c.scrollSpeed;
				if(!c.axis || c.axis != "y") if(g.overflowOffset.left + g.scrollParent[0].offsetWidth - e.pageX < c.scrollSensitivity) g.scrollParent[0].scrollLeft = d = g.scrollParent[0].scrollLeft + c.scrollSpeed;
				else if(e.pageX - g.overflowOffset.left < c.scrollSensitivity) g.scrollParent[0].scrollLeft = d = g.scrollParent[0].scrollLeft - c.scrollSpeed
			} else {
				if(!c.axis || c.axis != "x") if(e.pageY - a(document).scrollTop() < c.scrollSensitivity) d = a(document).scrollTop(a(document).scrollTop() - c.scrollSpeed);
				else if(a(window).height() - (e.pageY - a(document).scrollTop()) < c.scrollSensitivity) d = a(document).scrollTop(a(document).scrollTop() + c.scrollSpeed);
				if(!c.axis || c.axis != "y") if(e.pageX - a(document).scrollLeft() < c.scrollSensitivity) d = a(document).scrollLeft(a(document).scrollLeft() - c.scrollSpeed);
				else if(a(window).width() - (e.pageX - a(document).scrollLeft()) < c.scrollSensitivity) d = a(document).scrollLeft(a(document).scrollLeft() + c.scrollSpeed)
			}
			d !== false && a.ui.ddmanager && !c.dropBehaviour && a.ui.ddmanager.prepareOffsets(g, e)
		}
	});
	a.ui.plugin.add("draggable", "snap", {
		start: function() {
			var e = a(this).data("draggable"),
				g = e.options;
			e.snapElements = [];
			a(g.snap.constructor != String ? g.snap.items || ":data(draggable)" : g.snap).each(function() {
				var c = a(this),
					d = c.offset();
				this != e.element[0] && e.snapElements.push({
					item: this,
					width: c.outerWidth(),
					height: c.outerHeight(),
					top: d.top,
					left: d.left
				})
			})
		},
		drag: function(e, g) {
			for(var c = a(this).data("draggable"), d = c.options, b = d.snapTolerance, f = g.offset.left, j = f + c.helperProportions.width, n = g.offset.top, l = n + c.helperProportions.height, o = c.snapElements.length - 1; o >= 0; o--) {
				var q = c.snapElements[o].left,
					v = q + c.snapElements[o].width,
					x = c.snapElements[o].top,
					y = x + c.snapElements[o].height;
				if(q - b < f && f < v + b && x - b < n && n < y + b || q - b < f && f < v + b && x - b < l && l < y + b || q - b < j && j < v + b && x - b < n && n < y + b || q - b < j && j < v + b && x - b < l && l < y + b) {
					if(d.snapMode != "inner") {
						var D = Math.abs(x - l) <= b,
							B = Math.abs(y - n) <= b,
							u = Math.abs(q - j) <= b,
							F = Math.abs(v - f) <= b;
						if(D) g.position.top = c._convertPositionTo("relative", {
							top: x - c.helperProportions.height,
							left: 0
						}).top - c.margins.top;
						if(B) g.position.top = c._convertPositionTo("relative", {
							top: y,
							left: 0
						}).top - c.margins.top;
						if(u) g.position.left = c._convertPositionTo("relative", {
							top: 0,
							left: q - c.helperProportions.width
						}).left - c.margins.left;
						if(F) g.position.left = c._convertPositionTo("relative", {
							top: 0,
							left: v
						}).left - c.margins.left
					}
					var I = D || B || u || F;
					if(d.snapMode != "outer") {
						D = Math.abs(x - n) <= b;
						B = Math.abs(y - l) <= b;
						u = Math.abs(q - f) <= b;
						F = Math.abs(v - j) <= b;
						if(D) g.position.top = c._convertPositionTo("relative", {
							top: x,
							left: 0
						}).top - c.margins.top;
						if(B) g.position.top = c._convertPositionTo("relative", {
							top: y - c.helperProportions.height,
							left: 0
						}).top - c.margins.top;
						if(u) g.position.left = c._convertPositionTo("relative", {
							top: 0,
							left: q
						}).left - c.margins.left;
						if(F) g.position.left = c._convertPositionTo("relative", {
							top: 0,
							left: v - c.helperProportions.width
						}).left - c.margins.left
					}
					if(!c.snapElements[o].snapping && (D || B || u || F || I)) c.options.snap.snap && c.options.snap.snap.call(c.element, e, a.extend(c._uiHash(), {
						snapItem: c.snapElements[o].item
					}));
					c.snapElements[o].snapping = D || B || u || F || I
				} else {
					c.snapElements[o].snapping && c.options.snap.release && c.options.snap.release.call(c.element, e, a.extend(c._uiHash(), {
						snapItem: c.snapElements[o].item
					}));
					c.snapElements[o].snapping = false
				}
			}
		}
	});
	a.ui.plugin.add("draggable", "stack", {
		start: function() {
			var e = a(this).data("draggable").options;
			e = a.makeArray(a(e.stack)).sort(function(c, d) {
				return(parseInt(a(c).css("zIndex"), 10) || 0) - (parseInt(a(d).css("zIndex"), 10) || 0)
			});
			if(e.length) {
				var g = parseInt(e[0].style.zIndex) || 0;
				a(e).each(function(c) {
					this.style.zIndex = g + c
				});
				this[0].style.zIndex = g + e.length
			}
		}
	});
	a.ui.plugin.add("draggable", "zIndex", {
		start: function(e, g) {
			var c = a(g.helper),
				d = a(this).data("draggable").options;
			if(c.css("zIndex")) d._zIndex = c.css("zIndex");
			c.css("zIndex", d.zIndex)
		},
		stop: function(e, g) {
			var c = a(this).data("draggable").options;
			c._zIndex && a(g.helper).css("zIndex", c._zIndex)
		}
	})
})(jQuery);
(function(a) {
	a.widget("ui.droppable", {
		widgetEventPrefix: "drop",
		options: {
			accept: "*",
			activeClass: false,
			addClasses: true,
			greedy: false,
			hoverClass: false,
			scope: "default",
			tolerance: "intersect"
		},
		_create: function() {
			var e = this.options,
				g = e.accept;
			this.isover = 0;
			this.isout = 1;
			this.accept = a.isFunction(g) ? g : function(c) {
				return c.is(g)
			};
			this.proportions = {
				width: this.element[0].offsetWidthnager.droppables[e.options.scope] || [],
				d = g ? g.type : null,
				b = (e.currentItem || e.element).find(":data(droppable)").andSelf(),
				f = 0;
			a: for(; f < c.length; f++) if(!(c[f].options.disabled || e && !c[f].accept.call(c[f].element[0], e.currentItem || e.element))) {
				for(var j = 0; j < b.length; j++) if(b[j] == c[f].element[0]) {
					c[f].proportions.height = 0;
					continue a
				}
				c[f].visible = c[f].element.css("display") != "none";
				if(c[f].visible) {
					c[f].offset = c[f].element.offset();
					c[f].proportions = {
						width: c[f].element[0].offsetWidth,
						height: c[f].element[0].offsetHeight
					};
					d == "mousedown" && c[f]._activate.call(c[f], g)
				}
			}
		},
		drop: function(e, g) {
			var c = false;
			a.each(a.ui.ddmanager.droppables[e.options.scope] || [], function() {
				if(this.options) {
					if(!this.options.disabled && this.visible && a.ui.intersect(e, this, this.options.tolerance)) c = c || this._drop.call(this, g);
					if(!this.options.disabled && this.visible && this.accept.call(this.element[0], e.currentItem || e.element)) {
						this.isout = 1;
						this.isover = 0;
						this._deactivate.call(this, g)
					}
				}
			});
			return c
		},
		drag: function(e, g) {
			e.options.refreshPositions && a.ui.ddmanager.prepareOffsets(e, g);
			a.each(a.ui.ddmanager.droppables[e.options.scope] || [], function() {
				if(!(this.options.disabled || this.greedyChild || !this.visible)) {
					var c = a.ui.intersect(e, this, this.options.tolerance);
					if(c = !c && this.isover == 1 ? "isout" : c && this.isover == 0 ? "isover" : null) {
						var d;
						if(this.options.greedy) {
							var b = this.element.parents(":data(droppable):eq(0)");
							if(b.length) {
								d = a.data(b[0], "droppable");
								d.greedyChild = c == "isover" ? 1 : 0
							}
						}
						if(d && c == "isover") {
							d.isover = 0;
							d.isout = 1;
							d._out.call(d, g)
						}
						this[c] = 1;
						this[c == "isout" ? "isover" : "isout"] = 0;
						this[c == "isover" ? "_over" : "_out"].call(this, g);
						if(d && c == "isout") {
							d.isout = 0;
							d.isover = 1;
							d._over.call(d, g)
						}
					}
				}
			})
		}
	}
})(jQuery);
(function(a) {
	a.widget("ui.resizable", a.ui.mouse, {
		widgetEventPrefix: "resize",
		options: {
			alsoResize: false,
			animate: false,
			animateDuration: "slow",
			animateEasing: "swing",
			aspectRatio: false,
			autoHide: false,
			containment: false,
			ghost: false,
			grid: false,
			handles: "e,s,se",
			helper: false,
			maxHeight: null,
			maxWidth: null,
			minHeight: 10,
			minWidth: 10,
			zIndex: 1E3
		},
		_create: function() {
			var c = this,
				d = this.options;
			this.element.addClass("ui-resizable");
			a.extend(this, {
				_aspectRatio: !! d.aspectRatio,
				aspectRatio: d.aspectRatio,
				originalElement: this.element,
				_proportionallyResizeElements: [],
				_helper: d.helper || d.ghost || d.animate ? d.helper || "ui-resizable-helper" : null
			});
			if(this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i)) {
				/relative/.test(this.element.css("position")) && a.browser.opera && this.element.css({
					position: "relative",
					top: "auto",
					left: "auto"
				});
				this.element.wrap(a('<div class="ui-wrapper" style="overflow: hidden;"></div>').css({
					position: this.element.css("position"),
					width: this.element.outerWidth(),
					height: this.element.outerHeight(),
					top: this.element.css("top"),
					left: this.element.css("left")
				}));
				this.element = this.element.parent().data("resizable", this.element.data("resizable"));
				this.elementIsWrapper = true;
				this.element.css({
					marginLeft: this.originalElement.css("marginLeft"),
					marginTop: this.originalElement.css("marginTop"),
					marginRight: this.originalElement.css("marginRight"),
					marginBottom: this.originalElement.css("marginBottom")
				});
				this.originalElement.css({
					marginLeft: 0,
					marginTop: 0,
					marginRight: 0,
					marginBottom: 0
				});
				this.originalResizeStyle = this.originalElement.css("resize");
				this.originalElement.css("resize", "none");
				this._proportionallyResizeElements.push(this.originalElement.css({
					position: "static",
					zoom: 1,
					display: "block"
				}));
				this.originalElement.css({
					margin: this.originalElement.css("margin")
				});
				this._proportionallyResize()
			}
			this.handles = d.handles || (!a(".ui-resizable-handle", this.element).length ? "e,s,se" : {
				n: ".ui-resizable-n",
				e: ".ui-resizable-e",
				s: ".ui-resizable-s",
				w: ".ui-resizable-w",
				se: ".ui-resizable-se",
				sw: ".ui-resizable-sw",
				ne: ".ui-resizable-ne",
				nw: ".ui-resizable-nw"
			});
			if(this.handles.constructor == String) {
				if(this.handles == "all") this.handles = "n,e,s,w,se,sw,ne,nw";
				var b = this.handles.split(",");
				this.handles = {};
				for(var f = 0; f < b.length; f++) {
					var j = a.trim(b[f]),
						n = a('<div class="ui-resizable-handle ' + ("ui-resizable-" + j) + '"></div>');
					/sw|se|ne|nw/.test(j) && n.css({
						zIndex: ++d.zIndex
					});
					"se" == j && n.addClass("ui-icon ui-icon-gripsmall-diagonal-se");
					this.handles[j] = ".ui-resizable-" + j;
					this.element.append(n)
				}
			}
			this._renderAxis = function(l) {
				l = l || this.element;
				for(var o in this.handles) {
					if(this.handles[o].constructor == String) this.handles[o] = a(this.handles[o], this.element).show();
					if(this.elementIsWrapper && this.originalElement[0].nodeName.match(/textarea|input|select|button/i)) {
						var q = a(this.handles[o], this.element),
							v = 0;
						v = /sw|ne|nw|se|n|s/.test(o) ? q.outerHeight() : q.outerWidth();
						q = ["padding", /ne|nw|n/.test(o) ? "Top" : /se|sw|s/.test(o) ? "Bottom" : /^e$/.test(o) ? "Right" : "Left"].join("");
						l.css(q, v);
						this._proportionallyResize()
					}
					a(this.handles[o])
				}
			};
			this._renderAxis(this.element);
			this._handles = a(".ui-resizable-handle", this.element).disableSelection();
			this._handles.mouseover(function() {
				if(!c.resizing) {
					if(this.className) var l = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i);
					c.axis = l && l[1] ? l[1] : "se"
				}
			});
			if(d.autoHide) {
				this._handles.hide();
				a(this.element).addClass("ui-resizable-autohide").hover(function() {
					a(this).removeClass("ui-resizable-autohide");
					c._handles.show()
				}, function() {
					if(!c.resizing) {
						a(this).addClass("ui-resizable-autohide");
						c._handles.hide()
					}
				})
			}
			this._mouseInit()
		},
		destroy: function() {
			this._mouseDestroy();
			var c = function(b) {
					a(b).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").unbind(".resizable").find(".ui-resizable-handle").remove()
				};
			if(this.elementIsWrapper) {
				c(this.element);
				var d = this.element;
				d.after(this.originalElement.css({
					position: d.css("position"),
					width: d.outerWidth(),
					height: d.outerHeight(),
					top: d.css("top"),
					left: d.css("left")
				})).remove()
			}
			this.originalElement.css("resize", this.originalResizeStyle);
			c(this.originalElement);
			return this
		},
		_mouseCapture: function(c) {
			var d = false,
				b;
			for(b in this.handles) if(a(this.handles[b])[0] == c.target) d = true;
			return !this.options.disabled && d
		},
		_mouseStart: function(c) {
			var d = this.options,
				b = this.element.position(),
				f = this.element;
			this.resizing = true;
			this.documentScroll = {
				top: a(document).scrollTop(),
				left: a(document).scrollLeft()
			};
			if(f.is(".ui-draggable") || /absolute/.test(f.css("position"))) f.css({
				position: "absolute",
				top: b.top,
				left: b.left
			});
			a.browser.opera && /relative/.test(f.css("position")) && f.css({
				position: "relative",
				top: "auto",
				left: "auto"
			});
			this._renderProxy();
			b = e(this.helper.css("left"));
			var j = e(this.helper.css("top"));
			if(d.containment) {
				b += a(d.containment).scrollLeft() || 0;
				j += a(d.containment).scrollTop() || 0
le = this.originalElement.css("resize");
				this.originalElement.css("resize", "none");
				this._proportionallyResizeElements.push(this.originalElement.css({
					position: "static",
					zoom: 1,
					display: "block"
				}));
				this.originalElement.css({
					margin: this.originalElement.css("margin")
				});
				this._proportionallyResize()
			}
			this.handles = d.handles || (!a(".ui-resizable-handle", this.element).length ? "e,s,se" : {
				n: ".ui-resizable-n",
				e: ".ui-resizable-e",
				s: ".ui-resizable-s",
				w: ".ui-resizable-w",
				se: ".ui-resizable-se",
				sw: ".ui-resizable-sw",
				ne: ".ui-resizable-ne",
				nw: ".ui-resizable-nw"
			});
			if(this.handles.constructor == String) {
				if(this.handles == "all") this.handles = "n,e,s,w,se,sw,ne,nw";
				var b = this.handles.split(",");
				this.handles = {};
				for(var f = 0; f < b.length; f++) {
					var j = a.trim(b[f]),
						n = a('<div class="ui-resizable-handle ' + ("ui-resizable-" + j) + '"></div>');
					/sw|se|ne|nw/.test(j) && n.css({
						zIndex: ++d.zIndex
					});
					"se" == j && n.addClass("ui-icon ui-icon-gripsmall-diagonal-se");
					this.handles[j] = ".ui-resizable-" + j;
					this.element.append(n)
				}
			}
			this._renderAxis = function(l) {
				l = l || this.element;
				for(var o in this.handles) {
					if(this.handles[o].constructor == String) this.handles[o] = a(this.handles[o], this.element).show();
					if(this.elementIsWrapper && this.originalElement[0].nodeName.match(/textarea|input|select|button/i)) {
						var q = a(this.handles[o], this.element),
							v = 0;
						v = /sw|ne|nw|se|n|s/.test(o) ? q.outerHeight() : q.outerWidth();
						q = ["padding", /ne|nw|n/.test(o) ? "Top" : /se|sw|s/.test(o) ? "Bottom" : /^e$/.test(o) ? "Right" : "Left"].join("");
						l.css(q, v);
						this._proportionallyResize()
					}
					a(this.handles[o])
				}
			};
			this._renderAxis(this.element);
			this._handles = a(".ui-resizable-handle", this.element).disableSelection();
			this._handles.mouseover(function() {
				if(!c.resizing) {
					if(this.className) var l = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i);
					c.axis = l && l[1] ? l[1] : "se"
				}
			});
			if(d.autoHide) {
				this._handles.hide();
				a(this.element).addClass("ui-resizable-autohide").hover(function() {
					a(this).removeClass("ui-resizable-autohide");
					c._handles.show()
				}, function() {
					if(!c.resizing) {
						a(this).addClass("ui-resizable-autohide");
						c._handles.hide()
					}
				})
			}
			this._mouseInit()
		},
		destroy: function() {
			this._mouseDestroy();
			var c = function(b) {
					a(b).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").unbind(".resizable").find(".ui-resizable-handle").remove()
				};
			if(this.elementIsWrapper) {
				c(this.element);
				var d = this.element;
				d.after(this.originalElement.css({
					position: d.css("position"),
					width: d.outerWidth(),
					height: d.outerHeight(),
					top: d.css("top"),
					left: d.css("left")
				})).remove()
			}
			this.originalElement.css("resize", this.originalResizeStyle);
			c(this.originalElement);
			return this
		},
		_mouseCapture: function(c) {
			var d = false,
				b;
			for(b in this.handles) if(a(this.handles[b])[0] == c.target) d = true;
			return !this.options.disabled && d
		},
		_mouseStart: function(c) {
			var d = this.options,
				b = this.element.position(),
				f = this.element;
			this.resizing = true;
			this.documentScroll = {
				top: a(document).scrollTop(),
				left: a(document).scrollLeft()
			};
			if(f.is(".ui-draggable") || /absolute/.test(f.css("position"))) f.css({
				position: "absolute",
				top: b.top,
				left: b.left
			});
			a.browser.opera && /relative/.test(f.css("position")) && f.css({
				position: "relative",
				top: "auto",
				left: "auto"
			});
			this._renderProxy();
			b = e(this.helper.css("left"));
			var j = e(this.helper.css("top"));
			if(d.containment) {
				b += a(d.containment).scrollLeft() || 0;
				j += a(d.containment).scrollTop() || 0
			}
			this.offset = this.helper.offset();
			this.position = {
				left: b,
				top: j
			};
			this.size = this._helper ? {
				width: f.outerWidth(),
				height: f.outerHeight()
			} : {
				width: f.width(),
				height: f.height()
			};
			this.originalSize = this._helper ? {
				width: f.outerWidth(),
				height: f.outerHeight()
			} : {
				width: f.width(),
				height: f.height()
			};
			this.originalPosition = {
				left: b,
				top: j
			};
			this.sizeDiff = {
				width: f.outerWidth() - f.width(),
				height: f.outerHeight() - f.height()
			};
			this.originalMousePosition = {
				left: c.pageX,
				top: c.pageY
			};
			this.aspectRatio = typeof d.aspectRatio == "number" ? d.aspectRatio : this.originalSize.width / this.originalSize.height || 1;
			d = a(".ui-resizable-" + this.axis).css("cursor");
			a("body").css("cursor", d == "auto" ? this.axis + "-resize" : d);
			f.addClass("ui-resizable-resizing");
			this._propagate("start", c);
			return true
		},
		_mouseDrag: function(c) {
			var d = this.helper,
				b = this.originalMousePosition,
				f = this._change[this.axis];
			if(!f) return false;
			b = f.apply(this, [c, c.pageX - b.left || 0, c.pageY - b.top || 0]);
			if(this._aspectRatio || c.shiftKey) b = this._updateRatio(b, c);
			b = this._respectSize(b, c);
			this._propagate("resize", c);
			d.css({
				top: this.position.top + "px",
				left: this.position.left + "px",
				width: this.size.width + "px",
				height: this.size.height + "px"
			});
			!this._helper && this._proportionallyResizeElements.length && this._proportionallyResize();
			this._updateCache(b);
			this._trigger("resize", c, this.ui());
			return false
		},
		_mouseStop: function(c) {
			this.resizing = false;
			var d = this.options;
			if(this._helper) {
				var b = this._proportionallyResizeElements,
					f = b.length && /textarea/i.test(b[0].nodeName);
				b = f && a.ui.hasScroll(b[0], "left") ? 0 : this.sizeDiff.height;
				f = {
					width: this.size.width - (f ? 0 : this.sizeDiff.width),
					height: this.size.height - b
				};
				b = parseInt(this.element.css("left"), 10) + (this.position.left - this.originalPosition.left) || null;
				var j = parseInt(this.element.css("top"), 10) + (this.position.top - this.originalPosition.top) || null;
				d.animate || this.element.css(a.extend(f, {
					top: j,
					left: b
				}));
				this.helper.height(this.size.height);
				this.helper.width(this.size.width);
				this._helper && !d.animate && this._proportionallyResize()
			}
			a("body").css("cursor", "auto");
			this.element.removeClass("ui-resizable-resizing");
			this._propagate("stop", c);
			this._helper && this.helper.remove();
			return false
		},
		_updateCache: function(c) {
			this.offset = this.helper.offset();
			if(g(c.left)) this.position.left = c.left;
			if(g(c.top)) this.position.top = c.top;
			if(g(c.height)) this.size.height = c.height;
			if(g(c.width)) this.size.width = c.width
		},
		_updateRatio: function(c) {
			var d = this.position,
				b = this.size,
				f = this.axis;
			if(c.height) c.width = b.height * this.aspectRatio;
			else if(c.width) c.height = b.width / this.aspectRatio;
			if(f == "sw") {
				c.left = d.left + (b.width - c.width);
				c.top = null
			}
			if(f == "nw") {
				c.top = d.top + (b.height - c.height);
				c.left = d.left + (b.width - c.width)
			}
			return c
		},
		_respectSize: function(c) {
			var d = this.options,
				b = this.axis,
				f = g(c.width) && d.maxWidth && d.maxWidth < c.width,
				j = g(c.height) && d.maxHeight && d.maxHeight < c.height,
				n = g(c.width) && d.minWidth && d.minWidth > c.width,
				l = g(c.height) && d.minHeight && d.minHeight > c.height;
			if(n) c.width = d.minWidth;
			if(l) c.height = d.minHeight;
			if(f) c.width = d.maxWidth;
			if(j) c.height = d.maxHeight;
			var o = this.originalPosition.left + this.originalSize.width,
				q = this.position.top + this.size.height,
				v = /sw|nw|w/.test(b);
			b = /nw|ne|n/.test(b);
			if(n && v) c.left = o - d.minWidth;
			if(f && v) c.left = o - d.maxWidth;
			if(l && b) c.top = q - d.minHeight;
			if(j && b) c.top = q - d.maxHeight;
			if((d = !c.width && !c.height) && !c.left && c.top) c.top = null;
			else if(d && !c.top && c.left) c.left = null;
			return c
		},
		_proportionallyResize: function() {
			if(this._proportionallyResizeElements.length) for(var c = this.helper || this.element, d = 0; d < this._proportionallyResizeElements.length; d++) {
				var b = this._proportionallyResizeElements[d];
				if(!this.borderDif) {
					var f = [b.css("borderTopWidth"), b.css("borderRightWidth"), b.css("borderBottomWidth"), b.css("borderLeftWidth")],
						j = [b.css("paddingTop"), b.css("paddingRight"), b.css("paddingBottom"), b.css("paddingLeft")];
					this.borderDif = a.map(f, function(n, l) {
						var o = parseInt(n, 10) || 0,
							q = parseInt(j[l], 10) || 0;
						return o + q
					})
				}
				a.browser.msie && (a(c).is(":hidden") || a(c).parents(":hidden").length) || b.css({
					height: c.height() - this.borderDif[0] - this.borderDif[2] || 0,
					width: c.width() - this.borderDif[1] - this.borderDif[3] || 0
				})
			}
		},
		_renderProxy: function() {
			var c = this.options;
			this.elementOffset = this.element.offset();
			if(this._helper) {
				this.helper = this.helper || a('<div style="overflow:hidden;"></div>');
				var d = a.browser.msie && a.browser.version < 7,
					b = d ? 1 : 0;
				d = d ? 2 : -1;
				this.helper.addClass(this._helper).css({
					width: this.element.outerWidth() + d,
					height: this.element.outerHeight() + d,
					position: "absolute",
					left: this.elementOffset.left - b + "px",
					top: this.elementOffset.top - b + "px",
					zIndex: ++c.zIndex
				});
				this.helper.appendTo("body").disableSelection()
			} else this.helper = this.element
		},
		_change: {
			e: function(c, d) {
				return {
					width: this.originalSize.width + d
				}
			},
			w: function(c, d) {
				return {
					left: this.originalPosition.left + d,
					width: this.originalSize.width - d
				}
			},
			n: function(c, d, b) {
				return {
					top: this.originalPosition.top + b,
					height: this.originalSize.height - b
				}
			},
			s: function(c, d, b) {
				return {
					height: this.originalSize.height + b
				}
			},
			se: function(c, d, b) {
				return a.extend(this._change.s.apply(this, arguments), this._change.e.apply(this, [c, d, b]))
			},
			sw: function(c, d, b) {
				return a.extend(this._change.s.apply(this, arguments), this._change.w.apply(this, [c, d, b]))
			},
			ne: function(c, d, b) {
				return a.extend(this._change.n.apply(this, arguments), this._change.e.apply(this, [c, d, b]))
			},
			nw: function(c, d, b) {
				return a.extend(this._change.n.apply(this, arguments), this._change.w.apply(this, [c, d, b]))
			}
		},
		_propagate: function(c, d) {
			a.ui.plugin.call(this, c, [d, this.ui()]);
			c != "resize" && this._trigger(c, d, this.ui())
		},
		plugins: {},
		ui: function() {
			return {
				originalElement: this.originalElement,
				element: this.element,
				helper: this.helper,
				position: this.position,
				size: this.size,
				originalSize: this.originalSize,
				originalPosition: this.originalPosition
			}
		}
	});
	a.extend(a.ui.resizable, {
		version: "1.8.6"
	});
	a.ui.plugin.add("resizable", "alsoResize", {
		start: function() {
			var c = a(this).data("resizable").options,
				d = function(b) {
					a(b).each(function() {
						var f = a(this);
						f.data("resizable-alsoresize", {
							width: parseInt(f.width(), 10),
							height: parseInt(f.height(), 10),
							left: parseInt(f.css("left"), 10),
							top: parseInt(f.css("top"), 10),
							position: f.css("position")
						})
					})
				};
			if(typeof c.alsoResize == "object" && !c.alsoResize.parentNode) if(c.alsoResize.length) {
				c.alsoResize = c.alsoResize[0];
				d(c.alsoResize)
			} else a.each(c.alsoResize, function(b) {
				d(b)
			});
			else d(c.alsoResize)
		},
		resize: function(c, d) {
			var b = a(this).data("resizable"),
				f = b.options,
				j = b.originalSize,
				n = b.originalPosition,
				l = {
					height: b.size.height - j.height || 0,
					width: b.size.width - j.width || nt && /static/.test(l.css("position"))) n = f;
			if(j.left < (d._helper ? f.left : 0)) {
				d.size.width += d._helper ? d.position.left - f.left : d.position.left - n.left;
				if(c) d.size.height = d.size.width / b.aspectRatio;
				d.position.left = b.helper ? f.left : 0
			}
			if(j.top < (d._helper ? f.top : 0)) {
				d.size.height += d._helper ? d.position.top - f.top : d.position.top;
				if(c) d.size.width = d.size.height * b.aspectRatio;
				d.position.top = d._helper ? f.top : 0
			}
			d.offset.left = d.parentData.left + d.position.left;
			d.offset.top = d.parentData.top + d.position.top;
			b = Math.abs((d._helper ? d.offset.left - n.left : d.offset.left - n.left) + d.sizeDiff.width);
			f = Math.abs((d._helper ? d.offset.top - n.top : d.offset.top - f.top) + d.sizeDiff.height);
			j = d.containerElement.get(0) == d.element.parent().get(0);
			n = /relative|absolute/.test(d.containerElement.css("position"));
			if(j && n) b -= d.parentData.left;
			if(b + d.size.width >= d.parentData.width) {
				d.size.width = d.parentData.width - b;
				if(c) d.size.height = d.size.width / d.aspectRatio
			}
			if(f + d.size.height >= d.parentData.height) {
				d.size.height = d.parentData.height - f;
				if(c) d.size.width = d.size.height * d.aspectRatio
			}
		},
		stop: function() {
			var c = a(this).data("resizable"),
				d = c.options,
				b = c.containerOffset,
				f = c.containerPosition,
				j = c.containerElement,
				n = a(c.helper),
				l = n.offset(),
				o = n.outerWidth() - c.sizeDiff.width;
			n = n.outerHeight() - c.sizeDiff.height;
			c._helper && !d.animate && /relative/.test(j.css("position")) && a(this).css({
				left: l.left - f.left - b.left,
				width: o,
				height: n
			});
			c._helper && !d.animate && /static/.test(j.css("position")) && a(this).css({
				left: l.left - f.left - b.left,
				width: o,
				height: n
			})
		}
	});
	a.ui.plugin.add("resizable", "ghost", {
		start: function() {
			var c = a(this).data("resizable"),
				d = c.options,
				b = c.size;
			c.ghost = c.originalElement.clone();
			c.ghost.css({
				opacity: 0.25,
				display: "block",
				position: "relative",
				height: b.height,
				width: b.width,
				margin: 0,
				left: 0,
				top: 0
			}).addClass("ui-resizable-ghost").addClass(typeof d.ghost == "string" ? d.ghost : "");
			c.ghost.appendTo(c.helper)
		},
		resize: function() {
			var c = a(this).data("resizable");
			c.ghost && c.ghost.css({
				position: "relative",
				height: c.size.height,
				width: c.size.width
			})
		},
		stop: function() {
			var c = a(this).data("resizable");
			c.ghost && c.helper && c.helper.get(0).removeChild(c.ghost.get(0))
		}
	});
	a.ui.plugin.add("resizable", "grid", {
		resize: function() {
			var c = a(this).data("resizable"),
				d = c.options,
				b = c.size,
				f = c.originalSize,
				j = c.originalPosition,
				n = c.axis;
			d.grid = typeof d.grid == "number" ? [d.grid, d.grid] : d.grid;
			var l = Math.round((b.width - f.width) / (d.grid[0] || 1)) * (d.grid[0] || 1);
			d = Math.round((b.height - f.height) / (d.grid[1] || 1)) * (d.grid[1] || 1);
			if(/^(se|s|e)$/.test(n)) {
				c.size.width = f.width + l;
				c.size.height = f.height + d
			} else if(/^(ne)$/.test(n)) {
				c.size.width = f.width + l;
				c.size.height = f.height + d;
				c.position.top = j.top - d
			} else {
				if(/^(sw)$/.test(n)) {
					c.size.width = f.width + l;
					c.size.height = f.height + d
				} else {
					c.size.width = f.width + l;
					c.size.height = f.height + d;
					c.position.top = j.top - d
				}
				c.position.left = j.left - l
			}
		}
	});
	var e = function(c) {
			return parseInt(c, 10) || 0
		},
		g = function(c) {
			return !isNaN(parseInt(c, 10))
		}
})(jQuery);
(function(a) {
	a.widget("ui.selectable", a.ui.mouse, {
		options: {
			appendTo: "body",
			autoRefresh: true,
			distance: 0,
			filter: "*",
			tolerance: "touch"
		},
		_create: function() {
			var e = this;
			this.element.addClass("ui-selectable");
			this.dragged = false;
			var g;
			this.refresh = function() {
				g = a(e.options.filter, e.element[0]);
				g.each(function() {
					var c = a(this),
						d = c.offset();
					a.data(this, "selectable-item", {
						element: this,
						$element: c,
						left: d.left,
						top: d.top,
						right: d.left + c.outerWidth(),
						bottom: d.top + c.outerHeight(),
						startselected: false,
						selected: c.hasClass("ui-selected"),
						selecting: c.hasClass("ui-selecting"),
						unselecting: c.hasClass("ui-unselecting")
					})
				})
			};
			this.refresh();
			this.selectees = g.addClass("ui-selectee");
			this._mouseInit();
			this.helper = a("<div class='ui-selectable-helper'></div>")
		},
		destroy: function() {
			this.selectees.removeClass("ui-selectee").removeData("selectable-item");
			this.element.removeClass("ui-selectable ui-selectable-disabled").removeData("selectable").unbind(".selectable");
			this._mouseDestroy();
			return this
		},
		_mouseStart: function(e) {
			var g = this;
			this.opos = [e.pageX, e.pageY];
			if(!this.options.disabled) {
				var c = this.options;
				this.selectees = a(c.filter, this.element[0]);
				this._trigger("start", e);
				a(c.appendTo).append(this.helper);
				this.helper.css({
					left: e.clientX,
					top: e.clientY,
					width: 0,
					height: 0
				});
				c.autoRefresh && this.refresh();
				this.selectees.filter(".ui-selected").each(function() {
					var d = a.data(this, "selectable-item");
					d.startselected = true;
					if(!e.metaKey) {
						d.$element.removeClass("ui-selected");
						d.selected = false;
						d.$element.addClass("ui-unselecting");
						d.unselecting = true;
						g._trigger("unselecting", e, {
							unselecting: d.element
						})
					}
				});
				a(e.target).parents().andSelf().each(function() {
					var d = a.data(this, "selectable-item");
					if(d) {
						var b = !e.metaKey || !d.$element.hasClass("ui-selected");
						d.$element.removeClass(b ? "ui-unselecting" : "ui-selected").addClass(b ? "ui-selecting" : "ui-unselecting");
						d.unselecting = !b;
						d.selecting = b;
						(d.selected = b) ? g._trigger("selecting", e, {
							selecting: d.element
						}) : g._trigger("unselecting", e, {
							unselecting: d.element
						});
						return false
					}
				})
			}
		},
		_mouseDrag: function(e) {
			var g = this;
			this.dragged = true;
			if(!this.options.disabled) {
				var c = this.options,
					d = this.opos[0],
					b = this.opos[1],
					f = e.pageX,
					j = e.pageY;
				if(d > f) {
					var n = f;
					f = d;
					d = n
				}
				if(b > j) {
					n = j;
					j = b;
					b = n
				}
				this.helper.css({
					left: d,
					top: b,
					width: f - d,
					height: j - b
				});
				this.selectees.each(function() {
					var l = a.data(this, "selectable-item");
					if(!(!l || l.element == g.element[0])) {
						var o = false;
						if(c.tolerance == "touch") o = !(l.left > f || l.right < d || l.top > j || l.bottom < b);
						else if(c.tolerance == "fit") o = l.left > d && l.right < f && l.top > b && l.bottom < j;
						if(o) {
							if(l.selected) {
								l.$element.removeClass("ui-selected");
								l.selected = false
							}
							if(l.unselecting) {
								l.$element.removeClass("ui-unselecting");
								l.unselecting = false
							}
							if(!l.selecting) {
								l.$element.addClass("ui-selecting");
								l.selecting = true;
								g._trigger("selecting", e, {
									selecting: l.element
								})
							}
						} else {
							if(l.selecting) if(e.metaKey && l.startselected) {
								l.$element.removeClass("ui-selecting");
								l.selecting = false;
								l.$element.addClass("ui-selected");
								l.selected = true
							} else {
								l.$element.removeClass("ui-selecting");
								l.selecting = false;
								if(l.startselected) {
									l.$element.addClass("ui-unselecting");
									l.unselecting = true
								}
								g._trigger("unselecting", e, {
									unselecting: l.element
								})
							}
							if(l.selected) if(!e.metaKey && !l.startselected) {
								l.$element.removeClass("ui-selected");
								l.selected = false;
								l.$element.addClass("ui-unselecting");
								l.unselecting = true;
								g._trigger("unselecting", e, {
									unselecting: l.element
								})
							}
						}
					}
				});
				return false
			}
		},
		_mouseStop: function(e) {
			var g = this;
			this.dragged = false;
			a(".ui-unselecting", this.element[0]).each(function() {
				var c = a.data(this, "selectable-item");
				c.$element.removeClass("ui-unselecting");
				c.unselecting = false;
				c.startselected = false;
				g._trigger("unselected", e, {
					unselected: c.element
				})
			});
			a(".ui-selecting", this.element[0]).each(function() {
				var c = a.data(this, "selectable-item");
				c.$element.removeClass("ui-selecting").addClass("ui-selected");
				c.selecting = false;
				c.selected = true;
				c.startselected = true;
				g._trigger("selected", e, {
					selected: c.element
				})
			});
			this._trigger("stop", e);
			this.helper.remove();
			return false
		}
	});
	a.extend(a.ui.selectable, {
		version: "1.8.6"
	})
})(jQuery);
(function(a) {
	a.widget("ui.sortable", a.ui.mouse, {
		widgetEventPrefix: "sort",
		options: {
			appendTo: "parent",
			axis: false,
			connectWith: false,
			containment: false,
			cursor: "auto",
			cursorAt: false,
			dropOnEmpty: true,
			forcePlaceholderSize: false,
			forceHelperSize: false,
			grid: false,
			handle: false,
			helper: "original",
			items: "> *",
			opacity: false,
			placeholder: false,
			revert: false,
			scroll: true,
			scrollSensitivity: 20,
			scrollSpeed: 20,
			scope: "default",
			tolerance: "intersect",
			zIndex: 1E3
		},
		_create: function() {
			this.containerCache = {};
			this.element.addClass("ui-sortable");
			this.refresh();
			this.floating = this.items.length ? /left|right/.test(this.items[0].item.css("float")) : false;
			this.offset = this.element.offset();
			this._mouseInit()
		},
		destroy: function() {
			this.element.removeClass("ui-sortable ui-sortable-disabled").removeData("sortable").unbind(".sortable");
			this._mouseDestroy();
			for(var e = this.items.length - 1; e >= 0; e--) this.items[e].item.removeData("sortable-item");
			return this
		},
		_setOption: function(e, g) {
			if(e === "disabled") {
				this.options[e] = g;
				this.widget()[g ? "addClass" : "removeClass"]("ui-sortable-disabled")
			} else a.Widget.prototype._setOption.apply(this, arguments)
		},
		_mouseCapture: function(e, g) {
			if(this.reverting) return false;
			if(this.options.disabled || this.options.type == "static") return false;
			this._refreshItems(e);
			var c = null,
				d = this;
			a(e.target).parents().each(function() {
				if(a.data(this, "sortable-item") == d) {
					c = a(this);
					return false
				}
			});
			if(a.data(e.target, "sortable-item") == d) c = a(e.target);
			if(!c) return false;
			if(this.options.handle && !g) {
				var b = false;
				a(this.options.handle, c).find("*").andSelf().each(function() {
					if(this == e.target) b = true
				});
				if(!b) return false
			}
			this.currentItem = c;
			this._removeCurrentsFromItems();
			return true
		},
		_mouseStart: function(e, g, c) {
			g = this.options;
			this.currentContainer = this;
			this.refreshPositions();
			this.helper = this._createHelper(e);
			this._cacheHelperProportions();
			this._cacheMargins();
			this.scrollParent = this.helper.scrollParent();
			this.offset = this.currentItem.offset();
			this.offset = {
				top: this.offset.top - this.margins.top,
				left: this.offset.left - this.margins.left
			};
			this.helper.css("position", "absolute");
			this.cssPosition = this.helper.css("position");
			a.extend(this.offset, {
				click: {
					left: e.pageX - this.offset.left,
					top: e.pageY - this.offset.top
				},
				parent: this._getParentOffset(),
				relative: this._getRelativeOffset()
			});
			this.originalPosition = this._generatePosition(e);
			this.originalPageX = e.pageX;
			this.originalPageY = e.pageY;
			g.cursorAt && this._adjustOffsetFromHelper(g.cursorAt);
			this.domPosition = {
				prev: this.currentItem.prev()[0],
				parent: this.currentItem.parent()[0]
			};
			this.helper[0] != this.currentItem[0] && this.currentItem.hide();
			this._createPlaceholder();
			g.containment && this._setContainment();
			if(g.cursor) {
				if(a("body").css("cursor")) this._storedCursor = a("body").css("cursor");
				a("body").css("cursor", g.cursor)
			}
			if(g.opacity) {
				if(this.helper.css("opacity")) this._storedOpacity = this.helper.css("opacity");
				this.helper.css("opacity", g.opacity)
			}
			if(g.zIndex) {
				if(this.helper.css("zIndex")) this._storedZIndex = this.helper.css("zIndex");
				this.helper.css("zIndex", g.zIndex)
			}
			if(this.scrollParent[0] != document && this.scrollParent[0].tagName != "HTML") this.overflowOffset = this.scrollParent.offset();
			this._trigger("start", e, this._uiHash());
			this._preserveHelperProportions || this._cacheHelperProportions();
			if(!c) for(c = this.containers.length - 1; c >= 0; c--) this.containers[c]._trigger("activate", e, this._uiHash(this));
			if(a.ui.ddmanager) a.ui.ddmanager.current = this;
			a.ui.ddmanager && !g.dropBehaviour && a.ui.ddmanager.prepareOffsets(this, e);
			this.dragging = true;
			this.helper.addClass("ui-sortable-helper");
			this._mouseDrag(e);
			return true
		},
		_mouseDrag: function(e) {
			this.position = this._generatePosition(e);
			this.positionAbs = this._convertPositionTo("absolute");
			if(!this.lastPositionAbs) this.lastPositionAbs = this.positionAbs;
			if(this.options.scroll) {
				var g = this.options,
					c = false;
				if(this.scrollParent[0] != document && this.scrollParent[0].tagName != "HTML") {
					if(this.overflowOffset.top + this.scrollParent[0].offsetHeight - e.pageY < g.scrollSensitivity) this.scrollParent[0].scrollTop = c = this.scrollParent[0].scrollTop + g.scrollSpeed;
					else if(e.pageY - this.overflowOffset.top < g.scrollSensitivity) this.scrollParent[0].scrollTop = c = this.scrollParent[0].scrollTop - g.scrollSpeed;
					if(this.overflowOffset.left + this.scrollParent[0].offsetWidth - e.pageX < g.scrollSensitivity) this.scrollParent[0].scrollLeft = c = this.scrollParent[0].scrollLeft + g.scrollSpeed;
					else if(e.pageX - this.overflowOffset.left < g.scrollSensitivity) this.scrollParent[0].scrollLeft = c = this.scrollParent[0].scrollLeft - g.scrollSpeed
				} else {
					if(e.pageY - a(document).scrollTop() < g.scrollSensitivity) c = a(document).scrollTop(a(document).scrollTop() - g.scrollSpeed);
					else if(a(window).height() - (e.pageY - a(document).scrollTop()) < g.scrollSensitivity) c = a(document).scrollTop(a(document).scrollTop() + g.scrollSpeed);
					if(e.pageX - a(document).scrollLeft() < g.scrollSensitivity) c = a(document).scrollLeft(a(document).scrollLeft() - g.scrollSpeed);
					else if(a(window).width() - (e.pageX - a(document).scrollLeft()) < g.scrollSensitivity) c = a(document).scrollLeft(a(document).scrollLeft() + g.scrollSpeed)
				}
				c !== false && a.ui.ddmanager && !g.dropBehaviour && a.ui.ddmanager.prepareOffsets(this, e)
			}
			this.positionAbs = this._convertPositionTo("absolute");
			if(!this.options.axis || this.options.axis != "y") this.helper[0].style.left = this.position.left + "px";
			if(!this.options.axis || this.options.axis != "x") this.helper[0].style.top = this.position.top + "px";
			for(g = this.items.length - 1; g >= 0; g--) {
				c = this.items[g];
				var d = c.item[0],
					b = this._intersectsWithPointer(c);
				if(b) if(d != this.currentItem[0] && this.placeholder[b == 1 ? "next" : "prev"]()[0] != d && !a.ui.contains(this.placeholder[0], d) && (this.options.type == "semi-dynamic" ? !a.ui.contains(this.element[0], d) : true)) {
					this.direction = b == 1 ? "down" : "up";
					if(this.options.tolerance == "pointer" || this._intersectsWithSides(c)) this._rearrange(e, c);
					else break;
					this._trigger("change", e, this._uiHash());
					break
				}
			}
			this._contactContainers(e);
			a.ui.ddmanager && a.ui.ddmanager.drag(this, e);
			this._trigger("sort", e, this._uiHash());
			this.lastPositionAbs = this.positionAbs;
			return false
		},
		_mouseStop: function(e, g) {
			if(e) {
				a.ui.ddmanager && !this.options.dropBehaviour && a.ui.ddmanager.drop(this, e);
				if(this.options.revert) {
					var c = this,
						d = c.placeholder.offset();
					c.reverting = true;
					a(this.helper).animate({
						left: d.left - this.offset.parent.left - c.margins.left + (this.offsetParent[0] == document.body ? 0 : this.offsetParent[0].scrollLeft),
						top: d.top - this.offset.parent.top - c.margins.top + (this.offsetParent[0] == document.body ? 0 : this.offsetParent[0].scrollTop)
					}, parseInt(this.options.revert, 10) || 500, function() {
						c._clear(e)
					})
				} else this._clear(e, g);
				return false
			}
		},
		cancel: function() {
			if(this.dragging) {
				this._mouseUp();
				this.options.helper == "original" ? this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper") : this.currentItem.show();
				for(var e = this.containers.length - 1; e >= 0; e--) {
					this.containers[e]._trigger("deactivate", null, this._uiHash(this));
					if(this.containers[e].containerCache.over) {
						this.containers[e]._trigger("out", null, this._uiHash(this));
						this.containers[e].containerCache.over = 0
					}
				}
			}
			this.placeholder[0].parentNode && this.placeholder[0].parentNode.removeChild(this.placeholder[0]);
			this.options.helper != "original" && this.helper && this.helper[0].parentNode && this.helper.remove();
			a.extend(this, {
				helper: null,
				dragging: false,
				reverting: false,
				_noFinalSort: null
			});
			this.domPosition.prev ? a(this.domPosition.prev).after(this.currentItem) : a(this.domPosition.parent).prepend(this.currentItem);
			return this
		},
		serialize: function(e) {
			var g = this._getItemsAsjQuery(e && e.connected),
				c = [];
			e = e || {};
			a(g).each(function() {
				var d = (a(e.item || this).attr(e.attribute || "id") || "").match(e.expression || /(.+)[-=_](.+)/);
				if(d) c.push((e.key || d[1] + "[]") + "=" + (e.key && e.expression ? d[1] : d[2]))
			});
			!c.length && e.key && c.push(e.key + "=");
			return c.join("&")
		},
		toArray: function(e) {
			var g = this._getItemsAsjQuery(e && e.connected),
				c = [];
			e = e || {};
			g.each(function() {
				c.push(a(e.item || this).attr(e.attribute || "id") || "")
			});
			return c
		},
		_intersectsWith: function(e) {
			var g = this.positionAbs.left,
				c = g + this.helperProportions.width,
				d = this.positionAbs.top,
				b = d + this.helperProportions.height,
				f = e.left,
				j = f + e.width,
				n = e.top,
				l = n + e.height,
				o = this.offset.click.top,
				q = this.offset.click.left;
			o = d + o > n && d + o < l && g + q > f && g + q < j;
			return this.options.tolerance == "pointer" || this.options.forcePointerForContainers || this.options.tolerance != "pointer" && this.helperProportions[this.floating ? "width" : "height"] > e[this.floating ? "width" : "height"] ? o : f < g + this.helperProportions.width / 2 && c - this.helperProportions.width / 2 < j && n < d + this.helperProportions.height / 2 && b - this.helperProportions.height / 2 < l
		},
		_intersectsWithPointer: function(e) {
			var g = a.ui.isOverAxis(this.positionAbs.top + this.offset.click.top, e.top, e.height);
			e = a.ui.isOverAxis(this.positionAbs.left + this.offset.click.left, e.left, e.width);
			g = g && e;
			e = this._getDragVerticalDirection();
			var c = this._getDragHorizontalDirection();
			if(!g) return false;
			return this.floating ? c && c == "right" || e == "down" ? 2 : 1 : e && (e == "down" ? 2 : 1)
		},
		_intersectsWithSides: function(e) {
			var g = a.ui.isOverAxis(this.positionAbs.top + this.offset.click.top, e.top + e.height / 2, e.height);
			e = a.ui.isOverAxis(this.positionAbs.left + this.offset.click.left, e.left + e.width / 2, e.width);
			var c = this._getDragVerticalDirection(),
				d = this._getDragHorizontalDirection();
			return this.floating && d ? d == "right" && e || d == "left" && !e : c && (c == "down" && g || c == "up" && !g)
		},
		_getDragVerticalDirection: function() {
			var e = this.positionAbs.top - this.lastPositionAbs.top;
			return e != 0 && (e > 0 ? "down" : "up")
		},
		_getDragHorizontalDirection: function() {
			var e = this.positionAbs.left - this.lastPositionAbs.left;
			return e != 0 && (e > 0 ? "right" : "left")
		},
		refresh: function(e) {
			this._refreshItems(e);
			this.refreshPositions();
			return this
		},
		_connectWith: function() {
			var e = this.options;
			return e.connectWith.constructor == String ? [e.connectWith] : e.connectWith
		},
		_getItemsAsjQuery: function(e) {
			var g = [],
				c = [],
				d = this._connectWith();
			if(d && e) for(e = d.length - 1; e >= 0; e--) for(var b = a(d[e]), f = b.length - 1; f >= 0; f--) {
				var j = a.data(b[f], "sortable");
				if(j && j != this && !j.options.disabled) c.push([a.isFunction(j.options.items) ? j.options.items.call(j.element) : a(j.options.items, j.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), j])
			}
			c.push([a.isFunction(this.options.items) ? this.options.items.call(this.element, null, {
				options: this.options,
				item: this.currentItem
			}) : a(this.options.items, this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), this]);
			for(e = c.length - 1; e >= 0; e--) c[e][0].each(function() {
				g.push(this)
			});
			return a(g)
		},
		_removeCurrentsFromItems: function() {
			for(var e = this.currentItem.find(":data(sortable-item)"), g = 0; g < this.items.length; g++) for(var c = 0; c < e.length; c++) e[c] == this.items[g].item[0] && this.items.splice(g, 1)
		},
		_refreshItems: function(e) {
			this.items = [];
			this.containers = [this];
			var g = this.items,
				c = [
					[a.isFunction(this.options.items) ? this.options.items.call(this.element[0], e, {
						item: this.currentItem
					}) : a(this.options.items, this.element), this]
				],
				d = this._connectWith();
			if(d) for(var b = d.length - 1; b >= 0; b--) for(var f = a(d[b]), j = f.length - 1; j >= 0; j--) {
				var n = a.data(f[j], "sortable");
				if(n && n != this && !n.options.disabled) {
					c.push([a.isFunction(n.options.items) ? n.options.items.call(n.element[0], e, {
						item: this.currentItem
					}) : a(n.options.items, n.element), n]);
					this.containers.push(n)
				}
			}
			for(b = c.length - 1; b >= 0; b--) {
				e = c[b][1];
				d = c[b][0];
				j = 0;
				for(f = d.length; j < f; j++) {
					n = a(d[j]);
					n.data("sortable-item", e);
					g.push({
						item: n,
						instance: e,
						width: 0,
						height: 0,
						left: 0,
						top: 0
					})
				}
			}
		},
		refreshPositions: function(e) {
			if(this.offsetParent && this.helper) this.offset.parent = this._getParentOffset();
			for(var g = this.items.length - 1; g >= 0; g--) {
				var c = this.items[g],
					d = this.options.toleranceElement ? a(this.options.toleranceElement, c.item) : c.item;
				if(!e) {
					c.width = d.outerWidth();
					c.height = d.outerHeight()
				}
				d = d.offset();
				c.left = d.left;
				c.top = d.top
			}
			if(this.options.custom && this.options.custom.refreshContainers) this.options.custom.refreshContainers.call(this);
			else for(g = this.containers.length - 1; g >= 0; g--) {
				d = this.containers[g].element.offset();
				this.containers[g].containerCache.left = d.left;
				this.containers[g].containerCache.top = d.top;
				this.containers[g].containerCache.width = this.containers[g].element.outerWidth();
				this.containers[g].containerCache.height = this.containers[g].element.outerHeight()
			}
			return this
		},
		_createPlaceholder: function(e) {
			var g = e || this,
				c = g.options;
			if(!c.placeholder || c.placeholder.constructor == String) {
				var d = c.placeholder;
				c.placeholder = {
					element: function() {
						var b = a(document.createElement(g.currentItem[0].nodeName)).addClass(d || g.currentItem[0].className + " ui-sortable-placeholder").removeClass("ui-sortable-helper")[0];
						if(!d) b.style.visibility = "hidden";
						return b
					},
					update: function(b, f) {
						if(!(d && !c.forcePlaceholderSize)) {
							f.height() || f.height(g.currentItem.innerHeight() - parseInt(g.currentItem.css("paddingTop") || 0, 10) - parseInt(g.currentItem.css("paddingBottom") || 0, 10));
							f.width() || f.width(g.currentItem.innerWidth() - parseInt(g.currentItem.css("paddingLeft") || 0, 10) - parseInt(g.currentItem.css("paddingRight") || 0, 10))
						}
					}
				}
			}
			g.placeholder = a(c.placeholder.element.call(g.element, g.currentItem));
			g.currentItem.after(g.placeholder);
			c.placeholder.update(g, g.placeholder)
		},
		_contactContainers: function(e) {
			for(var g = null, c = null, d = this.containers.length - 1; d >= 0; d--) if(!a.ui.contains(this.currentItem[0], this.containers[d].element[0])) if(this._intersectsWith(this.containers[d].containerCache)) {
				if(!(g && a.ui.contains(this.containers[d].element[0], g.element[0]))) {
					g = this.containers[d];
					c = d
				}
			} else if(this.containers[d].containerCache.over) {
				this.containers[d]._trigger("out", e, this._uiHash(this));
				this.containers[d].containerCache.over = 0
			}
			if(g) if(this.containers.length === 1) {
				this.containers[c]._trigger("over", e, this._uiHash(this));
				this.containers[c].containerCache.over = 1
			} else if(this.currentContainer != this.containers[c]) {
				g = 1E4;
				d = null;
				for(var b = this.positionAbs[this.containers[c].floating ? "left" : "top"], f = this.items.length - 1; f >= 0; f--) if(a.ui.contains(this.containers[c].element[0], this.items[f].item[0])) {
					var j = this.items[f][this.containers[c].floating ? "left" : "top"];
					if(Math.abs(j - b) < g) {
						g = Math.abs(j - b);
						d = this.items[f]
					}
				}
				if(d || this.options.dropOnEmpty) {
					this.currentContainer = this.containers[c];
					d ? this._rearrange(e, d, null, true) : this._rearrange(e, null, this.containers[c].element, true);
					this._trigger("change", e, this._uiHash());
					this.containers[c]._trigger("change", e, this._uiHash(this));
					this.options.placeholder.update(this.currentContainer, this.placeholder);
					this.containers[c]._trigger("over", e, this._uiHash(this));
					this.containers[c].containerCache.over = 1
				}
			}
		},
		_createHelper: function(e) {
			var g = this.options;
			e = a.isFunction(g.helper) ? a(g.helper.apply(this.element[0], [e, this.currentItem])) : g.helper == "clone" ? this.currentItem.clone() : this.currentItem;
			e.parents("body").length || a(g.appendTo != "parent" ? g.appendTo : this.currentItem[0].parentNode)[0].appendChild(e[0]);
			if(e[0] == this.currentItem[0]) this._storedCSS = {
				width: this.currentItem[0].style.width,
				height: this.currentItem[0].style.height,
				position: this.currentItem.css("position"),
				top: this.currentItem.css("top"),
				left: this.currentItem.css("left")
			};
			if(e[0].style.width == "" || g.forceHelperSize) e.width(this.currentItem.width());
			if(e[0].style.height == "" || g.forceHelperSize) e.height(this.currentItem.height());
			return e
		},
		_adjustOffsetFromHelper: function(e) {
			if(typeof e == "string") e = e.split(" ");
			if(a.isArray(e)) e = {
				left: +e[0],
				top: +e[1] || 0
			};
			if("left" in e) this.offset.click.left = e.left + this.margins.left;
			if("right" in e) this.offset.click.left = this.helperProportions.width - e.right + this.margins.left;
			if("top" in e) this.offset.click.top = e.top + this.margins.top;
			if("bottom" in e) this.offset.click.top = this.helperProportions.height - e.bottom + this.margins.top
		},
		_getParentOffset: function() {
			this.offsetParent = this.helper.offsetParent();
			var e = this.offsetParent.offset();
			if(this.cssPosition == "absolute" && this.scrollParent[0] != document && a.ui.contains(this.scrollParent[0], this.offsetParent[0])) {
				e.left += this.scrollParent.scrollLeft();
				e.top += this.scrollParent.scrollTop()
			}
			if(this.offsetParent[0] == document.body || this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() == "html" && a.browser.msie) e = {
				top: 0,
				left: 0
			};
			return {
				top: e.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
				left: e.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
			}
		},
		_getRelativeOffset: function() {
			if(this.cssPosition == "relative") {
				var e = this.currentItem.position();
				return {
					top: e.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(),
					left: e.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()
				}
			} else return {
				top: 0,
				left: 0
			}
		},
		_cacheMargins: function() {
			this.margins = {
				left: parseInt(this.currentItem.css("marginLeft"), 10) || 0,
				top: parseInt(this.currentItem.css("marginTop"), 10) || 0
			}
		},
		_cacheHelperProportions: function() {
			this.helperProportions = {
				width: this.helper.outerWidth(),
				height: this.helper.outerHeight()
			}
		},
		_setContainment: function() {
			var e = this.options;
			if(e.containment == "parent") e.containment = this.helper[0].parentNode;
			if(e.containment == "document" || e.containment == "window") this.containment = [0 - this.offset.relative.left - this.offset.parent.left, 0 - this.offset.relative.top - this.offset.parent.top, a(e.containment == "document" ? document : window).width() - this.helperProportions.width - this.margins.left, (a(e.containment == "document" ? document : window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top];
			if(!/^(document|window|parent)$/.test(e.containment)) {
				var g = a(e.containment)[0];
				e = a(e.containment).offset();
				var c = a(g).css("overflow") != "hidden";
				this.containment = [e.left + (parseInt(a(g).css("borderLeftWidth"), 10) || 0) + (parseInt(a(g).css("paddingLeft"), 10) || 0) - this.margins.left, e.top + (parseInt(a(g).css("borderTopWidth"), 10) || 0) + (parseInt(a(g).css("paddingTop"), 10) || 0) - this.margins.top, e.left + (c ? Math.max(g.scrollWidth, g.offsetWidth) : g.offsetWidth) - (parseInt(a(g).css("borderLeftWidth"), 10) || 0) - (parseInt(a(g).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left, e.top + (c ? Math.max(g.scrollHeight, g.offsetHeight) : g.offsetHeight) - (parseInt(a(g).css("borderTopWidth"), 10) || 0) - (parseInt(a(g).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top]
			}
		},
		_convertPositionTo: function(e, g) {
			if(!g) g = this.position;
			var c = e == "absolute" ? 1 : -1,
				d = this.cssPosition == "absolute" && !(this.scrollParent[0] != document && a.ui.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent,
				b = /(html|body)/i.test(d[0].tagName);
			return {
				top: g.top + this.offset.relative.top * c + this.offset.parent.top * c - (a.browser.safari && this.cssPosition == "fixed" ? 0 : (this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : b ? 0 : d.scrollTop()) * c),
				left: g.left + this.offset.relative.left * c + this.offset.parent.left * c - (a.browser.safari && this.cssPosition == "fixed" ? 0 : (this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : b ? 0 : d.scrollLeft()) * c)
			}
		},
		_generatePosition: function(e) {
			var g = this.options,
				c = this.cssPosition == "absolute" && !(this.scrollParent[0] != document && a.ui.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent,
				d = /(html|body)/i.test(c[0].tagName);
			if(this.cssPosition == "relative" && !(this.scrollParent[0] != document && this.scrollParent[0] != this.offsetParent[0])) this.offset.relative = this._getRelativeOffset();
			var b = e.pageX,
				f = e.pageY;
			if(this.originalPosition) {
				if(this.containment) {
					if(e.pageX - this.offset.click.left < this.containment[0]) b = this.containment[0] + this.offset.click.left;
					if(e.pageY - this.offset.click.top < this.containment[1]) f = this.containment[1] + this.offset.click.top;
					if(e.pageX - this.offset.click.left > this.containment[2]) b = this.containment[2] + this.offset.click.left;
					if(e.pageY - this.offset.click.top > this.containment[3]) f = this.containment[3] + this.offset.click.top
				}
				if(g.grid) {
					f = this.originalPageY + Math.round((f - this.originalPageY) / g.grid[1]) * g.grid[1];
					f = this.containment ? !(f - this.offset.clrrentItem.position();
				return {
					top: e.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(),
					left: e.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()
				}
			} else return {
				top: 0,
				left: 0
			}
		},
		_cacheMargins: function() {
			this.margins = {
				left: parseInt(this.currentItem.css("marginLeft"), 10) || 0,
				top: parseInt(this.currentItem.css("marginTop"), 10) || 0
			}
		},
		_cacheHelperProportions: function() {
			this.helperProportions = {
				width: this.helper.outerWidth(),
				height: this.helper.outerHeight()
			}
		},
		_setContainment: function() {
			var e = this.options;
			if(e.containment == "parent") e.containment = this.helper[0].parentNode;
			if(e.containment == "document" || e.containment == "window") this.containment = [0 - this.offset.relative.left - this.offset.parent.left, 0 - this.offset.relative.top - this.offset.parent.top, a(e.containment == "document" ? document : window).width() - this.helperProportions.width - this.margins.left, (a(e.containment == "document" ? document : window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top];
			if(!/^(document|window|parent)$/.test(e.containment)) {
				var g = a(e.containment)[0];
				e = a(e.containment).offset();
				var c = a(g).css("overflow") != "hidden";
				this.containment = [e.left + (parseInt(a(g).css("borderLeftWidth"), 10) || 0) + (parseInt(a(g).css("paddingLeft"), 10) || 0) - this.margins.left, e.top + (parseInt(a(g).css("borderTopWidth"), 10) || 0) + (parseInt(a(g).css("paddingTop"), 10) || 0) - this.margins.top, e.left + (c ? Math.max(g.scrollWidth, g.offsetWidth) : g.offsetWidth) - (parseInt(a(g).css("borderLeftWidth"), 10) || 0) - (parseInt(a(g).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left, e.top + (c ? Math.max(g.scrollHeight, g.offsetHeight) : g.offsetHeight) - (parseInt(a(g).css("borderTopWidth"), 10) || 0) - (parseInt(a(g).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top]
			}
		},
		_convertPositionTo: function(e, g) {
			if(!g) g = this.position;
			var c = e == "absolute" ? 1 : -1,
				d = this.cssPosition == "absolute" && !(this.scrollParent[0] != document && a.ui.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent,
				b = /(html|body)/i.test(d[0].tagName);
			return {
				top: g.top + this.offset.relative.top * c + this.offset.parent.top * c - (a.browser.safari && this.cssPosition == "fixed" ? 0 : (this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : b ? 0 : d.scrollTop()) * c),
				left: g.left + this.offset.relative.left * c + this.offset.parent.left * c - (a.browser.safari && this.cssPosition == "fixed" ? 0 : (this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : b ? 0 : d.scrollLeft()) * c)
			}
		},
		_generatePosition: function(e) {
			var g = this.options,
				c = this.cssPosition == "absolute" && !(this.scrollParent[0] != document && a.ui.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent,
				d = /(html|body)/i.test(c[0].tagName);
			if(this.cssPosition == "relative" && !(this.scrollParent[0] != document && this.scrollParent[0] != this.offsetParent[0])) this.offset.relative = this._getRelativeOffset();
			var b = e.pageX,
				f = e.pageY;
			if(this.originalPosition) {
				if(this.containment) {
					if(e.pageX - this.offset.click.left < this.containment[0]) b = this.containment[0] + this.offset.click.left;
					if(e.pageY - this.offset.click.top < this.containment[1]) f = this.containment[1] + this.offset.click.top;
					if(e.pageX - this.offset.click.left > this.containment[2]) b = this.containment[2] + this.offset.click.left;
					if(e.pageY - this.offset.click.top > this.containment[3]) f = this.containment[3] + this.offset.click.top
				}
				if(g.grid) {
					f = this.originalPageY + Math.round((f - this.originalPageY) / g.grid[1]) * g.grid[1];
					f = this.containment ? !(f - this.offset.click.top < this.containment[1] || f - this.offset.click.top > this.containment[3]) ? f : !(f - this.offset.click.top < this.containment[1]) ? f - g.grid[1] : f + g.grid[1] : f;
					b = this.originalPageX + Math.round((b - this.originalPageX) / g.grid[0]) * g.grid[0];
					b = this.containment ? !(b - this.offset.click.left < this.containment[0] || b - this.offset.click.left > this.containment[2]) ? b : !(b - this.offset.click.left < this.containment[0]) ? b - g.grid[0] : b + g.grid[0] : b
				}
			}
			return {
				top: f - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + (a.browser.safari && this.cssPosition == "fixed" ? 0 : this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : d ? 0 : c.scrollTop()),
				left: b - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + (a.browser.safari && this.cssPosition == "fixed" ? 0 : this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : d ? 0 : c.scrollLeft())
			}
		},
		_rearrange: function(e, g, c, d) {
			c ? c[0].appendChild(this.placeholder[0]) : g.item[0].parentNode.insertBefore(this.placeholder[0], this.direction == "down" ? g.item[0] : g.item[0].nextSibling);
			this.counter = this.counter ? ++this.counter : 1;
			var b = this,
				f = this.counter;
			window.setTimeout(function() {
				f == b.counter && b.refreshPositions(!d)
			}, 0)
		},
		_clear: function(e, g) {
			this.reverting = false;
			var c = [];
			!this._noFinalSort && this.currentItem[0].parentNode && this.placeholder.before(this.currentItem);
			this._noFinalSort = null;
			if(this.helper[0] == this.currentItem[0]) {
				for(var d in this._storedCSS) if(this._storedCSS[d] == "auto" || this._storedCSS[d] == "static") this._storedCSS[d] = "";
				this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper")
			} else this.currentItem.show();
			this.fromOutside && !g && c.push(function(b) {
				this._trigger("receive", b, this._uiHash(this.fromOutside))
			});
			if((this.fromOutside || this.domPosition.prev != this.currentItem.prev().not(".ui-sortable-helper")[0] || this.domPosition.parent != this.currentItem.parent()[0]) && !g) c.push(function(b) {
				this._trigger("update", b, this._uiHash())
			});
			if(!a.ui.contains(this.element[0], this.currentItem[0])) {
				g || c.push(function(b) {
					this._trigger("remove", b, this._uiHash())
				});
				for(d = this.containers.length - 1; d >= 0; d--) if(a.ui.contains(this.containers[d].element[0], this.currentItem[0]) && !g) {
					c.push(function(b) {
						return function(f) {
							b._trigger("receive", f, this._uiHash(this))
						}
					}.call(this, this.containers[d]));
					c.push(function(b) {
						return function(f) {
							b._trigger("update", f, this._uiHash(this))
						}
					}.call(this, this.containers[d]))
				}
			}
			for(d = this.containers.length - 1; d >= 0; d--) {
				g || c.push(function(b) {
					return function(f) {
						b._trigger("deactivate", f, this._uiHash(this))
					}
				}.call(this, this.containers[d]));
				if(this.containers[d].containerCache.over) {
					c.push(function(b) {
						return function(f) {
							b._trigger("out", f, this._uiHash(this))
						}
					}.call(this, this.containers[d]));
					this.containers[d].containerCache.over = 0
				}
			}
			this._storedCursor && a("body").css("cursor", this._storedCursor);
			this._storedOpacity && this.helper.css("opacity", this._storedOpacity);
			if(this._storedZIndex) this.helper.css("zIndex", this._storedZIndex == "auto" ? "" : this._storedZIndex);
			this.dragging = false;
			if(this.cancelHelperRemoval) {
				if(!g) {
					this._trigger("beforeStop", e, this._uiHash());
					for(d = 0; d < c.length; d++) c[d].call(this, e);
					this._trigger("stop", e, this._uiHash())
				}
				return false
			}
			g || this._trigger("beforeStop", e, this._uiHash());
			this.placeholder[0].parentNode.removeChild(this.placeholder[0]);
			this.helper[0] != this.currentItem[0] && this.helper.remove();
			this.helper = null;
			if(!g) {
				for(d = 0; d < c.length; d++) c[d].call(this, e);
				this._trigger("stop", e, this._uiHash())
			}
			this.fromOutside = false;
			return true
		},
		_trigger: function() {
			a.Widget.prototype._trigger.apply(this, arguments) === false && this.cancel()
		},
		_uiHash: function(e) {
			var g = e || this;
			return {
				helper: g.helper,
				placeholder: g.placeholder || a([]),
				position: g.position,
				originalPosition: g.originalPosition,
				offset: g.positionAbs,
				item: g.currentItem,
				sender: e ? e.element : null
			}
		}
	});
	a.extend(a.ui.sortable, {
		version: "1.8.6"
	})
})(jQuery);
(function(a) {
	a.widget("ui.accordion", {
		options: {
			active: 0,
			animated: "slide",
			autoHeight: true,
			clearStyle: false,
			collapsible: false,
			event: "click",
			fillSpace: false,
			header: "> li > :first-child,> :not(li):even",
			icons: {
				header: "ui-icon-triangle-1-e",
				headerSelected: "ui-icon-triangle-1-s"
			},
			navigation: false,
			navigationFilter: function() {
				return this.href.toLowerCase() === location.href.toLowerCase()
			}
		},
		_create: function() {
			var e = this,
				g = e.options;
			e.running = 0;
			e.element.addClass("ui-accordion ui-widget ui-helper-reset").children("li").addClass("ui-accordion-li-fix");
			e.headers = e.element.find(g.header).addClass("ui-accordion-header ui-helper-reset ui-state-default ui-corner-all").bind("mouseenter.accordion", function() {
				g.disabled || a(this).addClass("ui-state-hover")
			}).bind("mouseleave.accordion", function() {
				g.disabled || a(this).removeClass("ui-state-hover")
			}).bind("focus.accordion", function() {
				g.disabled || a(this).addClass("ui-state-focus")
			}).bind("blur.accordion", function() {
				g.disabled || a(this).removeClass("ui-state-focus")
			});
			e.headers.next().addClass("ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom");
			if(g.navigation) {
				var c = e.element.find("a").filter(g.navigationFilter).eq(0);
				if(c.length) {
					var d = c.closest(".ui-accordion-header");
					e.active = d.length ? d : c.closest(".ui-accordion-content").prev()
				}
			}
			e.active = e._findActive(e.active || g.active).addClass("ui-state-default ui-state-active").toggleClass("ui-corner-all").toggleClass("ui-corner-top");
			e.active.next().addClass("ui-accordion-content-active");
			e._createIcons();
			e.resize();
			e.element.attr("role", "tablist");
			e.headers.attr("role", "tab").bind("keydown.accordion", function(b) {
				return e._keydown(b)
			}).next().attr("role", "tabpanel");
			e.headers.not(e.active || "").attr({
				"aria-expanded": "false",
				tabIndex: -1
			}).next().hide();
			e.active.length ? e.active.attr({
				"aria-expanded": "true",
				tabIndex: 0
			}) : e.headers.eq(0).attr("tabIndex", 0);
			a.browser.safari || e.headers.find("a").attr("tabIndex", -1);
			g.event && e.headers.bind(g.event.split(" ").join(".accordion ") + ".accordion", function(b) {
				e._clickHandler.call(e, b, this);
				b.preventDefault()
			})
		},
		_createIcons: function() {
			var e = this.options;
			if(e.icons) {
				a("<span></span>").addClass("ui-icon " + e.icons.header).prependTo(this.headers);
				this.active.children(".ui-icon").toggleClass(e.icons.header).toggleClass(e.icons.headerSelected);
				this.element.addClass("ui-accordion-icons")
			}
		},
		_destroyIcons: function() {
			this.headers.children(".ui-icon").remove();
			this.element.removeClass("ui-accordion-icons")
		},
		destroy: function() {
			var e = this.options;
			this.element.removeClass("ui-accordion ui-widget ui-helper-reset").removeAttr("role");
			this.headers.unbind(".accordion").removeClass("ui-accordion-header ui-accordion-disabled ui-helper-reset ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top").removeAttr("role").removeAttr("aria-expanded").removeAttr("tabIndex");
			this.headers.find("a").removeAttr("tabIndex");
			this._destroyIcons();
			var g = this.headers.next().css("display", "").removeAttr("role").removeClass("ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-accordion-disa	f.running = g.size() === 0 ? e.size() : g.size();
			if(j.animated) {
				c = {};
				c = j.collapsible && d ? {
					toShow: a([]),
					toHide: g,
					complete: n,
					down: b,
					autoHeight: j.autoHeight || j.fillSpace
				} : {
					toShow: e,
					toHide: g,
					complete: n,
					down: b,
					autoHeight: j.autoHeight || j.fillSpace
				};
				if(!j.proxied) j.proxied = j.animated;
				if(!j.proxiedDuration) j.proxiedDuration = j.duration;
				j.animated = a.isFunction(j.proxied) ? j.proxied(c) : j.proxied;
				j.duration = a.isFunction(j.proxiedDuration) ? j.proxiedDuration(c) : j.proxiedDuration;
				d = a.ui.accordion.animations;
				var l = j.duration,
					o = j.animated;
				if(o && !d[o] && !a.easing[o]) o = "slide";
				d[o] || (d[o] = function(q) {
					this.slide(q, {
						easing: o,
						duration: l || 700
					})
				});
				d[o](c)
			} else {
				if(j.collapsible && d) e.toggle();
				else {
					g.hide();
					e.show()
				}
				n(true)
			}
			g.prev().attr({
				"aria-expanded": "false",
				tabIndex: -1
			}).blur();
			e.prev().attr({
				"aria-expanded": "true",
				tabIndex: 0
			}).focus()
		},
		_completed: function(e) {
			this.running = e ? 0 : --this.running;
			if(!this.running) {
				this.options.clearStyle && this.toShow.add(this.toHide).css({
					height: "",
					overflow: ""
				});
				this.toHide.removeClass("ui-accordion-content-active");
				this._trigger("change", null, this.data)
			}
		}
	});
	a.extend(a.ui.accordion, {
		version: "1.8.6",
		animations: {
			slide: function(e, g) {
				e = a.extend({
					easing: "swing",
					duration: 300
				}, e, g);
				if(e.toHide.size()) if(e.toShow.size()) {
					var c = e.toShow.css("overflow"),
						d = 0,
						b = {},
						f = {},
						j, n = e.toShow;
					j = n[0].style.width;
					n.width(parseInt(n.parent().width(), 10) - parseInt(n.css("paddingLeft"), 10) - parseInt(n.css("paddingRight"), 10) - (parseInt(n.css("borderLeftWidth"), 10) || 0) - (parseInt(n.css("borderRightWidth"), 10) || 0));
					a.each(["height", "paddingTop", "paddingBottom"], function(l, o) {
						f[o] = "hide";
						var q = ("" + a.css(e.toShow[0], o)).match(/^([\d+-.]+)(.*)$/);
						b[o] = {
							value: q[1],
							unit: q[2] || "px"
						}
					});
					e.toShow.css({
						height: 0,
						overflow: "hidden"
					}).show();
					e.toHide.filter(":hidden").each(e.complete).end().filter(":visible").animate(f, {
						step: function(l, o) {
							if(o.prop == "height") d = o.end - o.start === 0 ? 0 : (o.now - o.start) / (o.end - o.start);
							e.toShow[0].style[o.prop] = d * b[o.prop].value + b[o.prop].unit
						},
						duration: e.duration,
						easing: e.easing,
						complete: function() {
							e.autoHeight || e.toShow.css("height", "");
							e.toShow.css({
								width: j,
								overflow: c
							});
							e.complete()
						}
					})
				} else e.toHide.animate({
					height: "hide",
					paddingTop: "hide",
					paddingBottom: "hide"
				}, e);
				else e.toShow.animate({
					height: "show",
					paddingTop: "show",
					paddingBottom: "show"
				}, e)
			},
			bounceslide: function(e) {
				this.slide(e, {
					easing: e.down ? "easeOutBounce" : "swing",
					duration: e.down ? 1E3 : 200
				})
			}
		}
	})
})(jQuery);
(function(a) {
	a.widget("ui.autocomplete", {
		options: {
			appendTo: "body",
			delay: 300,
			minLength: 1,
			position: {
				my: "left top",
				at: "left bottom",
				collision: "none"
			},
			source: null
		},
		_create: function() {
			var e = this,
				g = this.element[0].ownerDocument,
				c;
			this.element.addClass("ui-autocomplete-input").attr("autocomplete", "off").attr({
				role: "textbox",
				"aria-autocomplete": "list",
				"aria-haspopup": "true"
			}).bind("keydown.autocomplete", function(d) {
				if(!(e.options.disabled || e.element.attr("readonly"))) {
					c = false;
					var b = a.ui.keyCode;
					switch(d.keyCode) {
					case b.PAGE_UP:
						e._move("previousPage", d);
						break;
					case b.PAGE_DOWN:
						e._move("nextPage", d);
						break;
					case b.UP:
						e._move("previous", d);
						d.preventDefault();
						break;
					case b.DOWN:
						e._move("next", d);
						d.preventDefault();
						break;
					case b.ENTER:
					case b.NUMPAD_ENTER:
						if(e.menu.active) {
							c = true;
							d.preventDefault()
						}
					case b.TAB:
						if(!e.menu.active) break;
						e.menu.select(d);
						break;
					case b.ESCAPE:
						e.element.val(e.term);
						e.close(d);
						break;
					default:
						clearTimeout(e.searching);
						e.searching = setTimeout(function() {
							if(e.term != e.element.val()) {
								e.selectedItem = null;
								e.search(null, d)
							}
						}, e.options.delay)
					}
				}
			}).bind("keypress.autocomplete", function(d) {
				if(c) {
					c = false;
					d.preventDefault()
				}
			}).bind("focus.autocomplete", function() {
				if(!e.options.disabled) {
					e.selectedItem = null;
					e.previous = e.element.val()
				}
			}).bind("blur.autocomplete", function(d) {
				if(!e.options.disabled) {
					clearTimeout(e.searching);
					e.closing = setTimeout(function() {
						e.close(d);
						e._change(d)
					}, 150)
				}
			});
			this._initSource();
			this.response = function() {
				return e._response.apply(e, arguments)
			};
			this.menu = a("<ul></ul>").addClass("ui-autocomplete").appendTo(a(this.options.appendTo || "body", g)[0]).mousedown(function(d) {
				var b = e.menu.element[0];
				a(d.target).closest(".ui-menu-item").length || setTimeout(function() {
					a(document).one("mousedown", function(f) {
						f.target !== e.element[0] && f.target !== b && !a.ui.contains(b, f.target) && e.close()
					})
				}, 1);
				setTimeout(function() {
					clearTimeout(e.closing)
				}, 13)
			}).menu({
				focus: function(d, b) {
					var f = b.item.data("item.autocomplete");
					false !== e._trigger("focus", d, {
						item: f
					}) && /^key/.test(d.originalEvent.type) && e.element.val(f.value)
				},
				selected: function(d, b) {
					var f = b.item.data("item.autocomplete"),
						j = e.previous;
					if(e.element[0] !== g.activeElement) {
						e.element.focus();
						e.previous = j;
						setTimeout(function() {
							e.previous = j
						}, 1)
					}
					false !== e._trigger("select", d, {
						item: f
					}) && e.element.val(f.value);
					e.term = e.element.val();
					e.close(d);
					e.selectedItem = f
				},
				blur: function() {
					e.menu.element.is(":visible") && e.element.val() !== e.term && e.element.val(e.term)
				}
			}).zIndex(this.element.zIndex() + 1).css({
				top: 0,
				left: 0
			}).hide().data("menu");
			a.fn.bgiframe && this.menu.element.bgiframe()
		},
		destroy: function() {
			this.element.removeClass("ui-autocomplete-input").removeAttr("autocomplete").removeAttr("role").removeAttr("aria-autocomplete").removeAttr("aria-haspopup");
			this.menu.element.remove();
			a.Widget.prototype.destroy.call(this)
		},
		_setOption: function(e, g) {
			a.Widget.prototype._setOption.apply(this, arguments);
			e === "source" && this._initSource();
			if(e === "appendTo") this.menu.element.appendTo(a(g || "body", this.element[0].ownerDocument)[0])
		},
		_initSource: function() {
			var e = this,
				g, c;
			if(a.isArray(this.options.source)) {
				g = this.options.source;
				this.source = function(d, b) {
					b(a.ui.autocomplete.filter(g, d.term))
				}
			} else if(typeof this.options.source === "string") {
				c = this.options.source;
				this.source = function(d, b) {
					e.xhr && e.xhr.abort();
					e.xhr = a.getJSON(c, d, function(f, j, n) {
						n === e.xhr && b(f);
						e.xhr = null
					})
				}
			} else this.source = this.options.source
		},
		search: function(e, g) {
			e = e != null ? e : this.element.val();
			this.term = this.element.val();
			if(e.length < this.options.minLength) return this.close(g);
			clearTimeout(this.closing);
			if(this._trigger("search", g) !== false) return this._search(e)
		},
		_search: function(e) {
			this.element.addClass("ui-autocomplete-loading");
			this.source({
				term: e
			}, this.response)
		},
		_response: function(e) {
			if(e && e.length) {
				e = this._normalize(e);
				this._suggest(e);
				this._trigger("open")
			} else this.close();
			this.element.removeClass("ui-autocomplete-loading")
		},
		close: function(e) {
			clearTimeout(this.closing);
			if(this.menu.element.is(":visible")) {
				this._trigger("close", e);
				this.menu.element.hide();
				this.menu.deactivate()
			}
		},
		_change: function(e) {
			this.previous !== this.element.val() && this._trigger("change", e, {
				item: this.selectedItem
			})
		},
		_normalize: function(e) {
			if(e.length && e[0].label && e[0].value) return e;
			return a.map(e, function(g) {
				if(typeof g === "string") return {
					label: g,
					value: g
				};
				return a.extend({
					label: g.label || g.value,
					value: g.value || g.label
				}, g)
			})
		},
		_suggest: function(e) {
			this._renderMenu(this.menu.element.empty().zIndex(this.element.zIndex() + 1), e);
			this.menu.deactivate();
			this.menu.refresh();
			this.menu.element.show().position(a.extend({
				of: this.element
			}, this.options.position));
			this._resizeMenu()
		},
		_resizeMenu: function() {
			var e = this.menu.element;
			e.outerWidth(Math.max(e.width("").outerWidth(), this.element.outerWidth()))
		},
		_renderMenu: function(e, g) {
			var c = this;
			a.each(g, function(d, b) {
				c._renderItem(e, b)
			})
		},
		_renderItem: function(e, g) {
			return a("<li></li>").data("item.autocomplete", g).append(a("<a></a>").text(g.label)).appendTo(e)
		},
		_move: function(e, g) {
			if(this.menu.element.is(":visible")) if(this.menu.first() && /^previous/.test(e) || this.menu.last() && /^next/.test(e)) {
				this.element.val(this.term);
				this.menu.deactivate()
			} else this.menu[e](g);
			else this.search(null, g)
		},
		widget: function() {
			return this.menu.element
		}
	});
	a.extend(a.ui.autocomplete, {
		escapeRegex: function(e) {
			return e.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&")
		},
		filter: function(e, g) {
			var c = RegExp(a.ui.autocomplete.escapeRegex(g), "i");
			return a.grep(e, function(d) {
				return c.test(d.label || d.value || d)
			})
		}
	})
})(jQuery);
(function(a) {
	a.widget("ui.menu", {
		_create: function() {
			var e = this;
			this.element.addClass("ui-menu ui-widget ui-widget-content ui-corner-all").attr({
				role: "listbox",
				"aria-activedescendant": "ui-active-menuitem"
			}).click(function(g) {
				if(a(g.target).closest(".ui-menu-item a").length) {
					g.preventDefault();
					e.select(g)
				}
			});
			this.refresh()
		},
		refresh: function() {
			var e = this;
			this.element.children("li:not(.ui-menu-item):has(a)").addClass("ui-menu-item").attr("role", "menuitem").children("a").addClass("ui-corner-all").attr("tabindex", -1).mousemove(function(g) {
				e.activate(g, a(this).parent())
			}).mouseleave(function() {
				e.deactivate()
			})
		},
		activate: function(e, g) {
			this.deactivate();
			if(this.hasScroll()) {
				var c = g.offset().top - this.element.offset().top,
					d = this.element.attr("scrollTop"),
					b = this.element.height();
				if(c < 0) this.element.attr("scrollTop", d + c);
				else c >= b && this.element.attr("scrollTop", d + c - b + g.height())
			}
			this.active = g.eq(0).children("a").addClass("ui-state-hover").attr("id", "ui-active-menuitem").end();
			this._trigger("focus", e, {
				item: g
			})
		},
		deactivate: function() {
			if(this.active) {
				this.active.children("a").removeClass("ui-state-hover").removeAttr("id");
				this._trigger("blur");
				this.active = null
			}
		},
		next: function(e) {
			this.move("next", ".ui-menu-item:first", e)
		},
		previous: function(e) {
			this.move("prev", ".ui-menu-item:last", e)
		},
		first: function() {
			return this.active && !this.active.prevAll(".ui-menu-item").length
		},
		last: function() {
			return this.active && !this.active.nextAll(".ui-menu-item").length
		},
		move: function(e, g, c) {
			if(this.active) {
				e = this.active[e + "All"](".ui-menu-item").eq(0);
				e.length ? this.activate(c, e) : this.activate(c, this.element.children(g))
			} else this.activate(c, this.element.children(g))
		},
		nextPage: function(e) {
			if(this.hasScroll()) if(!this.active || this.last()) this.activate(e, this.element.children(".ui-menu-item:first"));
			else {
				var g = this.active.offset().top,
					c = this.element.height(),
					d = this.element.children(".ui-menu-item").filter(function() {
						var b = a(this).offset().top - g - c + a(this).height();
						return b < 10 && b > -10
					});
				d.length || (d = this.element.children(".ui-menu-item:last"));
				this.activate(e, d)
			} else this.activate(e, this.element.children(".ui-menu-item").filter(!this.active || this.last() ? ":first" : ":last"))
		},
		previousPage: function(e) {
			if(this.hasScroll()) if(!this.active || this.first()) this.activate(e, this.element.children(".ui-menu-item:last"));
			else {
				var g = this.active.offset().top,
					c = this.element.height();
				result = this.element.children(".ui-menu-item").filter(function() {
					var d = a(this).offset().top - g + c - a(this).height();
					return d < 10 && d > -10
				});
				result.length || (result = this.element.children(".ui-menu-item:first"));
				this.activate(e, result)
			} else this.activate(e, this.element.children(".ui-menu-item").filter(!this.active || this.first() ? ":last" : ":first"))
		},
		hasScroll: function() {
			return this.element.height() < this.element.attr("scrollHeight")
		},
		select: function(e) {
			this._trigger("selected", e, {
				item: this.active
			})
		}
	})
})(jQuery);
(function(a) {
	var e, g = function(d) {
			a(":ui-button", d.target.form).each(function() {
				var b = a(this).data("button");
				setTimeout(function() {
					b.refresh()
				}, 1)
			})
		},
		c = function(d) {
			var b = d.name,
				f = d.form,
				j = a([]);
			if(b) j = f ? a(f).find("[name='" + b + "']") : a("[name='" + b + "']", d.ownerDocument).filter(function() {
				return !this.form
			});
			return j
		};
	a.widget("ui.button", {
		options: {
			disabled: null,
			text: true,
			label: null,
			icons: {
				primary: null,
				secondary: null
			}
		},
		_create: function() {
			this.element.closest("form").unbind("reset.button").bind("reset.button", g);
			if(typeof this.options.disabled !== "boolean") this.options.disabled = this.element.attr("disabled");
			this._determineButtonType();
			this.hasTitle = !! this.buttonElement.attr("title");
			var d = this,
				b = this.options,
				f = this.type === "checkbox" || this.type === "radio",
				j = "ui-state-hover" + (!f ? " ui-state-active" : "");
			if(b.label === null) b.label = this.buttonElement.html();
			if(this.element.is(":disabled")) b.disabled = true;
			this.buttonElement.addClass("ui-button ui-widget ui-state-default ui-corner-all").attr("role", "button").bind("mouseenter.button", function() {
				if(!b.disabled) {
					a(this).addClass("ui-state-hover");
					this === e && a(this).addClass("ui-state-active")
				}
			}).bind("mouseleave.button", function() {
				b.disabled || a(this).removeClass(j)
			}).bind("focus.button", function() {
				a(this).addClass("ui-state-focus")
			}).bind("blur.button", function() {
				a(this).removeClass("ui-state-focus")
			});
			f && this.element.bind("change.button", function() {
				d.refresh()
			});
			if(this.type === "checkbox") this.buttonElement.bind("click.button", function() {
				if(b.disabled) return false;
				a(this).toggleClass("ui-state-active");
				d.buttonElement.attr("aria-pressed", d.element[0].checked)
			});
			else if(this.type === "radio") this.buttonElement.bind("click.button", function() {
				if(b.disabled) return false;
				a(this).addClass("ui-state-active");
				d.buttonElement.attr("aria-pressed", true);
				var n = d.element[0];
				c(n).not(n).map(function() {
					return a(this).button("widget")[0]
				}).removeClass("ui-state-active").attr("aria-pressed", false)
			});
			else {
				this.buttonElement.bind("mousedown.button", function() {
					if(b.disabled) return false;
					a(this).addClass("ui-state-active");
					e = this;
					a(document).one("mouseup", function() {
						e = null
					})
				}).bind("mouseup.button", function() {
					if(b.disabled) return false;
					a(this).removeClass("ui-state-active")
				}).bind("keydown.button", function(n) {
					if(b.disabled) return false;
					if(n.keyCode == a.ui.keyCode.SPACE || n.keyCode == a.ui.keyCode.ENTER) a(this).addClass("ui-state-active")
				}).bind("keyup.button", function() {
					a(this).removeClass("ui-state-active")
				});
				this.buttonElement.is("a") && this.buttonElement.keyup(function(n) {
					n.keyCode === a.ui.keyCode.SPACE && a(this).click()
				})
			}
			this._setOption("disabled", b.disabled)
		},
		_determineButtonType: function() {
			this.type = this.element.is(":checkbox") ? "checkbox" : this.element.is(":radio") ? "radio" : this.element.is("input") ? "input" : "button";
			if(this.type === "checkbox" || this.type === "radio") {
				this.buttonElement = this.element.parents().last().find("label[for=" + this.element.attr("id") + "]");
				this.element.addClass("ui-helper-hidden-accessible");
				var d = this.element.is(":checked");
				d && this.buttonElement.addClass("ui-state-active");
				this.buttonElement.attr("aria-pressed", d)
			} else this.buttonElement = this.element
		},
		widget: function() {
			return this.buttonElement
		},
		destroy: function() {
			this.element.removeClass("ui-helper-hidden-accessible");
			this.buttonElement.removeClass("ui-button ui-widget ui-state-default ui-corner-all ui-state-hover ui-state-active  ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only").removeAttr("role").removeAttr("aria-pressed").html(this.buttonElement.find(".ui-button-text").html());
			this.hasTitle || this.buttonElement.removeAttr("title");
			a.Widget.prototype.destroy.call(this)
		},
		_setOption: function(d, b) {
			a.Widget.prototype._setOption.apply(this, arguments);
			if(d === "disabled") b ? this.element.attr("disabled", true) : this.element.removeAttr("disabled");
			this._resetButton()
		},
		refresh: function() {
			var d = this.element.is(":disabled");
			d !== this.options.disabled && this._setOption("disabled", d);
			if(this.type === "radio") c(this.element[0]).each(function() {
				a(this).is(":checked") ? a(this).button("widget").addClass("ui-state-active").attr("aria-pressed", true) : a(this).button("widget").removeClass("ui-state-active").attr("aria-pressed", false)
			});
			else if(this.type === "checkbox") this.element.is(":checked") ? this.buttonElement.addClass("ui-state-active").attr("aria-pressed", true) : this.buttonElement.removeClass("ui-state-active").attr("aria-pressed", false)
		},
		_resetButton: function() {
			if(this.type === "input") this.options.label && this.element.val(this.options.label);
			else {
				var d = this.buttonElement.removeClass("ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only"),
					b = a("<span></span>").addClass("ui-button-text").html(this.options.label).appendTo(d.empty()).text(),
					f = this.options.icons,
					j = f.primary && f.secondary;
				if(f.primary || f.secondary) {
					d.addClass("ui-button-text-icon" + (j ? "s" : f.primary ? "-primary" : "-secondary"));
					f.primary && d.prepend("<span class='ui-button-icon-primary ui-icon " + f.primary + "'></span>");
					f.secondary && d.append("<span class='ui-button-icon-secondary ui-icon " + f.secondary + "'></span>");
					if(!this.options.text) {
						d.addClass(j ? "ui-button-icons-only" : "ui-button-icon-only").removeClass("ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary");
						this.hasTitle || d.attr("title", b)
					}
				} else d.addClass("ui-button-text-only")
			}
		}
	});
	a.widget("ui.buttonset", {
		_create: function() {
			this.element.addClass("ui-buttonset")
		},
		_init: function() {
			this.refresh()
		},
		_setOption: function(d, b) {
			d === "disabled" && this.buttons.button("option", d, b);
			a.Widget.prototype._setOption.apply(this, arguments)
		},
		refresh: function() {
			this.buttons = this.element.find(":button, :submit, :reset, :checkbox, :radio, a, :data(button)").filter(":ui-button").button("refresh").end().not(":ui-button").button().end().map(function() {
				return a(this).button("widget")[0]
			}).removeClass("ui-corner-all ui-corner-left ui-corner-right").filter(":visible").filter(":first").addClass("ui-corner-left").end().filter(":last").addClass("ui-corner-right").end().end().end()
		},
		destroy: function() {
			this.element.removeClass("ui-buttonset");
			this.buttons.map(function() {
				return a(this).button("widget")[0]
			}).removeClass("ui-corner-left ui-corner-right").end().button("destroy");
			a.Widget.prototype.destroy.call(this)
		}
	})
})(jQuery);
(function(a, e) {
	var g = {
		buttons: true,
		height: true,
		maxHeight: true,
		maxWidth: true,
		minHeight: true,
		minWidth: true,
		width: true
	},
		c = {
			maxHeight: true,
			maxWidth: true,
			minHeight: true,
			minWidth: true
		};
	a.widget("ui.dialog", {
		options: {
			autoOpen: true,
			buttons: {},
			closeOnEscape: true,
			closeText: "close",
			dialogClass: "",
			draggable: true,
			hide: null,
			height: "auto",
			maxHeight: false,
			maxWidth: false,
			minHeight: 150,
			minWidth: 150,
			modal: false,
			position: {
				my: "center",
				at: "center",
				of: window,
				collision: "fit",
				using: function(d) {
					var b = a(this).css(d).offset().top;
					b < 0 && a(this).css("top", d.top - b)
				}
			},
			resizable: true,
			show: null,
			stack: true,
			title: "",
			width: 300,
			zIndex: 1E3
		},
		_create: function() {
			this.originalTitle = this.element.attr("title");
			if(typeof this.originalTitle !== "string") this.originalTitle = "";
			this.options.title = this.options.title || this.originalTitle;
			var d = this,
				b = d.options,
				f = b.title || "&#160;",
				j = a.ui.dialog.getTitleId(d.element),
				n = (d.uiDialog = a("<div></div>")).appendTo(document.body).hide().addClass("ui-dialog ui-widget ui-widget-content ui-corner-all " + b.dialogClass).css({
					zIndex: b.zIndex
				}).attr("tabIndex", -1).css("outline", 0).keydown(function(q) {
					if(b.closeOnEscape && q.keyCode && q.keyCode === a.ui.keyCode.ESCAPE) {
						d.close(q);
						q.preventDefault()
					}
				}).attr({
					role: "dialog",
					"aria-labelledby": j
				}).mousedown(function(q) {
					d.moveToTop(false, q)
				});
			d.element.show().removeAttr("title").addClass("ui-dialog-content ui-widget-content").appendTo(n);
			var l = (d.uiDialogTitlebar = a("<div></div>")).addClass("ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix").prependTo(n),
				o = a('<a href="#"></a>').addClass("ui-dialog-titlebar-close ui-corner-all").attr("role", "button").hover(function() {
					o.addClass("ui-state-hover")
				}, function() {
					o.removeClass("ui-state-hover")
				}).focus(function() {
					o.addClass("ui-state-focus")
				}).blur(function() {
					o.removeClass("ui-state-focus")
				}).click(function(q) {
					d.close(q);
					return false
				}).appendTo(l);
			(d.uiDialogTitlebarCloseText = a("<span></span>")).addClass("ui-icon ui-icon-closethick").text(b.closeText).appendTo(o);
			a("<span></span>").addClass("ui-dialog-title").attr("id", j).html(f).prependTo(l);
			if(a.isFunction(b.beforeclose) && !a.isFunction(b.beforeClose)) b.beforeClose = b.beforeclose;
			l.find("*").add(l).disableSelection();
			b.draggable && a.fn.draggable && d._makeDraggable();
			b.resizable && a.fn.resizable && d._makeResizable();
			d._createButtons(b.buttons);
			d._isOpen = false;
			a.fn.bgiframe && n.bgiframe()
		},
		_init: function() {
			this.options.autoOpen && this.open()
		},
		destroy: function() {
			this.overlay && this.overlay.destroy();
			this.uiDialog.hide();
			this.element.unbind(".dialog").removeData("dialog").removeClass("ui-dialog-content ui-widget-content").hide().appendTo("body");
			this.uiDialog.remove();
			this.originalTitle && this.element.attr("title", this.originalTitle);
			return this
		},
		widget: function() {
			return this.uiDialog
		},
		close: function(d) {
			var b = this,
				f;
			if(false !== b._trigger("beforeClose", d)) {
				b.overlay && b.overlay.destroy();
				b.uiDialog.unbind("keypress.ui-dialog");
				b._isOpen = false;
				if(b.options.hide) b.uiDialog.hide(b.options.hide, function() {
					b._trigger("close", d)
				});
				else {
					b.uiDialog.hide();
					b._trigger("close", d)
				}
				a.ui.dialog.overlay.resize();
				if(b.options.modal) {
					f = 0;
					a(".ui-dialog").each(function() {
						if(this !== b.uiDialog[0]) f = Math.max(f, a(this).css("z-index"))
					});
					a.ui.dialog.maxZ = f
				}
				return b
			}
		},
		isOpen: function() {
			return this._isOpen
		},
		moveToTop: function(d, b) {
			var f = this.options;
			if(f.modal && !d || !f.stack && !f.modal) return this._trigger("focus", b);
			if(f.zIndex > a.ui.dialog.maxZ) a.ui.dialog.maxZ = f.zIndex;
			if(this.overlay) {
				a.ui.dialog.maxZ += 1;
				this.overlay.$el.css("z-index", a.ui.dialog.overlay.maxZ = a.ui.dialog.maxZ)
			}
			f = {
				scrollTop: this.element.attr("scrollTop"),
				scrollLeft: this.element.attr("scrollLeft")
			};
			a.ui.dialog.maxZ += 1;
			this.uiDialog.css("z-index", a.ui.dialog.maxZ);
			this.element.attr(f);
			this._trigger("focus", b);
			return this
		},
		open: function() {
			if(!this._isOpen) {
				var d = this.options,
					b = this.uiDialog;
				this.overlay = d.modal ? new a.ui.dialog.overlay(this) : null;
				this._size();
				this._position(d.position);
				b.show(d.show);
				this.moveToTop(true);
				d.modal && b.bind("keypress.ui-dialog", function(f) {
					if(f.keyCode === a.ui.keyCode.TAB) {
						var j = a(":tabbable", this),
							n = j.filter(":first");
						j = j.filter(":last");
						if(f.target === j[0] && !f.shiftKey) {
							n.focus(1);
							return false
						} else if(f.target === n[0] && f.shiftKey) {
							j.focus(1);
							return false
						}
					}
				});
				a(this.element.find(":tabbable").get().concat(b.find(".ui-dialog-buttonpane :tabbable").get().concat(b.get()))).eq(0).focus();
				this._isOpen = true;
				this._trigger("open");
				return this
			}
		},
		_createButtons: function(d) {
			var b = this,
				f = false,
				j = a("<div></div>").addClass("ui-dialog-buttonpane ui-widget-content ui-helper-clearfix"),
				n = a("<div></div>").addClass("ui-dialog-buttonset").appendTo(j);
			b.uiDialog.find(".ui-dialog-buttonpane").remove();
			typeof d === "object" && d !== null && a.each(d, function() {
				return !(f = true)
			});
			if(f) {
				a.each(d, function(l, o) {
					o = a.isFunction(o) ? {
						click: o,
						text: l
					} : o;
					var q = a('<button type="button"></button>').attr(o, true).unbind("click").click(function() {
						o.click.apply(b.element[0], arguments)
					}).appendTo(n);
					a.fn.button && q.button()
				});
				j.appendTo(b.uiDialog)
			}
		},
		_makeDraggable: function() {
			function d(l) {
				return {
					position: l.position,
					offset: l.offset
				}
			}
			var b = this,
				f = b.options,
				j = a(document),
				n;
			b.uiDialog.draggable({
				cancel: ".ui-dialog-content, .ui-dialog-titlebar-close",
				handle: ".ui-dialog-titlebar",
				containment: "document",
				start: function(l, o) {
					n = f.height === "auto" ? "auto" : a(this).height();
					a(this).height(a(this).height()).addClass("ui-dialog-dragging");
					b._trigger("dragStart", l, d(o))
				},
				drag: function(l, o) {
					b._trigger("drag", l, d(o))
				},
				stop: function(l, o) {
					f.position = [o.position.left - j.scrollLeft(), o.position.top - j.scrollTop()];
					a(this).removeClass("ui-dialog-dragging").height(n);
					b._trigger("dragStop", l, d(o));
					a.ui.dialog.overlay.resize()
				}
			})
		},
		_makeResizable: function(d) {
			function b(l) {
				return {
					originalPosition: l.originalPosition,
					originalSize: l.originalSize,
					position: l.position,
					size: l.size
				}
			}
			d = d === e ? this.options.resizable : d;
			var f = this,
				j = f.options,
				n = f.uiDialog.css("position");
			d = typeof d === "string" ? d : "n,e,s,w,se,sw,ne,nw";
			f.uiDialog.resizable({
				cancel: ".ui-dialog-content",
				containment: "document",
				alsoResize: f.element,
				maxWidth: j.maxWidth,
				maxHeight: j.maxHeight,
				minWidth: j.minWidth,
				minHeight: f._minHeight(),
				handles: d,
				start: function(l, o) {
					a(this).addClass("ui-dialog-resizing");
					f._trigger("resizeStart", l, b(o))
				},
				resize: function(l, o) {
					f._trigger("resize", l, b(o))
				},
				stop: function(l, o) {
					a(this).removeClass("ui-dialog-resizing");
					j.height = a(this).height();
					j.width = a(this).width();
					f._trigger("resizeStop", l, b(o));
					a.ui.dialog.overlay.resize()
				}
			}).css("position", n).find(".ui-resizable-se").addClass("ui-icon ui-icon-grip-diagonal-se")
		},
		_minHeight: function() {
			var d = this.options;
			return d.height === "auto" ? d.minHeight : Math.min(d.minHeight, d.height)
		},
		_position: function(d) {
			var b = [],
				f = [0, 0],
				j;
			if(d) {
				if(typeof d === "string" || typeof d === "object" && "0" in d) {
					b = d.split ? d.split(" ") : [d[0], d[1]];
					if(b.length === 1) b[1] = b[0];
					a.each(["left", "top"], function(n, l) {
						if(+b[n] === b[n]) {
							f[n] = b[n];
							b[n] = l
						}
					});
					d = {
						my: b.join(" "),
						at: b.join(" "),
						offset: f.join(" ")
					}
				}
				d = a.extend({}, a.ui.dialog.prototype.options.position, d)
			} else d = a.ui.dialog.prototype.options.position;
			(j = this.uiDialog.is(":visible")) || this.uiDialog.show();
			this.uiDialog.css({
				top: 0,
				left: 0
			}).position(d);
			j || this.uiDialog.hide()
		},
		_setOptions: function(d) {
			var b = this,
				f = {},
				j = false;
			a.each(d, function(n, l) {
				b._setOption(n, l);
				if(n in g) j = true;
				if(n in c) f[n] = l
			});
			j && this._size();
			this.uiDialog.is(":data(resizable)") && this.uiDialog.resizable("option", f)
		},
		_setOption: function(d, b) {
			var f = this.uiDialog;
			switch(d) {
			case "beforeclose":
				d = "beforeClose";
				break;
			case "buttons":
				this._createButtons(b);
				break;
			case "closeText":
				this.uiDialogTitlebarCloseText.text("" + b);
				break;
			case "dialogClass":
				f.removeClass(this.options.dialogClass).addClass("ui-dialog ui-widget ui-widget-content ui-corner-all " + b);
				break;
			case "disabled":
				b ? f.addClass("ui-dialog-disabled") : f.removeClass("ui-dialog-disabled");
				break;
			case "draggable":
				var j = f.is(":data(draggable)");
				j && !b && f.draggable("destroy");
				!j && b && this._makeDraggable();
				break;
			case "position":
				this._position(b);
				break;
			case "resizable":
				(j = f.is(":data(resizable)")) && !b && f.resizable("destroy");
				j && typeof b === "string" && f.resizable("option", "handles", b);
				!j && b !== false && this._makeResizable(b);
				break;
			case "title":
				a(".ui-dialog-title", this.uiDialogTitlebar).html("" + (b || "&#160;"))
			}
			a.Widget.prototype._setOption.apply(this, arguments)
		},
		_size: function() {
			var d = this.options,
				b, f;
			this.element.show().css({
				width: "auto",
				minHeight: 0,
				height: 0
			});
			if(d.minWidth > d.width) d.width = d.minWidth;
			b = this.uiDialog.css({
				height: "auto",
				width: d.width
			}).height();
			f = Math.max(0, d.minHeight - b);
			if(d.height === "auto") if(a.support.minHeight) this.element.css({
				minHeight: f,
				height: "auto"
			});
			else {
				this.uiDialog.show();
				d = this.element.css("height", "auto").height();
				this.uiDialog.hide();
				this.element.height(Math.max(d, f))
			} else this.element.height(Math.max(d.height - b, 0));
			this.uiDialog.is(":data(resizable)") && this.uiDialog.resizable("option", "minHeight", this._minHeight())
		}
	});
	a.extend(a.ui.dialog, {
		version: "1.8.6",
		uuid: 0,
		maxZ: 0,
		getTitleId: function(d) {
			d = d.attr("id");
			if(!d) {
				this.uuid += 1;
				d = this.uuid
			}
			return "ui-dialog-title-" + d
		},
		overlay: function(d) {
			this.$el = a.ui.dialog.overlay.create(d)
		}
	});
	a.extend(a.ui.dialog.overlay, {
		instances: [],
		oldInstances: [],
		maxZ: 0,
		events: a.map("focus,mousedown,mouseup,keydown,keypress,click".split(","), function(d) {
			return d + ".dialog-overlay"
		}).join(" "),
		create: function(d) {
			if(this.instances.length === 0) {
				setTimeout(function() {
					a.ui.dialog.overlay.instances.length && a(document).bind(a.ui.dialog.overlay.events, function(f) {
						if(a(f.target).zIndex() < a.ui.dialog.overlay.maxZ) return false
					})
				}, 1);
				a(document).bind("keydown.dialog-overlay", function(f) {
					if(d.options.closeOnEscape && f.keyCode && f.keyCode === a.ui.keyCode.ESCAPE) {
						d.close(f);
						f.preventDefault()
					}
				});
				a(window).bind("resize.dialog-overlay", a.ui.dialog.overlay.resize)
			}
			var b = (this.oldInstances.pop() || a("<div></div>").addClass("ui-widget-overlay")).appendTo(document.body).css({
				width: this.width(),
				height: this.height()
			});
			a.fn.bgiframe && b.bgiframe();
			this.instances.push(b);
			return b
		},
		destroy: function(d) {
			this.oldInstances.push(this.instances.splice(a.inArray(d, this.instances), 1)[0]);
			this.instances.length === 0 && a([document, window]).unbind(".dialog-overlay");
			d.remove();
			var b = 0;
			a.each(this.instances, function() {
				b = Math.max(b, this.css("z-index"))
			});
			this.maxZ = b
		},
		height: function() {
			var d, b;
			if(a.browser.msie && a.browser.version < 7) {
				d = Math.max(document.documentElement.scrollHeight, document.body.scrollHeight);
				b = Math.max(document.documentElement.offsetHeight, document.body.offsetHeight);
				return d < b ? a(window).height() + "px" : d + "px"
			} else return a(document).height() + "px"
		},
		width: function() {
			var d, b;
			if(a.browser.msie && a.browser.version < 7) {
				d = Math.max(document.documentElement.scrollWidth, document.body.scrollWidth);
				b = Math.max(document.documentElement.offsetWidth, document.body.offsetWidth);
				return d < b ? a(window).width() + "px" : d + "px"
			} else return a(document).width() + "px"
		},
		resize: function() {
			var d = a([]);
			a.each(a.ui.dialog.overlay.instances, function() {
				d = d.add(this)
			});
			d.css({
				width: 0,
				height: 0
			}).css({
				width: a.ui.dialog.overlay.width(),
				height: a.ui.dialog.overlay.height()
			})
		}
	});
	a.extend(a.ui.dialog.overlay.prototype, {
		destroy: function() {
			a.ui.dialog.overlay.destroy(this.$el)
		}
	})
})(jQuery);
(function(a) {
	a.widget("ui.slider", a.ui.mouse, {
		widgetEventPrefix: "slide",
		options: {
			animate: false,
			distance: 0,
			max: 100,
			min: 0,
			orientation: "horizontal",
			range: false,
			step: 1,
			value: 0,
			values: null,
			wraparound: false
		},
		_create: function() {
			var e = this,
				g = this.options;
			this._mouseSliding = this._keySliding = false;
			this._animateOff = true;
			this._handleIndex = null;
			this._detectOrientation();
			this._mouseInit();
			this.element.addClass("ui-slider ui-slider-" + this.orientation + " ui-widget ui-widget-content ui-corner-all");
			g.disabled && this.element.addClass("ui-slider-disabled ui-disabled");
			this.range = a([]);
			if(g.range) {
				if(g.range === true) {
					this.range = a("<div></div>");
					if(!g.values) g.values = [this._valueMin(), this._valueMin()];
					if(g.values.length && g.values.length !== 2) g.values = [g.values[0], g.values[0]]
				} else this.range = a("<div></div>");
				this.range.appendTo(this.element).addClass("ui-slider-range");
				if(g.range === "min" || g.range === "max") this.range.addClass("ui-slider-range-" + g.range);
				this.range.addClass("ui-widget-header")
			}
			a(".ui-slider-handle", this.element).length === 0 && a("<a href='#'></a>").appendTo(this.element).addClass("ui-slider-handle");
			if(g.values && g.values.length) for(; a(".ui-slider-handle", this.element).length < g.values.length;) a("<a href='#'></a>").appendTo(this.element).addClass("ui-slider-handle");
			this.handles = a(".ui-slider-handle", this.element).addClass("ui-state-default ui-corner-all");
			this.handle = this.handles.eq(0);
			this.handles.add(this.range).filter("a").click(function(c) {
				c.preventDefault()
			}).hover(function() {
				g.disabled || a(this).addClass("ui-state-hover")
			}, function() {
				a(this).removeClass("ui-state-hover")
			}).focus(function() {
				if(g.disabled) a(this).blur();
				else {
					a(".ui-slider .ui-state-focus").removeClass("ui-state-focus");
					a(this).addClass("ui-state-focus")
				}
			}).blur(function() {
				a(this).removeClass("ui-state-focus")
			});
			this.handles.each(function(c) {
				a(this).data("index.ui-slider-handle", c)
			});
			this.handles.keydown(function(c) {
				var d = true,
					b = a(this).data("index.ui-slider-handle"),
					f, j, n;
				if(!e.options.disabled) {
					switch(c.keyCode) {
					case a.ui.keyCode.HOME:
					case a.ui.keyCode.END:
					case a.ui.keyCode.PAGE_UP:
					case a.ui.keyCode.PAGE_DOWN:
					case a.ui.keyCode.UP:
					case a.ui.keyCode.RIGHT:
					case a.ui.keyCode.DOWN:
					case a.ui.keyCode.LEFT:
						d = false;
						if(!e._keySliding) {
							e._keySliding = true;
							a(this).addClass("ui-state-active");
							f = e._start(c, b);
							if(f === false) return
						}
					}
					n = e.options.step;
					f = e.options.values && e.options.values.length ? j = e.values(b) : j = e.value();
					switch(c.keyCode) {
					case a.ui.keyCode.HOME:
						j = e._valueMin();
						break;
					case a.ui.keyCode.END:
						j = e._valueMax();
						break;
					case a.ui.keyCode.PAGE_UP:
						j = e._trimAlignValue(f + (e._valueMax() - e._valueMin()) / 5);
						break;
					case a.ui.keyCode.PAGE_DOWN:
						j = e._trimAlignValue(f - (e._valueMax() - e._valueMin()) / 5);
						break;
					case a.ui.keyCode.UP:
					case a.ui.keyCode.RIGHT:
						if(f === e._valueMax()) return;
						j = e._trimAlignValue(f + n);
						break;
					case a.ui.keyCode.DOWN:
					case a.ui.keyCode.LEFT:
						if(f === e._valueMin()) return;
						j = e._trimAlignValue(f - n)
					}
					e._slide(c, b, j);
					return d
				}
			}).keyup(function(c) {
				var d = a(this).data("index.ui-slider-handle");
				if(e._keySliding) {
					e._keySliding = false;
					e._stop(c, d);
					e._change(c, d);
					a(this).removeClass("ui-state-active")
				}
			});
			this._refreshValue();
			this._animateOff = false
		},
		destroy: function() {
			this.handles.remove();
			this.range.remove();
			this.element.removeClass("ui-slider ui-slider-horizontal ui-slider-vertical ui-slider-disabled ui-widget ui-widget-content ui-corner-all").removeData("slider").unbind(".slider");
			this._mouseDestroy();
			return this
		},
		_mouseCapture: function(e) {
			var g = this.options,
				c, d, b, f, j;
			if(g.disabled) return false;
			this.elementSize = {
				width: this.element.outerWidth(),
				height: this.element.outerHeight()
			};
			this.elementOffset = this.element.offset();
			c = this._normValueFromMouse({
				x: e.pageX,
				y: e.pageY
			});
			d = this._valueMax() - this._valueMin() + 1;
			f = this;
			this.handles.each(function(n) {
				var l = Math.abs(c - f.values(n));
				if(d > l) {
					d = l;
					b = a(this);
					j = n
				}
			});
			if(g.range === true && this.values(1) === g.min && this.values(0) === g.min) {
				j += 1;
				b = a(this.handles[j])
			}
			if(this._start(e, j) === false) return false;
			this._mouseSliding = true;
			f._handleIndex = j;
			b.addClass("ui-state-active").focus();
			g = b.offset();
			this._clickOffset = !a(e.target).parents().andSelf().is(".ui-slider-handle") ? {
				left: 0,
				top: 0
			} : {
				left: e.pageX - g.left - b.width() / 2,
				top: e.pageY - g.top - b.height() / 2 - (parseInt(b.css("borderTopWidth"), 10) || 0) - (parseInt(b.css("borderBottomWidth"), 10) || 0) + (parseInt(b.css("marginTop"), 10) || 0)
			};
			this._slide(e, j, c);
			return this._animateOff = true
		},
		_mouseStart: function() {
			return true
		},
		_mouseDrag: function(e) {
			var g = this._normValueFromMouse({
				x: e.pageX,
				y: e.pageY
			});
			this._slide(e, this._handleIndex, g);
			return false
		},
		_mouseStop: function(e) {
			this.handles.removeClass("ui-state-active");
			this._mouseSliding = false;
			this._stop(e, this._handleIndex);
			this._change(e, this._handleIndex);
			this._clickOffset = this._handleIndex = null;
			return this._animateOff = false
		},
		_detectOrientation: function() {
			this.orientation = this.options.orientation === "vertical" ? "vertical" : "horizontal"
		},
		_normValueFromMouse: function(e) {
			var g;
			if(this.orientation === "horizontal") {
				g = this.elementSize.width;
				e = e.x - this.elementOffset.left - (this._clickOffset ? this._clickOffset.left : 0)
			} else {
				g = this.elementSize.height;
				e = e.y - this.elementOffset.top - (this._clickOffset ? this._clickOffset.top : 0)
			}
			g = e / g;
			if(g > 1) g = 1;
			if(g < 0) g = 0;
			if(this.orientation === "vertical") g = 1 - g;
			e = this._valueMax() - this._valueMin();
			return this._trimAlignValue(this._valueMin() + g * e)
		},
		_start: function(e, g) {
			var c = {
				handle: this.handles[g],
				value: this.value()
			};
			if(this.options.values && this.options.values.length) {
				c.value = this.values(g);
				c.values = this.values()
			}
			return this._trigger("start", e, c)
		},
		_slide: function(e, g, c) {
			var d;
			if(this.options.values && this.options.values.length) {
				d = this.values(g ? 0 : 1);
				if(!this.options.wraparound && this.options.values.length === 2 && this.options.range === true && (g === 0 && c > d || g === 1 && c < d)) c = d;
				if(c !== this.values(g)) {
					d = this.values();
					d[g] = c;
					e = this._trigger("slide", e, {
						handle: this.handles[g],
						value: c,
						values: d
					});
					this.values(g ? 0 : 1);
					e !== false && this.values(g, c, true)
				}
			} else if(c !== this.value()) {
				e = this._trigger("slide", e, {
					handle: this.handles[g],
					value: c
				});
				e !== false && this.value(c)
			}
		},
		_stop: function(e, g) {
			var c = {
				handle: this.handles[g],
				value: this.value()
			};
			if(this.options.values && this.options.values.length) {
				c.value = this.values(g);
				c.values = this.values()
			}
			this._trigger("stop", e, c)
		},
		_change: function(e, g) {
			if(!this._keySliding && !this._mouseSliding) {
				var c = {
					handle: this.handles[g],
					value: this.value()
				};
				if(this.options.values && this.options.values.length) {
					c.value = this.values(g);
					c.values = this.values()
				}
				this._trigger("change", e, c)
			}
		},
		value: function(e) {
			if(arguments.length) {
				this.options.value = this._trimAlignValue(e);
				this._refreshValue();
				this._change(null, 0)
			}
			return this._value()
		},
		values: function(e, g) {
			var c, d, b;
			if(arguments.length > 1) {
				this.options.values[e] = this._trimAlignValue(g);
				this._refreshValue();
				this._change(null, e)
			}
			if(arguments.length) if(a.isArray(arguments[0])) {
				c = this.options.values;
				d = arguments[0];
				for(b = 0; b < c.length; b += 1) {
					c[b] = this._trimAlignValue(d[b]);
					this._change(null, b)
				}
				this._refreshValue()
			} else return this.options.values && this.options.values.length ? this._values(e) : this.value();
			else return this._values()
		},
		_setOption: function(e, g) {
			var c, d = 0;
			if(a.isArray(this.options.values)) d = this.options.values.length;
			a.Widget.prototype._setOption.apply(this, arguments);
			switch(e) {
			case "disabled":
				if(g) {
					this.handles.filter(".ui-state-focus").blur();
					this.handles.removeClass("ui-state-hover");
					this.handles.attr("disabled", "disabled");
					this.element.addClass("ui-disabled")
				} else {
					this.handles.removeAttr("disabled");
					this.element.removeClass("ui-disabled")
				}
				break;
			case "orientation":
				this._detectOrientation();
				this.element.removeClass("ui-slider-horizontal ui-slider-vertical").addClass("ui-slider-" + this.orientation);
				this._refreshValue();
				break;
			case "value":
				this._animateOff = true;
				this._refreshValue();
				this._change(null, 0);
				this._animateOff = false;
				break;
			case "values":
				this._animateOff = true;
				this._refreshValue();
				for(c = 0; c < d; c += 1) this._change(null, c);
				this._animateOff = false
			}
		},
		_value: function() {
			var e = this.options.value;
			return e = this._trimAlignValue(e)
		},
		_values: function(e) {
			var g, c;
			if(arguments.length) {
				g = this.options.values[e];
				return g = this._trimAlignValue(g)
			} else {
				g = this.options.values.slice();
				for(c = 0; c < g.length; c += 1) g[c] = this._trimAlignValue(g[c]);
				return g
			}
		},
		_trimAlignValue: function(e) {
			if(e < this._valueMin()) return this._valueMin();
			if(e > this._valueMax()) return this._valueMax();
			var g = this.options.step > 0 ? this.options.step : 1,
				c = e % g;
			e = e - c;
			if(Math.abs(c) * 2 >= g) e += c > 0 ? g : -g;
			return parseFloat(e.toFixed(5))
		},
		_valueMin: function() {
			return this.options.min
		},
		_valueMax: function() {
			return this.options.max
		},
		_refreshValue: function() {
			var e = this.options.range,
				g = this.options,
				c = this,
				d = !this._animateOff ? g.animate : false,
				b, f = {},
				j, n, l, o, q = false;
			if(this.options.values && this.options.values.length) {
				if(this.options.wraparound && this.options.range === true && c.values(0) > c.values(1)) {
					if(c.range.hasClass("ui-widget-header")) {
						c.range.removeClass("ui-widget-header").addClass("ui-widget-content");
						c.element.removeClass("ui-widget-content").addClass("ui-widget-header")
					}
					q = true
				} else if(this.options.wraparound && c.range.hasClass("ui-widget-content")) {
					c.range.removeClass("ui-widget-content").addClass("ui-widget-header");
					c.element.removeClass("ui-widget-header").addClass("ui-widget-content")
				}
				this.handles.each(function(v) {
					b = (c.values(v) - c._valueMin()) / (c._valueMax() - c._valueMin()) * 100;
					f[c.orientation === "horizontal" ? "left" : "bottom"] = b + "%";
					a(this).stop(1, 1)[d ? "animate" : "css"](f, g.animate);
					if(c.options.range === true) if(c.orientation === "horizontal") {
						if(v === 0 && !q) c.range.stop(1, 1)[d ? "animate" : "css"]({
							left: b + "%"
						}, g.animate);
						if(v === 1 && q) {
							c.range.stop(1, 1)[d ? "animate" : "css"]({
								left: b + "%"
							}, g.animate);
							c.range[d ? "animate" : "css"]({
								width: j - b + "%"
							}, {
								queue: false,
								duration: g.animate
							})
						} else if(v === 1) c.range[d ? "animate" : "css"]({
							width: b - j + "%"
						}, {
							queue: false,
							duration: g.animate
						})
					} else {
						if(v === 0 && !q) c.range.stop(1, 1)[d ? "animate" : "css"]({
							bottom: b + "%"
						}, g.animate);
						if(v === 1 && q) {
							c.range.stop(1, 1)[d ? "animate" : "css"]({
								bottom: b + "%"
							}, g.animate);
							c.range[d ? "animate" : "css"]({
								height: j - b + "%"
							}, {
								queue: false,
								duration: g.animate
							})
						} else if(v === 1) c.range[d ? "animate" : "css"]({
							height: b - j + "%"
						}, {
							queue: false,
							duration: g.animate
						})
					}
					j = b
				})
			} else {
				n = this.value();
				l = this._valueMin();
				o = this._valueMax();
				b = o !== l ? (n - l) / (o - l) * 100 : 0;
				f[c.orientation === "horizontal" ? "left" : "bottom"] = b + "%";
				this.handle.stop(1, 1)[d ? "animate" : "css"](f, g.animate);
				if(e === "min" && this.orientation === "horizontal") this.range.stop(1, 1)[d ? "animate" : "css"]({
					width: b + "%"
				}, g.animate);
				if(e === "max" && this.orientation === "horizontal") this.range[d ? "animate" : "css"]({
					width: 100 - b + "%"
				}, {
					queue: false,
					duration: g.animate
				});
				if(e === "min" && this.orientation === "vertical") this.range.stop(1, 1)[d ? "animate" : "css"]({
					height: b + "%"
				}, g.animate);
				if(e === "max" && this.orientation === "vertical") this.range[d ? "animate" : "css"]({
					height: 100 - b + "%"
				}, {
					queue: false,
					duration: g.animate
				})
			}
		}
	});
	a.extend(a.ui.slider, {
		version: "1.8.6"
	})
})(jQuery);
(function(a, e) {
	var g = 0,
		c = 0;
	a.widget("ui.tabs", {
		options: {
			add: null,
			ajaxOptions: null,
			cache: false,
			cookie: null,
			collapsible: false,
			disable: null,
			disabled: [],
			enable: null,
			event: "click",
			fx: null,
			idPrefix: "ui-tabs-",
			load: null,
			panelTemplate: "<div></div>",
			remove: null,
			select: null,
			show: null,
			spinner: "<em>Loading&#8230;</em>",
			tabTemplate: "<li><a href='#{href}'><span>#{label}</span></a></li>"
		},
		_create: function() {
			this._tabify(true)
		},
		_setOption: function(d, b) {
			if(d == "selected") this.options.collapsible && b == this.options.selected || this.select(b);
			else {
				this.options[d] = b;
				this._tabify()
			}
		},
		_tabId: function(d) {
			return d.title && d.title.replace(/\s/g, "_").replace(/[^\w\u00c0-\uFFFF-]/g, "") || this.options.idPrefix + ++g
		},
		_sanitizeSelector: function(d) {
			return d.replace(/:/g, "\\:")
		},
		_cookie: function() {
			var d = this.cookie || (this.cookie = this.options.cookie.name || "ui-tabs-" + ++c);
			return a.cookie.apply(null, [d].concat(a.makeArray(arguments)))
		},
		_ui: function(d, b) {
			return {
				tab: d,
				panel: b,
				index: this.anchors.index(d)
			}
		},
		_cleanup: function() {
			this.lis.filter(".ui-state-processing").removeClass("ui-state-processing").find("span:data(label.tabs)").each(function() {
				var d = a(this);
				d.html(d.data("label.tabs")).removeData("label.tabs")
			})
		},
		_tabify: function(d) {
			function b(D, B) {
				D.css("display", "");
				!a.support.opacity && B.opacity && D[0].style.removeAttribute("filter")
			}
			var f = this,
				j = this.options,
				n = /^#.+/;
			this.list = this.element.find("ol,ul").eq(0);
			this.lis = a(" > li:has(a[href])", this.list);
			this.anchors = this.lis.map(function() {
				return a("a", this)[0]
			});
			this.panels = a([]);
			this.anchors.each(function(D, B) {
				var u = a(B).attr("href"),
					F = u.split("#")[0],
					I;
				if(F && (F === location.toString().split("#")[0] || (I = a("base")[0]) && F === I.href)) {
					u = B.hash;
					B.href = u
				}
				if(n.test(u)) f.panels = f.panels.add(f._sanitizeSelector(u));
				else if(u && u !== "#") {
					a.data(B, "href.tabs", u);
					a.data(B, "load.tabs", u.replace(/#.*$/, ""));
					u = f._tabId(B);
					B.href = "#" + u;
					F = a("#" + u);
					if(!F.length) {
						F = a(j.panelTemplate).attr("id", u).addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").insertAfter(f.panels[D - 1] || f.list);
						F.data("destroy.tabs", true)
					}
					f.panels = f.panels.add(F)
				} else j.disabled.push(D)
			});
			if(d) {
				this.element.addClass("ui-tabs ui-widget ui-widget-content ui-corner-all");
				this.list.addClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all");
				this.lis.addClass("ui-state-default ui-corner-top");
				this.panels.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom");
				if(j.selected === e) {
					location.hash && this.anchors.each(function(D, B) {
						if(B.hash == location.hash) {
							j.selected = D;
							return false
						}
					});
					if(typeof j.selected !== "number" && j.cookie) j.selected = parseInt(f._cookie(), 10);
					if(typeof j.selected !== "number" && this.lis.filter(".ui-tabs-selected").length) j.selected = this.lis.index(this.lis.filter(".ui-tabs-selected"));
					j.selected = j.selected || (this.lis.length ? 0 : -1)
				} else if(j.selected === null) j.selected = -1;
				j.selected = j.selected >= 0 && this.anchors[j.selected] || j.selected < 0 ? j.selected : 0;
				j.disabled = a.unique(j.disabled.concat(a.map(this.lis.filter(".ui-state-disabled"), function(D) {
					return f.lis.index(D)
				}))).sort();
				a.inArray(j.selected, j.disabled) != -1 && j.disabled.splice(a.inArray(j.selected, j.disabled), 1);
				this.panels.addClass("ui-tabs-hide");
				this.lis.removeClass("ui-tabs-selected ui-state-active");
				if(j.selected >= 0 && this.anchors.length) {
					a(f._sanitizeSelector(f.anchors[j.selected].hash)).removeClass("ui-tabs-hide");
					this.lis.eq(j.0,
		c = 0;
	a.widget("ui.tabs", {
		options: {
			add: null,
			ajaxOptions: null,
			cache: false,
			cookie: null,
			collapsible: false,
			disable: null,
			disabled: [],
			enable: null,
			event: "click",
			fx: null,
			idPrefix: "ui-tabs-",
			load: null,
			panelTemplate: "<div></div>",
			remove: null,
			select: null,
			show: null,
			spinner: "<em>Loading&#8230;</em>",
			tabTemplate: "<li><a href='#{href}'><span>#{label}</span></a></li>"
		},
		_create: function() {
			this._tabify(true)
		},
		_setOption: function(d, b) {
			if(d == "selected") this.options.collapsible && b == this.options.selected || this.select(b);
			else {
				this.options[d] = b;
				this._tabify()
			}
		},
		_tabId: function(d) {
			return d.title && d.title.replace(/\s/g, "_").replace(/[^\w\u00c0-\uFFFF-]/g, "") || this.options.idPrefix + ++g
		},
		_sanitizeSelector: function(d) {
			return d.replace(/:/g, "\\:")
		},
		_cookie: function() {
			var d = this.cookie || (this.cookie = this.options.cookie.name || "ui-tabs-" + ++c);
			return a.cookie.apply(null, [d].concat(a.makeArray(arguments)))
		},
		_ui: function(d, b) {
			return {
				tab: d,
				panel: b,
				index: this.anchors.index(d)
			}
		},
		_cleanup: function() {
			this.lis.filter(".ui-state-processing").removeClass("ui-state-processing").find("span:data(label.tabs)").each(function() {
				var d = a(this);
				d.html(d.data("label.tabs")).removeData("label.tabs")
			})
		},
		_tabify: function(d) {
			function b(D, B) {
				D.css("display", "");
				!a.support.opacity && B.opacity && D[0].style.removeAttribute("filter")
			}
			var f = this,
				j = this.options,
				n = /^#.+/;
			this.list = this.element.find("ol,ul").eq(0);
			this.lis = a(" > li:has(a[href])", this.list);
			this.anchors = this.lis.map(function() {
				return a("a", this)[0]
			});
			this.panels = a([]);
			this.anchors.each(function(D, B) {
				var u = a(B).attr("href"),
					F = u.split("#")[0],
					I;
				if(F && (F === location.toString().split("#")[0] || (I = a("base")[0]) && F === I.href)) {
					u = B.hash;
					B.href = u
				}
				if(n.test(u)) f.panels = f.panels.add(f._sanitizeSelector(u));
				else if(u && u !== "#") {
					a.data(B, "href.tabs", u);
					a.data(B, "load.tabs", u.replace(/#.*$/, ""));
					u = f._tabId(B);
					B.href = "#" + u;
					F = a("#" + u);
					if(!F.length) {
						F = a(j.panelTemplate).attr("id", u).addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").insertAfter(f.panels[D - 1] || f.list);
						F.data("destroy.tabs", true)
					}
					f.panels = f.panels.add(F)
				} else j.disabled.push(D)
			});
			if(d) {
				this.element.addClass("ui-tabs ui-widget ui-widget-content ui-corner-all");
				this.list.addClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all");
				this.lis.addClass("ui-state-default ui-corner-top");
				this.panels.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom");
				if(j.selected === e) {
					location.hash && this.anchors.each(function(D, B) {
						if(B.hash == location.hash) {
							j.selected = D;
							return false
						}
					});
					if(typeof j.selected !== "number" && j.cookie) j.selected = parseInt(f._cookie(), 10);
					if(typeof j.selected !== "number" && this.lis.filter(".ui-tabs-selected").length) j.selected = this.lis.index(this.lis.filter(".ui-tabs-selected"));
					j.selected = j.selected || (this.lis.length ? 0 : -1)
				} else if(j.selected === null) j.selected = -1;
				j.selected = j.selected >= 0 && this.anchors[j.selected] || j.selected < 0 ? j.selected : 0;
				j.disabled = a.unique(j.disabled.concat(a.map(this.lis.filter(".ui-state-disabled"), function(D) {
					return f.lis.index(D)
				}))).sort();
				a.inArray(j.selected, j.disabled) != -1 && j.disabled.splice(a.inArray(j.selected, j.disabled), 1);
				this.panels.addClass("ui-tabs-hide");
				this.lis.removeClass("ui-tabs-selected ui-state-active");
				if(j.selected >= 0 && this.anchors.length) {
					a(f._sanitizeSelector(f.anchors[j.selected].hash)).removeClass("ui-tabs-hide");
					this.lis.eq(j.selected).addClass("ui-tabs-selected ui-state-active");
					f.element.queue("tabs", function() {
						f._trigger("show", null, f._ui(f.anchors[j.selected], a(f._sanitizeSelector(f.anchors[j.selected].hash))))
					});
					this.load(j.selected)
				}
				a(window).bind("unload", function() {
					f.lis.add(f.anchors).unbind(".tabs");
					f.lis = f.anchors = f.panels = null
				})
			} else j.selected = this.lis.index(this.lis.filter(".ui-tabs-selected"));
			this.element[j.collapsible ? "addClass" : "removeClass"]("ui-tabs-collapsible");
			j.cookie && this._cookie(j.selected, j.cookie);
			d = 0;
			for(var l; l = this.lis[d]; d++) a(l)[a.inArray(d, j.disabled) != -1 && !a(l).hasClass("ui-tabs-selected") ? "addClass" : "removeClass"]("ui-state-disabled");
			j.cache === false && this.anchors.removeData("cache.tabs");
			this.lis.add(this.anchors).unbind(".tabs");
			if(j.event !== "mouseover") {
				var o = function(D, B) {
						B.is(":not(.ui-state-disabled)") && B.addClass("ui-state-" + D)
					};
				this.lis.bind("mouseover.tabs", function() {
					o("hover", a(this))
				});
				this.lis.bind("mouseout.tabs", function() {
					a(this).removeClass("ui-state-hover")
				});
				this.anchors.bind("focus.tabs", function() {
					o("focus", a(this).closest("li"))
				});
				this.anchors.bind("blur.tabs", function() {
					a(this).closest("li").removeClass("ui-state-focus")
				})
			}
			var q, v;
			if(j.fx) if(a.isArray(j.fx)) {
				q = j.fx[0];
				v = j.fx[1]
			} else q = v = j.fx;
			var x = v ?
			function(D, B) {
				a(D).closest("li").addClass("ui-tabs-selected ui-state-active");
				B.hide().removeClass("ui-tabs-hide").animate(v, v.duration || "normal", function() {
					b(B, v);
					f._trigger("show", null, f._ui(D, B[0]))
				})
			} : function(D, B) {
				a(D).closest("li").addClass("ui-tabs-selected ui-state-active");
				B.removeClass("ui-tabs-hide");
				f._trigger("show", null, f._ui(D, B[0]))
			}, y = q ?
			function(D, B) {
				B.animate(q, q.duration || "normal", function() {
					f.lis.removeClass("ui-tabs-selected ui-state-active");
					B.addClass("ui-tabs-hide");
					b(B, q);
					f.element.dequeue("tabs")
				})
			} : function(D, B) {
				f.lis.removeClass("ui-tabs-selected ui-state-active");
				B.addClass("ui-tabs-hide");
				f.element.dequeue("tabs")
			};
			this.anchors.bind(j.event + ".tabs", function() {
				var D = this,
					B = a(D).closest("li"),
					u = f.panels.filter(":not(.ui-tabs-hide)"),
					F = a(f._sanitizeSelector(D.hash));
				if(B.hasClass("ui-tabs-selected") && !j.collapsible || B.hasClass("ui-state-disabled") || B.hasClass("ui-state-processing") || f.panels.filter(":animated").length || f._trigger("select", null, f._ui(this, F[0])) === false) {
					this.blur();
					return false
				}
				j.selected = f.anchors.index(this);
				f.abort();
				if(j.collapsible) if(B.hasClass("ui-tabs-selected")) {
					j.selected = -1;
					j.cookie && f._cookie(j.selected, j.cookie);
					f.element.queue("tabs", function() {
						y(D, u)
					}).dequeue("tabs");
					this.blur();
					return false
				} else if(!u.length) {
					j.cookie && f._cookie(j.selected, j.cookie);
					f.element.queue("tabs", function() {
						x(D, F)
					});
					f.load(f.anchors.index(this));
					this.blur();
					return false
				}
				j.cookie && f._cookie(j.selected, j.cookie);
				if(F.length) {
					u.length && f.element.queue("tabs", function() {
						y(D, u)
					});
					f.element.queue("tabs", function() {
						x(D, F)
					});
					f.load(f.anchors.index(this))
				} else throw "jQuery UI Tabs: Mismatching fragment identifier.";
				a.browser.msie && this.blur()
			});
			this.anchors.bind("click.tabs", function() {
				return false
			})
		},
		_getIndex: function(d) {
			if(typeof d == "string") d = this.anchors.index(this.anchors.filter("[href$=" + d + "]"));
			return d
		},
		destroy: function() {
			var d = this.options;
			this.abort();
			this.element.unbind(".tabs").removeClass("ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible").removeData("tabs");
			this.list.removeClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all");
			this.anchors.each(function() {
				var b = a.data(this, "href.tabs");
				if(b) this.href = b;
				var f = a(this).unbind(".tabs");
				a.each(["href", "load", "cache"], function(j, n) {
					f.removeData(n + ".tabs")
				})
			});
			this.lis.unbind(".tabs").add(this.panels).each(function() {
				a.data(this, "destroy.tabs") ? a(this).remove() : a(this).removeClass("ui-state-default ui-corner-top ui-tabs-selected ui-state-active ui-state-hover ui-state-focus ui-state-disabled ui-tabs-panel ui-widget-content ui-corner-bottom ui-tabs-hide")
			});
			d.cookie && this._cookie(null, d.cookie);
			return this
		},
		add: function(d, b, f) {
			if(f === e) f = this.anchors.length;
			var j = this,
				n = this.options;
			b = a(n.tabTemplate.replace(/#\{href\}/g, d).replace(/#\{label\}/g, b));
			d = !d.indexOf("#") ? d.replace("#", "") : this._tabId(a("a", b)[0]);
			b.addClass("ui-state-default ui-corner-top").data("destroy.tabs", true);
			var l = a("#" + d);
			l.length || (l = a(n.panelTemplate).attr("id", d).data("destroy.tabs", true));
			l.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom ui-tabs-hide");
			if(f >= this.lis.length) {
				b.appendTo(this.list);
				l.appendTo(this.list[0].parentNode)
			} else {
				b.insertBefore(this.lis[f]);
				l.insertBefore(this.panels[f])
			}
			n.disabled = a.map(n.disabled, function(o) {
				return o >= f ? ++o : o
			});
			this._tabify();
			if(this.anchors.length == 1) {
				n.selected = 0;
				b.addClass("ui-tabs-selected ui-state-active");
				l.removeClass("ui-tabs-hide");
				this.element.queue("tabs", function() {
					j._trigger("show", null, j._ui(j.anchors[0], j.panels[0]))
				});
				this.load(0)
			}
			this._trigger("add", null, this._ui(this.anchors[f], this.panels[f]));
			return this
		},
		remove: function(d) {
			d = this._getIndex(d);
			var b = this.options,
				f = this.lis.eq(d).remove(),
				j = this.panels.eq(d).remove();
			if(f.hasClass("ui-tabs-selected") && this.anchors.length > 1) this.select(d + (d + 1 < this.anchors.length ? 1 : -1));
			b.disabled = a.map(a.grep(b.disabled, function(n) {
				return n != d
			}), function(n) {
				return n >= d ? --n : n
			});
			this._tabify();
			this._trigger("remove", null, this._ui(f.find("a")[0], j[0]));
			return this
		},
		enable: function(d) {
			d = this._getIndex(d);
			var b = this.options;
			if(a.inArray(d, b.disabled) != -1) {
				this.lis.eq(d).removeClass("ui-state-disabled");
				b.disabled = a.grep(b.disabled, function(f) {
					return f != d
				});
				this._trigger("enable", null, this._ui(this.anchors[d], this.panels[d]));
				return this
			}
		},
		disable: function(d) {
			d = this._getIndex(d);
			var b = this.options;
			if(d != b.selected) {
				this.lis.eq(d).addClass("ui-state-disabled");
				b.disabled.push(d);
				b.disabled.sort();
				this._trigger("disable", null, this._ui(this.anchors[d], this.panels[d]))
			}
			return this
		},
		select: function(d) {
			d = this._getIndex(d);
			if(d == -1) if(this.options.collapsible && this.options.selected != -1) d = this.options.selected;
			else return this;
			this.anchors.eq(d).trigger(this.options.event + ".tabs");
			return this
		},
		load: function(d) {
			d = this._getIndex(d);
			var b = this,
				f = this.options,
				j = this.anchors.eq(d)[0],
				n = a.data(j, "load.tabs");
			this.abort();
			if(!n || this.element.queue("tabs").length !== 0 && a.data(j, "cache.tabs")) this.element.dequeue("tabs");
			else {
				this.lis.eq(d).addClass("ui-state-processing");
				if(f.spinner) {
					var l = a("span", j);
					l.data("label.tabs", l.html()).html(f.spinner)
				}
				this.xhr = a.ajax(a.extend({}, f.ajaxOptions, {
					url: n,
					success: function(o, q) {
						a(b._sanitizeSelector(j.hash)).html(o);
						b._cleanup();
						f.cache && a.data(j, "cache.tabs", true);
						b._trigger("load", null, b._ui(b.anchors[d], b.panels[d]));
						try {
							f.ajaxOptions.success(o, q)
						} catch(v) {}
					},
	f[j] == null || f[j] == e) b[j] = f[j];
		return b
	}
	a.extend(a.ui, {
		datepicker: {
			version: "1.8.6"
		}
	});
	var d = (new Date).getTime();
	a.extend(g.prototype, {
		markerClassName: "hasDatepicker",
		log: function() {
			this.debug && console.log.apply("", arguments)
		},
		_widgetDatepicker: function() {
			return this.dpDiv
		},
		setDefaults: function(b) {
			c(this._defaults, b || {});
			return this
		},
		_attachDatepicker: function(b, f) {
			var j = null,
				n;
			for(n in this._defaults) {
				var l = b.getAttribute("date:" + n);
				if(l) {
					j = j || {};
					try {
						j[n] = eval(l)
					} catch(o) {
						j[n] = l
					}
				}
			}
			n = b.nodeName.toLowerCase();
			l = n == "div" || n == "span";
			if(!b.id) {
				this.uuid += 1;
				b.id = "dp" + this.uuid
			}
			var q = this._newInst(a(b), l);
			q.settings = a.extend({}, f || {}, j || {});
			if(n == "input") this._connectDatepicker(b, q);
			else l && this._inlineDatepicker(b, q)
		},
		_newInst: function(b, f) {
			return {
				id: b[0].id.replace(/([^A-Za-z0-9_-])/g, "\\\\$1"),
				input: b,
				selectedDay: 0,
				selectedMonth: 0,
				selectedYear: 0,
				drawMonth: 0,
				drawYear: 0,
				inline: f,
				dpDiv: !f ? this.dpDiv : a('<div class="' + this._inlineClass + ' ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>')
			}
		},
		_connectDatepicker: function(b, f) {
			var j = a(b);
			f.append = a([]);
			f.trigger = a([]);
			if(!j.hasClass(this.markerClassName)) {
				this._attachments(j, f);
				j.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp).bind("setData.datepicker", function(n, l, o) {
					f.settings[l] = o
				}).bind("getData.datepicker", function(n, l) {
					return this._get(f, l)
				});
				this._autoSize(f);
				a.data(b, "datepicker", f)
			}
		},
		_attachments: function(b, f) {
			var j = this._get(f, "appendText"),
				n = this._get(f, "isRTL");
			f.append && f.append.remove();
			if(j) {
				f.append = a('<span class="' + this._appendClass + '">' + j + "</span>");
				b[n ? "before" : "after"](f.append)
			}
			b.unbind("focus", this._showDatepicker);
			f.trigger && f.trigger.remove();
			j = this._get(f, "showOn");
			if(j == "focus" || j == "both") b.focus(this._showDatepicker);
			if(j == "button" || j == "both") {
				j = this._get(f, "buttonText");
				var l = this._get(f, "buttonImage");
				f.trigger = a(this._get(f, "buttonImageOnly") ? a("<img/>").addClass(this._triggerClass).attr({
					src: l,
					alt: j,
					title: j
				}) : a('<button type="button"></button>').addClass(this._triggerClass).html(l == "" ? j : a("<img/>").attr({
					src: l,
					alt: j,
					title: j
				})));
				b[n ? "before" : "after"](f.trigger);
				f.trigger.click(function() {
					a.datepicker._datepickerShowing && a.datepicker._lastInput == b[0] ? a.datepicker._hideDatepicker() : a.datepicker._showDatepicker(b[0]);
					return false
				})
			}
		},
		_autoSize: function(b) {
			if(this._get(b, "autoSize") && !b.inline) {
				var f = new Date(2009, 11, 20),
					j = this._get(b, "dateFormat");
				if(j.match(/[DM]/)) {
					var n = function(l) {
							for(var o = 0, q = 0, v = 0; v < l.length; v++) if(l[v].length > o) {
								o = l[v].length;
								q = v
							}
							return q
						};
					f.setMonth(n(this._get(b, j.match(/MM/) ? "monthNames" : "monthNamesShort")));
					f.setDate(n(this._get(b, j.match(/DD/) ? "dayNames" : "dayNamesShort")) + 20 - f.getDay())
				}
				b.input.attr("size", this._formatDate(b, f).length)
			}
		},
		_inlineDatepicker: function(b, f) {
			var j = a(b);
			if(!j.hasClass(this.markerClassName)) {
				j.addClass(this.markerClassName).append(f.dpDiv).bind("setData.datepicker", function(n, l, o) {
					f.settings[l] = o
				}).bind("getData.datepicker", function(n, l) {
					return this._get(f, l)
				});
				a.data(b, "datepicker", f);
				this._setDate(f, this._getDefaultDate(f), true);
				this._updateDatepicker(f);
				this._updateAlternate(f)
			}
		},
		_dialogDatepicker: function(b, f, j, n, l) {
			b = this._dialogInst;
			if(!b) {
				this.uuid += 1;
				this._dialogInput = a('<input type="text" id="' + ("dp" + this.uuid) + '" style="position: absolute; top: -100px; width: 0px; z-index: -10;"/>');
				this._dialogInput.keydown(this._doKeyDown);
				a("body").append(this._dialogInput);
				b = this._dialogInst = this._newInst(this._dialogInput, false);
				b.settings = {};
				a.data(this._dialogInput[0], "datepicker", b)
			}
			c(b.settings, n || {});
			f = f && f.constructor == Date ? this._formatDate(b, f) : f;
			this._dialogInput.val(f);
			this._pos = l ? l.length ? l : [l.pageX, l.pageY] : null;
			if(!this._pos) this._pos = [document.documentElement.clientWidth / 2 - 100 + (document.documentElement.scrollLeft || document.body.scrollLeft), document.documentElement.clientHeight / 2 - 150 + (document.documentElement.scrollTop || document.body.scrollTop)];
			this._dialogInput.css("left", this._pos[0] + 20 + "px").css("top", this._pos[1] + "px");
			b.settings.onSelect = j;
			this._inDialog = true;
			this.dpDiv.addClass(this._dialogClass);
			this._showDatepicker(this._dialogInput[0]);
			a.blockUI && a.blockUI(this.dpDiv);
			a.data(this._dialogInput[0], "datepicker", b);
			return this
		},
		_destroyDatepicker: function(b) {
			var f = a(b),
				j = a.data(b, "datepicker");
			if(f.hasClass(this.markerClassName)) {
				var n = b.nodeName.toLowerCase();
				a.removeData(b, "datepicker");
				if(n == "input") {
					j.append.remove();
					j.trigger.remove();
					f.removeClass(this.markerClassName).unbind("focus", this._showDatepicker).unbind("keydown", this._doKeyDown).unbind("keypress", this._doKeyPress).unbind("keyup", this._doKeyUp)
				} else if(n == "div" || n == "span") f.removeClass(this.markerClassName).empty()
			}
		},
		_enableDatepicker: function(b) {
			var f = a(b),
				j = a.data(b, "datepicker");
			if(f.hasClass(this.markerClassName)) {
				var n = b.nodeName.toLowerCase();
				if(n == "input") {
					b.disabled = false;
					j.trigger.filter("button").each(function() {
						this.disabled = false
					}).end().filter("img").css({
						opacity: "1.0",
						cursor: ""
					})
				} else if(n == "div" || n == "span") f.children("." + this._inlineClass).children().removeClass("ui-state-disabled");
				this._disabledInputs = a.map(this._disabledInputs, function(l) {
					return l == b ? null : l
				})
			}
		},
		_disableDatepicker: function(b) {
			var f = a(b),
				j = a.data(b, "datepicker");
			if(f.hasClass(this.markerClassName)) {
				var n = b.nodeName.toLowerCase();
				if(n == "input") {
					b.disabled = true;
					j.trigger.filter("button").each(function() {
						this.disabled = true
					}).end().filter("img").css({
						opacity: "0.5",
						cursor: "default"
					})
				} else if(n == "div" || n == "span") f.children("." + this._inlineClass).children().addClass("ui-state-disabled");
				this._disabledInputs = a.map(this._disabledInputs, function(l) {
					return l == b ? null : l
				});
				this._disabledInputs[this._disabledInputs.length] = b
			}
		},
		_isDisabledDatepicker: function(b) {
			if(!b) return false;
			for(var f = 0; f < this._disabledInputs.length; f++) if(this._disabledInputs[f] == b) return true;
			return false
		},
		_getInst: function(b) {
			try {
				return a.data(b, "datepicker")
			} catch(f) {
				throw "Missing instance data for this datepicker";
			}
		},
		_optionDatepicker: function(b, f, j) {
			var n = this._getInst(b);
			if(arguments.length == 2 && typeof f == "string") return f == "defaults" ? a.extend({}, a.datepicker._defaults) : n ? f == "all" ? a.extend({}, n.settings) : this._get(n, f) : null;
			var l = f || {};
			if(typeof f == "string") {
				l = {};
				l[f] = j
			}
			if(n) {
				this._curInst == n && this._hideDatepicker();
				var o = this._getDateDatepicker(b, true);
				c(n.settings, l);
				this._attachments(a(b), n);
				this._autoSize(n);
				this._setDateDatepicker(b, o);
				this._updateDatepicker(n)
			}
		},
		_changeDatepicker: function(b, f, j) {
			this._optionDatepicker(b, f, j)
		},
		_refreshDatepicker: function(b) {
			(b = this._getInst(b)) && this._updateDatepicker(b)
		},
		_setDateDatepicker: function(b, f) {
			var j = this._getInst(b);
			if(j) {
				this._setDate(j, f);
				this._updateDatepicker(j);
				this._updateAlternate(j)
			}
		},
		_getDateDatepicker: function(b, f) {
			var j = this._getInst(b);
			j && !j.inline && this._setDateFromField(j, f);
			return j ? this._getDate(j) : null
		},
		_doKeyDown: function(b) {
			var f = a.datepicker._getInst(b.target),
				j = true,
				n = f.dpDiv.is(".ui-datepicker-rtl");
			f._keyEvent = true;
			if(a.datepicker._datepickerShowing) switch(b.keyCode) {
			case 9:
				a.datepicker._hideDatepicker();
				j = false;
				break;
			case 13:
				j = a("td." + a.datepicker._dayOverClass, f.dpDiv).add(a("td." + a.datepicker._currentClass, f.dpDiv));
				j[0] ? a.datepicker._selectDay(b.target, f.selectedMonth, f.selectedYear, j[0]) : a.datepicker._hideDatepicker();
				return false;
			case 27:
				a.datepicker._hideDatepicker();
				break;
			case 33:
				a.datepicker._adjustDate(b.target, b.ctrlKey ? -a.datepicker._get(f, "stepBigMonths") : -a.datepicker._get(f, "stepMonths"), "M");
				break;
			case 34:
				a.datepicker._adjustDate(b.target, b.ctrlKey ? +a.datepicker._get(f, "stepBigMonths") : +a.datepicker._get(f, "stepMonths"), "M");
				break;
			case 35:
				if(b.ctrlKey || b.metaKey) a.datepicker._clearDate(b.target);
				j = b.ctrlKey || b.metaKey;
				break;
			case 36:
				if(b.ctrlKey || b.metaKey) a.datepicker._gotoToday(b.target);
				j = b.ctrlKey || b.metaKey;
				break;
			case 37:
				if(b.ctrlKey || b.metaKey) a.datepicker._adjustDate(b.target, n ? +1 : -1, "D");
				j = b.ctrlKey || b.metaKey;
				if(b.originalEvent.altKey) a.datepicker._adjustDate(b.target, b.ctrlKey ? -a.datepicker._get(f, "stepBigMonths") : -a.datepicker._get(f, "stepMonths"), "M");
				break;
			case 38:
				if(b.ctrlKey || b.metaKey) a.datepicker._adjustDate(b.target, -7, "D");
				j = b.ctrlKey || b.metaKey;
				break;
			case 39:
				if(b.ctrlKey || b.metaKey) a.datepicker._adjustDate(b.target, n ? -1 : +1, "D");
				j = b.ctrlKey || b.metaKey;
				if(b.originalEvent.altKey) a.datepicker._adjustDate(b.target, b.ctrlKey ? +a.datepicker._get(f, "stepBigMonths") : +a.datepicker._get(f, "stepMonths"), "M");
				break;
			case 40:
				if(b.ctrlKey || b.metaKey) a.datepicker._adjustDate(b.target, +7, "D");
				j = b.ctrlKey || b.metaKey;
				break;
			default:
				j = false
			} else if(b.keyCode == 36 && b.ctrlKey) a.datepicker._showDatepicker(this);
			else j = false;
			if(j) {
				b.preventDefault();
				b.stopPropagation()
			}
		},
		_doKeyPress: function(b) {
			var f = a.datepicker._getInst(b.target);
			if(a.datepicker._get(f, "constrainInput")) {
				f = a.datepicker._possibleChars(a.datepicker._get(f, "dateFormat"));
				var j = String.fromCharCode(b.charCode == e ? b.keyCode : b.charCode);
				return b.ctrlKey || j < " " || !f || f.indexOf(j) > -1
			}
		},
		_doKeyUp: function(b) {
			b = a.datepicker._getInst(b.target);
			if(b.input.val() != b.lastVal) try {
				if(a.datepicker.parseDate(a.datepicker._get(b, "dateFormat"), b.input ? b.input.val() : null, a.datepicker._getFormatConfig(b))) {
					a.datepicker._setDateFromField(b);
					a.datepicker._updateAlternate(b);
					a.datepicker._updateDatepicker(b)
				}
			} catch(f) {
				a.datepicker.log(f)
			}
			return true
		},
		_showDatepicker: function(b) {
			b = b.target || b;
			if(b.nodeName.toLowerCase() != "input") b = a("input", b.parentNode)[0];
			if(!(a.datepicker._isDisabledDatepicker(b) || a.datepicker._lastInput == b)) {
				var f = a.datepicker._getInst(b);
				a.datepicker._curInst && a.datepicker._curInst != f && a.datepicker._curInst.dpDiv.stop(true, true);
				var j = a.datepicker._get(f, "beforeShow");
				c(f.settings, j ? j.apply(b, [b, f]) : {});
				f.lastVal = null;
				a.datepicker._lastInput = b;
				a.datepicker._setDateFromField(f);
				if(a.datepicker._inDialog) b.value = "";
				if(!a.datepicker._pos) {
					a.datepicker._pos = a.datepicker._findPos(b);
					a.datepicker._pos[1] += b.offsetHeight
				}
				var n = false;
				a(b).parents().each(function() {
					n |= a(this).css("position") == "fixed";
					return !n
				});
				if(n && a.browser.opera) {
					a.datepicker._pos[0] -= document.documentElement.scrollLeft;
					a.datepicker._pos[1] -= document.documentElement.scrollTop
				}
				j = {
					left: a.datepicker._pos[0],
					top: a.datepicker._pos[1]
				};
				a.datepicker._pos = null;
				f.dpDiv.css({
					position: "absolute",
					display: "block",
					top: "-1000px"
				});
				a.datepicker._updateDatepicker(f);
				j = a.datepicker._checkOffset(f, j, n);
				f.dpDiv.css({
					position: a.datepicker._inDialog && a.blockUI ? "static" : n ? "fixed" : "absolute",
					display: "none",
					left: j.left + "px",
					top: j.top + "px"
				});
				if(!f.inline) {
					j = a.datepicker._get(f, "showAnim");
					var l = a.datepicker._get(f, "duration"),
						o = function() {
							a.datepicker._datepickerShowing = true;
							var q = a.datepicker._getBorders(f.dpDiv);
							f.dpDiv.find("iframe.ui-datepicker-cover").css({
								left: -q[0],
								top: -q[1],
								width: f.dpDiv.outerWidth(),
								height: f.dpDiv.outerHeight()
							})
						};
					f.dpDiv.zIndex(a(b).zIndex() + 1);
					a.effects && a.effects[j] ? f.dpDiv.show(j, a.datepicker._get(f, "showOptions"), l, o) : f.dpDiv[j || "show"](j ? l : null, o);
					if(!j || !l) o();
					f.input.is(":visible") && !f.input.is(":disabled") && f.input.focus();
					a.datepicker._curInst = f
				}
			}
		},
		_updateDatepicker: function(b) {
			var f = this,
				j = a.datepicker._getBorders(b.dpDiv);
			b.dpDiv.empty().append(this._generateHTML(b)).find("iframe.ui-datepicker-cover").css({
				left: -j[0],
				top: -j[1],
				width: b.dpDiv.outerWidth(),
				height: b.dpDiv.outerHeight()
			}).end().find("button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a").bind("mouseout", function() {
				a(this).removeClass("ui-state-hover");
				this.className.indexOf("ui-datepicker-prev") != -1 && a(this).removeClass("ui-datepicker-prev-hover");
				this.className.indexOf("ui-datepicker-next") != -1 && a(this).removeClass("ui-datepicker-next-hover")
			}).bind("mouseover", function() {
				if(!f._isDisabledDatepicker(b.inline ? b.dpDiv.parent()[0] : b.input[0])) {
					a(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover");
					a(this).addClass("ui-state-hover");
					this.className.indexOf("ui-datepicker-prev") != -1 && a(this).addClass("ui-datepicker-prev-hover");
					this.className.indexOf("ui-datepicker-next") != -1 && a(this).addClass("ui-datepicker-next-hover")
				}
			}).end().find("." + this._dayOverClass + " a").trigger("mouseover").end();
			j = this._getNumberOfMonths(b);
			var n = j[1];
			n > 1 ? b.dpDiv.addClass("ui-datepicker-multi-" + n).css("width", 17 * n + "em") : b.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width("");
			b.dpDiv[(j[0] != 1 || j[1] != 1 ? "add" : "remove") + "Class"]("ui-datepicker-multi");
			b.dpDiv[(this._get(b, "isRTL") ? "add" : "remove") + "Class"]("ui-datepicker-rtl");
			b == a.datepicker._curInst && a.datepicker._datepickerShowing && b.input && b.input.is(":visible") && !b.input.is(":disabled") && b.input.focus()
		},
		_getBorders: function(b) {
			var f = function(j) {
					return {
						thin: 1,
						medium: 2,
						thick: 3
					}[j] || j
				};
			return [parseFloat(f(b.css("border-left-width"))), parseFloat(f(b.css("border-top-width")))]
		},
		_checkOffset: function(b, f, j) {
			var n = b.dpDiv.outerWidth(),
				l = b.dpDiv.outerHeight(),
				o = b.input ? b.input.outerWidth() : 0,
				q = b.input ? b.input.outerHeight() : 0,
				v = document.documentElement.clientWidth + a(document).scrollLeft(),
				x = document.documentElement.clientHeight + a(document).scrollTop();
			f.left -= this._get(b, "isRTL") ? n - o : 0;
			f.left -= j && f.left == b.input.offset().left ? a(document).scrollLeft() : 0;
			f.top -= j && f.top == b.input.offset().top + q ? a(document).scrollTop() : 0;
			f.left -= Math.min(f.left, f.left + n > v && v > n ? Math.abs(f.left + n - v) : 0);
			f.top -= Math.min(f.top, f.top + l > x && x > l ? Math.abs(l + q) : 0);
			return f
		},
		_findPos: function(b) {
			for(var f = this._get(this._getInst(b), "isRTL"); b && (b.type == "hidden" || b.nodeType != 1);) b = b[f ? "previousSibling" : "nextSibling"];
			b = a(b).offset();
			return [b.left, b.top]
		},
		_hideDatepicker: function(b) {
			var f = this._curInst;
			if(!(!f || b && f != a.data(b, "datepicker"))) if(this._datepickerShowing) {
				b = this._get(f, "showAnim");
				var j = this._get(f, "duration"),
					n = function() {
						a.datepicker._tidyDialog(f);
						this._curInst = null
					};
				a.effects && a.effects[b] ? f.dpDiv.hide(b, a.datepicker._get(f, "showOptions"), j, n) : f.dpDiv[b == "slideDown" ? "slideUp" : b == "fadeIn" ? "fadeOut" : "hide"](b ? j : null, n);
				b || n();
				if(b = this._get(f, "onClose")) b.apply(f.input ? f.input[0] : null, [f.input ? f.input.val() : "", f]);
				this._datepickerShowing = false;
				this._lastInput = null;
				if(this._inDialog) {
					this._dialogInput.css({
						position: "absolute",
						left: "0",
						top: "-100px"
					});
					if(a.blockUI) {
						a.unblockUI();
						a("body").append(this.dpDiv)
					}
				}
				this._inDialog = false
			}
		},
		_tidyDialog: function(b) {
			b.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")
		},
		_checkExternalClick: function(b) {
			if(a.datepicker._curInst) {
				b = a(b.target);
				b[0].id != a.datepicker._mainDivId && b.parents("#" + a.datepicker._mainDivId).length == 0 && !b.hasClass(a.datepicker.markerClassName) && !b.hasClass(a.datepicker._triggerClass) && a.datepicker._datepickerShowing && !(a.datepicker._inDialog && a.blockUI) && a.datepicker._hideDatepicker()
			}
		},
		_adjustDate: function(b, f, j) {
			b = a(b);
			var n = this._getInst(b[0]);
			if(!this._isDisabledDatepicker(b[0])) {
				this._adjustInstDate(n, f + (j == "M" ? this._get(n, "showCurrentAtPos") : 0), j);
				this._updateDatepicker(n)
			}
		},
		_gotoToday: function(b) {
			b = a(b);
			var f = this._getInst(b[0]);
			if(this._get(f, "gotoCurrent") && f.currentDay) {
				f.selectedDay = f.currentDay;
				f.drawMonth = f.selectedMonth = f.currentMonth;
				f.drawYear = f.selectedYear = f.currentYear
			} else {
				var j = new Date;
				f.selectedDay = j.getDate();
				f.drawMonth = f.selectedMonth = j.getMonth();
				f.drawYear = f.selectedYear = j.getFullYear()
			}
			this._notifyChange(f);
			this._adjustDate(b)
		},
		_selectMonthYear: function(b, f, j) {
			b = a(b);
			var n = this._getInst(b[0]);
			n._selectingMonthYear = false;
			n["selected" + (j == "M" ? "Month" : "Year")] = n["draw" + (j == "M" ? "Month" : "Year")] = parseInt(f.options[f.selectedIndex].value, 10);
			this._notifyChange(n);
			this._adjustDate(b)
		},
		_clickMonthYear: function(b) {
			var f = this._getInst(a(b)[0]);
			f.input && f._selectingMonthYear && setTimeout(function() {
				f.input.focus()
			}, 0);
			f._selectingMonthYear = !f._selectingMonthYear
		},
		_selectDay: function(b, f, j, n) {
			var l = a(b);
			if(!(a(n).hasClass(this._unselectableClass) || this._isDisabledDatepicker(l[0]))) {
				l = this._getInst(l[0]);
				l.selectedDay = l.currentDay = a("a", n).html();
				l.selectedMonth = l.currentMonth = f;
				l.selectedYear = l.currentYear = j;
				this._selectDate(b, this._formatDate(l, l.currentDay, l.currentMonth, l.currentYear))
			}
		},
		_clearDate: function(b) {
			b = a(b);
			this._getInst(b[0]);
			this._selectDate(b, "")
		},
		_selectDate: function(b, f) {
			var j = this._getInst(a(b)[0]);
			f = f != null ? f : this._formatDate(j);
			j.input && j.input.val(f);
			this._updateAlternate(j);
			var n = this._get(j, "onSelect");
			if(n) n.apply(j.input ? j.input[0] : null, [f, j]);
			else j.input && j.input.trigger("change");
			if(j.inline) this._updateDatepicker(j);
			else {
				this._hideDatepicker();
				this._lastInput = j.input[0];
				typeof j.input[0] != "object" && j.input.focus();
				this._lastInput = null
			}
		},
		_updateAlternate: function(b) {
			var f = this._get(b, "altField");
			if(f) {
				var j = this._get(b, "altFormat") || this._get(b, "dateFormat"),
					n = this._getDate(b),
					l = this.formatDate(j, n, this._getFormatConfig(b));
				a(f).each(function() {
					a(this).val(l)
				})
			}
		},
		noWeekends: function(b) {
			b = b.getDay();
			return [b > 0 && b < 6, ""]
		},
		iso8601Week: function(b) {
			b = new Date(b.getTime());
			b.setDate(b.getDate() + 4 - (b.getDay() || 7));
			var f = b.getTime();
			b.setMonth(0);
			b.setDate(1);
			return Math.floor(Math.round((f - b) / 864E5) / 7) + 1
		},
		parseDate: function(b, f, j) {
			if(b == null || f == null) throw "Invalid arguments";
			f = typeof f == "object" ? f.toString() : f + "";
			if(f == "") return null;
			for(var n = (j ? j.shortYearCutoff : null) || this._defaults.shortYearCutoff, l = (j ? j.dayNamesShort : null) || this._defaults.dayNamesShort, o = (j ? j.dayNames : null) || this._defaults.dayNames, q = (j ? j.monthNamesShort : null) || this._defaults.monthNamesShort, v = (j ? j.monthNames : null) || this._defaults.monthNames, x = j = -1, y = -1, D = -1, B = false, u = function(X) {
					(X = Q + 1 < b.length && b.charAt(Q + 1) == X) && Q++;
					return X
				}, F = function(X) {
					u(X);
					X = RegExp("^\\d{1," + (X == "@" ? 14 : X == "!" ? 20 : X == "y" ? 4 : X == "o" ? 3 : 2) + "}");
					X = f.substring(M).match(X);
					if(!X) throw "Missing number at position " + M;
					M += X[0].length;
					return parseInt(X[0], 10)
				}, I = function(X, ma, pa) {
					X = u(X) ? pa : ma;
					for(ma = 0; ma < X.length; ma++) if(f.substr(M, X[ma].length).toLowerCase() == X[ma].toLowerCase()) {
						M += X[ma].length;
						return ma + 1
					}
					throw "Unknown name at position " + M;
				}, C = function() {
					if(f.charAt(M) != b.charAt(Q)) throw "Unexpected literal at position " + M;
					M++
				}, M = 0, Q = 0; Q < b.length; Q++) if(B) if(b.charAt(Q) == "'" && !u("'")) B = false;
			else C();
			else switch(b.charAt(Q)) {
			case "d":
				y = F("d");
				break;
			case "D":
				I("D", l, o);
				break;
			case "o":
				D = F("o");
				break;
			case "m":
				x = F("m");
				break;
			case "M":
				x = I("M", q, v);
				break;
			case "y":
				j = F("y");
				break;
			case "@":
				var N = new Date(F("@"));
				j = N.getFullYear();
				x = N.getMonth() + 1;
				y = N.getDate();
				break;
			case "!":
				N = new Date((F("!") - this._ticksTo1970) / 1E4);
				j = N.getFullYear();
				x = N.getMonth() + 1;
				y = N.getDate();
				break;
			case "'":
				if(u("'")) C();
				else B = true;
				break;
			default:
				C()
			}
			if(j == -1) j = (new Date).getFullYear();
			else if(j < 100) j += (new Date).getFullYear() - (new Date).getFullYear() % 100 + (j <= n ? 0 : -100);
			if(D > -1) {
				x = 1;
				y = D;
				do {
					n = this._getDaysInMonth(j, x - 1);
					if(y <= n) break;
					x++;
					y -= n
				} while (1)
			}
			N = this._daylightSavingAdjust(new Date(j, x - 1, y));
			if(N.getFullYear() != j || N.getMonth() + 1 != x || N.getDate() != y) throw "Invalid date";
			return N
		},
		ATOM: "yy-mm-dd",
		COOKIE: "D, dd M yy",
		ISO_8601: "yy-mm-dd",
		RFC_822: "D, d M y",
		RFC_850: "DD, dd-M-y",
		RFC_1036: "D, d M y",
		RFC_1123: "D, d M yy",
		RFC_2822: "D, d M yy",
		RSS: "D, d M y",
		TICKS: "!",
		TIMESTAMP: "@",
		W3C: "yy-mm-dd",
		_ticksTo1970: (718685 + Math.floor(492.5) - Math.floor(19.7) + Math.floor(4.925)) * 24 * 60 * 60 * 1E7,
		formatDate: function(b, f, j) {
			if(!f) return "";
			var n = (j ? j.dayNamesShort : null) || this._defaults.dayNamesShort,
				l = (j ? j.dayNames : null) || this._defaults.dayNames,
				o = (j ? j.monthNamesShort : null) || this._defaults.monthNamesShort;
			j = (j ? j.monthNames : null) || this._defaults.monthNames;
			var q = function(u) {
					(u = B + 1 < b.length && b.charAt(B + 1) == u) && B++;
					return u
				},
				v = function(u, F, I) {
					F = "" + F;
					if(q(u)) for(; F.length < I;) F = "0" + F;
					return F
				},
				x = function(u, F, I, C) {
					return q(u) ? C[F] : I[F]
				},
				y = "",
				D = false;
			if(f) for(var B = 0; B < b.length; B++) if(D) if(b.charAt(B) == "'" && !q("'")) D = false;
			else y += b.charAt(B);
			else switch(b.charAt(B)) {
			case "d":
				y += v("d", f.getDate(), 2);
				break;
			case "D":
				y += x("D", f.getDay(), n, l);
				break;
			case "o":
				y += v("o", (f.getTime() - (new Date(f.getFullYear(), 0, 0)).getTime()) / 864E5, 3);
				break;
			case "m":
				y += v("m", f.getMonth() + 1, 2);
				break;
			case "M":
				y += x("M", f.getMonth(), o, j);
				break;
			case "y":
				y += q("y") ? f.getFullYear() : (f.getYear() % 100 < 10 ? "0" : "") + f.getYear() % 100;
				break;
			case "@":
				y += f.getTime();
				break;
			case "!":
				y += f.getTime() * 1E4 + this._ticksTo1970;
				break;
			case "'":
				if(q("'")) y += "'";
				else D = true;
				break;
			default:
				y += b.charAt(B)
			}
			return y
		},
		_possibleChars: function(b) {
			for(var f = "", j = false, n = function(o) {
					(o = l + 1 < b.length && b.charAt(l + 1) == o) && l++;
					return o
				}, l = 0; l < b.length; l++) if(j) if(b.charAt(l) == "'" && !n("'")) j = false;
			else f += b.charAt(l);
			else switch(b.charAt(l)) {
			case "d":
			case "m":
			case "y":
			case "@":
				f += "0123456789";
				break;
			case "D":
			case "M":
				return null;
			case "'":
				if(n("'")) f += "'";
				else j = true;
				break;
			default:
				f += b.charAt(l)
			}
			return f
		},
		_get: function(b, f) {
			return b.settings[f] !== e ? b.settings[f] : this._defaults[f]
		},
		_setDateFromField: function(b, f) {
			if(b.input.val() != b.lastVal) {
				var j = this._get(b, "dateFormat"),
					n = b.lastVal = b.input ? b.input.val() : null,
					l, o;
				l = o = this._getDefaultDate(b);
				var q = this._getFormatConfig(b);
				try {
					l = this.parseDate(j, n, q) || o
				} catch(v) {
					this.log(v);
					n = f ? "" : n
				}
				b.selectedDay = l.getDate();
				b.drawMonth = b.selectedMonth = l.getMonth();
				b.drawYear = b.selectedYear = l.getFullYear();
				b.currentDay = n ? l.getDate() : 0;
				b.currentMonth = n ? l.getMonth() : 0;
				b.currentYear = n ? l.getFullYear() : 0;
				this._adjustInstDate(b)
			}
		},
		_getDefaultDate: function(b) {
			return this._restrictMinMax(b, this._determineDate(b, this._get(b, "defaultDate"), new Date))
		},
		_determineDate: function(b, f, j) {
			var n = function(o) {
					var q = new Date;
					q.setDate(q.getDate() + o);
					return q
				},
				l = function(o) {
					try {
						return a.datepicker.parseDate(a.datepicker._get(b, "dateFormat"), o, a.datepicker._getFormatConfig(b))
					} catch(q) {}
					var v = (o.toLowerCase().match(/^c/) ? a.datepicker._getDate(b) : null) || new Date,
						x = v.getFullYear(),
						y = v.getMonth();
					v = v.getDate();
					for(var D = /([+-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g, B = D.exec(o); B;) {
						switch(B[2] || "d") {
						case "d":
						case "D":
							v += parseInt(B[1], 10);
							break;
						case "w":
						case "W":
							v += parseInt(B[1], 10) * 7;
							break;
						case "m":
						case "M":
							y += parseInt(B[1], 10);
							v = Math.min(v, a.datepicker._getDaysInMonth(x, y));
							break;
						case "y":
						case "Y":
							x += parseInt(B[1], 10);
							v = Math.min(v, a.datepicker._getDaysInMonth(x, y))
						}
						B = D.exec(o)
					}
					return new Date(x, y, v)
				};
			if(f = (f = f == null ? j : typeof f == "string" ? l(f) : typeof f == "number" ? isNaN(f) ? j : n(f) : f) && f.toString() == "Invalid Date" ? j : f) {
				f.setHours(0);
				f.setMinutes(0);
				f.setSeconds(0);
				f.setMilliseconds(0)
			}
			return this._daylightSavingAdjust(f)
		},
		_daylightSavingAdjust: function(b) {
			if(!b) return null;
			b.setHours(b.getHours() > 12 ? b.getHours() + 2 : 0);
			return b
		},
		_setDate: function(b, f, j) {
			var n = !f,
				l = b.selectedMonth,
				o = b.selectedYear;
			f = this._restrictMinMax(b, this._determineDate(b, f, new Date));
			b.selectedDay = b.currentDay = f.getDate();
			b.drawMonth = b.selectedMonth = b.currentMonth = f.getMonth();
			b.drawYear = b.selectedYear = b.currentYear = f.getFullYear();
			if((l != b.selectedMonth || o != b.selectedYear) && !j) this._notifyChange(b);
			this._adjustInstDate(b);
			if(b.input) b.input.val(n ? "" : this._formatDate(b))
		},
		_getDate: function(b) {
			return !b.currentYear || b.input && b.input.val() == "" ? null : this._daylightSavingAdjust(new Date(b.currentYear, b.currentMonth, b.currentDay))
		},
		_generateHTML: function(b) {
			var f = new Date;
			f = this._daylightSavingAdjust(new Date(f.getFullYear(), f.getMonth(), f.getDate()));
			var j = this._get(b, "isRTL"),
				n = this._get(b, "showButtonPanel"),
				l = this._get(b, "hideIfNoPrevNext"),
				o = this._get(b, "navigationAsDateFormat"),
				q = this._getNumberOfMonths(b),
				v = this._get(b, "showCurrentAtPos"),
				x = this._get(b, "stepMonths"),
				y = q[0] != 1 || q[1] != 1,
				D = this._daylightSavingAdjust(!b.currentDay ? new Date(9999, 9, 9) : new Date(b.currentYear, b.currentMonth, b.currentDay)),
				B = this._getMinMaxDate(b, "min"),
				u = this._getMinMaxDate(b, "max");
			v = b.drawMonth - v;
			var F = b.drawYear;
			if(v < 0) {
				v += 12;
				F--
			}
			if(u) {
				var I = this._daylightSavingAdjust(new Date(u.getFullYear(), u.getMonth() - q[0] * q[1] + 1, u.getDate()));
				for(I = B && I < B ? B : I; this._daylightSavingAdjust(new Date(F, v, 1)) > I;) {
					v--;
					if(v < 0) {
						v = 11;
						F--
					}
				}
			}
			b.drawMonth = v;
			b.drawYear = F;
			I = this._get(b, "prevText");
			I = !o ? I : this.formatDate(I, this._daylightSavingAdjust(new Date(F, v - x, 1)), this._getFormatConfig(b));
			I = this._canAdjustMonth(b, -1, F, v) ? '<a class="ui-datepicker-prev ui-corner-all" onclick="DP_jQuery_' + d + ".datepicker._adjustDate('#" + b.id + "', -" + x + ", 'M');\" title=\"" + I + '"><span class="ui-icon ui-icon-circle-triangle-' + (j ? "e" : "w") + '">' + I + "</span></a>" : l ? "" : '<a class="ui-datepicker-prev ui-corner-all ui-state-disabled" title="' + I + '"><span class="ui-icon ui-icon-circle-triangle-' + (j ? "e" : "w") + '">' + I + "</span></a>";
			var C = this._get(b, "nextText");
			C = !o ? C : this.formatDate(C, this._daylightSavingAdjust(new Date(F, v + x, 1)), this._getFormatConfig(b));
			l = this._canAdjustMonth(b, +1, F, v) ? '<a class="ui-datepicker-next ui-corner-all" onclick="DP_jQuery_' + d + ".datepicker._adjustDate('#" + b.id + "', +" + x + ", 'M');\" title=\"" + C + '"><span class="ui-icon ui-icon-circle-triangle-' + (j ? "w" : "e") + '">' + C + "</span></a>" : l ? "" : '<a class="ui-datepicker-next ui-corner-all ui-state-disabled" title="' + C + '"><span class="ui-icon ui-icon-circle-triangle-' + (j ? "w" : "e") + '">' + C + "</span></a>";
			x = this._get(b, "currentText");
			C = this._get(b, "gotoCurrent") && b.currentDay ? D : f;
			x = !o ? x : this.formatDate(x, C, this._getFormatConfig(b));
			o = !b.inline ? '<button type="button" class="ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all" onclick="DP_jQuery_' + d + '.datepicker._hideDatepicker();">' + this._get(b, "closeText") + "</button>" : "";
			n = n ? '<div class="ui-datepicker-buttonpane ui-widget-content">' + (j ? o : "") + (this._isInRange(b, C) ? '<button type="button" class="ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all" onclick="DP_jQuery_' + d + ".datepicker._gotoToday('#" + b.id + "');\">" + x + "</button>" : "") + (j ? "" : o) + "</div>" : "";
			o = parseInt(this._get(b, "firstDay"), 10);
			o = isNaN(o) ? 0 : o;
			x = this._get(b, "showWeek");
			C = this._get(b, "dayNames");
			this._get(b, "dayNamesShort");
			var M = this._get(b, "dayNamesMin"),
				Q = this._get(b, "monthNames"),
				N = this._get(b, "monthNamesShort"),
				X = this._get(b, "beforeShowDay"),
				ma = this._get(b, "showOtherMonths"),
				pa = this._get(b, "selectOtherMonths");
			this._get(b, "calculateWeek");
			for(var Ma = this._getDefaultDate(b), oa = "", Ka = 0; Ka < q[0]; Ka++) {
				for(var Za = "", eb = 0; eb < q[1]; eb++) {
					var ib = this._daylightSavingAdjust(new Date(F, v, b.selectedDay)),
						Ea = " ui-corner-all",
						cb = "";
					if(y) {
						cb += '<div class="ui-datepicker-group';
						if(q[1] > 1) switch(eb) {
						case 0:
							cb += " ui-datepicker-group-first";
							Ea = " ui-corner-" + (j ? "right" : "left");
							break;
						case q[1] - 1:
							cb += " ui-datepicker-group-last";
							Ea = " ui-corner-" + (j ? "left" : "right");
							break;
						default:
							cb += " ui-datepicker-group-middle";
							Ea = ""
						}
						cb += '">'
					}
					cb += '<div class="ui-datepicker-header ui-widget-header ui-helper-clearfix' + Ea + '">' + (/all|left/.test(Ea) && Ka == 0 ? j ? l : I : "") + (/all|right/.test(Ea) && Ka == 0 ? j ? I : l : "") + this._generateMonthYearHeader(b, v, F, B, u, Ka > 0 || eb > 0, Q, N) + '</div><table class="ui-datepicker-calendar"><thead><tr>';
					var db = x ? '<th class="ui-datepicker-week-col">' + this._get(b, "weekHeader") + "</th>" : "";
					for(Ea = 0; Ea < 7; Ea++) {
						var $a = (Ea + o) % 7;
						db += "<th" + ((Ea + o + 6) % 7 >= 5 ? ' class="ui-datepicker-week-end"' : "") + '><span title="' + C[$a] + '">' + M[$a] + "</span></th>"
					}
					cb += db + "</tr></thead><tbody>";
					db = this._getDaysInMonth(F, v);
					if(F == b.selectedYear && v == b.selectedMonth) b.selectedDay = Math.min(b.selectedDay, db);
					Ea = (this._getFirstDayOfMonth(F, v) - o + 7) % 7;
					db = y ? 6 : Math.ceil((Ea + db) / 7);
					$a = this._daylightSavingAdjust(new Date(F, v, 1 - Ea));
					for(var qb = 0; qb < db; qb++) {
						cb += "<tr>";
						var wb = !x ? "" : '<td class="ui-datepicker-week-col">' + this._get(b, "calculateWeek")($a) + "</td>";
						for(Ea = 0; Ea < 7; Ea++) {
							var Oa = X ? X.apply(b.input ? b.input[0] : null, [$a]) : [true, ""],
								O = $a.getMonth() != v,
								S = O && !pa || !Oa[0] || B && $a < B || u && $a > u;
							wb += '<td class="' + ((Ea + o + 6) % 7 >= 5 ? " ui-datepicker-week-end" : "") + (O ? " ui-datepicker-other-month" : "") + ($a.getTime() == ib.getTime() && v == b.selectedMonth && b._keyEvent || Ma.getTime() == $a.getTime() && Ma.getTime() == ib.getTime() ? " " + this._dayOverClass : "") + (S ? " " + this._unselectableClass + " ui-state-disabled" : "") + (O && !ma ? "" : " " + Oa[1] + ($a.getTime() == D.getTime() ? " " + this._currentClass : "") + ($a.getTime() == f.getTime() ? " ui-datepicker-today" : "")) + '"' + ((!O || ma) && Oa[2] ? ' title="' + Oa[2] + '"' : "") + (S ? "" : ' onclick="DP_jQuery_' + d + ".datepicker._selectDay('#" + b.id + "'," + $a.getMonth() + "," + $a.getFullYear() + ', this);return false;"') + ">" + (O && !ma ? "&#xa0;" : S ? '<span class="ui-state-default">' + $a.getDate() + "</span>" : '<a class="ui-state-default' + ($a.getTime() == f.getTime() ? " ui-state-highlight" : "") + ($a.getTime() == D.getTime() ? " ui-state-active" : "") + (O ? " ui-priority-secondary" : "") + '" href="#">' + $a.getDate() + "</a>") + "</td>";
							$a.setDate($a.getDate() + 1);
							$a = this._daylightSavingAdjust($a)
						}
						cb += wb + "</tr>"
					}
					v++;
					if(v > 11) {
						v = 0;
						F++
					}
					cb += "</tbody></table>" + (y ? "</div>" + (q[0] > 0 && eb == q[1] - 1 ? '<div class="ui-datepicker-row-break"></div>' : "") : "");
					Za += cb
				}
				oa += Za
			}
			oa += n + (a.browser.msie && parseInt(a.browser.version, 10) < 7 && !b.inline ? '<iframe src="javascript:false;" class="ui-datepicker-cover" frameborder="0"></iframe>' : "");
			b._keyEvent = false;
			return oa
		},
		_generateMonthYearHeader: function(b, f, j, n, l, o, q, v) {
			var x = this._get(b, "changeMonth"),
				y = this._get(b, "changeYear"),
				D = this._get(b, "showMonthAfterYear"),
				B = this._get(b, "showYear"),
				u = '<div class="ui-datepicker-title">',
				F = "";
			if(o || !x) F += '<span class="ui-datepicker-month">' + q[f] + "</span>";
			else {
				q = n && n.getFullYear() == j;
				var I = l && l.getFullYear() == j;
				F += '<select class="ui-datepicker-month" onchange="DP_jQuery_' + d + ".datepicker._selectMonthYear('#" + b.id + "', this, 'M');\" onclick=\"DP_jQuery_" + d + ".datepicker._clickMonthYear('#" + b.id + "');\">";
				for(var C = 0; C < 12; C++) if((!q || C >= n.getMonth()) && (!I || C <= l.getMonth())) F += '<option value="' + C + '"' + (C == f ? ' selected="selected"' : "") + ">" + v[C] + "</option>";
				F += "</select>"
			}
			D || (u += F + (o || !(x && y) ? "&#xa0;" : ""));
			if((o || !y) && B) u += '<span class="ui-datepicker-year">' + j + "</span>";
			else if(B) {
				v = this._get(b, "yearRange").split(":");
				var M = (new Date).getFullYear();
				B = function(Q) {
					Q = Q.match(/c[+-].*/) ? j + parseInt(Q.substring(1), 10) : Q.match(/[+-].*/) ? M + parseInt(Q, 10) : parseInt(Q, 10);
					return isNaN(Q) ? M : Q
				};
				f = B(v[0]);
				v = Math.max(f, B(v[1] || ""));
				f = n ? Math.max(f, n.getFullYear()) : f;
				v = l ? Math.min(v, l.getFullYear()) : v;
				for(u += '<select class="ui-datepicker-year" onchange="DP_jQuery_' + d + ".datepicker._selectMonthYear('#" + b.id + "', this, 'Y');\" onclick=\"DP_jQuery_" + d + ".datepicker._clickMonthYear('#" + b.id + "');\">"; f <= v; f++) u += '<option value="' + f + '"' + (f == j ? ' selected="selected"' : "") + ">" + f + "</option>";
				u += "</select>"
			}
			u += this._get(b, "yearSuffix");
			if(D) u += (o || !(x && y) ? "&#xa0;" : "") + F;
			u += "</div>";
			return u
		},
		_adjustInstDate: function(b, f, j) {
			var n = b.drawYear + (j == "Y" ? f : 0),
				l = b.drawMonth + (j == "M" ? f : 0);
			f = Math.min(b.selectedDay, this._getDaysInMonth(n, l)) + (j == "D" ? f : 0);
			n = this._restrictMinMax(b, this._daylightSavingAdjust(new Date(n, l, f)));
			b.selectedDay = n.getDate();
			b.drawMonth = b.selectedMonth = n.getMonth();
			b.drawYear = b.selectedYear = n.getFullYear();
			if(j == "M" || j == "Y") this._notifyChange(b)
		},
		_restrictMinMax: function(b, f) {
			var j = this._getMinMaxDate(b, "min"),
				n = this._getMinMaxDate(b, "max");
			f = j && f < j ? j : f;
			return f = n && f > n ? n : f
		},
		_notifyChange: function(b) {
			var f = this._get(b, "onChangeMonthYear");
			if(f) f.apply(b.input ? b.input[0] : null, [b.selectedYear, b.selectedMonth + 1, b])
		},
		_getNumberOfMonths: function(b) {
			b = this._get(b, "numberOfMonths");
			return b == null ? [1, 1] : typeof b == "number" ? [1, b] : b
		},
		_getMinMaxDate: function(b, f) {
			return this._determineDate(b, this._get(b, f + "Date"), null)
		},
		_getDaysInMonth: function(b, f) {
			return 32 - (new Date(b, f, 32)).getDate()
		},
		_getFirstDayOfMonth: function(b, f) {
			return(new Date(b, f, 1)).getDay()
		},
		_canAdjustMonth: function(b, f, j, n) {
			var l = this._getNumberOfMonths(b);
			j = this._daylightSavingAdjust(new Date(j, n + (f < 0 ? f : l[0] * l[1]), 1));
			f < 0 && j.setDate(this._getDaysInMonth(j.getFullYear(), j.getMonth()));
			return this._isInRange(b, j)
		},
		_isInRange: function(b, f) {
			var j = this._getMinMaxDate(b, "min"),
				n = this._getMinMaxDate(b, "max");
			return(!j || f.getTime() >= j.getTime()) && (!n || f.getTime() <= n.getTime())
		},
		_getFormatConfig: function(b) {
			var f = this._get(b, "shortYearCutoff");
			f = typeof f != "string" ? f : (new Date).getFullYear() % 100 + parseInt(f, 10);
			return {
				shortYearCutoff: f,
				dayNamesShort: this._get(b, "dayNamesShort"),
				dayNames: this._get(b, "dayNames"),
				monthNamesShort: this._get(b, "monthNamesShort"),
				monthNames: this._get(b, "monthNames")
			}
		},
		_formatDate: function(b, f, j, n) {
			if(!f) {
				b.currentDay = b.selectedDay;
				b.currentMonth = b.selectedMonth;
				b.currentYear = b.selectedYear
			}
			f = f ? typeof f == "object" ? f : this._daylightSavingAdjust(new Date(n, j, f)) : this._daylightSavingAdjust(new Date(b.currentYear, b.currentMonth, b.currentDay));
			return this.formatDate(this._get(b, "dateFormat"), f, this._getFormatConfig(b))
		}
	});
	a.fn.datepicker = function(b) {
		if(!a.datepicker.initialized) {
			a(document).mousedown(a.datepicker._checkExternalClick).find("body").append(a.datepicker.dpDiv);
			a.datepicker.initialized = true
		}
		var f = Array.prototype.slice.call(arguments, 1);
		if(typeof b == "string" && (b == "isDisabled" || b == "getDate" || b == "widget")) return a.datepicker["_" + b + "Datepicker"].apply(a.datepicker, [this[0]].concat(f));
		if(b == "option" && arguments.length == 2 && typeof arguments[1] == "string") return a.datepicker["_" + b + "Datepicker"].apply(a.datepicker, [this[0]].concat(f));
		return this.each(function() {
			typeof b == "string" ? a.datepicker["_" + b + "Datepicker"].apply(a.datepicker, [this].concat(f)) : a.datepicker._attachDatepicker(this, b)
		})
	};
	a.datepicker = new g;
	a.datepicker.initialized = false;
	a.datepicker.uuid = (new Date).getTime();
	a.datepicker.version = "1.8.6";
	window["DP_jQuery_" + d] = a
})(jQuery);
(function(a) {
	var e = a.fn.empty;
	a.fn.empty = function() {
		return this.each(function() {
			a("*", this).each(function() {
				a(this).triggerHandler("remove")
			});
			return e.call(a(this))
		})
	};
	var g = a.fn.html;
	a.fn.html = function(b) {
		return b ? this.each(function() {
			a("*", this).each(function() {
				a(this).triggerHandler("remove")
			});
			return g.call(a(this), b)
		}) : g.call(a(this))
	};
	var c = a.fn.text;
	a.fn.text = function(b) {
		return b ? this.each(function() {
			a("*", this).each(function() {
				a(this).triggerHandler("remove")
			});
			return c.call(a(this), b)
		}) : c.call(a(this))
	};
	var d = a.fn.replaceWith;
	a.fn.replaceWith = function(b) {
		return this.each(function() {
			a("*", this).each(function() {
				a(this).triggerHandler("remove")
			});
			return d.call(a(this), b)
		})
	}
})(jQuery);
(function(a) {
	a.fn.closestDesc = function(e) {
		var g = this.filter(e);
		return g[0] ? g : this.find(e).eq(0)
	}
})(jQuery);
(function(a) {
	var e = a.fn.attr;
	a.fn.attr = function(g) {
		var c = e.apply(this, arguments);
		g === "checked" && a(this).filter(":checkbox").each(function() {
			a(this).triggerHandler("change")
		});
		return c
	};
	a.fn.checks = function(g) {
		var c = this;
		g = g || {};
		this.is("input:checkbox") || (c = this.find("input:checkbox"));
		c.bind("change", function() {
			var d = a(this),
				b = d.data("linkedHidden");
			if(d.is(":checked")) {
				if(b) {
					b.remove();
					d.removeData("linkedHidden")
				}
			} else {
				b = a("<input />", {
					type: "hidden",
					name: d.attr("name"),
					value: g.offValue || ""
				});
				d.data("linkedHidden", b);
				d.after(b)
			}
		}).triggerHandler("change");
		return this
	}
})(jQuery);

function jsonPath(a, e, g) {
	var c = {
		resultType: g && g.resultType || "VALUE",
		result: [],
		normalize: function(b) {
			var f = [];
			return b.replace(/[\['](\??\(.*?\))[\]']/g, function(j, n) {
				return "[#" + (f.push(n) - 1) + "]"
			}).replace(/'?\.'?|\['?/g, ";").replace(/;;;|;;/g, ";..;").replace(/;$|'?\]|'$/g, "").replace(/#([0-9]+)/g, function(j, n) {
				return f[n]
			})
		},
		asPath: function(b) {
			b = b.split(";");
			for(var f = "$", j = 1, n = b.length; j < n; j++) f += /^[0-9*]+$/.test(b[j]) ? "[" + b[j] + "]" : "['" + b[j] + "']";
			return f
		},
		store: function(b, f) {
			if(b) c.result[c.result.length] = c.resultType == "PATH" ? c.asPath(b) : f;
			return !!b
		},
		trace: function(b, f, j) {
			if(b) {
				b = b.split(";");
				var n = b.shift();
				b = b.join(";");
				if(f && f.hasOwnProperty(n)) c.trace(b, f[n], j + ";" + n);
				else if(n === "*") c.walk(n, b, f, j, function(q, v, x, y, D) {
					c.trace(q + ";" + x, y, D)
				});
				else if(n === "..") {
					c.trace(b, f, j);
					c.walk(n, b, f, j, function(q, v, x, y, D) {
						typeof y[q] === "object" && c.trace("..;" + x, y[q], D + ";" + q)
					})
				} else if(/,/.test(n)) {
					n = n.split(/'?,'?/);
					for(var l = 0, o = n.length; l < o; l++) c.trace(n[l] + ";" + b, f, j)
				} else if(/^\(.*?\)$/.test(n)) c.trace(c.eval(n, f, j.substr(j.lastIndexOf(";") + 1)) + ";" + b, f, j);
				else if(/^\?\(.*?\)$/.test(n)) c.walk(n, b, f, j, function(q, v, x, y, D) {
					c.eval(v.replace(/^\?\((.*?)\)$/, "$1"), y[q], q) && c.trace(q + ";" + x, y, D)
				});
				else /^(-?[0-9]*):(-?[0-9]*):?([0-9]*)$/.test(n) && c.slice(n, b, f, j)
			} else c.store(j, f)
		},
		walk: function(b, f, j, n, l) {
			if(j instanceof Array) for(var o = 0, q = j.length; o < q; o++) o in j && l(o, b, f, j, n);
			else if(typeof j === "object") for(o in j) j.hasOwnProperty(o) && l(o, b, f, j, n)
		},
		slice: function(b, f, j, n) {
			if(j instanceof Array) {
				var l = j.length,
					o = 0,
					q = l,
					v = 1;
				b.replace(/^(-?[0-9]*):(-?[0-9]*):?(-?[0-9]*)$/g, function(x, y, D, B) {
					o = parseInt(y || o);
					q = parseInt(D || q);
					v = parseInt(B || v)
				});
				o = o < 0 ? Math.max(0, o + l) : Math.min(l, o);
				q = q < 0 ? Math.max(0, q + l) : Math.min(l, q);
				for(b = o; b < q; b += v) c.trace(b + ";" + f, j, n)
			}
		},
		eval: function(b, f) {
			try {
				return d && f && eval(b.replace(/@/g, "_v"))
			} catch(j) {
				throw new SyntaxError("jsonPath: " + j.message + ": " + b.replace(/@/g, "_v").replace(/\^/g, "_a"));
			}
		}
	},
		d = a;
	if(e && a && (c.resultType == "VALUE" || c.resultType == "PATH")) {
		c.trace(c.normalize(e).replace(/^\$;/, ""), a, "$");
		return c.result.length ? c.result : false
	}
};
(function(a) {
	a.fn.getFormMethod = function() {
		if(this.is("form")) {
			var e = this.attr("method") || "get";
			if(a.browser.msie && this[0].getAttribute("method") && this.attr("method").toUpperCase() !== this[0].getAttribute("method").toUpperCase()) e = this[0].getAttribute("method");
			return e
		} else window.console && console.error && console.error("jquery.getFormMethod.js: ", this, " is not a form!")
	}
})(jQuery);

function classCUI() {
	this.intialize = function() {
		this.restQueue = {};
		this.templates = {};
		this.templateLoadStatus = {}
	};
	this.ajax = function(a) {
		if(!a.error) a.error = function(e, g, c) {
			_defaultAJAXErrorHandler(e, g, c, a)
		};
		if(!a.data && a.type == "POST") a.data = {
			junk: 1
		};
		if((!a.data || a.data == {} || a.data == "" || a.data == []) && (a.type == "POST" || !a.type)) a.type = "GET";
		if(a.accept) a.beforeSend = function(e) {
			e.setRequestHeader("Accept", a.accept)
		};
		return $.ajax_orig(a)
	};
	this.doREST = function(a, e, g, c) {
		if(typeof g == "function") {
			c = g;
			g = ""
		}
		g || (g = "");
		c || (c = {});
		a = {
			url: e,
			data: g,
			type: a,
			accept: "application/json",
			dataType: "json"
		};
		if(typeof c == "function") c = {
			success: c
		};
		$.extend(a, c);
		this.ajax(a)
	};
	this._handleGetCacheCallbacks = function(a, e) {
		if(typeof a == "function") e.callback == "success" && a(e.data, e.textStatus, e.jqXHR);
		else if(typeof a == "object") {
			if(e.callback == "success" && a.success) a.success(e.data, e.textStatus, e.jqXHR);
			else if(e.callback == "error" && a.error) a.error(e.jqXHR, e.textStatus, e.errorThrown);
			else e.callback == "error" && !a.error && _defaultAJAXErrorHandler(e.jqXHR, e.textStatus, e.errorThrown);
			a.complete && a.complete(e.jqXHR, e.textStatus)
		}
	};
	this.getREST = function(a, e, g, c) {
		var d = this,
			b = "GET:" + a + "?" + $.param(e),
			f;
		if(typeof c == "undefined" || c < 0) c = 1;
		if(f = d.cache.get(b)) d._handleGetCacheCallbacks(g, f);
		else if(d.restQueue[b]) if(typeof g == "function") d.restQueue[b].push({
			success: g
		});
		else typeof g == "object" && d.restQueue[b].push(g);
		else {
			d.restQueue[b] = [];
			if(typeof g == "function") g = {
				success: g
			};
			d.restQueue[b].push(g);
			g = $.extend({}, g);
			g.success = function(j, n, l) {
				j = {
					callback: "success",
					data: j,
					textStatus: n,
					jqXHR: l
				};
				d.cache.set(b, j, c);
				for(n = 0; n < d.restQueue[b].length; n++) d._handleGetCacheCallbacks(d.restQueue[b][n], j);
				delete d.restQueue[b]
			};
			g.error = function(j, n, l) {
				j = {
					callback: "error",
					textStatus: n,
					jqXHR: j,
					errorThrown: l
				};
				d.cache.set(b, j, c);
				for(n = 0; n < d.restQueue[b].length; n++) d._handleGetCacheCallbacks(d.restQueue[b][n], j);
				delete d.restQueue[b]
			};
			g.oncomplete && delete g.oncomplete;
			d.doREST("GET", a, e, g)
		}
	};
	this.putREST = function(a, e, g) {
		this.doREST("PUT", a, e, g)
	};
	this.postREST = function(a, e, g) {
		this.doREST("POST", a, e, g)
	};
	this.deleteREST = function(a, e, g) {
		this.doREST("DELETE", a, e, g)
	};
	this.getTemplate = function(a, e) {
		var g = this;
		if(g.templateLoadStatus[a]) if(g.templates[a]) e(g.templates[a]);
		else var c = setInterval(function() {
			if(g.templates[a]) {
				clearInterval(c);
				e(g.templates[a])
			}
		}, 20);
		else {
			g.templateLoadStatus[a] = 1;
			var d = $("div.widgetTemplates div[templatefile='" + a + "']");
			if(d[0]) {
				g.templates[a] = d[0].innerHTML;
				g.templateLoadStatus[a] = 2;
				e(d[0].innerHTML)
			} else g.ajax({
				url: a,
				cache: false,
				type: "GET",
				dataType: "html",
				success: function(b) {
					g.templates[a] = b;
					g.templateLoadStatus[a] = 2;
					e(b)
				}
			})
		}
	};
	this.intialize()
}
CUI = new classCUI;
classCUI.prototype.dataTableClass = new function() {
	this.ignore_live_table_meta_keys = ["table_key"];
	this._is_meta_index = function(a) {
		return this._is_meta_key(this.options.columns[a].column)
	};
	this._is_meta_key = function(a) {
		return $.inArray(a, this.ignore_live_table_meta_keys) > -1
	};
	this._dataTableInit = function() {
		var a = this;
		a.getPageSize() || a.setPageSize(10);
		if(!(a.options.adding_rows && a.options.adding_rows instanceof Array)) a.options.adding_rows = [];
		if(!(a.options.edit_rows && a.options.edit_rows instanceof Array)) a.options.edit_rows = [];
		a.options.event_handler_closure = function(e) {
			a._eventHandler(e)
		};
		a.options.heartbeat_closure = function() {
			a._heartbeat.call(a, a.options.lt.user_obj)
		};
		a.options.destroy_callback = function() {
			jSoff.eventSys.unBind(a.options.binding)
		}
	};
	this._liveDataTableSubscribe = function(a, e, g) {
		if(!this.options.data) this.options.data = {};
		this.options.lt = {};
		this.options.lt.user_obj = g ? g : {};
		this.options.lt.user_obj.ident = this.options.live_ident ? this.options.live_ident : this.options.live_unique_ident ? "ldt_" + this.options.widget_id : "default";
		this.options.lt.last_serno = 0;
		this.options.lt.context = a;
		this.options.lt.name = e;
		if(a) {
			Ape.subscribe(a);
			this.options.binding = e ? jSoff.eventSys.bind(a, e, this.options.event_handler_closure, this) : jSoff.eventSys.bindContext(a, this.options.event_handler_closure, this);
			this._addDestroyCallback(this.options.destroy_callback)
		}
		my_calls = this.options;
		this.bootstrap(this.options.lt.user_obj)
	};
	this.bootstrap = function(a) {
		this.options.lt.last_serno = -1;
		Ape.broadcast({
			liveArray: {
				command: "bootstrap",
				context: this.options.lt.context,
				name: this.options.lt.name,
				obj: a
			}
		});
		
		this.options.lt.hb_pid && this._clearTimeout(this.options.lt.hb_pid);
		this.options.lt.hb_pid = this._setTimeout(this.options.heartbeat_closure, 3E4)
	};
	this.changepage = function(a) {
		this._clear();
		Ape.broadcast({
			liveArray: {
				command: "changepage",
				context: this.options.lt.context,
				name: this.options.lt.name,
				obj: a
			}
		})
	};
	this._heartbeat = function(a) {
		Ape.broadcast({
			liveArray: {
				command: "heartbeat",
				context: this.options.lt.context,
				name: this.options.lt.name,
				obj: a
			}
		});
		this.options.lt.hb_pid = this._setTimeout(this.options.heartbeat_closure, 3E4)
	};
	this._eventHandler = function(a) {
		a = a.json;
		if(!this.options.destroyed) if(!(this.options.lt.user_obj.ident && a.ident && this.options.lt.user_obj.ident != a.ident)) {
			var e = false;
			if(a.wireSerno !== undefined && a.wireSerno !== null) e = this._checkSerno(parseInt(a.wireSerno));
			else debugLog("dataTableClass Error: Failed packet integrity check, missing wireSerno: ", a);
			e && this._laOnChange(this.options.lt.user_obj, a)
		}
	};
	this._checkSerno = function(a) {
		if(!this.options.lt) this.options.lt = {};
		if(a <= 0) {
			this.options.lt.last_serno = a;
			return true
		}
		if(this.options.lt.last_serno >= 0 && a != this.options.lt.last_serno + 1) {
			debugLog("Serial number out of order. Going to bootstrap.");
			this.bootstrap(this.options.lt.user_obj);
			return false
		} else {
			this.options.lt.last_serno = a;
			return true
		}
	};
	this._clear = function() {
		delete this.options.data.live;
		this.clearRowCount();
		this.options.data.live = {}
	};
	this.addingRows = function() {
		if(this.options.adding_rows.length > 0) return true;
		return false
	};
	this._beforeIsBeingAdded = function() {};
	this.isBeingAdded = function(a, e) {
		var g = this._beforeIsBeingAdded(a, e);
		if(g) row_num = g;
		g = false;
		if($.inArray(a, this.options.adding_rows) != -1) g = true;
		this._afterIsBeingAdded(a, g, e);
		return g
	};
	this._afterIsBeingAdded = function() {};
	this._beforeIsBeingEdited = function() {};
	this.isBeingEdited = function(a, e) {
		var g = this._beforeIsBeingEdited(a, e);
		if(g) row_num = g;
		g = false;
		if($.inArray(a, this.options.edit_rows) != -1) g = true;
		this._afterIsBeingEdited(a, g, e);
		return g
	};
	this._afterIsBeingEdited = function() {};
	this._notBeingAdded = function(a) {
		a = $.inArray(a, this.options.adding_rows);
		if(a != -1) {
			this.options.adding_rows.splice(a, 1);
			return true
		}
		return false
	};
	this._notBeingEdited = function(a) {
		a = $.inArray(a, this.options.edit_rows);
		if(a != -1) {
			this.options.edit_rows.splice(a, 1);
			return true
		}
		return false
	};
	this.clearRowCount = function() {
		this.options.row_count = 0
	};
	this._beforeSetupDataSource = function() {};
	this._setupDataSource = function() {
		if(!this.options.rest) return false;
		this._beforeSetupDataSource();
		if(!this.options.data_source) this.options.data_source = this.options.rest.split("/").pop();
		var a = this._afterSetupDataSource(this.options.data_source, this.options.rest);
		if(a) this.options.data_source = a;
		return this.options.data_source
	};
	this._afterSetupDataSource = function() {};
	this._beforeSetupPagination = function() {};
	this._setupPagination = function() {
		if(!this.options.paginate) return false;
		this._beforeSetupPagination();
		if(this.options.page_size && this.options.rest) {
			if(!this.options.rest_params) this.options.rest_params = {};
			this.options.rest_params.rows = this.options.page_size;
			this.options.rest_params.page = 1
		}
		this._afterSetupPagination();
		return true
	};
	this._afterSetupPagination = function() {};
	this._beforeBuildColumnIndexMap = function() {};
	this._buildColumnIndexMap = function() {
		if(!this.options.columns) this.options.columns = [];
		this._beforeBuildColumnIndexMap();
		this.options.column_index_map = {};
		for(var a = 0, e = this.options.columns.length; a < e; ++a) if(this.options.data_source == "ROW_SOURCE") this.options.column_index_map[this.options.columns[a].row_source] = a;
		else this.options.column_index_map[this.options.columns[a].column] = a;
		if(a = this._afterBuildColumnIndexMap(this.options.column_index_map)) this.options.column_index_map = a;
		return true
	};
	this._afterBuildColumnIndexMap = function() {};
	this._beforeSetInitialData = function() {};
	this.setInitialData = function(a) {
		var e = this._beforeSetInitialData(a);
		if(e) a = e;
		this.options.row_count = 0;
		for(var g in a) this.options.data[g] = a[g];
		a.rows && this.setPageSize(a.rows);
		if(a.count) {
			e = this.getPageSize();
			g = a.count % e;
			this.setPageCount((a.count - g) / e + (g > 0 ? 1 : 0))
		}
		a.page && this.setPage(a.page);
		this._afterSetInitialData(this.options.data);
		return true
	};
	this._afterSetInitialData = function() {};
	this._beforeClearInitialData = function() {};
	this.clearInitialData = function() {
		this._beforeClearInitialData();
		this.options.data = {};
		this._afterClearInitialData();
		return true
	};
	this._afterClearInitialData = function() {};
	this._beforeSetOriginalData = function() {};
	this.setOriginalData = function(a) {
		var e = this._beforeSetOriginalData(a);
		if(e) a = e;
		if(!this.options.original_data) this.options.original_data = {};
		this.options.original_row_count = 0;
		for(var g in a) {
			this.options.original_data[g] = a[g];
			this.options.original_row_count++
		}
		this._afterSetOriginalData(this.options.original_data);
		return true
	};
	this._afterSetOriginalData = function() {};
	this._beforeClearOriginalData = function() {};
	this.clearOriginalData = function() {
		this._beforeClearOriginalData();
		this.options.original_data = {};
		this._afterClearOriginalData()
	};
	this._afterClearOriginalData = function() {};
	this._beforeLAOnChange = function() {};
	this._beforeLAInit = function() {};
	this._afterLAInit = function() {};
	this._beforeLADelete = function() {};
	this._afterLADelete = function() {};
	this._beforeLAModify = function() {};
	this._afterLAModify = function() {};
	this._beforeLABootstrap = function() {};
	this._afterLABootstrap = function() {};
	this._beforeLAAdd = function() {};
	this._afterLAAdd = function() {};
	this._beforeLAClear = function() {};
	this._afterLAClear = function() {};
	this._beforeLAReorder = function() {};
	this._afterLAReorder = function() {};
	this._beforeLAHide = function() {};
	this._afterLAHide = function() {};
	this._beforeLAShow = function() {};
	this._afterLAShow = function() {};
	this._laOnChange = function(a, e) {
		var g = this.element || $(this);
		if(!this.options.destroyed) {
			var c = parseInt(e.arrIndex);
			this._beforeLAOnChange(a, e, c);
			switch(e.action) {
			case "init":
				this._beforeLAInit(a, e);
				this.options.last_serno = 0;
				delete this.options.data.live;
				this.clearRowCount();
				this.options.data.live = [];
				this.options.data_source = "live";
				this.options.data.columns = e.data;
				g.triggerHandler("liveInit");
				this._afterLAInit(a, e);
				break;
			case "del":
				this._beforeLADelete(a, e, c);
				var d = this.getRowData(c);
				this._deleteRow(c);
				g.triggerHandler("liveDel");
				this._afterLADelete(a, e, c, d);
				break;
			case "modify":
				if(!this.options.data.columns) return;
				this._beforeLAModify(a, e, c);
				d = {};
				for(var b = 0, f = e.data.length; b < f; ++b) d[this.options.data.columns[b]] = e.data[b];
				this.setRowData(c, d, undefined, undefined, e);
				g.triggerHandler("liveModify");
				this._afterLAModify(a, e, c, d);
				break;
			case "bootstrap_data":
				this._beforeLABootstrap(a, e);
				if(!this.options.columns) {
					this.options.columns = [];
					b = 0;
					for(f = this.options.data.columns.length; b < f; ++b) this.options.columns.push({
						column: this.options.data.columns[b]
					});
					this._buildColumnIndexMap()
				}
				for(var j = 0, n = e.data.length; j < n; ++j) {
					d = e.data[j];
					var l = {};
					b = 0;
					for(f = d.length; b < f; ++b) l[this.options.data.columns[b]] = d[b];
					d.length && this._notBeingAdded(this.addRow(l))
				}
				g.triggerHandler("liveBootstrapData");
				this._afterLABootstrap(a, e);
				break;
			case "add":
				this._beforeLAAdd(a, e, c);
				d = [];
				if(!this.options.columns) {
					this.options.columns = [];
					b = 0;
					for(f = this.options.data.columns.length; b < f; ++b) this.options.columns.push({
						column: this.options.data.columns[b]
					});
					this._buildColumnIndexMap()
				}
				l = {};
				b = 0;
				for(f = e.data.length; b < f; ++b) l[this.options.data.columns[b]] = e.data[b];
				this._notBeingAdded(this.addRow(l));
				g.triggerHandler("liveAdd");
				this._afterLAAdd(a, e, c, d);
				break;
			case "clear":
				this._beforeLAClear(a, e);
				this._clear();
				g.triggerHandler("liveClear");
				this._afterLAClear(a, e);
				break;
			case "reorder":
				this._beforeLAReorder(a, e);
				this._afterLAReorder(a, e);
				break;
			case "hide":
				this._beforeLAHide(a, e, c);
				this._afterLAHide(a, e, c);
				break;
			case "show":
				this._beforeLAShow(a, e, c);
				this._afterLAShow(a, e, c)
			}
			g.triggerHandler("liveEvent");
			this._afterLAOnChange(a, e, c)
		}
	};
	this._afterLAOnChange = function() {};
	this.validRowNum = function(a) {
		if(typeof a != "number" || a < 0 || a >= this.getRowCount()) return false;
		return true
	};
	this.validColNum = function(a) {
		if(typeof a != "number" || a < 0 || a >= this.options.columns.length) return false;
		return true
	};
	this._beforeSetPageSize = function() {};
	this.setPageSize = function(a) {
		var e = this._beforeSetPageSize(a);
		if(e) a = e;
		if(!this.options.rest_params) this.options.rest_params = {};
		this.options.rest_params.rows = a;
		this._afterSetPageSize(this.options.rest_params.rows);
		return a
	};
	this._afterSetPageSize = function() {};
	this._beforeSetPage = function() {};
	this.setPage = function(a) {
		var e = this._beforeSetPage(a);
		if(e) a = e;
		if(!this.options.rest_params) this.options.rest_params = {};
		this.options.rest_params.page = a;
		this._afterSetPage(this.options.rest_params.page);
		return a
	};
	this._afterSetPage = function() {};
	this._beforeGetPageSize = function() {};
	this.getPageSize = function() {
		this._beforeGetPageSize();
		var a = 0;
		if(this.options.rest_params && this.options.rest_params.rows) a = this.options.rest_params.rows;
		this._afterGetPageSize(a);
		return a
	};
	this._afterGetPageSize = function() {};
	this._beforeGetPage = function() {};
	this.getPage = function() {
		this._beforeGetPage();
		var a = 0;
		if(this.options.rest_params && this.options.rest_params.page) a = this.options.rest_params.page;
		this._afterGetPage(a);
		return a
	};
	this._afterGetPage = function() {};
	this._beforeGetPageCount = function() {};
	this.getPageCount = function() {
		this._beforeGetPageCount();
		var a = this.options.page_count,
			e = this._afterGetPageCount(a);
		if(e) a = e;
		return a
	};
	this._afterGetPageCount = function() {};
	this._beforeSetPageCount = function() {};
	this.setPageCount = function(a) {
		var e = this._beforeSetPageCount();
		if(e) a = e;
		this.options.page_count = a;
		this._afterGetPageCount(a);
		return a
	};
	this._afterSetPageCount = function() {};
	this._beforeGetRowCount = function() {};
	this.getRowCount = function() {
		this._beforeGetRowCount();
		if(!this.options.row_count) if(this.options.data) if(this.options.data_source == "ROW_SOURCE") if(!this.options.data[this.options.columns[0].row_source] || !(this.options.data[this.options.columns[0].row_source] instanceof
		Array)) this.options.row_count = 0;
		else {
			for(var a = 0, e = this.options.columns.length; a < e; ++a) if(this.options.columns[a].row_source) {
				var g = this.options.data[this.options.columns[a].row_source];
				if(g instanceof Array && g.length) {
					this.options.row_count = g.length;
					break
				}
			}
			if(!this.options.row_count) this.options.row_count = 0
		} else this.options.row_count = !this.options.data[this.options.data_source] || !(this.options.data[this.options.data_source] instanceof Array) ? 0 : this.options.data[this.options.data_source].length;
		else this.options.row_count = 0;
		this._afterGetRowCount();
		return this.options.row_count
	};
	this._afterGetRowCount = function() {};
	this._beforeGetOriginalRowCount = function() {};
	this.getOriginalRowCount = function() {
		this._beforeGetOriginalRowCount();
		if(!this.options.original_row_count) if(this.options.data) if(this.options.data_source == "ROW_SOURCE") this.options.row_count = !this.options.original_data[this.options.columns[0].row_source] || !(this.options.original_data[this.options.columns[0].row_source] instanceof Array) ? 0 : this.options.original_data[this.options.columns[0].row_source].length;
		else if(!this.options.original_data[this.options.data_source] || !(this.options.original_data[this.options.data_source] instanceof Array)) this.options.original_row_count = 0;
		else this.options.originial_row_count = this.options.original_data[this.options.data_source].length;
		else this.options.original_row_count = 0;
		this._afterGetOriginalRowCount();
		return this.options.original_row_count
	};
	this._afterGetOriginalRowCount = function() {};
	this._beforeGetOriginalCellData = function() {};
	this.getOriginalCellData = function(a, e) {
		if(this.validRowNum(a)) if(this.validColNum(e)) {
			this._beforeGetOriginalCellData(a, e);
			var g = this._getCellData("original_data", a, e),
				c = this._afterGetOriginalCellData(a, e, g);
			if(c) g = c;
			return g
		} else debugLog('dataTable Error: Attempted to get cell data for column index "' + e + '" which is out of range or invalid in getOriginalCellData().');
		else debugLog('dataTable Error: Attempted to get cell data for row index "' + a + '" which is out of range or invalid in getOriginalCellData().')
	};
	this._afterGetOriginalCellData = function() {};
	this._beforeGetOriginalRowData = function() {};
	this.getOriginalRowData = function(a) {
		if(!this.validRowNum(a)) {
			debugLog('dataTable Error: Attempted to get data for row index "' + a + '" which is out of range or invalid in getOriginalRowData().');
			return false
		}
		this._beforeGetOriginalRowData(a);
		var e = this._getRowData("original_data", a);
		if(a = this._afterGetOriginalRowData(a, e)) e = a;
		return e
	};
	this._afterGetOriginalRowData = function() {};
	this.isCellDirty = function(a, e) {
		if(this.validRowNum(a)) if(this.validColNum(e)) {
			if(a >= this.getOriginalRowCount()) return true;
			if(this.getCellData(a, e) != this.getOriginalCellData(a, e)) return true;
			return false
		} else debugLog('dataTable Error: Attempted to test cell data for column index "' + e + '" which is out of range or invalid in isCellDirty().');
		else debugLog('dataTable Error: Attempted to test cell data for row index "' + a + '" which is out of range or invalid in isCellDirty().')
	};
	this._beforeGetCellData = function() {};
	this.getCellData = function(a, e) {
		if(this.validRowNum(a)) if(this.validColNum(e)) {
			this._beforeGetCellData(a, e);
			var g = this._getCellData("data", a, e);
			this._afterGetCellData(a, e, g);
			return g
		} else debugLog('dataTable Error: Attempted to get cell data for column index "' + e + '" which is out of range or invalid in getCellData().');
		else debugLog('dataTable Error: Attempted to get cell data for row index "' + a + '" which is out of range or invalid in getCellData().')
	};
	this._getCellData = function(a, e, g) {
		if(this.options[a] && this.options.columns[g]) {
			if(this.options.data_source == "ROW_SOURCE") {
				if(!this.options.columns[g].row_source || !(this.options.columns[g].row_source in this.options[a])) return;
				a = this.options[a][this.options.columns[g].row_source][e]
			} else {
				if(!this.options.columns[g].column || !this.options[a][this.options.data_source] || !this.options[a][this.options.data_source][e] || !(this.options.columns[g].column in this.options[a][this.options.data_source][e])) return;
				a = this.options[a][this.options.data_source][e][this.options.columns[g].column]
			}
			return a
		}
	};
	this._afterGetCellData = function() {};
	this._beforeSetExtraRowData = function() {};
	this.setExtraRowData = function(a, e, g) {
		g = decodeURIComponent(g) || g;
		var c = this._beforeSetExtraRowData(a, e, g);
		if(c) a = c;
		if(this.options.data_source == "ROW_SOURCE") this.options.data[e][a] = g;
		else this.options.data[this.options.data_source][a][e] = g;
		this._afterSetExtraRowData(a, e, g);
		return true
	};
	this._afterSetExtraRowData = function() {};
	this._beforeGetExtraRowData = function() {};
	this.getExtraRowData = function(a, e) {
		var g;
		if(g = this._beforeGetExtraRowData(a, e)) a = g;
		g = this.options.data_source == "ROW_SOURCE" ? this.options.data[e][a] : this.options.data[this.options.data_source][a][e];
		this._afterGetExtraRowData(a, e, g);
		return g
	};
	this._afterGetExtraRowData = function() {};
	this._beforeSetCellData = function() {};
	this.setCellData = function(a, e, g) {
		var c = this.element || $(this);
		if(this._is_meta_index(e) && this.options.lt) return false;
		if(!this.validRowNum(a)) {
			debugLog('dataTable Error: Attempted to set cell data for row index "' + a + '" which is out of range or invalid in setCellData().');
			return false
		}
		if(!this.validColNum(e)) {
			debugLog('dataTable Error: Attempted to set cell data for column index "' + e + '" which is out of range or invalid in setCellData().');
			return false
		}
		if(typeof g != "number" && typeof g != "string") {
			debugLog("dataTable Error: Attempted to set cell data value for row " + a + ", column " + e + " which is not a number or string in setCellData():", g);
			return false
		}
		g = decodeURIComponent(g) || g;
		var d = this._beforeSetCellData(a, e, g);
		if(d) a = d;
		if(this.options.data_source == "ROW_SOURCE") this.options.data[this.options.columns[e].row_source][a] = g;
		else this.options.data[this.options.data_source][a][this.options.columns[e].column] = g;
		c.triggerHandler("updateCell");
		this._afterSetCellData(a, e, g);
		return true
	};
	this._afterSetCellData = function() {};
	this._beforeGetColumnCount = function() {};
	this.getColumnCount = function(a) {
		this._beforeGetColumnCount(a);
		var e = 0;
		if(this.options.columns) e = this.options.columns.length;
		if(a = this._afterGetColumnCount(e, a)) e = a;
		return e
	};
	this._afterGetColumnCount = function() {};
	this._beforeGetColumnDef = function() {};
	this.getColumnDef = function(a, e) {
		var g = this._beforeGetColumnDef(a, e);
		if(g) a = g;
		if(!this.validColNum(a)) {
			debugLog('dataTable Error: Attempted to get column definition for column index "' + a + '" which is out of range or invalid in getColumnDef().');
			return false
		}
		g = this.options.columns[a];
		var c = this._afterGetColumnDef(a, g, e);
		if(c) g = c;
		return g
	};
	this._afterGetColumnDef = function() {};
	this._beforeGetColumnName = function() {};
	this.getColumnName = function(a) {
		if(!this.validColNum(a)) {
			debugLog('dataTable Error: Attempted to get column name for column index "' + a + '" which is out of range or invalid in getColumnName().');
			return false
		}
		this._beforeGetColumnName(a);
		var e = this.options.data_source == "ROW_SOURCE" ? this.options.columns[a].row_source : this.options.columns[a].column;
		this._afterGetColumnName(a);
		return e
	};
	this._afterGetColumnName = function() {};
	this._beforeGetColumnNum = function() {};
	this.getColumnNum = function(a) {
		var e = -1;
		this._beforeGetColumnNum(a);
		for(var g = 0, c = this.getColumnCount(); g < c; g++) if((this.options.data_source == "ROW_SOURCE" ? this.options.columns[g].row_source : this.options.columns[g].column) == a) {
			e = g;
			break
		}
		this._afterGetColumnNum(a, e);
		return e
	};
	this._afterGetColumnNum = function() {};
	this._beforeHasColumn = function() {};
	this.hasColumn = function(a) {
		var e = this._beforeHasColumn(a);
		if(e) a = e;
		e = false;
		if(a in this.options.column_index_map) e = true;
		if(this.hasExtraRowData(a)) e = true;
		this._afterHasColumn(a, e);
		return e
	};
	this._afterHasColumn = function() {};
	this._beforeHasExtraRowData = function() {};
	this.hasExtraRowData = function(a) {
		var e = false;
		a = this._beforeHasExtraRowData(a) || a;
		if($.isArray(this.options.extra_row_data)) e = $.inArray(a, this.options.extra_row_data) !== -1;
		else if(this.options.extra_row_data) for(var g in this.options.extra_row_data) if(this.options.extra_row_data[g] == a) {
			e = true;
			break
		}
		this._afterHasExtraRowData(a, e);
		return e
	};
	this._afterHasExtraRowData = function() {};
	this._beforeGetColumnIndex = function() {};
	this.getColumnIndex = function(a) {
		if(!(a in this.options.column_index_map)) {
			debugLog('dataTable Error: Attempted to get column index for unknown column "' + a + '" in getColumnIndex(). Columns: ', this.options.columns);
			return false
		}
		this._beforeGetColumnIndex(a);
		var e = this.options.column_index_map[a];
		this._afterGetColumnIndex(a);
		return e
	};
	this._afterGetColumnIndex = function() {};
	this._beforeGetRowData = function() {};
	this.getRowData = function(a) {
		if(!this.validRowNum(a)) {
			debugLog('dataTable Error: Attempted to get data for row index "' + a + '" which is out of range or invalid in getRowData().');
			return false
		}
		var e = this._beforeGetRowData(a);
		if(e) a = e;
		e = this._getRowData("data", a);
		if(a = this._afterGetRowData(a, e)) e = a;
		return e
	};
	this._getRowData = function(a, e) {
		for(var g = {}, c = 0, d = this.options.columns.length; c < d; ++c) g[this.getColumnName(c)] = this._getCellData(a, e, c);
		return g
	};
	this._afterGetRowData = function() {};
	this._beforeGetRowWidgetData = function() {};
	this.getRowWidgetData = function(a) {
		var e = this.getRowData(a),
			g = this._beforeGetRowWidgetData(a);
		if(g) a = g;
		if($.isArray(this.options.extra_row_data)) for(g = 0; g < this.options.extra_row_data.length; g++) if(this.options.data_source === "ROW_SOURCE") {
			var c = this.options.extra_row_data[g];
			e[c] = this.options.data[c][a]
		} else e[c] = this.options.data[this.options.data_source][a][c];
		else if(this.options.extra_row_data) for(c in this.options.extra_row_data) e[c] = this.options.data_source === "ROW_SOURCE" ? this.options.data[this.options.extra_row_data[c]][a] : this.options.data[this.options.data_source][a][this.options.extra_row_data[c]];
		if(a = this._afterGetRowWidgetData(a, e)) e = a;
		return e
	};
	this._afterGetRowWidgetData = function() {};
	this._getSaveSuccessCallbackRef = function(a, e, g, c, d) {
		var b = this;
		return function(f) {
			var j = b._validateRESTContainer(f);
			f = j ? f[j] : f;
			f = b.options.data_source == "ROW_SOURCE" ? f : f[b.options.data_source] ? f[b.options.data_source] : f;
			for(var n in f) if(b.hasExtraRowData(n)) b.setExtraRowData(a, n, f[n]);
			else b.hasColumn(n) && b.setCellData(a, b.getColumnIndex(n), f[n]);
			typeof g == "function" && g();
			b.element && b.element.triggerHandler("updateRow");
			b._afterSetRowData(a, f, true, e);
			c && b._notBeingAdded(a);
			d && b._notBeingEdited(a)
		}
	};
	this._getSaveErrorCallbackRef = function(a, e, g, c) {
		var d = this;
		return function(b, f, j) {
			typeof c == "function" && c(b, f, j, a, g, e);
			d._afterSetRowData(a, g, false, e)
		}
	};
	this._beforeSetRowData = function() {};
	this.setRowData = function(a, e, g, c, d) {
		this.element || $(this);
		if(!this.validRowNum(a)) {
			debugLog('dataTable Error: Attempted to set data for row index "' + a + '" which is out of range or invalid in setRowData().');
			return false
		}
		if(!(e instanceof Array || typeof e == "object" && !$.isEmptyObject(e))) {
			debugLog("dataTable Error: Row data is not a valid type or is empty in setRowData(): ", e);
			return false
		}
		var b = this.isBeingAdded(a, d),
			f = this.isBeingEdited(a, d),
			j;
		if(this.options.add_edit_action) j = this._getSaveParams(a, e, b, d);
		var n = this._beforeSetRowData(a, e, d);
		if(n) e = n;
		g = this._getSaveSuccessCallbackRef(a, d, g, b, f);
		c = this._getSaveErrorCallbackRef(a, d, e, c);
		this.options.add_edit_action ? this._executeSaveREST(j, a, g, c, d) : g(e);
		return true
	};
	this._afterSetRowData = function() {};
	this._beforeGetSaveParams = function() {};
	this._getSaveParams = function(a, e, g, c) {
		var d = this._beforeGetSaveParams(a, c);
		if(d) a = d;
		d = this._getActionParams(a, "add_edit_action", g ? "POST" : "PUT");
		for(var b in e) d[b] = e[b];
		if(this.options.add_edit_action.only_params) {
			e = {};
			for(var f in this.options.add_edit_action.only_params) {
				b = this.options.add_edit_action.only_params[f];
				if(b in d) e[b] = d[b]
			}
			d = e
		} else if(this.options.add_edit_action.filter_params) {
			e = {};
			for(b in d) if($.inArray(b, this.options.add_edit_action.filter_params) == -1) e[b] = d[b];
			d = e
		}
		if(e = this._afterGetSaveParams(a, d, g, c)) d = e;
		return d
	};
	this._afterGetSaveParams = function() {};
	this._beforeExecuteSaveREST = function() {};
	this._executeSaveREST = function(a, e, g, c, d) {
		this._beforeExecuteSaveREST(a, e, d);
		this.doREST(this.options.add_edit_action.real_method, this.options.add_edit_action.rest, a, {
			success: g,
			error: c
		});
		this._afterExecuteSaveREST(a, e, d)
	};
	this._afterExecuteSaveREST = function() {};
	this._beforeGetColumnData = function() {};
	this.getColumnData = function(a) {
		if(typeof a != "string" && typeof a != "number") debugLog('dataTable Error: Requested value for unknown column "' + a + '" in getColumnData().');
		else {
			if(typeof a == "string") a = this.getColumnIndex(a);
			this._beforeGetColumnData(a);
			for(var e = [], g = 0, c = this.getRowCount(); g < c; ++g) e.push(this.getCellData(g, a));
			this._afterGetColumnData(a, e);
			return e
		}
	};
	this._afterGetColumnData = function() {};
	this.findRowId = function(a, e) {
		this.element || $(this);
		var g = false;
		if(!this.getRowCount()) return -1;
		if(!this.hasColumn(a) && !this.hasExtraRowData(a)) return -1;
		var c;
		if(!this.hasExtraRowData(a)) {
			g = true;
			c = this.getColumnIndex(a)
		}
		for(var d = 0, b = this.getRowCount(); d < b; ++d) {
			var f = "";
			f = g ? this.getCellData(d, c) : this.getExtraRowData(d, a);
			if(f == e) return d
		}
		return -1
	};
	this.findRows = function(a, e) {
		this.element || $(this);
		var g = false;
		if(!this.getRowCount()) return -1;
		if(!this.hasColumn(a) && !this.hasExtraRowData(a)) return -1;
		var c;
		if(!this.hasExtraRowData(a)) {
			g = true;
			c = this.getColumnIndex(a)
		}
		for(var d = [], b = 0, f = this.getRowCount(); b < f; ++b) {
			var j = "";
			j = g ? this.getCellData(b, c) : this.getExtraRowData(b, a);
			j == e && d.push(b)
		}
		return d
	};
	this._beforeAddRow = function() {};
	this.addRow = function(a) {
		var e = this.element || $(this);
		if(!(a instanceof Array || typeof a == "object" && !$.isEmptyObject(a))) {
			debugLog("dataTable Error: Attempted to add a row using row data which is neither an array or object, or is empty in addRow():", a);
			return false
		}
		var g = a;
		if(a instanceof Array) {
			g = {};
			for(var c = 0, d = a.length; c < d; ++c) g[this.getColumnName(c)] = decodeURIComponent(a[c]) || a[c]
		}
		if(a = this._beforeAddRow(g)) g = a;
		if(this.options.data_source == "ROW_SOURCE") {
			a = 0;
			for(c = this.options.columns.length; a < c; ++a) {
				var b = this.options.columns[a].row_source;
				this.options.data[b] || (this.options.data[b] = []);
				this.options.data[b].push(g[b])
			}
			if($.isArray(this.options.extra_row_data)) for(a = 0; a < this.options.extra_row_data.length; a++) {
				var f = this.options.extra_row_data[a];
				this.options.data[f] = this.options.data[f] || [];
				this.options.data[f].push(g[b])
			} else if(this.options.extra_row_data) for(f in this.options.extra_row_data) {
				this.options.data[f] = this.options.data[f] || [];
				this.options.data[f].push(g[b])
			}
		} else {
			b = this.options.data_source;
			c = {};
			for(a = 0; a < this.options.columns.length; a++) {
				d = this.getColumnName(a);
				c[d] = g[d]
			}
			if($.isArray(this.options.extra_row_data)) for(a = 0; a < this.options.extra_row_data.length; a++) {
				f = this.options.extra_row_data[f];
				c[f] = g[f]
			} else if(this.options.extra_row_data) for(f in this.options.extra_row_data) c[f] = g[f];
			this.options.data[b] || (this.options.data[b] = []);
			this.options.data[b].push(c)
		}
		this.options.row_count++;
		f = this.options.row_count - 1;
		this.options.adding_rows = this.options.adding_rows || [];
		this.options.adding_rows.push(f);
		e.triggerHandler("addRow");
		this._afterAddRow(g, f);
		return f
	};
	this._afterAddRow = function() {};
	this._beforeAddEmptyRow = function() {};
	this.addEmptyRow = function() {
		for(var a = [], e = 0, g = this.options.columns.length; e < g; ++e) a.push("");
		if(e = this._beforeAddEmptyRow(a)) a = e;
		e = this.addRow(a);
		this._afterAddEmptyRow(a, e);
		return e
	};
	this._afterAddEmptyRow = function() {};
	this._getDeleteSuccessCallbackRef = function(a, e, g, c, d) {
		var b = this;
		return function() {
			if(b.options.data_source == "ROW_SOURCE") for(var f = 0, j = b.options.columns.length; f < j; ++f) {
				var n = b.options.columns[f].row_source;
				b.options.data[n] && a in b.options.data[n] && b.options.data[n].splice(a, 1)
			} else {
				f = b.options.data_source;
				b.options.data[f] && a in b.options.data[f] && b.options.data[f].splice(a, 1)
			}
			b.options.row_count--;
			typeof g == "function" && g(a, e);
			b.element && b.element.triggerHandler("deleteRow");
			b._afterDeleteRow(a, true, e);
			c && b._notBeingAdded(a);
			d && b._notBeingEdited(a)
		}
	};
	this._getDeleteErrorCallbackRef = function(a, e, g) {
		var c = this;
		return function(d, b, f) {
			typeof g == "function" && g(d, b, f, a, e);
			c._afterDeleteRow(a, false, e)
		}
	};
	this._beforeDeleteRow = function() {};
	this._deleteRow = this.deleteRow = function(a, e, g, c) {
		this.element || $(this);
		if(!this.validRowNum(a)) {
			debugLog('dataTable Error: Attempted to get post data for row index "' + a + '" which is out of range or invalid in getRowPostData().');
			return false
		}
		var d;
		if(this.options.delete_action) d = this._getDeleteParams(a, c);
		var b = this.isBeingAdded(a, c),
			f = this.isBeingEdited(a, c),
			j = this._beforeDeleteRow(a, c);
		if(j) a = j;
		e = this._getDeleteSuccessCallbackRef(a, c, e, b, f);
		g = this._getDeleteErrorCallbackRef(a, c, g);
		!b && this.options.delete_action ? this._executeDeleteREST(d, a, e, g, c) : e();
		return true
	};
	this._afterDeleteRow = function() {};
	this._beforeExecuteDeleteREST = function() {};
	this._executeDeleteREST = function(a, e, g, c, d) {
		this._beforeExecuteDeleteREST(a, e, d);
		this.doREST(this.options.delete_action.real_method, this.options.delete_action.rest, a, {
			success: g,
			error: c
		});
		this._afterExecuteDeleteREST(a, e, d)
	};
	this._afterExecuteDeleteREST = function() {};
	this._beforeGetDeleteParams = function() {};
	this._getDeleteParams = function(a, e) {
		var g = this._beforeGetDeleteParams(a, e);
		if(g) a = g;
		g = this._getActionParams(a, "delete_action", "DELETE");
		if(this.options.delete_action.only_params) {
			var c = {},
				d;
			for(d in this.options.delete_action.only_params) {
				var b = this.options.delete_action.only_params[d];
				if(b in g) c[b] = g[b]
			}
			g = c
		} else if(this.options.delete_action.filter_params) {
			c = {};
			for(b in g) if($.inArray(b, this.options.delete_action.filter_params) == -1) c[b] = g[b];
			g = c
		}
		if(c = this._afterGetDeleteParams(a, g, e)) g = c;
		return g
	};
	this._afterGetDeleteParams = function() {};
	this._beforeGetActionParams = function() {};
	this._getActionParams = function(a, e, g) {
		var c = this._beforeGetActionParams(a, e, g);
		if(c) g = c;
		if(!this.options[e] || typeof this.options[e] != "object") this.options[e] = {};
		if(!this.options[e].rest) this.options[e].rest = this.options.rest;
		this.options[e].real_method = this.options[e].method ? this.options[e].method : g;
		if(!this.options[e].params) {
			this.options[e].params = [];
			c = 0;
			for(var d = this.options.columns.length; c < d; ++c) {
				var b = this.getColumnName(c);
				this.options[e].params.push(b)
			}
		}
		c = {};
		for(key in this.options.rest_params) if(!(key == "page" || key == "rows" || key == "sort_by" || key == "searchregexp" || key == "searchstring")) if(this.options[e].only_rest_params) {
			if($.inArray(key, this.options[e].only_rest_params) > -1) c[key] = this.options.rest_params[key]
		} else if(this.options[e].filter_rest_params) {
			if($.inArray(key, this.options[e].filter_rest_params) == -1) c[key] = this.options.rest_params[key]
		} else c[key] = this.options.rest_params[key];
		if(this.options.data_source == "ROW_SOURCE") {
			for(i in this.options[e].params) {
				d = this.options[e].params[i];
				c[d] = this.options.data[d][a]
			}
			for(p in this.options.primary_keys) {
				d = this.options.primary_keys[p];
				c[d] = this.options.data[d][a]
			}
		} else {
			b = this.options.data[this.options.data_source];
			for(i in this.options[e].params) {
				d = this.options[e].params[i];
				c[d] = b[a][d]
			}
			for(p in this.options.primary_keys) {
				d = this.options.primary_keys[p];
				c[d] = this.options.data[this.options.data_source][a][d]
			}
		}
		if(a = this._afterGetActionParams(a, e, g, c)) c = a;
		return c
	};
	this._afterGetActionParams = function() {};
	this._beforeGetRowPostData = function() {};
	this.getRowPostData = function(a) {
		if(!this.validRowNum(a)) {
			debugLog('dataTable Error: Attempted to get post data for row index "' + a + '" which is out of range or invalid in getRowPostData().');
			return false
		}
		this._beforeGetRowPostData(a);
		if(a = this._afterGetRowPostData(a, post_data)) post_data = a;
		return post_data
	};
	this._afterGetRowPostData = function() {};
	this._beforeSerialize = function() {};
	this.serialize = function(a) {
		this._beforeSerialize(a);
		var e = "";
		if(this.options.data) if(this.options.data_source == "ROW_SOURCE") {
			e = [];
			for(var g = 0, c = this.options.columns.length; g < c; ++g) e.push(JSON.stringify(this.options.data[this.options.columns[g].row_source]));
			e = e.join("")
		} else e = JSON.stringify(this.options.data[this.options.data_source]);
		else e = JSON.stringify({});
		if(a = this._afterSerialize(e, a)) e = a;
		return e
	};
	this._afterSerialize = function() {};
	this._beforeSerializeRows = function() {};
	this.serializeRows = function(a, e) {
		this._beforeSerializeRows(a, e);
		var g = "";
		if(this.options.data) if(this.options.data_source == "ROW_SOURCE") {
			g = {};
			for(var c = 0, d = a.length; c < d; ++c) for(var b = 0, f = this.options.columns.length; b < f; ++b) {
				g[this.options.columns[b]] || (g[this.options.columns[b]] = []);
				g[this.options.columns[b]][a[c]] = this.options.data[this.options.columns[b].row_source][a[c]]
			}
			c = [];
			b = 0;
			for(d = this.options.columns.length; b < d; ++b) c.push(JSON.stringify(g[this.options.columns[b].row_source]));
			g = c.join("")
		} else {
			b = this.options.data_source;
			g = [];
			c = 0;
			for(d = a.length; c < d; ++c) {
				g[c] || (g[c] = {});
				g[c] = $.extend({}, this.options.data[b][c])
			}
			g = JSON.stringify(g)
		} else g = JSON.stringify({});
		if(b = this._afterSerializeRows(g, a, e)) g = b;
		return g
	};
	this._afterSerializeRows = function() {}
};
(function(a) {
	classCUI.prototype.liveTableBase = a.extend(true, {}, classCUI.prototype.dataTableClass, {
		options: {
			processed_data: [],
			destroy_cb: [],
			to: [],
			interval: [],
			user_info: {}
		},
		_create: function() {
			self.live_table_base_create()
		},
		_process_row_data: function(e) {
			return e
		},
		_clear: function() {
			this.options.processed_data = []
		},
		_insert_row: function() {},
		_update_row: function() {},
		_before_delete_row: function() {},
		_after_delete_row: function() {},
		_live_table_base_create: function() {
			this.options.live_ident = this.options.live_ident || getUnique("ltref");
			this.options.widget_id = this.options.widget_id || getUnique("liveTableBase_derivative");
			this._dataTableInit();
			this._liveDataTableSubscribe("liveTable_" + this.options.live_table + "__" + (this.options.live_table_key || ""), undefined, this.options.user_info)
		},
		_afterAddRow: function(e, g) {
			e.current_time && typeof set_server_time === "function" && update_server_time(e.current_time * 1E3);
			e = this._process_row_data(e, g);
			e._index = g;
			this.options.processed_data.splice(g, 0, e);
			this.options._in_bootstrap || this._insert_row(e, g)
		},
		_afterSetRowData: function(e, g) {
			g = this._process_row_data(g, e);
			g._index = e;
			this.options.processed_data[e] = g;
			this._update_row(e, g)
		},
		_afterDeleteRow: function(e) {
			var g = this.options.processed_data[e];
			this._before_delete_row(g, e);
			g && this.options.processed_data.splice(e, 1);
			this._after_delete_row(g, e)
		},
		_afterLAClear: function() {
			this._clear()
		},
		_validateRESTContainer: function() {
			return this.options.rest_container || ""
		},
		_setTimeout: function(e, g) {
			var c = setTimeout(e, g);
			this.options.to.push(c);
			return c
		},
		_setInterval: function(e, g) {
			var c = setInterval(e, g);
			this.options.to.push(c);
			return c
		},
		_clearTimeout: function(e) {
			return clearTimeout(e)
		},
		_clearInterval: function(e) {
			return clearInterval(e)
		},
		_addDestroyCallback: function(e) {
			this.options.destroy_cb.push(e)
		},
		destroy: function() {
			for(var e = 0; e < this.options.destroy_cb.length; e++) this.options.destroy_cb[e]()
		}
	})
})(jQuery);
(function(a) {
	var e, g = function(c) {
			return typeof c == "string" && c.search(/^\$\./) > -1
		};
	a.widget("cui2.jsDataTable", {
		options: {
			rows: 100,
			page: 1,
			sortby: false,
			sortorder: "asc",
			search: false,
			chopRows: true,
			rowDataRoot: null,
			columnData: [],
			hasNoneText: false,
			hasNoneLoading: "Loading...",
			overwriteHeader: false,
			afterRender: false,
			fixed: false,
			_table_data: false,
			_table_data_root: false,
			_is_table: false
		},
		_create: function() {
			var c = this,
				d = this.element,
				b = d,
				f, j = false;
			if(!c.options._table_data) c.options._table_data = c.options.data;
			if(e === undefined) {
				f = a('<div class="nthChildTest" style="position: absolute; left: 0"><div>1</div><div>2</div></div>').appendTo("body");
				e = f.find("div:visible")[1] ? false : true;
				f.remove()
			}
			if(d.is("table")) c.options._is_table = true;
			else {
				c.options._is_table = false;
				b = a('<table class="jsDataTable"' + (c.options.fixed ? ' style="table-layout: fixed"' : "") + "><thead></thead><tbody></tbody></table>");
				b.appendTo(d.empty())
			}
			f = b.children("thead");
			b = b.children("tbody");
			d.bind("refresh", function() {
				c._zebra()
			});
			c.options.columnData = c.options.columnData || [];
			c.options._sortby_index = {};
			for(d = c.options.columnData.length; d--;) {
				var n = c.options.columnData[d];
				if(n.sortby) c.options._sortby_index[n.sortby] = d;
				if(!j && n.header) j = true
			}
			if(j) if(f[0]) {
				f.empty();
				c._write_headers(f)
			}
			c._write_tbody(b);
			c.sort(c.options.sortby, c.options.sortorder, true)
		},
		get_$row: function(c) {
			return this._get_$table().find("> tbody > tr:eq(" + c + ")")
		},
		_auto_destroy_check: function() {
			if(!this.element.closest("body")[0]) {
				this.destroy();
				return true
			}
			return false
		},
		_zebra: function() {
			if(!e) {
				a("tr:odd", tbody).removeClass("even").addClass("odd");
				a("tr:even", tbody).removeClass("odd").addClass("even")
			}
		},
		sort: function(c, d) {
			this._update_sort_visuals(c, d)
		},
		_update_sort_visuals: function(c, d) {
			var b = this._get_$table();
			if(c) {
				d = d === "desc" ? "desc" : "asc";
				var f = this.options._sortby_index[c],
					j = this.options.columnData[f];
				j = this.options.columnData[f || 0];
				f = j._$th;
				b.find("> thead th").removeClass("sortAsc sortDesc");
				if(j._sortorder === "asc" && !d || d === "desc") {
					j._sortorder = "desc";
					f.addClass("sortDesc")
				}
			}
		},
		_getSubset: function(c, d) {
			return d ? g(d) ? (jsonPath(c, d) || [])[0] : c[d] ? c[d] : d.search(/^static:/) == 0 ? d.replace(/^static:/, "") : false : c
		},
		_get_$table: function() {
			return this.options._is_table ? this.element : this.element.children("table")
		},
		_write_headers: function() {
			var c = this,
				d = c._get_$table().children("thead"),
				b = c.options.overwriteHeader || a("th", d).length != c.options.columnData.length;
			b && d.empty();
			d = a("<tr></tr>").appendTo(d);
			for(var f = 0; f < c.options.columnData.length; f++) {
				var j = c.options.columnData[f],
					n;
				if(b) {
					n = a("<th></th>").appendTo(d);
					var l = "";
					l = g(j.header) ? j.jsonPath(data, j.header)[0] : a.isFunction(j.header) ? j.header(data, idx) : j.header;
					n[c.options.render === "html" ? "html" : "text"](l || "");
					n.addClass("col" + (f + 1));
					j["class"] && n.addClass(j["class"])
				} else {
					n = a("th:eq(" + idx + ")", d);
					n.siblings("th").removeClass("col" + (idx + 1));
					n.addClass("col" + (idx + 1))
				}
				j._$th = n;
				if(j.sortby) {
					a.isFunction(j.sortby) ? n.data("sortby", j.sortby(data, idx)) : n.data("sortby", j.sortby);
					n.addClass("sortable").removeClass("notSortable")
				} else {
					n.data("sortby", null);
					n.addClass("notSortable").removeClass("sortable")
				}
			}
			a("th.sortable", d).bind("click", function() {
				c.sort(a(this).data("sortby"))
			})
		},
		_write_tbody: function() {
			var c = this._get_$table().children("tbody");
			this.options._table_data_root = this._getSubset(this.options._table_data, this.options.rowDataRoot) || [];
			c.empty();
			if(!this.options._table_data_root || !this.options._table_data_root.length) this._get_empty_row().appendTo(c);
			else {
				if(this.options.searchParam && this.options.search) {
					var d = a('<tr class="searchRow nonDataRow"><td colspan="' + this.options.columnData.length + '"></td></tr>');
					a("td", d).text("Search results for: " + this.options.search);
					d.appendTo(c)
				}
				for(c = 0; c < this.options._table_data_root.length; c++) this._write_row(this.options._table_data_root[c], "push", c)
			}
		},
		_get_empty_row: function() {
			var c = a('<tr class="trHasNone nonDataRow"></tr>'),
				d = a('<td class="tdHasNone"></td>').attr("colspan", this.options.columnData.length || 1).appendTo(c);
			if(this.options._initial_empty_load) {
				delete this.options._initial_empty_load;
				d.text(this.options.hasNoneLoading || this.options.hasNoneText || "")
			} else if(!this.options.hasNoneText && this.options.search) d.text("No matching entries found");
			else if(this.options.hasNoneText) if(typeof this.options.hasNoneText === "string") d.text(this.options.hasNoneText);
			else this.options.hasNoneText instanceof jQuery && d.append(this.options.hasNoneText);
			else d.text("No entries in this table");
			return c
		},
		insert_row: function(c, d, b) {
			var f = this._get_$table().children("tbody"),
				j = false;
			d = d || "insert";
			if(!a.isArray(this.options._table_data_root)) {
				console_log("Improper _table_data_root:", this.options._table_data_root);
				this.options._table_data_root = []
			}
			if(b && b > this.options._table_data_root.length) b = this.options._table_data_root.length;
			if(!this.options._table_data_root || this.options._table_data_root.length === 0) j = true;
			switch(d) {
			case "unshift":
				this.options._table_data_root.unshift(c);
				break;
			case "push":
				this.options._table_data_root.push(c);
				break;
			case "insert":
				if(!b) b = this.options._table_data_root.length;
				this.options._table_data_root.splice(b, 0, c);
				break;
			case "replace":
				!b && b !== 0 || b >= this.options._table_data_root.length || this._update_row(b, c);
				return
			}
			this._write_row(c, d, b);
			j && a(">tr.trHasNone", f).remove()
		},
		_generate_$td: function(c, d, b, f) {
			var j = this.options.columnData[b],
				n = {},
				l = a("<td />").addClass("col" + (b + 1));
			j["class"] && l.addClass(j["class"]);
			for(var o in {
				value: 1,
				metadata: 1
			}) n[o] = a.isFunction(j[o]) ? j[o]({
				data: this.options._table_data,
				rowData: d,
				row: c,
				column: b,
				elem: l,
				$cell: l,
				$row: f
			}) : j[o] ? this._getSubset(d, j[o]) : null;
			n.metadata !== null && l.data("metadata", n.metadata);
			j.render == "html" ? l.append(n.value) : l.text(n.value);
			return l
		},
		_update_row: function(c, d) {
			var b = [],
				f = this.get_$row(c),
				j = f.children("td");
			row_was = this.options._table_data_root[c];
			this.options._table_data_root[c] = d;
			for(var n = 0; n < this.options.columnData.length; n++) {
				var l = this.options.columnData[n];
				if(l.key !== false) if(!l.key || row_was[l.key] !== d[l.key]) b[n] = this._generate_$td(c, d, n, f)
			}
			for(n = 0; n < b.length; n++) b[n] && j.eq(n).replaceWith(b[n]);
			return f
		},
		_write_row: function(c, d, b) {
			var f = this._get_$table().children("tbody"),
				j = a("<tr />");
			if(!this._auto_destroy_check()) {
				d = d || "insert";
				j.data("row", c);
				for(var n = 0; n < this.options.columnData.length; n++) this._generate_$td(b, c, n, j).appendTo(j);
				switch(d) {
				case "unshift":
					f.prepend(j);
					this._zebra();
					return j;
				case "push":
					f.append(j);
					e || (f.find("> tr").length % 2 ? j.addClass("odd") : j.addClass("even"));
					return j;
				case "insert":
					if(b > 0) {
						c = this.get_$row(b);
						c[0] ? j.before(c) : f.append(j)
					} else f.prepend(j);
					this._zebra();
					return j
				}
			}
		},
		removeRow: function(c) {
			var d = this._get_$table();
			this.get_$row(c).remove();
			!this.options._table_data_root || !this.options._table_data_root.length ? this._get_emptyions._table_data_root.length) this._get_empty_row().appendTo(c);
			else {
				if(this.options.searchParam && this.options.search) {
					var d = a('<tr class="searchRow nonDataRow"><td colspan="' + this.options.columnData.length + '"></td></tr>');
					a("td", d).text("Search results for: " + this.options.search);
					d.appendTo(c)
				}
				for(c = 0; c < this.options._table_data_root.length; c++) this._write_row(this.options._table_data_root[c], "push", c)
			}
		},
		_get_empty_row: function() {
			var c = a('<tr class="trHasNone nonDataRow"></tr>'),
				d = a('<td class="tdHasNone"></td>').attr("colspan", this.options.columnData.length || 1).appendTo(c);
			if(this.options._initial_empty_load) {
				delete this.options._initial_empty_load;
				d.text(this.options.hasNoneLoading || this.options.hasNoneText || "")
			} else if(!this.options.hasNoneText && this.options.search) d.text("No matching entries found");
			else if(this.options.hasNoneText) if(typeof this.options.hasNoneText === "string") d.text(this.options.hasNoneText);
			else this.options.hasNoneText instanceof jQuery && d.append(this.options.hasNoneText);
			else d.text("No entries in this table");
			return c
		},
		insert_row: function(c, d, b) {
			var f = this._get_$table().children("tbody"),
				j = false;
			d = d || "insert";
			if(!a.isArray(this.options._table_data_root)) {
				console_log("Improper _table_data_root:", this.options._table_data_root);
				this.options._table_data_root = []
			}
			if(b && b > this.options._table_data_root.length) b = this.options._table_data_root.length;
			if(!this.options._table_data_root || this.options._table_data_root.length === 0) j = true;
			switch(d) {
			case "unshift":
				this.options._table_data_root.unshift(c);
				break;
			case "push":
				this.options._table_data_root.push(c);
				break;
			case "insert":
				if(!b) b = this.options._table_data_root.length;
				this.options._table_data_root.splice(b, 0, c);
				break;
			case "replace":
				!b && b !== 0 || b >= this.options._table_data_root.length || this._update_row(b, c);
				return
			}
			this._write_row(c, d, b);
			j && a(">tr.trHasNone", f).remove()
		},
		_generate_$td: function(c, d, b, f) {
			var j = this.options.columnData[b],
				n = {},
				l = a("<td />").addClass("col" + (b + 1));
			j["class"] && l.addClass(j["class"]);
			for(var o in {
				value: 1,
				metadata: 1
			}) n[o] = a.isFunction(j[o]) ? j[o]({
				data: this.options._table_data,
				rowData: d,
				row: c,
				column: b,
				elem: l,
				$cell: l,
				$row: f
			}) : j[o] ? this._getSubset(d, j[o]) : null;
			n.metadata !== null && l.data("metadata", n.metadata);
			j.render == "html" ? l.append(n.value) : l.text(n.value);
			return l
		},
		_update_row: function(c, d) {
			var b = [],
				f = this.get_$row(c),
				j = f.children("td");
			row_was = this.options._table_data_root[c];
			this.options._table_data_root[c] = d;
			for(var n = 0; n < this.options.columnData.length; n++) {
				var l = this.options.columnData[n];
				if(l.key !== false) if(!l.key || row_was[l.key] !== d[l.key]) b[n] = this._generate_$td(c, d, n, f)
			}
			for(n = 0; n < b.length; n++) b[n] && j.eq(n).replaceWith(b[n]);
			return f
		},
		_write_row: function(c, d, b) {
			var f = this._get_$table().children("tbody"),
				j = a("<tr />");
			if(!this._auto_destroy_check()) {
				d = d || "insert";
				j.data("row", c);
				for(var n = 0; n < this.options.columnData.length; n++) this._generate_$td(b, c, n, j).appendTo(j);
				switch(d) {
				case "unshift":
					f.prepend(j);
					this._zebra();
					return j;
				case "push":
					f.append(j);
					e || (f.find("> tr").length % 2 ? j.addClass("odd") : j.addClass("even"));
					return j;
				case "insert":
					if(b > 0) {
						c = this.get_$row(b);
						c[0] ? j.before(c) : f.append(j)
					} else f.prepend(j);
					this._zebra();
					return j
				}
			}
		},
		removeRow: function(c) {
			var d = this._get_$table();
			this.get_$row(c).remove();
			!this.options._table_data_root || !this.options._table_data_root.length ? this._get_empty_row().appendTo(a(">tbody", d)) : this._zebra()
		},
		clearTable: function(c) {
			var d = this;
			if(c && typeof c !== "number") c = 3E3;
			if(c) d.options._clear_timeout = setTimeout(function() {
				d.performClearTable()
			}, c);
			else d.performClearTable()
		},
		cancelClearTable: function() {
			this.options._clear_timeout && clearTimeout(this.options._clear_timeout)
		},
		performClearTable: function() {
			if(this.options._clear_timeout) {
				clearTimeout(this.options._clear_timeout);
				this.options._clear_timeout = false
			}
			this.refreshTable([])
		},
		refresh: function() {
			this.refreshTable.apply(this, arguments)
		},
		refreshTable: function(c) {
			var d = this._get_$table().children("tbody");
			this.cancelClearTable();
			this.options._table_data = c;
			this._write_tbody(d)
		},
		getColumn: function(c) {
			params = this.data("jsDataTable");
			var d = this.closestDesc("table.jsDataTable"),
				b = a();
			a.each(params.columnData, function(f, j) {
				if(j.sortby && j.sortby === c || j.name && j.name == c) {
					b = d.children("tbody, thead").children("tr").children(".col" + (f + 1));
					return false
				}
			});
			return b
		}
	});
	a.widget("cui2.jsonTable", a.cui2.jsDataTable, {
		setRequestParams: function() {
			var c = {};
			a.extend(c, this.options.rest_data || {});
			c[this.options.searchParam] = this.options.search || "";
			this.options.rowsParam = this.options.rowsParam || "rows";
			c[this.options.rowsParam] = this.options.rows || 100;
			this.options.pageParam = this.options.pageParam || "page";
			c[this.options.pageParam] = this.options.page || 1;
			this.options.sortbyParam = this.options.sortbyParam || "sortby";
			c[this.options.sortbyParam] = this.options.sortby || "";
			this.options.sortorderParam = this.options.sortorderParam || "sortorder";
			c[this.options.sortorderParam] = this.options.sortorder || "asc";
			this.options.searchParam = this.options.searchParam || "searchstring";
			c[this.options.searchParam] = this.options.search || "";
			return this.options.rest_data = c
		},
		getRequestParams: function() {
			return a.extend(true, {}, this.options.rest_data)
		},
		refreshTable: function(c) {
			var d = this,
				b = this.element;
			c = c || {};
			if(d.options._xhr) {
				d.options._xhr.abort();
				delete d.options._xhr
			}
			a.extend(d.options, c || {});
			if(c.clear_existing_data) {
				d.options.rest_data = {};
				delete c.clear_existing_data
			}
			var f = d.setRequestParams();
			a.extend(f, c.data || {});
			delete c.data;
			d.options.rowDataRows = d.options.rowDataRows || "rows";
			d.options.rowDataPage = d.options.rowDataPage || "page";
			d.options.rowDataCount = d.options.rowDataCount || "count";
			f = {
				url: d.options.url,
				type: d.options.type || "GET",
				dataType: "json",
				data: f,
				success: function(j) {
					delete d.options._xhr;
					var n = d.options.paginator !== false && d.options.rowDataPage && d.options.rowDataCount && d.options.rowDataRows && j[d.options.rowDataPage] && j[d.options.rowDataCount] && j[d.options.rowDataRows] ? true : false,
						l = b.children(".paginator");
					if(n) {
						l[0] || (l = a('<div class="paginator"/>').appendTo(b));
						l.paginate(j[d.options.rowDataPage], Math.ceil(j[d.options.rowDataCount] / j[d.options.rowDataRows]), j[d.options.rowDataRows], {
							changePage: function(o) {
								d.refreshTable({
									page: o
								});
								if(d.options.paginatorToTop) {
									o = b.offset().top - d.options.paginatorToTopAdditional;
									o = o > 0 ? o : 0;
									a(window).scrollTop(o)
								}
							}
						})
					}
					l = parseInt(j[d.options.rowDataCount] / j[d.options.rowDataRows], 10) + (j[d.options.rowDataCount] % j[d.options.rowDataRows] ? 1 : 0);
					if(n && d.options.page > l) d.options.page = l;
					a.cui2.jsDataTable.prototype.refreshTable.call(d, j, c);
					typeof d.options.afterRender === "function" && d.options.afterRender.call(elem, {
						data: j
					})
				}
			};
			if(d.options.ajax) f = a.extend({}, f, d.options.ajax);
			d.options.extEnabled: "paginate_enabled_next",
		sPageNextDisabled: "paginate_disabled_next",
		sPageJUINext: "",
		sPageJUIPrev: "",
		sPageButton: "paginate_button",
		sPageButtonActive: "paginate_active",
		sPageButtonStaticDisabled: "paginate_button",
		sPageFirst: "first",
		sPagePrevious: "previous",
		sPageNext: "next",
		sPageLast: "last",
		sStripOdd: "odd",
		sStripEven: "even",
		sRowEmpty: "dataTables_empty",
		sWrapper: "dataTables_wrapper",
		sFilter: "dataTables_filter",
		sInfo: "dataTables_info",
		sPaging: "dataTables_paginate paging_",
		sLength: "dataTables_length",
		sProcessing: "dataTables_processing",
		sSortAsc: "sorting_asc",
		sSortDesc: "sorting_desc",
		sSortable: "sorting",
		sSortableAsc: "sorting_asc_disabled",
		sSortableDesc: "sorting_desc_disabled",
		sSortableNone: "sorting_disabled",
		sSortColumn: "sorting_",
		sSortJUIAsc: "",
		sSortJUIDesc: "",
		sSortJUI: "",
		sSortJUIAscAllowed: "",
		sSortJUIDescAllowed: "",
		sSortJUIWrapper: "",
		sScrollWrapper: "dataTables_scroll",
		sScrollHead: "dataTables_scrollHead",
		sScrollHeadInner: "dataTables_scrollHeadInner",
		sScrollBody: "dataTables_scrollBody",
		sScrollFoot: "dataTables_scrollFoot",
		sScrollFootInner: "dataTables_scrollFootInner",
		sFooterTH: ""
	};
	d.oJUIClasses = {
		sPagePrevEnabled: "fg-button ui-button ui-state-default ui-corner-left",
		sPagePrevDisabled: "fg-button ui-button ui-state-default ui-corner-left ui-state-disabled",
		sPageNextEnabled: "fg-button ui-button ui-state-default ui-corner-right",
		sPageNextDisabled: "fg-button ui-button ui-state-default ui-corner-right ui-state-disabled",
		sPageJUINext: "ui-icon ui-icon-circle-arrow-e",
		sPageJUIPrev: "ui-icon ui-icon-circle-arrow-w",
		sPageButton: "fg-button ui-button ui-state-default",
		sPageButtonActive: "fg-button ui-button ui-state-default ui-state-disabled",
		sPageButtonStaticDisabled: "fg-button ui-button ui-state-default ui-state-disabled",
		sPageFirst: "first ui-corner-tl ui-corner-bl",
		sPagePrevious: "previous",
		sPageNext: "next",
		sPageLast: "last ui-corner-tr ui-corner-br",
		sStripOdd: "odd",
		sStripEven: "even",
		sRowEmpty: "dataTables_empty",
		sWrapper: "dataTables_wrapper",
		sFilter: "dataTables_filter",
		sInfo: "dataTables_info",
		sPaging: "dataTables_paginate fg-buttonset ui-buttonset fg-buttonset-multi ui-buttonset-multi paging_",
		sLength: "dataTables_length",
		sProcessing: "dataTables_processing",
		sSortAsc: "ui-state-default",
		sSortDesc: "ui-state-default",
		sSortable: "ui-state-default",
		sSortableAsc: "ui-state-default",
		sSortableDesc: "ui-state-default",
		sSortableNone: "ui-state-default",
		sSortColumn: "sorting_",
		sSortJUIAsc: "css_right ui-icon ui-icon-triangle-1-n",
		sSortJUIDesc: "css_right ui-icon ui-icon-triangle-1-s",
		sSortJUI: "css_right ui-icon ui-icon-carat-2-n-s",
		sSortJUIAscAllowed: "css_right ui-icon ui-icon-carat-1-n",
		sSortJUIDescAllowed: "css_right ui-icon ui-icon-carat-1-s",
		sSortJUIWrapper: "DataTables_sort_wrapper",
		sScrollWrapper: "dataTables_scroll",
		sScrollHead: "dataTables_scrollHead ui-state-default",
		sScrollHeadInner: "dataTables_scrollHeadInner",
		sScrollBody: "dataTables_scrollBody",
		sScrollFoot: "dataTables_scrollFoot ui-state-default",
		sScrollFootInner: "dataTables_scrollFootInner",
		sFooterTH: "ui-state-default"
	};
	d.oPagination = {
		two_button: {
			fnInit: function(b, f, j) {
				var n, l, o;
				if(b.bJUI) {
					n = g.createElement("a");
					l = g.createElement("a");
					o = g.createElement("span");
					o.className = b.oClasses.sPageJUINext;
					l.appendChild(o);
					o = g.createElement("span");
					o.className = b.oClasses.sPageJUIPrev;
					n.appendChild(o)
				} else {
					n = g.createElement("div");
					l = g.createElement("div")
				}
				n.className = b.oClasses.sPagePrevDisabled;
				l.className = b.oClasses.sPageNextDisabled;
				n.title = b.oLanguage.oPaginate.sPrevious;
				l.title = b.oLanguage.oPaginate.sNext;
				f.appendChild(n);
				f.appendChild(l);
				a(n).bind("click.DT", function() {
					b.oApi._fnPageChange(b, "previous") && j(b)
				});
				a(l).bind("click.DT", function() {
					b.oApi._fnPageChange(b, "next") && j(b)
				});
				a(n).bind("selectstart.DT", function() {
					return false
				});
				a(l).bind("selectstart.DT", function() {
					return false
				});
				if(b.sTableId !== "" && typeof b.aanFeatures.p == "undefined") {
					f.setAttribute("id", b.sTableId + "_paginate");
					n.setAttribute("id", b.sTableId + "_previous");
					l.setAttribute("id", b.sTableId + "_next")
				}
			},
			fnUpdate: function(b) {
				if(b.aanFeatures.p) for(var f = b.aanFeatures.p, j = 0, n = f.length; j < n; j++) if(f[j].childNodes.length !== 0) {
					f[j].childNodes[0].className = b._iDisplayStart === 0 ? b.oClasses.sPagePrevDisabled : b.oClasses.sPagePrevEnabled;
					f[j].childNodes[1].className = b.fnDisplayEnd() == b.fnRecordsDisplay() ? b.oClasses.sPageNextDisabled : b.oClasses.sPageNextEnabled
				}
			}
		},
		iFullNumbersShowPages: 5,
		full_numbers: {
			fnInit: function(b, f, j) {
				var n = g.createElement("span"),
					l = g.createElement("span"),
					o = g.createElement("span"),
					q = g.createElement("span"),
					v = g.createElement("span");
				n.innerHTML = b.oLanguage.oPaginate.sFirst;
				l.innerHTML = b.oLanguage.oPaginate.sPrevious;
				q.innerHTML = b.oLanguage.oPaginate.sNext;
				v.innerHTML = b.oLanguage.oPaginate.sLast;
				var x = b.oClasses;
				n.className = x.sPageButton + " " + x.sPageFirst;
				l.className = x.sPageButton + " " + x.sPagePrevious;
				q.className = x.sPageButton + " " + x.sPageNext;
				v.className = x.sPageButton + " " + x.sPageLast;
				f.appendChild(n);
				f.appendChild(l);
				f.appendChild(o);
				f.appendChild(q);
				f.appendChild(v);
				a(n).bind("click.DT", function() {
					b.oApi._fnPageChange(b, "first") && j(b)
				});
				a(l).bind("click.DT", function() {
					b.oApi._fnPageChange(b, "previous") && j(b)
				});
				a(q).bind("click.DT", function() {
					b.oApi._fnPageChange(b, "next") && j(b)
				});
				a(v).bind("click.DT", function() {
					b.oApi._fnPageChange(b, "last") && j(b)
				});
				a("span", f).bind("mousedown.DT", function() {
					return false
				}).bind("selectstart.DT", function() {
					return false
				});
				if(b.sTableId !== "" && typeof b.aanFeatures.p == "undefined") {
					f.setAttribute("id", b.sTableId + "_paginate");
					n.setAttribute("id", b.sTableId + "_first");
					l.setAttribute("id", b.sTableId + "_previous");
					q.setAttribute("id", b.sTableId + "_next");
					v.setAttribute("id", b.sTableId + "_last")
				}
			},
			fnUpdate: function(b, f) {
				if(b.aanFeatures.p) {
					var j = d.oPagination.iFullNumbersShowPages,
						n = Math.floor(j / 2),
						l = Math.ceil(b.fnRecordsDisplay() / b._iDisplayLength),
						o = Math.ceil(b._iDisplayStart / b._iDisplayLength) + 1,
						q = "",
						v, x = b.oClasses;
					if(l < j) {
						n = 1;
						v = l
					} else if(o <= n) {
						n = 1;
						v = j
					} else if(o >= l - n) {
						n = l - j + 1;
						v = l
					} else {
						n = o - Math.ceil(j / 2) + 1;
						v = n + j - 1
					}
					for(j = n; j <= v; j++) q += o != j ? '<span class="' + x.sPageButton + '">' + j + "</span>" : '<span class="' + x.sPageButtonActive + '">' + j + "</span>";
					v = b.aanFeatures.p;
					var y, D = function() {
							b._iDisplayStart = (this.innerHTML * 1 - 1) * b._iDisplayLength;
							f(b);
							return false
						},
						B = function() {
							return false
						};
					j = 0;
					for(n = v.length; j < n; j++) if(v[j].childNodes.length !== 0) {
						y = a("span:eq(2)", v[j]);
						y.html(q);
						a("span", y).bind("click.DT", D).bind("mousedown.DT", B).bind("selectstart.DT", B);
						y = v[j].getElementsByTagName("span");
						y = [y[0], y[1], y[y.length - 2], y[y.length - 1]];
						a(y).removeClass(x.sPageButton + " " + x.sPageButtonActive + " " + x.sPageButtonStaticDisabled);
						if(o == 1) {
							y[0].className += " " + x.sPageButtonStaticDisabled;
							y[1].className += " " + x.sPageButtonStaticDisabled
						} else {
							y[0].className += " " + x.sPageButton;
							y[1].className += " " + x.sPageButton
						}
						if(l === 0 || o == l || b._iDisplayLength == -1) {
							y[2].className += " " + x.sPageButtonStaticDisabled;
							y[3].className += " " + x.sPageButtonStaticDisabled
						} else {
							y[2].className += " " + x.sPageButton;
							y[3].className += " " + x.sPageButton
						}
					}
				}
			}
		}
	};
	d.oSort = {
		"string-asc": function(b, f) {
			var j = b.toLowerCase(),
				n = f.toLowerCase();
			return j < n ? -1 : j > n ? 1 : 0
		},
		"string-desc": function(b, f) {
			var j = b.toLowerCase(),
				n = f.toLowerCase();
			return j < n ? 1 : j > n ? -1 : 0
		},
		"html-asc": function(b, f) {
			var j = b.replace(/<.*?>/g, "").toLowerCase(),
				n = f.replace(/<.*?>/g, "").toLowerCase();
			return j < n ? -1 : j > n ? 1 : 0
		},
		"html-desc": function(b, f) {
			var j = b.replace(/<.*?>/g, "").toLowerCase(),
				n = f.replace(/<.*?>/g, "").toLowerCase();
			return j < n ? 1 : j > n ? -1 : 0
		},
		"date-asc": function(b, f) {
			var j = Date.parse(b),
				n = Date.parse(f);
			if(isNaN(j) || j === "") j = Date.parse("01/01/1970 00:00:00");
			if(isNaN(n) || n === "") n = Date.parse("01/01/1970 00:00:00");
			return j - n
		},
		"date-desc": function(b, f) {
			var j = Date.parse(b),
				n = Date.parse(f);
			if(isNaN(j) || j === "") j = Date.parse("01/01/1970 00:00:00");
			if(isNaN(n) || n === "") n = Date.parse("01/01/1970 00:00:00");
			return n - j
		},
		"numeric-asc": function(b, f) {
			return(b == "-" || b === "" ? 0 : b * 1) - (f == "-" || f === "" ? 0 : f * 1)
		},
		"numeric-desc": function(b, f) {
			return(f == "-" || f === "" ? 0 : f * 1) - (b == "-" || b === "" ? 0 : b * 1)
		}
	};
	d.aTypes = [function(b) {
		if(b.length === 0) return "numeric";
		var f, j = false;
		f = b.charAt(0);
		if("0123456789-".indexOf(f) == -1) return null;
		for(var n = 1; n < b.length; n++) {
			f = b.charAt(n);
			if("0123456789.".indexOf(f) == -1) return null;
			if(f == ".") {
				if(j) return null;
				j = true
			}
		}
		return "numeric"
	}, function(b) {
		var f = Date.parse(b);
		if(f !== null && !isNaN(f) || b.length === 0) return "date";
		return null
	}, function(b) {
		if(b.indexOf("<") != -1 && b.indexOf(">") != -1) return "html";
		return null
	}];
	d.fnVersionCheck = function(b) {
		var f = function(v, x) {
				for(; v.length < x;) v += "0";
				return v
			},
			j = d.sVersion.split(".");
		b = b.split(".");
		for(var n = "", l = "", o = 0, q = b.length; o < q; o++) {
			n += f(j[o], 3);
			l += f(b[o], 3)
		}
		return parseInt(n, 10) >= parseInt(l, 10)
	};
	d._oExternConfig = {
		iNextUnique: 0
	};
	a.fn.dataTable = function(b) {
		function f() {
			this.fnRecordsTotal = function() {
				return this.oFeatures.bServerSide ? parseInt(this._iRecordsTotal, 10) : this.aiDisplayMaster.length
			};
			this.fnRecordsDisplay = function() {
				return this.oFeatures.bServerSide ? parseInt(this._iRecordsDisplay, 10) : this.aiDisplay.length
			};
			this.fnDisplayEnd = function() {
				return this.oFeatures.bServerSide ? this.oFeatures.bPaginate === false || this._iDisplayLength == -1 ? this._iDisplayStart + this.aiDisplay.length : Math.min(this._iDisplayStart + this._iDisplayLength, this._iRecordsDisplay) : this._iDisplayEnd
			};
			this.sInstance = this.oInstance = null;
			this.oFeatures = {
				bPaginate: true,
				bLengthChange: true,
				bFilter: true,
				bSort: true,
				bInfo: true,
				bAutoWidth: true,
				bProcessing: false,
				bSortClasses: true,
				bStateSave: false,
				bServerSide: false
			};
			this.oScroll = {
				sX: "",
				sXInner: "",
				sY: "",
				bCollapse: false,
				bInfinite: false,
				iLoadGap: 100,
				iBarWidth: 0,
				bAutoCss: true
			};
			this.aanFeatures = [];
			this.oLanguage = {
				sProcessing: "Processing...",
				sLengthMenu: "Show _MENU_ entries",
				sZeroRecords: "No matching records found",
				sEmptyTable: "No data available in table",
				sInfo: "Showing _START_ to _END_ of _TOTAL_ entries",
				sInfoEmpty: "Showing 0 to 0 of 0 entries",
				sInfoFiltered: "(filtered from _MAX_ total entries)",
				sInfoPostFix: ""assName += " " + x.sPageButton
						}
						if(l === 0 || o == l || b._iDisplayLength == -1) {
							y[2].className += " " + x.sPageButtonStaticDisabled;
							y[3].className += " " + x.sPageButtonStaticDisabled
						} else {
							y[2].className += " " + x.sPageButton;
							y[3].className += " " + x.sPageButton
						}
					}
				}
			}
		}
	};
	d.oSort = {
		"string-asc": function(b, f) {
			var j = b.toLowerCase(),
				n = f.toLowerCase();
			return j < n ? -1 : j > n ? 1 : 0
		},
		"string-desc": function(b, f) {
			var j = b.toLowerCase(),
				n = f.toLowerCase();
			return j < n ? 1 : j > n ? -1 : 0
		},
		"html-asc": function(b, f) {
			var j = b.replace(/<.*?>/g, "").toLowerCase(),
				n = f.replace(/<.*?>/g, "").toLowerCase();
			return j < n ? -1 : j > n ? 1 : 0
		},
		"html-desc": function(b, f) {
			var j = b.replace(/<.*?>/g, "").toLowerCase(),
				n = f.replace(/<.*?>/g, "").toLowerCase();
			return j < n ? 1 : j > n ? -1 : 0
		},
		"date-asc": function(b, f) {
			var j = Date.parse(b),
				n = Date.parse(f);
			if(isNaN(j) || j === "") j = Date.parse("01/01/1970 00:00:00");
			if(isNaN(n) || n === "") n = Date.parse("01/01/1970 00:00:00");
			return j - n
		},
		"date-desc": function(b, f) {
			var j = Date.parse(b),
				n = Date.parse(f);
			if(isNaN(j) || j === "") j = Date.parse("01/01/1970 00:00:00");
			if(isNaN(n) || n === "") n = Date.parse("01/01/1970 00:00:00");
			return n - j
		},
		"numeric-asc": function(b, f) {
			return(b == "-" || b === "" ? 0 : b * 1) - (f == "-" || f === "" ? 0 : f * 1)
		},
		"numeric-desc": function(b, f) {
			return(f == "-" || f === "" ? 0 : f * 1) - (b == "-" || b === "" ? 0 : b * 1)
		}
	};
	d.aTypes = [function(b) {
		if(b.length === 0) return "numeric";
		var f, j = false;
		f = b.charAt(0);
		if("0123456789-".indexOf(f) == -1) return null;
		for(var n = 1; n < b.length; n++) {
			f = b.charAt(n);
			if("0123456789.".indexOf(f) == -1) return null;
			if(f == ".") {
				if(j) return null;
				j = true
			}
		}
		return "numeric"
	}, function(b) {
		var f = Date.parse(b);
		if(f !== null && !isNaN(f) || b.length === 0) return "date";
		return null
	}, function(b) {
		if(b.indexOf("<") != -1 && b.indexOf(">") != -1) return "html";
		return null
	}];
	d.fnVersionCheck = function(b) {
		var f = function(v, x) {
				for(; v.length < x;) v += "0";
				return v
			},
			j = d.sVersion.split(".");
		b = b.split(".");
		for(var n = "", l = "", o = 0, q = b.length; o < q; o++) {
			n += f(j[o], 3);
			l += f(b[o], 3)
		}
		return parseInt(n, 10) >= parseInt(l, 10)
	};
	d._oExternConfig = {
		iNextUnique: 0
	};
	a.fn.dataTable = function(b) {
		function f() {
			this.fnRecordsTotal = function() {
				return this.oFeatures.bServerSide ? parseInt(this._iRecordsTotal, 10) : this.aiDisplayMaster.length
			};
			this.fnRecordsDisplay = function() {
				return this.oFeatures.bServerSide ? parseInt(this._iRecordsDisplay, 10) : this.aiDisplay.length
			};
			this.fnDisplayEnd = function() {
				return this.oFeatures.bServerSide ? this.oFeatures.bPaginate === false || this._iDisplayLength == -1 ? this._iDisplayStart + this.aiDisplay.length : Math.min(this._iDisplayStart + this._iDisplayLength, this._iRecordsDisplay) : this._iDisplayEnd
			};
			this.sInstance = this.oInstance = null;
			this.oFeatures = {
				bPaginate: true,
				bLengthChange: true,
				bFilter: true,
				bSort: true,
				bInfo: true,
				bAutoWidth: true,
				bProcessing: false,
				bSortClasses: true,
				bStateSave: false,
				bServerSide: false
			};
			this.oScroll = {
				sX: "",
				sXInner: "",
				sY: "",
				bCollapse: false,
				bInfinite: false,
				iLoadGap: 100,
				iBarWidth: 0,
				bAutoCss: true
			};
			this.aanFeatures = [];
			this.oLanguage = {
				sProcessing: "Processing...",
				sLengthMenu: "Show _MENU_ entries",
				sZeroRecords: "No matching records found",
				sEmptyTable: "No data available in table",
				sInfo: "Showing _START_ to _END_ of _TOTAL_ entries",
				sInfoEmpty: "Showing 0 to 0 of 0 entries",
				sInfoFiltered: "(filtered from _MAX_ total entries)",
				sInfoPostFix: "",
				sSearch: "Search:",
				sUrl: "",
				oPaginate: {
					sFirst: "First",
					sPrevious: "Previous",
					sNext: "Next",
					sLast: "Last"
				},
				fnInfoCallback: null
			};
			this.aoData = [];
			this.aiDisplay = [];
			this.aiDisplayMaster = [];
			this.aoColumns = [];
			this.iNextId = 0;
			this.asDataSearch = [];
			this.oPreviousSearch = {
				sSearch: "",
				bRegex: false,
				bSmart: true
			};
			this.aoPreSearchCols = [];
			this.aaSorting = [
				[0, "asc", 0]
			];
			this.aaSortingFixed = null;
			this.asStripClasses = [];
			this.asDestoryStrips = [];
			this.sDestroyWidth = 0;
			this.fnFooterCallback = this.fnHeaderCallback = this.fnRowCallback = null;
			this.aoDrawCallback = [];
			this.fnInitComplete = null;
			this.sTableId = "";
			this.nTableWrapper = this.nTBody = this.nTFoot = this.nTHead = this.nTable = null;
			this.bInitialised = false;
			this.aoOpenRows = [];
			this.sDom = "lfrtip";
			this.sPaginationType = "two_button";
			this.iCookieDuration = 7200;
			this.sCookiePrefix = "SpryMedia_DataTables_";
			this.fnCookieCallback = null;
			this.aoStateSave = [];
			this.aoStateLoad = [];
			this.sAjaxSource = this.oLoadedState = null;
			this.bAjaxDataGet = true;
			this.fnServerData = function(w, E, G) {
				a.ajax({
					url: w,
					data: E,
					success: G,
					dataType: "json",
					cache: false,
					error: function(J, L) {
						L == "parsererror" && alert("DataTables warning: JSON data from server could not be parsed. This is caused by a JSON formatting error.")
					}
				})
			};
			this.fnFormatNumber = function(w) {
				if(w < 1E3) return w;
				else {
					var E = w + "";
					w = E.split("");
					var G = "";
					E = E.length;
					for(var J = 0; J < E; J++) {
						if(J % 3 === 0 && J !== 0) G = "," + G;
						G = w[E - J - 1] + G
					}
				}
				return G
			};
			this.aLengthMenu = [10, 25, 50, 100];
			this.bDrawing = this.iDraw = 0;
			this.iDrawError = -1;
			this._iDisplayLength = 10;
			this._iDisplayStart = 0;
			this._iDisplayEnd = 10;
			this._iRecordsDisplay = this._iRecordsTotal = 0;
			this.bJUI = false;
			this.oClasses = d.oStdClasses;
			this.bSorted = this.bFiltered = false;
			this.oInit = null
		}
		function j(w) {
			return function() {
				var E = [kb(this[d.iApiIndex])].concat(Array.prototype.slice.call(arguments));
				return d.oApi[w].apply(this, E)
			}
		}
		function n(w) {
			var E, G;
			if(w.bInitialised === false) setTimeout(function() {
				n(w)
			}, 200);
			else {
				C(w);
				D(w);
				Z(w, true);
				w.oFeatures.bAutoWidth && Na(w);
				E = 0;
				for(G = w.aoColumns.length; E < G; E++) if(w.aoColumns[E].sWidth !== null) w.aoColumns[E].nTh.style.width = Pa(w.aoColumns[E].sWidth);
				if(w.oFeatures.bSort) Ea(w);
				else {
					w.aiDisplay = w.aiDisplayMaster.slice();
					Ja(w);
					B(w)
				}
				if(w.sAjaxSource !== null && !w.oFeatures.bServerSide) w.fnServerData.call(w.oInstance, w.sAjaxSource, [], function(J) {
					for(E = 0; E < J.aaData.length; E++) x(w, J.aaData[E]);
					w.iInitDisplayStart = w._iDisplayStart;
					if(w.oFeatures.bSort) Ea(w);
					else {
						w.aiDisplay = w.aiDisplayMaster.slice();
						Ja(w);
						B(w)
					}
					Z(w, false);
					l(w, J)
				});
				else if(!w.oFeatures.bServerSide) {
					Z(w, false);
					l(w)
				}
			}
		}
		function l(w, E) {
			w._bInitComplete = true;
			if(typeof w.fnInitComplete == "function") typeof E != "undefined" ? w.fnInitComplete.call(w.oInstance, w, E) : w.fnInitComplete.call(w.oInstance, w)
		}
		function o(w, E, G) {
			qa(w.oLanguage, E, "sProcessing");
			qa(w.oLanguage, E, "sLengthMenu");
			qa(w.oLanguage, E, "sEmptyTable");
			qa(w.oLanguage, E, "sZeroRecords");
			qa(w.oLanguage, E, "sInfo");
			qa(w.oLanguage, E, "sInfoEmpty");
			qa(w.oLanguage, E, "sInfoFiltered");
			qa(w.oLanguage, E, "sInfoPostFix");
			qa(w.oLanguage, E, "sSearch");
			if(typeof E.oPaginate != "undefined") {
				qa(w.oLanguage.oPaginate, E.oPaginate, "sFirst");
				qa(w.oLanguage.oPaginate, E.oPaginate, "sPrevious");
				qa(w.oLanguage.oPaginate, E.oPaginate, "sNext");
				qa(w.oLanguage.oPaginate, E.oPaginate, "sLast")
			}
			typeof E.sEmptyTable == "undefined" && typeof E.sZeroRecords != "undefined" && qa(w.oLanguage, E, "sZeroRecords", "sEmptyTable");
			G && n(w)
		}
		function q(w, E) {
			w.aoColumns[w.aoColumns.length++] = {
				sType: null,
				_bAutoType: true,
				bVisible: true,
				bSearchable: true,
				bSortable: true,
				asSorting: ["asc", "desc"],
				sSortingClass: w.oClasses.sSortable,
				sSortingClassJUI: w.oClasses.sSortJUI,
				sTitle: E ? E.innerHTML : "",
				sName: "",
				sWidth: null,
				sWidthOrig: null,
				sClass: null,
				fnRender: null,
				bUseRendered: true,
				iDataSort: w.aoColumns.length - 1,
				sSortDataType: "std",
				nTh: E ? E : g.createElement("th"),
				nTf: null,
				anThExtra: [],
				anTfExtra: []
			};
			var G = w.aoColumns.length - 1;
			if(typeof w.aoPreSearchCols[G] == "undefined" || w.aoPreSearchCols[G] === null) w.aoPreSearchCols[G] = {
				sSearch: "",
				bRegex: false,
				bSmart: true
			};
			else {
				if(typeof w.aoPreSearchCols[G].bRegex == "undefined") w.aoPreSearchCols[G].bRegex = true;
				if(typeof w.aoPreSearchCols[G].bSmart == "undefined") w.aoPreSearchCols[G].bSmart = true
			}
			v(w, G, null)
		}
		function v(w, E, G) {
			E = w.aoColumns[E];
			if(typeof G != "undefined" && G !== null) {
				if(typeof G.sType != "undefined") {
					E.sType = G.sType;
					E._bAutoType = false
				}
				qa(E, G, "bVisible");
				qa(E, G, "bSearchable");
				qa(E, G, "bSortable");
				qa(E, G, "sTitle");
				qa(E, G, "sName");
				qa(E, G, "sWidth");
				qa(E, G, "sWidth", "sWidthOrig");
				qa(E, G, "sClass");
				qa(E, G, "fnRender");
				qa(E, G, "bUseRendered");
				qa(E, G, "iDataSort");
				qa(E, G, "asSorting");
				qa(E, G, "sSortDataType")
			}
			if(!w.oFeatures.bSort) E.bSortable = false;
			if(!E.bSortable || a.inArray("asc", E.asSorting) == -1 && a.inArray("desc", E.asSorting) == -1) {
				E.sSortingClass = w.oClasses.sSortableNone;
				E.sSortingClassJUI = ""
			} else if(a.inArray("asc", E.asSorting) != -1 && a.inArray("desc", E.asSorting) == -1) {
				E.sSortingClass = w.oClasses.sSortableAsc;
				E.sSortingClassJUI = w.oClasses.sSortJUIAscAllowed
			} else if(a.inArray("asc", E.asSorting) == -1 && a.inArray("desc", E.asSorting) != -1) {
				E.sSortingClass = w.oClasses.sSortableDesc;
				E.sSortingClassJUI = w.oClasses.sSortJUIDescAllowed
			}
		}
		function x(w, E) {
			if(E.length != w.aoColumns.length && w.iDrawError != w.iDraw) {
				Y(w, 0, "Added data (size " + E.length + ") does not match known number of columns (" + w.aoColumns.length + ")");
				w.iDrawError = w.iDraw;
				return -1
			}
			var G = E.slice(),
				J = w.aoData.length;
			w.aoData.push({
				nTr: g.createElement("tr"),
				_iId: w.iNextId++,
				_aData: G,
				_anHidden: [],
				_sRowStripe: ""
			});
			for(var L, K, ea = 0; ea < G.length; ea++) {
				L = g.createElement("td");
				if(G[ea] === null) G[ea] = "";
				if(typeof w.aoColumns[ea].fnRender == "function") {
					K = w.aoColumns[ea].fnRender({
						iDataRow: J,
						iDataColumn: ea,
						aData: G,
						oSettings: w
					});
					L.innerHTML = K;
					if(w.aoColumns[ea].bUseRendered) w.aoData[J]._aData[ea] = K
				} else L.innerHTML = G[ea];
				if(typeof G[ea] != "string") G[ea] += "";
				G[ea] = a.trim(G[ea]);
				if(w.aoColumns[ea].sClass !== null) L.className = w.aoColumns[ea].sClass;
				if(w.aoColumns[ea]._bAutoType && w.aoColumns[ea].sType != "string") {
					K = nb(w.aoData[J]._aData[ea]);
					if(w.aoColumns[ea].sType === null) w.aoColumns[ea].sType = K;
					else if(w.aoColumns[ea].sType != K) w.aoColumns[ea].sType = "string"
				}
				if(w.aoColumns[ea].bVisible) {
					w.aoData[J].nTr.appendChild(L);
					w.aoData[J]._anHidden[ea] = null
				} else w.aoData[J]._anHidden[ea] = L
			}
			w.aiDisplayMaster.push(J);
			return J
		}
		function y(w) {
			var E, G, J, L, K, ea, ga, Ca;
			if(w.sAjaxSource === null) {
				ga = w.nTBody.childNodes;
				E = 0;
				for(G = ga.length; E < G; E++) if(ga[E].nodeName.toUpperCase() == "TR") {
					ea = w.aoData.length;
					w.aoData.pushterTH;
					L = 1;
					for(K = ea.length; L < K; L++) {
						Ca = a(ea[L]).children();
						w.aoColumns[E].anTfExtra.push(Ca[E - ga]);
						w.aoColumns[E].bVisible || ea[L].removeChild(Ca[E - ga])
					}
					if(!w.aoColumns[E].bVisible) {
						G[E - ga].parentNode.removeChild(G[E - ga]);
						ga++
					}
				}
			}
		}
		function B(w) {
			var E, G, J = [],
				L = 0,
				K = false;
			E = w.asStripClasses.length;
			G = w.aoOpenRows.length;
			w.bDrawing = true;
			if(typeof w.iInitDisplayStart != "undefined" && w.iInitDisplayStart != -1) {
				w._iDisplayStart = w.oFeatures.bServerSide ? w.iInitDisplayStart : w.iInitDisplayStart >= w.fnRecordsDisplay() ? 0 : w.iInitDisplayStart;
				w.iInitDisplayStart = -1;
				Ja(w)
			}
			if(!(!w.bDestroying && w.oFeatures.bServerSide && !F(w))) {
				w.oFeatures.bServerSide || w.iDraw++;
				if(w.aiDisplay.length !== 0) {
					var ea = w._iDisplayStart,
						ga = w._iDisplayEnd;
					if(w.oFeatures.bServerSide) {
						ea = 0;
						ga = w.aoData.length
					}
					for(ea = ea; ea < ga; ea++) {
						var Ca = w.aoData[w.aiDisplay[ea]],
							Ia = Ca.nTr;
						if(E !== 0) {
							var ab = w.asStripClasses[L % E];
							if(Ca._sRowStripe != ab) {
								a(Ia).removeClass(Ca._sRowStripe).addClass(ab);
								Ca._sRowStripe = ab
							}
						}
						if(typeof w.fnRowCallback == "function") {
							Ia = w.fnRowCallback.call(w.oInstance, Ia, w.aoData[w.aiDisplay[ea]]._aData, L, ea);
							if(!Ia && !K) {
								Y(w, 0, "A node was not returned by fnRowCallback");
								K = true
							}
						}
						J.push(Ia);
						L++;
						if(G !== 0) for(Ca = G - 1; Ca >= 0; Ca--) Ia == w.aoOpenRows[Ca].nParent && J.push(w.aoOpenRows[Ca].nTr)
					}
				} else {
					J[0] = g.createElement("tr");
					if(typeof w.asStripClasses[0] != "undefined") J[0].className = w.asStripClasses[0];
					K = g.createElement("td");
					K.setAttribute("valign", "top");
					K.colSpan = ya(w);
					K.className = w.oClasses.sRowEmpty;
					K.innerHTML = typeof w.oLanguage.sEmptyTable != "undefined" && w.fnRecordsTotal() === 0 ? w.oLanguage.sEmptyTable : w.oLanguage.sZeroRecords.replace("_MAX_", w.fnFormatNumber(w.fnRecordsTotal()));
					J[L].appendChild(K)
				}
				typeof w.fnHeaderCallback == "function" && w.fnHeaderCallback.call(w.oInstance, a(">tr", w.nTHead)[0], ob(w), w._iDisplayStart, w.fnDisplayEnd(), w.aiDisplay);
				typeof w.fnFooterCallback == "function" && w.fnFooterCallback.call(w.oInstance, a(">tr", w.nTFoot)[0], ob(w), w._iDisplayStart, w.fnDisplayEnd(), w.aiDisplay);
				L = g.createDocumentFragment();
				E = g.createDocumentFragment();
				if(w.nTBody) {
					K = w.nTBody.parentNode;
					E.appendChild(w.nTBody);
					if(!w.oScroll.bInfinite || !w._bInitComplete || w.bSorted || w.bFiltered) {
						G = w.nTBody.childNodes;
						for(E = G.length - 1; E >= 0; E--) G[E].parentNode.removeChild(G[E])
					}
					E = 0;
					for(G = J.length; E < G; E++) L.appendChild(J[E]);
					w.nTBody.appendChild(L);
					K !== null && K.appendChild(w.nTBody)
				}
				for(E = w.aoDrawCallback.length - 1; E >= 0; E--) w.aoDrawCallback[E].fn.call(w.oInstance, w);
				w.bSorted = false;
				w.bFiltered = false;
				w.bDrawing = false;
				if(w.oFeatures.bServerSide) {
					Z(w, false);
					typeof w._bInitComplete == "undefined" && l(w)
				}
			}
		}
		function u(w) {
			if(w.oFeatures.bSort) Ea(w, w.oPreviousSearch);
			else if(w.oFeatures.bFilter) ma(w, w.oPreviousSearch);
			else {
				Ja(w);
				B(w)
			}
		}
		function F(w) {
			if(w.bAjaxDataGet) {
				Z(w, true);
				var E = w.aoColumns.length,
					G = [],
					J;
				w.iDraw++;
				G.push({
					name: "sEcho",
					value: w.iDraw
				});
				G.push({
					name: "iColumns",
					value: E
				});
				G.push({
					name: "sColumns",
					value: ca(w)
				});
				G.push({
					name: "iDisplayStart",
					value: w._iDisplayStart
				});
				G.push({
					name: "iDisplayLength",
					value: w.oFeatures.bPaginate !== false ? w._iDisplayLength : -1
				});
				if(w.oFeatures.bFilter !== false) {
					G.push({
						name: "sSearch",
						value: w.oPreviousSearch.sSearch
					});
					G.push({
						name: "bRegex",
						value: w.oPreviousSearch.bRegex
					});
					for(J = 0; J < E; J++) {
						G.push({
							name: "sSearch_" + J,
							value: w.aoPreSearchCols[J].sSearch
						});
						G.push({
							name: "bRegex_" + J,
							value: w.aoPreSearchCols[J].bRegex
						});
						G.push({
							name: "bSearchable_" + J,
							value: w.aoColumns[J].bSearchable
						})
					}
				}
				if(w.oFeatures.bSort !== false) {
					var L = w.aaSortingFixed !== null ? w.aaSortingFixed.length : 0,
						K = w.aaSorting.length;
					G.push({
						name: "iSortingCols",
						value: L + K
					});
					for(J = 0; J < L; J++) {
						G.push({
							name: "iSortCol_" + J,
							value: w.aaSortingFixed[J][0]
						});
						G.push({
							name: "sSortDir_" + J,
							value: w.aaSortingFixed[J][1]
						})
					}
					for(J = 0; J < K; J++) {
						G.push({
							name: "iSortCol_" + (J + L),
							value: w.aaSorting[J][0]
						});
						G.push({
							name: "sSortDir_" + (J + L),
							value: w.aaSorting[J][1]
						})
					}
					for(J = 0; J < E; J++) G.push({
						name: "bSortable_" + J,
						value: w.aoColumns[J].bSortable
					})
				}
				w.fnServerData.call(w.oInstance, w.sAjaxSource, G, function(ea) {
					I(w, ea)
				});
				return false
			} else return true
		}
		function I(w, E) {
			if(typeof E.sEcho != "undefined") if(E.sEcho * 1 < w.iDraw) return;
			else w.iDraw = E.sEcho * 1;
			if(!w.oScroll.bInfinite || w.oScroll.bInfinite && (w.bSorted || w.bFiltered)) da(w);
			w._iRecordsTotal = E.iTotalRecords;
			w._iRecordsDisplay = E.iTotalDisplayRecords;
			var G = ca(w);
			if(G = typeof E.sColumns != "undefined" && G !== "" && E.sColumns != G) var J = R(w, E.sColumns);
			for(var L = 0, K = E.aaData.length; L < K; L++) if(G) {
				for(var ea = [], ga = 0, Ca = w.aoColumns.length; ga < Ca; ga++) ea.push(E.aaData[L][J[ga]]);
				x(w, ea)
			} else x(w, E.aaData[L]);
			w.aiDisplay = w.aiDisplayMaster.slice();
			w.bAjaxDataGet = false;
			B(w);
			w.bAjaxDataGet = true;
			Z(w, false)
		}
		function C(w) {
			var E = g.createElement("div");
			w.nTable.parentNode.insertBefore(E, w.nTable);
			w.nTableWrapper = g.createElement("div");
			w.nTableWrapper.className = w.oClasses.sWrapper;
			w.sTableId !== "" && w.nTableWrapper.setAttribute("id", w.sTableId + "_wrapper");
			for(var G = w.nTableWrapper, J = w.sDom.split(""), L, K, ea, ga, Ca, Ia, ab, gb = 0; gb < J.length; gb++) {
				K = 0;
				ea = J[gb];
				if(ea == "<") {
					ga = g.createElement("div");
					Ca = J[gb + 1];
					if(Ca == "'" || Ca == '"') {
						Ia = "";
						for(ab = 2; J[gb + ab] != Ca;) {
							Ia += J[gb + ab];
							ab++
						}
						if(Ia == "H") Ia = "fg-toolbar ui-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix";
						else if(Ia == "F") Ia = "fg-toolbar ui-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix";
						if(Ia.indexOf(".") != -1) {
							Ca = Ia.split(".");
							ga.setAttribute("id", Ca[0].substr(1, Ca[0].length - 1));
							ga.className = Ca[1]
						} else if(Ia.charAt(0) == "#") ga.setAttribute("id", Ia.substr(1, Ia.length - 1));
						else ga.className = Ia;
						gb += ab
					}
					G.appendChild(ga);
					G = ga
				} else if(ea == ">") G = G.parentNode;
				else if(ea == "l" && w.oFeatures.bPaginate && w.oFeatures.bLengthChange) {
					L = O(w);
					K = 1
				} else if(ea == "f" && w.oFeatures.bFilter) {
					L = X(w);
					K = 1
				} else if(ea == "r" && w.oFeatures.bProcessing) {
					L = S(w);
					K = 1
				} else if(ea == "t") {
					L = M(w);
					K = 1
				} else if(ea == "i" && w.oFeatures.bInfo) {
					L = wb(w);
					K = 1
				} else if(ea == "p" && w.oFeatures.bPaginate) {
					L = $a(w);
					K = 1
				} else if(d.aoFeatures.length !== 0) {
					ga = d.aoFeatures;
					ab = 0;
					for(Ca = ga.length; ab < Ca; ab++) if(ea == ga[ab].cFeature) {
						if(L = ga[ab].fnInit(w)) K = 1;
						break
					}
				}
				if(K == 1 && L !== null) {
					if(typeof w.aanFeatures[ea] != "object") w.aanFeatures[ea] = [];
					w.aanFeatures[ea].push(L);
					G.appendChild(L)
				}
			}
			E.parentNode.replaceChild(w.nTableWrapper, E)
		}
		function M(w) {
			if(w.oScroll.sX === "" && w.oScroll.sY === "") return w.nTable;
			var E = g.createElement("div"),
				G = g.createElement("div"),
				J = g.createElement("div"),
				L = g.createElement("div"),
				K = g.createElement("div"),
				ea = g.createElement("div"),
				ga = w.nTable.cloneNode(false),
				Ca = w.nTable.cloneNode(false),
				Ia = w.nTable.getElementsByTagName("thead")[0],
				ab = w.nTable.getElementsByTagName("tfoot").length === 0 ? null : w.nTable.getElementsByTagName("tfoot")[0],
				gb = typeof b.bJQueryUI != "undefined" && b.bJQueryUI ? d.oJUIClasses : d.oStdClasses;
			G.appendChild(J);
			K.appendChild(ea);
			L.appendChild(w.nTable);
			E.appendChild(G);
			E.appendChild(L);
			J.appendChild(ga);
			ga.appendChild(Ia);
			if(ab !== null) {
				E.appendChild(K);
				ea.appendChild(Ca);
				Ca.appendChild(ab)
			}
			E.className = gb.sScrollWrapper;
			G.className = gb.sScrollHead;
			J.className = gb.sScrollHeadInner;
			L.className = gb.sScrollBody;
			K.className = gb.sScrollFoot;
			ea.className = gb.sScrollFootInner;
			if(w.oScroll.bAutoCss) {
				G.style.overflow = "hidden";
				G.style.position = "relative";
				K.style.overflow = "hidden";
				L.style.overflow = "auto"
			}
			G.style.border = "0";
			G.style.width = "100%";
			K.style.border = "0";
			J.style.width = "150%";
			ga.removeAttribute("id");
			ga.style.marginLeft = "0";
			w.nTable.style.marginLeft = "0";
			if(ab !== null) {
				Ca.removeAttribute("id");
				Ca.style.marginLeft = "0"
			}
			J = a(">caption", w.nTable);
			ea = 0;
			for(Ca = J.length; ea < Ca; ea++) ga.appendChild(J[ea]);
			if(w.oScroll.sX !== "") {
				G.style.width = Pa(w.oScroll.sX);
				L.style.width = Pa(w.oScroll.sX);
				if(ab !== null) K.style.width = Pa(w.oScroll.sX);
				a(L).scroll(function() {
					G.scrollLeft = this.scrollLeft;
					if(ab !== null) K.scrollLeft = this.scrollLeft
				})
			}
			if(w.oScroll.sY !== "") L.style.height = Pa(w.oScroll.sY);
			w.aoDrawCallback.push({
				fn: Q,
				sName: "scrolling"
			});
			w.oScroll.bInfinite && a(L).scroll(function() {
				if(!w.bDrawing) if(a(this).scrollTop() + a(this).height() > a(w.nTable).height() - w.oScroll.iLoadGap) if(w.fnDisplayEnd() < w.fnRecordsDisplay()) {
					qb(w, "next");
					Ja(w);
					B(w)
				}
			});
			w.nScrollHead = G;
			w.nScrollFoot = K;
			return E
		}
		function Q(w) {
			var E = w.nScrollHead.getElementsByTagName("div")[0],
				G = E.getElementsByTagName("table")[0],
				J = w.nTable.parentNode,
				L, K, ea, ga, Ca, Ia, ab, gb, xb = [];
			ea = w.nTable.getElementsByTagName("thead");
			ea.length > 0 && w.nTable.removeChild(ea[0]);
			if(w.nTFoot !== null) {
				Ca = w.nTable.getElementsByTagName("tfoot");
				Ca.length > 0 && w.nTable.removeChild(Ca[0])
			}
			ea = w.nTHead.cloneNode(true);
			w.nTable.insertBefore(ea, w.nTable.childNodes[0]);
			if(w.nTFoot !== null) {
				Ca = w.nTFoot.cloneNode(true);
				w.nTable.insertBefore(Ca, w.nTable.childNodes[1])
			}
			var Fb = sa(ea);
			L = 0;
			for(K = Fb.length; L < K; L++) {
				ab = fa(w, L);
				Fb[L].style.width = w.aoColumns[ab].sWidth
			}
			w.nTFoot !== null && ua(function(ub) {
				ub.style.width = ""
			}, Ca.getElementsByTagName("tr"));
			L = a(w.nTable).outerWidth();
			if(w.oScroll.sX === "") {
				w.nTable.style.width = "100%";
				if(a.browser.msie && a.browser.version <= 7) w.nTable.style.width = Pa(a(w.nTable).outerWidth() - w.oScroll.iBarWidth)
			} else if(w.oScroll.sXInner !== "") w.nTable.style.width = Pa(w.oScroll.sXInner);
			else if(L == a(J).width() && a(J).height() < a(w.nTable).height()) {
				w.nTable.style.width = Pa(L - w.oScroll.iBarWidth);
				if(a(w.nTable).outerWidth() > L - w.oScroll.iBarWidth) w.nTable.style.width = Pa(L)
			} else w.nTable.style.width = Pa(L);
			L = a(w.nTable).outerWidth();
			K = w.nTHead.getElementsByTagName("tr");
			ea = ea.getElementsByTagName("tr");
			ua(function(ub, z) {
				Ia = ub.style;
				Ia.paddingTop = "0";
				Ia.paddingBottom = "0";
				Ia.borderTopWidth = "0";
				Ia.borderBottomWidth = "0";
				Ia.height = 0;
				gb = a(ub).width();
				z.style.width = Pa(gb);
				xb.push(gb)
			}, ea, K);
			a(ea).height(0);
			if(w.nTFoot !== null) {
				ga = Ca.getElementsByTagName("tr");
				Ca = w.nTFoot.getElementsByTagName("tr");
				ua(function(ub, z) {
					Ia = ub.style;
					Ia.paddingTop = "0";
					Ia.paddingBottom = "0";
					Ia.borderTopWidth = "0";
					Ia.borderBottomWidth = "0";
					Ia.height = 0;
					gb = a(ub).width();
					z.style.width = Pa(gb);
					xb.push(gb)
				}, ga, Ca);
				a(ga).height(0)
			}
			ua(function(ub) {
				ub.innerHTML = "";
				ub.style.width = Pa(xb.shift())
			}, ea);
			w.nTFoot !== null && ua(function(ub) {
				ub.innerHTML = "";
				ub.style.width = Pa(xb.shift())
			}, ga);
			if(a(w.nTable).outerWidth() < L) if(w.oScroll.sX === "") Y(w, 1, "The table cannot fit into the current element which will cause column misalignment. It is suggested that you enable x-scrolling or increase the width the table has in which to be drawn");
			else w.oScroll.sXInner !== "" && Y(w, 1, "The table cannot fit into the current element which will cause column misalignment. It is suggested that you increase the sScrollXInner property to allow it to draw in a larger area, or simply remove that parameter to allow automatic calculation");
			if(w.oScroll.sY === "") if(a.browser.msie && a.browser.version <= 7) J.style.height = Pa(w.nTable.offsetHeight + w.oScroll.iBarWidth);
			if(w.oScroll.sY !== "" && w.oScroll.bCollapse) {
				J.style.height = Pa(w.oScroll.sY);
				ga = w.oScroll.sX !== "" && w.nTable.offsetWidth > J.offsetWidth ? w.oScroll.iBarWidth : 0;
				if(w.nTable.offsetHeight < J.offsetHeight) J.style.height = Pa(a(w.nTable).height() + ga)
			}
			ga = a(w.nTable).outerWidth();
			G.style.width = Pa(ga);
			E.style.width = Pa(ga + w.oScroll.iBarWidth);
			if(w.nTFoot !== null) {
				E = w.nScrollFoot.getElementsByTagName("div")[0];
				G = E.getElementsByTagName("table")[0];
				E.style.width = Pa(w.nTable.offsetWidth + w.oScroll.iBarWidth);
				G.style.width = Pa(w.nTable.offsetWidth)
			}
			if(w.bSorted || w.bFiltered) J.scrollTop = 0
		}
		function N(w) {
			if(w.oFeatures.bAutoWidth === false) return false;
			Na(w);
			for(var E = 0, G = w.aoColumns.length; E < G; E++) w.aoColumns[E].nTh.style.width = w.aoColumns[E].sWidth
		}
		function X(w) {
			var E = g.createElement("div");
			w.sTableId !== "" && typeof w.aanFeatures.f == "undefined" && E.setAttribute("id", w.sTableId + "_filter");
			E.className = w.oClasses.sFilter;
			E.innerHTML = w.oLanguage.sSearch + (w.oLanguage.sSearch === "" ? "" : " ") + '<input type="text" />';
			var G = a("input", E);
			G.val(w.oPreviousSearch.sSearch.replace('"', "&quot;"));
			G.bind("keyup.DT", function() {
				for(var J = w.aanFeatures.f, L = 0, K = J.length; L < K; L++) J[L] != this.parentNode && a("input", J[L]).val(this.value);
				this.value != w.oPreviousSearch.sSearch && ma(w, {
					sSearch: this.value,
					bRegex: w.oPreviousSearch.bRegex,
					bSmart: w.oPreviousSearch.bSmart
				})
			});
			G.bind("keypress.DT", function(J) {
				if(J.keyCode == 13) return false
			});
			return E
		}

		function ma(w, E, G) {
			oa(w, E.sSearch, G, E.bRegex, E.bSmart);
			for(E = 0; E < w.aoPreSearchCols.length; E++) Ma(w, w.aoPreSearchCols[E].sSearch, E, w.aoPreSearchCols[E].bRegex, w.aoPreSearchCols[E].bSmart);
			d.afnFiltering.length !== 0 && pa(w);
			w.bFiltered = true;
			w._iDisplayStart = 0;
			Ja(w);
			B(w);
			Ka(w, 0)
		}
		function pa(w) {
			for(var E = d.afnFiltering, G = 0, J = E.length; G < J; G++) for(var L = 0, K = 0, ea = w.aiDisplay.length; K < ea; K++) {
				var ga = w.aiDisplay[K - L];
				if(!E[G](w, w.aoData[ga]._aData, ga)) {
					w.aiDisplay.splice(K - L, 1);
					L++
				}
			}
		}
		function Ma(w, E, G, J, L) {
			if(E !== "") {
				var K = 0;
				E = eb(E, J, L);
				for(J = w.aiDisplay.length - 1; J >= 0; J--) {
					L = ib(w.aoData[w.aiDisplay[J]]._aData[G], w.aoColumns[G].sType);
					if(!E.test(L)) {
						w.aiDisplay.splice(J, 1);
						K++
					}
				}
			}
		}
		function oa(w, E, G, J, L) {
			var K = eb(E, J, L);
			if(typeof G == "undefined" || G === null) G = 0;
			if(d.afnFiltering.length !== 0) G = 1;
			if(E.length <= 0) {
				w.aiDisplay.splice(0, w.aiDisplay.length);
				w.aiDisplay = w.aiDisplayMaster.slice()
			} else if(w.aiDisplay.length == w.aiDisplayMaster.length || w.oPreviousSearch.sSearch.length > E.length || G == 1 || E.indexOf(w.oPreviousSearch.sSearch) !== 0) {
				w.aiDisplay.splice(0, w.aiDisplay.length);
				Ka(w, 1);
				for(G = 0; G < w.aiDisplayMaster.length; G++) K.test(w.asDataSearch[G]) && w.aiDisplay.push(w.aiDisplayMaster[G])
			} else {
				var ea = 0;
				for(G = 0; G < w.asDataSearch.length; G++) if(!K.test(w.asDataSearch[G])) {
					w.aiDisplay.splice(G - ea, 1);
					ea++
				}
			}
			w.oPreviousSearch.sSearch = E;
			w.oPreviousSearch.bRegex = J;
			w.oPreviousSearch.bSmart = L
		}
		function Ka(w, E) {
			w.asDataSearch.splice(0, w.asDataSearch.length);
			for(var G = typeof E != "undefined" && E == 1 ? w.aiDisplayMaster : w.aiDisplay, J = 0, L = G.length; J < L; J++) w.asDataSearch[J] = Za(w, w.aoData[G[J]]._aData)
		}
		function Za(w, E) {
			for(var G = "", J = g.createElement("div"), L = 0, K = w.aoColumns.length; L < K; L++) if(w.aoColumns[L].bSearchable) G += ib(E[L], w.aoColumns[L].sType) + "  ";
			if(G.indexOf("&") !== -1) {
				J.innerHTML = G;
				G = J.textContent ? J.textContent : J.innerText;
				G = G.replace(/\n/g, " ").replace(/\r/g, "")
			}
			return G
		}
		function eb(w, E, G) {
			if(G) {
				w = E ? w.split(" ") : zb(w).split(" ");
				w = "^(?=.*?" + w.join(")(?=.*?") + ").*$";
				return RegExp(w, "i")
			} else {
				w = E ? w : zb(w);
				return RegExp(w, "i")
			}
		}
		function ib(w, E) {
			if(typeof d.ofnSearch[E] == "function") return d.ofnSearch[E](w);
			else if(E == "html") return w.replace(/\n/g, " ").replace(/<.*?>/g, "");
			else if(typeof w == "string") return w.replace(/\n/g, " ");
			return w
		}
		function Ea(w, E) {
			var G, J, L, K, ea, ga, Ca = [],
				Ia = [],
				ab = d.oSort,
				gb = w.aoData,
				xb = w.aoColumns;
			if(!w.oFeatures.bServerSide && (w.aaSorting.length !== 0 || w.aaSortingFixed !== null)) {
				Ca = w.aaSortingFixed !== null ? w.aaSortingFixed.concat(w.aaSorting) : w.aaSorting.slice();
				for(L = 0; L < Ca.length; L++) {
					K = Ca[L][0];
					ea = V(w, K);
					ga = w.aoColumns[K].sSortDataType;
					if(typeof d.afnSortData[ga] != "undefined") {
						var Fb = d.afnSortData[ga](w, K, ea);
						ea = 0;
						for(ga = gb.length; ea < ga; ea++) gb[ea]._aData[K] = Fb[ea]
					}
				}
				L = 0;
				for(K = w.aiDisplayMaster.length; L < K; L++) Ia[w.aiDisplayMaster[L]] = L;
				var ub = Ca.length;
				w.aiDisplayMaster.sort(function(z, A) {
					var H;
					for(L = 0; L < ub; L++) {
						G = xb[Ca[L][0]].iDataSort;
						J = xb[G].sType;
						H = ab[J + "-" + Ca[L][1]](gb[z]._aData[G], gb[A]._aData[G]);
						if(H !== 0) return H
					}
					return ab["numeric-asc"](Ia[z], Ia[A])
				})
			}
			if(typeof E == "undefined" || E) db(w);
			w.bSorted = true;
			if(w.oFeatures.bFilter) ma(w, w.oPreviousSearch, 1);
			else {
				w.aiDisplay = w.aiDisplayMaster.slice();
				w._iDisplayStart = 0;
				Ja(w);
				B(w)
			}
		}
		function cb(w, E, G, J) {
			a(E).bind("click.DT", function(L) {
				if(w.aoColumns[G].bSortable !== false) {
					var K = function() {
							var ea, ga;
							if(L.shiftKey) {
								for(var Ca = false, Ia = 0; Ia < w.aaSorting.length; Ia++) if(w.aaSorting[Ia][0] == G) {
									Ca = true;
									ea = w.aaSorting[Ia][0];
									ga = w.aaSorting[Ia][2] + 1;
									if(typeof w.aoColumns[ea].asSorting[ga] == "undefined") w.aaSorting.splice(Ia, 1);
									else {
										w.aaSorting[Ia][1] = w.aoColumns[ea].asSorting[ga];
										w.aaSorting[Ia][2] = ga
									}
									break
								}
								Ca === false && w.aaSorting.push([G, w.aoColumns[G].asSorting[0], 0])
							} else if(w.aaSorting.length == 1 && w.aaSorting[0][0] == G) {
								ea = w.aaSorting[0][0];
								ga = w.aaSorting[0][2] + 1;
								if(typeof w.aoColumns[ea].asSorting[ga] == "undefined") ga = 0;
								w.aaSorting[0][1] = w.aoColumns[ea].asSorting[ga];
								w.aaSorting[0][2] = ga
							} else {
								w.aaSorting.splice(0, w.aaSorting.length);
								w.aaSorting.push([G, w.aoColumns[G].asSorting[0], 0])
							}
							Ea(w)
						};
					if(w.oFeatures.bProcessing) {
						Z(w, true);
						setTimeout(function() {
							K();
							w.oFeatures.bServerSide || Z(w, false)
						}, 0)
					} else K();
					typeof J == "function" && J(w)
				}
			})
		}
		function db(w) {
			var E, G, J, L, K, ea = w.aoColumns.length,
				ga = w.oClasses;
			for(E = 0; E < ea; E++) w.aoColumns[E].bSortable && a(w.aoColumns[E].nTh).removeClass(ga.sSortAsc + " " + ga.sSortDesc + " " + w.aoColumns[E].sSortingClass);
			L = w.aaSortingFixed !== null ? w.aaSortingFixed.concat(w.aaSorting) : w.aaSorting.slice();
			for(E = 0; E < w.aoColumns.length; E++) if(w.aoColumns[E].bSortable) {
				K = w.aoColumns[E].sSortingClass;
				J = -1;
				for(G = 0; G < L.length; G++) if(L[G][0] == E) {
					K = L[G][1] == "asc" ? ga.sSortAsc : ga.sSortDesc;
					J = G;
					break
				}
				a(w.aoColumns[E].nTh).addClass(K);
				if(w.bJUI) {
					G = a("span", w.aoColumns[E].nTh);
					G.removeClass(ga.sSortJUIAsc + " " + ga.sSortJUIDesc + " " + ga.sSortJUI + " " + ga.sSortJUIAscAllowed + " " + ga.sSortJUIDescAllowed);
					G.addClass(J == -1 ? w.aoColumns[E].sSortingClassJUI : L[J][1] == "asc" ? ga.sSortJUIAsc : ga.sSortJUIDesc)
				}
			} else a(w.aoColumns[E].nTh).addClass(w.aoColumns[E].sSortingClass);
			K = ga.sSortColumn;
			if(w.oFeatures.bSort && w.oFeatures.bSortClasses) {
				J = lb(w);
				if(J.length >= ea) for(E = 0; E < ea; E++) if(J[E].className.indexOf(K + "1") != -1) {
					G = 0;
					for(w = J.length / ea; G < w; G++) J[ea * G + E].className = a.trim(J[ea * G + E].className.replace(K + "1", ""))
				} else if(J[E].className.indexOf(K + "2") != -1) {
					G = 0;
					for(w = J.length / ea; G < w; G++) J[ea * G + E].className = a.trim(J[ea * G + E].className.replace(K + "2", ""))
				} else if(J[E].className.indexOf(K + "3") != -1) {
					G = 0;
					for(w = J.length / ea; G < w; G++) J[ea * G + E].className = a.trim(J[ea * G + E].className.replace(" " + K + "3", ""))
				}
				ga = 1;
				var Ca;
				for(E = 0; E < L.length; E++) {
					Ca = parseInt(L[E][0], 10);
					G = 0;
					for(w = J.length / ea; G < w; G++) J[ea * G + Ca].className += " " + K + ga;
					ga < 3 && ga++
				}
			}
		}
		function $a(w) {
			if(w.oScroll.bInfinite) return null;
			var E = g.createElement("div");
			E.className = w.oClasses.sPaging + w.sPaginationType;
			d.oPagination[w.sPaginationType].fnInit(w, E, function(G) {
				Ja(G);
				B(G)
			});
			typeof w.aanFeatures.p == "undefined" && w.aoDrawCallback.push({
				fn: function(G) {
					d.oPagination[G.sPaginationType].fnUpdate(G, function(J) {
						Ja(J);
						B(J)
					})
				},
				sName: "pagination"
			});
			return E
		}
		function qb(w, E) {
			var G = w._iDisplayStart;
			if(E == "first") w._iDisplayStart = 0;
			else if(E == "previous") {
				w._iDisplayStart = w._iDisplayLength >= 0 ? w._iDisplayStart - w._iDisplayLength : 0;
				if(w._iDisplayStart < 0) w._iDisplayStart = 0
			} else if(E == "next") if(w._iDisplayLength >= 0) {
				if(w._iDisplayStart + w._iDisplayLength < w.fnRecordsDisplay()) w._iDisplayStart += w._iDisplayLength
			} else w._iDisplayStart = 0;
			else if(E == "last") if(w._iDisplayLength >= 0) {
				var J = parseInt((w.fnRecordsDisplay() - 1) / w._iDisplayLength, 10) + 1;
				w._iDisplayStart = (J - 1) * w._iDisplayLength
			} else w._iDisplayStart = 0;
			else Y(w, 0, "Unknown paging action: " + E);
			return G != w._iDisplayStart
		}
		function wb(w) {
			var E = g.createElement("div");
			E.className = w.oClasses.sInfo;
			if(typeof w.aanFeatures.i == "undefined") {
				w.aoDrawCallback.push({
					fn: Oa,
					sName: "information"
				});
				w.sTableId !== "" && E.setAttribute("id", w.sTableId + "_info")
			}
			return E
		}
		function Oa(w) {
			if(!(!w.oFeatures.bInfo || w.aanFeatures.i.length === 0)) {
				var E = w._iDisplayStart + 1,
					G = w.fnDisplayEnd(),
					J = w.fnRecordsTotal(),
					L = w.fnRecordsDisplay(),
					K = w.fnFormatNumber(E),
					ea = w.fnFormatNumber(G),
					ga = w.fnFormatNumber(J),
					Ca = w.fnFormatNumber(L);
				if(w.oScroll.bInfinite) K = w.fnFormatNumber(1);
				K = w.fnRecordsDisplay() === 0 && w.fnRecordsDisplay() == w.fnRecordsTotal() ? w.oLanguage.sInfoEmpty + w.oLanguage.sInfoPostFix : w.fnRecordsDisplay() === 0 ? w.oLanguage.sInfoEmpty + " " + w.oLanguage.sInfoFiltered.replace("_MAX_", ga) + w.oLanguage.sInfoPostFix : w.fnRecordsDisplay() == w.fnRecordsTotal() ? w.oLanguage.sInfo.replace("_START_", K).replace("_END_", ea).replace("_TOTAL_", Ca) + w.oLanguage.sInfoPostFix : w.oLanguage.sInfo.replace("_START_", K).replace("_END_", ea).replace("_TOTAL_", Ca) + " " + w.oLanguage.sInfoFiltered.replace("_MAX_", w.fnFormatNumber(w.fnRecordsTotal())) + w.oLanguage.sInfoPostFix;
				if(w.oLanguage.fnInfoCallback !== null) K = w.oLanguage.fnInfoCallback(w, E, G, J, L, K);
				w = w.aanFeatures.i;
				E = 0;
				for(G = w.length; E < G; E++) a(w[E]).html(K)
			}
		}
		function O(w) {
			if(w.oScroll.bInfinite) return null;
			var E = '<select size="1" ' + (w.sTableId === "" ? "" : 'name="' + w.sTableId + '_length"') + ">",
				G, J;
			if(w.aLengthMenu.length == 2 && typeof w.aLengthMenu[0] == "object" && typeof w.aLengthMenu[1] == "object") {
				G = 0;
				for(J = w.aLengthMenu[0].length; G < J; G++) E += '<option value="' + w.aLengthMenu[0][G] + '">' + w.aLengthMenu[1][G] + "</option>"
			} else {
				G = 0;
				for(J = w.aLengthMenu.length; G < J; G++) E += '<option value="' + w.aLengthMenu[G] + '">' + w.aLengthMenu[G] + "</option>"
			}
			E += "</select>";
			var L = g.createElement("div");
			w.sTableId !== "" && typeof w.aanFeatures.l == "undefined" && L.setAttribute("id", w.sTableId + "_length");
			L.className = w.oClasses.sLength;
			L.innerHTML = w.oLanguage.sLengthMenu.replace("_MENU_", E);
			a('select option[value="' + w._iDisplayLength + '"]', L).attr("selected", true);
			a("select", L).bind("change.DT", function() {
				var K = a(this).val(),
					ea = w.aanFeatures.l;
				G = 0;
				for(J = ea.length; G < J; G++) ea[G] != this.parentNode && a("select", ea[G]).val(K);
				w._iDisplayLength = parseInt(K, 10);
				Ja(w);
				if(w.fnDisplayEnd() == w.fnRecordsDisplay()) {
					w._iDisplayStart = w.fnDisplayEnd() - w._iDisplayLength;
					if(w._iDisplayStart < 0) w._iDisplayStart = 0
				}
				if(w._iDisplayLength == -1) w._iDisplayStart = 0;
				B(w)
			});
			return L
		}
		function S(w) {
			var E = g.createElement("div");
			w.sTableId !== "" && typeof w.aanFeatures.r == "undefined" && E.setAttribute("id", w.sTableId + "_processing");
			E.innerHTML = w.oLanguage.sProcessing;
			E.className = w.oClasses.sProcessing;
			w.nTable.parentNode.insertBefore(E, w.nTable);
			return E
		}
		function Z(w, E) {
			if(w.oFeatures.bProcessing) for(var G = w.aanFeatures.r, J = 0, L = G.length; J < L; J++) G[J].style.visibility = E ? "visible" : "hidden"
		}
		function fa(w, E) {
			for(var G = -1, J = 0; J < w.aoColumns.length; J++) {
				w.aoColumns[J].bVisible === true && G++;
				if(G == E) return J
			}
			return null
		}
		function V(w, E) {
			for(var G = -1, J = 0; J < w.aoColumns.length; J++) {
				w.aoColumns[J].bVisible === true && G++;
				if(J == E) return w.aoColumns[J].bVisible === true ? G : null
			}
			return null
		}

		function Da(w, E) {
			var G, J;
			G = w._iDisplayStart;
			for(J = w._iDisplayEnd; G < J; G++) if(w.aoData[w.aiDisplay[G]].nTr == E) return w.aiDisplay[G];
			G = 0;
			for(J = w.aoData.length; G < J; G++) if(w.aoData[G].nTr == E) return G;
			return null
		}
		function ya(w) {
			for(var E = 0, G = 0; G < w.aoColumns.length; G++) w.aoColumns[G].bVisible === true && E++;
			return E
		}
		function Ja(w) {
			w._iDisplayEnd = w.oFeatures.bPaginate === false ? w.aiDisplay.length : w._iDisplayStart + w._iDisplayLength > w.aiDisplay.length || w._iDisplayLength == -1 ? w.aiDisplay.length : w._iDisplayStart + w._iDisplayLength
		}

		function ra(w, E) {
			if(!w || w === null || w === "") return 0;
			if(typeof E == "undefined") E = g.getElementsByTagName("body")[0];
			var G, J = g.createElement("div");
			J.style.width = w;
			E.appendChild(J);
			G = J.offsetWidth;
			E.removeChild(J);
			return G
		}
		function Na(w) {
			var E = 0,
				G, J = 0,
				L = w.aoColumns.length,
				K, ea = a("th", w.nTHead);
			for(K = 0; K < L; K++) if(w.aoColumns[K].bVisible) {
				J++;
				if(w.aoColumns[K].sWidth !== null) {
					G = ra(w.aoColumns[K].sWidthOrig, w.nTable.parentNode);
					if(G !== null) w.aoColumns[K].sWidth = Pa(G);
					E++
				}
			}
			if(L == ea.length && E === 0 && J == L && w.oScroll.sX === "" && w.oScroll.sY === "") for(K = 0; K < w.aoColumns.length; K++) {
				G = a(ea[K]).width();
				if(G !== null) w.aoColumns[K].sWidth = Pa(G)
			} else {
				E = w.nTable.cloneNode(false);
				K = g.createElement("tbody");
				G = g.createElement("tr");
				E.removeAttribute("id");
				E.appendChild(w.nTHead.cloneNode(true));
				if(w.nTFoot !== null) {
					E.appendChild(w.nTFoot.cloneNode(true));
					ua(function(ga) {
						ga.style.width = ""
					}, E.getElementsByTagName("tr"))
				}
				E.appendChild(K);
				K.appendChild(G);
				K = a("thead th", E);
				if(K.length === 0) K = a("tbody tr:eq(0)>td", E);
				K.each(function(ga) {
					this.style.width = "";
					ga = fa(w, ga);
					if(ga !== null && w.aoColumns[ga].sWidthOrig !== "") this.style.width = w.aoColumns[ga].sWidthOrig
				});
				for(K = 0; K < L; K++) if(w.aoColumns[K].bVisible) {
					J = fb(w, K);
					if(J !== null) {
						J = J.cloneNode(true);
						G.appendChild(J)
					}
				}
				K = w.nTable.parentNode;
				K.appendChild(E);
				if(w.oScroll.sX !== "" && w.oScroll.sXInner !== "") E.style.width = Pa(w.oScroll.sXInner);
				else if(w.oScroll.sX !== "") {
					E.style.width = "";
					if(a(E).width() < K.offsetWidth) E.style.width = Pa(K.offsetWidth)
				} else if(w.oScroll.sY !== "") E.style.width = Pa(K.offsetWidth);
				E.style.visibility = "hidden";
				Ua(w, E);
				L = a("tbody tr:eq(0)>td", E);
				if(L.length === 0) L = a("thead tr:eq(0)>th", E);
				for(K = G = 0; K < w.aoColumns.length; K++) if(w.aoColumns[K].bVisible) {
					J = a(L[G]).outerWidth();
					if(J !== null && J > 0) w.aoColumns[K].sWidth = Pa(J);
					G++
				}
				w.nTable.style.width = Pa(a(E).outerWidth());
				E.parentNode.removeChild(E)
			}
		}
		function Ua(w, E) {
			if(w.oScroll.sX === "" && w.oScroll.sY !== "") {
				a(E).width();
				E.style.width = Pa(a(E).outerWidth() - w.oScroll.iBarWidth)
			} else if(w.oScroll.sX !== "") E.style.width = Pa(a(E).outerWidth())
		}
		function fb(w, E, G) {
			if(typeof G == "undefined" || G) {
				G = Fa(w, E);
				E = V(w, E);
				if(G < 0) return null;
				return w.aoData[G].nTr.getElementsByTagName("td")[E]
			}
			var J = -1,
				L, K;
			G = -1;
			var ea = g.createElement("div");
			ea.style.visibility = "hidden";
			ea.style.position = "absolute";
			g.body.appendChild(ea);
			L = 0;
			for(K = w.aoData.length; L < K; L++) {
				ea.innerHTML = w.aoData[L]._aData[E];
				if(ea.offsetWidth > J) {
					J = ea.offsetWidth;
					G = L
				}
			}
			g.body.removeChild(ea);
			if(G >= 0) {
				E = V(w, E);
				if(w = w.aoData[G].nTr.getElementsByTagName("td")[E]) return w
			}
			return null
		}
		function Fa(w, E) {
			for(var G = -1, J = -1, L = 0; L < w.aoData.length; L++) {
				var K = w.aoData[L]._aData[E];
				if(K.length > G) {
					G = K.length;
					J = L
				}
			}
			return J
		}
		function Pa(w) {
			if(w === null) return "0px";
			if(typeof w == "number") {
				if(w < 0) return "0px";
				return w + "px"
			}
			var E = w.charCodeAt(w.length - 1);
			if(E < 48 || E > 57) return w;
			return w + "px"
		}
		function nb(w) {
			for(var E = d.aTypes, G = E.length, J = 0; J < G; J++) {
				var L = E[J](w);
				if(L !== null) return L
			}
			return "string"
		}
		function kb(w) {
			for(var E = 0; E < c.length; E++) if(c[E].nTable == w) return c[E];
			return null
		}
		function ob(w) {
			for(var E = [], G = w.aoData.length, J = 0; J < G; J++) E.push(w.aoData[J]._aData);
			return E
		}
		function vb(w) {
			for(var E = [], G = w.aoData.length, J = 0; J < G; J++) E.push(w.aoData[J].nTr);
			return E
		}
		function lb(w) {
			var E = vb(w),
				G = [],
				J, L = [],
				K, ea, ga, Ca;
			K = 0;
			for(ea = E.length; K < ea; K++) {
				G = [];
				ga = 0;
				for(Ca = E[K].childNodes.length; ga < Ca; ga++) {
					J = E[K].childNodes[ga];
					J.nodeName.toUpperCase() == "TD" && G.push(J)
				}
				ga = J = 0;
				for(Ca = w.aoColumns.length; ga < Ca; ga++) if(w.aoColumns[ga].bVisible) L.push(G[ga - J]);
				else {
					L.push(w.aoData[K]._anHidden[ga]);
					J++
				}
			}
			return L
		}
		function zb(w) {
			return w.replace(RegExp("(\\/|\\.|\\*|\\+|\\?|\\||\\(|\\)|\\[|\\]|\\{|\\}|\\\\|\\$|\\^)", "g"), "\\$1")
		}
		function Gb(w, E) {
			for(var G = -1, J = 0, L = w.length; J < L; J++) if(w[J] == E) G = J;
			else w[J] > E && w[J]--;
			G != -1 && w.splice(G, 1)
		}
		function R(w, E) {
			for(var G = E.split(","), J = [], L = 0, K = w.aoColumns.length; L < K; L++) for(var ea = 0; ea < K; ea++) if(w.aoColumns[L].sName == G[ea]) {
				J.push(ea);
				break
			}
			return J
		}
		function ca(w) {
			for(var E = "", G = 0, J = w.aoColumns.length; G < J; G++) E += w.aoColumns[G].sName + ",";
			if(E.length == J) return "";
			return E.slice(0, -1)
		}
		function Y(w, E, G) {
			w = w.sTableId === "" ? "DataTables warning: " + G : "DataTables warning (table id = '" + w.sTableId + "'): " + G;
			if(E === 0) if(d.sErrMode == "alert") alert(w);
			else throw w;
			else typeof console != "undefined" && typeof console.log != "undefined" && console.log(w)
		}
		function da(w) {
			w.aoData.splice(0, w.aoData.length);
			w.aiDisplayMaster.splice(0, w.aiDisplayMaster.length);
			w.aiDisplay.splice(0, w.aiDisplay.length);
			Ja(w)
		}
		function ba(w) {
			if(!(!w.oFeatures.bStateSave || typeof w.bDestroying != "undefined")) {
				var E, G, J, L = "{";
				L += '"iCreate":' + (new Date).getTime() + ",";
				L += '"iStart":' + w._iDisplayStart + ",";
				L += '"iEnd":' + w._iDisplayEnd + ",";
				L += '"iLength":' + w._iDisplayLength + ",";
				L += '"sFilter":"' + encodeURIComponent(w.oPreviousSearch.sSearch) + '",';
				L += '"sFilterEsc":' + !w.oPreviousSearch.bRegex + ",";
				L += '"aaSorting":[ ';
				for(E = 0; E < w.aaSorting.length; E++) L += "[" + w.aaSorting[E][0] + ',"' + w.aaSorting[E][1] + '"],';
				L = L.substring(0, L.length - 1);
				L += "],";
				L += '"aaSearchCols":[ ';
				for(E = 0; E < w.aoPreSearchCols.length; E++) L += '["' + encodeURIComponent(w.aoPreSearchCols[E].sSearch) + '",' + !w.aoPreSearchCols[E].bRegex + "],";
				L = L.substring(0, L.length - 1);
				L += "],";
				L += '"abVisCols":[ ';
				for(E = 0; E < w.aoColumns.length; E++) L += w.aoColumns[E].bVisible + ",";
				L = L.substring(0, L.length - 1);
				L += "]";
				E = 0;
				for(G = w.aoStateSave.length; E < G; E++) {
					J = w.aoStateSave[E].fn(w, L);
					if(J !== "") L = J
				}
				L += "}";
				na(w.sCookiePrefix + w.sInstance, L, w.iCookieDuration, w.sCookiePrefix, w.fnCookieCallback)
			}
		}
		function la(w, E) {
			if(w.oFeatures.bStateSave) {
				var G, J, L;
				J = xa(w.sCookiePrefix + w.sInstance);
				if(J !== null && J !== "") {
					try {
						G = typeof a.parseJSON == "function" ? a.parseJSON(J.replace(/'/g, '"')) : eval("(" + J + ")")
					} catch(K) {
						return
					}
					J = 0;
					for(L = w.aoStateLoad.length; J < L; J++) if(!w.aoStateLoad[J].fn(w, G)) return;
					w.oLoadedState = a.extend(true, {}, G);
					w._iDisplayStart = G.iStart;
					w.iInitDisplayStart = G.iStart;
					w._iDisplayEnd = G.iEnd;
					w._iDisplayLength = G.iLength;
					w.oPreviousSearch.sSearch = decodeURIComponent(G.sFilter);
					w.aaSorting = G.aaSorting.slice();
					w.saved_aaSorting = G.aaSorting.slice();
					if(typeof G.sFilterEsc != "undefined") w.oPreviousSearch.bRegex = !G.sFilterEsc;
					if(typeof G.aaSearchCols != "undefined") for(J = 0; J < G.aaSearchCols.length; J++) w.aoPreSearchCols[J] = {
						sSearch: decodeURIComponent(G.aaSearchCols[J][0]),
						bRegex: !G.aaSearchCols[J][1]
					};
					if(typeof G.abVisCols != "undefined") {
						E.saved_aoColumns = [];
						for(J = 0; J < G.abVisCols.length; J++) {
							E.saved_aoColumns[J] = {};
							E.saved_aoColumns[J].bVisible = G.abVisCols[J]
						}
					}
				}
			}
		}
		function na(w, E, G, J, L) {
			var K = new Date;
			K.setTime(K.getTime() + G * 1E3);
			G = e.location.pathname.split("/");
			w = w + "_" + G.pop().replace(/[\/:]/g, "").toLowerCase();
			var ea;
			if(L !== null) {
				ea = typeof a.parseJSON == "function" ? a.parseJSON(E) : eval("(" + E + ")");
				E = L(w, ea, K.toGMTString(), G.join("/") + "/")
			} else E = w + "=" + encodeURIComponent(E) + "; expires=" + K.toGMTString() + "; path=" + G.join("/") + "/";
			L = "";
			K = 9999999999999;
			if((xa(w) !== null ? g.cookie.length : E.length + g.cookie.length) + 10 > 4096) {
				w = g.cookie.split(";");
				for(var ga = 0, Ca = w.length; ga < Ca; ga++) if(w[ga].indexOf(J) != -1) {
					var Ia = w[ga].split("=");
					try {
						ea = eval("(" + decodeURIComponent(Ia[1]) + ")")
					} catch(ab) {
						continue
					}
					if(typeof ea.iCreate != "undefined" && ea.iCreate < K) {
						L = Ia[0];
						K = ea.iCreate
					}
				}
				if(L !== "") g.cookie = L + "=; expires=Thu, 01-Jan-1970 00:00:01 GMT; path=" + G.join("/") + "/"
			}
			g.cookie = E
		}
		function xa(w) {
			var E = e.location.pathname.split("/");
			w = w + "_" + E[E.length - 1].replace(/[\/:]/g, "").toLowerCase() + "=";
			E = g.cookie.split(";");
			for(var G = 0; G < E.length; G++) {
				for(var J = E[G]; J.charAt(0) == " ";) J = J.substring(1, J.length);
				if(J.indexOf(w) === 0) return decodeURIComponent(J.substring(w.length, J.length))
			}
			return null
		}
		function sa(w) {
			w = w.getElementsByTagName("tr");
			if(w.length == 1) return w[0].getElementsByTagName("th");
			var E = [],
				G = [],
				J, L, K, ea, ga, Ca, Ia = function(z, A, H) {
					for(; typeof z[A][H] != "undefined";) H++;
					return H
				},
				ab = function(z) {
					if(typeof E[z] == "undefined") E[z] = []
				};
			J = 0;
			for(ea = w.length; J < ea; J++) {
				ab(J);
				var gb = 0,
					xb = [];
				L = 0;
				for(ga = w[J].childNodes.length; L < ga; L++) if(w[J].childNodes[L].nodeName.toUpperCase() == "TD" || w[J].childNodes[L].nodeName.toUpperCase() == "TH") xb.push(w[J].childNodes[L]);
				L = 0;
				for(ga = xb.length; L < ga; L++) {
					var Fb = xb[L].getAttribute("colspan") * 1,
						ub = xb[L].getAttribute("rowspan") * 1;
					if(!Fb || Fb === 0 || Fb === 1) {
						Ca = Ia(E, J, gb);
						E[J][Ca] = xb[L].nodeName.toUpperCase() == "TD" ? 4 : xb[L];
						if(ub || ub === 0 || ub === 1) for(K = 1; K < ub; K++) {
							ab(J + K);
							E[J + K][Ca] = 2
						}
						gb++
					} else {
						Ca = Ia(E, J, gb);
						for(K = 0; K < Fb; K++) E[J][Ca + K] = 3;
						gb += Fb
					}
				}
			}
			J = 0;
			for(ea = E.length; J < ea; J++) {
				L = 0;
				for(ga = E[J].length; L < ga; L++) if(typeof E[J][L] == "object" && typeof G[L] == "undefined") G[L] = E[J][L]
			}
			return G
		}
		function za() {
			var w = g.createElement("p"),
				E = w.style;
			E.width = "100%";
			E.height = "200px";
			var G = g.createElement("div");
			E = G.style;
			E.position = "absolute";
			E.top = "0px";
			E.left = "0px";
			E.visibility = "hidden";
			E.width = "200px";
			E.height = "150px";
			E.overflow = "hidden";
			G.appendChild(w);
			g.body.appendChild(G);
			E = w.offsetWidth;
			G.style.overflow = "scroll";
			w = w.offsetWidth;
			if(E == w) w = G.clientWidth;
			g.body.removeChild(G);
			return E - w
		}
		function ua(w, E, G) {
			for(var J = 0, L = E.length; J < L; J++) for(var K = 0, ea = E[J].childNodes.length; K < ea; K++) if(E[J].childNodes[K].nodeType == 1) typeof G != "undefined" ? w(E[J].childNodes[K], G[J].childNodes[K]) : w(E[J].childNodes[K])
		}
		function qa(w, E, G, J) {
			if(typeof J == "undefined") J = G;
			if(typeof E[G] != "undefined") w[J] = E[G]
		}
		this.oApi = {};
		this.fnDraw = function(w) {
			var E = kb(this[d.iApiIndex]);
			if(typeof w != "undefined" && w === false) {
				Ja(E);
				B(E)
			} else u(E)
		};
		this.fnFilter = function(w, E, G, J, L) {
			var K = kb(this[d.iApiIndex]);
			if(K.oFeatures.bFilter) {
				if(typeof G == "undefined") G = false;
				if(typeof J == "undefined") J = true;
				if(typeof L == "undefined") L = true;
				if(typeof E == "undefined" || E === null) {
					ma(K, {
						sSearch: w,
						bRegex: G,
						bSmart: J
					}, 1);
					if(L && typeof K.aanFeatures.f != "undefined") {
						E = K.aanFeatures.f;
						G = 0;
						for(J = E.length; G < J; G++) a("input", E[G]).val(w)
					}
				} else {
					K.aoPreSearchCols[E].sSearch = w;
					K.aoPreSearchCols[E].bRegex = G;
					K.aoPreSearchCols[E].bSmart = J;
					ma(K, K.oPreviousSearch, 1)
				}
			}
		};
		this.fnSettings = function() {
			return kb(this[d.iApiIndex])
		};
		this.fnVersionCheck = d.fnVersionCheck;
		this.fnSort = function(w) {
			var E = kb(this[d.iApiIndex]);
			E.aaSorting = w;
			Ea(E)
		};
		this.fnSortListener = function(w, E, G) {
			cb(kb(this[d.iApiIndex]), w, E, G)
		};
		this.fnAddData = function(w, E) {
			if(w.length === 0) return [];
			var G = [],
				J, L = kb(this[d.iApiIndex]);
			if(typeof w[0] == "object") for(var K = 0; K < w.length; K++) {
				J = x(L, w[K]);
				if(J == -1) return G;
				G.push(J)
			} else {
				J = x(L, w);
				if(J == -1) return G;
				G.push(J)
			}
			L.aiDisplay = L.aiDisplayMaster.slice();
			if(typeof E == "undefined" || E) u(L);
			return G
		};
		this.fnDeleteRow = function(w, E, G) {
			var J = kb(this[d.iApiIndex]);
			w = typeof w == "object" ? Da(J, w) : w;
			var L = J.aoData.splice(w, 1),
				K = a.inArray(w, J.aiDisplay);
			J.asDataSearch.splice(K, 1);
			Gb(J.aiDisplayMaster, w);
			Gb(J.aiDisplay, w);
			typeof E == "function" && E.call(this, J, L);
			if(J._iDisplayStart >= J.aiDisplay.length) {
				J._iDisplayStart -= J._iDisplayLength;
				if(J._iDisplayStart < 0) J._iDisplayStart = 0
			}
			if(typeof G == "undefined" || G) {
				Ja(J);
				B(J)
			}
			return L
		};
		this.fnClearTable = function(w) {
			var E = kb(this[d.iApiIndex]);
			da(E);
			if(typeof w == "undefined" || w) B(E)
		};
		this.fnOpen = function(w, E, G) {
			var J = kb(this[d.iApiIndex]);
			this.fnClose(w);
			var L = g.createElement("tr"),
				K = g.createElement("td");
			L.appendChild(K);
			K.className = G;
			K.colSpan = ya(J);
			K.innerHTML = E;
			E = a("tr", J.nTBody);
			a.inArray(w, E) != -1 && a(L).insertAfter(w);
			J.aoOpenRows.push({
				nTr: L,
				nParent: w
			});
			return L
		};
		this.fnClose = function(w) {
			for(var E = kb(this[d.iApiIndex]), G = 0; G < E.aoOpenRows.length; G++) if(E.aoOpenRows[G].nParent == w) {
				(w = E.aoOpenRows[G].nTr.parentNode) && w.removeChild(E.aoOpenRows[G].nTr);
				E.aoOpenRows.splice(G, 1);
				return 0
			}
			return 1
		};
		this.fnGetData = function(w) {
			var E = kb(this[d.iApiIndex]);
			if(typeof w != "undefined") {
				w = typeof w == "object" ? Da(E, w) : w;
				return E.aoData[w] ? E.aoData[w]._aData : null
			}
			return ob(E)
		};
		this.fnGetNodes = function(w) {
			var E = kb(this[d.iApiIndex]);
			if(typeof w != "undefined") return E.aoData[w] ? E.aoData[w].nTr : null;
			return vb(E)
		};
		this.fnGetPosition = function(w) {
			var E = kb(this[d.iApiIndex]);
			if(w.nodeName.toUpperCase() == "TR") return Da(E, w);
			else if(w.nodeName.toUpperCase() == "TD") for(var G = Da(E, w.parentNode), J = 0, L = 0; L < E.aoColumns.length; L++) if(E.aoColumns[L].bVisible) {
				if(E.aoData[G].nTr.getElementsByTagName("td")[L - J] == w) return [G, L - J, L]
			} else J++;
			return null
		};
		this.fnUpdate = function(w, E, G, J, L) {
			var K = kb(this[d.iApiIndex]),
				ea, ga;
			E = typeof E == "object" ? Da(K, E) : E;
			if(typeof w != "object") {
				ga = w;
				K.aoData[E]._aData[G] = ga;
				if(K.aoColumns[G].fnRender !== null) {
					ga = K.aoColumns[G].fnRender({
						iDataRow: E,
						iDataColumn: G,
						aData: K.aoData[E]._aData,
						oSettings: K
					});
					if(K.aoColumns[G].bUseRendered) K.aoData[E]._aData[G] = ga
				}
				ea = V(K, G);
				if(ea !== null) K.aoData[E].nTr.getElementsByTagName("td")[ea].innerHTML = ga;
				else K.aoData[E]._anHidden[G].innerHTML = ga
			} else {
				if(w.length != K.aoColumns.length) {
					Y(K, 0, "An array passed to fnUpdate must have the same number of columns as the table in question - in this case " + K.aoColumns.length);
					return 1
				}
				for(G = 0; G < w.length; G++) {
					ga = w[G];
					K.aoData[E]._aData[G] = ga;
					if(K.aoColumns[G].fnRender !== null) {
						ga = K.aoColumns[G].fnRender({
							iDataRow: E,
							iDataColumn: G,
							aData: K.aoData[E]._aData,
							oSettings: K
						});
						if(K.aoColumns[G].bUseRendered) K.aoData[E]._aData[G] = ga
					}
					ea = V(K, G);
					if(ea !== null) K.aoData[E].nTr.getElementsByTagName("td")[ea].innerHTML = ga;
					else K.aoData[E]._anHidden[G].innerHTML = ga
				}
			}
			w = a.inArray(E, K.aiDisplay);
			K.asDataSearch[w] = Za(K, K.aoData[E]._aData);
			if(typeof L == "undefined" || L) N(K);
			if(typeof J == "undefined" || J) u(K);
			return 0
		};
		this.fnSetColumnVis = function(w, E, G) {
			var J = kb(this[d.iApiIndex]),
				L, K;
			K = J.aoColumns.length;
			var ea, ga, Ca, Ia, ab;
			if(J.aoColumns[w].bVisible != E) {
				Ia = a(">tr", J.nTHead)[0];
				ea = a(">tr", J.nTFoot)[0];
				ab = [];
				ga = [];
				for(L = 0; L < K; L++) {
					ab.push(J.aoColumns[L].nTh);
					ga.push(J.aoColumns[L].nTf)
				}
				if(E) {
					for(L = E = 0; L < w; L++) J.aoColumns[L].bVisible && E++;
					if(E >= ya(J)) {
						Ia.appendChild(ab[w]);
						Ia = a(">tr", J.nTHead);
						L = 1;
						for(K = Ia.length; L < K; L++) Ia[L].appendChild(J.aoColumns[w].anThExtra[L - 1]);
						if(ea) {
							ea.appendChild(ga[w]);
							Ia = a(">tr", J.nTFoot);
							L = 1;
							for(K = Ia.length; L < K; L++) Ia[L].appendChild(J.aoColumns[w].anTfExtra[L - 1])
						}
						L = 0;
						for(K = J.aoData.length; L < K; L++) {
							ea = J.aoData[L]._anHidden[w];
							J.aoData[L].nTr.appendChild(ea)
						}
					} else {
						for(L = w; L < K; L++) {
							Ca = V(J, L);
							if(Ca !== null) break
						}
						Ia.insertBefore(ab[w], Ia.getElementsByTagName("th")[Ca]);
						Ia = a(">tr", J.nTHead);
						L = 1;
						for(K = Ia.length; L < K; L++) {
							ab = a(Ia[L]).children();
							Ia[L].insertBefore(J.aoColumns[w].anThExtra[L - 1], ab[Ca])
						}
						if(ea) {
							ea.insertBefore(ga[w], ea.getElementsByTagName("th")[Ca]);
							Ia = a(">tr", J.nTFoot);
							L = 1;
							for(K = Ia.length; L < K; L++) {
								ab = a(Ia[L]).children();
								Ia[L].insertBefore(J.aoColumns[w].anTfExtra[L - 1], ab[Ca])
							}
						}
						lb(J);
						L = 0;
						for(K = J.aoData.length; L < K; L++) {
							ea = J.aoData[L]._anHidden[w];
							J.aoData[L].nTr.insertBefore(ea, a(">td:eq(" + Ca + ")", J.aoData[L].nTr)[0])
						}
					}
					J.aoColumns[w].bVisible = true
				} else {
					Ia.removeChild(ab[w]);
					L = 0;
					for(K = J.aoColumns[w].anThExtra.length; L < K; L++) {
						Ca = J.aoColumns[w].anThExtra[L];
						Ca.parentNode.removeChild(Ca)
					}
					if(ea) {
						ea.removeChild(ga[w]);
						L = 0;
						for(K = J.aoColumns[w].anTfExtra.length; L < K; L++) {
							Ca = J.aoColumns[w].anTfExtra[L];
							Ca.parentNode.removeChild(Ca)
						}
					}
					ga = lb(J);
					L = 0;
					for(K = J.aoData.length; L < K; L++) {
						ea = ga[L * J.aoColumns.length + w * 1];
						J.aoData[L]._anHidden[w] = ea;
						ea.parentNode.removeChild(ea)
					}
					J.aoColumns[w].bVisible = false
				}
				L = 0;
				for(K = J.aoOpenRows.length; L < K; L++) J.aoOpenRows[L].nTr.colSpan = ya(J);
				if(typeof G == "undefined" || G) {
					N(J);
					B(J)
				}
				ba(J)
			}
		};
		this.fnPageChange = function(w, E) {
			var G = kb(this[d.iApiIndex]);
			qb(G, w);
			Ja(G);
			if(typeof E == "undefined" || E) B(G)
		};
		this.fnDestroy = function() {
			var w = kb(this[d.iApiIndex]),
				E = w.nTableWrapper.parentNode,
				G = w.nTBody,
				J, L;
			w.bDestroying = true;
			a(w.nTableWrapper).find("*").andSelf().unbind(".DT");
			J = 0;
			for(L = w.aoColumns.length; J < L; J++) w.aoColumns[J].bVisible === false && this.fnSetColumnVis(J, true);
			a("tbody>tr>td." + w.oClasses.sRowEmpty, w.nTable).parent().remove();
			if(w.nTable != w.nTHead.parentNode) {
				a(">thead", w.nTable).remove();
				w.nTable.appendChild(w.nTHead)
			}
			if(w.nTFoot && w.nTable != w.nTFoot.parentNode) {
				a(">tfoot", w.nTable).remove();
				w.nTable.appendChild(w.nTFoot)
			}
			w.nTable.parentNode.removeChild(w.nTable);
			a(w.nTableWrapper).remove();
			w.aaSorting = [];
			w.aaSortingFixed = [];
			db(w);
			a(vb(w)).removeClass(w.asStripClasses.join(" "));
			if(w.bJUI) {
				a("th", w.nTHead).removeClass([d.oStdClasses.sSortable, d.oJUIClasses.sSortableAsc, d.oJUIClasses.sSortableDesc, d.oJUIClasses.sSortableNone].join(" "));
				a("th span", w.nTHead).remove()
			} else a("th", w.nTHead).removeClass([d.oStdClasses.sSortable, d.oStdClasses.sSortableAsc, d.oStdClasses.sSortableDesc, d.oStdClasses.sSortableNone].join(" "));
			E.appendChild(w.nTable);
			J = 0;
			for(L = w.aoData.length; J < L; J++) G.appendChild(w.aoData[J].nTr);
			w.nTable.style.width = Pa(w.sDestroyWidth);
			a(">tr:even", G).addClass(w.asDestoryStrips[0]);
			a(">tr:odd", G).addClass(w.asDestoryStrips[1]);
			J = 0;
			for(L = c.length; J < L; J++) c[J] == w && c.splice(J, 1)
		};
		this.fnAdjustColumnSizing = function(w) {
			var E = kb(this[d.iApiIndex]);
			N(E);
			if(typeof w == "undefined" || w) this.fnDraw(false);
			else if(E.oScroll.sX !== "" || E.oScroll.sY !== "") this.oApi._fnScrollDraw(E)
		};
		for(var La in d.oApi) if(La) this[La] = j(La);
		this.oApi._fnExternApiFunc = j;
		this.oApi._fnInitalise = n;
		this.oApi._fnLanguageProcess = o;
		this.oApi._fnAddColumn = q;
		this.oApi._fnColumnOptions = v;
		this.oApi._fnAddData = x;
		this.oApi._fnGatherData = y;
		this.oApi._fnDrawHead = D;
		this.oApi._fnDraw = B;
		this.oApi._fnReDraw = u;
		this.oApi._fnAjaxUpdate = F;
		this.oApi._fnAjaxUpdateDraw = I;
		this.oApi._fnAddOptionsHtml = C;
		this.oApi._fnFeatureHtmlTable = M;
		this.oApi._fnScrollDraw = Q;
		this.oApi._fnAjustColumnSizing = N;
		this.oApi._fnFeatureHtmlFilter = X;
		this.oApi._fnFilterComplete = ma;
		this.oApi._fnFilterCustom = pa;
		this.oApi._fnFilterColumn = Ma;
		this.oApi._fnFilter = oa;
		this.oApi._fnBuildSearchArray = Ka;
		this.oApi._fnBuildSearchRow = Za;
		this.oApi._fnFilterCreateSearch = eb;
		this.oApi._fnDataToSearch = ib;
		this.oApi._fnSort = Ea;
		this.oApi._fnSortAttachListener = cb;
		this.oApi._fnSortingClasses = db;
		this.oApi._fnFeatureHtmlPaginate = $a;
		this.oApi._fnPageChange = qb;
		this.oApi._fnFeatureHtmlInfo = wb;
		this.oApi._fnUpdateInfo = Oa;
		this.oApi._fnFeatureHtmlLength = O;
		this.oApi._fnFeatureHtmlProcessing = S;
		this.oApi._fnProcessingDisplay = Z;
		this.oApi._fnVisibleToColumnIndex = fa;
		this.oApi._fnColumnIndexToVisible = V;
		this.oApi._fnNodeToDataIndex = Da;
		this.oApi._fnVisbleColumns = ya;
		this.oApi._fnCalculateEnd = Ja;
		this.oApi._fnConvertToWidth = ra;
		this.oApi._fnCalculateColumnWidths = Na;
		this.oApi._fnScrollingWidthAdjust = Ua;
		this.oApi._fnGetWidestNode = fb;
		this.oApi._fnGetMaxLenString = Fa;
		this.oApi._fnStringToCss = Pa;
		this.oApi._fnArrayCmp = function(w, E) {
			if(w.length != E.length) return 1;
			for(var G = 0; G < w.length; G++) if(w[G] != E[G]) return 2;
			return 0
		};
		this.oApi._fnDetectType = nb;
		this.oApi._fnSettingsFromNode = kb;
		this.oApi._fnGetDataMaster = ob;
		this.oApi._fnGetTrNodes = vb;
		this.oApi._fnGetTdNodes = lb;
		this.oApi._fnEscapeRegex = zb;
		this.oApi._fnDeleteIndex = Gb;
		this.oApi._fnReOrderIndex = R;
		this.oApi._fnColumnOrdering = ca;
		this.oApi._fnLog = Y;
		this.oApi._fnClearTable = da;
		this.oApi._fnSaveState = ba;
		this.oApi._fnLoadState = la;
		this.oApi._fnCreateCookie = na;
		this.oApi._fnReadCookie = xa;
		this.oApi._fnGetUniqueThs = sa;
		this.oApi._fnScrollBarWidth = za;
		this.oApi._fnApplyToChildren = ua;
		this.oApi._fnMap = qa;
		var Sa = this;
		return this.each(function() {
			var w = 0,
				E, G, J, L;
			w = 0;
			for(E = c.length; w < E; w++) {
				if(c[w].nTable == this) if(typeof b == "undefined" || typeof b.bRetrieve != "undefined" && b.bRetrieve === true) return c[w].oInstance;
				else if(typeof b.bDestroy != "undefined" && b.bDestroy === true) {
					c[w].oInstance.fnDestroy();
					break
				} else {
					Y(c[w], 0, "Cannot reinitialise DataTable.\n\nTo retrieve the DataTables object for this table, please pass either no arguments to the dataTable() function, or set bRetrieve to true. Alternatively, to destory the old table and create a new one, set bDestroy to true (note that a lot of changes to the configuration can be made through the API which is usually much faster).");
					return
				}
				if(c[w].sTableId !== "" && c[w].sTableId == this.getAttribute("id")) {
					c.splice(w, 1);
					break
				}
			}
			var K = new f;
			c.push(K);
			var ea = false,
				ga = false;
			w = this.getAttribute("id");
			if(w !== null) {
				K.sTableId = w;
				K.sInstance = w
			} else K.sInstance = d._oExternConfig.iNextUnique++;
			if(this.nodeName.toLowerCase() != "table") Y(K, 0, "Attempted to initialise DataTables on a node which is not a table: " + this.nodeName);
			else {
				K.nTable = this;
				K.oInstance = Sa.length == 1 ? Sa : a(this).dataTable();
				K.oApi = Sa.oApi;
				K.sDestroyWidth = a(this).width();
				if(typeof b != "undefined" && b !== null) {
					K.oInit = b;
					qa(K.oFeatures, b, "bPaginate");
					qa(K.oFeatures, b, "bLengthChange");
					qa(K.oFeatures, b, "bFilter");
					qa(K.oFeatures, b, "bSort");
					qa(K.oFeatures, b, "bInfo");
					qa(K.oFeatures, b, "bProcessing");
					qa(K.oFeatures, b, "bAutoWidth");
					qa(K.oFeatures, b, "bSortClasses");
					qa(K.oFeatures, b, "bServerSide");
					qa(K.oScroll, b, "sScrollX", "sX");
					qa(K.oScroll, b, "sScrollXInner", "sXInner");
					qa(K.oScroll, b, "sScrollY", "sY");
					qa(K.oScroll, b, "bScrollCollapse", "bCollapse");
					qa(K.oScroll, b, "bScrollInfinite", "bInfinite");
					qa(K.oScroll, b, "iScrollLoadGap", "iLoadGap");
					qa(K.oScroll, b, "bScrollAutoCss", "bAutoCss");
					qa(K, b, "asStripClasses");
					qa(K, b, "fnRowCallback");
					qa(K, b, "fnHeaderCallback");
					qa(K, b, "fnFooterCallback");
					qa(K, b, "fnCookieCallback");
					qa(K, b, "fnInitComplete");
					qa(K, b, "fnServerData");
					qa(K, b, "fnFormatNumber");
					qa(K, b, "aaSorting");
					qa(K, b, "aaSortingFixed");
					qa(K, b, "aLengthMenu");
					qa(K, b, "sPaginationType");
					qa(K, b, "sAjaxSource");
					qa(K, b, "iCookieDuration");
					qa(K, b, "sCookiePrefix");
					qa(K, b, "sDom");
					qa(K, b, "oSearch", "oPreviousSearch");
					qa(K, b, "aoSearchCols", "aoPreSearchCols");
					qa(K, b, "iDisplayLength", "_iDisplayLength");
					qa(K, b, "bJQueryUI", "bJUI");
					qa(K.oLanguage, b, "fnInfoCallback");
					typeof b.fnDrawCallback == "function" && K.aoDrawCallback.push({
						fn: b.fnDrawCallback,
						sName: "user"
					});
					typeof b.fnStateSaveCallback == "function" && K.aoStateSave.push({
						fn: b.fnStateSaveCallback,
						sName: "user"
					});
					typeof b.fnStateLoadCallback == "function" && K.aoStateLoad.push({
						fn: b.fnStateLoadCallback,
						sName: "user"
					});
					K.oFeatures.bServerSide && K.oFeatures.bSort && K.oFeatures.bSortClasses && K.aoDrawCallback.push({
						fn: db,
						sName: "server_side_sort_classes"
					});
					if(typeof b.bJQueryUI != "undefined" && b.bJQueryUI) {
						K.oClasses = d.oJUIClasses;
						if(typeof b.sDom == "undefined") K.sDom = '<"H"lfr>t<"F"ip>'
					}
					if(K.oScroll.sX !== "" || K.oScroll.sY !== "") K.oScroll.iBarWidth = za();
					if(typeof b.iDisplayStart != "undefined" && typeof K.iInitDisplayStart == "undefined") {
						K.iInitDisplayStart = b.iDisplayStart;
						K._iDisplayStart = b.iDisplayStart
					}
					if(typeof b.bStateSave != "undefined") {
						K.oFeatures.bStateSave = b.bStateSave;
						la(K, b);
						K.aoDrawCallback.push({
							fn: ba,
							sName: "state_save"
						})
					}
					if(typeof b.aaData != "undefined") ga = true;
					if(typeof b != "undefined" && typeof b.aoData != "undefined") b.aoColumns = b.aoData;
					if(typeof b.oLanguage != "undefined") if(typeof b.oLanguage.sUrl != "undefined" && b.oLanguage.sUrl !== "") {
						K.oLanguage.sUrl = b.oLanguage.sUrl;
						a.getJSON(K.oLanguage.sUrl, null, function(ab) {
							o(K, ab, true)
						});
						ea = true
					} else o(K, b.oLanguage, false)
				} else b = {};
				if(typeof b.asStripClasses == "undefined") {
					K.asStripClasses.push(K.oClasses.sStripOdd);
					K.asStripClasses.push(K.oClasses.sStripEven)
				}
				G = false;
				J = a(">tbody>tr", this);
				w = 0;
				for(E = K.asStripClasses.length; w < E; w++) if(J.filter(":lt(2)").hasClass(K.asStripClasses[w])) {
					G = true;
					break
				}
				if(G) {
					K.asDestoryStrips = ["", ""];
					if(a(J[0]).hasClass(K.oClasses.sStripOdd)) K.asDestoryStrips[0] += K.oClasses.sStripOdd + " ";
					if(a(J[0]).hasClass(K.oClasses.sStripEven)) K.asDestoryStrips[0] += K.oClasses.sStripEven;
					if(a(J[1]).hasClass(K.oClasses.sStripOdd)) K.asDestoryStrips[1] += K.oClasses.sStripOdd + " ";
					if(a(J[1]).hasClass(K.oClasses.sStripEven)) K.asDestoryStrips[1] += K.oClasses.sStripEven;
					J.removeClass(K.asStripClasses.join(" "))
				}
				w = this.getElementsByTagName("thead");
				G = w.length === 0 ? [] : sa(w[0]);
				var Ca;
				if(typeof b.aoColumns == "undefined") {
					Ca = [];
					w = 0;
					for(E = G.length; w < E; w++) Ca.push(null)
				} else Ca = b.aoColumns;
				w = 0;
				for(E = Ca.length; w < E; w++) {
					if(typeof b.saved_aoColumns != "undefined" && b.saved_aoColumns.length == E) {
						if(Ca[w] === null) Ca[w] = {};
						Ca[w].bVisible = b.saved_aoColumns[w].bVisible
					}
					q(K, G ? G[w] : null)
				}
				if(typeof b.aoColumnDefs != "undefined") for(w = b.aoColumnDefs.length - 1; w >= 0; w--) {
					var Ia = b.aoColumnDefs[w].aTargets;
					a.isArray(Ia) || Y(K, 1, "aTargets must be an array of targets, not a " + typeof Ia);
					G = 0;
					for(J = Ia.length; G < J; G++) if(typeof Ia[G] == "number" && Ia[G] >= 0) {
						for(; K.aoColumns.length <= Ia[G];) q(K);
						v(K, Ia[G], b.aoColumnDefs[w])
					} else if(typeof Ia[G] == "number" && Ia[G] < 0) v(K, K.aoColumns.length + Ia[G], b.aoColumnDefs[w]);
					else if(typeof Ia[G] == "string") {
						E = 0;
						for(L = K.aoColumns.length; E < L; E++) if(Ia[G] == "_all" || K.aoColumns[E].nTh.className.indexOf(Ia[G]) != -1) v(K, E, b.aoColumnDefs[w])
					}
				}
				if(typeof Ca != "undefined") {
					w = 0;
					for(E = Ca.length; w < E; w++) v(K, w, Ca[w])
				}
				w = 0;
				for(E = K.aaSorting.length; w < E; w++) {
					if(K.aaSorting[w][0] >= K.aoColumns.length) K.aaSorting[w][0] = 0;
					Ca = K.aoColumns[K.aaSorting[w][0]];
					if(typeof K.aaSorting[w][2] == "undefined") K.aaSorting[w][2] = 0;
					if(typeof b.aaSorting == "undefined" && typeof K.saved_aaSorting == "undefined") K.aaSorting[w][1] = Ca.asSorting[0];
					G = 0;
					for(J = Ca.asSorting.length; G < J; G++) if(K.aaSorting[w][1] == Ca.asSorting[G]) {
						K.aaSorting[w][2] = G;
						break
					}
				}
				db(K);
				this.getElementsByTagName("thead").length === 0 && this.appendChild(g.createElement("thead"));
				this.getElementsByTagName("tbody").length === 0 && this.appendChild(g.createElement("tbody"));
				K.nTHead = this.getElementsByTagName("thead")[0];
				K.nTBody = this.getElementsByTagName("tbody")[0];
				if(this.getElementsByTagName("tfoot").length > 0) K.nTFoot = this.getElementsByTagName("tfoot")[0];
				if(ga) for(w = 0; w < b.aaData.length; w++) x(K, b.aaData[w]);
				else y(K);
				K.aiDisplay = K.aiDisplayMaster.slice();
				K.bInitialised = true;
				ea === false && n(K)
			}
		})
	}
})(jQuery, window, document);
(function(a) {
	a.extend({
		tablesorter: new function() {
			function g(Q, N) {
				c(Q + "," + ((new Date).getTime() - N.getTime()) + "ms")
			}
			function c(Q) {
				typeof console != "undefined" && typeof console.debug != "undefined" ? console.log(Q) : alert(Q)
			}
			function d(Q, N) {
				if(Q.config.debug) var X = "";
				var ma = Q.tBodies[0].rows;
				if(Q.tBodies[0].rows[0]) {
					var pa = [];
					ma = ma[0].cells;
					for(var Ma = ma.length, oa = 0; oa < Ma; oa++) {
						var Ka = false;
						if(a.metadata && a(N[oa]).metadata() && a(N[oa]).metadata().sorter) Ka = b(a(N[oa]).metadata().sorter);
						else if(Q.config.headers[oa] && Q.config.headers[oa].sorter) Ka = b(Q.config.headers[oa].sorter);
						if(!Ka) a: {
							Ka = Q;
							for(var Za = ma[oa], eb = C.length, ib = 1; ib < eb; ib++) if(C[ib].is(a.trim(j(Ka.config, Za)), Ka, Za)) {
								Ka = C[ib];
								break a
							}
							Ka = C[0]
						}
						if(Q.config.debug) X += "column:" + oa + " parser:" + Ka.id + "\n";
						pa.push(Ka)
					}
				}
				Q.config.debug && c(X);
				return pa
			}
			function b(Q) {
				for(var N = C.length, X = 0; X < N; X++) if(C[X].id.toLowerCase() == Q.toLowerCase()) return C[X];
				return false
			}
			function f(Q) {
				if(Q.config.debug) var N = new Date;
				for(var X = Q.tBodies[0] && Q.tBodies[0].rows.length || 0, ma = Q.tBodies[0].rows[0] && Q.tBodies[0].rows[0].cells.length || 0, pa = Q.config.parsers, Ma = {
					row: [],
					normalized: []
				}, oa = 0; oa < X; ++oa) {
					var Ka = Q.tBodies[0].rows[oa],
						Za = [];
					Ma.row.push(a(Ka));
					for(var eb = 0; eb < ma; ++eb) Za.push(pa[eb].format(j(Q.config, Ka.cells[eb]), Q, Ka.cells[eb]));
					Za.push(oa);
					Ma.normalized.push(Za)
				}
				Q.config.debug && g("Building cache for " + X + " rows:", N);
				return Ma
			}
			function j(Q, N) {
				if(!N) return "";
				var X = "";
				return X = Q.textExtraction == "simple" ? N.childNodes[0] && N.childNodes[0].hasChildNodes() ? N.childNodes[0].innerHTML : N.innerHTML : typeof Q.textExtraction == "function" ? Q.textExtraction(N) : a(N).text()
			}
			function n(Q, N) {
				if(Q.config.debug) var X = new Date;
				for(var ma = N.row, pa = N.normalized, Ma = pa.length, oa = pa[0].length - 1, Ka = a(Q.tBodies[0]), Za = [], eb = 0; eb < Ma; eb++) {
					Za.push(ma[pa[eb][oa]]);
					if(!Q.config.appender) for(var ib = ma[pa[eb][oa]], Ea = ib.length, cb = 0; cb < Ea; cb++) Ka[0].appendChild(ib[cb])
				}
				Q.config.appender && Q.config.appender(Q, Za);
				Za = null;
				Q.config.debug && g("Rebuilt table:", X);
				o(Q);
				setTimeout(function() {
					a(Q).trigger("sortEnd")
				}, 0)
			}
			function l(Q) {
				if(Q.config.debug) var N = new Date;
				for(var X = 0; X < Q.tHead.rows.length; X++);
				$tableHeaders = a("thead th", Q);
				$tableHeaders.each(function(ma) {
					this.count = 0;
					this.column = ma;
					var pa = Q.config.sortInitialOrder;
					this.order = i = typeof pa != "Number" ? pa.toLowerCase() == "desc" ? 1 : 0 : pa == 1 ? pa : 0;
					pa = a.metadata && a(this).metadata().sorter === false ? true : false;
					if(!(pa = pa)) pa = Q.config.headers[ma] && Q.config.headers[ma].sorter === false ? true : false;
					if(pa) this.sortDisabled = true;
					this.sortDisabled || a(this).addClass(Q.config.cssHeader);
					Q.config.headerList[ma] = this
				});
				if(Q.config.debug) {
					g("Built headers:", N);
					c($tableHeaders)
				}
				return $tableHeaders
			}
			function o(Q) {
				for(var N = Q.config.widgets, X = N.length, ma = 0; ma < X; ma++) q(N[ma]).format(Q)
			}
			function q(Q) {
				for(var N = M.length, X = 0; X < N; X++) if(M[X].id.toLowerCase() == Q.toLowerCase()) return M[X]
			}
			function v(Q, N) {
				for(var X = N.length, ma = 0; ma < X; ma++) if(N[ma][0] == Q) return true;
				return false
			}
			function x(Q, N, X, ma) {
				N.removeClass(ma[0]).removeClass(ma[1]);
				var pa = [];
				N.each(function() {
					this.sortDisabled || (pa[this.column] = a(this))
				});
				Q = X.length;
				for(N = 0; N < Q; N++) pa[X[N][0]].addClass(ma[X[N][1]])
			}
			function y(Q) {
				if(Q.config.widthFixed) {
					var N = a("<colgroup>");
					a("tr:first td", Q.tBodies[0]).each(function() {
						N.append(a("<col>").css("width", a(this).width()))
					});
					a(Q).prepend(N)
				}
			}
			function D(Q, N, X) {
				if(Q.config.debug) var ma = new Date;
				for(var pa = [], Ma = N.length, oa = 0; oa < Ma; oa++) {
					var Ka = N[oa][0],
						Za = N[oa][1],
						eb = Q.config.parsers[Ka].type == "text" ? Za == 0 ? B : u : Za == 0 ? F : I;
					pa.push(function(Ea, cb) {
						return eb(Ea[Ka], cb[Ka])
					})
				}
				var ib = X.normalized[0].length - 1;
				pa.push(function(Ea, cb) {
					return Ea[ib] - cb[ib]
				});
				X.normalized.sort(function(Ea, cb) {
					var db, $a;
					for($a in pa) if(db = pa[$a](Ea, cb)) return db;
					return 0
				});
				Q.config.debug && g("Sorting on " + N.toString() + " and dir " + Za + " time:", ma);
				return X
			}
			function B(Q, N) {
				return Q < N ? -1 : Q > N ? 1 : 0
			}
			function u(Q, N) {
				return N < Q ? -1 : N > Q ? 1 : 0
			}
			function F(Q, N) {
				return Q - N
			}
			function I(Q, N) {
				return N - Q
			}
			var C = [],
				M = [];
			this.defaults = {
				cssHeader: "header",
				cssAsc: "headerSortUp",
				cssDesc: "headerSortDown",
				sortInitialOrder: "asc",
				sortMultiSortKey: "shiftKey",
				sortForce: null,
				sortAppend: null,
				textExtraction: "simple",
				parsers: {},
				widgets: [],
				widgetZebra: {
					css: ["even", "odd"]
				},
				headers: {},
				widthFixed: false,
				cancelSelection: true,
				sortList: [],
				headerList: [],
				dateFormat: "us",
				decimal: ".",
				debug: false
			};
			this.benchmark = g;
			this.construct = function(Q) {
				return this.each(function() {
					if(this.tHead && this.tBodies) {
						var N, X, ma, pa;
						this.config = {};
						pa = a.extend(this.config, a.tablesorter.defaults, Q);
						N = a(this);
						X = l(this);
						this.config.parsers = d(this, X);
						ma = f(this);
						var Ma = [pa.cssDesc, pa.cssAsc];
						y(this);
						X.click(function(oa) {
							N.trigger("sortStart");
							var Ka = N[0].tBodies[0] && N[0].tBodies[0].rows.length || 0;
							if(!this.sortDisabled && Ka > 0) {
								a(this);
								Ka = this.column;
								this.order = this.count++ % 2;
								if(oa[pa.sortMultiSortKey]) if(v(Ka, pa.sortList)) for(oa = 0; oa < pa.sortList.length; oa++) {
									var Za = pa.sortList[oa],
										eb = pa.headerList[Za[0]];
									if(Za[0] == Ka) {
										eb.count = Za[1];
										eb.count++;
										Za[1] = eb.count % 2
									}
								} else pa.sortList.push([Ka, this.order]);
								else {
									pa.sortList = [];
									if(pa.sortForce != null) {
										Za = pa.sortForce;
										for(oa = 0; oa < Za.length; oa++) Za[oa][0] != Ka && pa.sortList.push(Za[oa])
									}
									pa.sortList.push([Ka, this.order])
								}
								setTimeout(function() {
									x(N[0], X, pa.sortList, Ma);
									n(N[0], D(N[0], pa.sortList, ma))
								}, 1);
								return false
							}
						}).mousedown(function() {
							if(pa.cancelSelection) {
								this.onselectstart = function() {
									return false
								};
								return false
							}
						});
						N.bind("update", function() {
							this.config.parsers = d(this, X);
							ma = f(this)
						}).bind("sorton", function(oa, Ka) {
							a(this).trigger("sortStart");
							pa.sortList = Ka;
							for(var Za = pa.sortList, eb = this.config, ib = Za.length, Ea = 0; Ea < ib; Ea++) {
								var cb = Za[Ea],
									db = eb.headerList[cb[0]];
								db.count = cb[1];
								db.count++
							}
							x(this, X, Za, Ma);
							n(this, D(this, Za, ma))
						}).bind("appendCache", function() {
							n(this, ma)
						}).bind("applyWidgetId", function(oa, Ka) {
							q(Ka).format(this)
						}).bind("applyWidgets", function() {
							o(this)
						});
						if(a.metadata && a(this).metadata() && a(this).metadata().sortlist) pa.sortList = a(this).metadata().sortlist;
						pa.sortList.length > 0 && N.trigger("sorton", [pa.sortList]);
						o(this)
					}
				})
			};
			this.addParser = function(Q) {
				for(var N = C.length, X = true, ma = 0; ma < N; ma++) if(C[ma].id.toLowerCase() == Q.id.toLowerCase()) X = false;
				X && C.push(Q)
			};
			this.addWidget = function(Q) {
				M.push(Q)
			};
			this.formatFloat = function(Q) {
				Q = parseFloat(Q);
				return isNaN(Q) ? 0 : Q
			};
			this.formatInt = function(Q) {
				Q = parseInt(Q);
				return isNaN(Q) ? 0 : Q
			};
			this.isDigit = function(Q, N) {
				var X = "\\" + N.decimal;
				return RegExp("/(^[+]?0(" + X + "0+)?$)|(^([-+]?[1-9][0-9]*)$)|(^([-+]?((0?|[1-9][0-9]*)" + X + "(0*[1-9][0-9]*)))$)|(^[-+]?[1-9]+[0-9]*" + X + "0+$)/").test(a.trim(Q))
			};
			this.clearTableBody = function(Q) {
				if(a.browser.msie)(function() {
					for(; this.firstChild;) this.removeChild(this.firstChild)
				}).apply(Q.tBodies[0]);
				else Q.tBodies[0].innerHTML = ""
			}
		}
	});
	a.fn.extend({
		tablesorter: a.tablesorter.construct
	});
	var e = a.tablesorter;
	e.addParser({
		id: "text",
		is: function() {
			return true
		},
		format: function(g) {
			return a.trim(g.toLowerCase())
		},
		type: "text"
	});
	e.addParser({
		id: "digit",
		is: function(g, c) {
			return a.tablesorter.isDigit(g, c.config)
		},
		format: function(g) {
			return a.tablesorter.formatFloat(g)
		},
		type: "numeric"
	});
	e.addParser({
		id: "currency",
		is: function(g) {
			return /^[\u00a3$\u20ac?.]/.test(g)
		},
		format: function(g) {
			return a.tablesorter.formatFloat(g.replace(RegExp(/[^0-9.]/g), ""))
		},
		type: "numeric"
	});
	e.addParser({
		id: "ipAddress",
		is: function(g) {
			return /^\d{2,3}[\.]\d{2,3}[\.]\d{2,3}[\.]\d{2,3}$/.test(g)
		},
		format: function(g) {
			g = g.split(".");
			for(var c = "", d = g.length, b = 0; b < d; b++) {
				var f = g[b];
				c += f.length == 2 ? "0" + f : f
			}
			return a.tablesorter.formatFloat(c)
		},
		type: "numeric"
	});
	e.addParser({
		id: "url",
		is: function(g) {
			return /^(https?|ftp|file):\/\/$/.test(g)
		},
		format: function(g) {
			return jQuery.trim(g.replace(RegExp(/(https?|ftp|file):\/\//), ""))
		},
		type: "text"
	});
	e.addParser({
		id: "isoDate",
		is: function(g) {
			return /^\d{4}[\/-]\d{1,2}[\/-]\d{1,2}$/.test(g)
		},
		format: function(g) {
			return a.tablesorter.formatFloat(g != "" ? (new Date(g.replace(RegExp(/-/g), "/"))).getTime() : "0")
		},
		type: "numeric"
	});
	e.addParser({
		id: "percent",
		is: function(g) {
			return /\%$/.test(a.trim(g))
		},
		format: function(g) {
			return a.tablesorter.formatFloat(g.replace(RegExp(/%/g), ""))
		},
		type: "numeric"
	});
	e.addParser({
		id: "usLongDate",
		is: function(g) {
			return g.match(RegExp(/^[A-Za-z]{3,10}\.? [0-9]{1,2}, ([0-9]{4}|'?[0-9]{2}) (([0-2]?[0-9]:[0-5][0-9])|([0-1]?[0-9]:[0-5][0-9]\s(AM|PM)))$/))
		},
		format: function(g) {
			return a.tablesorter.formatFloat((new Date(g)).getTime())
		},
		type: "numeric"
	});
	e.addParser({
		id: "shortDate",
		is: function(g) {
			return /\d{1,2}[\/\-]\d{1,2}[\/\-]\d{2,4}/.test(g)
		},
		format: function(g, c) {
			var d = c.config;
			g = g.replace(/\-/g, "/");
			if(d.dateFormat == "us") g = g.replace(/(\d{1,2})[\/\-](\d{1,2})[\/\-](\d{4})/, "$3/$1/$2");
			else if(d.dateFormat == "uk") g = g.replace(/(\d{1,2})[\/\-](\d{1,2})[\/\-](\d{4})/, "$3/$2/$1");
			else if(d.dateFormat == "dd/mm/yy" || d.dateFormat == "dd-mm-yy") g = g.replace(/(\d{1,2})[\/\-](\d{1,2})[\/\-](\d{2})/, "$1/$2/$3");
			return a.tablesorter.formatFloat((new Date(g)).getTime())
		},
		type: "numeric"
	});
	e.addParser({
		id: "time",
		is: function(g) {
			return /^(([0-2]?[0-9]:[0-5][0-9])|([0-1]?[0-9]:[0-5][0-9]\s(am|pm)))$/.test(g)
		},
		format: function(g) {
			return a.tablesorter.formatFloat((new Date("2000/01/01 " + g)).getTime())
		},
		type: "numeric"
	});
	e.addParser({
		id: "metadata",
		is: function() {
			return false
		},
		format: function(g, c, d) {
			g = c.config;
			g = !g.parserMetadataName ? "sortValue" : g.parserMetadataName;
			return a(d).metadata()[g]
		},
		type: "numeric"
	});
	e.addWidget({
		id: "zebra",
		format: function(g) {
			if(g.config.debug) var c = new Date;
			a("tr:visible", g.tBodies[0]).filter(":even").removeClass(g.config.widgetZebra.css[1]).addClass(g.config.widgetZebra.css[0]).end().filter(":odd").removeClass(g.config.widgetZebra.css[0]).addClass(g.config.widgetZebra.css[1]);
			g.config.debug && a.tablesorter.benchmark("Applying Zebra widget", c)
		}
	})
})(jQuery);
(function(a) {
	var e = function(d) {
			var b = a("input[name=record_calls]", d);
			b.bind("click change", function() {
				if(a(this).is(":checked")) a("input", d).enable("callRecording");
				else {
					a("input[name=record_calls]", d).enable("callRecording");
					a("input:not([name=record_calls])", d).disable("callRecording")
				}
			});
			a("form", d).bind("deserialize", function(f, j) {
				var n = a(this);
				if(j.group_record_calls) {
					a(".ifGroupPolicy", n).show();
					a(".groupPolicyGroupName", n).text(j.group_name);
					a(".groupPolicyDays", n).text(j.group_record_keep_days)
				} else a(".ifGroupPolicy", n).hide();
				b.triggerHandler("change")
			})
		},
		g = function(d) {
			var b = a("form", d);
			a("input.emailEnableDisable", b).bind("change init", function() {
				if(a(this).is(":checked")) {
					f = b.data("formData", f) || {};
					delete f["recording-mailto"];
					b.data("formData", f);
					a("input[name=recording-mailto]", b).enable("noMail")
				} else {
					var f = b.data("formData") || {};
					f["recording-mailto"] = "";
					b.data("formData", f);
					a("input[name=recording-mailto]", b).disable("noMail")
				}
			}).trigger("change");
			a("form", d).bind("deserialize", function(f, j) {
				j["recording-mailto"] && a("input.emailEnableDisable", this).attr("checked", "checked").data("wasChecked", true).triggerHandler("init")
			})
		},
		c = {
			bbx_user_id: function(d) {
				var b = this;
				a.getTemplate("/cudatel/ajax-html/callRecording.html", function(f) {
					f = a(f);
					a("form", f).attr("action", "/cudatel/gui/user2/call_recording");
					b.html(f);
					e(b);
					g(b);
					a.isFunction(d.callback) && d.callback()
				})
			},
			bbx_group_id: function(d) {
				var b = this;
				a.getTemplate("/cudatel/ajax-html/callRecording.html", function(f) {
					f = a(f);
					a("form", f).attr("action", "/cudatel/gui/group/call_recording");
					b.html(f);
					e(b);
					g(b);
					a.isFunction(d.callback) && d.callback()
				})
			}
		};
	a.fn.callRecording = function(d) {
		if(c[d]) return c[d].apply(this, Array.prototype.slice.call(arguments, 1));
		else a.error("Method " + d + " does not exist on jQuery.callRecording")
	}
})(jQuery);
(function(a) {
	var e, g = function(d, b, f, j) {
			a(".selRows, .selTime", b).bind("change", function() {
				c.call(d, j)
			});
			a(".selTime", b).bind("change", function() {
				if(a(this).val() === "RANGE") {
					a(".customDateRange", b).show();
					c.call(d, j)
				} else a(".customDateRange", b).hide()
			});
			a("a.opRefresh", b).bind("click", function(n) {
				n.preventDefault();
				c.call(d, j)
			});
			a(".search", b).searchBox().bind("search", function(n, l) {
				c.call(d, j, {
					search: l
				})
			});
			d.html(b);
			c.call(d, j);
			a(".dateEnd, .dateStart", b).datepicker({
				showAnim: "fadeIn",
				changeMonth: true,
				changeYear: true,
				dateFormat: "MM d, yy",
				onSelect: function() {
					c.call(d, j)
				}
			}).datepicker("setDate", new Date)
		},
		c = function(d, b) {
			d = d || {};
			a.extend(true, d, b || {});
			var f = a(">.staticBody.eventList", this),
				j = {
					url: "/cudatel/gui/eventlog/eventlog",
					type: "GET",
					rowDataRoot: "eventlog",
					hasNoneText: "No records matching your search",
					rows: a(".selRows", f).val(),
					sortby: "bbx_eventlog_date_time",
					sortorder: "desc",
					searchParam: "search_string",
					columnData: [{
						header: "Date",
						sortby: "bbx_eventlog_date_time",
						value: "bbx_eventlog_date_time",
						render: "text"
					}, {
						header: "Priority",
						sortby: "bbx_eventlog_priority",
						value: "bbx_eventlog_priority",
						render: "text"
					}, {
						header: "User Name",
						sortby: "bbx_eventlog_fullname",
						value: "bbx_eventlog_fullname",
						render: "text"
					}, {
						header: "IP Address",
						sortby: "bbx_eventlog_ip_addr",
						value: "bbx_eventlog_ip_addr",
						render: "text"
					}, {
						header: "Message",
						sortby: "bbx_eventlog_message",
						value: "bbx_eventlog_message",
						render: "text"
					}]
				},
				n = {
					rows: a(".selRows", f).val(),
					search: d.search || ""
				},
				l = a(".selTime", f).val();
			n.data = l === "RANGE" ? {
				since: "RANGE",
				range: [a(".dateStart", f).val(), a(".dateEnd", f).val()]
			} : {
				since: l
			};
			d.hasRun ? a(".eventTable", f).jsonTable("refresh", n) : a(".eventTable", f).jsonTable(a.extend(true, {}, j, n));
			if(!d.hasRun) d.hasRun = true;
			a(this).data("eventList", d);
			return this
		};
	a.fn.eventList = function(d) {
		var b = this,
			f = {
				refresh: c
			};
		if(f[d]) {
			var j = this.data("eventList");
			if(typeof j === "undefined") {
				this.data("eventList", {});
				j = this.data("eventList")
			}
			return f[d].apply(this, [].concat([j], Array.prototype.slice.call(arguments, 1)))
		} else if(d && typeof d !== "object") {
			console_log("Method does not exist in plugin eventList");
			return this
		}
		var n = d || {};
		a.getTemplate("/cudatel/ajax-html/eventlist.html", function(l) {
			b.each(function() {
				var o = a(this),
					q = a(l),
					v = a(".staticBody", q);
				e = e || a(".template", q);
				g(o, v, e, n)
			})
		});
		this.data("eventList", n);
		return this
	}
})(jQuery);
(function(a) {
	var e = function(g) {
			if(g) {
				var c = ["(There was a problem reading the solutions list.)"];
				try {
					c = JSON.parse(g)
				} catch(d) {}
				g = a("<ul />");
				for(var b = 0; b < c.length; b++) g.append(a("<li />").text(c[b]));
				return g
			} else return a("<ul />")
		};
	a.fn.diagsTable = function() {
		a(this).liveTable("destroy").liveTable({
			live_table: "bbx_diag",
			live_table_key: "",
			user_info: {
				sort_by: "bbx_diag_id",
				order_by: "bbx_diag_id"
			},
			columnData: [{
				header: "Run",
				key: false,
				value: function(g) {
					return a('<input type="checkbox" />').attr("name", "run_diags").val(g.rowData.bbx_diag_name)
				},
				sortable: false,
				render: "html"
			}, {
				header: "Description",
				value: "bbx_diag_desc",
				key: "bbx_diag_desc"
			}, {
				header: "Last Test Completed",
				value: function(g) {
					if(!g.rowData.bbx_diag_last_completed) return "(Never)";
					return g.rowData.bbx_diag_last_completed.replace(/\..+$/, "")
				},
				key: "bbx_diag_last_completed"
			}, {
				header: "Status",
				value: function(g) {
					g = g.rowData;
					var c = a("<div />");
					if(g.bbx_diag_completed_tests == 0) c.text("Not Tested").css("color", "#666");
					else if(g.bbx_diag_completed_tests !== g.bbx_diag_total_tests) c.text("In Progress (" + g.bbx_diag_completed_tests + " of " + g.bbx_diag_total_tests + ")...").css("color", "#000");
					else if(g.bbx_diag_fail_count == g.bbx_diag_total_tests) c.text("Failed").css("color", "red");
					else g.bbx_diag_pass_count == g.bbx_diag_total_tests ? c.text("Passed").css("color", "green") : c.text("Some Failed").css("color", "#600");
					return c
				},
				render: "html"
			}, {
				header: "Details",
				key: false,
				value: function(g) {
					var c = a('<div><a href="javascript:false">Show/Hide</a><div class="diagDetailContainer" /></div>'),
						d = c.children("div.diagDetailContainer").hide(),
						b = false,
						f = getUnique("diagsResize");
					c.children("a").bind("click", function(j) {
						j.preventDefault();
						b = !b;
						d.toggle();
						if(b) {
							d.diagsInnerTable({
								bbx_diag_id: g.rowData.bbx_diag_id
							});
							j = function() {
								if(d.closest("body")) {
									var n = g.$row.width() - g.$row.find(">td:eq(0)").outerWidth() - g.$cell.outerWidth();
									d.css("margin-left", -n + "px")
								} else a(window).unbind("debouncedresize." + f)
							};
							a(window).unbind("debouncedresize." + f).bind("debouncedresize." + f, j);
							j()
						} else {
							a(window).unbind("debouncedresize." + f);
							d.diagsInnerTable("destroy")
						}
					});
					return c
				},
				render: "html",
				"class": "diagDetailsCol"
			}]
		})
	};
	a.fn.diagsInnerTable = function(g) {
		a(this).liveTable("destroy").liveTable({
			user_info: {
				page: 1,
				page_size: 100,
				sort_by: "bbx_diag_id",
				distinct_on: "",
				allow_null_distinct: true,
				order_by: "bbx_diag_test_id",
				search: {
					bbx_diag_id: "^" + g.bbx_diag_id + "$"
				}
			},
			columnData: [{
				header: "Sub-Test",
				value: "bbx_diag_test_name"
			}, {
				header: "Result",
				value: "bbx_diag_test_result"
			}, {
				header: "Details",
				value: function(c) {
					return e(c.rowData.bbx_diag_test_info)
				},
				render: "html"
			}, {
				header: "Solutions",
				value: function(c) {
					return e(c.rowData.bbx_diag_test_solutions)
				},
				render: "html"
			}],
			live_table: "bbx_diag_test",
			live_table_key: ""
		})
	}
})(jQuery);
$.tablesorter.addWidget({
	id: "resizeColumns",
	format: function(a) {
		a = $(a).children("thead").find("th");
		if(!a.find(".TSResizer")[0]) {
			a.wrapInner('<div class="TSResizableWrap" style="position: relative"></div>');
			a.find(".TSResizableWrap").css("position", "relative").append('<div class="TSResizer"></div>');
			a.find(".TSResizer").draggable({
				axis: "x"
			}).bind("drag", function() {
				var e = $(this).closest("th"),
					g = $(this);
				e.css("width", g.offset().left - e.offset().left)
			});
			a.find(".TSResizer").bind("dragstop", function() {
				var e = $(this).closest("th"),
					g = $(this);
				e.css("width", g.offset().left - e.offset().left);
				g.css("left", false)
			})
		}
	}
});
(function(a) {
	function e(b) {
		var f = b.data;
		if(!b.isDefaultPrevented()) {
			b.preventDefault();
			a(this).ajaxSubmit(f)
		}
	}
	function g(b) {
		var f = b.target,
			j = a(f);
		if(!j.is(":submit,input:image")) {
			f = j.closest(":submit");
			if(f.length === 0) return;
			f = f[0]
		}
		var n = this;
		n.clk = f;
		if(f.type == "image") if(b.offsetX !== undefined) {
			n.clk_x = b.offsetX;
			n.clk_y = b.offsetY
		} else if(typeof a.fn.offset == "function") {
			j = j.offset();
			n.clk_x = b.pageX - j.left;
			n.clk_y = b.pageY - j.top
		} else {
			n.clk_x = b.pageX - f.offsetLeft;
			n.clk_y = b.pageY - f.offsetTop
		}
		setTimeout(function() {
			n.clk = n.clk_x = n.clk_y = null
		}, 100)
	}
	function c() {
		if(a.fn.ajaxSubmit.debug) {
			var b = "[jquery.form] " + Array.prototype.join.call(arguments, "");
			if(window.console && window.console.log) window.console.log(b);
			else window.opera && window.opera.postError && window.opera.postError(b)
		}
	}
	var d = {};
	d.fileapi = a("<input type='file'/>").get(0).files !== undefined;
	d.formdata = window.FormData !== undefined;
	a.fn.ajaxSubmit = function(b) {
		function f(F) {
			for(var I = new FormData, C = 0; C < F.length; C++) I.append(F[C].name, F[C].value);
			if(b.extraData) for(var M in b.extraData) b.extraData.hasOwnProperty(M) && I.append(M, b.extraData[M]);
			b.data = null;
			F = a.extend(true, {}, a.ajaxSettings, b, {
				contentType: false,
				processData: false,
				cache: false,
				type: "POST"
			});
			if(b.uploadProgress) F.xhr = function() {
				var N = jQuery.ajaxSettings.xhr();
				if(N.upload) N.upload.onprogress = function(X) {
					var ma = 0,
						pa = X.loaded || X.position,
						Ma = X.total;
					if(X.lengthComputable) ma = Math.ceil(pa / Ma * 100);
					b.uploadProgress(X, pa, Ma, ma)
				};
				return N
			};
			F.data = null;
			var Q = F.beforeSend;
			F.beforeSend = function(N, X) {
				X.data = I;
				Q && Q.call(X, N, b)
			};
			a.ajax(F)
		}
		function j(F) {
			function I() {
				function S() {
					try {
						var ya = (Ma.contentWindow ? Ma.contentWindow.document : Ma.contentDocument ? Ma.contentDocument : Ma.document).readyState;
						c("state = " + ya);
						ya && ya.toLowerCase() == "uninitialized" && setTimeout(S, 50)
					} catch(Ja) {
						c("Server abort: ", Ja, " (", Ja.name, ")");
						C(Ea);
						eb && clearTimeout(eb);
						eb = undefined
					}
				}
				var Z = o.attr("target"),
					fa = o.attr("action");
				M.setAttribute("target", ma);
				n || M.setAttribute("method", "POST");
				fa != N.url && M.setAttribute("action", N.url);
				if(!N.skipEncodingOverride && (!n || /post/i.test(n))) o.attr({
					encoding: "multipart/form-data",
					enctype: "multipart/form-data"
				});
				if(N.timeout) eb = setTimeout(function() {
					Za = true;
					C(ib)
				}, N.timeout);
				var V = [];
				try {
					if(N.extraData) for(var Da in N.extraData) N.extraData.hasOwnProperty(Da) && V.push(a('<input type="hidden" name="' + Da + '">').attr("value", N.extraData[Da]).appendTo(M)[0]);
					if(!N.iframeTarget) {
						pa.appendTo("body");
						Ma.attachEvent ? Ma.attachEvent("onload", C) : Ma.addEventListener("load", C, false)
					}
					setTimeout(S, 15);
					M.submit()
				} finally {
					M.setAttribute("action", fa);
					Z ? M.setAttribute("target", Z) : o.removeAttr("target");
					a(V).remove()
				}
			}
			function C(S) {
				if(!(oa.aborted || qb)) {
					try {
						db = Ma.contentWindow ? Ma.contentWindow.document : Ma.contentDocument ? Ma.contentDocument : Ma.document
					} catch(Z) {
						c("cannot access response document: ", Z);
						S = Ea
					}
					if(S === ib && oa) oa.abort("timeout");
					else if(S == Ea && oa) oa.abort("server abort");
					else {
						if(!db || db.location.href == N.iframeSrc) if(!Za) return;
						Ma.detachEvent ? Ma.detachEvent("onload", C) : Ma.removeEventListener("load", C, false);
						S = "success";
						var fa;
						try {
							if(Za) throw "timeout";
							var V = N.dataType == "xml" || db.XMLDocument || a.isXMLDoc(db);
							c("isXml=" + V);
							if(!V && window.opera && (db.body === null || !db.body.innerHTML)) if(--$a) {
								c("requeing onLoad callback, DOM not available");
								setTimeout(C, 250);
								return
							}
							var Da = db.body ? db.body : db.documentElement;
							oa.responseText = Da ? Da.innerHTML : null;
							oa.responseXML = db.XMLDocument ? db.XMLDocument : db;
							if(V) N.dataType = "xml";
							oa.getResponseHeader = function(Pa) {
								return {
									"content-type": N.dataType
								}[Pa]
							};
							if(Da) {
								oa.status = Number(Da.getAttribute("status")) || oa.status;
								oa.statusText = Da.getAttribute("statusText") || oa.statusText
							}
							var ya = (N.dataType || "").toLowerCase(),
								Ja = /(json|script|text)/.test(ya);
							if(Ja || N.textarea) {
								var ra = db.getElementsByTagName("textarea")[0];
								if(ra) {
									oa.responseText = ra.value;
									oa.status = Number(ra.getAttribute("status")) || oa.status;
									oa.statusText = ra.getAttribute("statusText") || oa.statusText
								} else if(Ja) {
									var Na = db.getElementsByTagName("pre")[0],
										Ua = db.getElementsByTagName("body")[0];
									if(Na) oa.responseText = Na.textContent ? Na.textContent : Na.innerText;
									else if(Ua) oa.responseText = Ua.textContent ? Ua.textContent : Ua.innerText
								}
							} else if(ya == "xml" && !oa.responseXML && oa.responseText) oa.responseXML = wb(oa.responseText);
							try {
								cb = O(oa, ya, N)
							} catch(fb) {
								S = "parsererror";
								oa.error = fa = fb || S
							}
						} catch(Fa) {
							c("error caught: ", Fa);
							S = "error";
							oa.error = fa = Fa || S
						}
						if(oa.aborted) {
							c("upload aborted");
							S = null
						}
						if(oa.status) S = oa.status >= 200 && oa.status < 300 || oa.status === 304 ? "success" : "error";
						if(S === "success") {
							N.success && N.success.call(N.context, cb, "success", oa);
							X && a.event.trigger("ajaxSuccess", [oa, N])
						} else if(S) {
							if(fa === undefined) fa = oa.statusText;
							N.error && N.error.call(N.context, oa, S, fa);
							X && a.event.trigger("ajaxError", [oa, N, fa])
						}
						X && a.event.trigger("ajaxComplete", [oa, N]);
						X && !--a.active && a.event.trigger("ajaxStop");
						N.complete && N.complete.call(N.context, oa, S);
						qb = true;
						N.timeout && clearTimeout(eb);
						setTimeout(function() {
							N.iframeTarget || pa.remove();
							oa.responseXML = null
						}, 100)
					}
				}
			}
			var M = o[0],
				Q, N, X, ma, pa, Ma, oa, Ka, Za, eb;
			Ka = !! a.fn.prop;
			if(a(":input[name=submit],:input[id=submit]", M).length) alert('Error: Form elements must not have name or id of "submit".');
			else {
				if(F) for(Q = 0; Q < v.length; Q++) {
					F = a(v[Q]);
					Ka ? F.prop("disabled", false) : F.removeAttr("disabled")
				}
				N = a.extend(true, {}, a.ajaxSettings, b);
				N.context = N.context || N;
				ma = "jqFormIO" + (new Date).getTime();
				if(N.iframeTarget) {
					pa = a(N.iframeTarget);
					if(F = pa.attr("name")) ma = F;
					else pa.attr("name", ma)
				} else {
					pa = a('<iframe name="' + ma + '" src="' + N.iframeSrc + '" />');
					pa.css({
						position: "absolute",
						top: "-1000px",
						left: "-1000px"
					})
				}
				Ma = pa[0];
				oa = {
					aborted: 0,
					responseText: null,
					responseXML: null,
					status: 0,
					statusText: "n/a",
					getAllResponseHeaders: function() {},
					getResponseHeader: function() {},
					setRequestHeader: function() {},
					abort: function(S) {
						var Z = S === "timeout" ? "timeout" : "aborted";
						c("aborting upload... " + Z);
						this.aborted = 1;
						pa.attr("src", N.iframeSrc);
						oa.error = Z;
						N.error && N.error.call(N.context, oa, Z, S);
						X && a.event.trigger("ajaxError", [oa, N, Z]);
						N.complete && N.complete.call(N.context, oa, Z)
					}
				};
				(X = N.global) && 0 === a.active++ && a.event.trigger("ajaxStart");
				X && a.event.trigger("ajaxSend", [oa, N]);
				if(N.beforeSend && N.beforeSend.call(N.context, oa, N) === false) N.global && a.active--;
				else if(!oa.aborted) {
					if(Ka = M.clk) if((F = Ka.name) && !Ka.disabled) {
						N.extraData = N.extraData || {};
						N.extraData[F] = Ka.value;
						if(Ka.type == "image") {
							N.extraData[F + ".x"] = M.clk_x;
							N.extraData[F + ".y"] = M.clk_y
						}
					}
					var ib = 1,
						Ea = 2;
					Ka = a("meta[name=csrf-token]").attr("content");
					if((F = a("meta[name=csrf-param]").attr("content")) && Ka) {
						N.extraData = N.extraData || {};
						N.extraData[F] = Ka
					}
					N.forceSync ? I() : setTimeout(I, 10);
					var cb, db, $a = 50,
						qb, wb = a.parseXML ||
					function(S, Z) {
						if(window.ActiveXObject) {
							Z = new ActiveXObject("Microsoft.XMLDOM");
							Z.async = "false";
							Z.loadXML(S)
						} else Z = (new DOMParser).parseFromString(S, "text/xml");
						return Z && Z.documentElement && Z.documentElement.nodeName != "parsererror" ? Z : null
					}, Oa = a.parseJSON ||
					function(S) {
						return window.eval("(" + S + ")")
					}, O = function(S, Z, fa) {
						var V = S.getResponseHeader("content-type") || "",
							Da = Z === "xml" || !Z && V.indexOf("xml") >= 0;
						S = Da ? S.responseXML : S.responseText;
						Da && S.documentElement.nodeName === "parsererror" && a.error && a.error("parsererror");
						if(fa && fa.dataFilter) S = fa.dataFilter(S, Z);
						if(typeof S === "string") if(Z === "json" || !Z && V.indexOf("json") >= 0) S = Oa(S);
						else if(Z === "script" || !Z && V.indexOf("javascript") >= 0) a.globalEval(S);
						return S
					}
				}
			}
		}
		if(!this.length) {
			c("ajaxSubmit: skipping submit process - no element selected");
			return this
		}
		var n, l, o = this;
		if(typeof b == "function") b = {
			success: b
		};
		n = this.attr("method");
		l = this.attr("action");
		if(l = (l = typeof l === "string" ? a.trim(l) : "") || window.location.href || "") l = (l.match(/^([^#]+)/) || [])[1];
		b = a.extend(true, {
			url: l,
			success: a.ajaxSettings.success,
			type: n || "GET",
			iframeSrc: /^https/i.test(window.location.href || "") ? "javascript:false" : "about:blank"
		}, b);
		l = {};
		this.trigger("form-pre-serialize", [this, b, l]);
		if(l.veto) {
			c("ajaxSubmit: submit vetoed via form-pre-serialize trigger");
			return this
		}
		if(b.beforeSerialize && b.beforeSerialize(this, b) === false) {
			c("ajaxSubmit: submit aborted via beforeSerialize callback");
			return this
		}
		var q = b.traditional;
		if(q === undefined) q = a.ajaxSettings.traditional;
		var v = [],
			x, y = this.formToArray(b.semantic, v);
		if(b.data) {
			b.extraData = b.data;
			x = a.param(b.data, q)
		}
		if(b.beforeSubmit && b.beforeSubmit(y, this, b) === false) {
			c("ajaxSubmit: submit aborted via beforeSubmit callback");
			return this
		}
		this.trigger("form-submit-validate", [y, this, b, l]);
		if(l.veto) {
			c("ajaxSubmit: submit vetoed via form-submit-validate trigger");
			return this
		}
		l = a.param(y, q);
		if(x) l = l ? l + "&" + x : x;
		if(b.type.toUpperCase() == "GET") {
			b.url += (b.url.indexOf("?") >= 0 ? "&" : "?") + l;
			b.data = null
		} else b.data = l;
		var D = [];
		b.resetForm && D.push(function() {
			o.resetForm()
		});
		b.clearForm && D.push(function() {
			o.clearForm(b.includeHidden)
		});
		if(!b.dataType && b.target) {
			var B = b.success ||
			function() {};
			D.push(function(F) {
				var I = b.replaceTarget ? "replaceWith" : "html";
				a(b.target)[I](F).each(B, arguments)
			})
		} else b.success && D.push(b.success);
		b.success = function(F, I, C) {
			for(var M = b.context || b, Q = 0, N = D.length; Q < N; Q++) D[Q].apply(M, [F, I, C || o, o])
		};
		x = a("input:file:enabled[value]", this).length > 0;
		l = o.attr("enctype") == "multipart/form-data" || o.attr("encoding") == "multipart/form-data";
		q = d.fileapi && d.formdata;
		c("fileAPI :" + q);
		var u = (x || l) && !q;
		if(b.iframe !== false && (b.iframe || u)) b.closeKeepAlive ? a.get(b.closeKeepAlive, function() {
			j(y)
		}) : j(y);
		else(x || l) && q ? f(y) : a.ajax(b);
		for(x = 0; x < v.length; x++) v[x] = null;
		this.trigger("form-submit-notify", [this, b]);
		return this
	};
	a.fn.ajaxForm = function(b) {
		b = b || {};
		b.delegation = b.delegation && a.isFunction(a.fn.on);
		if(!b.delegation && this.length === 0) {
			var f = {
				s: this.selector,
				c: this.context
			};
			if(!a.isReady && f.s) {
				c("DOM not ready, queuing ajaxForm");
				a(function() {
					a(f.s, f.c).ajaxForm(b)
				});
				return this
			}
			c("terminating; zero elements found by selector" + (a.isReady ? "" : " (DOM not ready)"));
			return this
		}
		if(b.delegation) {
			a(document).off("submit.form-plugin", this.selector, e).off("click.form-plugin", this.selector, g).on("submit.form-plugin", this.selector, b, e).on("click.form-plugin", this.selector, b, g);
			return this
		}
		return this.ajaxFormUnbind().bind("submit.form-plugin", b, e).bind("click.form-plugin", b, g)
	};
	a.fn.ajaxFormUnbind = function() {
		return this.unbind("submit.form-plugin click.form-plugin")
	};
	a.fn.formToArray = function(b, f) {
		var j = [];
		if(this.length === 0) return j;
		var n = this[0],
			l = b ? n.getElementsByTagName("*") : n.elements;
		if(!l) return j;
		var o, q, v, x, y, D;
		o = 0;
		for(D = l.length; o < D; o++) {
			y = l[o];
			if(v = y.name) if(b && n.clk && y.type == "image") {
				if(!y.disabled && n.clk == y) {
					j.push({
						name: v,
						value: a(y).val(),
						type: y.type
					});
					j.push({
						name: v + ".x",
						value: n.clk_x
					}, {
						name: v + ".y",
						value: n.clk_y
					})
				}
			} else if((x = a.fieldValue(y, true)) && x.constructor == Array) {
				f && f.push(y);
				q = 0;
				for(y = x.length; q < y; q++) j.push({
					name: v,
					value: x[q]
				})
			} else if(d.fileapi && y.type == "file" && !y.disabled) {
				f && f.push(y);
				x = y.files;
				if(x.length) for(q = 0; q < x.length; q++) j.push({
					name: v,
					value: x[q],
					type: y.type
				});
				else j.push({
					name: v,
					value: "",
					type: y.type
				})
			} else if(x !== null && typeof x != "undefined") {
				f && f.push(y);
				j.push({
					name: v,
					value: x,
					type: y.type,
					required: y.required
				})
			}
		}
		if(!b && n.clk) {
			l = a(n.clk);
			o = l[0];
			if((v = o.name) && !o.disabled && o.type == "image") {
				j.push({
					name: v,
					value: l.val()
				});
				j.push({
					name: v + ".x",
					value: n.clk_x
				}, {
					name: v + ".y",
					value: n.clk_y
				})
			}
		}
		return j
	};
	a.fn.formSerialize = function(b) {
		return a.param(this.formToArray(b))
	};
	a.fn.fieldSerialize = function(b) {
		var f = [];
		this.each(function() {
			var j = this.name;
			if(j) {
				var n = a.fieldValue(this, b);
				if(n && n.constructor == Array) for(var l = 0, o = n.length; l < o; l++) f.push({
					name: j,
					value: n[l]
				});
				else n !== null && typeof n != "undefined" && f.push({
					name: this.name,
					value: n
				})
			}
		});
		return a.param(f)
	};
	a.fn.fieldValue = function(b) {
		for(var f = [], j = 0, n = this.length; j < n; j++) {
			var l = a.fieldValue(this[j], b);
			l === null || typeof l == "undefined" || l.constructor == Array && !l.length || (l.constructor == Array ? a.merge(f, l) : f.push(l))
		}
		return f
	};
	a.fieldValue = function(b, f) {
		var j = b.name,
			n = b.type,
			l = b.tagName.toLowerCase();
		if(f === undefined) f = true;
		if(f && (!j || b.disabled || n == "reset" || n == "button" || (n == "checkbox" || n == "radio") && !b.checked || (n == "submit" || n == "image") && b.form && b.form.clk != b || l == "select" && b.selectedIndex == -1)) return null;
		if(l == "select") {
			var o = b.selectedIndex;
			if(o < 0) return null;
			j = [];
			l = b.options;
			var q = (n = n == "select-one") ? o + 1 : l.length;
			for(o = n ? o : 0; o < q; o++) {
				var v = l[o];
				if(v.selected) {
					var x = v.value;
					x || (x = v.attributes && v.attributes.value && !v.attributes.value.specified ? v.text : v.value);
					if(n) return x;
					j.push(x)
				}
			}
			return j
		}
		return a(b).val()
	};
	a.fn.clearForm = function(b) {
		return this.each(function() {
			a("input,select,textarea", this).clearFields(b)
		})
	};
	a.fn.clearFields = a.fn.clearInputs = function(b) {
		var f = /^(?:color|date|datetime|email|month|number|password|range|search|tel|text|time|url|week)$/i;
		return this.each(function() {
			var j = this.type,
				n = this.tagName.toLowerCase();
			if(f.test(j) || n == "textarea") this.value = "";
			else if(j == "checkbox" || j == "radio") this.checked = false;
			else if(n == "select") this.selectedIndex = -1;
			else if(b) if(b === true && /hidden/.test(j) || typeof b == "string" && a(this).is(b)) this.value = ""
		})
	};
	a.fn.resetForm = function() {
		return this.each(function() {
			if(typeof this.reset == "function" || typeof this.reset == "object" && !this.reset.nodeType) this.reset()
		})
	};
	a.fn.enable = function(b) {
		if(b === undefined) b = true;
		return this.each(function() {
			this.disabled = !b
		})
	};
	a.fn.selected = function(b) {
		if(b === undefined) b = true;
		return this.each(function() {
			var f = this.type;
			if(f == "checkbox" || f == "radio") this.checked = b;
			else if(this.tagName.toLowerCase() == "option") {
				f = a(this).parent("select");
				b && f[0] && f[0].type == "select-one" && f.find("option").selected(false);
				this.selected = b
			}
		})
	};
	a.fn.ajaxSubmit.debug = false
})(jQuery);
jQuery.cookie = function(a, e, g) {
	if(typeof e != "undefined") {
		g = g || {};
		if(e === null) {
			e = "";
			g.expires = -1
		}
		var c = "";
		if(g.expires && (typeof g.expires == "number" || g.expires.toUTCString)) {
			if(typeof g.expires == "number") {
				c = new Date;
				c.setTime(c.getTime() + g.expires * 24 * 60 * 60 * 1E3)
			} else c = g.expires;
			c = "; expires=" + c.toUTCString()
		}
		var d = g.path ? "; path=" + g.path : "",
			b = g.domain ? "; domain=" + g.domain : "";
		g = g.secure ? "; secure" : "";
		document.cookie = [a, "=", encodeURIComponent(e), c, d, b, g].join("")
	} else {
		e = null;
		if(document.cookie && document.cookie != "") {
			g = document.cookie.split(";");
			for(c = 0; c < g.length; c++) {
				d = jQuery.trim(g[c]);
				if(d.substring(0, a.length + 1) == a + "=") {
					e = decodeURIComponent(d.substring(a.length + 1));
					break
				}
			}
		}
		return e
	}
};
var _canLog = true;

function _log(a) {
	if(_canLog) {
		var e = Array.prototype.slice.apply(arguments, [1]),
			g = new Date;
		g = g.getHours() + ":" + g.getMinutes() + ":" + g.getSeconds() + "." + g.getMilliseconds();
		e[0] = g + " - " + e[0];
		try {
			switch(a) {
			case "info":
				window.console.info.apply(window.console, e);
				break;
			case "warn":
				window.console.warn.apply(window.console, e);
				break;
			default:
				window.console.log.apply(window.console, e)
			}
		} catch(c) {
			window.console || (_canLog = false)
		}
	}
}

function logMsg() {
	Array.prototype.unshift.apply(arguments, ["debug"]);
	_log.apply(this, arguments)
}
var getDynaTreePersistData = null,
	DTNodeStatus_Error = -1,
	DTNodeStatus_Loading = 1,
	DTNodeStatus_Ok = 0;
(function(a) {
	function e(l) {
		for(var o = 5; l && o--;) {
			if(l.dtnode) return l.dtnode;
			l = l.parentNode
		}
		return null
	}
	function g(l) {
		var o = l.options.dnd || null;
		if(o && (o.onDragStart || o.onDrop)) n();
		o && o.onDragStart && l.$tree.draggable({
			addClasses: false,
			appendTo: "body",
			containment: false,
			delay: 0,
			distance: 4,
			revert: false,
			connectToDynatree: true,
			helper: function(q) {
				var v = e(q.target);
				return v.tree._onDragEvent("helper", v, null, q, null, null)
			},
			_last: null
		});
		o && o.onDrop && l.$tree.droppable({
			addClasses: false,
			tolerance: "intersect",
			greedy: false,
			_last: null
		})
	}
	var c = {
		create: function() {
			return function() {
				this.initialize.apply(this, arguments)
			}
		}
	},
		d = c.create();
	d.prototype = {
		initialize: function(l, o, q) {
			this.parent = l;
			this.tree = o;
			if(typeof q === "string") q = {
				title: q
			};
			if(q.key === undefined) q.key = "_" + o._nodeCount++;
			this.data = a.extend({}, a.ui.dynatree.nodedatadefaults, q);
			this.childList = this.ul = this.span = this.li = null;
			this.bSelected = this.bExpanded = this.hasSubSel = this.isLoading = false
		},
		toString: function() {
			return "DynaTreeNode<" + this.data.key + ">: '" + this.data.title + "'"
		},
		toDict: function(l, o) {
			var q = a.extend({}, this.data);
			q.activate = this.tree.activeNode === this;
			q.focus = this.tree.focusNode === this;
			q.expand = this.bExpanded;
			q.select = this.bSelected;
			o && o(q);
			if(l && this.childList) {
				q.children = [];
				for(var v = 0; v < this.childList.length; v++) q.children.push(this.childList[v].toDict(true, o))
			} else delete q.children;
			return q
		},
		fromDict: function(l) {
			var o = l.children;
			if(o === undefined) {
				this.data = a.extend(this.data, l);
				this.render()
			} else {
				l = a.extend({}, l);
				l.children = undefined;
				this.data = a.extend(this.data, l);
				this.removeChildren();
				this.addChild(o)
			}
		},
		_getInnerHtml: function() {
			var l = this.tree.options,
				o = this.tree.cache,
				q = this.getLevel(),
				v = "";
			if(q < l.minExpandLevel) {
				if(q > 1) v += o.tagConnector
			} else v += this.hasChildren() !== false ? o.tagExpander : o.tagConnector;
			if(l.checkbox && this.data.hideCheckbox !== true && !this.data.isStatusNode) v += o.tagCheckbox;
			if(this.data.icon) v += "<img src='" + l.imagePath + this.data.icon + "' alt='' />";
			else if(this.data.icon !== false) v += o.tagNodeIcon;
			o = this.data.tooltip ? " title='" + this.data.tooltip + "'" : "";
			v += l.noLink || this.data.noLink ? "<span style='display: inline-block;' class='" + l.classNames.title + "'" + o + ">" + this.data.title + "</span>" : "<a href='#' class='" + l.classNames.title + "'" + o + ">" + this.data.title + "</a>";
			return v
		},
		_fixOrder: function() {
			var l = this.childList;
			if(l) for(var o = this.ul.firstChild, q = 0; q < l.length - 1; q++) {
				var v = l[q],
					x = o.dtnode;
				if(v !== x) {
					this.tree.logDebug("_fixOrder: mismatch at index " + q + ": " + v + " != " + x);
					this.ul.insertBefore(v.li, x.li)
				} else o = o.nextSibling
			}
		},
		render: function(l) {
			var o = this.tree.options,
				q = o.classNames,
				v = this.isLastSibling();
			if(!this.parent && !this.ul) {
				this.li = this.span = null;
				this.ul = document.createElement("ul");
				this.ul.className = o.minExpandLevel > 1 ? q.container + " " + q.noConnector : q.container
			} else if(this.parent) {
				if(!this.li) {
					this.li = document.createElement("li");
					this.li.dtnode = this;
					if(this.data.key && o.generateIds) this.li.id = o.idPrefix + this.data.key;
					this.span = document.createElement("span");
					this.span.className = q.title;
					this.li.appendChild(this.span);
					if(!this.parent.ul) {
						this.parent.ul = document.createElement("ul");
						this.parent.ul.style.display = "none";
						this.parent.li.appendChild(this.parent.ul)
					}
					this.parent.ul.appendChild(this.li)
				}
				this.span.innerHTML = this._getInnerHtml();
				var x = [];
				x.push(q.node);
				this.data.isFolder && x.push(q.folder);
				this.bExpanded && x.push(q.expanded);
				this.hasChildren() !== false && x.push(q.hasChildren);
				this.data.isLazy && this.childList === null && x.push(q.lazy);
				v && x.push(q.lastsib);
				this.bSelected && x.push(q.selected);
				this.hasSubSel && x.push(q.partsel);
				this.tree.activeNode === this && x.push(q.active);
				this.data.addClass && x.push(this.data.addClass);
				x.push(q.combinedExpanderPrefix + (this.bExpanded ? "e" : "c") + (this.data.isLazy && this.childList === null ? "d" : "") + (v ? "l" : ""));
				x.push(q.combinedIconPrefix + (this.bExpanded ? "e" : "c") + (this.data.isFolder ? "f" : ""));
				this.span.className = x.join(" ");
				this.li.className = v ? q.lastsib : ""
			}
			if(this.bExpanded && this.childList) {
				for(q = 0; q < this.childList.length; q++) this.childList[q].render();
				this._fixOrder()
			}
			if(this.ul) {
				q = this.ul.style.display === "none";
				if(l && o.fx && !! q === !! this.bExpanded) {
					l = o.fx.duration || 200;
					a(this.ul).animate(o.fx, l)
				} else this.ul.style.display = this.bExpanded || !this.parent ? "" : "none"
			}
		},
		getKeyPath: function(l) {
			var o = [];
			this.visitParents(function(q) {
				q.parent && o.unshift(q.data.key)
			}, !l);
			return "/" + o.join(this.tree.options.keyPathSeparator)
		},
		getParent: function() {
			return this.parent
		},
		getChildren: function() {
			return this.childList
		},
		hasChildren: function() {
			if(this.data.isLazy) {
				if(this.childList === null || this.childList === undefined) return;
				else if(this.childList.length === 0) return false;
				else if(this.childList.length === 1 && this.childList[0].isStatusNode()) return;
				return true
			}
			return !!this.childList
		},
		isFirstSibling: function() {
			var l = this.parent;
			return !l || l.childList[0] === this
		},
		isLastSibling: function() {
			var l = this.parent;
			return !l || l.childList[l.childList.length - 1] === this
		},
		getPrevSibling: function() {
			if(!this.parent) return null;
			for(var l = this.parent.childList, o = 1; o < l.length; o++) if(l[o] === this) return l[o - 1];
			return null
		},
		getNextSibling: function() {
			if(!this.parent) return null;
			for(var l = this.parent.childList, o = 0; o < l.length - 1; o++) if(l[o] === this) return l[o + 1];
			return null
		},
		isStatusNode: function() {
			return this.data.isStatusNode === true
		},
		isChildOf: function(l) {
			return this.parent && this.parent === l
		},
		isDescendantOf: function(l) {
			if(!l) return false;
			for(var o = this.parent; o;) {
				if(o === l) return true;
				o = o.parent
			}
			return false
		},
		sortChildren: function(l, o) {
			var q = this.childList;
			if(q) {
				l = l ||
				function(x, y) {
					return x.data.title === y.data.title ? 0 : x.data.title > y.data.title
				};
				q.sort(l);
				if(o) for(var v = 0; v < q.length; v++) q[v].childList && q[v].sortChildren(l, "$norender$");
				o !== "$norender$" && this.render()
			}
		},
		_setStatusNode: function(l) {
			var o = this.childList ? this.childList[0] : null;
			if(l) if(o) {
				l.isStatusNode = true;
				l.key = "_statusNode";
				o.data = l;
				o.render()
			} else {
				l.isStatusNode = true;
				l.key = "_statusNode";
				this.addChild(l)
			} else if(o && o.isStatusNode()) {
				try {
					this.ul && this.ul.removeChild(o.li)
				} catch(q) {}
				if(this.childList.length === 1) this.childList = [];
				else this.childList.shift()
			}
		},
		setLazyNodeStatus: function(l, o) {
			var q = o && o.tooltip ? o.tooltip : null,
				v = o && o.info ? " (" + o.info + ")" : "";
			switch(l) {
			case DTNodeStatus_Ok:
				this._setStatusNode(null);
				a(this.span).removeClass(this.tree.options.classNames.nodeLoading);
				this.isLoading = false;
				this.render();
				if(this.tree.options.autoFocus) this === this.tree.tnRoot && this.childList && this.childList.length > 0 ? this.childList[0].focus() : this.focus();
				break;
			case DTNodeStatus_Loading:
				this.isLoading = true;
				a(this.span).addClass(this.tree.options.classNames.nodeLoading);
				this.parent || this._setStatusNode({
					title: this.tree.options.strings.loading + v,
					tooltip: q,
					addClass: this.tree.options.classNames.nodeWait
				});
				break;
			case DTNodeStatus_Error:
				this.isLoading = false;
				this._setStatusNode({
					title: this.tree.options.strings.loadError + v,
					tooltip: q,
					addClass: this.tree.options.classNames.nodeError
				});
				break;
			default:
				throw "Bad LazyNodeStatus: '" + l + "'.";
			}
		},
		_parentList: function(l, o) {
			for(var q = [], v = o ? this : this.parent; v;) {
				if(l || v.parent) q.unshift(v);
				v = v.parent
			}
			return q
		},
		getLevel: function() {
			for(var l = 0, o = this.parent; o;) {
				l++;
				o = o.parent
			}
			return l
		},
		_getTypeForOuterNodeEvent: function(l) {
			var o = this.tree.options.classNames,
				q = l.target;
			if(q.className.indexOf(o.node) < 0) return null;
			var v = l.pageX - q.offsetLeft;
			l = l.pageY - q.offsetTop;
			for(var x = 0; x < q.childNodes.length; x++) {
				var y = q.childNodes[x],
					D = y.offsetLeft - q.offsetLeft,
					B = y.offsetTop - q.offsetTop,
					u = y.clientWidth,
					F = y.clientHeight;
				if(v >= D && v <= D + u && l >= B && l <= B + F) if(y.className == o.title) return "title";
				else if(y.className == o.expander) return "expander";
				else if(y.className == o.checkbox) return "checkbox";
				else if(y.className == o.nodeIcon) return "icon"
			}
			return "prefix"
		},
		getEventTargetType: function(l) {
			var o = l && l.target ? l.target.className : "",
				q = this.tree.options.classNames;
			if(o === q.title) return "title";
			else if(o === q.expander) return "expander";
			else if(o === q.checkbox) return "checkbox";
			else if(o === q.nodeIcon) return "icon";
			else if(o === q.empty || o === q.vline || o === q.connector) return "prefix";
			else if(o.indexOf(q.node) >= 0) return this._getTypeForOuterNodeEvent(l);
			return null
		},
		isVisible: function() {
			for(var l = this._parentList(true, false), o = 0; o < l.length; o++) if(!l[o].bExpanded) return false;
			return true
		},
		makeVisible: function() {
			for(var l = this._parentList(true, false), o = 0; o < l.length; o++) l[o]._expand(true)
		},
		focus: function() {
			this.makeVisible();
			try {
				a(this.span).find(">a").focus()
			} catch(l) {}
		},
		isFocused: function() {
			return this.tree.tnFocused === this
		},
		_activate: function(l, o) {
			this.tree.logDebug("dtnode._activate(%o, fireEvents=%o) - %o", l, o, this);
			var q = this.tree.options;
			if(!this.data.isStatusNode) if(!(o && q.onQueryActivate && q.onQueryActivate.call(this.tree, l, this) === false)) if(l) {
				if(this.tree.activeNode) {
					if(this.tree.activeNode === this) return;
					this.tree.activeNode.deactivate()
				}
				q.activeVisible && this.makeVisible();
				this.tree.activeNode = this;
				q.persist && a.cookie(q.cookieId + "-active", this.data.key, q.cookie);
				this.tree.persistence.activeKey = this.data.key;
				a(this.span).addClass(q.classNames.active);
				o && q.onActivate && q.onActivate.call(this.tree, this)
			} else if(this.tree.activeNode === this) {
				q = this.tree.options;
				if(!(q.onQueryActivate && q.onQueryActivate.call(this.tree, false, this) === false)) {
					a(this.span).removeClass(q.classNames.active);
					q.persist && a.cookie(q.cookieId + "-active", "", q.cookie);
					this.tree.persistence.activeKey = null;
					this.tree.activeNode = null;
					o && q.onDeactivate && q.onDeactivate.call(this.tree, this)
				}
			}
		},
		activate: function() {
			this._activate(true, true)
		},
		activateSilently: function() {
			this._activate(true, false)
		},
		deactivate: function() {
			this._activate(false, true)
		},
		isActive: function() {
			return this.tree.activeNode === this
		},
		_userActivate: function() {
			var l = true,
				o = false;
			if(this.data.isFolder) switch(this.tree.options.clickFolderMode) {
			case 2:
				l = false;
				o = true;
				break;
			case 3:
				l = o = true
			}
			if(this.parent === null) o = false;
			if(o) {
				this.toggleExpand();
				this.focus()
			}
			l && this.activate()
		},
		_setSubSel: function(l) {
			if(l) {
				this.hasSubSel = true;
				a(this.span).addClass(this.tree.options.classNames.partsel)
			} else {
				this.hasSubSel = false;
				a(this.span).removeClass(this.tree.options.classNames.partsel)
			}
		},
		_fixSelectionState: function() {
			if(this.bSelected) {
				this.visit(function(x) {
					x.parent._setSubSel(true);
					x._select(true, false, false)
				});
				for(var l = this.parent; l;) {
					l._setSubSel(true);
					for(var o = true, q = 0; q < l.childList.length; q++) {
						var v = l.childList[q];
						if(!v.bSelected && !v.data.isStatusNode) {
							o = false;
							break
						}
					}
					o && l._select(true, false, false);
					l = l.parent
				}
			} else {
				this._setSubSel(false);
				this.visit(function(x) {
					x._setSubSel(false);
					x._select(false, false, false)
				});
				for(l = this.parent; l;) {
					l._select(false, false, false);
					o = false;
					for(q = 0; q < l.childList.length; q++) if(l.childList[q].bSelected || l.childList[q].hasSubSel) {
						o = true;
						break
					}
					l._setSubSel(o);
					l = l.parent
				}
			}
		},
		_select: function(l, o, q) {
			var v = this.tree.options;
			if(!this.data.isStatusNode) if(this.bSelected !== l) if(!(o && v.onQuerySelect && v.onQuerySelect.call(this.tree, l, this) === false)) {
				v.selectMode == 1 && l && this.tree.visit(function(x) {
					if(x.bSelected) {
						x._select(false, false, false);
						return false
					}
				});
				if(this.bSelected = l) {
					v.persist && this.tree.persistence.addSelect(this.data.key);
					a(this.span).addClass(v.classNames.selected);
					q && v.selectMode === 3 && this._fixSelectionState();
					o && v.onSelect && v.onSelect.call(this.tree, true, this)
				} else {
					v.persist && this.tree.persistence.clearSelect(this.data.key);
					a(this.span).removeClass(v.classNames.selected);
					q && v.selectMode === 3 && this._fixSelectionState();
					o && v.onSelect && v.onSelect.call(this.tree, false, this)
				}
			}
		},
		select: function(l) {
			if(this.data.unselectable) return this.bSelected;
			return this._select(l !== false, true, true)
		},
		toggleSelect: function() {
			return this.select(!this.bSelected)
		},
		isSelected: function() {
			return this.bSelected
		},
		_loadContent: function() {
			try {
				var l = this.tree.options;
				this.tree.logDebug("_loadContent: start - %o", this);
				this.setLazyNodeStatus(DTNodeStatus_Loading);
				if(true === l.onLazyRead.call(this.tree, this)) {
					this.setLazyNodeStatus(DTNodeStatus_Ok);
					this.tree.logDebug("_loadContent: succeeded - %o", this)
				}
			} catch(o) {
				this.tree.logWarning("_loadContent: failed - %o", o);
				this.setLazyNodeStatus(DTNodeStatus_Error, {
					tooltip: "" + o
				})
			}
		},
		_expand: function(l, o) {
			if(this.bExpanded === l) this.tree.logDebug("dtnode._expand(%o) IGNORED - %o", l, this);
			else {
				this.tree.logDebug("dtnode._expand(%o) - %o", l, this);
				var q = this.tree.options;
				if(!l && this.getLevel() < q.minExpandLevel) this.tree.logDebug("dtnode._expand(%o) prevented collapse - %o", l, this);
				else if(!(q.onQueryExpand && q.onQueryExpand.call(this.tree, l, this) === false)) {
					this.bExpanded = l;
					if(q.persist) l ? this.tree.persistence.addExpand(this.data.key) : this.tree.persistence.clearExpand(this.data.key);
					this.render(!(this.data.isLazy && this.childList === null) && !this.isLoading && !o);
					if(this.bExpanded && this.parent && q.autoCollapse) for(var v = this._parentList(false, true), x = 0; x <
			this._activate(true, false)
		},
		deactivate: function() {
			this._activate(false, true)
		},
		isActive: function() {
			return this.tree.activeNode === this
		},
		_userActivate: function() {
			var l = true,
				o = false;
			if(this.data.isFolder) switch(this.tree.options.clickFolderMode) {
			case 2:
				l = false;
				o = true;
				break;
			case 3:
				l = o = true
			}
			if(this.parent === null) o = false;
			if(o) {
				this.toggleExpand();
				this.focus()
			}
			l && this.activate()
		},
		_setSubSel: function(l) {
			if(l) {
				this.hasSubSel = true;
				a(this.span).addClass(this.tree.options.classNames.partsel)
			} else {
				this.hasSubSel = false;
				a(this.span).removeClass(this.tree.options.classNames.partsel)
			}
		},
		_fixSelectionState: function() {
			if(this.bSelected) {
				this.visit(function(x) {
					x.parent._setSubSel(true);
					x._select(true, false, false)
				});
				for(var l = this.parent; l;) {
					l._setSubSel(true);
					for(var o = true, q = 0; q < l.childList.length; q++) {
						var v = l.childList[q];
						if(!v.bSelected && !v.data.isStatusNode) {
							o = false;
							break
						}
					}
					o && l._select(true, false, false);
					l = l.parent
				}
			} else {
				this._setSubSel(false);
				this.visit(function(x) {
					x._setSubSel(false);
					x._select(false, false, false)
				});
				for(l = this.parent; l;) {
					l._select(false, false, false);
					o = false;
					for(q = 0; q < l.childList.length; q++) if(l.childList[q].bSelected || l.childList[q].hasSubSel) {
						o = true;
						break
					}
					l._setSubSel(o);
					l = l.parent
				}
			}
		},
		_select: function(l, o, q) {
			var v = this.tree.options;
			if(!this.data.isStatusNode) if(this.bSelected !== l) if(!(o && v.onQuerySelect && v.onQuerySelect.call(this.tree, l, this) === false)) {
				v.selectMode == 1 && l && this.tree.visit(function(x) {
					if(x.bSelected) {
						x._select(false, false, false);
						return false
					}
				});
				if(this.bSelected = l) {
					v.persist && this.tree.persistence.addSelect(this.data.key);
					a(this.span).addClass(v.classNames.selected);
					q && v.selectMode === 3 && this._fixSelectionState();
					o && v.onSelect && v.onSelect.call(this.tree, true, this)
				} else {
					v.persist && this.tree.persistence.clearSelect(this.data.key);
					a(this.span).removeClass(v.classNames.selected);
					q && v.selectMode === 3 && this._fixSelectionState();
					o && v.onSelect && v.onSelect.call(this.tree, false, this)
				}
			}
		},
		select: function(l) {
			if(this.data.unselectable) return this.bSelected;
			return this._select(l !== false, true, true)
		},
		toggleSelect: function() {
			return this.select(!this.bSelected)
		},
		isSelected: function() {
			return this.bSelected
		},
		_loadContent: function() {
			try {
				var l = this.tree.options;
				this.tree.logDebug("_loadContent: start - %o", this);
				this.setLazyNodeStatus(DTNodeStatus_Loading);
				if(true === l.onLazyRead.call(this.tree, this)) {
					this.setLazyNodeStatus(DTNodeStatus_Ok);
					this.tree.logDebug("_loadContent: succeeded - %o", this)
				}
			} catch(o) {
				this.tree.logWarning("_loadContent: failed - %o", o);
				this.setLazyNodeStatus(DTNodeStatus_Error, {
					tooltip: "" + o
				})
			}
		},
		_expand: function(l, o) {
			if(this.bExpanded === l) this.tree.logDebug("dtnode._expand(%o) IGNORED - %o", l, this);
			else {
				this.tree.logDebug("dtnode._expand(%o) - %o", l, this);
				var q = this.tree.options;
				if(!l && this.getLevel() < q.minExpandLevel) this.tree.logDebug("dtnode._expand(%o) prevented collapse - %o", l, this);
				else if(!(q.onQueryExpand && q.onQueryExpand.call(this.tree, l, this) === false)) {
					this.bExpanded = l;
					if(q.persist) l ? this.tree.persistence.addExpand(this.data.key) : this.tree.persistence.clearExpand(this.data.key);
					this.render(!(this.data.isLazy && this.childList === null) && !this.isLoading && !o);
					if(this.bExpanded && this.parent && q.autoCollapse) for(var v = this._parentList(false, true), x = 0; x < v.length; x++) v[x].collapseSiblings();
					q.activeVisible && this.tree.activeNode && !this.tree.activeNode.isVisible() && this.tree.activeNode.deactivate();
					if(l && this.data.isLazy && this.childList === null && !this.isLoading) this._loadContent();
					else q.onExpand && q.onExpand.call(this.tree, l, this)
				}
			}
		},
		expand: function(l) {
			l = l !== false;
			!this.childList && !this.data.isLazy && l || this.parent === null && !l || this._expand(l)
		},
		scheduleAction: function(l, o) {
			if(this.tree.timer) {
				clearTimeout(this.tree.timer);
				this.tree.logDebug("clearTimeout(%o)", this.tree.timer)
			}
			var q = this;
			switch(l) {
			case "cancel":
				break;
			case "expand":
				this.tree.timer = setTimeout(function() {
					q.tree.logDebug("setTimeout: trigger expand");
					q.expand(true)
				}, o);
				break;
			case "activate":
				this.tree.timer = setTimeout(function() {
					q.tree.logDebug("setTimeout: trigger activate");
					q.activate()
				}, o);
				break;
			default:
				throw "Invalid mode " + l;
			}
			this.tree.logDebug("setTimeout(%s, %s): %s", l, o, this.tree.timer)
		},
		toggleExpand: function() {
			this.expand(!this.bExpanded)
		},
		collapseSiblings: function() {
			if(this.parent !== null) for(var l = this.parent.childList, o = 0; o < l.length; o++) l[o] !== this && l[o].bExpanded && l[o]._expand(false)
		},
		_onClick: function(l) {
			l = this.getEventTargetType(l);
			if(l === "expander") {
				this.toggleExpand();
				this.focus()
			} else if(l === "checkbox") {
				this.toggleSelect();
				this.focus()
			} else {
				this._userActivate();
				l = this.span.getElementsByTagName("a");
				if(l[0]) a.browser.msie || l[0].focus();
				else return true
			}
			return false
		},
		_onDblClick: function() {},
		_onKeydown: function(l) {
			var o = true;
			switch(l.which) {
			case 107:
			case 187:
				this.bExpanded || this.toggleExpand();
				break;
			case 109:
			case 189:
				this.bExpanded && this.toggleExpand();
				break;
			case 32:
				this._userActivate();
				break;
			case 8:
				this.parent && this.parent.focus();
				break;
			case 37:
				if(this.bExpanded) {
					this.toggleExpand();
					this.focus()
				} else this.parent && this.parent.parent && this.parent.focus();
				break;
			case 39:
				if(!this.bExpanded && (this.childList || this.data.isLazy)) {
					this.toggleExpand();
					this.focus()
				} else this.childList && this.childList[0].focus();
				break;
			case 38:
				for(var q = this.getPrevSibling(); q && q.bExpanded && q.childList;) q = q.childList[q.childList.length - 1];
				if(!q && this.parent && this.parent.parent) q = this.parent;
				q && q.focus();
				break;
			case 40:
				if(this.bExpanded && this.childList) q = this.childList[0];
				else {
					l = this._parentList(false, true);
					for(var v = l.length - 1; v >= 0; v--) if(q = l[v].getNextSibling()) break
				}
				q && q.focus();
				break;
			default:
				o = false
			}
			return !o
		},
		_onKeypress: function() {},
		_onFocus: function(l) {
			var o = this.tree.options;
			if(l.type == "blur" || l.type == "focusout") {
				o.onBlur && o.onBlur.call(this.tree, this);
				this.tree.tnFocused && a(this.tree.tnFocused.span).removeClass(o.classNames.focused);
				this.tree.tnFocused = null;
				o.persist && a.cookie(o.cookieId + "-focus", "", o.cookie)
			} else if(l.type == "focus" || l.type == "focusin") {
				if(this.tree.tnFocused && this.tree.tnFocused !== this) {
					this.tree.logDebug("dtnode.onFocus: out of sync: curFocus: %o", this.tree.tnFocused);
					a(this.tree.tnFocused.span).removeClass(o.classNames.focused)
				}
				this.tree.tnFocused = this;
				o.onFocus && o.onFocus.call(this.tree, this);
				a(this.tree.tnFocused.span).addClass(o.classNames.focused);
				o.persist && a.cookie(o.cookieId + "-focus", this.data.key, o.cookie)
			}
		},
		visit: function(l, o) {
			var q = true;
			if(o === true) {
				q = l(this);
				if(q === false || q == "skip") return q
			}
			if(this.childList) for(var v = 0; v < this.childList.length; v++) {
				q = this.childList[v].visit(l, true);
				if(q === false) break
			}
			return q
		},
		visitParents: function(l, o) {
			if(o && l(this) === false) return false;
			for(var q = this.parent; q;) {
				if(l(q) === false) return false;
				q = q.parent
			}
			return true
		},
		remove: function() {
			if(this === this.tree.root) throw "Cannot remove system root";
			return this.parent.removeChild(this)
		},
		removeChild: function(l) {
			var o = this.childList;
			if(o.length == 1) {
				if(l !== o[0]) throw "removeChild: invalid child";
				return this.removeChildren()
			}
			l === this.tree.activeNode && l.deactivate();
			if(this.tree.options.persist) {
				l.bSelected && this.tree.persistence.clearSelect(l.data.key);
				l.bExpanded && this.tree.persistence.clearExpand(l.data.key)
			}
			l.removeChildren(true);
			this.ul.removeChild(l.li);
			for(var q = 0; q < o.length; q++) if(o[q] === l) {
				this.childList.splice(q, 1);
				delete l;
				break
			}
		},
		removeChildren: function(l, o) {
			this.tree.logDebug("%s.removeChildren(%o)", this, l);
			var q = this.tree,
				v = this.childList;
			if(v) {
				for(var x = 0; x < v.length; x++) {
					var y = v[x];
					y === q.activeNode && !o && y.deactivate();
					if(this.tree.options.persist && !o) {
						y.bSelected && this.tree.persistence.clearSelect(y.data.key);
						y.bExpanded && this.tree.persistence.clearExpand(y.data.key)
					}
					y.removeChildren(true, o);
					this.ul && this.ul.removeChild(y.li);
					delete y
				}
				this.childList = null
			}
			if(!l) {
				this.isLoading = false;
				this.render()
			}
		},
		setTitle: function(l) {
			this.fromDict({
				title: l
			})
		},
		reload: function() {
			throw "Use reloadChildren() instead";
		},
		reloadChildren: function(l) {
			if(this.parent === null) throw "Use tree.reload() instead";
			else if(!this.data.isLazy) throw "node.reloadChildren() requires lazy nodes.";
			if(l) {
				var o = this,
					q = "nodeLoaded.dynatree." + this.tree.$tree.attr("id") + "." + this.data.key;
				this.tree.$tree.bind(q, function(v, x, y) {
					o.tree.$tree.unbind(q);
					o.tree.logInfo("loaded %o, %o, %o", v, x, y);
					if(x !== o) throw "got invalid load event";
					l.call(o.tree, x, y)
				})
			}
			this.removeChildren();
			this._loadContent()
		},
		_loadKeyPath: function(l, o) {
			var q = this.tree;
			q.logDebug("%s._loadKeyPath(%s)", this, l);
			if(l === "") throw "Key path must not be empty";
			var v = l.split(q.options.keyPathSeparator);
			if(v[0] === "") throw "Key path must be relative (don't start with '/')";
			for(var x = v.shift(), y = 0; y < this.childList.length; y++) {
				var D = this.childList[y];
				if(D.data.key === x) {
					if(v.length === 0) o.call(q, D, "ok");
					else if(D.data.isLazy && (D.childList === null || D.childList === undefined)) {
						q.logDebug("%s._loadKeyPath(%s) -> reloading %s...", this, l, D);
						var B = this;
						D.reloadChildren(function(u, F) {
							if(F) {
								q.logDebug("%s._loadKeyPath(%s) -> reloaded %s.", u, l, u);
								o.call(q, D, "loaded");
								u._loadKeyPath(v.join(q.options.keyPathSeparator), o)
							} else {
								q.logWarning("%s._loadKeyPath(%s) -> reloadChildren() failed.", B, l);
								o.call(q, D, "error")
							}
						})
					} else {
						o.call(q, D, "loaded");
						D._loadKeyPath(v.join(q.options.keyPathSeparator), o)
					}
					return
				}
			}
			q.logWarning("Node not found: " + x)
		},
		resetLazy: function() {
			if(this.parent === null) throw "Use tree.reload() instead";
			else if(!this.data.isLazy) throw "node.resetLazy() requires lazy nodes.";
			this.expand(false);
			this.removeChildren()
		},
		_addChildNode: function(l, o) {
			var q = this.tree,
				v = q.options,
				x = q.persistence;
			l.parent = this;
			if(this.childList === null) this.childList = [];
			else o || a(this.childList[this.childList.length - 1].span).removeClass(v.classNames.lastsib);
			if(o) {
				var y = a.inArray(o, this.childList);
				if(y < 0) throw "<beforeNode> must be a child of <this>";
				this.childList.splice(y		v.ul = document.createElement("ul");
						v.ul.style.display = "none";
						v.li.appendChild(v.ul)
					}
				}
				v.ul.appendChild(this.li);
				if(this.tree !== l.tree) {
					this.visit(function(y) {
						y.tree = l.tree
					}, null, true);
					throw "Not yet implemented.";
				}
				q.isDescendantOf(v) || q.render();
				v.isDescendantOf(q) || v.render()
			}
		},
		lastentry: undefined
	};
	var b = c.create();
	b._getTreePersistData = function(l, o) {
		var q = new b(l, o);
		q.read();
		return q.toDict()
	};
	getDynaTreePersistData = b._getTreePersistData;
	b.prototype = {
		initialize: function(l, o) {
			this._log("DynaTreeStatus: initialize");
			if(l === undefined) l = a.ui.dynatree.prototype.options.cookieId;
			o = a.extend({}, a.ui.dynatree.prototype.options.cookie, o);
			this.cookieId = l;
			this.cookieOpts = o;
			this.cookiesFound = undefined;
			this.selectedKeyList = this.expandedKeyList = this.focusedKey = this.activeKey = null
		},
		_log: function() {
			Array.prototype.unshift.apply(arguments, ["debug"]);
			_log.apply(this, arguments)
		},
		read: function() {
			this._log("DynaTreeStatus: read");
			this.cookiesFound = false;
			var l = a.cookie(this.cookieId + "-active");
			this.activeKey = l === null ? "" : l;
			if(l !== null) this.cookiesFound = true;
			l = a.cookie(this.cookieId + "-focus");
			this.focusedKey = l === null ? "" : l;
			if(l !== null) this.cookiesFound = true;
			l = a.cookie(this.cookieId + "-expand");
			this.expandedKeyList = l === null ? [] : l.split(",");
			if(l !== null) this.cookiesFound = true;
			l = a.cookie(this.cookieId + "-select");
			this.selectedKeyList = l === null ? [] : l.split(",");
			if(l !== null) this.cookiesFound = true
		},
		write: function() {
			this._log("DynaTreeStatus: write");
			a.cookie(this.cookieId + "-active", this.activeKey === null ? "" : this.activeKey, this.cookieOpts);
			a.cookie(this.cookieId + "-focus", this.focusedKey === null ? "" : this.focusedKey, this.cookieOpts);
			a.cookie(this.cookieId + "-expand", this.expandedKeyList === null ? "" : this.expandedKeyList.join(","), this.cookieOpts);
			a.cookie(this.cookieId + "-select", this.selectedKeyList === null ? "" : this.selectedKeyList.join(","), this.cookieOpts)
		},
		addExpand: function(l) {
			this._log("addExpand(%o)", l);
			if(a.inArray(l, this.expandedKeyList) < 0) {
				this.expandedKeyList.push(l);
				a.cookie(this.cookieId + "-expand", this.expandedKeyList.join(","), this.cookieOpts)
			}
		},
		clearExpand: function(l) {
			this._log("clearExpand(%o)", l);
			l = a.inArray(l, this.expandedKeyList);
			if(l >= 0) {
				this.expandedKeyList.splice(l, 1);
				a.cookie(this.cookieId + "-expand", this.expandedKeyList.join(","), this.cookieOpts)
			}
		},
		addSelect: function(l) {
			this._log("addSelect(%o)", l);
			if(a.inArray(l, this.selectedKeyList) < 0) {
				this.selectedKeyList.push(l);
				a.cookie(this.cookieId + "-select", this.selectedKeyList.join(","), this.cookieOpts)
			}
		},
		clearSelect: function(l) {
			this._log("clearSelect(%o)", l);
			l = a.inArray(l, this.selectedKeyList);
			if(l >= 0) {
				this.selectedKeyList.splice(l, 1);
				a.cookie(this.cookieId + "-select", this.selectedKeyList.join(","), this.cookieOpts)
			}
		},
		isReloading: function() {
			return this.cookiesFound === true
		},
		toDict: function() {
			return {
				cookiesFound: this.cookiesFound,
				activeKey: this.activeKey,
				focusedKey: this.activeKey,
				expandedKeyList: this.expandedKeyList,
				selectedKeyList: this.selectedKeyList
			}
		},
		lastentry: undefined
	};
	var f = c.create();
	f.version = "$Version: 1.0.2$";
	f.prototype = {
		initialize: function(l) {
			this.phase = "init";
			this.$widget = l;
			this.options = l.options;
			this.$tree = l.element;
			this.timer = null;
			this.divTree = this.$tree.get(0);
			g(this)
		},
		_load: function(l) {
			var o = this.options;
			this.bEnableUpdate = true;
			this._nodeCount = 1;
			this.focusNode = this.activeNode = null;
			console_log(o);
			o.rootVisible !== undefined && _log("warn", "Option 'rootVisible' is no longer supported.");
			o.title !== undefined && _log("warn", "Option 'title' is no longer supported.");
			if(o.minExpandLevel < 1) {
				_log("warn", "Option 'minExpandLevel' must be >= 1.");
				o.minExpandLevel = 1
			}
			if(o.classNames !== a.ui.dynatree.prototype.options.classNames) o.classNames = a.extend({}, a.ui.dynatree.prototype.options.classNames, o.classNames);
			if(o.ajaxDefaults !== a.ui.dynatree.prototype.options.ajaxDefaults) o.ajaxDefaults = a.extend({}, a.ui.dynatree.prototype.options.ajaxDefaults, o.ajaxDefaults);
			if(o.dnd !== a.ui.dynatree.prototype.options.dnd) o.dnd = a.extend({}, a.ui.dynatree.prototype.options.dnd, o.dnd);
			o.imagePath || a("script").each(function() {
				if(this.src.search(/.*dynatree[^\/]*\.js$/i) >= 0) {
					o.imagePath = this.src.indexOf("/") >= 0 ? this.src.slice(0, this.src.lastIndexOf("/")) + "/skin/" : "skin/";
					logMsg("Guessing imagePath from '%s': '%s'", this.src, o.imagePath);
					return false
				}
			});
			this.persistence = new b(o.cookieId, o.cookie);
			if(o.persist) {
				a.cookie || _log("warn", "Please include jquery.cookie.js to use persistence.");
				this.persistence.read()
			}
			this.logDebug("DynaTree.persistence: %o", this.persistence.toDict());
			this.cache = {
				tagEmpty: "<span class='" + o.classNames.empty + "'></span>",
				tagVline: "<span class='" + o.classNames.vline + "'></span>",
				tagExpander: "<span class='" + o.classNames.expander + "'></span>",
				tagConnector: "<span class='" + o.classNames.connector + "'></span>",
				tagNodeIcon: "<span class='" + o.classNames.nodeIcon + "'></span>",
				tagCheckbox: "<span class='" + o.classNames.checkbox + "'></span>",
				lastentry: undefined
			};
			if(o.children || o.initAjax && o.initAjax.url || o.initId) a(this.divTree).empty();
			else this.divRoot && a(this.divRoot).remove();
			this.tnRoot = new d(null, this, {});
			this.tnRoot.bExpanded = true;
			this.tnRoot.render();
			this.divTree.appendChild(this.tnRoot.ul);
			var q = this.tnRoot,
				v = o.persist && this.persistence.isReloading(),
				x = false,
				y = this.enableUpdate(false);
			this.logDebug("Dynatree._load(): read tree structure...");
			if(o.children) q.addChild(o.children);
			else if(o.initAjax && o.initAjax.url) {
				x = true;
				q.data.isLazy = true;
				this._reloadAjax(l)
			} else if(o.initId) this._createFromTag(q, a("#" + o.initId));
			else {
				l = this.$tree.find(">ul:first").hide();
				this._createFromTag(q, l);
				l.remove()
			}
			this._checkConsistency();
			this.logDebug("Dynatree._load(): render nodes...");
			this.enableUpdate(y);
			this.logDebug("Dynatree._load(): bind events...");
			this.$widget.bind();
			this.logDebug("Dynatree._load(): postInit...");
			this.phase = "postInit";
			o.persist && this.persistence.write();
			if(this.focusNode && this.focusNode.isVisible()) {
				this.logDebug("Focus on init: %o", this.focusNode);
				this.focusNode.focus()
			}!x && o.onPostInit && o.onPostInit.call(this, v, false);
			this.phase = "idle"
		},
		_reloadAjax: function(l) {
			var o = this.options;
			if(!o.initAjax || !o.initAjax.url) throw "tree.reload() requires 'initAjax' mode.";
			var q = this.persistence,
				v = a.extend({}, o.initAjax);
			if(v.addActiveKey) v.data.activeKey = q.activeKey;
			if(v.addFocusedKey) v.data.focusedKey = q.focusedKey;
			if(v.addExpandedKeyList) v.data.expandedKeyList = q.expandedKeyList.join(",");
			if(v.addSelectedKeyList) v.data.selectedKeyList = q.selectedKeyList.join(",");
			if(o.onPostInit) {
				v.success && this.logWarning("initAjax: success callback is ignored when onPostInit was specified.");
				v.error && this.logWarning("initAjax: error callback is ignored when onPostInit was specified.");
				var x = q.isReloading();
				v.success = function(y) {
					o.onPostInit.call(y.tree, x, false);
					l && l.call(y.tree, "ok")
				};
				v.error = function(y) {
					o.onPostInit.call(y.tree, x, true);
					l && l.call(y.tree, "error")
				}
			}
			this.logDebug("Dynatree._init(): send Ajax request...");
			this.tnRoot.aptVisible' is no longer supported.");
			o.title !== undefined && _log("warn", "Option 'title' is no longer supported.");
			if(o.minExpandLevel < 1) {
				_log("warn", "Option 'minExpandLevel' must be >= 1.");
				o.minExpandLevel = 1
			}
			if(o.classNames !== a.ui.dynatree.prototype.options.classNames) o.classNames = a.extend({}, a.ui.dynatree.prototype.options.classNames, o.classNames);
			if(o.ajaxDefaults !== a.ui.dynatree.prototype.options.ajaxDefaults) o.ajaxDefaults = a.extend({}, a.ui.dynatree.prototype.options.ajaxDefaults, o.ajaxDefaults);
			if(o.dnd !== a.ui.dynatree.prototype.options.dnd) o.dnd = a.extend({}, a.ui.dynatree.prototype.options.dnd, o.dnd);
			o.imagePath || a("script").each(function() {
				if(this.src.search(/.*dynatree[^\/]*\.js$/i) >= 0) {
					o.imagePath = this.src.indexOf("/") >= 0 ? this.src.slice(0, this.src.lastIndexOf("/")) + "/skin/" : "skin/";
					logMsg("Guessing imagePath from '%s': '%s'", this.src, o.imagePath);
					return false
				}
			});
			this.persistence = new b(o.cookieId, o.cookie);
			if(o.persist) {
				a.cookie || _log("warn", "Please include jquery.cookie.js to use persistence.");
				this.persistence.read()
			}
			this.logDebug("DynaTree.persistence: %o", this.persistence.toDict());
			this.cache = {
				tagEmpty: "<span class='" + o.classNames.empty + "'></span>",
				tagVline: "<span class='" + o.classNames.vline + "'></span>",
				tagExpander: "<span class='" + o.classNames.expander + "'></span>",
				tagConnector: "<span class='" + o.classNames.connector + "'></span>",
				tagNodeIcon: "<span class='" + o.classNames.nodeIcon + "'></span>",
				tagCheckbox: "<span class='" + o.classNames.checkbox + "'></span>",
				lastentry: undefined
			};
			if(o.children || o.initAjax && o.initAjax.url || o.initId) a(this.divTree).empty();
			else this.divRoot && a(this.divRoot).remove();
			this.tnRoot = new d(null, this, {});
			this.tnRoot.bExpanded = true;
			this.tnRoot.render();
			this.divTree.appendChild(this.tnRoot.ul);
			var q = this.tnRoot,
				v = o.persist && this.persistence.isReloading(),
				x = false,
				y = this.enableUpdate(false);
			this.logDebug("Dynatree._load(): read tree structure...");
			if(o.children) q.addChild(o.children);
			else if(o.initAjax && o.initAjax.url) {
				x = true;
				q.data.isLazy = true;
				this._reloadAjax(l)
			} else if(o.initId) this._createFromTag(q, a("#" + o.initId));
			else {
				l = this.$tree.find(">ul:first").hide();
				this._createFromTag(q, l);
				l.remove()
			}
			this._checkConsistency();
			this.logDebug("Dynatree._load(): render nodes...");
			this.enableUpdate(y);
			this.logDebug("Dynatree._load(): bind events...");
			this.$widget.bind();
			this.logDebug("Dynatree._load(): postInit...");
			this.phase = "postInit";
			o.persist && this.persistence.write();
			if(this.focusNode && this.focusNode.isVisible()) {
				this.logDebug("Focus on init: %o", this.focusNode);
				this.focusNode.focus()
			}!x && o.onPostInit && o.onPostInit.call(this, v, false);
			this.phase = "idle"
		},
		_reloadAjax: function(l) {
			var o = this.options;
			if(!o.initAjax || !o.initAjax.url) throw "tree.reload() requires 'initAjax' mode.";
			var q = this.persistence,
				v = a.extend({}, o.initAjax);
			if(v.addActiveKey) v.data.activeKey = q.activeKey;
			if(v.addFocusedKey) v.data.focusedKey = q.focusedKey;
			if(v.addExpandedKeyList) v.data.expandedKeyList = q.expandedKeyList.join(",");
			if(v.addSelectedKeyList) v.data.selectedKeyList = q.selectedKeyList.join(",");
			if(o.onPostInit) {
				v.success && this.logWarning("initAjax: success callback is ignored when onPostInit was specified.");
				v.error && this.logWarning("initAjax: error callback is ignored when onPostInit was specified.");
				var x = q.isReloading();
				v.success = function(y) {
					o.onPostInit.call(y.tree, x, false);
					l && l.call(y.tree, "ok")
				};
				v.error = function(y) {
					o.onPostInit.call(y.tree, x, true);
					l && l.call(y.tree, "error")
				}
			}
			this.logDebug("Dynatree._init(): send Ajax request...");
			this.tnRoot.appendAjax(v)
		},
		toString: function() {
			return "Dynatree '" + this.$tree.attr("id") + "'"
		},
		toDict: function() {
			return this.tnRoot.toDict(true)
		},
		serializeArray: function(l) {
			l = this.getSelectedNodes(l);
			for(var o = this.$tree.attr("name") || this.$tree.attr("id"), q = [], v = 0, x = l.length; v < x; v++) q.push({
				name: o,
				value: l[v].data.key
			});
			return q
		},
		getPersistData: function() {
			return this.persistence.toDict()
		},
		logDebug: function() {
			if(this.options.debugLevel >= 2) {
				Array.prototype.unshift.apply(arguments, ["debug"]);
				_log.apply(this, arguments)
			}
		},
		logInfo: function() {
			if(this.options.debugLevel >= 1) {
				Array.prototype.unshift.apply(arguments, ["info"]);
				_log.apply(this, arguments)
			}
		},
		logWarning: function() {
			Array.prototype.unshift.apply(arguments, ["warn"]);
			_log.apply(this, arguments)
		},
		isInitializing: function() {
			return this.phase == "init" || this.phase == "postInit"
		},
		isReloading: function() {
			return(this.phase == "init" || this.phase == "postInit") && this.options.persist && this.persistence.cookiesFound
		},
		isUserEvent: function() {
			return this.phase == "userEvent"
		},
		redraw: function() {
			this.logDebug("dynatree.redraw()...");
			this.tnRoot.render(false);
			this.logDebug("dynatree.redraw() done.")
		},
		reload: function(l) {
			this._load(l)
		},
		getRoot: function() {
			return this.tnRoot
		},
		enable: function() {
			this.$widget.enable()
		},
		disable: function() {
			this.$widget.disable()
		},
		getNodeByKey: function(l) {
			var o = document.getElementById(this.options.idPrefix + l);
			if(o) return o.dtnode ? o.dtnode : null;
			var q = null;
			this.visit(function(v) {
				if(v.data.key == l) {
					q = v;
					return false
				}
			}, true);
			return q
		},
		getActiveNode: function() {
			return this.activeNode
		},
		reactivate: function(l) {
			var o = this.activeNode;
			if(o) {
				this.activeNode = null;
				o.activate();
				l && o.focus()
			}
		},
		getSelectedNodes: function(l) {
			var o = [];
			this.tnRoot.visit(function(q) {
				if(q.bSelected) {
					o.push(q);
					if(l === true) return "skip"
				}
			});
			return o
		},
		activateKey: function(l) {
			l = l === null ? null : this.getNodeByKey(l);
			if(!l) {
				this.activeNode && this.activeNode.deactivate();
				return this.activeNode = null
			}
			l.focus();
			l.activate();
			return l
		},
		loadKeyPath: function(l, o) {
			var q = l.split(this.options.keyPathSeparator);
			q[0] === "" && q.shift();
			if(q[0] == this.tnRoot.data.key) {
				this.logDebug("Removed leading root key.");
				q.shift()
			}
			l = q.join(this.options.keyPathSeparator);
			return this.tnRoot._loadKeyPath(l, o)
		},
		selectKey: function(l, o) {
			var q = this.getNodeByKey(l);
			if(!q) return null;
			q.select(o);
			return q
		},
		enableUpdate: function(l) {
			if(this.bEnableUpdate == l) return l;
			(this.bEnableUpdate = l) && this.redraw();
			return !l
		},
		visit: function(l, o) {
			return this.tnRoot.visit(l, o)
		},
		_createFromTag: function(l, o) {
			var q = this;
			o.find(">li").each(function() {
				var v = a(this),
					x = v.find(">span:first");
				if(x.length) x = x.html();
				else {
					x = v.html();
					var y = x.search(/<ul/i);
					x = y >= 0 ? a.trim(x.substring(0, y)) : a.trim(x)
				}
				x = {
					title: x,
					isFolder: v.hasClass("folder"),
					isLazy: v.hasClass("lazy"),
					expand: v.hasClass("expanded"),
					select: v.hasClass("selected"),
					activate: v.hasClass("active"),
					focus: v.hasClass("focused"),
					noLink: v.hasClass("noLink")
				};
				if(v.attr("title")) x.tooltip = v.attr("title");
				if(v.attr("id")) x.key = v.attr("id");
				if(v.attr("data")) if(y = a.trim(v.attr("data"))) {
					if(y.charAt(0) != "{") y = "{" + y + "}";
					try {
						a.extend(x, eval("(" + y + ")"))
					} catch(D) {
						throw "Error parsing node data: " + D + "\ndata:\n'" + y + "'";
					}
				}
				x = l.addChild(x);
				v = v.find(">ul:first");
				v.length && qpendAjax(v)
		},
		toString: function() {
			return "Dynatree '" + this.$tree.attr("id") + "'"
		},
		toDict: function() {
			return this.tnRoot.toDict(true)
		},
		serializeArray: function(l) {
			l = this.getSelectedNodes(l);
			for(var o = this.$tree.attr("name") || this.$tree.attr("id"), q = [], v = 0, x = l.length; v < x; v++) q.push({
				name: o,
				value: l[v].data.key
			});
			return q
		},
		getPersistData: function() {
			return this.persistence.toDict()
		},
		logDebug: function() {
			if(this.options.debugLevel >= 2) {
				Array.prototype.unshift.apply(arguments, ["debug"]);
				_log.apply(this, arguments)
			}
		},
		logInfo: function() {
			if(this.options.debugLevel >= 1) {
				Array.prototype.unshift.apply(arguments, ["info"]);
				_log.apply(this, arguments)
			}
		},
		logWarning: function() {
			Array.prototype.unshift.apply(arguments, ["warn"]);
			_log.apply(this, arguments)
		},
		isInitializing: function() {
			return this.phase == "init" || this.phase == "postInit"
		},
		isReloading: function() {
			return(this.phase == "init" || this.phase == "postInit") && this.options.persist && this.persistence.cookiesFound
		},
		isUserEvent: function() {
			return this.phase == "userEvent"
		},
		redraw: function() {
			this.logDebug("dynatree.redraw()...");
			this.tnRoot.render(false);
			this.logDebug("dynatree.redraw() done.")
		},
		reload: function(l) {
			this._load(l)
		},
		getRoot: function() {
			return this.tnRoot
		},
		enable: function() {
			this.$widget.enable()
		},
		disable: function() {
			this.$widget.disable()
		},
		getNodeByKey: function(l) {
			var o = document.getElementById(this.options.idPrefix + l);
			if(o) return o.dtnode ? o.dtnode : null;
			var q = null;
			this.visit(function(v) {
				if(v.data.key == l) {
					q = v;
					return false
				}
			}, true);
			return q
		},
		getActiveNode: function() {
			return this.activeNode
		},
		reactivate: function(l) {
			var o = this.activeNode;
			if(o) {
				this.activeNode = null;
				o.activate();
				l && o.focus()
			}
		},
		getSelectedNodes: function(l) {
			var o = [];
			this.tnRoot.visit(function(q) {
				if(q.bSelected) {
					o.push(q);
					if(l === true) return "skip"
				}
			});
			return o
		},
		activateKey: function(l) {
			l = l === null ? null : this.getNodeByKey(l);
			if(!l) {
				this.activeNode && this.activeNode.deactivate();
				return this.activeNode = null
			}
			l.focus();
			l.activate();
			return l
		},
		loadKeyPath: function(l, o) {
			var q = l.split(this.options.keyPathSeparator);
			q[0] === "" && q.shift();
			if(q[0] == this.tnRoot.data.key) {
				this.logDebug("Removed leading root key.");
				q.shift()
			}
			l = q.join(this.options.keyPathSeparator);
			return this.tnRoot._loadKeyPath(l, o)
		},
		selectKey: function(l, o) {
			var q = this.getNodeByKey(l);
			if(!q) return null;
			q.select(o);
			return q
		},
		enableUpdate: function(l) {
			if(this.bEnableUpdate == l) return l;
			(this.bEnableUpdate = l) && this.redraw();
			return !l
		},
		visit: function(l, o) {
			return this.tnRoot.visit(l, o)
		},
		_createFromTag: function(l, o) {
			var q = this;
			o.find(">li").each(function() {
				var v = a(this),
					x = v.find(">span:first");
				if(x.length) x = x.html();
				else {
					x = v.html();
					var y = x.search(/<ul/i);
					x = y >= 0 ? a.trim(x.substring(0, y)) : a.trim(x)
				}
				x = {
					title: x,
					isFolder: v.hasClass("folder"),
					isLazy: v.hasClass("lazy"),
					expand: v.hasClass("expanded"),
					select: v.hasClass("selected"),
					activate: v.hasClass("active"),
					focus: v.hasClass("focused"),
					noLink: v.hasClass("noLink")
				};
				if(v.attr("title")) x.tooltip = v.attr("title");
				if(v.attr("id")) x.key = v.attr("id");
				if(v.attr("data")) if(y = a.trim(v.attr("data"))) {
					if(y.charAt(0) != "{") y = "{" + y + "}";
					try {
						a.extend(x, eval("(" + y + ")"))
					} catch(D) {
						throw "Error parsing node data: " + D + "\ndata:\n'" + y + "'";
					}
				}
				x = l.addChild(x);
				v = v.find(">ul:first");
				v.length && qalse,
		selectMode: 2,
		fx: null,
		noLink: false,
		onClick: null,
		onDblClick: null,
		onKeydown: null,
		onKeypress: null,
		onFocus: null,
		onBlur: null,
		onQueryActivate: null,
		onQuerySelect: null,
		onQueryExpand: null,
		onPostInit: null,
		onActivate: null,
		onDeactivate: null,
		onSelect: null,
		onExpand: null,
		onLazyRead: null,
		dnd: {
			onDragStart: null,
			onDragStop: null,
			autoExpandMS: 1E3,
			preventVoidMoves: true,
			onDragEnter: null,
			onDragOver: null,
			onDrop: null,
			onDragLeave: null
		},
		ajaxDefaults: {
			cache: false,
			dataType: "json"
		},
		strings: {
			loading: "Loading&#8230;",
			loadError: "Load error!"
		},
		generateIds: false,
		idPrefix: "dynatree-id-",
		keyPathSeparator: "/",
		cookieId: "dynatree",
		cookie: {
			expires: null
		},
		classNames: {
			container: "dynatree-container",
			node: "dynatree-node",
			folder: "dynatree-folder",
			empty: "dynatree-empty",
			vline: "dynatree-vline",
			expander: "dynatree-expander",
			connector: "dynatree-connector",
			checkbox: "dynatree-checkbox",
			nodeIcon: "dynatree-icon",
			title: "dynatree-title",
			noConnector: "dynatree-no-connector",
			nodeError: "dynatree-statusnode-error",
			nodeWait: "dynatree-statusnode-wait",
			hidden: "dynatree-hidden",
			combinedExpanderPrefix: "dynatree-exp-",
			combinedIconPrefix: "dynatree-ico-",
			nodeLoading: "dynatree-loading",
			hasChildren: "dynatree-has-children",
			active: "dynatree-active",
			selected: "dynatree-selected",
			expanded: "dynatree-expanded",
			lazy: "dynatree-lazy",
			focused: "dynatree-focused",
			partsel: "dynatree-partsel",
			lastsib: "dynatree-lastsib"
		},
		debugLevel: 1,
		lastentry: undefined
	};
	if(parseFloat(a.ui.version) < 1.8) a.ui.dynatree.defaults = a.ui.dynatree.prototype.options;
	a.ui.dynatree.nodedatadefaults = {
		title: null,
		key: null,
		isFolder: false,
		isLazy: false,
		tooltip: null,
		icon: null,
		addClass: null,
		noLink: false,
		activate: false,
		focus: false,
		expand: false,
		select: false,
		hideCheckbox: false,
		unselectable: false,
		children: null,
		lastentry: undefined
	};
	var j = false,
		n = function() {
			if(!j) {
				a.ui.plugin.add("draggable", "connectToDynatree", {
					start: function(l, o) {
						var q = a(this).data("draggable"),
							v = o.helper.data("dtSourceNode") || null;
						logMsg("draggable-connectToDynatree.start, %s", v);
						logMsg("    this: %o", this);
						logMsg("    event: %o", l);
						logMsg("    draggable: %o", q);
						logMsg("    ui: %o", o);
						if(v) {
							q.offset.click.top = -2;
							q.offset.click.left = +16;
							return v.tree._onDragEvent("start", v, null, l, o, q)
						}
					},
					drag: function(l, o) {
						var q = a(this).data("draggable"),
							v = o.helper.data("dtSourceNode") || null,
							x = o.helper.data("dtTargetNode") || null,
							y = e(l.target);
						if(l.target && !y) if(a(l.target).closest("div.dynatree-drag-helper,#dynatree-drop-marker").length > 0) {
							logMsg("Drag event over helper: ignored.");
							return
						}
						o.helper.data("dtTargetNode", y);
						x && x !== y && x.tree._onDragEvent("leave", x, v, l, o, q);
						if(y) if(y.tree.options.dnd.onDrop) y === x ? y.tree._onDragEvent("over", y, v, l, o, q) : y.tree._onDragEvent("enter", y, v, l, o, q)
					},
					stop: function(l, o) {
						var q = a(this).data("draggable"),
							v = o.helper.data("dtSourceNode") || null,
							x = o.helper.data("dtTargetNode") || null;
						logMsg("draggable-connectToDynatree.stop: targetNode(from event): %s, dtTargetNode: %s", x, o.helper.data("dtTargetNode"));
						logMsg("draggable-connectToDynatree.stop, %s", v);
						var y = l.type;
						logMsg("    type: %o, downEvent: %o, upEvent: %o", y, q._mouseDownEvent, l);
						logMsg("    targetNode: %o", x);
						(y = y == "mouseup" && l.which == 1) || logMsg("Drag was cancelled");
						if(x) {
							y && x.tree._onDragEvent("drop", x, v, l, o, q);
							x.tree._onDragEvent("leave", x, v, l, o, q)
						}
						v && v.tree._onDragEvent("stop", v, null, l, o, q)
					}
				});
				j = true
			}
		}
})(jQuery);
(function(a) {
	function e(c) {
		return typeof c == "object" ? c : {
			top: c,
			left: c
		}
	}
	var g = a.scrollTo = function(c, d, b) {
			a(window).scrollTo(c, d, b)
		};
	g.defaults = {
		axis: "xy",
		duration: parseFloat(a.fn.jquery) >= 1.3 ? 0 : 1
	};
	g.window = function() {
		return a(window).scrollable()
	};
	a.fn.scrollable = function() {
		return this.map(function() {
			if(!(!this.nodeName || a.inArray(this.nodeName.toLowerCase(), ["iframe", "#document", "html", "body"]) != -1)) return this;
			var c = (this.contentWindow || this).document || this.ownerDocument || this;
			return a.browser.safari || c.compatMode == "BackCompat" ? c.body : c.documentElement
		})
	};
	a.fn.scrollTo = function(c, d, b) {
		if(typeof d == "object") {
			b = d;
			d = 0
		}
		if(typeof b == "function") b = {
			onAfter: b
		};
		if(c == "max") c = 9E9;
		b = a.extend({}, g.defaults, b);
		d = d || b.speed || b.duration;
		b.queue = b.queue && b.axis.length > 1;
		if(b.queue) d /= 2;
		b.offset = e(b.offset);
		b.over = e(b.over);
		return this.scrollable().each(function() {
			function f(y) {
				l.animate(v, d, b.easing, y &&
				function() {
					y.call(this, c, b)
				})
			}
			function j(y) {
				var D = "scroll" + y;
				if(!x) return n[D];
				y = "client" + y;
				var B = n.ownerDocument.documentElement,
					u = n.ownerDocument.body;
				return Math.max(B[D], u[D]) - Math.min(B[y], u[y])
			}
			var n = this,
				l = a(n),
				o = c,
				q, v = {},
				x = l.is("html,body");
			switch(typeof o) {
			case "number":
			case "string":
				if(/^([+-]=)?\d+(\.\d+)?(px)?$/.test(o)) {
					o = e(o);
					break
				}
				o = a(o, this);
			case "object":
				if(o.is || o.style) q = (o = a(o)).offset()
			}
			a.each(b.axis.split(""), function(y, D) {
				var B = D == "x" ? "Left" : "Top",
					u = B.toLowerCase(),
					F = "scroll" + B,
					I = n[F],
					C = D == "x" ? "Width" : "Height";
				if(q) {
					v[F] = q[u] + (x ? 0 : I - l.offset()[u]);
					if(b.margin) {
						v[F] -= parseInt(o.css("margin" + B)) || 0;
						v[F] -= parseInt(o.css("border" + B + "Width")) || 0
					}
					v[F] += b.offset[u] || 0;
					if(b.over[u]) v[F] += o[C.toLowerCase()]() * b.over[u]
				} else v[F] = o[u];
				if(/^\d+$/.test(v[F])) v[F] = v[F] <= 0 ? 0 : Math.min(v[F], j(C));
				if(!y && b.queue) {
					I != v[F] && f(b.onAfterFirst);
					delete v[F]
				}
			});
			f(b.onAfter)
		}).end()
	}
})(jQuery);
(function(a) {
	a.fn.konami = function(e, g) {
		g = a.extend({}, a.fn.konami.params, g);
		this.each(function() {
			var c = a(this),
				d = "kcfn:" + g.code.join(",");
			a.data(this, d, e);
			c.unbind("konami.autokonami").bind("konami.autokonami", function(b, f) {
				var j = "kcfn:" + f.code.join(",");
				func = a.data(this, j);
				typeof func == "function" && func()
			}).bind("keyup", function(b) {
				a.fn.konami.checkCode(b, g, c)
			})
		});
		return this
	};
	a.fn.konami.params = {
		code: [38, 38, 40, 40, 37, 39, 37, 39, 66, 65],
		step: 0
	};
	a.fn.konami.checkCode = function(e, g, c) {
		if(e.keyCode == g.code[g.step]) g.step++;
		else g.step = 0;
		if(g.step == g.code.length) {
			c.trigger("konami", {
				code: g.code
			});
			g.step = 0
		}
	}
})(jQuery);
(function(a) {
	var e = (a.browser.msie ? "paste" : "input") + ".mask",
		g = window.orientation != undefined;
	a.mask = {
		definitions: {
			"9": "[0-9]",
			a: "[A-Za-z]",
			"*": "[A-Za-z0-9]"
		}
	};
	a.fn.extend({
		caret: function(c, d) {
			if(this.length != 0) if(typeof c == "number") {
				d = typeof d == "number" ? d : c;
				return this.each(function() {
					if(this.setSelectionRange) {
						this.focus();
						this.setSelectionRange(c, d)
					} else if(this.createTextRange) {
						var f = this.createTextRange();
						f.collapse(true);
						f.moveEnd("character", d);
						f.moveStart("character", c);
						f.select()
					}
				})
			} else {
				if(this[0].setSelectionRange) {
					c = this[0].selectionStart;
					d = this[0].selectionEnd
				} else if(document.selection && document.selection.createRange) {
					var b = document.selection.createRange();
					c = 0 - b.duplicate().moveStart("character", -1E5);
					d = c + b.text.length
				}
				return {
					begin: c,
					end: d
				}
			}
		},
		unmask: function() {
			return this.trigger("unmask")
		},
		mask: function(c, d) {
			if(!c && this.length > 0) {
				var b = a(this[0]),
					f = b.data("tests");
				return a.map(b.data("buffer"), function(q, v) {
					return f[v] ? q : null
				}).join("")
			}
			d = a.extend({
				placeholder: "_",
				completed: null
			}, d);
			var j = a.mask.definitions;
			f = [];
			var n = c.length,
				l = null,
				o = c.length;
			a.each(c.split(""), function(q, v) {
				if(v == "?") {
					o--;
					n = q
				} else if(j[v]) {
					f.push(RegExp(j[v]));
					if(l == null) l = f.length - 1
				} else f.push(null)
			});
			return this.each(function() {
				function q(M) {
					for(; ++M <= o && !f[M];);
					return M
				}
				function v(M) {
					var Q = a(this).caret();
					M = M.keyCode;
					I = M < 16 || M > 16 && M < 32 || M > 32 && M < 41;
					if(Q.begin - Q.end != 0 && (!I || M == 8 || M == 46)) y(Q.begin, Q.end);
					if(M == 8 || M == 46 || g && M == 127) {
						for(Q = Q.begin + (M == 46 ? 0 : -1); !f[Q] && --Q >= 0;);
						for(M = Q; M < o; M++) if(f[M]) {
							F[M] = d.placeholder;
							var N = q(M);
							if(N < o && f[M].test(F[N])) F[M] = F[N];
							else break
						}
						D();
						u.caret(Math.max(l, Q));
						return false
					} else if(M == 27) {
						u.val(C);
						u.caret(0, B());
						return false
					}
				}
				function x(M) {
					if(I) {
						I = false;
						return M.keyCode == 8 ? false : null
					}
					M = M || window.event;
					var Q = M.charCode || M.keyCode || M.which,
						N = a(this).caret();
					if(M.ctrlKey || M.altKey || M.metaKey) return true;
					else if(Q >= 32 && Q <= 125 || Q > 186) {
						M = q(N.begin - 1);
						if(M < o) {
							Q = String.fromCharCode(Q);
							if(f[M].test(Q)) {
								N = M;
								for(var X = d.placeholder; N < o; N++) if(f[N]) {
									var ma = q(N),
										pa = F[N];
									F[N] = X;
									if(ma < o && f[ma].test(pa)) X = pa;
									else break
								}
								F[M] = Q;
								D();
								M = q(M);
								a(this).caret(M);
								d.completed && M == o && d.completed.call(u)
							}
						}
					}
					return false
				}
				function y(M, Q) {
					for(var N = M; N < Q && N < o; N++) if(f[N]) F[N] = d.placeholder
				}
				function D() {
					return u.val(F.join("")).val()
				}
				function B(M) {
					for(var Q = u.val(), N = -1, X = 0, ma = 0; X < o; X++) if(f[X]) {
						for(F[X] = d.placeholder; ma++ < Q.length;) {
							var pa = Q.charAt(ma - 1);
							if(f[X].test(pa)) {
								F[X] = pa;
								N = X;
								break
							}
						}
						if(ma > Q.length) break
					} else if(F[X] == Q[ma] && X != n) {
						ma++;
						N = X
					}
					if(!M && N + 1 < n) {
						u.val("");
						y(0, o)
					} else if(M || N + 1 >= n) {
						D();
						M || u.val(u.val().substring(0, N + 1))
					}
					return n ? X : l
				}
				var u = a(this),
					F = a.map(c.split(""), function(M) {
						if(M != "?") return j[M] ? d.placeholder : M
					}),
					I = false,
					C = u.val();
				u.data("buffer", F).data("tests", f);
				u.attr("readonly") || u.one("unmask", function() {
					u.unbind(".mask").removeData("buffer").removeData("tests")
				}).bind("focus.mask", function() {
					C = u.val();
					var M = B();
					D();
					setTimeout(function() {
						M == c.length ? u.caret(0, M) : u.caret(M)
					}, 0)
				}).bind("blur.mask", function() {
					B();
					u.val() != C && u.change()
				}).bind("keydown.mask", v).bind("keypress.mask", x).bind(e, function() {
					setTimeout(function() {
						u.caret(B(true))
					}, 0)
				});
				B()
			})
		}
	})
})(jQuery);
$.fn.bar = function(a) {
	var e = $.extend(true, {
		direction: "horizontal",
		attach: "left",
		bars: 1,
		style: "background-color: #000;",
		animate: 300,
		halt: false,
		value: [0]
	}, a);
	return this.each(function() {
		this.barOpts = $.extend(true, {}, e);
		var g = $(this).css("z-index");
		g = (isNaN(g) ? 1 : g) + this.barOpts.bars;
		$(this).css({
			overflow: "hidden"
		});
		this.barOpts.direction != "horizontal" && $(this).css("position").search(/(absolute|relative|fixed)/i) < 0 && $(this).css("position", "relative").addClass("vertical");
		for(var c = 0; c < this.barOpts.bars; c++) {
			var d = typeof this.barOpts.style != "string" ? this.barOpts.style[c] : this.barOpts.style;
			$(this).append('<div class="interBar ' + this.barOpts.direction + '" style="' + d + '"></div>');
			this.barOpts.direction != "horizontal" && $(this).find(".interBar:last").css({
				"z-index": g--,
				height: 0
			})
		}
	})
};
$.fn.getBarOpts = function(a) {
	return a ? this[0].barOpts[a] : this[0].barOpts
};
$.fn.setBarOpts = function(a) {
	return this.each(function() {
		this.barOpts = $.extend(true, this.barOpts, a);
		if(a.style) {
			$(this).stop();
			$(this).find(".interBar").attr("style", this.barOpts.style)
		}
	})
};
$.fn.setBar = function(a, e) {
	e = e || 0;
	a = isNaN(a) ? 0 : a || 0;
	if(a < 0) a = 0;
	return this.each(function() {
		if(this.barOpts && !this.barOpts.halt) {
			if(this.barOpts.value && this.barOpts.value.length) this.barOpts.value[e] = a;
			else this.barOpts.value = [a];
			if(this.barOpts.direction == "horizontal") {
				var g = {
					width: a * 100 + "%"
				};
				this.barOpts.isResize && this.barOpts.animate ? $(this).find(".interBar").eq(e).animate(g, typeof this.barOpts.animate == "boolean" ? "normal" : this.barOpts.animate) : $(this).find(".interBar").eq(e).css(g);
				this.barOpts.isResize = true
			} else if(this.barOpts.bars == 1) {
				g = {
					height: a * 100 + "%"
				};
				this.barOpts.animate ? $(this).find(".interBar").eq(e).animate(g, typeof this.barOpts.animate == "boolean" ? "normal" : this.barOpts.animate) : $(this).find(".interBar").eq(e).css(g)
			} else {
				this.barOpts.value[e] = a;
				for(var c = 0, d = 0; d < this.barOpts.bars; d++) {
					c += this.barOpts.value[d] || 0;
					g = {
						height: c * 100 + "%"
					};
					this.barOpts.animate ? $(this).find(".interBar").eq(d).animate(g, typeof this.barOpts.animate == "boolean" ? "normal" : this.barOpts.animate) : $(this).find(".interBar").eq(d).css(g)
				}
			}
		}
	})
};
$(document).ready(function() {
	$.browser.mozilla && parseFloat($.browser.version) < 1.9 && $("body").addClass("ff2")
});
$.fn.dropdown = function(a) {
	if(typeof a != "object") a = {};
	if(!a.header) a.header = "selected";
	this.each(function() {
		if($(this).is("ul") && !$(this).is(".dropdownUL")) {
			$(this).addClass("dropdownUL").wrap('<div class="dropdown"' + ($.browser.msie ? ' style="display: inline;"' : "") + '><div class="dropdownWrap"></div></div>');
			$(this).prepend('<li class="ddSpecial dropdownCap NE"></li><li class="ddSpecial dropdownCap SE"></li><li class="ddSpecial dropdownCap SW"></li>');
			$(this).find(".active")[0] || $(this).find("li:not(.ddSpecial):eq(0)").addClass("active");
			switch(a.header) {
			case "first":
				$(this).find("li:not(.ddSpecial)").eq(0).removeClass("active").addClass("activeDuplicate");
				break;
			case "firstcopy":
				$(this).find("li:not(.ddSpecial)").eq(0).clone().prependTo($(this)).removeClass("active").addClass("activeDuplicate");
				break;
			default:
				$(this).find(".active").eq(0).clone().prependTo($(this)).removeClass("active").addClass("activeDuplicate")
			}
			$(this).bind("click", function() {
				var e = $(this);
				$(this).find("li:not(.ddSpecial)").length == 2 && a.noExpandSingle ? e.trigger("select", {
					target: $(this).find("li:not(.ddSpecial)").eq(0)
				}) : e.addClass("hovered")
			});
			$(this).bind("mouseleave", function() {
				clearTimeout(this.hoverTO);
				var e = $(this);
				this.hoverTO = setTimeout(function() {
					e.removeClass("hovered")
				}, 200)
			});
			$(this).find("li:not(.ddSpecial)").click(function(e) {
				if($(this).parent().is(".hovered")) {
					$(this).parents("ul").removeClass("hovered");
					e.stopPropagation();
					$(this).is(":not(.activeDuplicate)") && $(this).dropdownSelect()
				}
			});
			$.data(this, "ddOptions", a)
		}
	});
	return this
};
$.fn.dropdownSelect = function(a) {
	this.each(function() {
		var e = false,
			g = false;
		if(a && $(this).is("ul")) {
			g = $(this);
			e = $(this).find("li").not(".ddSpecial").not(".activeDuplicate").eq(a)
		} else if($(this).is("li")) {
			g = $(this).parents("ul").eq(0);
			e = $(this)
		} else {
			e = $(this).parents("li").eq(0);
			g = e.parents("ul").eq(0);
			if(!e[0]) return this
		}
		if(e) {
			ddOptions = $.data($(g)[0], "ddOptions");
			e.siblings("li").removeClass("active");
			e.addClass("active");
			switch(ddOptions.header) {
			case "first":
				break;
			case "firstcopy":
				break;
			default:
				e.siblings("li.activeDuplicate").remove();
				e.clone(true).removeClass("active").addClass("activeDuplicate").prependTo(e.parent())
			}
			e.trigger("select", {
				target: e
			})
		}
	});
	return this
};
(function(a) {
	var e = function(c) {
			var d = 0;
			c = a(c).get(0);
			if(document.selection) {
				c.focus();
				d = document.selection.createRange();
				var b = document.selection.createRange().text.length;
				d.moveStart("character", -c.value.length);
				d = d.text.length - b
			} else if(c.selectionStart || c.selectionStart == "0") d = c.selectionStart;
			return d
		},
		g = function(c) {
			var d = null,
				b = a("#" + c);
			c = a("input[name=" + c + "]");
			if(b.length) d = b;
			else if(c != undefined) d = c;
			return d
		};
	a.fn.autotab_magic = function(c) {
		for(var d = 0; d < this.length; d++) {
			var b = d + 1,
				f = d - 1;
			if(d > 0 && b < this.length) a(this[d]).autotab({
				target: a(this[b]),
				previous: a(this[f])
			});
			else d > 0 ? a(this[d]).autotab({
				previous: a(this[f])
			}) : a(this[d]).autotab({
				target: a(this[b])
			});
			if(c != null && isNaN(c) && c == a(this[d]).attr("id") || !isNaN(c) && c == d) a(this[d]).focus()
		}
		return this
	};
	a.fn.autotab_filter = function(c) {
		var d = {
			format: "all",
			uppercase: false,
			lowercase: false,
			nospace: false,
			pattern: null
		};
		if(typeof c == "string" || typeof c == "function") d.format = c;
		else a.extend(d, c);
		for(c = 0; c < this.length; c++) a(this[c]).bind("keyup", function() {
			var b = this.value;
			switch(d.format) {
			case "text":
				var f = RegExp("[0-9]+", "g");
				b = b.replace(f, "");
				break;
			case "alpha":
				f = RegExp("[^a-zA-Z]+", "g");
				b = b.replace(f, "");
				break;
			case "number":
			case "numeric":
				f = RegExp("[^0-9]+", "g");
				b = b.replace(f, "");
				break;
			case "alphanumeric":
				f = RegExp("[^0-9a-zA-Z]+", "g");
				b = b.replace(f, "");
				break;
			case "custom":
				f = RegExp(d.pattern, "g");
				b = b.replace(f, "");
				break;
			default:
				if(typeof d.format == "function") b = d.format(b)
			}
			if(d.nospace) {
				f = RegExp("[ ]+", "g");
				b = b.replace(f, "")
			}
			if(d.uppercase) b = b.toUpperCase();
			if(d.lowercase) b = b.toLowerCase();
			if(b != this.value) this.value = b
		})
	};
	a.fn.autotab = function(c) {
		var d = {
			format: "all",
			maxlength: 2147483647,
			uppercase: false,
			lowercase: false,
			nospace: false,
			target: null,
			previous: null,
			pattern: null
		};
		a.extend(d, c);
		if(typeof d.target == "string") d.target = g(d.target);
		if(typeof d.previous == "string") d.previous = g(d.previous);
		c = a(this).attr("maxlength");
		if(d.maxlength == 2147483647 && c != 2147483647) d.maxlength = c;
		else if(d.maxlength > 0) a(this).attr("maxlength", d.maxlength);
		else d.target = null;
		d.format != "all" && a(this).autotab_filter(d);
		return a(this).bind("keydown", function(b) {
			if(b.which == 8 && this.value.length == 0 && d.previous) setTimeout(function() {
				d.previous.focus().val(d.previous.val())
			}, 10);
			else if(b.which == 37 && e(this) == 0 && d.previous) setTimeout(function() {
				d.previous.focus().val(d.previous.val())
			}, 10);
			else b.which == 39 && e(this) == this.value.length && d.target && setTimeout(function() {
				d.target.focus()
			}, 10)
		}).bind("keyup", function(b) {
			var f = [8, 9, 16, 17, 18, 19, 20, 27, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 144, 145];
			if(b.which != 8) {
				var j = a(this).val();
				a.inArray(b.which, f) == -1 && j.length == d.maxlength && d.target && d.target.focus()
			}
		})
	}
})(jQuery);
(function(a, e) {
	a.fn.jPlayer = function(c) {
		var d = typeof c === "string",
			b = Array.prototype.slice.call(arguments, 1),
			f = this;
		c = !d && b.length ? a.extend.apply(null, [true, c].concat(b)) : c;
		if(d && c.charAt(0) === "_") return f;
		d ? this.each(function() {
			var j = a.data(this, "jPlayer"),
				n = j && a.isFunction(j[c]) ? j[c].apply(j, b) : j;
			if(n !== j && n !== e) {
				f = n;
				return false
			}
		}) : this.each(function() {
			var j = a.data(this, "jPlayer");
			j ? j.option(c || {}) : a.data(this, "jPlayer", new a.jPlayer(c, this))
		});
		return f
	};
	a.jPlayer = function(c, d) {
		if(arguments.length) {
			this.element = a(d);
			this.options = a.extend(true, {}, this.options, c);
			var b = this;
			this.element.bind("remove.jPlayer", function() {
				b.destroy()
			});
			this._init()
		}
	};
	a.jPlayer.emulateMethods = "load play pause";
	a.jPlayer.emulateStatus = "src readyState networkState currentTime duration paused ended playbackRate";
	a.jPlayer.emulateOptions = "muted volume";
	a.jPlayer.reservedEvent = "ready flashreset resize repeat error warning";
	a.jPlayer.event = {
		ready: "jPlayer_ready",
		flashreset: "jPlayer_flashreset",
		resize: "jPlayer_resize",
		repeat: "jPlayer_repeat",
		click: "jPlayer_click",
		error: "jPlayer_error",
		warning: "jPlayer_warning",
		loadstart: "jPlayer_loadstart",
		progress: "jPlayer_progress",
		suspend: "jPlayer_suspend",
		abort: "jPlayer_abort",
		emptied: "jPlayer_emptied",
		stalled: "jPlayer_stalled",
		play: "jPlayer_play",
		pause: "jPlayer_pause",
		loadedmetadata: "jPlayer_loadedmetadata",
		loadeddata: "jPlayer_loadeddata",
		waiting: "jPlayer_waiting",
		playing: "jPlayer_playing",
		canplay: "jPlayer_canplay",
		canplaythrough: "jPlayer_canplaythrough",
		seeking: "jPlayer_seeking",
		seeked: "jPlayer_seeked",
		timeupdate: "jPlayer_timeupdate",
		ended: "jPlayer_ended",
		ratechange: "jPlayer_ratechange",
		durationchange: "jPlayer_durationchange",
		volumechange: "jPlayer_volumechange"
	};
	a.jPlayer.htmlEvent = ["loadstart", "abort", "emptied", "stalled", "loadedmetadata", "loadeddata", "canplay", "canplaythrough", "ratechange"];
	a.jPlayer.pause = function() {
		a.each(a.jPlayer.prototype.instances, function(c, d) {
			d.data("jPlayer").status.srcSet && d.jPlayer("pause")
		})
	};
	a.jPlayer.timeFormat = {
		showHour: false,
		showMin: true,
		showSec: true,
		padHour: false,
		padMin: true,
		padSec: true,
		sepHour: ":",
		sepMin: ":",
		sepSec: ""
	};
	a.jPlayer.convertTime = function(c) {
		var d = new Date(c * 1E3),
			b = d.getUTCHours();
		c = d.getUTCMinutes();
		d = d.getUTCSeconds();
		b = a.jPlayer.timeFormat.padHour && b < 10 ? "0" + b : b;
		c = a.jPlayer.timeFormat.padMin && c < 10 ? "0" + c : c;
		d = a.jPlayer.timeFormat.padSec && d < 10 ? "0" + d : d;
		return(a.jPlayer.timeFormat.showHour ? b + a.jPlayer.timeFormat.sepHour : "") + (a.jPlayer.timeFormat.showMin ? c + a.jPlayer.timeFormat.sepMin : "") + (a.jPlayer.timeFormat.showSec ? d + a.jPlayer.timeFormat.sepSec : "")
	};
	a.jPlayer.uaBrowser = function(c) {
		c = c.toLowerCase();
		var d = /(opera)(?:.*version)?[ \/]([\w.]+)/,
			b = /(msie) ([\w.]+)/,
			f = /(mozilla)(?:.*? rv:([\w.]+))?/;
		c = /(webkit)[ \/]([\w.]+)/.exec(c) || d.exec(c) || b.exec(c) || c.indexOf("compatible") < 0 && f.exec(c) || [];
		return {
			browser: c[1] || "",
			version: c[2] || "0"
		}
	};
	a.jPlayer.uaPlatform = function(c) {
		var d = c.toLowerCase(),
			b = /(android)/,
			f = /(mobile)/;
		c = /(ipad|iphone|ipod|android|blackberry|playbook|windows ce|webos)/.exec(d) || [];
		d = /(ipad|playbook)/.exec(d) || !f.exec(d) && b.exec(d) || [];
		if(c[1]) c[1] = c[1].replace(/\s/g, "_");
		return {
			platform: c[1] || "",
			tablet: d[1] || ""
		}
	};
	a.jPlayer.browser = {};
	a.jPlayer.platform = {};
	var g = a.jPlayer.uaBrowser(navigator.userAgent);
	if(g.browser) {
		a.jPlayer.browser[g.browser] = true;
		a.jPlayer.browser.version = g.version
	}
	g = a.jPlayer.uaPlatform(navigator.userAgent);
	if(g.platform) {
		a.jPlayer.platform[g.platform] = true;
		a.jPlayer.platform.mobile = !g.tablet;
		a.jPlayer.platform.tablet = !! g.tablet
	}
	a.jPlayer.prototype = {
		count: 0,
		version: {
			script: "2.1.0",
			needFlash: "2.1.0",
			flash: "unknown"
		},
		options: {
			swfPath: "js",
			solution: "html, flash",
			supplied: "mp3",
			preload: "metadata",
			volume: 0.8,
			muted: false,
			wmode: "opaque",
			backgroundColor: "#000000",
			cssSelectorAncestor: "#jp_container_1",
			cssSelector: {
				videoPlay: ".jp-video-play",
				play: ".jp-play",
				pause: ".jp-pause",
				stop: ".jp-stop",
				seekBar: ".jp-seek-bar",
				playBar: ".jp-play-bar",
				mute: ".jp-mute",
				unmute: ".jp-unmute",
				volumeBar: ".jp-volume-bar",
				volumeBarValue: ".jp-volume-bar-value",
				volumeMax: ".jp-volume-max",
				currentTime: ".jp-current-time",
				duration: ".jp-duration",
				fullScreen: ".jp-full-screen",
				restoreScreen: ".jp-restore-screen",
				repeat: ".jp-repeat",
				repeatOff: ".jp-repeat-off",
				gui: ".jp-gui",
				noSolution: ".jp-no-solution"
			},
			fullScreen: false,
			autohide: {
				restored: false,
				full: true,
				fadeIn: 200,
				fadeOut: 600,
				hold: 1E3
			},
			loop: false,
			repeat: function(c) {
				c.jPlayer.options.loop ? a(this).unbind(".jPlayerRepeat").bind(a.jPlayer.event.ended + ".jPlayer.jPlayerRepeat", function() {
					a(this).jPlayer("play")
				}) : a(this).unbind(".jPlayerRepeat")
			},
			nativeVideoControls: {},
			noFullScreen: {
				msie: /msie [0-6]/,
				ipad: /ipad.*?os [0-4]/,
				iphone: /iphone/,
				ipod: /ipod/,
				android_pad: /android [0-3](?!.*?mobile)/,
				android_phone: /android.*?mobile/,
				blackberry: /blackberry/,
				windows_ce: /windows ce/,
				webos: /webos/
			},
			noVolume: {
				ipad: /ipad/,
				iphone: /iphone/,
				ipod: /ipod/,
				android_pad: /android(?!.*?mobile)/,
				android_phone: /android.*?mobile/,
				blackberry: /blackberry/,
				windows_ce: /windows ce/,
				webos: /webos/,
				playbook: /playbook/
			},
			verticalVolume: false,
			idPrefix: "jp",
			noConflict: "jQuery",
			emulateHtml: false,
			errorAlerts: false,
			warningAlerts: false
		},
		optionsAudio: {
			size: {
				width: "0px",
				height: "0px",
				cssClass: ""
			},
			sizeFull: {
				width: "0px",
				height: "0px",
				cssClass: ""
			}
		},
		optionsVideo: {
			size: {
				width: "480px",
				height: "270px",
				cssClass: "jp-video-270p"
			},
			sizeFull: {
				width: "100%",
				height: "100%",
				cssClass: "jp-video-full"
			}
		},
		instances: {},
		status: {
			src: "",
			media: {},
			paused: true,
			format: {},
			formatType: "",
			waitForPlay: true,
			waitForLoad: true,
			srcSet: false,
			video: false,
			seekPercent: 0,
			currentPercentRelative: 0,
			currentPercentAbsolute: 0,
			currentTime: 0,
			duration: 0,
			readyState: 0,
			networkState: 0,
			playbackRate: 1,
			ended: 0
		},
		internal: {
			ready: false
		},
		solution: {
			html: true,
			flash: true
		},
		format: {
			mp3: {
				codec: 'audio/mpeg; codecs="mp3"',
				flashCanPlay: true,
				media: "audio"
			},
			m4a: {
				codec: 'audio/mp4; codecs="mp4a.40.2"',
				flashCanPlay: true,
				media: "audio"
			},
			oga: {
				codec: 'audio/ogg; codecs="vorbis"',
				flashCanPlay: false,
				media: "audio"
			},
			wav: {
				codec: 'audio/wav; codecs="1"',
				flashCanPlay: false,
				media: "audio"
			},
			webma: {
				codec: 'audio/webm; codecs="vorbis"',
				flashCanPlay: false,
				media: "audio"
			},
			fla: {
				codec: "audio/x-flv",
				flashCanPlay: true,
				media: "audio"
			},
			m4v: {
				codec: 'video/mp4; codecs="avc1.42E01E, mp4a.40.2"',
				flashCanPlay: true,
				media: "video"
			},
			ogv: {
				codec: 'video/ogg; codecs="theora, vorbis"',
				flashCanPlay: false,
				media: "video"
			},
			webmv: {
				codec: 'video/webm; codecs="vorbis, vp8"',
				flashCanPlay: false,
				media: "video"
			},
			flv: {
				codec: "video/x-flv",
				flashCanPlay: true,
				media: "video"
			}
		},
		_init: function() {
			var c = this;
			this.element.empty();
			this.status = a.extend({}, this.status);
			this.internal = a.extend({}, this.internal);
			this.internal.domNode = this.element.get(0);
			this.formats = [];
			this.solutions = [];
			this.require = {};
			this.htmlElement = {};
			this.html = {};
			this.html.audio = {};
			this.html.video = {};
			this.flash = {};
			this.css = {};
			this.css.cs = {};
			this.css.jq = {};
			this.ancestorJq = [];
			this.options.volume = this._limitValue(this.options.volume, 0, 1);
			a.each(this.options.supplied.toLowerCase().split(","), function(j, n) {
				var l = n.replace(/^\s+|\s+$/g, "");
				if(c.format[l]) {
					var o = false;
					a.each(c.formats, function(q, v) {
						if(l === v) {
							o = true;
							return false
						}
					});
					o || c.formats.push(l)
				}
			});
			a.each(this.options.solution.toLowerCase().split(","), function(j, n) {
				var l = n.replace(/^\s+|\s+$/g, "");
				if(c.solution[l]) {
					var o = false;
					a.each(c.solutions, function(q, v) {
						if(l === v) {
							o = true;
							return false
						}
					});
					o || c.solutions.push(l)
				}
			});
			this.internal.instance = "jp_" + this.count;
			this.instances[this.internal.instance] = this.element;
			this.element.attr("id") || this.element.attr("id", this.options.idPrefix + "_jplayer_" + this.count);
			this.internal.self = a.extend({}, {
				id: this.element.attr("id"),
				jq: this.element
			});
			this.internal.audio = a.extend({}, {
				id: this.options.idPrefix + "_audio_" + this.count,
				jq: e
			});
			this.internal.video = a.extend({}, {
				id: this.options.idPrefix + "_video_" + this.count,
				jq: e
			});
			this.internal.flash = a.extend({}, {
				id: this.options.idPrefix + "_flash_" + this.count,
				jq: e,
				swf: this.options.swfPath + (this.options.swfPath.toLowerCase().slice(-4) !== ".swf" ? (this.options.swfPath && this.options.swfPath.slice(-1) !== "/" ? "/" : "") + "Jplayer.swf" : "")
			});
			this.internal.poster = a.extend({}, {
				id: this.options.idPrefix + "_poster_" + this.count,
				jq: e
			});
			a.each(a.jPlayer.event, function(j, n) {
				if(c.options[j] !== e) {
					c.element.bind(n + ".jPlayer", c.options[j]);
					c.options[j] = e
				}
			});
			this.require.audio = false;
			this.require.video = false;
			a.each(this.formats, function(j, n) {
				c.require[c.format[n].media] = true
			});
			this.options = this.require.video ? a.extend(true, {}, this.optionsVideo, this.options) : a.extend(true, {}, this.optionsAudio, this.options);
			this._setSize();
			this.status.nativeVideoControls = this._uaBlocklist(this.options.nativeVideoControls);
			this.status.noFullScreen = this._uaBlocklist(this.options.noFullScreen);
			this.status.noVolume = this._uaBlocklist(this.options.noVolume);
			this._restrictNativeVideoControls();
			this.htmlElement.poster = document.createElement("img");
			this.htmlElement.poster.id = this.internal.poster.id;
			this.htmlElement.poster.onload = function() {
				if(!c.status.video || c.status.waitForPlay) c.internal.poster.jq.show()
			};
			this.element.append(this.htmlElement.poster);
			this.internal.poster.jq = a("#" + this.internal.poster.id);
			this.internal.poster.jq.css({
				width: this.status.width,
				height: this.status.height
			});
			this.internal.poster.jq.hide();
			this.internal.poster.jq.bind("click.jPlayer", function() {
				c._trigger(a.jPlayer.event.click)
			});
			this.html.audio.available = false;
			if(this.require.audio) {
				this.htmlElement.audio = document.createElement("audio");
				this.htmlElement.audio.id = this.internal.audio.id;
				this.html.audio.available = !! this.htmlElement.audio.canPlayType && this._testCanPlayType(this.htmlElement.audio)
			}
			this.html.video.available = false;
			if(this.require.video) {
				this.htmlElement.video = document.createElement("video");
				this.htmlElement.video.id = this.',
				flashCanPlay: false,
				media: "video"
			},
			flv: {
				codec: "video/x-flv",
				flashCanPlay: true,
				media: "video"
			}
		},
		_init: function() {
			var c = this;
			this.element.empty();
			this.status = a.extend({}, this.status);
			this.internal = a.extend({}, this.internal);
			this.internal.domNode = this.element.get(0);
			this.formats = [];
			this.solutions = [];
			this.require = {};
			this.htmlElement = {};
			this.html = {};
			this.html.audio = {};
			this.html.video = {};
			this.flash = {};
			this.css = {};
			this.css.cs = {};
			this.css.jq = {};
			this.ancestorJq = [];
			this.options.volume = this._limitValue(this.options.volume, 0, 1);
			a.each(this.options.supplied.toLowerCase().split(","), function(j, n) {
				var l = n.replace(/^\s+|\s+$/g, "");
				if(c.format[l]) {
					var o = false;
					a.each(c.formats, function(q, v) {
						if(l === v) {
							o = true;
							return false
						}
					});
					o || c.formats.push(l)
				}
			});
			a.each(this.options.solution.toLowerCase().split(","), function(j, n) {
				var l = n.replace(/^\s+|\s+$/g, "");
				if(c.solution[l]) {
					var o = false;
					a.each(c.solutions, function(q, v) {
						if(l === v) {
							o = true;
							return false
						}
					});
					o || c.solutions.push(l)
				}
			});
			this.internal.instance = "jp_" + this.count;
			this.instances[this.internal.instance] = this.element;
			this.element.attr("id") || this.element.attr("id", this.options.idPrefix + "_jplayer_" + this.count);
			this.internal.self = a.extend({}, {
				id: this.element.attr("id"),
				jq: this.element
			});
			this.internal.audio = a.extend({}, {
				id: this.options.idPrefix + "_audio_" + this.count,
				jq: e
			});
			this.internal.video = a.extend({}, {
				id: this.options.idPrefix + "_video_" + this.count,
				jq: e
			});
			this.internal.flash = a.extend({}, {
				id: this.options.idPrefix + "_flash_" + this.count,
				jq: e,
				swf: this.options.swfPath + (this.options.swfPath.toLowerCase().slice(-4) !== ".swf" ? (this.options.swfPath && this.options.swfPath.slice(-1) !== "/" ? "/" : "") + "Jplayer.swf" : "")
			});
			this.internal.poster = a.extend({}, {
				id: this.options.idPrefix + "_poster_" + this.count,
				jq: e
			});
			a.each(a.jPlayer.event, function(j, n) {
				if(c.options[j] !== e) {
					c.element.bind(n + ".jPlayer", c.options[j]);
					c.options[j] = e
				}
			});
			this.require.audio = false;
			this.require.video = false;
			a.each(this.formats, function(j, n) {
				c.require[c.format[n].media] = true
			});
			this.options = this.require.video ? a.extend(true, {}, this.optionsVideo, this.options) : a.extend(true, {}, this.optionsAudio, this.options);
			this._setSize();
			this.status.nativeVideoControls = this._uaBlocklist(this.options.nativeVideoControls);
			this.status.noFullScreen = this._uaBlocklist(this.options.noFullScreen);
			this.status.noVolume = this._uaBlocklist(this.options.noVolume);
			this._restrictNativeVideoControls();
			this.htmlElement.poster = document.createElement("img");
			this.htmlElement.poster.id = this.internal.poster.id;
			this.htmlElement.poster.onload = function() {
				if(!c.status.video || c.status.waitForPlay) c.internal.poster.jq.show()
			};
			this.element.append(this.htmlElement.poster);
			this.internal.poster.jq = a("#" + this.internal.poster.id);
			this.internal.poster.jq.css({
				width: this.status.width,
				height: this.status.height
			});
			this.internal.poster.jq.hide();
			this.internal.poster.jq.bind("click.jPlayer", function() {
				c._trigger(a.jPlayer.event.click)
			});
			this.html.audio.available = false;
			if(this.require.audio) {
				this.htmlElement.audio = document.createElement("audio");
				this.htmlElement.audio.id = this.internal.audio.id;
				this.html.audio.available = !! this.htmlElement.audio.canPlayType && this._testCanPlayType(this.htmlElement.audio)
			}
			this.html.video.available = false;
			if(this.require.video) {
				this.htmlElement.video = document.createElement("video");
				this.htmlElement.video.id = this.internal.video.id;
				this.html.video.available = !! this.htmlElement.video.canPlayType && this._testCanPlayType(this.htmlElement.video)
			}
			this.flash.available = this._checkForFlash(10);
			this.html.canPlay = {};
			this.flash.canPlay = {};
			a.each(this.formats, function(j, n) {
				c.html.canPlay[n] = c.html[c.format[n].media].available && "" !== c.htmlElement[c.format[n].media].canPlayType(c.format[n].codec);
				c.flash.canPlay[n] = c.format[n].flashCanPlay && c.flash.available
			});
			this.html.desired = false;
			this.flash.desired = false;
			a.each(this.solutions, function(j, n) {
				if(j === 0) c[n].desired = true;
				else {
					var l = false,
						o = false;
					a.each(c.formats, function(q, v) {
						if(c[c.solutions[0]].canPlay[v]) if(c.format[v].media === "video") o = true;
						else l = true
					});
					c[n].desired = c.require.audio && !l || c.require.video && !o
				}
			});
			this.html.support = {};
			this.flash.support = {};
			a.each(this.formats, function(j, n) {
				c.html.support[n] = c.html.canPlay[n] && c.html.desired;
				c.flash.support[n] = c.flash.canPlay[n] && c.flash.desired
			});
			this.html.used = false;
			this.flash.used = false;
			a.each(this.solutions, function(j, n) {
				a.each(c.formats, function(l, o) {
					if(c[n].support[o]) {
						c[n].used = true;
						return false
					}
				})
			});
			this._resetActive();
			this._resetGate();
			this._cssSelectorAncestor(this.options.cssSelectorAncestor);
			if(this.html.used || this.flash.used) this.css.jq.noSolution.length && this.css.jq.noSolution.hide();
			else {
				this._error({
					type: a.jPlayer.error.NO_SOLUTION,
					context: "{solution:'" + this.options.solution + "', supplied:'" + this.options.supplied + "'}",
					message: a.jPlayer.errorMsg.NO_SOLUTION,
					hint: a.jPlayer.errorHint.NO_SOLUTION
				});
				this.css.jq.noSolution.length && this.css.jq.noSolution.show()
			}
			if(this.flash.used) {
				var d, b = "jQuery=" + encodeURI(this.options.noConflict) + "&id=" + encodeURI(this.internal.self.id) + "&vol=" + this.options.volume + "&muted=" + this.options.muted;
				if(a.browser.msie && Number(a.browser.version) <= 8) {
					b = ['<param name="movie" value="' + this.internal.flash.swf + '" />', '<param name="FlashVars" value="' + b + '" />', '<param name="allowScriptAccess" value="always" />', '<param name="bgcolor" value="' + this.options.backgroundColor + '" />', '<param name="wmode" value="' + this.options.wmode + '" />'];
					d = document.createElement('<object id="' + this.internal.flash.id + '" classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="0" height="0"></object>');
					for(var f = 0; f < b.length; f++) d.appendChild(document.createElement(b[f]))
				} else {
					f = function(j, n, l) {
						var o = document.createElement("param");
						o.setAttribute("name", n);
						o.setAttribute("value", l);
						j.appendChild(o)
					};
					d = document.createElement("object");
					d.setAttribute("id", this.internal.flash.id);
					d.setAttribute("data", this.internal.flash.swf);
					d.setAttribute("type", "application/x-shockwave-flash");
					d.setAttribute("width", "1");
					d.setAttribute("height", "1");
					f(d, "flashvars", b);
					f(d, "allowscriptaccess", "always");
					f(d, "bgcolor", this.options.backgroundColor);
					f(d, "wmode", this.options.wmode)
				}
				this.element.append(d);
				this.internal.flash.jq = a(d)
			}
			if(this.html.used) {
				if(this.html.audio.available) {
					this._addHtmlEventListeners(this.htmlElement.audio, this.html.audio);
					this.element.append(this.htmlElement.audio);
					this.internal.audio.jq = a("#" + this.internal.audio.id)
				}
				if(this.html.video.available) {
					this._addHtmlEventListeners(this.htmlElement.video, this.html.video);
					this.element.append(this.htmlElement.video);
					this.internal.video.jq = a("#" + this.internal.video.id);
					this.status.nativeVideoControls ? this.internal.video.jq.css({
						width: this.status.width,
						height: this.status.height
					}) : this.internal.video.jq.css({
						width: "0px",
						height: "0px"
					});
					this.internal.video.jq.bind("click.jPlayer", function() {
						c._trigger(a.jPlayer.event.click)
					})
				}
			}
			this.options.emulateHtml && this._emulateHtmlBridge();
			this.html.used && !this.flash.used && setTimeout(function() {
				c.internal.ready = true;
				c.version.flash = "n/a";
				c._trigger(a.jPlayer.event.repeat);
				c._trigger(a.jPlayer.event.ready)
			}, 100);
			this._updateNativeVideoControls();
			this._updateInterface();
			this._updateButtons(false);
			this._updateAutohide();
			this._updateVolume(this.options.volume);
			this._updateMute(this.options.muted);
			this.css.jq.videoPlay.length && this.css.jq.videoPlay.hide();
			a.jPlayer.prototype.count++
		},
		destroy: function() {
			this.clearMedia();
			this._removeUiClass();
			this.css.jq.currentTime.length && this.css.jq.currentTime.text("");
			this.css.jq.duration.length && this.css.jq.duration.text("");
			a.each(this.css.jq, function(c, d) {
				d.length && d.unbind(".jPlayer")
			});
			this.internal.poster.jq.unbind(".jPlayer");
			this.internal.video.jq && this.internal.video.jq.unbind(".jPlayer");
			this.options.emulateHtml && this._destroyHtmlBridge();
			this.element.removeData("jPlayer");
			this.element.unbind(".jPlayer");
			this.element.empty();
			delete this.instances[this.internal.instance]
		},
		enable: function() {},
		disable: function() {},
		_testCanPlayType: function(c) {
			try {
				c.canPlayType(this.format.mp3.codec);
				return true
			} catch(d) {
				return false
			}
		},
		_uaBlocklist: function(c) {
			var d = navigator.userAgent.toLowerCase(),
				b = false;
			a.each(c, function(f, j) {
				if(j && j.test(d)) {
					b = true;
					return false
				}
			});
			return b
		},
		_restrictNativeVideoControls: function() {
			if(this.require.audio) if(this.status.nativeVideoControls) {
				this.status.nativeVideoControls = false;
				this.status.noFullScreen = true
			}
		},
		_updateNativeVideoControls: function() {
			if(this.html.video.available && this.html.used) {
				this.htmlElement.video.controls = this.status.nativeVideoControls;
				this._updateAutohide();
				if(this.status.nativeVideoControls && this.require.video) {
					this.internal.poster.jq.hide();
					this.internal.video.jq.css({
						width: this.status.width,
						height: this.status.height
					})
				} else if(this.status.waitForPlay && this.status.video) {
					this.internal.poster.jq.show();
					this.internal.video.jq.css({
						width: "0px",
						height: "0px"
					})
				}
			}
		},
		_addHtmlEventListeners: function(c, d) {
			var b = this;
			c.preload = this.options.preload;
			c.muted = this.options.muted;
			c.volume = this.options.volume;
			c.addEventListener("progress", function() {
				if(d.gate) {
					b._getHtmlStatus(c);
					b._updateInterface();
					b._trigger(a.jPlayer.event.progress)
				}
			}, false);
			c.addEventListener("timeupdate", function() {
				if(d.gate) {
					b._getHtmlStatus(c);
					b._updateInterface();
					b._trigger(a.jPlayer.event.timeupdate)
				}
			}, false);
			c.addEventListener("durationchange", function() {
				if(d.gate) {
					b.status.duration = this.duration;
					b._getHtmlStatus(c);
					b._updateInterface();
					b._trigger(a.jPlayer.event.durationchange)
				}
			}, false);
			c.addEventListener("play", function() {
				if(d.gate) {
					b._updateButtons(true);
					b._html_checkWaitForPlay();
					b._trigger(a.jPlayer.event.play)
				}
			}, false);
			c.addEventListener("playing", function() {
				if(d.gate) {
					b._updateButtons(true);
					b._seeked();
					b._trigger(a.jPlayer.event.playing)
				}
			}, false);
			c.addEventListener("pause", function() {
				if(d.gate) {
					b._updateButtons(false);
					b._trigger(a.jPlayer.event.pause)
				}
			}, false);
			c.addEventListener("waiting", function() {
				if(d.gate) {
					b._seeking();
					b._trigger(a.jPlayer.event.waiting)
				}
			}, false);
			c.addEventListener("seeking", function() {
				if(d.gate) {
					b._seeking();
					b._trigger(a.jPlayer.eventjPlayer.event.progress:
				this._getFlashStatus(d);
				this._updateInterface();
				this._trigger(c);
				break;
			case a.jPlayer.event.timeupdate:
				this._getFlashStatus(d);
				this._updateInterface();
				this._trigger(c);
				break;
			case a.jPlayer.event.play:
				this._seeked();
				this._updateButtons(true);
				this._trigger(c);
				break;
			case a.jPlayer.event.pause:
				this._updateButtons(false);
				this._trigger(c);
				break;
			case a.jPlayer.event.ended:
				this._updateButtons(false);
				this._trigger(c);
				break;
			case a.jPlayer.event.click:
				this._trigger(c);
				break;
			case a.jPlayer.event.error:
				this.status.waitForLoad = true;
				this.status.waitForPlay = true;
				this.status.video && this.internal.flash.jq.css({
					width: "0px",
					height: "0px"
				});
				this._validString(this.status.media.poster) && this.internal.poster.jq.show();
				this.css.jq.videoPlay.length && this.status.video && this.css.jq.videoPlay.show();
				this.status.video ? this._flash_setVideo(this.status.media) : this._flash_setAudio(this.status.media);
				this._updateButtons(false);
				this._error({
					type: a.jPlayer.error.URL,
					context: d.src,
					message: a.jPlayer.errorMsg.URL,
					hint: a.jPlayer.errorHint.URL
				});
				break;
			case a.jPlayer.event.seeking:
				this._seeking();
				this._trigger(c);
				break;
			case a.jPlayer.event.seeked:
				this._seeked();
				this._trigger(c);
				break;
			case a.jPlayer.event.ready:
				break;
			default:
				this._trigger(c)
			}
			return false
		},
		_getFlashStatus: function(c) {
			this.status.seekPercent = c.seekPercent;
			this.status.currentPercentRelative = c.currentPercentRelative;
			this.status.currentPercentAbsolute = c.currentPercentAbsolute;
			this.status.currentTime = c.currentTime;
			this.status.duration = c.duration;
			this.status.readyState = 4;
			this.status.networkState = 0;
			this.status.playbackRate = 1;
			this.status.ended = false
		},
		_updateButtons: function(c) {
			if(c !== e) {
				this.status.paused = !c;
				if(this.css.jq.play.length && this.css.jq.pause.length) if(c) {
					this.css.jq.play.hide();
					this.css.jq.pause.show()
				} else {
					this.css.jq.play.show();
					this.css.jq.pause.hide()
				}
			}
			if(this.css.jq.restoreScreen.length && this.css.jq.fullScreen.length) if(this.status.noFullScreen) {
				this.css.jq.fullScreen.hide();
				this.css.jq.restoreScreen.hide()
			} else if(this.options.fullScreen) {
				this.css.jq.fullScreen.hide();
				this.css.jq.restoreScreen.show()
			} else {
				this.css.jq.fullScreen.show();
				this.css.jq.restoreScreen.hide()
			}
			if(this.css.jq.repeat.length && this.css.jq.repeatOff.length) if(this.options.loop) {
				this.css.jq.repeat.hide();
				this.css.jq.repeatOff.show()
			} else {
				this.css.jq.repeat.show();
				this.css.jq.repeatOff.hide()
			}
		},
		_updateInterface: function() {
			this.css.jq.seekBar.length && this.css.jq.seekBar.width(this.status.seekPercent + "%");
			this.css.jq.playBar.length && this.css.jq.playBar.width(this.status.currentPercentRelative + "%");
			this.css.jq.currentTime.length && this.css.jq.currentTime.text(a.jPlayer.convertTime(this.status.currentTime));
			this.css.jq.duration.length && this.css.jq.duration.text(a.jPlayer.convertTime(this.status.duration))
		},
		_seeking: function() {
			this.css.jq.seekBar.length && this.css.jq.seekBar.addClass("jp-seeking-bg")
		},
		_seeked: function() {
			this.css.jq.seekBar.length && this.css.jq.seekBar.removeClass("jp-seeking-bg")
		},
		_resetGate: function() {
			this.html.audio.gate = false;
			this.html.video.gate = false;
			this.flash.gate = false
		},
		_resetActive: function() {
			this.html.active = false;
			this.flash.active = false
		},
		setMedia: function(c) {
			var d = this,
				b = false,
				f = this.status.media.poster !== c.poster;
			this._resetMedia();
			this._resetGate();
			this._resetActive();
			a.each(this.formats, function(j, n) {
				var l = d.format[n].media === "video";
				a.each(d.solutions, function(o, q) {
					if(d[q].support[n] && d._validString(c[n])) {
						var v = q === "html";
						if(l) {
							if(v) {
								d.html.video.gate = true;
								d._html_setVideo(c);
								d.html.active = true
							} else {
								d.flash.gate = true;
								d._flash_setVideo(c);
								d.flash.active = true
							}
							d.css.jq.videoPlay.length && d.css.jq.videoPlay.show();
							d.status.video = true
						} else {
							if(v) {
								d.html.audio.gate = true;
								d._html_setAudio(c);
								d.html.active = true
							} else {
								d.flash.gate = true;
								d._flash_setAudio(c);
								d.flash.active = true
							}
							d.css.jq.videoPlay.length && d.css.jq.videoPlay.hide();
							d.status.video = false
						}
						b = true;
						return false
					}
				});
				if(b) return false
			});
			if(b) {
				if(!(this.status.nativeVideoControls && this.html.video.gate)) if(this._validString(c.poster)) if(f) this.htmlElement.poster.src = c.poster;
				else this.internal.poster.jq.show();
				this.status.srcSet = true;
				this.status.media = a.extend({}, c);
				this._updateButtons(false);
				this._updateInterface()
			} else this._error({
				type: a.jPlayer.error.NO_SUPPORT,
				context: "{supplied:'" + this.options.supplied + "'}",
				message: a.jPlayer.errorMsg.NO_SUPPORT,
				hint: a.jPlayer.errorHint.NO_SUPPORT
			})
		},
		_resetMedia: function() {
			this._resetStatus();
			this._updateButtons(false);
			this._updateInterface();
			this._seeked();
			this.internal.poster.jq.hide();
			clearTimeout(this.internal.htmlDlyCmdId);
			if(this.html.active) this._html_resetMedia();
			else this.flash.active && this._flash_resetMedia()
		},
		clearMedia: function() {
			this._resetMedia();
			if(this.html.active) this._html_clearMedia();
			else this.flash.active && this._flash_clearMedia();
			this._resetGate();
			this._resetActive()
		},
		load: function() {
			if(this.status.srcSet) if(this.html.active) this._html_load();
			else this.flash.active && this._flash_load();
			else this._urlNotSetError("load")
		},
		play: function(c) {
			c = typeof c === "number" ? c : NaN;
			if(this.status.srcSet) if(this.html.active) this._html_play(c);
			else this.flash.active && this._flash_play(c);
			else this._urlNotSetError("play")
		},
		videoPlay: function() {
			this.play()
		},
		pause: function(c) {
			c = typeof c === "number" ? c : NaN;
			if(this.status.srcSet) if(this.html.active) this._html_pause(c);
			else this.flash.active && this._flash_pause(c);
			else this._urlNotSetError("pause")
		},
		pauseOthers: function() {
			var c = this;
			a.each(this.instances, function(d, b) {
				c.element !== b && b.data("jPlayer").status.srcSet && b.jPlayer("pause")
			})
		},
		stop: function() {
			if(this.status.srcSet) if(this.html.active) this._html_pause(0);
			else this.flash.active && this._flash_pause(0);
			else this._urlNotSetError("stop")
		},
		playHead: function(c) {
			c = this._limitValue(c, 0, 100);
			if(this.status.srcSet) if(this.html.active) this._html_playHead(c);
			else this.flash.active && this._flash_playHead(c);
			else this._urlNotSetError("playHead")
		},
		_muted: function(c) {
			this.options.muted = c;
			this.html.used && this._html_mute(c);
			this.flash.used && this._flash_mute(c);
			if(!this.html.video.gate && !this.html.audio.gate) {
				this._updateMute(c);
				this._updateVolume(this.options.volume);
				this._trigger(a.jPlayer.event.volumechange)
			}
		},
		mute: function(c) {
			c = c === e ? true : !! c;
			this._muted(c)
		},
		unmute: function(c) {
			c = c === e ? true : !! c;
			this._muted(!c)
		},
		_updateMute: function(c) {
			if(c === e) c = this.options.muted;
			if(this.css.jq.mute.length && this.css.jq.unmute.length) if(this.status.noVolume) {
				this.css.jq.mute.hide();
				this.css.jq.unmute.hide()
			} else if(c) {
				this.css.jq.mute.hide();
				this.css.jq.unmute.show()
			} else {
				this.css.jq.mute.show();
				this.css.jq.unmute.hide()
			}
		},
		volume: function(c) {
			c = this._limitValue(c, 0, 1);
			this.options.volume = c;
			this.html.used && this._html_volume(c);
			this.flash.used && this._flash_volume(c);
			if(!this.html.video.gate && !this.html.audio.gate) {
				this._updateVolume(c);
				this._trigger(a.jPlayer.event.volumechange)
			}
		},
		volumeBar: function(c) {
			if(this.css.jq.volumeBar.length) {
				var d = this.css.jq.volumeBar.offset(),
					b = c.pageX - d.left,
					f = this.css.jq.volumeBar.width();
				c = this.css.jq.volumeBar.height() - c.pageY + d.top;
				d = this.css.jq.volumeBar.height();
				this.options.verticalVolume ? this.volume(c / d) : this.volume(b / f)
			}
			this.options.muted && this._muted(false)
		},
		volumeBarValue: function(c) {
			this.volumeBar(c)
		},
		_updateVolume: function(c) {
			if(c === e) c = this.options.volume;
			c = this.options.muted ? 0 : c;
			if(this.status.noVolume) {
				this.css.jq.volumeBar.length && this.css.jq.volumeBar.hide();
				this.css.jq.volumeBarValue.length && this.css.jq.volumeBarValue.hide();
				this.css.jq.volumeMax.length && this.css.jq.volumeMax.hide()
			} else {
				this.css.jq.volumeBar.length && this.css.jq.volumeBar.show();
				if(this.css.jq.volumeBarValue.length) {
					this.css.jq.volumeBarValue.show();
					this.css.jq.volumeBarValue[this.options.verticalVolume ? "height" : "width"](c * 100 + "%")
				}
				this.css.jq.volumeMax.length && this.css.jq.volumeMax.show()
			}
		},
		volumeMax: function() {
			this.volume(1);
			this.options.muted && this._muted(false)
		},
		_cssSelectorAncestor: function(c) {
			var d = this;
			this.options.cssSelectorAncestor = c;
			this._removeUiClass();
			this.ancestorJq = c ? a(c) : [];
			c && this.ancestorJq.length !== 1 && this._warning({
				type: a.jPlayer.warning.CSS_SELECTOR_COUNT,
				context: c,
				message: a.jPlayer.warningMsg.CSS_SELECTOR_COUNT + this.ancestorJq.length + " found for cssSelectorAncestor.",
				hint: a.jPlayer.warningHint.CSS_SELECTOR_COUNT
			});
			this._addUiClass();
			a.each(this.options.cssSelector, function(b, f) {
				d._cssSelector(b, f)
			})
		},
		_cssSelector: function(c, d) {
			var b = this;
			if(typeof d === "string") if(a.jPlayer.prototype.options.cssSelector[c]) {
				this.css.jq[c] && this.css.jq[c].length && this.css.jq[c].unbind(".jPlayer");
				this.options.cssSelector[c] = d;
				this.css.cs[c] = this.options.cssSelectorAncestor + " " + d;
				this.css.jq[c] = d ? a(this.css.cs[c]) : [];
				this.css.jq[c].length && this.css.jq[c].bind("click.jPlayer", function(f) {
					b[c](f);
					a(this).blur();
					return false
				});
				d && this.css.jq[c].length !== 1 && this._warning({
					type: a.jPlayer.warning.CSS_SELECTOR_COUNT,
					context: this.css.cs[c],
					message: a.jPlayer.warningMsg.CSS_SELECTOR_COUNT + this.css.jq[c].length + " found for " + c + " method.",
					hint: a.jPlayer.warningHint.CSS_SELECTOR_COUNT
				})
			} else this._warning({
				type: a.jPlayer.warning.CSS_SELECTOR_METHOD,
				context: c,
				message: a.jPlayer.warningMsg.CSS_SELECTOR_METHOD,
				hint: a.jPlayer.warningHint.CSS_SELECTOR_METHOD
			});
			else this._warning({
				type: a.jPlayer.warning.CSS_SELECTOR_STRING,
				context: d,
				message: a.jPlayer.warningMsg.CSS_SELECTOR_STRING,
				hint: a.jPlayer.warningHint.CSS_SELECTOR_STRING
			})
		},
		seekBar: function(c) {
			if(this.css.jq.seekBar) {
				var d = this.css.jq.seekBar.offset();
				c = c.pageX - d.left;
				d = this.css.jq.seekBar.width();
				this.playHead(100 * c / d)
			}
		},
		playBar: function(c) {
			this.seekBar(c)
		},
		repeat: function() {
			this._loop(true)
		},
		repeatOff: function() {
			this._loop(false)
		},
		_loop: function(c) {
			if(this.options.loop !== c) {
				this.options.loop = c;
				this._updateButtons();
				this._trigger(a.jPlayer.event.repeat)
			}
		},
		currentTime: function() {},
		duration: function() {},
		gui: function() {},
		noSolution: function() {},
		option: function(c, d) {
			var b = c;
			if(arguments.length === 0) return a.extend(true, {}, this.options);
			if(typeof c === "string") {
				var f = c.split(".");
				if(d === e) {
					b = a.extend(true, {}, this.options);
					for(var j = 0; j < f.length; j++) if(b[f[j]] !== e) b = b[f[j]];
					else {
						this._warning({
							type: a.jPlayer.warning.OPTION_KEY,
							context: c,
							message: a.jPlayer.warningMsg.OPTION_KEY,
							hint: a.jPlayer.warningHint.OPTION_KEY
						});
						return e
					}
					return b
				}
				j = b = {};
				for(var n = 0; n < f.length; n++) if(n < f.length - 1) {
					j[f[n]] = {};
					j = j[f[n]]
				} else j[f[n]] = d
			}
			this._setOptions(b);
			return this
		},
		_setOptions: function(c) {
			var d = this;
			a.each(c, function(b, f) {
				d._setOption(b, f)
			});
			return this
		},
		_setOption: function(c, d) {
			var b = this;
			switch(c) {
			case "volume":
				this.volume(d);
				break;
			case "muted":
				this._muted(d);
				break;
			case "cssSelectorAncestor":
				this._cssSelectorAncestor(d);
				break;
			case "cssSelector":
				a.each(d, function(f, j) {
					b._cssSelector(f, j)
				});
				break;
			case "fullScreen":
				if(this.options[c] !== d) {
					this._removeUiClass();
					this.options[c] = d;
					this._refreshSize()
				}
				break;
			case "size":
				!this.options.fullScreen && this.options[c].cssClass !== d.cssClass && this._removeUiClass();
				this.options[c] = a.extend({}, this.options[c], d);
				this._refreshSize();
				break;
			case "sizeFull":
				this.options.fullScreen && this.options[c].cssClass !== d.cssClass && this._removeUiClass();
				this.options[c] = a.extend({}, this.options[c], d);
				this._refreshSize();
				break;
			case "autohide":
				this.options[c] = a.extend({}, this.options[c], d);
				this._updateAutohide();
				break;
			case "loop":
				this._loop(d);
				break;
			case "nativeVideoControls":
				this.options[c] = a.extend({}, this.options[c], d);
				this.status.nativeVideoControls = this._uaBlocklist(this.options.nativeVideoControls);
				this._restrictNativeVideoControls();
				this._updateNativeVideoControls();
				break;
			case "noFullScreen":
				this.options[c] = a.extend({}, this.options[c], d);
				this.status.nativeVideoControls = this._uaBlocklist(this.options.nativeVideoControls);
				this.status.noFullScreen = this._uaBlocklist(this.options.noFullScreen);
				this._restrictNativeVideoControls();
				this._updateButtons();
				break;
			case "noVolume":
				this.options[c] = a.extend({}, this.options[c], d);
				this.status.noVolume = this._uaBlocklist(this.options.noVolume);
				this._updateVolume();
				this._updateMute();
				break;
			case "emulateHtml":
				if(this.options[c] !== d)(this.options[c] = d) ? this._emulateHtmlBridge() : this._destroyHtmlBridge()
			}
			return this
		},
		_refreshSize: function() {
			this._setSize();
			this._addUiClass();
			this._updateSize();
			this._updateButtons();
			this._updateAutohide();
			this._trigger(a.jPlayer.event.resize)
		},
		_setSize: function() {
			if(this.options.fullScreen) {
				this.status.width = this.options.sizeFull.width;
				this.status.height = this.options.sizeFull.height;
				this.status.cssClass = this.options.sizeFull.cssClass
			} else {
				this.status.width = this.options.size.width;
				this.status.height = this.options.size.height;
				this.status.cssClass = this.options.size.cssClass
			}
			this.element.css({
				width: this.status.width,
				height: this.status.height
			})
		},
		_addUiClass: function() {
			this.ancestorJq.length && this.ancestorJq.addClass(this.status.cssClass)
		},
		_removeUiClass: function() {
			this.ancestorJq.length && this.ancestorJq.removeClass(this.status.cssClass)
		},
		_updateSize: function() {
			this.internal.poster.jq.css({
				width: this.status.width,
				height: this.status.height
			});
			if(!this.status.waitForPlay && this.html.active && this.status.video || this.html.video.available && this.html.used && this.status.nativeVideoControls) this.internal.video.jq.css({
				width: this.status.width,
				height: this.status.height
			});
			else !this.status.waitForPlay && this.flash.active && this.status.video && this.internal.flash.jq.css({
				width: this.status.width,
				height: this.status.height
			})
		},
		_updateAutohide: function() {
			var c = this,
				d = function() {
					c.css.jq.gui.fadeIn(c.options.autohide.fadeIn, function() {
						clearTimeout(c.internal.autohideId);
						c.internal.autohideId = setTimeout(function() {
							c.css.jq.gui.fadeOut(c.options.autohide.fadeOut)
						}, c.options.autohide.hold)
					})
				};
			if(this.css.jq.gui.length) {
				this.css.jq.gui.stop(true, true);
				clearTimeout(this.internal.autohideId);
				this.element.unbind(".jPlayerAutohide");
				this.css.jq.gui.unbind(".jPlayerAutohide");
				if(this.status.nativeVideoControls) this.css.jq.gui.hide();
				else if(this.options.fullScreen && this.options.autohide.full || !this.options.fullScreen && this.options.autohide.restored) {
					this.element.bind("mousemove.jPlayer.jPlayerAutohide", d);
					this.css.jq.gui.bind("mousemove.jPlayer.jPlayerAutohide", d);
					this.css.jq.gui.hide()
				} else this.css.jq.gui.show()
			}
		},
		fullScreen: function() {
			this._setOption("fullScreen", true)
		},
		restoreScreen: function() {
			this._setOption("fullScreen", false)
		},
		_html_initMedia: function() {
			this.htmlElement.media.src = this.status.src;
			this.options.preload !== "none" && this._html_load();
			this._trigger(a.jPlayer.event.timeupdate)
		},
		_html_setAudio: function(c) {
			var d = this;
			a.each(this.formats, function(b, f) {
				if(d.html.support[f] && c[f]) {
					d.status.src = c[f];
					d.status.format[f] = true;
					d.status.formatType = f;
					return false
				}
			});
			this.htmlElement.media = this.htmlElement.audio;
			this._html_initMedia()
		},
		_html_setVideo: function(c) {
			var d = this;
			a.each(this.formats, function(b, f) {
				if(d.html.support[f] && c[f]) {
					d.status.src = c[f];
					d.status.format[f] = true;
					d.status.formatType = f;
					return false
				}
			});
			if(this.status.nativeVideoControls) this.htmlElement.video.poster = this._validString(c.poster) ? c.poster : "";
			this.htmlElement.media = this.htmlElement.video;
			this._html_initMedia()
		},
		_html_resetMedia: function() {
			if(this.htmlElement.media) {
				this.htmlElement.media.id === this.internal.video.id && !this.status.nativeVideoControls && this.internal.video.jq.css({
					width: "0px",
					height: "0px"
				});
				this.htmlElement.media.pause()
			}
		},
		_html_clearMedia: function() {
			if(this.htmlElement.media) {
				this.htmlElement.media.src = "";
				this.htmlElement.media.load()
			}
		},
		_html_load: function() {
			if(this.status.waitForLoad) {
				this.status.waitForLoad = false;
				this.htmlElement.media.load()
			}
			clearTimeout(this.internal.htmlDlyCmdId)
		},
		_html_play: function(c) {
			var d = this;
			this._html_load();
			this.htmlElement.media.play();
			if(!isNaN(c)) try {
				this.htmlElement.media.currentTime = c
			} catch(b) {
				this.internal.htmlDlyCmdId = setTimeout(function() {
					d.play(c)
				}, 100);
				return
			}
			this._html_checkWaitForPlay()
		},
		_html_pause: function(c) {
			var d = this;
			c > 0 ? this._html_load() : clearTimeout(this.internal.htmlDlyCmdId);
			this.htmlElement.media.pause();
			if(!isNaN(c)) try {
				this.htmlElement.media.currentTime = c
			} catch(b) {
				this.internal.htmlDlyCmdId = setTimeout(function() {
					d.pause(c)
				}, 100);
				return
			}
			c > 0 && this._html_checkWaitForPlay()
		},
		_html_playHead: function(c) {
			var d = this;
			this._html_load();
			try {
				if(typeof this.htmlElement.media.seekable === "object" && this.htmlElement.media.seekable.length > 0) this.htmlElement.media.currentTime = c * this.htmlElement.media.seekable.end(this.htmlElement.media.seekable.length - 1) / 100;
				else if(this.htmlElement.media.duration > 0 && !isNaN(this.htmlElement.media.duration)) this.htmlElement.media.currentTime = c * this.htmlElement.media.duration / 100;
				else throw "e";
			} catch(b) {
				this.internal.htmlDlyCmdId = setTimeout(function() {
					d.playHead(c)
				}, 100);
				return
			}
			this.status.waitForLoad || this._html_checkWaitForPlay()
		},
		_html_checkWaitForPlay: function() {
			if(this.status.waitForPlay) {
				this.status.waitForPlay = false;
				this.css.jq.videoPlay.length && this.css.jq.videoPlay.hide();
				if(this.status.video) {
					this.internal.poster.jq.hide();
					this.internal.video.jq.css({
						width: this.status.width,
						height: this.status.height
					})
				}
			}
		},
		_html_volume: function(c) {
			if(this.html.audio.available) this.htmlElement.audio.volume = c;
			if(this.html.video.available) this.htmlElement.video.volume = c
		},
		_html_mute: function(c) {
			if(this.html.audio.available) this.htmlElement.audio.muted = c;
			if(this.html.video.available) this.htmlElement.video.muted = c
		},
		_flash_setAudio: function(c) {
			var d = this;
			try {
				a.each(this.formats, function(f, j) {
					if(d.flash.support[j] && c[j]) {
						switch(j) {
						case "m4a":
						case "fla":
							d._getMovie().fl_setAudio_m4a(c[j]);
							break;
						case "mp3":
							d._getMovie().fl_setAudio_mp3(c[j])
						}
						d.status.src = c[j];
						d.status.format[j] = true;
						d.status.formatType = j;
						return false
					}
				});
				if(this.options.preload === "auto") {
					this._flash_load();
					this.status.waitForLoad = false
				}
			} catch(b) {
				this._flashError(b)
			}
		},
		_flash_setVideo: function(c) {
			var d = this;
			try {
				a.each(this.formats, function(f, j) {
					if(d.flash.support[j] && c[j]) {
						switch(j) {
						case "m4v":
						case "flv":
							d._getMovie().fl_setVideo_m4v(c[j])
						}
						d.status.src = c[j];
						d.status.format[j] = true;
						d.status.formatType = j;
						return false
					}
				});
				if(this.options.preload === "auto") {
					this._flash_load();
					this.status.waitForLoad = false
				}
			} catch(b) {
				this._flashError(b)
			}
		},
		_flash_resetMedia: function() {
			this.internal.flash.jq.css({
				width: "0px",
				height: "0px"
			});
			this._flash_pause(NaN)
		},
		_flash_clearMedia: function() {
			try {
				this._getMovie().fl_clearMedia()
			} catch(c) {
				this._flashError(c)
			}
		},
		_flash_load: function() {
			try {
				this._getMovie().fl_load()
			} catch(c) {
				this._flashError(c)
			}
			this.status.waitForLoad = false
		},
		_flash_play: function(c) {
			try {
				this._getMovie().fl_play(c)
			} catch(d) {
				this._flashError(d)
			}
			this.status.waitForLoad = false;
			this._flash_checkWaitForPlay()
		},
		_flash_pause: function(c) {
			try {
				this._getMovie().fl_pause(c)
			} catch(d) {
				this._flashError(d)
			}
			if(c > 0) {
				this.status.waitForLoad = false;
				this._flash_checkWaitForPlay()
			}
		},
		_flash_playHead: function(c) {
			try {
				this._getMovie().fl_play_head(c)
			} catch(d) {
				this._flashError(d)
			}
			this.status.waitForLoad || this._flash_checkWaitForPlay()
		},
		_flash_checkWaitForPlay: function() {
			if(this.status.waitForPlay) {
				this.status.waitForPlay = false;
				this.css.jq.videoPlay.length && this.css.jq.videoPlay.hide();
				if(this.status.video) {
					this.internal.poster.jq.hide();
					this.internal.flash.jq.css({
						width: this.status.width,
						height: this.status.height
					})
				}
			}
		},
		_flash_volume: function(c) {
			try {
				this._getMovie().fl_volume(c)
			} catch(d) {
				this._flashError(d)
			}
		},
		_flash_mute: function(c) {
			try {
				this._getMovie().fl_mute(c)
			} catch(d) {
				this._flashError(d)
			}
		},
		_getMovie: function() {
			return document[this.internal.flash.id]
		},
		_checkForFlash: function(c) {
			var d = false,
				b;
			if(window.ActiveXObject) try {
				new ActiveXObject("ShockwaveFlash.ShockwaveFlash." + c);
				d = true
			} catch(f) {} else if(navigator.plugins && navigator.mimeTypes.length > 0) if(b = navigator.plugins["Shockwave Flash"]) if(navigator.plugins["Shockwave Flash"].description.replace(/.*\s(\d+\.\d+).*/, "$1") >= c) d = true;
			return d
		},
		_validString: function(c) {
			return c && typeof c === "string"
		},
		_limitValue: function(c, d, b) {
			return c < d ? d : c > b ? b : c
		},
		_urlNotSetError: function(c) {
			this._error({
				type: a.jPlayer.error.URL_NOT_SET,
				context: c,
				message: a.jPlayer.errorMsg.URL_NOT_SET,
				hint: a.jPlayer.errorHint.URL_NOT_SET
			})
		},
		_flashError: function(c) {
			var d;
			d = this.internal.ready ? "FLASH_DISABLED" : "FLASH";
			this._error({
				type: a.jPlayer.error[d],
				context: this.internal.flash.swf,
				message: a.jPlayer.errorMsg[d] + c.message,
				hint: a.jPlayer.errorHint[d]
			});
			this.internal.flash.jq.css({
				width: "1px",
				height: "1px"
			})
		},
		_error: function(c) {
			this._trigger(a.jPlayer.event.error, c);
			if(this.options.errorAlerts) this._alert("Error!" + (c.message ? "\n\n" + c.message : "") + (c.hint ? "\n\n" + c.hint : "") + "\n\nContext: " + c.context)
		},
		_warning: function(c) {
			this._trigger(a.jPlayer.event.warning, e, c);
			if(this.options.warningAlerts) this._alert("Warning!" + (c.message ? "\n\n" + c.message : "") + (c.hint ? "\n\n" + c.hint : "") + "\n\nContext: " + c.context)
		},
		_alert: function(c) {
			alert("jPlayer " + this.version.script + " : id='" + this.internal.self.id + "' : " + c)
		},
		_emulateHtmlBridge: function() {
			var c = this;
			a.each(a.jPlayer.emulateMethods.split(/\s+/g), function(d, b) {
				c.internal.domNode[b] = function(f) {
					c[b](f)
				}
			});
			a.each(a.jPlayer.event, function(d, b) {
				var f = true;
				a.each(a.jPlayer.reservedEvent.split(/\s+/g), function(j, n) {
					if(n === d) return f = false
				});
				f && c.element.bind(b + ".jPlayer.jPlayerHtml", function() {
					c._emulateHtmlUpdate();
					var j = document.createEvent("Event");
					j.initEvent(d, false, true);
					c.internal.domNode.dispatchEvent(j)
				})
			})
		},
		_emulateHtmlUpdate: function() {
			var c = this;
			a.each(a.jPlayer.emulateStatus.split(/\s+/g), function(d, b) {
				c.internal.domNode[b] = c.status[b]
			});
			a.each(a.jPlayer.emulateOptions.split(/\s+/g), function(d, b) {
				c.internal.domNode[b] = c.options[b]
			})
		},
		_destroyHtmlBridge: function() {
			var c = this;
			this.element.unbind(".jPlayerHtml");
			a.each((a.jPlayer.emulateMethods + " " + a.jPlayer.emulateStatus + " " + a.jPlayer.emulateOptions).split(/\s+/g), function(d, b) {
				delete c.internal.domNode[b]
			})
		}
	};
	a.jPlayer.error = {
		FLASH: "e_flash",
		FLASH_DISABLED: "e_flash_disabled",
		NO_SOLUTION: "e_no_solution",
		NO_SUPPORT: "e_no_support",
		URL: "e_url",
		URL_NOT_SET: "e_url_not_set",
		VERSION: "e_version"
	};
	a.jPlayer.errorMsg = {
		FLASH: "jPlayer's Flash fallback is not configured correctly, or a command was issued before the jPlayer Ready event. Details: ",
		FLASH_DISABLED: "jPlayer's Flash fallback has been disabled by the browser due to the CSS rules you have used. Details: ",
		NO_SOLUTION: "No solution can be found by jPlayer in this browser. Neither HTML nor Flash can be used.",
		NO_SUPPORT: "It is not possible to play any media format provided in setMedia() on this browser using your current options.",
		URL: "Media URL could not be loaded.",
		URL_NOT_SET: "Attempt to issue media playback commands, while no media url is set.",
		VERSION: "jPlayer " + a.jPlayer.prototype.version.script + " needs Jplayer.swf version " + a.jPlayer.prototype.version.needFlash + " but found "
	};
	a.jPlayer.errorHint = {
		FLASH: "Check your swfPath option and that Jplayer.swf is there.",
		FLASH_DISABLED: "Check that you have not display:none; the jPlayer entity or any ancestor.",
		NO_SOLUTION: "Review the jPlayer options: support and supplied.",
		NO_SUPPORT: "Video or audio formats defined in the supplied option are missing.",
		URL: "Check media URL is valid.",
		URL_NOT_SET: "Use setMedia() to set the media URL.",
		VERSION: "Update jPlayer files."
	};
	a.jPlayer.warning = {
		CSS_SELECTOR_COUNT: "e_css_selector_count",
		CSS_SELECTOR_METHOD: "e_css_selector_method",
		CSS_SELECTOR_STRING: "e_css_selector_string",
		OPTION_KEY: "e_option_key"
	};
	a.jPlayer.warningMsg = {
		CSS_SELECTOR_COUNT: "The number of css selectors found did not equal one: ",
		CSS_SELECTOR_METHOD: "The methodName given in jPlayer('cssSelector') is not a valid jPlayer method.",
		CSS_SELECTOR_STRING: "The methodCssSelector given in jPlayer('cssSelector') is not a String or is empty.",
		OPTION_KEY: "The option requested in jPlayer('option') is undefined."
	};
	a.jPlayer.warningHint = {
		CSS_SELECTOR_COUNT: "Check your css selector and the ancestor.",
		CSS_SELECTOR_METHOD: "Check your method name.",
		CSS_SELECTOR_STRING: "Check your css selector is a string.",
		OPTION_KEY: "Check your option name."
	}
})(jQuery);
jQuery.fn.debounce = function(a, e, g) {
	g = g || 100;
	this.each(function() {
		var c = this,
			d;
		$(this).bind(a, function() {
			if(d) {
				clearTimeout(d);
				d = undefined
			}
			var b = arguments;
			d = setTimeout(function() {
				e.apply(c, b)
			}, g)
		})
	});
	return this
};
$.fn.inputOverlay = function(a) {
	this.filter("input").each(function() {
		var e = $(this),
			g = e.offsetParent(),
			c = e.offset().top - g.offset().top;
		g = e.offset().left - g.offset().left;
		var d = e.parent(),
			b = "overlay" + Math.floor(Math.random() * 1E4);
		a || (a = e.attr("title") ? e.attr("title") : "");
		d.append('<div class="inputOverlay" id="' + b + '" style="position: absolute; top: ' + c + "px; left: " + (g + 5) + 'px;">' + a + "</div>");
		var f = $("#" + b);
		e.bind("focus", function() {
			f.hide()
		});
		e.bind("blur", function() {
			e.val() || f.fadeIn("fast")
		});
		f.bind("click", function() {
			f.hide();
			e.focus()
		})
	})
};
$.fn.militarize = function() {
	var a = ["Alpha", "Bravo", "Charlie", "Delta", "Echo", "Foxtrot", "Golf", "Hotel", "India", "Juliet", "Kilo", "Lima", "Mike", "November", "Oscar", "Papa", "Quebec", "Romeo", "Sierra", "Tango", "Uniform", "Victor", "Whiskey", "X-Ray", "Yankee", "Zulu"];
	this.each(function() {
		for(var e = $(this).text(), g = [], c = 0; c < e.length; c++) {
			var d = e.charCodeAt(c);
			if(d > 64 && d < 91) g.push(a[d - 65]);
			else d > 96 && d < 123 ? g.push(a[d - 97]) : g.push(e.charAt(c))
		}
		$(this).text(g.join(" "))
	})
};
_ticker = _timer = null;
_tickCounter = 0;
if(typeof ticking == "undefined" || !ticking) $(document).ready(function() {
	_ticker = function(a) {
		_tickCounter++;
		$(window).triggerHandler("halfTick");
		if(_tickCounter % 2 == 0) {
			$(window).triggerHandler("tick");
			_tickCounter = 0
		}
		_timer = setTimeout(function() {
			a(a)
		}, 500)
	};
	_ticker(_ticker)
});
var _TICKING = true;
/*
: Licensed under The MIT License. See license.txt and http://www.datejs.com/license/. 
 @website: http://www.datejs.com/
*/
Date.CultureInfo = {
	name: "en-US",
	englishName: "English (United States)",
	nativeName: "English (United States)",
	dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
	abbreviatedDayNames: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
	shortestDayNames: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
	firstLetterDayNames: ["S", "M", "T", "W", "T", "F", "S"],
	monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
	abbreviatedMonthNames: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
	amDesignator: "AM",
	pmDesignator: "PM",
	firstDayOfWeek: 0,
	twoDigitYearMax: 2029,
	dateElementOrder: "mdy",
	formatPatterns: {
		shortDate: "M/d/yyyy",
		longDate: "dddd, MMMM dd, yyyy",
		shortTime: "h:mm tt",
		longTime: "h:mm:ss tt",
		fullDateTime: "dddd, MMMM dd, yyyy h:mm:ss tt",
		sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
		universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
		rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
		monthDay: "MMMM dd",
		yearMonth: "MMMM, yyyy"
	},
	regexPatterns: {
		jan: /^jan(uary)?/i,
		feb: /^feb(ruary)?/i,
		mar: /^mar(ch)?/i,
		apr: /^apr(il)?/i,
		may: /^may/i,
		jun: /^jun(e)?/i,
		jul: /^jul(y)?/i,
		aug: /^aug(ust)?/i,
		sep: /^sep(t(ember)?)?/i,
		oct: /^oct(ober)?/i,
		nov: /^nov(ember)?/i,
		dec: /^dec(ember)?/i,
		sun: /^su(n(day)?)?/i,
		mon: /^mo(n(day)?)?/i,
		tue: /^tu(e(s(day)?)?)?/i,
		wed: /^we(d(nesday)?)?/i,
		thu: /^th(u(r(s(day)?)?)?)?/i,
		fri: /^fr(i(day)?)?/i,
		sat: /^sa(t(urday)?)?/i,
		future: /^next/i,
		past: /^last|past|prev(ious)?/i,
		add: /^(\+|aft(er)?|from|hence)/i,
		subtract: /^(\-|bef(ore)?|ago)/i,
		yesterday: /^yes(terday)?/i,
		today: /^t(od(ay)?)?/i,
		tomorrow: /^tom(orrow)?/i,
		now: /^n(ow)?/i,
		millisecond: /^ms|milli(second)?s?/i,
		second: /^sec(ond)?s?/i,
		minute: /^mn|min(ute)?s?/i,
		hour: /^h(our)?s?/i,
		week: /^w(eek)?s?/i,
		month: /^m(onth)?s?/i,
		day: /^d(ay)?s?/i,
		year: /^y(ear)?s?/i,
		shortMeridian: /^(a|p)/i,
		longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
		timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt|utc)/i,
		ordinalSuffix: /^\s*(st|nd|rd|th)/i,
		timeContext: /^\s*(\:|a(?!u|p)|p)/i
	},
	timezones: [{
		name: "UTC",
		offset: "-000"
	}, {
		name: "GMT",
		offset: "-000"
	}, {
		name: "EST",
		offset: "-0500"
	}, {
		name: "EDT",
		offset: "-0400"
	}, {
		name: "CST",
		offset: "-0600"
	}, {
		name: "CDT",
		offset: "-0500"
	}, {
		name: "MST",
		offset: "-0700"
	}, {
		name: "MDT",
		offset: "-0600"
	}, {
		name: "PST",
		offset: "-0800"
	}, {
		name: "PDT",
		offset: "-0700"
	}]
};
(function() {
	var a = Date,
		e = a.prototype,
		g = a.CultureInfo,
		c = function(j, n) {
			n || (n = 2);
			return("000" + j).slice(n * -1)
		};
	e.clearTime = function() {
		this.setHours(0);
		this.setMinutes(0);
		this.setSeconds(0);
		this.setMilliseconds(0);
		return this
	};
	e.setTimeToNow = function() {
		var j = new Date;
		this.setHours(j.getHours());
		this.setMinutes(j.getMinutes());
		this.setSeconds(j.getSeconds());
		this.setMilliseconds(j.getMilliseconds());
		return this
	};
	a.today = function() {
		return(new Date).clearTime()
	};
	a.compare = function(j, n) {
		if(isNaN(j) || isNaN(n)) throw Error(j + " - " + n);
		else if(j instanceof Date && n instanceof Date) return j < n ? -1 : j > n ? 1 : 0;
		else throw new TypeError(j + " - " + n);
	};
	a.equals = function(j, n) {
		return j.compareTo(n) === 0
	};
	a.getDayNumberFromName = function(j) {
		var n = g.dayNames,
			l = g.abbreviatedDayNames,
			o = g.shortestDayNames;
		j = j.toLowerCase();
		for(var q = 0; q < n.length; q++) if(n[q].toLowerCase() == j || l[q].toLowerCase() == j || o[q].toLowerCase() == j) return q;
		return -1
	};
	a.getMonthNumberFromName = function(j) {
		var n = g.monthNames,
			l = g.abbreviatedMonthNames;
		j = j.toLowerCase();
		for(var o = 0; o < n.length; o++) if(n[o].toLowerCase() == j || l[o].toLowerCase() == j) return o;
		return -1
	};
	a.isLeapYear = function(j) {
		return j % 4 === 0 && j % 100 !== 0 || j % 400 === 0
	};
	a.getDaysInMonth = function(j, n) {
		return [31, a.isLeapYear(j) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][n]
	};
	a.getTimezoneAbbreviation = function(j) {
		for(var n = g.timezones, l = 0; l < n.length; l++) if(n[l].offset === j) return n[l].name;
		return null
	};
	a.getTimezoneOffset = function(j) {
		for(var n = g.timezones, l = 0; l < n.length; l++) if(n[l].name === j.toUpperCase()) return n[l].offset;
		return null
	};
	e.clone = function() {
		return new Date(this.getTime())
	};
	e.compareTo = function(j) {
		return Date.compare(this, j)
	};
	e.equals = function(j) {
		return Date.equals(this, j || new Date)
	};
	e.between = function(j, n) {
		return this.getTime() >= j.getTime() && this.getTime() <= n.getTime()
	};
	e.isAfter = function(j) {
		return this.compareTo(j || new Date) === 1
	};
	e.isBefore = function(j) {
		return this.compareTo(j || new Date) === -1
	};
	e.isToday = function() {
		return this.isSameDay(new Date)
	};
	e.isSameDay = function(j) {
		return this.clone().clearTime().equals(j.clone().clearTime())
	};
	e.addMilliseconds = function(j) {
		this.setMilliseconds(this.getMilliseconds() + j);
		return this
	};
	e.addSeconds = function(j) {
		return this.addMilliseconds(j * 1E3)
	};
	e.addMinutes = function(j) {
		return this.addMilliseconds(j * 6E4)
	};
	e.addHours = function(j) {
		return this.addMilliseconds(j * 36E5)
	};
	e.addDays = function(j) {
		this.setDate(this.getDate() + j);
		return this
	};
	e.addWeeks = function(j) {
		return this.addDays(j * 7)
	};
	e.addMonths = function(j) {
		var n = this.getDate();
		this.setDate(1);
		this.setMonth(this.getMonth() + j);
		this.setDate(Math.min(n, a.getDaysInMonth(this.getFullYear(), this.getMonth())));
		return this
	};
	e.addYears = function(j) {
		return this.addMonths(j * 12)
	};
	e.add = function(j) {
		if(typeof j == "number") {
			this._orient = j;
			return this
		}
		j.milliseconds && this.addMilliseconds(j.milliseconds);
		j.seconds && this.addSeconds(j.seconds);
		j.minutes && this.addMinutes(j.minutes);
		j.hours && this.addHours(j.hours);
		j.weeks && this.addWeeks(j.weeks);
		j.months && this.addMonths(j.months);
		j.years && this.addYears(j.years);
		j.days && this.addDays(j.days);
		return this
	};
	var d, b, f;
	e.getWeek = function() {
		var j, n, l, o, q;
		d = !d ? this.getFullYear() : d;
		b = !b ? this.getMonth() + 1 : b;
		f = !f ? this.getDate() : f;
		if(b <= 2) {
			j = d - 1;
			n = (j / 4 | 0) - (j / 100 | 0) + (j / 400 | 0);
			l = ((j - 1) / 4 | 0) - ((j - 1) / 100 | 0) + ((j - 1) / 400 | 0);
			l = n - l;
			o = 0;
			q = f - 1 + 31 * (b - 1)
		} else {
			j = d;
			n = (j / 4 | 0) - (j / 100 | 0) + (j / 400 | 0);
			l = ((j - 1) / 4 | 0) - ((j - 1) / 100 | 0) + ((j - 1) / 400 | 0);
			l = n - l;
			o = l + 1;
			q = f + (153 * (b - 3) + 2) / 5 + 58 + l
		}
		j = (j + n) % 7;
		n = q + 3 - (q + j - o) % 7 | 0;
		l = n < 0 ? 53 - ((j - l) / 5 | 0) : n > 364 + l ? 1 : (n / 7 | 0) + 1;
		d = b = f = null;
		return l
	};
	e.getISOWeek = function() {
		d = this.getUTCFullYear();
		b = this.getUTCMonth() + 1;
		f = this.getUTCDate();
		return c(this.getWeek())
	};
	e.setWeek = function(j) {
		return this.moveToDayOfWeek(1).addWeeks(j - this.getWeek())
	};
	a._validate = function(j, n, l, o) {
		if(typeof j == "undefined") return false;
		else if(typeof j != "number") throw new TypeError(j + " is not a Number.");
		else if(j < n || j > l) throw new RangeError(j + " is not a valid value for " + o + ".");
		return true
	};
	a.validateMillisecond = function(j) {
		return a._validate(j, 0, 999, "millisecond")
	};
	a.validateSecond = function(j) {
		return a._validate(j, 0, 59, "second")
	};
	a.validateMinute = function(j) {
		return a._validate(j, 0, 59, "minute")
	};
	a.validateHour = function(j) {
		return a._validate(j, 0, 23, "hour")
	};
	a.validateDay = function(j, n, l) {
		return a._validate(j, 1, a.getDaysInMonth(n, l), "day")
	};
	a.validateMonth = function(j) {
		return a._validate(j, 0, 11, "month")
	};
	a.validateYear = function(j) {
		return a._validate(j, 0, 9999, "year")
	};
	e.set = function(j) {
		a.validateMillisecond(j.millisecond) && this.addMilliseconds(j.millisecond - this.getMilliseconds());
		a.validateSecond(j.second) && this.addSeconds(j.second - this.getSeconds());
		a.validateMinute(j.minute) && this.addMinutes(j.minute - this.getMinutes());
		a.validateHour(j.hour) && this.addHours(j.hour - this.getHours());
		a.validateMonth(j.month) && this.addMonths(j.month - this.getMonth());
		a.validateYear(j.year) && this.addYears(j.year - this.getFullYear());
		a.validateDay(j.day, this.getFullYear(), this.getMonth()) && this.addDays(j.day - this.getDate());
		j.timezone && this.setTimezone(j.timezone);
		j.timezoneOffset && this.setTimezoneOffset(j.timezoneOffset);
		j.week && a._validate(j.week, 0, 53, "week") && this.setWeek(j.week);
		return this
	};
	e.moveToFirstDayOfMonth = function() {
		return this.set({
			day: 1
		})
	};
	e.moveToLastDayOfMonth = function() {
		return this.set({
			day: a.getDaysInMonth(this.getFullYear(), this.getMonth())
		})
	};
	e.moveToNthOccurrence = function(j, n) {
		var l = 0;
		if(n > 0) l = n - 1;
		else if(n === -1) {
			this.moveToLastDayOfMonth();
			this.getDay() !== j && this.moveToDayOfWeek(j, -1);
			return this
		}
		return this.moveToFirstDayOfMonth().addDays(-1).moveToDayOfWeek(j, +1).addWeeks(l)
	};
	e.moveToDayOfWeek = function(j, n) {
		var l = (j - this.getDay() + 7 * (n || +1)) % 7;
		return this.addDays(l === 0 ? l += 7 * (n || +1) : l)
	};
	e.moveToMonth = function(j, n) {
		var l = (j - this.getMonth() + 12 * (n || +1)) % 12;
		return this.addMonths(l === 0 ? l += 12 * (n || +1) : l)
	};
	e.getOrdinalNumber = function() {
		return Math.ceil((this.clone().clearTime() - new Date(this.getFullYear(), 0, 1)) / 864E5) + 1
	};
	e.getTimezone = function() {
		return a.getTimezoneAbbreviation(this.getUTCOffset())
	};
	e.setTimezoneOffset = function(j) {
		var n = this.getTimezoneOffset();
		return this.addMinutes(Number(j) * -6 / 10 - n)
	};
	e.setTimezone = function(j) {
		return this.setTimezoneOffset(a.getTimezoneOffset(j))
	};
	e.hasDaylightSavingTime = function() {
		return Date.today().set({
			month: 0,
			day: 1
		}).getTimezoneOffset() !== Date.today().set({
			month: 6,
			day: 1
		}).getTimezoneOffset()
	};
	e.isDaylightSavingTime = function() {
		return this.hasDaylightSavingTime() && (new Date).getTimezoneOffset() === Date.today().set({
			month: 6,
			day: 1
		}).getTimezoneOffset()
	};
	e.getUTCOffset = function() {
		var j = this.getTimezoneOffset() * -10 / 6;
		if(j < 0) {
			j = (j - 1E4).toString();
			return j.charAt(0) + j.substr(2)
		} else {
			j = (j + 1E4).toString();
			return "+" + j.substr(1)
		}
	};
	e.getElapsed = function(j) {
		return(j || new Date) - this
	};
	if(!e.toISOString) e.toISOString = function() {
		function j(n) {
			return n < 10 ? "0" + n : n
		}
		return '"' + this.getUTCFullYear() + "-" + j(this.getUTCMonth() + 1) + "-" + j(this.getUTCDate()) + "T" + j(this.getUTCHours()) + ":" + j(this.getUTCMinutes()) + ":" + j(this.getUTCSeconds()) + 'Z"'
	};
	e._toString = e.toString;
	e.toString = function(j) {
		var n = this;
		if(j && j.length == 1) {
			var l = g.formatPatterns;
			n.t = n.toString;
			switch(j) {
			case "d":
				return n.t(l.shortDate);
			case "D":
				return n.t(l.longDate);
			case "F":
				return n.t(l.fullDateTime);
			case "m":
				return n.t(l.monthDay);
			case "r":
				return n.t(l.rfc1123);
			case "s":
				return n.t(l.sortableDateTime);
			case "t":
				return n.t(l.shortTime);
			case "T":
				return n.t(l.longTime);
			case "u":
				return n.t(l.universalSortableDateTime);
			case "y":
				return n.t(l.yearMonth)
			}
		}
		var o = function(q) {
				switch(q * 1) {
				case 1:
				case 21:
				case 31:
					return "st";
				case 2:
				case 22:
					return "nd";
				case 3:
				case 23:
					return "rd";
				default:
					return "th"
				}
			};
		return j ? j.replace(/(\\)?(dd?d?d?|MM?M?M?|yy?y?y?|hh?|HH?|mm?|ss?|tt?|S)/g, function(q) {
			if(q.charAt(0) === "\\") return q.replace("\\", "");
			n.h = n.getHours;
			switch(q) {
			case "hh":
				return c(n.h() < 13 ? n.h() === 0 ? 12 : n.h() : n.h() - 12);
			case "h":
				return n.h() < 13 ? n.h() === 0 ? 12 : n.h() : n.h() - 12;
			case "HH":
				return c(n.h());
			case "H":
				return n.h();
			case "mm":
				return c(n.getMinutes());
			case "m":
				return n.getMinutes();
			case "ss":
				return c(n.getSeconds());
			case "s":
				return n.getSeconds();
			case "yyyy":
				return c(n.getFullYear(), 4);
			case "yy":
				return c(n.getFullYear());
			case "dddd":
				return g.dayNames[n.getDay()];
			case "ddd":
				return g.abbreviatedDayNames[n.getDay()];
			case "dd":
				return c(n.getDate());
			case "d":
				return n.getDate();
			case "MMMM":
				return g.monthNames[n.getMonth()];
			case "MMM":
				return g.abbreviatedMonthNames[n.getMonth()];
			case "MM":
				return c(n.getMonth() + 1);
			case "M":
				return n.getMonth() + 1;
			case "t":
				return n.h() < 12 ? g.amDesignator.substring(0, 1) : g.pmDesignator.substring(0, 1);
			case "tt":
				return n.h() < 12 ? g.amDesignator : g.pmDesignator;
			case "S":
				return o(n.getDate());
			default:
				return q
			}
		}) : this._toString()
	}
})();
(function() {
	var a = Date,
		e = a.prototype,
		g = a.CultureInfo,
		c = Number.prototype;
	e._orient = +1;
	e._nth = null;
	e._is = false;
	e._same = false;
	e._isSecond = false;
	c._dateElement = "day";
	e.next = function() {
		this._orient = +1;
		return this
	};
	a.next = function() {
		return a.today().next()
	};
	e.last = e.prev = e.previous = function() {
		this._orient = -1;
		return this
	};
	a.last = a.prev = a.previous = function() {
		return a.today().last()
	};
	e.is = function() {
		this._is = true;
		return this
	};
	e.same = function() {
		this._same = true;
		this._isSecond = false;
		return this
	};
	e.today = function() {
		return this.same().day()
	};
	e.weekday = function() {
		if(this._is) {
			this._is = false;
			return !this.is().sat() && !this.is().sun()
		}
		return false
	};
	e.at = function(v) {
		return typeof v === "string" ? a.parse(this.toString("d") + " " + v) : this.set(v)
	};
	c.fromNow = c.after = function(v) {
		var x = {};
		x[this._dateElement] = this;
		return(!v ? new Date : v.clone()).add(x)
	};
	c.ago = c.before = function(v) {
		var x = {};
		x[this._dateElement] = this * -1;
		return(!v ? new Date : v.clone()).add(x)
	};
	var d = "sunday monday tuesday wednesday thursday friday saturday".split(/\s/),
		b = "january february march april may june july august september october november december".split(/\s/),
		f = "Millisecond Second Minute Hour Day Week Month Year".split(/\s/),
		j = "Milliseconds Seconds Minutes Hours Date Week Month FullYear".split(/\s/),
		n = "final first second third fourth fifth".split(/\s/);
	e.toObject = function() {
		for(var v = {}, x = 0; x < f.length; x++) v[f[x].toLowerCase()] = this["get" + j[x]]();
		return v
	};
	a.fromObject = function(v) {
		v.week = null;
		return Date.today().set(v)
	};
	for(var l = function(v) {
			return function() {
				if(this._is) {
					this._is = false;
					return this.getDay() == v
				}
				if(this._nth !== null) {
					this._isSecond && this.addSeconds(this._orient * -1);
					this._isSecond = false;
					var x = this._nth;
					this._nth = null;
					var y = this.clone().moveToLastDayOfMonth();
					this.moveToNthOccurrence(v, x);
					if(this > y) throw new RangeError(a.getDayName(v) + " does not occur " + x + " times in the month of " + a.getMonthName(y.getMonth()) + " " + y.getFullYear() + ".");
					return this
				}
				return this.moveToDayOfWeek(v, this._orient)
			}
		}, o = function(v) {
			return function() {
				var x = a.today(),
					y = v - x.getDay();
				if(v === 0 && g.firstDayOfWeek === 1 && x.getDay() !== 0) y += 7;
				return x.addDays(y)
			}
		}, q = 0; q < d.length; q++) {
		a[d[q].toUpperCase()] = a[d[q].toUpperCase().substring(0, 3)] = q;
		a[d[q]] = a[d[q].substring(0, 3)] = o(q);
		e[d[q]] = e[d[q].substring(0, 3)] = l(q)
	}
	d = function(v) {
		return function() {
			if(this._is) {
				this._is = false;
				return this.getMonth() === v
			}
			return this.moveToMonth(v, this._orient)
		}
	};
	l = function(v) {
		return function() {
			return a.today().set({
				month: v,
				day: 1
			})
		}
	};
	for(o = 0; o < b.length; o++) {
		a[b[o].toUpperCase()] = a[b[o].toUpperCase().substring(0, 3)] = o;
		a[b[o]] = a[b[o].substring(0, 3)] = l(o);
		e[b[o]] = e[b[o].substring(0, 3)] = d(o)
	}
	d = function(v) {
		return function(x) {
			if(this._isSecond) {
				this._isSecond = false;
				return this
			}
			if(this._same) {
				this._same = this._is = false;
				var y = this.toObject();
				x = (x || new Date).toObject();
				for(var D = "", B = v.toLowerCase(), u = f.length - 1; u > -1; u--) {
					D = f[u].toLowerCase();
					if(y[D] != x[D]) return false;
					if(B == D) break
				}
				return true
			}
			if(v.substring(v.length - 1) != "s") v += "s";
			return this["add" + v](this._orient)
		}
	};
	l = function(v) {
		return function() {
			this._dateElement = v;
			return this
		}
	};
	for(o = 0; o < f.length; o++) {
		b = f[o].toLowerCase();
		e[b] = e[b + "s"] = d(f[o]);
		c[b] = c[b + "s"] = l(b)
	}
	e._ss = d("Second");
	c = function(v) {
		return function(x) {
			if(this._same) return this._ss(x);
			if(x || x === 0) return this.moveToNthOccurrence(x, v);
			this._nth = v;
			if(v === 2 && (x === undefined || x === null)) {
				this._isSecond = true;
				return this.addSeconds(this._orient)
			}
			return this
		}
	};
	for(b = 0; b < n.length; b++) e[n[b]] = b === 0 ? c(-1) : c(b)
})();
(function() {
	Date.Parsing = {
		Exception: function(b) {
			this.message = "Parse error at '" + b.substring(0, 10) + " ...'"
		}
	};
	for(var a = Date.Parsing, e = a.Operators = {
		rtoken: function(b) {
			return function(f) {
				var j = f.match(b);
				if(j) return [j[0], f.substring(j[0].length)];
				else throw new a.Exception(f);
			}
		},
		token: function() {
			return function(b) {
				return e.rtoken(RegExp("^s*" + b + "s*"))(b)
			}
		},
		stoken: function(b) {
			return e.rtoken(RegExp("^" + b))
		},
		until: function(b) {
			return function(f) {
				for(var j = [], n = null; f.length;) {
					try {
						n = b.call(this, f)
					} catch(l) {
						j.push(n[0]);
						f = n[1];
						continue
					}
					break
				}
				return [j, f]
			}
		},
		many: function(b) {
			return function(f) {
				for(var j = [], n = null; f.length;) {
					try {
						n = b.call(this, f)
					} catch(l) {
						break
					}
					j.push(n[0]);
					f = n[1]
				}
				return [j, f]
			}
		},
		optional: function(b) {
			return function(f) {
				var j = null;
				try {
					j = b.call(this, f)
				} catch(n) {
					return [null, f]
				}
				return [j[0], j[1]]
			}
		},
		not: function(b) {
			return function(f) {
				try {
					b.call(this, f)
				} catch(j) {
					return [null, f]
				}
				throw new a.Exception(f);
			}
		},
		ignore: function(b) {
			return b ?
			function(f) {
				var j = null;
				j = b.call(this, f);
				return [null, j[1]]
			} : null
		},
		product: function() {
			for(var b = arguments[0], f = Array.prototype.slice.call(arguments, 1), j = [], n = 0; n < b.length; n++) j.push(e.each(b[n], f));
			return j
		},
		cache: function(b) {
			var f = {},
				j = null;
			return function(n) {
				try {
					j = f[n] = f[n] || b.call(this, n)
				} catch(l) {
					j = f[n] = l
				}
				if(j instanceof a.Exception) throw j;
				else return j
			}
		},
		any: function() {
			var b = arguments;
			return function(f) {
				for(var j = null, n = 0; n < b.length; n++) if(b[n] != null) {
					try {
						j = b[n].call(this, f)
					} catch(l) {
						j = null
					}
					if(j) return j
				}
				throw new a.Exception(f);
			}
		},
		each: function() {
			var b = arguments;
			return function(f) {
				for(var j = [], n = null, l = 0; l < b.length; l++) if(b[l] != null) {
					try {
						n = b[l].call(this, f)
					} catch(o) {
						throw new a.Exception(f);
					}
					j.push(n[0]);
					f = n[1]
				}
				return [j, f]
			}
		},
		all: function() {
			var b = b;
			return b.each(b.optional(arguments))
		},
		sequence: function(b, f, j) {
			f = f || e.rtoken(/^\s*/);
			j = j || null;
			if(b.length == 1) return b[0];
			return function(n) {
				for(var l = null, o = null, q = [], v = 0; v < b.length; v++) {
					try {
						l = b[v].call(this, n)
					} catch(x) {
						break
					}
					q.push(l[0]);
					try {
						o = f.call(this, l[1])
					} catch(y) {
						o = null;
						break
					}
					n = o[1]
				}
				if(!l) throw new a.Exception(n);
				if(o) throw new a.Exception(o[1]);
				if(j) try {
					l = j.call(this, l[1])
				} catch(D) {
					throw new a.Exception(l[1]);
				}
				return [q, l ? l[1] : n]
			}
		},
		between: function(b, f, j) {
			j = j || b;
			var n = e.each(e.ignore(b), f, e.ignore(j));
			return function(l) {
				l = n.call(this, l);
				return [[l[0][0], r[0][2]], l[1]]
			}
		},
		list: function(b, f, j) {
			f = f || e.rtoken(/^\s*/);
			j = j || null;
			return b instanceof Array ? e.each(e.product(b.slice(0, -1), e.ignore(f)), b.slice(-1), e.ignore(j)) : e.each(e.many(e.each(b, e.ignore(f))), px, e.ignore(j))
		},
		set: function(b, f, j) {
			f = f || e.rtoken(/^\s*/);
			j = j || null;
			return function(n) {
				var l = null;
				for(var o = l = null, q = null, v = [
					[], n], x = false, y = 0; y < b.length; y++) {
					l = o = null;
					x = b.length == 1;
					try {
						l = b[y].call(this, n)
					} catch(D) {
						continue
					}
					q = [
						[l[0]], l[1]
					];
					if(l[1].length > 0 && !x) try {
						o = f.call(this, l[1])
					} catch(B) {
						x = true
					} else x = true;
					if(!x && o[1].length === 0) x = true;
					if(!x) {
						l = [];
						for(x = 0; x < b.length " ...'"
		}
	};
	for(var a = Date.Parsing, e = a.Operators = {
		rtoken: function(b) {
			return function(f) {
				var j = f.match(b);
				if(j) return [j[0], f.substring(j[0].length)];
				else throw new a.Exception(f);
			}
		},
		token: function() {
			return function(b) {
				return e.rtoken(RegExp("^s*" + b + "s*"))(b)
			}
		},
		stoken: function(b) {
			return e.rtoken(RegExp("^" + b))
		},
		until: function(b) {
			return function(f) {
				for(var j = [], n = null; f.length;) {
					try {
						n = b.call(this, f)
					} catch(l) {
						j.push(n[0]);
						f = n[1];
						continue
					}
					break
				}
				return [j, f]
			}
		},
		many: function(b) {
			return function(f) {
				for(var j = [], n = null; f.length;) {
					try {
						n = b.call(this, f)
					} catch(l) {
						break
					}
					j.push(n[0]);
					f = n[1]
				}
				return [j, f]
			}
		},
		optional: function(b) {
			return function(f) {
				var j = null;
				try {
					j = b.call(this, f)
				} catch(n) {
					return [null, f]
				}
				return [j[0], j[1]]
			}
		},
		not: function(b) {
			return function(f) {
				try {
					b.call(this, f)
				} catch(j) {
					return [null, f]
				}
				throw new a.Exception(f);
			}
		},
		ignore: function(b) {
			return b ?
			function(f) {
				var j = null;
				j = b.call(this, f);
				return [null, j[1]]
			} : null
		},
		product: function() {
			for(var b = arguments[0], f = Array.prototype.slice.call(arguments, 1), j = [], n = 0; n < b.length; n++) j.push(e.each(b[n], f));
			return j
		},
		cache: function(b) {
			var f = {},
				j = null;
			return function(n) {
				try {
					j = f[n] = f[n] || b.call(this, n)
				} catch(l) {
					j = f[n] = l
				}
				if(j instanceof a.Exception) throw j;
				else return j
			}
		},
		any: function() {
			var b = arguments;
			return function(f) {
				for(var j = null, n = 0; n < b.length; n++) if(b[n] != null) {
					try {
						j = b[n].call(this, f)
					} catch(l) {
						j = null
					}
					if(j) return j
				}
				throw new a.Exception(f);
			}
		},
		each: function() {
			var b = arguments;
			return function(f) {
				for(var j = [], n = null, l = 0; l < b.length; l++) if(b[l] != null) {
					try {
						n = b[l].call(this, f)
					} catch(o) {
						throw new a.Exception(f);
					}
					j.push(n[0]);
					f = n[1]
				}
				return [j, f]
			}
		},
		all: function() {
			var b = b;
			return b.each(b.optional(arguments))
		},
		sequence: function(b, f, j) {
			f = f || e.rtoken(/^\s*/);
			j = j || null;
			if(b.length == 1) return b[0];
			return function(n) {
				for(var l = null, o = null, q = [], v = 0; v < b.length; v++) {
					try {
						l = b[v].call(this, n)
					} catch(x) {
						break
					}
					q.push(l[0]);
					try {
						o = f.call(this, l[1])
					} catch(y) {
						o = null;
						break
					}
					n = o[1]
				}
				if(!l) throw new a.Exception(n);
				if(o) throw new a.Exception(o[1]);
				if(j) try {
					l = j.call(this, l[1])
				} catch(D) {
					throw new a.Exception(l[1]);
				}
				return [q, l ? l[1] : n]
			}
		},
		between: function(b, f, j) {
			j = j || b;
			var n = e.each(e.ignore(b), f, e.ignore(j));
			return function(l) {
				l = n.call(this, l);
				return [[l[0][0], r[0][2]], l[1]]
			}
		},
		list: function(b, f, j) {
			f = f || e.rtoken(/^\s*/);
			j = j || null;
			return b instanceof Array ? e.each(e.product(b.slice(0, -1), e.ignore(f)), b.slice(-1), e.ignore(j)) : e.each(e.many(e.each(b, e.ignore(f))), px, e.ignore(j))
		},
		set: function(b, f, j) {
			f = f || e.rtoken(/^\s*/);
			j = j || null;
			return function(n) {
				var l = null;
				for(var o = l = null, q = null, v = [
					[], n], x = false, y = 0; y < b.length; y++) {
					l = o = null;
					x = b.length == 1;
					try {
						l = b[y].call(this, n)
					} catch(D) {
						continue
					}
					q = [
						[l[0]], l[1]
					];
					if(l[1].length > 0 && !x) try {
						o = f.call(this, l[1])
					} catch(B) {
						x = true
					} else x = true;
					if(!x && o[1].length === 0) x = true;
					if(!x) {
						l = [];
						for(x = 0; x < b.length; x++) y != x && l.push(b[x]);
						l = e.set(l, f).call(this, o[1]);
						if(l[0].length > 0) {
							q[0] = q[0].concat(l[0]);
							q[1] = l[1]
						}
					}
					if(q[1].length < v[1].length) v = q;
					if(v[1].length === 0) break
				}
				if(v[0].length === 0) return v;
				if(j) {
					try {
						o = j.call(this, v[1])
					} catch(u) {
						throw new a.Exception(v[1]);
					}
					v[1] = o[1]
				}
				return v
			}
		},
		forward: function(b, f) {
			return function(j) {
				return b[f].call(this, j)
			}
		},
		replace: function(b, f) {
			return function(j) {
				j = b.call(this, j);
				return [f, j[1]]
			}
		},
		process: function(b, f) {
			return function(j) {
				j = b.call(this, j);
				return [f.call(this, j[0]), j[1]]
			}
		},
		min: function(b, f) {
			return function(j) {
				var n = f.call(this, j);
				if(n[0].length < b) throw new a.Exception(j);
				return n
			}
		}
	}, g = function(b) {
			return function() {
				var f = null,
					j = [];
				if(arguments.length > 1) f = Array.prototype.slice.call(arguments);
				else if(arguments[0] instanceof
				Array) f = arguments[0];
				if(f) for(var n = f.shift(); 0 < n.length;) {
					f.unshift(n[0]);
					j.push(b.apply(null, f));
					f.shift();
					return j
				} else return b.apply(null, arguments)
			}
		}, c = "optional not ignore cache".split(/\s/), d = 0; d < c.length; d++) e[c[d]] = g(e[c[d]]);
	g = function(b) {
		return function() {
			return arguments[0] instanceof Array ? b.apply(null, arguments[0]) : b.apply(null, arguments)
		}
	};
	c = "each any all".split(/\s/);
	for(d = 0; d < c.length; d++) e[c[d]] = g(e[c[d]])
})();
(function() {
	var a = Date,
		e = a.CultureInfo,
		g = function(l) {
			for(var o = [], q = 0; q < l.length; q++) if(l[q] instanceof Array) o = o.concat(g(l[q]));
			else l[q] && o.push(l[q]);
			return o
		};
	a.Grammar = {};
	a.Translator = {
		hour: function(l) {
			return function() {
				this.hour = Number(l)
			}
		},
		minute: function(l) {
			return function() {
				this.minute = Number(l)
			}
		},
		second: function(l) {
			return function() {
				this.second = Number(l)
			}
		},
		meridian: function(l) {
			return function() {
				this.meridian = l.slice(0, 1).toLowerCase()
			}
		},
		timezone: function(l) {
			return function() {
				var o = l.replace(/[^\d\+\-]/g, "");
				if(o.length) this.timezoneOffset = Number(o);
				else this.timezone = l.toLowerCase()
			}
		},
		day: function(l) {
			var o = l[0];
			return function() {
				this.day = Number(o.match(/\d+/)[0])
			}
		},
		month: function(l) {
			return function() {
				this.month = l.length == 3 ? "jan feb mar apr may jun jul aug sep oct nov dec".indexOf(l) / 4 : Number(l) - 1
			}
		},
		year: function(l) {
			return function() {
				var o = Number(l);
				this.year = l.length > 2 ? o : o + (o + 2E3 < e.twoDigitYearMax ? 2E3 : 1900)
			}
		},
		rday: function(l) {
			return function() {
				switch(l) {
				case "yesterday":
					this.days = -1;
					break;
				case "tomorrow":
					this.days = 1;
					break;
				case "today":
					this.days = 0;
					break;
				case "now":
					this.days = 0;
					this.now = true
				}
			}
		},
		finishExact: function(l) {
			l = l instanceof Array ? l : [l];
			for(var o = 0; o < l.length; o++) l[o] && l[o].call(this);
			l = new Date;
			if((this.hour || this.minute) && !this.month && !this.year && !this.day) this.day = l.getDate();
			if(!this.year) this.year = l.getFullYear();
			if(!this.month && this.month !== 0) this.month = l.getMonth();
			if(!this.day) this.day = 1;
			if(!this.hour) this.hour = 0;
			if(!this.minute) this.minute = 0;
			if(!this.second) this.second = 0;
			if(this.meridian && this.hour) if(this.meridian == "p" && this.hour < 12) this.hour += 12;
			else if(this.meridian == "a" && this.hour == 12) this.hour = 0;
			if(this.day > a.getDaysInMonth(this.year, this.month)) throw new RangeError(this.day + " is not a valid value for days.");
			l = new Date(this.year, this.month, this.day, this.hour, this.minute, this.second);
			if(this.timezone) l.set({
				timezone: this.timezone
			});
			else this.timezoneOffset && l.set({
				timezoneOffset: this.timezoneOffset
			});
			return l
		},
		finish: function(l) {
			l = l instanceof Array ? g(l) : [l];
			if(l.length === 0) return null;
			for(var o = 0; o < l.length; o++) typeof l[o] == "function" && l[o].call(this);
			l = a.today();
			if(this.now && !this.unit && !this.operator) return new Date;
			else if(this.now) l = new Date;
			o = !! (this.days && this.days !== null || this.orient || this.operator);
			var q, v, x;
			x = this.orient == "past" || this.operator == "subtract" ? -1 : 1;
			!this.now && "hour minute second".indexOf(this.unit) != -1 && l.setTimeToNow();
			if(this.month || this.month === 0) if("year day hour minute second".indexOf(this.unit) != -1) {
				this.value = this.month + 1;
				this.month = null;
				o = true
			}
			if(!o && this.weekday && !this.day && !this.days) {
				q = Date[this.weekday]();
				this.day = q.getDate();
				if(!this.month) this.month = q.getMonth();
				this.year = q.getFullYear()
			}
			if(o && this.weekday && this.unit != "month") {
				this.unit = "day";
				q = a.getDayNumberFromName(this.weekday) - l.getDay();
				v = 7;
				this.days = q ? (q + x * v) % v : x * v
			}
			if(this.month && this.unit == "day" && this.operator) {
				this.value = this.month + 1;
				this.month = null
			}
			if(this.value != null && this.month != null && this.year != null) this.day = this.value * 1;
			if(this.month && !this.day && this.value) {
				l.set({
					day: this.value * 1
				});
				if(!o) this.day = this.value * 1
			}
			if(!this.month && this.value && this.unit == "month" && !this.now) {
				this.month = this.value;
				o = true
			}
			if(o && (this.month || this.month === 0) && this.unit != "year") {
				this.unit = "month";
				q = this.month - l.getMonth();
				v = 12;
				this.months = q ? (q + x * v) % v : x * v;
				this.month = null
			}
			if(!this.unit) this.unit = "day";
			if(!this.value && this.operator && this.operator !== null && this[this.unit + "s"] && this[this.unit + "s"] !== null) this[this.unit + "s"] = this[this.unit + "s"] + (this.operator == "add" ? 1 : -1) + (this.value || 0) * x;
			else if(this[this.unit + "s"] == null || this.operator != null) {
				if(!this.value) this.value = 1;
				this[this.unit + "s"] = this.value * x
			}
			if(this.meridian && this.hour) if(this.meridian == "p" && this.hour < 12) this.hour += 12;
			else if(this.meridian == "a" && this.hour == 12) this.hour = 0;
			if(this.weekday && !this.day && !this.days) {
				q = Date[this.weekday]();
				this.day = q.getDate();
				if(q.getMonth() !== l.getMonth()) this.month = q.getMonth()
			}
			if((this.month || this.month === 0) && !this.day) this.day = 1;
			if(!this.orient && !this.operator && this.unit == "week" && this.value && !this.day && !this.month) return Date.today().setWeek(this.value);
			if(o && this.timezone && this.day && this.days) this.day = this.days;
			return o ? l.add(this) : l.set(this)
		}
	};
	var c = a.Parsing.Operators,
		d = a.Grammar,
		b = a.Translator,
		f;
	d.datePartDelimiter = c.rtoken(/^([\s\-\.\,\/']+)/);
	d.timePartDelimiter = c.stoken(":");
	d.whiteSpace = c.rtoken(/^\s*/);
	d.generalDelimiter = c.rtoken(/^(([\s\,]|at|@|on)+)/);
	var j = {};
	d.ctoken = function(l) {
		var o = j[l];
		if(!o) {
			o = e.regexPatterns;
			for(var q = l.split(/\s+/), v = [], x = 0; x < q.length; x++) v.push(c.replace(c.rtoken(o[q[x]]), q[x]));
			o = j[l] = c.any.apply(null, v)
		}
		return o
	};
	d.ctoken2 = function(l) {
		return c.rtoken(e.regexPatterns[l])
	};
	d.h = c.cache(c.process(c.rtoken(/^(0[0-9]|1[0-2]|[1-9])/), b.hour));
	d.hh = c.cache(c.process(c.rtoken(/^(0[0-9]|1[0-2])/), b.hour));
	d.H = c.cache(c.process(c.rtoken(/^([0-1][0-9]|2[0-3]|[0-9])/), b.hour));
	d.HH = c.cache(c.process(c.rtoken(/^([0-1][0-9]|2[0-3])/), b.hour));
	d.m = c.cache(c.process(c.rtoken(/^([0-5][0-9]|[0-9])/), b.minute));
	d.mm = c.cache(c.process(c.rtoken(/^[0-5][0-9]/), b.minute));
	d.s = c.cache(c.process(c.rtoken(/^([0-5][0-9]|[0-9])/), b.second));
	d.ss = c.cache(c.process(c.rtoken(/^[0-5tion = function(l) {
		var o = a.Grammar.formats(l);
		return function(q) {
			var v = null;
			try {
				v = o.call({}, q)
			} catch(x) {
				return null
			}
			return v[1].length === 0 ? v[0] : null
		}
	};
	a.parseExact = function(l, o) {
		return a.getParseFunction(o)(l)
	}
})();
(function() {
	var a = {},
		e = {};
	$.getTemplate = function(g, c) {
		if(e[g]) if(a[g]) c(a[g]);
		else var d = setInterval(function() {
			if(a[g]) {
				clearInterval(d);
				c(a[g])
			}
		}, 20);
		else {
			e[g] = 1;
			var b = $("div.widgetTemplates div[templatefile='" + g + "']");
			if(b[0]) {
				a[g] = b[0].innerHTML;
				e[g] = 2;
				c(b[0].innerHTML)
			} else $.ajax({
				url: g,
				cache: false,
				type: "GET",
				dataType: "html",
				success: function(f) {
					a[g] = f;
					e[g] = 2;
					c(f)
				}
			})
		}
	}
})();
$.fn.makeLiveForm = function(a, e, g, c) {
	this.each(function() {
		var d = $(this),
			b = false;
		if(d.parents(".liveFormWrap")[0]) b = d.parents(".liveFormWrap").eq(0);
		else if(d.parents("div")[0]) b = d.parents("div").eq(0);
		if(b) {
			d.data("liveform") == true && console_log(d, "is already a live form!");
			d.data("liveform", true);
			d.ajaxForm({
				target: d.parents(".liveFormWrap").eq(0),
				beforeSubmit: function(f, j, n) {
					if(!formValidateFilled(c, d)) return false;
					if(typeof a == "function") return a.call(j, f, j, n)
				},
				cache: false,
				success: function() {
					b.html(hookScan(b.html().replace(/<!--.*?--\>/g, "")));
					b.find("form.liveForm").not(".isLiveForm").makeLiveForm();
					enliven(b);
					typeof e == "function" && e.call(b, b);
					b.trigger("liveFormComplete")
				},
				afterError: function(f, j, n) {
					typeof g == "function" && g(f, j, n)
				}
			})
		}
	});
	return this
};

function formValidateFilled(a, e) {
	e = $(e);
	if(typeof a == "object") for(var g in a) {
		var c = e.find("[name=" + a[g] + "]");
		if(c.val()) c.removeClass("unfilled");
		else {
			c.addClass("unfilled");
			alert("You did not complete one or more required form fields.");
			c.focus();
			return false
		}
	}
	return true
}
$.fn.checkDrop = function() {
	this.each(function() {
		var a = $(this),
			e;
		a.wrap('<div class="checkDropWrap"></div>');
		a.prepend('<div class="clickOpen">Click to Select</div>');
		var g = a.find(".clickOpen"),
			c = a.closest(".checkDropWrap");
		g.text(a.find("input:checked").length + "/" + a.find("input[type=checkbox]").length + " selected");
		a.find("input,label").bind("click", function() {
			a.find(".clickOpen").text(a.find("input:checked").length + "/" + a.find("input[type=checkbox]").length + " selected");
			a.data("changed", true)
		});
		g.bind("click", function() {
			a.addClass("open");
			if($.browser.msie) {
				var d = a.offset().top,
					b = a.offset().left;
				a.appendTo("body");
				a.css({
					top: d + "px",
					left: b + "px",
					position: "absolute",
					"z-index": 3E5
				})
			}
			e && clearTimeout(e);
			if(a.offset().top + a.outerHeight() > $(window).scrollTop() + $(window).height()) {
				d = 50 + a.offset().top + a.height() - $(window).height();
				$(window).scrollTop(d)
			}
		});
		a.bind("mouseleave", function() {
			e = setTimeout(function() {
				a.removeClass("open");
				if($.browser.msie) {
					a.appendTo(c);
					a.css({
						top: "",
						left: "",
						position: "static"
					});
					if(a.data("changed")) {
						a.removeData("changed");
						a.trigger("doIEAutoSubmit")
					}
				}
			}, 1E3)
		})
	})
};

function blankerConfirm(a, e, g, c, d) {
	var b = function() {
			a.data("blankerConfirmed", {
				confirmed: true
			});
			a.trigger("submit");
			blankerCancel.call(this)
		},
		f = blankerCancel;
	if(a.data("blankerConfirmed") && a.data("blankerConfirmed").confirmed) return typeof d == "function" ? d.call(a) : true;
	else {
		var j = [],
			n = [];
		$.each(c, function(l, o) {
			j[l] = o.title;
			n[l] = o.value ? b : f
		});
		showBlanker({
			buttons: j,
			callbacks: n,
			title: e,
			text: g
		});
		return false
	}
}

function submitAndClose() {
	$(this).trigger("close_request", {
		refresh: true
	})
}
$("input.fixHostnamePort").live("blur", function() {
	var a = $(this),
		e;
	if(e = a.val().match(/:([0-9]+)$/)) {
		a.closest("form").find("input.fixHostnamePortDestination").val(e[1]);
		a.val(a.val().replace(RegExp(e[0] + "$"), ""))
	}
});
$.fn.contextMenu = function(a, e) {
	e = $.extend(false, {}, {
		position: "mouse",
		doubleClickFirst: true,
		preventDefault: true,
		cursor: "pointer",
		parentCursor: "pointer"
	}, e);
	this.each(function() {
		var g = $(this),
			c = false,
			d = false;
		e.parentCursor && g.css("cursor", e.parentCursor);
		e.doubleClickFirst && g.bind("dblclick", function(b) {
			d = true;
			if(c) {
				clearTimeout(c);
				c = false
			}
			a[0].event && g.trigger(a[0].event);
			a[0].fn && a[0].fn.call(g, b);
			setTimeout(function() {
				d = false
			}, 800);
			$(".popupContextMenu").remove()
		});
		g.bind("click", function(b) {
			var f = $(this);
			e.preventDefault && b.preventDefault();
			c = setTimeout(function() {
				c = false;
				if(!d) {
					var j = f.offset().top,
						n = f.offset().left,
						l = f.height(),
						o = f.width(),
						q = "jqContext" + Math.floor(Math.random() * 1E6);
					$(".popupContextMenu").remove();
					var v = '<ul class="popupContextMenu" id="' + q + '-menu"';
					if(e.cursor) v += 'style="cursor:' + e.cursor + '"';
					v += ">";
					$.each(a, function() {
						v += "<li>";
						if(this.href) {
							v += '<a href="' + this.href + '"';
							if(this.target) v += ' target="' + this.target + '"';
							v += ">"
						}
						v += this.title;
						if(this.href) v += "</a>";
						v += "</li>"
					});
					v += "</ul>";
					$("body").append(v);
					var x = $("#" + q + "-menu"),
						y = setTimeout(function() {
							x.remove()
						}, 5E3);
					e.position == "under" ? x.show().css({
						top: j + l + "px",
						left: n + "px",
						"min-width": o + "px"
					}) : x.show().css({
						top: b.pageY - 2 + "px",
						left: b.pageX - 2 + "px"
					});
					x.find("li").bind("click", function() {
						var D = $(this).closest("ul").find("li").index(this);
						a[D].event && g.trigger(a[0].event);
						a[D].fn && a[D].fn.call(g, b);
						$(".popupContextMenu").remove()
					});
					x.bind("mouseenter", function() {
						y && clearTimeout(y);
						y = false
					});
					x.bind("mouseleave", function() {
						y && clearTimeout(y);
						y = setTimeout(function() {
							x.remove()
						}, 1500)
					})
				}
			}, 500)
		})
	})
};
(function(a, e, g) {
	function c(o) {
		o = o || location.href;
		return "#" + o.replace(/^[^#]*#?(.*)$/, "$1")
	}
	var d = "hashchange",
		b = document,
		f, j = a.event.special,
		n = b.documentMode,
		l = "on" + d in e && (n === g || n > 7);
	a.fn[d] = function(o) {
		return o ? this.bind(d, o) : this.trigger(d)
	};
	a.fn[d].delay = 50;
	j[d] = a.extend(j[d], {
		setup: function() {
			if(l) return false;
			a(f.start)
		},
		teardown: function() {
			if(l) return false;
			a(f.stop)
		}
	});
	f = function() {
		function o() {
			var u = c(),
				F = B(x);
			if(u !== x) {
				D(x = u, F);
				a(e).trigger(d)
			} else if(F !== x) location.href = location.href.replace(/#.*/, "") + F;
			v = setTimeout(o, a.fn[d].delay)
		}
		var q = {},
			v, x = c(),
			y = function(u) {
				return u
			},
			D = y,
			B = y;
		q.start = function() {
			v || o()
		};
		q.stop = function() {
			v && clearTimeout(v);
			v = g
		};
		a.browser.msie && !l &&
		function() {
			var u, F;
			q.start = function() {
				if(!u) {
					F = (F = a.fn[d].src) && F + c();
					u = a('<iframe tabindex="-1" title="empty"/>').hide().one("load", function() {
						F || D(c());
						o()
					}).attr("src", F || "javascript:0").insertAfter("body")[0].contentWindow;
					b.onpropertychange = function() {
						try {
							if(event.propertyName === "title") u.document.title = b.title
						} catch(I) {}
					}
				}
			};
			q.stop = y;
			B = function() {
				return c(u.location.href)
			};
			D = function(I, C) {
				var M = u.document,
					Q = a.fn[d].domain;
				if(I !== C) {
					M.title = b.title;
					M.open();
					Q && M.write('<script>document.domain="' + Q + '"<\/script>');
					M.close();
					u.location.hash = I
				}
			}
		}();
		return q
	}()
})(jQuery, this);
var HASH_PARAM_ARRAY = 1,
	HASH_PARAM_STRING = 2,
	__prevPage = location.href,
	commonAbbrs = {
		AL: true,
		AK: true,
		AS: true,
		AZ: true,
		AR: true,
		CA: true,
		CO: true,
		CT: true,
		DE: true,
		DC: true,
		FM: true,
		FL: true,
		GA: true,
		GU: true,
		HI: true,
		ID: true,
		IL: true,
		IN: true,
		IA: true,
		KS: true,
		KY: true,
		LA: true,
		ME: true,
		MH: true,
		MD: true,
		MA: true,
		MI: true,
		MN: true,
		MS: true,
		MO: true,
		MT: true,
		NE: true,
		NV: true,
		NH: true,
		NJ: true,
		NM: true,
		NY: true,
		NC: true,
		ND: true,
		MP: true,
		OH: true,
		OK: true,
		OR: true,
		PW: true,
		PA: true,
		PR: true,
		RI: true,
		SC: true,
		SD: true,
		TN: true,
		TX: true,
		UT: true,
		VT: true,
		VI: true,
		VA: true,
		WA: true,
		WV: true,
		WI: true,
		WY: true,
		USA: true
	};
if(typeof String.prototype.trim !== "function") String.prototype.trim = function() {
	return this.replace(/^\s+|\s+$/g, "")
};

function console_log() {
	try {
		console.log.apply(window.console, arguments)
	} catch(a) {}
}
function cmp(a, e) {
	return a < e ? -1 : a > e ? 1 : 0
}
function setTextContent(a, e) {
	if($.browser.msie && $.browser.version < 9) $(a).text(e);
	else a.textContent = e
}

function getHeight(a) {
	a = a instanceof jQuery ? a : $(a);
	var e = [],
		g = function(b) {
			b = b.parentNode;
			var f = $(b),
				j = f.css("display");
			if(j == "none") {
				e.push({
					node: b,
					display: j,
					position: f.css("position"),
					visibility: f.css("visibility")
				});
				b.style.position = "absolute";
				b.style.visibility = "hidden";
				b.style.display = "block"
			}
			b.nodeName != "BODY" && g(b)
		};
	g(a[0]);
	a = a.height();
	for(var c = 0, d = e.length; c < d; ++c) {
		e[c].node.style.position = e[c].position;
		e[c].node.style.visibility = e[c].visibility;
		e[c].node.style.display = e[c].display
	}
	e.splice(0, e.length);
	return a
}
function titleCase(a, e) {
	e = e || {};
	var g = a.split(" "),
		c;
	for(c in g) e.ignoreAbbr && commonAbbrs[g[c]] || (g[c] = g[c].toUpperCase().substr(0, 1) + g[c].toLowerCase().substr(1, g[c].length));
	return g.join(" ")
}
function parseIntNaNChar(a, e) {
	a = parseInt(a);
	return isNaN(a) ? e : a
}
function debugAlert(a) {
	if(location.search.search(/js_debug/) || location.search.search(/uncompiled_js/)) alert(a)
}

function debugLog() {
	if(location.search.search(/js_debug/) || location.search.search(/uncompiled_js/)) console_log.apply(this, arguments)
}
function timestampToLocal(a) {
	if(!a) return "";
	a = a.replace(/^([0-9]{4})-([0-9]{2})-([0-9]{2})/, "$1/$2/$3");
	a = a.replace(/^([0-9/]+ [0-9:]+)\.?[0-9]*([-+])0?([0-9]+)/, "$1 GMT$2$300");
	a = new Date(Date.parse(a));
	return a.toLocaleDateString() + ", " + a.toLocaleTimeString()
}

function macFormat(a) {
	return a.search(/^[0-9a-fA-F]{12}$/) > -1 ? a.replace(/([0-9a-fA-F]{2})/g, "$1:").replace(/:$/, "") : a
}
function sortObjectArray(a, e) {
	return a.sort(function(g, c) {
		return g[e] && c[e] ? optLc(g[e]) == optLc(c[e]) ? 0 : optLc(g[e]) > optLc(c[e]) ? 1 : -1 : g[e] || c[e] ? g[e] ? 1 : -1 : 0
	})
}
function optLc(a) {
	return typeof a.toLowerCase == "function" ? a.toLowerCase() : a
}
$.fn.hotkey = function(a, e) {
	$(this).bind("keyup", function(g) {
		g.keyCode == a && $(e).trigger("click")
	})
};

function strReplaceAll(a, e, g) {
	rxNeedle = RegExp(e.replace(/([\[\]\<\>\?\.\^\$\{\}])/g, "\\$1"), "g");
	return a.replace(rxNeedle, g)
}
$.fn.getDimensionOffsets = function() {
	el = this.eq(0);
	var a = $(el).parents().filter(function() {
		return $(this).css("position").match(/(relative|absolute|fixed)/)
	}).eq(0).offset().top,
		e = $(el).parents().filter(function() {
			return $(this).css("position").match(/(relative|absolute|fixed)/)
		}).eq(0).offset().left;
	return {
		top: a,
		left: e
	}
};

function setCookie(a, e, g) {
	if(g) {
		var c = new Date;
		c.setTime(c.getTime() + g * 24 * 60 * 60 * 1E3);
		g = "; expires=" + c.toGMTString()
	} else g = "";
	document.cookie = a + "=" + e + g + "; path=/"
}
function getCookie(a) {
	a = a + "=";
	for(var e = document.cookie.split(";"), g = 0; g < e.length; g++) {
		for(var c = e[g]; c.charAt(0) == " ";) c = c.substring(1, c.length);
		if(c.indexOf(a) == 0) return c.substring(a.length, c.length)
	}
	return null
}
function eraseCookie(a) {
	setCookie(a, "", -1)
}

function getHashParam(a, e) {
	var g = location.hash;
	g.match(/screen=([^;]+)/);
	if(g = g.match(RegExp("[#;]" + escape(a) + "=([^;]+)"))) {
		g = g[1];
		var c = HASH_PARAM_STRING;
		if(g.search(/\|/) != -1 || e == HASH_PARAM_ARRAY) c = HASH_PARAM_ARRAY;
		if(e == HASH_PARAM_STRING) c = HASH_PARAM_STRING;
		if(c == HASH_PARAM_ARRAY) {
			g = g.split("|");
			for(var d in g) g[d] = unescape(g[d]);
			return g
		} else return unescape(g)
	} else return null
}

function setHashParam(a, e, g) {
	if(typeof e == "object") {
		for(var c in e) e[c] = escape(e[c]);
		e = e.join("|")
	} else e = escape(e).replace(/%7C/ig, "|");
	c = location.hash;
	c = getHashParam(a) === null ? "#" + escape(a) + "=" + e + ";" + c.replace(/^#/, "") : c.replace(RegExp("([#;])" + escape(a) + "=[^;]*"), "$1" + escape(a) + "=" + escape(e));
	if(g) {
		location.replace(location.href.replace(/(#.*|$)/, c));
		__prevPage = location.href
	} else location.hash = c
}

function clearHashParam(a, e) {
	var g = location.hash.replace(RegExp("([#;])" + escape(a) + "=([^;]+;*)", "g"), "$1");
	if(e) {
		location.replace(location.href.replace(/(#.*|$)/, g));
		__prevPage = location.href
	} else location.hash = g
}

function sprintf() {
	var a = arguments,
		e = 0,
		g = function(b, f, j, n) {
			j || (j = " ");
			f = b.length >= f ? "" : Array(1 + f - b.length >>> 0).join(j);
			return n ? b + f : f + b
		},
		c = function(b, f, j, n, l, o) {
			var q = n - b.length;
			if(q > 0) b = j || !l ? g(b, n, o, j) : b.slice(0, f.length) + g("", q, "0", true) + b.slice(f.length);
			return b
		},
		d = function(b, f, j, n, l, o, q) {
			b = b >>> 0;
			j = j && b && {
				"2": "0b",
				"8": "0",
				"16": "0x"
			}[f] || "";
			b = j + g(b.toString(f), o || 0, "0", false);
			return c(b, j, n, l, q)
		};
	return a[e++].replace(/%%|%(\d+\$)?([-+\'#0 ]*)(\*\d+\$|\*|\d+)?(\.(\*\d+\$|\*|\d+))?([scboxXuidfegEG])/g, function(b, f, j, n, l, o, q) {
		if(b == "%%") return "%";
		for(var v = false, x = "", y = l = false, D = " ", B = j.length, u = 0; j && u < B; u++) switch(j.charAt(u)) {
		case " ":
			x = " ";
			break;
		case "+":
			x = "+";
			break;
		case "-":
			v = true;
			break;
		case "'":
			D = j.charAt(u + 1);
			break;
		case "0":
			l = true;
			break;
		case "#":
			y = true
		}
		n = n ? n == "*" ? +a[e++] : n.charAt(0) == "*" ? +a[n.slice(1, -1)] : +n : 0;
		if(n < 0) {
			n = -n;
			v = true
		}
		if(!isFinite(n)) throw Error("sprintf: (minimum-)width must be finite");
		o = o ? o == "*" ? +a[e++] : o.charAt(0) == "*" ? +a[o.slice(1, -1)] : +o : "fFeE".indexOf(q) > -1 ? 6 : q == "d" ? 0 : void 0;
		f = f ? a[f.slice(0, -1)] : a[e++];
		switch(q) {
		case "s":
			q = String(f);
			v = v;
			n = n;
			l = l;
			D = D;
			if(o != null) q = q.slice(0, o);
			return c(q, "", v, n, l, D);
		case "c":
			q = String.fromCharCode(+f);
			v = v;
			n = n;
			l = l;
			if(o != null) q = q.slice(0, o);
			return c(q, "", v, n, l, void 0);
		case "b":
			return d(f, 2, y, v, n, o, l);
		case "o":
			return d(f, 8, y, v, n, o, l);
		case "x":
			return d(f, 16, y, v, n, o, l);
		case "X":
			return d(f, 16, y, v, n, o, l).toUpperCase();
		case "u":
			return d(f, 10, y, v, n, o, l);
		case "i":
		case "d":
			D = parseInt(+f);
			b = D < 0 ? "-" : x;
			f = b + g(String(Math.abs(D)), o, "0", false);
			return c(f, b, v, n, l);
		case "e":
		case "E":
		case "f":
		case "F":
		case "g":
		case "G":
			D = +f;
			b = D < 0 ? "-" : x;
			x = ["toExponential", "toFixed", "toPrecision"]["efg".indexOf(q.toLowerCase())];
			q = ["toString", "toUpperCase"]["eEfFgG".indexOf(q) % 2];
			f = b + Math.abs(D)[x](o);
			return c(f, b, v, n, l)[q]();
		default:
			return b
		}
	})
}

function formatCID(a, e, g) {
	e || (e = "(Unknown)");
	a = !a || a == "Unknown" || a == "" || unescape(a).replace(/[^0-9a-zA-Z]/g, "") == unescape(e).replace(/[^0-9]/g, "") ? ["", format_information(unescape(e))] : [unescape(titleCase(a, {
		ignoreAbbr: true
	})), format_information(unescape(e)).replace(/ /g, "\u00a0").replace(/-/g, "\u2011")];
	return g ? a : a[0] ? a.join(", ") : a[1]
}
function unixTime() {
	return Math.round((new Date).getTime() / 1E3)
}

function hhmmss(a) {
	h = parseInt(a / 3600) % 24;
	m = parseInt(a / 60) % 60;
	s = a % 60;
	return sprintf("%d:%02d:%02d", h, m, s)
}
function uniqueArray(a) {
	a = a.slice(0);
	a.sort();
	for(var e = 1; e < a.length;) if(a[e - 1] == a[e]) a.splice(e, 1);
	else e++;
	return a
}

function format_age(a, e) {
	e = e || {};
	var g = (new Date).add({
		seconds: -a
	}),
		c = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
		d = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"],
		b = "",
		f = function(j) {
			var n = j.getHours(),
				l = "AM";
			if(n == 0) {
				n = 12;
				l = "AM"
			} else if(n > 12) {
				n -= 12;
				l = "PM"
			} else if(n == 12) l = "PM";
			return n + ":" + sprintf("%02d", j.getMinutes()) + l
		};
	if(e.longForm) {
		b = d[g.getDay()] + " " + c[g.getMonth()] + " " + g.getDate();
		if(g.getFullYear() < (new Date).getFullYear()) b += ", " + g.getFullYear();
		b += ", " + f(g);
		return b
	}
	if(a > 1209600) {
		b = c[g.getMonth()] + " " + g.getDate();
		if(g.getFullYear() < (new Date).getFullYear()) b += ", " + g.getFullYear()
	} else b = a >= 604800 ? c[g.getMonth()] + " " + g.getDate() + ", " + f(g) : (new Date).getDay() != g.getDay() ? (g.getDay() == (new Date).getDay() - 1 ? "Yesterday" : d[g.getDay()]) + ", " + f(g) : f(g);
	return b
}

function trueish(a, e) {
	a = a || false;
	e = e || {};
	if(e.allowStringFalse && (a.toString().toLowerCase() === "false" || a.toString().toLowerCase() === "f")) return false;
	return !a || a == "0" ? false : a
}(function() {
	var a = 0;
	getUnique = function(e, g) {
		return(e || "") + ++a + (g || "")
	}
})();

function stringContains(a, e) {
	return e.indexOf(a) === -1 ? false : true
}
var entity = {
	quot: '"',
	amp: "&",
	apos: "'",
	lt: "<",
	gt: ">",
	nbsp: "\u00a0",
	iexcl: "\u00a1",
	cent: "\u00a2",
	pound: "\u00a3",
	curren: "\u00a4",
	yen: "\u00a5",
	brvbar: "\u00a6",
	sect: "\u00a7",
	uml: "\u00a8",
	copy: "\u00a9",
	ordf: "\u00aa",
	laquo: "\u00ab",
	not: "\u00ac",
	shy: "\u00ad",
	reg: "\u00ae",
	macr: "\u00af",
	deg: "\u00b0",
	plusmn: "\u00b1",
	sup2: "\u00b2",
	sup3: "\u00b3",
	acute: "\u00b4",
	micro: "\u00b5",
	para: "\u00b6",
	middot: "\u00b7",
	cedil: "\u00b8",
	sup1: "\u00b9",
	ordm: "\u00ba",
	raquo: "\u00bb",
	frac14: "\u00bc",
	frac12: "\u00bd",
	frac34: "\u00be",
	iquest: "\u00bf",
	Agrave: "\u00c0",
	Aacute: "\u00c1",
	Acirc: "\u00c2",
	Atilde: "\u00c3",
	Auml: "\u00c4",
	Aring: "\u00c5",
	AElig: "\u00c6",
	Ccedil: "\u00c7",
	Egrave: "\u00c8",
	Eacute: "\u00c9",
	Ecirc: "\u00ca",
	Euml: "\u00cb",
	Igrave: "\u00cc",
	Iacute: "\u00cd",
	Icirc: "\u00ce",
	Iuml: "\u00cf",
	ETH: "\u00d0",
	Ntilde: "\u00d1",
	Ograve: "\u00d2",
	Oacute: "\u00d3",
	Ocirc: "\u00d4",
	Otilde: "\u00d5",
	Ouml: "\u00d6",
	times: "\u00d7",
	Oslash: "\u00d8",
	Ugrave: "\u00d9",
	Uacute: "\u00da",
	Ucirc: "\u00db",
	Uuml: "\u00dc",
	Yacute: "\u00dd",
	THORN: "\u00de",
	szlig: "\u00df",
	agrave: "\u00e0",
	aacute: "\u00e1",
	acirc: "\u00e2",
	atilde: "\u00e3",
	auml: "\u00e4",
	aring: "\u00e5",
	aelig: "\u00e6",
	ccedil: "\u00e7",
	egrave: "\u00e8",
	eacute: "\u00e9",
	ecirc: "\u00ea",
	euml: "\u00eb",
	igrave: "\u00ec",
	iacute: "\u00ed",
	icirc: "\u00ee",
	iuml: "\u00ef",
	eth: "\u00f0",
	ntilde: "\u00f1",
	ograve: "\u00f2",
	oacute: "\u00f3",
	ocirc: "\u00f4",
	otilde: "\u00f5",
	ouml: "\u00f6",
	divide: "\u00f7",
	oslash: "\u00f8",
	ugrave: "\u00f9",
	uacute: "\u00fa",
	ucirc: "\u00fb",
	uuml: "\u00fc",
	yacute: "\u00fd",
	thorn: "\u00fe",
	yuml: "\u00ff",
	OElig: "\u0152",
	oelig: "\u0153",
	Scaron: "\u0160",
	scaron: "\u0161",
	Yuml: "\u0178",
	fnof: "\u0192",
	circ: "\u02c6",
	tilde: "\u02dc",
	Alpha: "\u0391",
	Beta: "\u0392",
	Gamma: "\u0393",
	Delta: "\u0394",
	Epsilon: "\u0395",
	Zeta: "\u0396",
	Eta: "\u0397",
	Theta: "\u0398",
	Iota: "\u0399",
	Kappa: "\u039a",
	Lambda: "\u039b",
	Mu: "\u039c",
	Nu: "\u039d",
	Xi: "\u039e",
	Omicron: "\u039f",
	Pi: "\u03a0",
	Rho: "\u03a1",
	Sigma: "\u03a3",
	Tau: "\u03a4",
	Upsilon: "\u03a5",
	Phi: "\u03a6",
	Chi: "\u03a7",
	Psi: "\u03a8",
	Omega: "\u03a9",
	alpha: "\u03b1",
	beta: "\u03b2",
	gamma: "\u03b3",
	delta: "\u03b4",
	epsilon: "\u03b5",
	zeta: "\u03b6",
	eta: "\u03b7",
	theta: "\u03b8",
	iota: "\u03b9",
	kappa: "\u03ba",
	lambda: "\u03bb",
	mu: "\u03bc",
	nu: "\u03bd",
	xi: "\u03be",
	omicron: "\u03bf",
	pi: "\u03c0",
	rho: "\u03c1",
	sigmaf: "\u03c2",
	sigma: "\u03c3",
	tau: "\u03c4",
	upsilon: "\u03c5",
	phi: "\u03c6",
	chi: "\u03c7",
	psi: "\u03c8",
	omega: "\u03c9",
	thetasym: "\u03d1",
	upsih: "\u03d2",
	piv: "\u03d6",
	ensp: "\u2002",
	emsp: "\u2003",
	thinsp: "\u2009",
	zwnj: "\u200c",
	zwj: "\u200d",
	lrm: "\u200e",
	rlm: "\u200f",
	ndash: "\u2013",
	mdash: "\u2014",
	lsquo: "\u2018",
	rsquo: "\u2019",
	sbquo: "\u201a",
	ldquo: "\u201c",
	rdquo: "\u201d",
	bdquo: "\u201e",
	dagger: "\u2020",
	Dagger: "\u2021",
	bull: "\u2022",
	hellip: "\u2026",
	permil: "\u2030",
	prime: "\u2032",
	Prime: "\u2033",
	lsaquo: "\u2039",
	rsaquo: "\u203a",
	oline: "\u203e",
	frasl: "\u2044",
	euro: "\u20ac",
	image: "\u2111",
	weierp: "\u2118",
	real: "\u211c",
	trade: "\u2122",
	alefsym: "\u2135",
	larr: "\u2190",
	uarr: "\u2191",
	rarr: "\u2192",
	darr: "\u2193",
	harr: "\u2194",
	crarr: "\u21b5",
	lArr: "\u21d0",
	uArr: "\u21d1",
	rArr: "\u21d2",
	dArr: "\u21d3",
	hArr: "\u21d4",
	forall: "\u2200",
	part: "\u2202",
	exist: "\u2203",
	empty: "\u2205",
	nabla: "\u2207",
	isin: "\u2208",
	notin: "\u2209",
	ni: "\u220b",
	prod: "\u220f",
	sum: "\u2211",
	minus: "\u2212",
	lowast: "\u2217",
	radic: "\u221a",
	prop: "\u221d",
	infin: "\u221e",
	ang: "\u2220",
	and: "\u2227",
	or: "\u2228",
	cap: "\u2229",
	cup: "\u222a",
	"int": "\u222b",
	there4: "\u2234",
	sim: "\u223c",
	cong: "\u2245",
	asymp: "\u2248",
	ne: "\u2260",
	equiv: "\u2261",
	le: "\u2264",
	ge: "\u2265",
	sub: "\u2282",
	sup: "\u2283",
	nsub: "\u2284",
	sube: "\u2286",
	supe: "\u2287",
	oplus: "\u2295",
	otimes: "\u2297",
	perp: "\u22a5",
	sdot: "\u22c5",
	lceil: "\u2308",
	rceil: "\u2309",
	lfloor: "\u230a",
	rfloor: "\u230b",
	lang: "\u27e8",
	rang: "\u27e9",
	loz: "\u25ca",
	spades: "\u2660",
	clubs: "\u2663",
	hearts: "\u2665",
	diams: "\u2666"
};

function debugVar(a) {
	return typeof a === "object" ? $.extend(true, {}, a) : a
}
function isObjectEmpty(a) {
	for(k in a) return false;
	return true
}
function getObjectLength(a) {
	var e = 0;
	for(k in a)++e;
	return e
};
var POPUP_MESSAGE_TIMEOUT = 5E3;

function popupMessage(a, e, g) {
	var c = "jcontext" + Math.floor(Math.random() * 1E6);
	$("#popupMessageContainer")[0] || $("body").append('<div id="popupMessageContainer"></div>');
	$("#popupMessageContainer").append('<div class="popupMessage' + (e ? " priorityPopup" : "") + (g && g.length ? " " + g + "_popup" : "") + '">' + a + '<img src="/cudatel/images/help_tack_up.png" alt="Tack" width="15" height="15" class="popupTack" /><img src="/cudatel/images/help_close.png" alt="Close" width="15" height="15" class="popupClose" /><div id="' + c + '-sound"></div></div>');
	var d = $("#popupMessageContainer .popupMessage:last").fadeIn("fast");
	a = d[0];
	$.soundEffect("/sounds/pop.mp3");
	d.find(".popupClose").bind("click", closePopupMessage);
	d.find(".popupTack").bind("click", function() {
		var b = $(this).closest(".popupMessage");
		if(!b.is(".tacked")) {
			b.addClass("tacked");
			this.src = "/cudatel/images/help_tack_down.png"
		}
	});
	if(e) d.find(".popupTack").click();
	else a.timeout = setTimeout(function() {
		fadePopupMessage(d)
	}, POPUP_MESSAGE_TIMEOUT)
}

function fadePopupMessage(a) {
	a.is(".tacked") || a.fadeOut("slow")
}
function closePopupMessage(a) {
	a = a.length > 0 ? $("." + a + "_popup") : $(this).closest(".popupMessage");
	cancelPopupFade.call(a[0]);
	a.fadeOut("normal", function() {
		$(this).remove()
	})
}
function cancelPopupFade() {
	$(this).addClass("frozen").removeClass("priorityPopup");
	this.timeout && clearTimeout(this.timeout)
};
var __hideSubNavDelay = 50,
	__hideSubNavTimeout = false,
	__hideSNButtonTimeout = false,
	__screenParentRegistry = {},
	__currentMenu = false,
	__collapsed_button_width = "35px",
	DWR_DEBOUNCE_TIME = 500;
$.browser.msie && setInterval(function() {
	var a = document.title.match(/^[^#]+/);
	if(a && a[0]) document.title = a[0]
}, 500);
$(window).bind("meteor_update_status", function(a, e) {
	if(typeof titlebar == "undefined" || !titlebar) titlebar = "CudaTel Communication Server";
	if(e.json.system_serial) document.title = sprintf("%s (%s)", titlebar, e.json.system_serial)
});

function bindNavHover() {
	$("#ulButtonBar > li:not(.logo)").unbind("mouseenter.nav").unbind("mouseleave.nav").bind("mouseenter.nav", function() {
		highlightButton($(this), true)
	}).bind("mouseleave.nav", function() {
		$(this).is(".current") || highlightButton($(this), false)
	});
	$("#ulButtonBar > li > a").bind("click", function() {
		this.blur()
	});
	$("#ulButtonBar").trigger("navReady")
}

function highlightButton(a, e) {
	var g = $(a).find("img")[0];
	if(g) if(e) {
		$(a).addClass("hovered");
		if(!g.src.match(/-active\./)) g.src = g.src.replace(/\.(png|gif|jpg)$/, "-active.$1")
	} else if(!($(a).is(".current") || $(a).parents(".current").length)) {
		$(a).removeClass("hovered");
		g.src = g.src.replace(/-active\./, ".")
	}
}
function hookScan(a) {
	return a.replace(/\[hook:([^\]]*)\]/g, '<span class="hook $1"></span>')
}
var __DWRwindowDebounceTimer = false,
	__dwrLoaded;
$(document).ready(function() {
	$(window).bind("resize", DWRResizeHandler)
});

function DWRResizeHandler() {
	__DWRwindowDebounceTimer && clearTimeout(__DWRwindowDebounceTimer);
	__DWRDebounceTimer = setTimeout(DWRFireEvent, DWR_DEBOUNCE_TIME)
}
function DWRFireEvent() {
	$(window).trigger("debouncedresize")
}
$.fn.fullHeight = function(a) {
	this.each(function() {
		var e = $(this).offset().top,
			g = $(window).height(),
			c = 0;
		if(a) c = a.air || 0;
		$(this).css({
			height: g - c - e + "px"
		})
	})
};

function fitAll(a, e) {
	if(e && e[0]) {
		var g = e.eq(0),
			c = e.eq(0).data("ratio");
		c || (c = e.eq(0).outerWidth(true) / e.eq(0).outerHeight(true));
		e.data("ratio", c);
		var d = a.innerWidth();
		$(e).css({
			width: d,
			height: d / c
		});
		var b = g.height(),
			f = g.width();
		g = a.innerHeight();
		b = a.innerWidth();
		d = e.length;
		f = optimalSize(g, b, 1, c, d);
		d = Math.ceil(d / f);
		f = b / f;
		b = f / c;
		if(b * d > g) b = g / d;
		e.css({
			width: f - 5 + "px",
			height: b + "px"
		});
		e.eq(0).offset();
		e.trigger("resize")
	}
}
function optimalSize(a, e, g, c, d) {
	return Math.ceil(Math.sqrt(d) * (e / c / (a / g)))
}

function windowOpen(a) {
	var e = {
		ccc: "width=350,height=500,location=0,menubar=0,scrollbars=1,status=0,toolbar=0,resizable=1",
		fullscreen: "width=" + (screen.width - 200) + "height=" + (screen.height - 200) + "location=0,menubar=0,scrollbars=auto,status=0,toolbar=0,resizable=1",
		fullscroll: "width=" + (screen.width - 200) + "height=" + (screen.height - 200) + "location=0,menubar=0,scrollbars=1,status=0,toolbar=0,resizable=1"
	};
	return window.open(a.url, a.name || "win" + Math.floor(Math.random()), a.options || e[a.preset])
}
var ccc_win;

function cccOpen() {
	if(!ccc_win || ccc_win.closed) ccc_win = windowOpen({
		url: "/cudatel/ajax-html/callcontrol.shtml",
		name: "client",
		preset: "ccc"
	});
	ccc_win.focus()
};
var STATIC_PATH = "/cudatel/",
	XMLGUI_PATH = "/cudatel/gui/",
	AJAXHTML_PATH = "/cudatel/ajax-html/",
	HTML_SCREENS_DIR = "/cudatel/ajax-html",
	PLEASE_WAIT_MESSAGE = '<p class="wait"><img src=""/cudatel/images/wait.gif" width="24" height="24" style="vertical-align: bottom; margin-right: 1em;" />Please Wait...</p>';
$(window).bind("screenInit", function() {
	$(".helpPopupWrap").remove()
});

function logout() {
	SUPPRESS_ERROR_DISPLAY = true;
	$.ajax({
		url: "/cudatel/gui/login/logout",
		type: "POST",
		success: function() {
			$(window).unbind("hashchange.nav");
			location.replace("#");
			location.reload()
		},
		error: function() {
			$(window).unbind("hashchange.nav");
			location.replace("#");
			location.reload()
		}
	})
}
function enliven(a) {
	a.find(".liveForm").andSelf().filter(".liveForm").makeLiveForm();
	a.find(".drop").andSelf().filter(".drop").dropdown();
	a.find(".ipv4").andSelf().filter(".ipv4").ipv4Input()
}

function loadOver(a, e, g, c, d, b) {
	a = $(a);
	b && console.log(a, e);
	$.ajax({
		url: e,
		type: g || "GET",
		data: c || {},
		success: function(f) {
			a.replaceWith(f.replace(/<!--.*?--\>/g, ""));
			b && console.log("Inserting into: ", a, "\n", f);
			d && d(a);
			a.trigger("dynamic")
		}
	})
}

function loadInto(a, e, g, c, d, b) {
	a = $(a);
	a.trigger("abortLoad");
	var f = $.ajax({
		url: e,
		type: g || "GET",
		data: c || {},
		success: function(j) {
			a.unbind("abortLoad.loadinto");
			a.html(j.replace(/<!--.*?--\>/g, ""));
			b && console.log("Inserting into: ", a, "\n", j);
			d && d(a);
			a.trigger("dynamic")
		},
		afterError: function() {
			a.unbind("abortLoad.loadinto")
		}
	});
	a.one("abortLoad.loadinto", function(j) {
		j.stopPropagation();
		a[0] == j.target && f && f.abort()
	})
}
$(window).bind("login", function() {
	$(document).konami(function() {
		$("body").addClass("expertMode");
		unhideNavItem("expert");
		$("#expert-menu").show();
		$("#unlock-expert").remove();
		$("body").append('<div id="unlock-expert" style="position: fixed; z-index: 10000; top: 70%; width: 100%; display: none; text-align: center;"><img src="/cudatel/images/expert_unlock.png" alt="Unlocked: Developer Screen" /></div>');
		setTimeout(function() {
			$("#unlock-expert").show()
		}, 500);
		setTimeout(function() {
			$("#unlock-expert").fadeOut("fast", function() {
				$("#unlock-expert").remove()
			})
		}, 5E3)
	}, {
		code: [38, 38, 40, 40, 37, 39, 37, 39, 66, 65]
	})
});
(function(a) {
	var e = {},
		g = {};
	initScreensList = function(d) {
		e = d
	};
	initOverlaysList = function(d) {
		g = d
	};
	var c = null;
	a("#allScreen");
	switchScreenCallback = function(d, b) {
		a.isFunction(d.enter) && d.enter.apply(d.dom, [d]);
		if(d.dom) {
			if(c && e[c]) {
				var f = e[c];
				f.dom.hide();
				a.isFunction(f.exit) && f.exit.apply(f.dom, [f])
			}
			if(b) {
				a(window).trigger("screenready", {
					screen: d.name
				});
				if(d.help) {
					f = a('<a style="padding-right: 2px;" class="overlayHelpButton helpLink panelAuto" href="#"><img width="35" height="20" src="/cudatel/images/help_icon_heavy.png"/></a>').prependTo(d.dom);
					help_bindElement(f, "/cudatel/ajax-html/help/en_US/" + d.help)
				}
			}
			window.scrollTo(0, 0);
			d.extensionHack ? a(window).triggerHandler("screenInit", {
				screen: {
					name: "extensions"
				}
			}) : a(window).triggerHandler("screenInit", {
				screen: {
					name: d.name
				}
			});
			d.dom.show();
			b && a.isFunction(d.afterBuild) && d.afterBuild.apply(d.dom, [d]);
			return c = d.name
		}
		return c
	};
	switchScreen = function(d) {
		var b = e[d];
		if(b) {
			b.name = d;
			if(b.dom) switchScreenCallback(b);
			else if(a.isFunction(b.build)) if(!b.build.apply(a("#allScreen"), [b, function() {
				a(window).triggerHandler("screenBuilt", {
					screen: {
						name: d
					}
				});
				switchScreenCallback(b, true)
			}])) {
				showError('Internal script error: Screen "' + d + '" build function does not return a DOM object.');
				return c
			}
		} else {
			showError('Internal script error: Screen "' + d + '" does not exist.');
			return c
		}
	};
	iframeScreen = function(d, b, f, j, n) {
		b = getCookie(b);
		var l = a("body"),
			o = false;
		if(l.is(".firefox") || l.is(".msie") || l.is(".opera") || l.is(".mozilla")) o = true;
		var q = document.createElement("div");
		q.className = "screen";
		a(q).css({
			display: "block",
			margin: 0,
			padding: 0,
			height: o ? f.height() + "px" : "100%"
		});
		f.append(q);
		f = document.createElement("iframe");
		f.src = b ? b : d;
		if(l.is(".msie")) {
			f.setAttribute("scrolling", "no");
			f.setAttribute("verticalscrolling", "no");
			f.setAttribute("horizontalscrolling", "no")
		}
		var v = a(f);
		v.css({
			top: "0px",
			left: "0px",
			border: 0,
			margin: 0,
			padding: 0,
			width: "100%",
			height: o ? a(q).height() + "px" : "100%",
			"min-height": "100%",
			display: "block",
			bottom: "0px"
		});
		q.appendChild(f);
		j.dom = a(q);
		a(window).bind("tick", function() {
			var x = parseInt(v.height());
			v.contents().find(".dataTables_wrapper").each(function() {
				if(parseInt(a(this).height()) > x) x = parseInt(a(this).height()) + 2
			});
			v.css({
				height: x + "px"
			})
		});
		n.call(undefined, j);
		return true
	};
	ajaxScreen = function(d, b, f, j) {
		a.getTemplate(d, function(n) {
			f.dom = a('<div id="screen-' + f.name + '" class="screen" style="display: none;"></div>').appendTo(b);
			f.dom.html(n);
			help_activate(f.dom);
			j(f)
		});
		return true
	};
	ajaxScreenParts = function() {};
	buildScreenClassic = function(d, b, f) {
		b.dom = a("#screen-" + d);
		f.call(undefined, b);
		return true
	};
	enterScreenClassic = function(d) {
		return switchScreenClassic(d)
	};
	getCurrentScreen = function() {
		return c
	};
	serializeOverlayToHash = function(d, b, f) {
		location.href = location.href + ";" + d + "=" + b + ":" + JSON.stringify(f)
	};
	removeOverlayFromHash = function(d, b) {
		for(var f, j = location.href; f = j.match("((?:;|)" + d + "=" + b + ":({.*?}))(?:;|$)");) j = j.replace(f[1], "");
		location.href = j
	};
	isOverlayInHash = function(d, b) {
		if(location.href.match("((?:;|)" + d + "=" + b + ":({.*?}))(?:;|$)")) return true;
		return false
	};
	updateOverlaysFromHash = function() {
		for(var d, b = location.href, f = []; d = b.match("((?:;|)(overlay|popup)=(.+?):({.*?}))(?:;|$)");) {
			var j = d[2],
				n = d[3],
				l = a.parseJSON(unescape(d[4])),
				o = a("." + j + "." + n);
			f.push("." + j + "." + n);
			o[0] || (j == "popup" ? showPopup(n, l, true) : showOverlay(n, l, true));
			b = b.replace(d[1], "")
		}
		d = a("#allPopup .popup, #allOverlay .overlay");
		if(f.length > 0) d = d.filter(":not(" + f.join(",") + ")");
		d.each(function() {
			a(this).triggerHandler("close_request")
		})
	};
	showPopup = function(d, b) {
		var f, j;
		if(a.isPlainObject(d)) {
			f = getUnique("anonymous-popup-");
			j = d
		} else {
			f = d;
			j = g[d]
		}
		j = a.extend(true, {}, {
			closeButton: true
		}, j);
		b || (b = {});
		if(j) if(a.isFunction(j.init)) {
			var n = a("#overlaytemplate > .popup").clone().addClass(f),
				l = a(".popupcontents", n);
			j.help ? help_bindElement(a(".popupHelpButton", n), "/cudatel/ajax-html/help/en_US/" + j.help) : a(".popupHelpButton", n).hide();
			n.toggleClass("autoHeight", !j.fillHeight);
			j.closeButton || a(".popupClose > .popupCloseButton", n).remove();
			n.delegate(".popupCloseButton", "click", function(o) {
				o.preventDefault();
				n.trigger("close_request")
			});
			n.one("close_request", function(o, q) {
				o.preventDefault();
				o.stopPropagation();
				a.isFunction(j.close) && j.close.call(j);
				n.remove();
				isOverlayInHash("popup", f) && history.back();
				if(!a("#allPopup").children()[0]) {
					a("#commonBlankerBackground").hide();
					a("#allPopup").hide();
					a("body").removeClass("hasPopups");
					if(!a("#allOverlay").children()[0]) {
						a(window).triggerHandler("screenInit", {
							screen: {
								name: c
							}
						});
						e[c] && a.isFunction(e[c].enter) && e[c].enter.apply(e[c].dom, [e[c]])
					}
				}
				if(q && q.refresh) if(a("#allPopup .popup:last")[0]) a("#allPopup .popup:last").triggerHandler("refreshDetail");
				else if(a("#allOverlay .overlay:last")[0]) a("#allOverlay .overlay:last").triggerHandler("refreshDetail");
				else {
					var v = e[c];
					v.dom && v.dom.trigger("refreshDetail")
				}
				typeof b.close === "function" && b.close()
			});
			j.init.call(j, l, b);
			a("#commonBlankerBackground").show();
			a("#allPopup").append(n).show();
			a("body").addClass("hasPopu);
		f.src = b ? b : d;
		if(l.is(".msie")) {
			f.setAttribute("scrolling", "no");
			f.setAttribute("verticalscrolling", "no");
			f.setAttribute("horizontalscrolling", "no")
		}
		var v = a(f);
		v.css({
			top: "0px",
			left: "0px",
			border: 0,
			margin: 0,
			padding: 0,
			width: "100%",
			height: o ? a(q).height() + "px" : "100%",
			"min-height": "100%",
			display: "block",
			bottom: "0px"
		});
		q.appendChild(f);
		j.dom = a(q);
		a(window).bind("tick", function() {
			var x = parseInt(v.height());
			v.contents().find(".dataTables_wrapper").each(function() {
				if(parseInt(a(this).height()) > x) x = parseInt(a(this).height()) + 2
			});
			v.css({
				height: x + "px"
			})
		});
		n.call(undefined, j);
		return true
	};
	ajaxScreen = function(d, b, f, j) {
		a.getTemplate(d, function(n) {
			f.dom = a('<div id="screen-' + f.name + '" class="screen" style="display: none;"></div>').appendTo(b);
			f.dom.html(n);
			help_activate(f.dom);
			j(f)
		});
		return true
	};
	ajaxScreenParts = function() {};
	buildScreenClassic = function(d, b, f) {
		b.dom = a("#screen-" + d);
		f.call(undefined, b);
		return true
	};
	enterScreenClassic = function(d) {
		return switchScreenClassic(d)
	};
	getCurrentScreen = function() {
		return c
	};
	serializeOverlayToHash = function(d, b, f) {
		location.href = location.href + ";" + d + "=" + b + ":" + JSON.stringify(f)
	};
	removeOverlayFromHash = function(d, b) {
		for(var f, j = location.href; f = j.match("((?:;|)" + d + "=" + b + ":({.*?}))(?:;|$)");) j = j.replace(f[1], "");
		location.href = j
	};
	isOverlayInHash = function(d, b) {
		if(location.href.match("((?:;|)" + d + "=" + b + ":({.*?}))(?:;|$)")) return true;
		return false
	};
	updateOverlaysFromHash = function() {
		for(var d, b = location.href, f = []; d = b.match("((?:;|)(overlay|popup)=(.+?):({.*?}))(?:;|$)");) {
			var j = d[2],
				n = d[3],
				l = a.parseJSON(unescape(d[4])),
				o = a("." + j + "." + n);
			f.push("." + j + "." + n);
			o[0] || (j == "popup" ? showPopup(n, l, true) : showOverlay(n, l, true));
			b = b.replace(d[1], "")
		}
		d = a("#allPopup .popup, #allOverlay .overlay");
		if(f.length > 0) d = d.filter(":not(" + f.join(",") + ")");
		d.each(function() {
			a(this).triggerHandler("close_request")
		})
	};
	showPopup = function(d, b) {
		var f, j;
		if(a.isPlainObject(d)) {
			f = getUnique("anonymous-popup-");
			j = d
		} else {
			f = d;
			j = g[d]
		}
		j = a.extend(true, {}, {
			closeButton: true
		}, j);
		b || (b = {});
		if(j) if(a.isFunction(j.init)) {
			var n = a("#overlaytemplate > .popup").clone().addClass(f),
				l = a(".popupcontents", n);
			j.help ? help_bindElement(a(".popupHelpButton", n), "/cudatel/ajax-html/help/en_US/" + j.help) : a(".popupHelpButton", n).hide();
			n.toggleClass("autoHeight", !j.fillHeight);
			j.closeButton || a(".popupClose > .popupCloseButton", n).remove();
			n.delegate(".popupCloseButton", "click", function(o) {
				o.preventDefault();
				n.trigger("close_request")
			});
			n.one("close_request", function(o, q) {
				o.preventDefault();
				o.stopPropagation();
				a.isFunction(j.close) && j.close.call(j);
				n.remove();
				isOverlayInHash("popup", f) && history.back();
				if(!a("#allPopup").children()[0]) {
					a("#commonBlankerBackground").hide();
					a("#allPopup").hide();
					a("body").removeClass("hasPopups");
					if(!a("#allOverlay").children()[0]) {
						a(window).triggerHandler("screenInit", {
							screen: {
								name: c
							}
						});
						e[c] && a.isFunction(e[c].enter) && e[c].enter.apply(e[c].dom, [e[c]])
					}
				}
				if(q && q.refresh) if(a("#allPopup .popup:last")[0]) a("#allPopup .popup:last").triggerHandler("refreshDetail");
				else if(a("#allOverlay .overlay:last")[0]) a("#allOverlay .overlay:last").triggerHandler("refreshDetail");
				else {
					var v = e[c];
					v.dom && v.dom.trigger("refreshDetail")
				}
				typeof b.close === "function" && b.close()
			});
			j.init.call(j, l, b);
			a("#commonBlankerBackground").show();
			a("#allPopup").append(n).show();
			a("body").addClass("hasPopu
					g.preventDefault();
					windowOpen({
						url: "/cudatel/ajax-html/wallboard/agent_popup.shtml",
						name: "agent_wallboard",
						preset: "fullscreen"
					})
				})
			})
		}
	},
	agentmgr: {
		build: function(a, e) {
			return ajaxScreen("/cudatel/ajax-html/agent_manager.html", this, a, function() {
				e();
				$("#stubAgentManager").empty().queueAgentManager()
			})
		}
	},
	queuemgr: {
		build: function(a, e) {
			return ajaxScreen("/cudatel/ajax-html/queue_manager.html", this, a, function() {
				e();
				$("#stubQueueManager").queueManager();
				$("#stubQueueManager .opOpenQueueManager").bind("click", function(g) {
					g.preventDefault();
					windowOpen({
						url: "/cudatel/ajax-html/wallboard/queue_manager_popup.shtml",
						name: "queue_manager_wallboard",
						preset: "fullscroll"
					})
				})
			})
		}
	},
	usercallflow: {
		build: function(a, e) {
			return ajaxScreen("/cudatel/ajax-html/usercallflow.html", this, a, e)
		},
		enter: function() {
			loadInto($("#userCallflowRouters").empty(), "/cudatel/gui/configure/dynamic/user_routers", "POST", {
				action: "list",
				template: "list"
			})
		}
	},
	uservoicemail: {
		build: function(a, e) {
			a.dom = $('<div id="screen-uservoicemail" class="screen only panel" help="user_voicemail.html"><h2>Voice Mail</h2><div class="userVoicemail"></div></div>').appendTo(this);
			help_activate(a.dom);
			e(a);
			return a.dom
		},
		enter: function() {
			this.find(".userVoicemail").empty().voicemailList()
		}
	},
	userfaxout: {
		build: function(a, e) {
			a.dom = $('<div id="screen-userfaxout" class="screen only panel" style="display: none" help="user_fax_outbox.html"><h2>Outgoing Faxes</h2><div class="faxOutList faxList"></div></div>').appendTo(this);
			help_activate(a.dom);
			e(a);
			return a.dom
		},
		enter: function() {
			var a = $(".faxOutList", this);
			a.data("faxOutList") && a.faxOutList("destroy");
			a.faxOutList()
		}
	},
	userfaxin: {
		build: function(a, e) {
			a.dom = $('<div id="screen-userfaxin" class="screen only panel" style="display: none" help="user_fax_inbox.html"><h2>Incoming Faxes</h2><div class="faxInList faxList"></div></div>').appendTo(this);
			help_activate(a.dom);
			e(a);
			return a.dom
		},
		enter: function() {
			var a = $(".faxInList", this);
			a.data("faxInList") && a.faxInList("destroy");
			a.faxInList()
		}
	},
	usersendfax: {
		build: function(a, e) {
			a.dom = $('<div id="screen-usersendfax" class="screen only panel" style="display: none" help="user_fax_send.html"><h2>Send a Fax</h2><div class="faxSendFormWrap"></div></div>').appendTo(this);
			help_activate(a.dom);
			e(a);
			return a.dom
		},
		enter: function() {
			var a = $(".faxSendFormWrap", this);
			console_log("MARK 0", a);
			a.data("faxSendForm") && a.faxSendForm("destroy");
			a.faxSendForm()
		}
	},
	users: {
		build: function(a, e) {
			a.dom = $('<div id="screen-users" class="screen only panel" style="display: none" help="extension_list.html"><h2>People <a class="ops opNewUser" href="#">Add New Person</a></h2><div class="extensionsSearch"></div><div class="extensionList"></div></div>').appendTo(this);
			help_activate(a.dom);
			a.dom.find(".extensionList").extensionList({
				data: {
					type: "user"
				},
				search: $(".extensionsSearch", a.dom),
				hasNoneText: "No users found"
			});
			a.dom.find(".opNewUser").bind("click", function(g) {
				g.preventDefault();
				showPopup("user_create")
			});
			e(a);
			return a.dom
		},
		enter: function() {
			$(".extensionList", this).extensionList("refresh")
		}
	},
	groups: {
		build: function(a, e) {
			a.dom = $('<div id="screen-groups" class="screen only panel" style="display: none" help="extension_list.html"><h2>Groups <a class="ops opNewGroup" href="#">Add New Group</a></h2><div class="extensionsSearch"></div><div class="extensionList"></div></div>').appendTo(this);
			help_activate(a.dom);
			a.dom.find(".extensionList").extensionList({
				data: {
					type: "group"
				},
				search: $(".extensionsSearch", a.dom),
				hasNoneText: "No groups found"
			});
			a.dom.find(".opNewGroup").bind("click", function(g) {
				g.preventDefault();
				showPopup("group_create")
			});
			e(a);
			return a.dom
		},
		enter: function() {
			$(".extensionList", this).extensionList("refresh")
		}
	},
	queues: {
		build: function(a, e) {
			a.dom = $('<div id="screen-queues" class="screen only panel" style="display: none" help="extension_list.html"><h2>Queues <a class="ops opNewQueue" href="#">Add New Queue</a></h2><div class="extensionsSearch"></div><div class="extensionList"></div></div>').appendTo(this);
			var g = $(".opNewQueue", a.dom);
			help_activate(a.dom);
			a.dom.find(".extensionList").extensionList({
				data: {
					type: "queue"
				},
				search: $(".extensionsSearch", a.dom),
				hasNoneText: "No queues found"
			});
			a.dom.find(".opNewQueue").bind("click", function(c) {
				c.preventDefault();
				showPopup("queue_create")
			});
			$.getREST("/cudatel/gui/permission/check", {
				bbx_permission_name: "CREATE_QUEUE"
			}, function(c) {
				trueish(c.self.CREATE_QUEUE) || g.hide()
			});
			e(a);
			return a.dom
		},
		enter: function() {
			$(".extensionList", this).extensionList("refresh")
		}
	},
	parking: {
		build: function(a, e) {
			a.dom = $('<div id="screen-parking" class="screen only panel" style="display: none" help="extension_list.html"><h2>Parking <a class="ops opNewParking" href="#">Add New Parking Extension</a></h2><div class="extensionsSearch"></div><div class="extensionList"></div></div>').appendTo(this);
			help_activate(a.dom);
			a.dom.find(".extensionList").extensionList({
				data: {
					type: "valet_parking"
				},
				search: $(".extensionsSearch", a.dom),
				hasNoneText: "No parking extensions found"
			});
			a.dom.find(".opNewParking").bind("click", function(g) {
				g.preventDefault();
				showPopup("valet_parking_create")
			});
			e(a);
			return a.dom
		},
		enter: function() {
			$(".extensionList", this).extensionList("refresh")
		}
	},
	conferences: {
		build: function(a, e) {
			a.dom = $('<div id="screen-conferences" class="screen only panel" style="display: none" help="extension_list.html"><h2>Conferences <a class="ops opNewConference" href="#">Add New Conference</a></h2><div class="extensionsSearch"></div><div class="extensionList"></div></div>').appendTo(this);
			help_activate(a.dom);
			a.dom.find(".extensionList").extensionList({
				data: {
					type: "conference"
				},
				search: $(".extensionsSearch", a.dom),
				hasNoneText: "No conferences found"
			});
			a.dom.find(".opNewConference").bind("click", function(g) {
				g.preventDefault();
				showPopup("conference_create")
			});
			e(a);
			return a.dom
		},
		enter: function() {
			$(".extensionList", this).extensionList("refresh")
		}
	},
	advrouters: {
		build: function(a, e) {
			a.dom = $('<div class="screen panel only">This screen does not exist in this version.</div>');
			e(a);
			return a.dom
		}
	},
	autoattends: {
		build: function(a, e) {
			a.dom = $('<div id="screen-autoattends" class="screen only panel" style="display: none" help="extension_list.html"><h2>Auto Attendants <a class="ops opNewRouter" href="#">Add New Call Router</a> <a class="ops opNewAutoAttendant" href="#">Add New Automated Attendant</a></h2><div class="extensionsSearch"></div><div class="extensionList"></div></div>').appendTo(this);
			help_activate(a.dom);
			a.dom.find(".extensionList").extensionList({
				data: {
					type: "auto_attendant,router"
				},
				search: $(".extensionsSearch", a.dom),
				hasNoneText: "No automated attendants found"
			});
			a.dom.find(".opNewRouter").bind("click", function(g) {
				g.preventDefault();
				showPopup("router_create")
			});
			a.dom.find(".opNewAutoAttendant").bind("click", function(g) {
				g.preventDefault();
				showPopup("auto_attendant_create")
			});
			e(a);
			return a.dom
		},
		enter: function() {
			$(".extensionList", this).extensionList("refresh")
		}
	},
	phones: {
		build: function(a, e) {
			a.dom = $('<div id="screen-phones" class="screen only panel" style="display: none" help="extension_list.html"><h2>Phones</h2><div class="extensionsSearch"></div><div class="extensionList"></div></div>').appendTo(this);
			help_activate(a.dom);
			a.dom.find(".extensionList").extensionList({
				data: {
					type: "phone"
				},
				search: $(".extensionsSearch", a.dom),
				hasNoneText: "No unassigned phones found"
			});
			e(a);
			return a.dom
		},
		enter: function() {
			$(".extensionList", this).extensionList("refresh")
		}
	},
	allexts: {
		build: function(a, e) {
			a.dom = $('<div id="screen-allexts" class="screen only panel" style="display: none" help="extension_list.html"><h2>All Extensions</h2><div class="extensionsSearch"></div><div class="extensionList"></div></div>').appendTo(this);
			help_activate(a.dom);
			a.dom.find(".extensionList").extensionList({
				search: $(".extensionsSearch", a.dom),
				hasNoneText: "No extensions found"
			});
			e(a);
			return a.dom
		},
		enter: function() {
			$(".extensionList", this).extensionList("refresh")
		}
	},
	providers: {
		build: function(a, e) {
			var g = this;
			$.get("/cudatel/ajax-html/providers.html", function(c) {
				a.dom = $('<div class="screen panel only" help="sip_provider_list.html"></div>').appendTo(g);
				a.dom.html(c);
				$("a.opNewGateway", a.dom).bind("click", function(d) {
					d.preventDefault();
					showPopup("new_sip_gateway", {
						close: function() {
							$(".providersTable", a.dom).empty().providersTable()
						}
					})
				});
				help_activate(a.dom);
				e.call(undefined, a)
			});
			return true
		},
		enter: function() {
			$(".providersTable", this).empty().providersTable()
		}
	},
	hwproviders: {
		build: function(a, e) {
			var g = this;
			$.get("/cudatel/ajax-html/hwproviders.html", function(c) {
				a.dom = $('<div class="screen panel only" help="hardware_providers_list.html"></div>').appendTo(g);
				a.dom.html(c);
				help_activate(a.dom);
				e.call(undefined, a)
			});
			return true
		},
		enter: function() {
			$(".providersTable", this).empty().hardwareProvidersTable()
		}
	},
	routes: {
		build: function(a, e) {
			var g = this;
			$.get("/cudatel/ajax-html/routing.html", function(c) {
				a.dom = $('<div class="screen panel only" help="routing.html"></div>').appendTo(g);
				a.dom.html(c);
				help_activate(a.dom);
				e.call(undefined, a)
			});
			return true
		},
		enter: function() {
			$(".routingList", this).routeMapList()
		}
	},
	cdrs: {
		build: function(a, e) {
			var g = this;
			$.get("/cudatel/ajax-html/cdrs2.html", function(c) {
				a.dom = $(c).addClass("screen").appendTo(g);
				help_activate(a.dom);
				e.call(undefined, a)
			});
			return true
		},
		enter: function() {
			$(">.cdrList", this).cdrList()
		}
	},
	registrations: {
		build: function(a, e) {
			var g = this;
			$.get("/cudatel/ajax-html/registrations.html", function(c) {
				a.dom = $(c).addClass("screen").appendTo(g);
				help_activate(a.dom);
				e.call(undefined, a)
			});
			return true
		},
		enter: function() {
			$(".phoneRegList", this).activeRegScreen()
		}
	},
	activityreports: {
		build: function(a, e) {
			return iframeScreen("/3/?embeded#!/cudatel/groupactivity/", "user_activity_url", this, a, e)
		},
		enter: function() {
			$(this).find("iframe")[0].src = "/3/?embeded#!/cudatel/groupactivity/"
		}
	},
	groupactivity: {
		build: function(a, e) {
			return iframeScreen("/3/?embeded#!/cudatel/groupactivity/", "user_activity_url", this, a, e)
		},
		enter: function() {
			$(this).find("iframe")[0].src = "/3/?embeded#!/cudatel/groupactivity/"
		}
	},
	networksettings: {
		build: function(a, e) {
			a.dom = $('<div id="screen-networksettings" class="screen panel only" style="display: none;" help="system_network_help.html"><div class="panel"><h3>Network</h3><div class="networkSettings"></div></div></div>').appendTo(this);
			help_activate(a.dom);
			a.dom.find(".networkSettings").networkSettings();
			e(a);
			return true
		}
	},
	firewallsettings: {
		build: function(a, e) {
			return ajaxScreen("/cudatel/ajax-html/settings/firewall.html", this, a, function(g) {
				e();
				for(var c = [{
					div: $(".firewallSettingsFirewall", g.dom),
					url: "/cudatel/gui/conh"></div><div class="extensionList"></div></div>').appendTo(this);
			help_activate(a.dom);
			a.dom.find(".extensionList").extensionList({
				data: {
					type: "phone"
				},
				search: $(".extensionsSearch", a.dom),
				hasNoneText: "No unassigned phones found"
			});
			e(a);
			return a.dom
		},
		enter: function() {
			$(".extensionList", this).extensionList("refresh")
		}
	},
	allexts: {
		build: function(a, e) {
			a.dom = $('<div id="screen-allexts" class="screen only panel" style="display: none" help="extension_list.html"><h2>All Extensions</h2><div class="extensionsSearch"></div><div class="extensionList"></div></div>').appendTo(this);
			help_activate(a.dom);
			a.dom.find(".extensionList").extensionList({
				search: $(".extensionsSearch", a.dom),
				hasNoneText: "No extensions found"
			});
			e(a);
			return a.dom
		},
		enter: function() {
			$(".extensionList", this).extensionList("refresh")
		}
	},
	providers: {
		build: function(a, e) {
			var g = this;
			$.get("/cudatel/ajax-html/providers.html", function(c) {
				a.dom = $('<div class="screen panel only" help="sip_provider_list.html"></div>').appendTo(g);
				a.dom.html(c);
				$("a.opNewGateway", a.dom).bind("click", function(d) {
					d.preventDefault();
					showPopup("new_sip_gateway", {
						close: function() {
							$(".providersTable", a.dom).empty().providersTable()
						}
					})
				});
				help_activate(a.dom);
				e.call(undefined, a)
			});
			return true
		},
		enter: function() {
			$(".providersTable", this).empty().providersTable()
		}
	},
	hwproviders: {
		build: function(a, e) {
			var g = this;
			$.get("/cudatel/ajax-html/hwproviders.html", function(c) {
				a.dom = $('<div class="screen panel only" help="hardware_providers_list.html"></div>').appendTo(g);
				a.dom.html(c);
				help_activate(a.dom);
				e.call(undefined, a)
			});
			return true
		},
		enter: function() {
			$(".providersTable", this).empty().hardwareProvidersTable()
		}
	},
	routes: {
		build: function(a, e) {
			var g = this;
			$.get("/cudatel/ajax-html/routing.html", function(c) {
				a.dom = $('<div class="screen panel only" help="routing.html"></div>').appendTo(g);
				a.dom.html(c);
				help_activate(a.dom);
				e.call(undefined, a)
			});
			return true
		},
		enter: function() {
			$(".routingList", this).routeMapList()
		}
	},
	cdrs: {
		build: function(a, e) {
			var g = this;
			$.get("/cudatel/ajax-html/cdrs2.html", function(c) {
				a.dom = $(c).addClass("screen").appendTo(g);
				help_activate(a.dom);
				e.call(undefined, a)
			});
			return true
		},
		enter: function() {
			$(">.cdrList", this).cdrList()
		}
	},
	registrations: {
		build: function(a, e) {
			var g = this;
			$.get("/cudatel/ajax-html/registrations.html", function(c) {
				a.dom = $(c).addClass("screen").appendTo(g);
				help_activate(a.dom);
				e.call(undefined, a)
			});
			return true
		},
		enter: function() {
			$(".phoneRegList", this).activeRegScreen()
		}
	},
	activityreports: {
		build: function(a, e) {
			return iframeScreen("/3/?embeded#!/cudatel/groupactivity/", "user_activity_url", this, a, e)
		},
		enter: function() {
			$(this).find("iframe")[0].src = "/3/?embeded#!/cudatel/groupactivity/"
		}
	},
	groupactivity: {
		build: function(a, e) {
			return iframeScreen("/3/?embeded#!/cudatel/groupactivity/", "user_activity_url", this, a, e)
		},
		enter: function() {
			$(this).find("iframe")[0].src = "/3/?embeded#!/cudatel/groupactivity/"
		}
	},
	networksettings: {
		build: function(a, e) {
			a.dom = $('<div id="screen-networksettings" class="screen panel only" style="display: none;" help="system_network_help.html"><div class="panel"><h3>Network</h3><div class="networkSettings"></div></div></div>').appendTo(this);
			help_activate(a.dom);
			a.dom.find(".networkSettings").networkSettings();
			e(a);
			return true
		}
	},
	firewallsettings: {
		build: function(a, e) {
			return ajaxScreen("/cudatel/ajax-html/settings/firewall.html", this, a, function(g) {
				e();
				for(var c = [{
					div: $(".firewallSettingsFirewall", g.dom),
					url: "/cudatel/gui/configure/dynamic/settings_wan_firewall?action=form"
				}], d = 0; d < c.length; d++) loadInto(c[d].div, c[d].url, "GET");
				$(".firewallSettingsIPACL", g.dom).ipAcl()
			})
		}
	},
	systemsettings: {
		build: function(a, e) {
			var g = this;
			$.getTemplate("/cudatel/ajax-html/settings/system.html", function(c) {
				a.dom = $('<div id="screen-systemsettings" class="screen panel only" style="display: none;" help="system_system_help.html"></div>').appendTo(g);
				a.dom.html(c);
				help_activate(a.dom);
				e(a)
			});
			return true
		},
		afterBuild: function() {
			var a = this;
			$("form.adminPassword", this).formModule({
				dirty: function(c) {
					return c.new_password == c.new_password_confirm && c.new_password != ""
				}
			});
			var e = $("select[name=timezone]", this);
			$.getREST("/cudatel/gui/system/timezones", {}, function(c) {
				cur_val = c.timezone;
				$.each(c.timezones, function(d, b) {
					e.append('<option value="' + b.value + '">' + b.name + "</option>")
				});
				e.val(c.timezone);
				$(".systime", a).localTime();
				$("form.module", a).formModule();
				e.bind("change", function() {
					jConfirm("Changing the system time zone may result in a momentary lapse in call processing or a few seconds of instability. Do you wish to continue?", "Confirm Time Zone Change", function(d) {
						if(d) {
							cur_val = e.val();
							e.closest("form").trigger("submitEvent")
						} else e.val(cur_val)
					})
				})
			});
			var g = $("select[name=language]", this);
			$.getREST("/cudatel/gui/system/languages", {}, function(c) {
				$.each(c.languages, function(d, b) {
					g.append('<option value="' + b.value + '">' + b.name + "</option>")
				});
				g.val(c.language);
				$("form.module", a).formModule()
			});
			$(document.getElementById("system_settings_reporting")).one("built", function() {
				trueish($(document.getElementById("system_settings_reporting_allowed")).val()) && $(document.getElementById("system_settings_reporting_div")).show()
			}).formModule()
		},
		enter: function() {
			var a = $(this);
			$(".loginMethodSelect", a).disable("loading");
			$.getREST("/cudatel/gui/system/login_method", {}, function(e) {
				$(".loginMethodSelect", a).enable("loading");
				var g = e.login_method;
				e = trueish(e.sync_available);
				$(".loginMethodSelect").val(g);
				if(e) {
					$(".loginMethodDisabled", a).hide();
					$(".loginMethodSelect", a).enable("syncAvailable")
				} else {
					$(".loginMethodDisabled", a).show();
					$(".loginMethodSelect", a).disable("syncAvailable")
				}
			})
		}
	},
	phonesettings: {
		build: function(a, e) {
			var g = this;
			$.getTemplate("/cudatel/ajax-html/settings/phone.html", function(c) {
				a.dom = $('<div id="screen-phonesettings" class="screen panel only" style="display: none;" help="system_phones_help.html"></div>').appendTo(g);
				a.dom.html(c);
				help_activate(a.dom);
				a.dom.find("[name=bbx_call_timeout]").mask("9?999", {
					placeholder: ""
				});
				$.getREST("/cudatel/gui/system/network", function(d) {
					var b = "<tt>http://" + d.network.prov_lan_ip + "/provision/</tt>";
					if(d.network.external_inet_ip && d.network.external_inet_ip != "0.0.0.0") b += "(within your LAN) or <tt>http://" + d.network.external_inet_ip + "/provision/</tt> (outside your LAN)";
					if(d.network.prov_fqdn) b = "<tt>http://" + d.network.prov_fqdn + "/provision/</tt>";
					a.dom.find(".provisioningURL").html(b)
				});
				loadInto($(".ciscoProvPanel", a.dom), "/cudatel/ajax-html/settings/cisco_prov.html", "GET");
				loadInto($("#utilitiesSettingsGuide", a.dom), "/cudatel/ajax-html/settings/guide.html", "GET");
				e(a)
			});
			return true
		},
		afterBuild: function() {
			var a = this;
			this.find("form.module").formModule();
			this.find("form.zeroDest").bind("built", function() {
				$(".opExtensionPicker", a).extensionPicker({
					searchTypes: ["user", "group", "queue", "conference", "auto_attendant", "router", "phone"],
					hidden: $("input[name=zero_dest]", a),
					hiddenFormat: "number",
					autoSelectFirst: true,
					forcePickFirst: true,
					mustValidate: true,
					validate: "id",
					emptyTriggersSelection: true
				}).val($("input[name=zero_dest]", a).val())
			});
			var e = this.find(".ringbackForm"),
				g = e.find(".customRingback");
			e.find(".ringbackSelect").bind("change", function() {
				var d = $(this),
					b = d.closest("tr").find(".customRingback");
				if(d.val() === "_CUSTOM_") {
					b.show().empty();
					b.one("mohPickerBuilt", function() {
						$(this).trigger("change")
					});
					b.mohPicker()
				} else {
					b.hide();
					d = {};
					d[$(this).attr("name")] = $(this).val();
					$.putREST("/cudatel/gui/system/ringback", d)
				}
			});
			var c = {
				ringback: "ringback_moh_id",
				transfer_ringback: "transfer_ringback_moh_id"
			};
			g.bind("change", function() {
				var d = $(this),
					b = d.closest("tr").find(".ringbackSelect");
				if(b.val() === "_CUSTOM_") {
					var f = {};
					f[c[b.attr("name")]] = d.find("select").val();
					$.putREST("/cudatel/gui/system/ringback", f)
				}
			})
		},
		enter: function() {
			var a = this;
			$.getREST("/cudatel/gui/system/codecs", {}, function(e) {
				$(".codecPicker-inbound", screen.dom).codecPicker({
					selected: e.codecs.codecs_inbound,
					inputName: "codecs_inbound"
				});
				$(".codecPicker-outbound", screen.dom).codecPicker({
					selected: e.codecs.codecs_outbound,
					inputName: "codecs_outbound"
				});
				$(".prioritySelect").val(e.codecs.priority_preset)
			});
			$.getREST("/cudatel/gui/system/ringback", function(e) {
				var g = a.find("tr.regularRingback"),
					c = g.find(".ringbackSelect");
				g = g.find(".customRingback");
				if(trueish(e.ringback.ringback_moh_id)) {
					g.empty().show().mohPicker({
						name: "ringback_moh_id",
						bbx_moh_id: e.ringback.ringback_moh_id
					});
					c.val("_CUSTOM_")
				}
				trueish(e.ringback.ringback) && c.val(e.ringback.ringback).trigger("change");
				g = a.find("tr.transferRingback");
				c = g.find(".ringbackSelect");
				g = g.find(".customRingback");
				if(trueish(e.ringback.transfer_ringback_moh_id)) {
					g.empty().show().mohPicker({
						name: "ringback_moh_id",
						bbx_moh_id: e.ringback.transfer_ringback_moh_id
					});
					c.val("_CUSTOM_")
				}
				trueish(e.ringback.transfer_ringback) && c.val(e.ringback.transfer_ringback).trigger("change")
			})
		}
	},
	hasettings: {
		build: function(a, e) {
			a.dom = $('<div class="screen panel only" id="screen-hasettings" help="ha_settings.html"><div></div></div>').appendTo(this);
			help_activate(a.dom);
			e();
			return a.dom
		},
		enter: function() {
			$("#screen-hasettings > div").haSettings()
		}
	},
	mailsettings: {
		build: function(a, e) {
			a.dom = $('<div id="screen-mailsettings" class="screen panel only smtpSettings" style="display: none;" help="smtp_settings.html"><div></div></div>').appendTo(this);
			a.dom.find("div").smtpSettings("build");
			help_activate(a.dom);
			e(a);
			return true
		},
		enter: function() {
			this.smtpSettings("enter");
			return true
		}
	},
	ldapsettings: {
		build: function(a, e) {
			return ajaxScreen("/cudatel/ajax-html/settings/ldap_screen.html", this, a, e)
		}
	},
	monitoring: {
		build: function(a, e) {
			var g = this;
			$.getTemplate("/cudatel/ajax-html/monitoring.html", function(c) {
				a.dom = $(c).addClass("screen").appendTo(g);
				help_activate(a.dom);
				e.call(undefined, a)
			});
			return true
		},
		enter: function() {
			$(">.eventList", this).eventList()
		}
	},
	backup: {
		build: function(a, e) {
			return ajaxScreen("/cudatel/ajax-html/settings/backup.html", this, a, e)
		}
	},
	updatesettings: {
		build: function(a, e) {
			var g = this;
			$.getTemplate("/cudatel/ajax-html/settings/updates_screen.html", function(c) {
				a.dom = $('<div id="screen-updatesettings" class="screen panel only" style="display: none;" help="system_updates_help.html"></div>').appendTo(g);
				a.dom.html(c);
				help_activate(a.dom);
				$("#updatesMainTable .progressBar", a.dom).bar({
					style: 'background-color: #004076; background-image: url("/cudatel/images/bar/bluedatel/ajax-html/settings/firstrun0.html", function(c) {
				a.dom = $('<div id="screen-firstrun0" class="screen panel only" style="display: none;"></div>').appendTo(g);
				a.dom.html(c);
				a.dom.find(".nextStep").one("click", function(d) {
					d.preventDefault();
					$.putREST("/cudatel/gui/system/firstrun", {
						step: 1
					}, function() {
						location.reload()
					})
				});
				e(a)
			});
			return true
		}
	},
	firstrun1: {
		build: function(a, e) {
			var g = this;
			$.getTemplate("/cudatel/ajax-html/settings/firstrun1.html", function(c) {
				a.dom = $('<div id="screen-firstrun1" class="screen panel only" style="display: none;"></div>').appendTo(g);
				a.dom.html(c);
				a.dom.find(".networkSettings").networkSettings();
				a.dom.one("submitted", function(d) {
					d.preventDefault();
					$.putREST("/cudatel/gui/system/firstrun", {
						step: 2
					}, function() {
						location.reload()
					})
				});
				e(a)
			});
			return true
		}
	},
	firstrun2: {
		build: function(a, e) {
			var g = this;
			$.getTemplate("/cudatel/ajax-html/settings/firstrun2.html", function(c) {
				a.dom = $('<div id="screen-firstrun2" class="screen panel only" style="display: none;"></div>').appendTo(g);
				a.dom.html(c);
				a.dom.find(".activationWidget").activation();
				a.dom.bind("activated", function() {
					a.dom.find(".isActivated").show();
					a.dom.find(".isNotActivated").hide()
				});
				a.dom.bind("notactivated", function() {
					a.dom.find(".isActivated").hide();
					a.dom.find(".isNotActivated").show()
				});
				$(".skipActivationLink, .isActivated", a.dom).bind("click", function(d) {
					d.preventDefault();
					$.putREST("/cudatel/gui/system/firstrun", {
						step: 3
					}, function() {
						location.reload()
					})
				});
				e(a)
			});
			return true
		}
	},
	firstrun3: {
		build: function(a, e) {
			var g = this;
			$.getTemplate("/cudatel/ajax-html/settings/firstrun3.html", function(c) {
				a.dom = $('<div id="screen-firstrun3" class="screen panel only" style="display: none;"></div>').appendTo(g);
				a.dom.html(c);
				setTimeout(function() {
					$(".progressBar", a.dom).bar({
						style: "background-color: #004076;",
						animate: false
					})
				}, 50);
				$(".continue", a.dom).bind("click", function() {
					$.putREST("/cudatel/gui/system/firstrun", {
						step: 4
					}, function() {
						location.reload()
					})
				});
				$.getREST("/cudatel/gui/jsoncache/cache?channel=update_wrapper", function(d) {
					var b = $(".installScreenUpdatesGeneral", a.dom);
					$(".installScreenGeneralVersion", a.dom).text(d.new_version);
					if(d.new_version && d.new_version > d.system_version) {
						b.addClass("startReady");
						$(".startDownloadButton", a.dom).bind("click", function(f) {
							f.preventDefault();
							settings_startDownload("stable")
						});
						$(".stopDownloadButton", a.dom).bind("click", function(f) {
							f.preventDefault();
							settings_stopDownload("stable")
						});
						$(".installUpdateButton", a.dom).bind("click", function(f) {
							f.preventDefault();
							settings_installUpdate("stable")
						});
						$(window).bind("meteor_update_status", function(f, j) {
							if(j.json.download_not_available) {
								b.removeClass("inprogress downloadReady startReady").addClass("noop");
								$(".progressBar", a.dom).hide()
							} else if(j.json.error) {
								b.removeClass("inprogress downloadReady startReady").addClass("noop");
								$(".noopMessage", a.dom).text("Error: " + j.json.error);
								$(".progressBar", a.dom).hide()
							} else {
								if(j.json.download_canceled) {
									b.addClass("startReady").removeClass("inprogress downloadReady noop");
									b.find(".progressBar").setBar(0)
								}
								if(j.json.download_progress) {
									b.removeClass("downloadReady noop startReady").addClass("inprogress");
									a.dom.find(".progressBar:visible").setBarOpts({
										halt: false
									});
									a.dom.find(".progressBar:visible").setBar(j.json.download_progress / 100);
									a.dom.find(".progressText").text(j.json.download_progress + "%")
								}
								if(j.json.download_complete) {
									b.removeClass("startReady downloadReady").addClass("inprogress");
									$(".progressText", a.dom).html("Verifying download.<img src='/cudatel/images/wait.gif'/>")
								}
								j.json.download_verified && b.removeClass("startReady inprogress noop").addClass("downloadReady")
							}
						})
					} else {
						b.addClass("noop").removeClass("inprogress startReady downloadReady");
						$(".progressBar", a.dom).hide();
						d.activated == 0 && $(".noopMessage", a.dom).text("Your CudaTel is not activated and is therefore unable to obtain updates.")
					}
					e(a)
				})
			});
			return true
		}
	},
	firstrun4: {
		build: function(a, e) {
			var g = this;
			$.getTemplate("/cudatel/ajax-html/settings/firstrun4.html", function(c) {
				a.dom = $('<div id="screen-firstrun4" class="screen panel only" style="display: none;"></div>').appendTo(g);
				a.dom.html(c);
				e(a);
				$.getREST("/cudatel/gui/system/network", function(d) {
					var b = "<tt>http://" + d.network.prov_lan_ip + "/provision/</tt>";
					if(d.network.external_inet_ip && d.network.external_inet_ip != "0.0.0.0") b += "(within your LAN) or <tt>http://" + d.network_external_inet_ip + "/provision/</tt> (outside your LAN)";
					a.dom.find(".provisioningURL").html(b)
				})
			});
			return true
		},
		afterBuild: function() {
			$("form.adminPassword", this).formModule({
				dirty: function(a) {
					return a.new_password == a.new_password_confirm && a.new_password != ""
				}
			});
			this.superForm({
				button: $("button.closeInstallation", this)
			}).bind("success", function() {
				$.putREST("/cudatel/gui/system/firstrun", {
					step: 5
				}, function() {
					$(window).unbind("hashchange.nav");
					location.replace("#");
					location.reload()
				})
			});
			$("#exts").extensionBlockMgr()
		}
	},
	diags: {
		build: function(a, e) {
			a.dom = $('<div id="screen-diags" class="screen only panel" help="diags.html"><h2>Diagnostic Tests</h2><div class="diagsBody"></div></div>').appendTo(this);
			help_activate(a.dom);
			$.getTemplate("/cudatel/ajax-html/settings/diags.html", function(g) {
				g = $(g);
				a.dom.children(".diagsBody").empty().append(g);
				g.ajaxForm({
					beforeSerialize: function(c) {
						if(!c.find(":checked")[0]) {
							showBlanker({
								title: "Nothing Selected",
								text: "No tests were selected. Click the checkmark next to one or more tests to continue.",
								buttons: ["OK"]
							});
							return false
						}
					},
					success: function() {
						showBlanker({
							icon: false,
							title: "Running Diagnostics",
							text: "Information in the table will update as the tests you selected are run.",
							buttons: ["OK"]
						})
					},
					accept: "application/json"
				});
				e(a)
			});
			return a.dom
		},
		enter: function() {
			$(".diagsTable", this).diagsTable()
		}
	}
});
initOverlaysList({
	user: {
		help: "extension_edit_help.html",
		init: function(a, e) {
			var g = function() {
					$("form.module:not(.voicemailEmail)", a).formModule({
						formData: {
							bbx_user_id: e.bbx_user_id
						}
					});
					$("form.module.voicemailEmail", a).formModule({
						formData: {
							bbx_user_id: e.bbx_user_id
						},
						preSubmit: function(b) {
							voicemailEmailPreSubmit(b);
							return false
						}
					})
				},
				c = function() {
					a.find(".callRecording").callRecording("bbx_user_id", {
						bbx_user_id: e.bbx_user_id,
						callback: g
					})
				},
				d = {
					action: "detail",
					bbx_extension_id: e.bbx_extension_id,
					bbx_user_id: e.bbx_user_id
				};
			d[e.key] = e[e.key];
			overlayLoadClassic("/cudatel/gui/configure/dynamic/users", d, a, c);
			a.bind("refreshDetail refreshUsers", function() {
				loadInto(a, "/cudatel/gui/configure/dynamic/users", "POST", {
					action: "detail",
					bbx_user_id: e.bbx_user_id
				}, c)
			})
		}
	},
	user_create: {
		init: function(a) {
			overlayLoadClassic("/cudatel/gui/configure/dynamic/new_panels", {
				type: "bbx_user_id"
			}, a)
		},
		fillHeight: true
	},
	group: {
		help: "group_type_help.html",
		init: function(a, e) {
			var g = function() {
					$("form.module", a).formModule({
						formData: {
							bbx_group_id: e.bbx_group_id
						}
					})
				},
				c = function() {
					a.find(".callRecording").callRecording("bbx_group_id", {
						bbx_group_id: e.bbx_group_id,
						callback: g
					})
				},
				d = {
					action: "detail",
					template: "detail",
					bbx_extension_id: e.bbx_extension_id
				};
			d[e.key] = e[e.key];
			overlayLoadClassic("/cudatel/gui/configure/dynamic/groups", d, a, c);
			a.parent().bind("refreshDetail", function() {
				loadInto(a, "/cudatel/gui/configure/dynamic/groups", "POST", {
					bbx_group_id: e.bbx_group_id,
					detail_extension_id: e.bbx_extension_id,
					action: "detail",
					template: "detail"
				}, c)
			})
		}
	},
	group_create: {
		init: function(a) {
			overlayLoadClassic("/cudatel/gui/configure/dynamic/new_panels", {
				type: "bbx_group_id"
			}, a)
		}
	},
	queue: {
		help: "queue_edit_help.html",
		init: function(a, e) {
			$.getJSONCached("/cudatel/gui/permission/user_permissions", {}, 1E3, function(g) {
				a.bind("refreshDetail", function() {
					$.getREST("/cudatel/gui/extension/queue/queue", e, function(c) {
						var d = c.queue,
							b = $('<div class="queueDetailBody"><div class="detailMasthead"></div><div class="queueDetail"></div></div>'),
							f = {
								name: d.bbx_queue_name,
								number: d.bbx_extension_value,
								prefix: "bbx_queue",
								bbx_queue_id: d.bbx_queue_id,
								bbx_extension_id: d.bbx_extension_id,
								restURL: "/cudatel/gui/queue2/queue",
								buttons: []
							};
						g.user_permissions.EDIT_QUEUE && f.buttons.push("rename");
						g.user_permissions.EDIT_EXTENSION && d.bbx_extension_block_begin == d.bbx_extension_block_end && !d.flag_external && f.buttons.push("migrate");
						g.user_permissions.DELETE_QUEUE && f.buttons.push("delete");
						$(".queueDetail", b).queueDetail({
							jsQueue: c.queue
						});
						$(".detailMasthead", b).extensionDetailMasthead(f);
						a.empty().append(b)
					})
				}).triggerHandler("refreshDetail")
			})
		}
	},
	queue_create: {
		init: function(a) {
			overlayLoadClassic("/cudatel/gui/configure/dynamic/new_panels", {
				type: "bbx_queue_id"
			}, a)
		}
	},
	router: {
		help: "router_edit_help.html",
		init: function(a, e) {
			var g = {
				action: "detail",
				template: "router",
				bbx_extension_id: e.bbx_extension_id
			};
			g[e.key] = e[e.key];
			overlayLoadClassic("/cudatel/gui/configure/dynamic/detail", g, a);
			a.parent().bind("refreshDetail", function() {
				loadInto(a, "/cudatel/gui/configure/dynamic/detail", "POST", {
					bbx_router_id: e.bbx_router_id,
					bbx_extension_id: e.bbx_extension_id,
					action: "detail",
					template: "router",
					type: "router"
				})
			})
		}
	},
	router_create: {
		init: function(a) {
			overlayLoadClassic("/cudatel/gui/configure/dynamic/new_panels", {
				type: "bbx_router_id"
			}, a)
		}
	},
	valet_parking: {
		help: "parking.html",
		init: function(a, e) {
			$(a).empty().valetParking({
				bbx_valet_parking_id: e.bbx_valet_parking_id
			})
		}
	},
	valet_parking_create: {
		init: function(a) {
			$(a).empty().valetParkingCreate()
		}
	},
	conference: {
		help: "conference_edit_help.html",
		init: function(a, e) {
			var g = {
				action: "detail",
				bbx_extension_id: e.bbx_extension_id
			};
			g[e.key] = e[e.key];
			overlayLoadClassic("/cudatel/gui/configure/dynamic/conferences", g, a);
			a.parent().bind("refreshDetail", function() {
				loadInto(a, "/cudatel/gui/configure/dynamic/conferences", "POST", {
					bbx_conference_id: e.bbx_conference_id,
					detail_extension_id: e.bbx_extension_id,
					action: "detail"
				})
			})
		}
	},
	conference_create: {
		init: function(a) {
			overlayLoadClassic("/cudatel/gui/configure/dynamic/new_panels", {
				type: "bbx_conference_id"
			}, a)
		}
	},
	auto_attendant: {
		help: "auto_attendant_edit_help.html",
		init: function(a, e) {
			var g = {
				action: "detail",
				bbx_extension_id: e.bbx_extension_id
			};
			g[e.key] = e[e.key];
			overlayLoadClassic("/cudatel/gui/configure/dynamic/autoattends", g, a);
			a.parent().bind("refreshDetail", function() {
				loadInto(a, "/cudatel/gui/configure/dynamic/autoattends", "POST", {
					bbx_auto_attendant_id: e.bbx_auto_attendant_id,
					detail_extension_id: e.bbx_extension_id,
					action: "detail"
				})
			})
		}
	},
	auto_attendant_create: {
		init: function(a) {
			overlayLoadClassic("/cudatel/gui/configure/dynamic/new_panels", {
				type: "bbx_auto_attendant_id"
			}, a)
		}
	},
	auto_attendant_non_interactive: {
		init: function(a, e) {
			var g = {
				action: "detail",
				template: "detail_v2",
				bbx_extension_id: e.bbx_extension_id
			};
			g[e.key] = e[e.key];
			overlayLoadClassic("/cudatel/gui/configure/dynamic/callflow", g, a)
		}
	},
	phone: {
		help: "unassignedphone_type_help.html",
		init: function(a, e) {
			a.empty().phoneDetail(e)
		}
	},
	gateway_edit: {
		help: "gateway_edit_help.html",
		init: function(a, e) {
			a.empty().gatewayEdit({
				bbx_provider_gateway_id: e.bbx_provider_gateway_id
			})
		}
	},
	tdm_analog_edit: {
		help: "tdm_analog_edit_help.html",
		init: function(a, e) {
			a.empty().tdmAnalogEdit(e.bbx_tdm_card_port_id)
		}
	},
	tdm_digital_edit: {
		help: "tdm_digital_edit_help.html",
		init: function(a, e) {
			a.empty().tdmDigitalEdit(e.bbx_tdm_card_port_id)
		}
	},
	new_sip_gateway: {
		help: "new_provider_gateway_help.html",
		fillHeight: true,
		init: function(a) {
			a.empty().gatewayCreate()
		}
	},
	phone_edit: {
		fillHeight: true,
		help: "phone_edit.html",
		init: function(a, e) {
			a.empty().phoneEdit(e)
		},
		close: function() {}
	},
	button_line_edit: {
		fillHeight: true,
		init: function(a, e) {
			a.empty().buttonLineEdit(e)
		}
	},
	line_forwards: {
		fillHeight: true,
		init: function(a, e) {
			a.empty().buttonLineForwards(e)
		}
	},
	line_reg_info: {
		fillHeight: true,
		init: function(a, e) {
			a.empty().buttonLineRegInfo(e)
		}
	},
	phone_add: {
		fillHeight: true,
		init: function(a, e) {
			a.empty().phoneAdd(e)
		}
	},
	extension_create: {
		init: function(a, e) {
			overlayLoadClassic("/cudatel/gui/configure/dynamic/new_panels", {
				type: e.type
			}, a)
		}
	},
	user_rename: {
		init: function(a, e) {
			overlayLoadClassic("/cudatel/gui/configure/dynamic/common_ops", {
				action: "form",
				form: "rename_user",
				form_url: "users",
				form_action: "modify_contact",
				obj_type: "user",
				obj_id: e.obj_id,
				bbx_contact_id: e.bbx_contact_id,
				ext_id: e.ext_id,
				first: e.first,
				last: e.last
			}, a)
		}
	},
	user_delete: {
		init: function(a, e) {
			extraText = {
				user: "This will remove all of the user's Address Book entries, Voice Mail, and Fax files."
			};
			var g = {
				action: "form",
				form: "delete",
				form_url: "users",
				form_action: "remove",
				obj_type: "user",
				obj_id: e.obj_id,
				bbx_contact_id: e.bbx_contact_id,
				ext_id: e.ext_id,
				obj_name: e.obj_name
			};
			if(e.extra_text && extraText[e.extra_text]) g.extra_text = extraText[e.extra_text];
			overlayLoadClassic("/cudatel/gui/configure/dynamic/common_ops", g, a)
		}
	},
	user_migrate: {
		init: function(a, e) {
			overlayLoadClassic("/cudatel/gui/configure/dynamic/common_ops", {
				action: "form",
				form: "migrate",
				form_url: "extensions",
				form_action: "migrate",
				obj_type: "user",
				obj_id: e.obj_id,
				ext_id: e.ext_id
			}, a)
		}
	},
	group_rename: {
		init: function(a, e) {
			overlayLoadClassic("/cudatel/gui/configure/dynamic/common_ops", {
				action: "form",
				form: "rename",
				form_url: "groups",
				form_action: "modify",
				obj_type: "group",
				obj_id: e.obj_id,
				current: e.current
			}, a)
		}
	},
	group_delete: {
		init: function(a, e) {
			overlayLoadClassic("/cudatel/gui/configure/dynamic/common_ops", {
				action: "form",
				form: "delete",
				form_url: "groups",
				form_action: "remove",
				obj_type: "group",
				obj_id: e.obj_id,
				ext_id: e.ext_id,
				obj_name: e.obj_name
			}, a)
		}
	},
	group_migrate: {
		init: function(a, e) {
			overlayLoadClassic("/cudatel/gui/configure/dynamic/common_ops", {
				action: "form",
				form: "migrate",
				form_url: "extensions",
				form_action: "migrate",
				obj_type: "group",
				obj_id: e.obj_id,
				ext_id: e.ext_id
			}, a)
		}
	},
	group_recording_policy: {
		init: function(a, e) {
			overlayLoadClassic("/cudatel/gui/configure/dynamic/common_ops", {
				action: "form",
				form: "recpol",
				form_url: "groups",
				form_action: "recording_policy",
				obj_type: "group",
				obj_id: e.obj_id,
				ext_id: e.ext_id
			}, a)
		}
	},
	valet_parking_rename: {
		init: function(a, e) {
			overlayLoadClassic("/cudatel/gui/configure/dynamic/common_ops", {
				action: "form",
				form: "rename",
				form_url: "valet_parking",
				form_action: "modify",
				obj_type: "valet_parking",
				obj_id: e.obj_id,
				ext_id: e.ext_id,
				current: e.current
			}, a)
		}
	},
	valet_parking_delete: {
		init: function(a, e) {
			overlayLoadClassic("/cudatel/gui/configure/dynamic/common_ops", {
				action: "form",
				form: "delete",
				form_url: "valet_parking",
				form_action: "remove",
				obj_type: "valet_parking",
				obj_id: e.obj_id,
				ext_id: e.ext_id,
				obj_name: e.obj_name
			}, a)
		}
	},
	conference_rename: {
		init: function(a, e) {
			overlayLoadClassic("/cudatel/gui/configure/dynamic/common_ops", {
				action: "form",
				form: "rename",
				form_url: "conferences",
				form_action: "modify",
				obj_type: "conference",
				obj_id: e.obj_id,
				ext_id: e.ext_id,
				current: e.current
			}, a)
		}
	},
	conference_delete: {
		init: function(a, e) {
			overlayLoadClassic("/cudatel/gui/configure/dynamic/common_ops", {
				action: "form",
				form: "delete",
				form_url: "conferences",
				form_action: "remove",
				obj_type: "conference",
				obj_id: e.obj_id,
				ext_id: e.ext_id,
				obj_name: e.obj_name
			}, a)
		}
	},
	conference_migrate: {
		init: function(a, e) {
			overlayLoadClassic("/cudatel/gui/configure/dynamic/common_ops", {
				action: "form",
				form: "migrate",
				form_url: "conferencess",
				form_action: "migrate",
				obj_type: "conference",
				obj_id: e.obj_id,
				ext_id: e.ext_id
			}, a)
		}
	},
	phone_delete: {
		init: function(a, e) {
			overlayLoadClassic("/cudatel/gui/configure/dynamic/common_ops", {
				action: "form",
				form: "delete",
				form_url: "phones",
				form_action: "remove",
				obj_type: "phone",
				obj_id: e.obj_id,
				ext_id: e.ext_id,
				obj_name: e.obj_name
			}, a)
		}
	},
	phone_migrate: {
		init: function(a, e) {
			overlayLoadClassic("/cudatel/gui/configure/dynamic/common_ops", {
				action: "form",
				form: "migrate",
				form_url: "extensions",
				form_action: "migrate",
				obj_type: "phone",
				obj_id: e.obj_id,
				ext_id: e.ext_id
			}, a)
		}
	},
	autoattendant_rename: {
		init: function(a, e) {
			overlayLoadClassic("/cudatel/gui/configure/dynamic/common_ops", {
				action: "form",
				form: "rename",
				form_url: "autoattends",
				form_action: "rename",
				obj_type: "auto_attendant",
				obj_id: e.obj_id,
				ext_id: e.ext_id,
				current: e.current
			}, a)
		}
	},
	autoattendant_delete: {
		init: function(a, e) {
			overlayLoadClassic("/cudatel/gui/configure/dynamic/common_ops", {
				action: "form",
				form: "delete",
				form_url: "autoattends",
				form_action: "delete",
				obj_type: "auto_attendant",
				obj_id: e.obj_id,
				ext_id: e.ext_id,
				obj_name: e.obj_name
			}, a)
		}
	},
	autoattendant_migrate: {
		init: function(a, e) {
			overlayLoadClassic("/cudatel/gui/configure/dynamic/common_ops", {
				action: "form",
				form: "migrate",
				form_url: "autoattends",
				form_action: "migrate",
				obj_type: "auto_attendant",
				obj_id: e.obj_id,
				ext_id: e.ext_id
			}, a)
		}
	},
	extension_rename: {
		init: function(a) {
			$.getTemplate("/cudatel/ajax-html/operations/rename.html", function(e) {
				a.html(e);
				setTimeout(function() {
					a.parent().triggerHandler("popup_ready")
				}, 25)
			})
		}
	},
	extension_delete: {
		init: function(a) {
			$.getTemplate("/cudatel/ajax-html/operations/delete.html", function(e) {
				a.html(e);
				setTimeout(function() {
					a.parent().triggerHandler("popup_ready")
				}, 25)
			})
		}
	},
	extension_migrate: {
		init: function(a) {
			$.getTemplate("/cudatel/ajax-html/operations/migrate.html", function(e) {
				a.html(e);
				setTimeout(function() {
					a.parent().triggerHandler("popup_ready")
				}, 25)
			})
		}
	},
	router_rename: {
		init: function(a, e) {
			overlayLoadClassic("/cudatel/gui/configure/dynamic/common_ops", {
				action: "form",
				form: "rename",
				form_url: "routers",
				form_action: "modify",
				obj_type: "router",
				obj_id: e.obj_id,
				ext_id: e.ext_id,
				current: e.current
			}, a)
		}
	},
	router_delete: {
		init: function(a, e) {
			overlayLoadClassic("/cudatel/gui/configure/dynamic/common_ops", {
				action: "form",
				form: "delete",
				form_url: "routers",
				form_action: "delete",
				obj_type: "router",
				obj_id: e.obj_id,
				ext_id: e.ext_id,
				obj_name: e.obj_name
			}, a)
		}
	},
	router_migrate: {
		init: function(a, e) {
			overlayLoadClassic("/cudatel/gui/configure/dynamic/common_ops", {
				action: "form",
				form: "migrate",
				form_url: "extensions",
				form_action: "migrate",
				obj_type: "router",
				obj_id: e.obj_id,
				ext_id: e.ext_id
			}, a)
		}
	},
	gateway_rename: {
		init: function(a, e) {
			overlayLoadClassic("/cudatel/gui/configure/dynamic/common_ops", {
				action: "form",
				form: "rename",
				form_url: "gateways",
				form_action: "rename",
				obj_type: "provider_gateway",
				obj_id: e.obj_id,
				current: e.current
			}, a)
		}
	},
	gateway_delete: {
		init: function(a, e) {
			overlayLoadClassic("/cudatel/gui/configure/dynamic/common_ops", {
				action: "form",
				form: "delete",
				form_url: "gateways",
				form_action: "remove",
				obj_type: "provider_gateway",
				obj_id: e.obj_id,
				obj_name: e.obj_name
			}, a)
		}
	},
	forward: {
		init: function(a, e) {
			var g, c = "/cudatel/gui/fax/forward";
			if(e.bbx_fax_inbound_id) g = "bbx_fax_inbound_id";
			else if(e.bbx_fax_outbound_id) g = "bbx_fax_outbound_id";
			else if(e.voicemail_msgs_id) {
				g = "voicemail_msgs_id";
				c = "/cudatel/gui/voicemail/forward"
			}
			$.getTemplate("/cudatel/ajax-html/forward_form.html", function(d) {
				var b = $(d);
				b.attr("action", c);
				$(".submit", b).disable("invalid");
				b.append($('<input type="hidden" name="' + g + '" />').val(e[g]));
				$(".destination", b).extensionPicker({
					searchTypes: ["user", "group"],
					hiddenName: "bbx_object",
					hiddenFormat: "{object_type}:{object_id}",
					autoSelectFirst: true
				}).bind("selection", function() {
					$(".submitButton").enable("invalid")
				}).bind("noselection", function() {
					$(".submitButton", b).disable("invalid")
				});
				a.html(b);
				b.ajaxForm({
					dataType: "json",
					success: function() {
						b.trigger("close_request")
					}
				});
				setTimeout(function() {
					a.parent().triggerHandler("popup_ready")
				}, 25)
			})
		}
	},
	demo_splash: {
		init: function(a) {
			$.getTemplate("/cudatel/ajax-html/demosplash.html", function(e) {
				a.html(e);
				setTimeout(function() {
					a.parent().triggerHandler("popup_ready")
				}, 25)
			})
		}
	},
	eavesdrop: {
		init: function(a) {
			$.getTemplate("/cudatel/ajax-html/eavesdrop.html", function(e) {
				a.html(e);
				setTimeout(function() {
					a.parent().triggerHandler("popup_ready")
				}, 25)
			})
		}
	},
	routemanager: {
		fillHeight: true,
		init: function(a, e) {
			a.routeManager(e);
			a.parent().triggerHandler("popup_ready")
		}
	},
	routemapmanager: {
		fillHeight: true,
		init: function(a) {
			a.bind("close_request", function(e) {
				e.stopPropagation()
			});
			$.get("/cudatel/ajax-html/routing.html", function(e) {
				a.html(e);
				$(".routingList", a).routeMapList();
				a.parent().triggerHandler("popup_ready")
			})
		}
	},
	ldap_credentials: {
		fillHeight: true,
		init: function(a) {
			$.getTemplate("/cudatel/ajax-html/settings/ldap_credentials.html", function(e) {
				var g = $(e);
				a.html(g);
				g.find("button[type=submit]").disable("no-id");
				$.getREST("/cudatel/gui/sync/server", {}, function(c) {
					c.servers[0].bbx_sync_server_bind_dn && g.find("[name=bbx_sync_server_bind_dn]").val(c.servers[0].bbx_sync_server_bind_dn);
					g.find("[name=bbx_sync_server_id]").val(c.servers[0].bbx_sync_server_id);
					g.find("button[type=submit]").enable("no-id")
				});
				g.find("button.test").bind("click", function() {
					$.postREST("/cudatel/gui/sync/test", g.serializeObject(), function(c) {
						trueish(c.test) ? g.find("button[type=submit]").enable("not-tested") : alert("There was a problem connecting to the Active Directory server. Please verify your credentials and test again.")
					})
				});
				g.find("input").bind("change keyup", function() {
					var c = g.find("button[type=submit]");
					c.disable("not-tested");
					var d = g.find(".verifyPassword");
					if(d.eq(0).val() === d.eq(1).val()) {
						c.enable("not-matching");
						g.find(".not-matching").hide()
					} else {
						c.disable("not-matching");
						g.find(".not-matching").show()
					}
				}).eq(0).trigger("change");
				g.ajaxForm({
					accept: "application/json",
					type: "PUT",
					complete: function() {
						g.trigger("close_request")
					}
				})
			})
		}
	}
});

function blankerCancel() {
	$(this).trigger("closeBlanker")
}
//need
(function(a) {
	var e = [];
	showBlanker = function(g) {
		g = a.extend(true, {}, {
			spinner: false,
			flyby: false,
			shade: true,
			icon: "/cudatel/images/warning_large.png",
			iconCSS: false,
			title: "",
			text: "",
			buttons: ["OK"],
			callbacks: [function() {
				a(this).trigger("closeBlanker")
			}],
			ping: false,
			pingTime: 2E4,
			modal: false
		}, g);
		var c = false,
			d = a('<div class="blanker"></div>').bind("closeBlanker", function() {
				c = true;
				var b = this;
				if(e.length && e[e.length - 1].dom[0] == b) {
					e.pop();
					e.length && e[e.length - 1].dom.show()
				} else e.length && a.each(e, function(f) {
					if(this.dom[0] == b) {
						e.splice(f, 1);
						return false
					}
				});
				a(this).remove()
			}).appendTo("body");
		a.getTemplate("/cudatel/ajax-html/blanker.html", function(b) {
			if(!c) {
				d.append(b);
				d.data("params", g);
				var f = {
					dom: d,
					params: g
				};
				b = true;
				if(e.length) if(e[e.length - 1].params.modal) for(var j = e.length - 1; j >= 0; j--) {
					if(!e[j].modal) {
						e.splice(j, 0, f);
						b = false;
						break
					}
				} else e.push(f);
				else e.push(f);
				if(g.flyby) {
					d.bind("flyby", function(o, q) {
						a(".flyby", d).text(q)
					});
					typeof g.flyby == "string" && a(".flyby", d).text(g.flyby)
				} else a(".flyby", d).remove();
				g.shade || a(".blankerBackground", d).remove();
				if(g.spinner) {
					a('<img src="/cudatel/images/bigwait.gif" width="100" height="100" alt="Please wait..." class="blankerSpinner" />').appendTo(a(".blankerIcons", d));
					if(g.icon) {
						f = a('<img src="' + g.icon + '" class="blankerIcon" />').appendTo(a(".blankerIcons", d));
						g.iconCSS && f.css(g.iconCSS)
					}
				} else if(g.icon) {
					f = a('<img src="' + g.icon + '" class="blankerIconSimple" />').appendTo(a(".blankerIcons", d));
					g.iconCSS && f.css(g.iconCSS)
				} else d.addClass("noIcon");
				if(typeof g.buttons == "string") g.buttons = [g.buttons];
				if(typeof g.callbacks == "function") g.callbacks = [g.callbacks];
				if(g.buttons && g.buttons.length) {
					g.callbacks = g.callbacks || [g.callbacks];
					a.each(g.buttons, function(o, q) {
						var v = a('<button type="button"></button>').text(q).appendTo(a(".buttons", d));
						if(g.callbacks[o]) {
							var x = g.callbacks[o];
							v.bind("click", function() {
								x.call(this, o)
							})
						}
					})
				} else a(".buttons", d).remove();
				a(".title", d).text(g.title);
				a(".content", d).text(g.text);
				if(b) {
					a("body > .blanker").hide();
					d.show()
				}
				if(typeof g.ping == "function" && g.pingTime) {
					var n = true;
					d.bind("pingStop", function() {
						n = false
					});
					d.bind("pingStart", function() {
						n = true
					});
					var l = setInterval(function() {
						if(d.closest("body")[0]) n && g.ping.call(d);
						else clearInterval(l)
					}, g.pingTime)
				}
			}
		});
		return d
	}
})(jQuery);
var ldapFlyIDNum = 0,
	blankerBacklog = [];

function showUploadBlanker(a) {
	a = $.extend({}, {
		title: "Upload in Progress",
		text: "Please wait while your file is uploaded...",
		modal: true,
		spinner: true,
		icon: "/cudatel/images/blankers/upload_blanker.png",
		iconCSS: {
			top: "60px",
			left: "75px"
		},
		buttons: false
	}, a || {});
	return showBlanker(a)
}
(function() {
	var a;
	pushLDAPFly = function(e) {
		a && a.trigger("flyby", e)
	};
	showLDAPBlanker = function() {
		a || (a = showBlanker({
			title: "Active Directory Synchronization in Progress",
			text: "To protect data integrity, the administrative interface is locked while the synchronization is in progress.",
			spinner: true,
			flyby: true,
			icon: "/cudatel/images/ldap_large.png",
			iconCSS: {
				top: "50px",
				left: "50px"
			},
			buttons: ["Log Out"],
			callbacks: [function() {
				logout()
			}]
		}))
	};
	hideLDAPBlanker = function() {
		a.trigger("closeBlanker");
		a = false
	}
})();
(function() {
	var a = false;
	showRestartBlanker = function(e, g, c, d) {
		if(!a) {
			a = showBlanker({
				title: e || "System Restart",
				text: g || 'Please wait a moment while the system restarts. If the screen fails to respond, you may need to click your browser\'s "Refresh" or "Reload" button.',
				buttons: false,
				modal: true,
				icon: d,
				ping: function() {
					var b = function() {
							setTimeout(function() {
								location.reload()
							}, Math.floor(Math.random() * 5E3))
						};
					$.getREST("/cudatel/gui/sysinfo/ok", {}, {
						success: b,
						error: function(f) {
							f.status == 401 && f.getResponseHeader("X-Reason") != "Role Failed" && b()
						}
					})
				},
				pingTime: c || 1E4
			});
			a.bind("closeBlanker", function() {
				a = false
			})
		}
	}
})();
$(window).bind("meteor_system_restart", function(a, e) {
	e.json.lockdown_start && showRestartBlanker()
});
var HELP_PATH = AJAXHTML_PATH + "help/en_US/",
	HELP_TIMEOUT = 3E3,
	helpClearTimeout = false;
$(window).bind("screenBuilt", function(a, e) {
	var g = $("#" + e.screen.div);
	help_activate(g)
});

function help_activate(a, e) {
	e = $.extend({}, {
		image: "/cudatel/images/help_icon_heavy.png",
		width: "35",
		height: "20"
	}, e);
	a.find("[help]").andSelf().filter("[help]").not(".helpHere, .manualHelp").each(function() {
		($(this).find(".panelInner")[0] ? $(this).find(".panelInner") : $(this)).prepend(sprintf('<a class="helpLink panelAuto" href="%s"><img src="%s" width="%s" height="%s" alt="Help" /></a>', HELP_PATH + $(this).attr("help"), e.image, e.width, e.height))
	});
	a.find(".helpHere").each(function() {
		$(this).html(sprintf('<a class="helpLink panelAuto" href="%s"><img src="%s" width="%s" height="%s" alt="Help" /></a>', HELP_PATH + $(this).attr("help"), e.image, e.width, e.height))
	});
	a.find("a.helpLink").each(function() {
		help_bindElement(this)
	})
}

function help_bindElement(a, e) {
	var g = $(a);
	g.bind("click", function(c) {
		$(".helpPopupWrap").remove();
		var d = $('<div class="helpPopupWrap"><div class="helpPopup"><img class="helpClose" src=""/cudatel/images/help_close.png" width="15" height="15" alt="Close" /><img class="helpTack" src="/cudatel/images/help_tack_up.png" width="15" height="15" alt="tack" /><div class="helpContent">Loading...</div></div></div>').appendTo("body");
		d.css({
			top: $(this).offset().top,
			left: $(this).offset().left + $(this).width()
		});
		d.find(".helpClose").bind("click", function() {
			helpClearTimeout && clearTimeout(helpClearTimeout);
			$(this).closest(".helpPopupWrap").remove()
		});
		d[0].helpParent = this;
		d.bind("mouseleave", function() {
			var b = $(this).closest(".helpPopupWrap");
			helpClearTimeout && clearTimeout(helpClearTimeout);
			helpClearTimeout = setTimeout(function() {
				b.noop", function() {
						n = false
					});
					d.bind("pingStart", function() {
						n = true
					});
					var l = setInterval(function() {
						if(d.closest("body")[0]) n && g.ping.call(d);
						else clearInterval(l)
					}, g.pingTime)
				}
			}
		});
		return d
	}
})(jQuery);
var ldapFlyIDNum = 0,
	blankerBacklog = [];

function showUploadBlanker(a) {
	a = $.extend({}, {
		title: "Upload in Progress",
		text: "Please wait while your file is uploaded...",
		modal: true,
		spinner: true,
		icon: "/cudatel/images/blankers/upload_blanker.png",
		iconCSS: {
			top: "60px",
			left: "75px"
		},
		buttons: false
	}, a || {});
	return showBlanker(a)
}
(function() {
	var a;
	pushLDAPFly = function(e) {
		a && a.trigger("flyby", e)
	};
	showLDAPBlanker = function() {
		a || (a = showBlanker({
			title: "Active Directory Synchronization in Progress",
			text: "To protect data integrity, the administrative interface is locked while the synchronization is in progress.",
			spinner: true,
			flyby: true,
			icon: "/cudatel/images/ldap_large.png",
			iconCSS: {
				top: "50px",
				left: "50px"
			},
			buttons: ["Log Out"],
			callbacks: [function() {
				logout()
			}]
		}))
	};
	hideLDAPBlanker = function() {
		a.trigger("closeBlanker");
		a = false
	}
})();
(function() {
	var a = false;
	showRestartBlanker = function(e, g, c, d) {
		if(!a) {
			a = showBlanker({
				title: e || "System Restart",
				text: g || 'Please wait a moment while the system restarts. If the screen fails to respond, you may need to click your browser\'s "Refresh" or "Reload" button.',
				buttons: false,
				modal: true,
				icon: d,
				ping: function() {
					var b = function() {
							setTimeout(function() {
								location.reload()
							}, Math.floor(Math.random() * 5E3))
						};
					$.getREST("/cudatel/gui/sysinfo/ok", {}, {
						success: b,
						error: function(f) {
							f.status == 401 && f.getResponseHeader("X-Reason") != "Role Failed" && b()
						}
					})
				},
				pingTime: c || 1E4
			});
			a.bind("closeBlanker", function() {
				a = false
			})
		}
	}
})();
$(window).bind("meteor_system_restart", function(a, e) {
	e.json.lockdown_start && showRestartBlanker()
});
var HELP_PATH = AJAXHTML_PATH + "help/en_US/",
	HELP_TIMEOUT = 3E3,
	helpClearTimeout = false;
$(window).bind("screenBuilt", function(a, e) {
	var g = $("#" + e.screen.div);
	help_activate(g)
});

function help_activate(a, e) {
	e = $.extend({}, {
		image: "/cudatel/images/help_icon_heavy.png",
		width: "35",
		height: "20"
	}, e);
	a.find("[help]").andSelf().filter("[help]").not(".helpHere, .manualHelp").each(function() {
		($(this).find(".panelInner")[0] ? $(this).find(".panelInner") : $(this)).prepend(sprintf('<a class="helpLink panelAuto" href="%s"><img src="%s" width="%s" height="%s" alt="Help" /></a>', HELP_PATH + $(this).attr("help"), e.image, e.width, e.height))
	});
	a.find(".helpHere").each(function() {
		$(this).html(sprintf('<a class="helpLink panelAuto" href="%s"><img src="%s" width="%s" height="%s" alt="Help" /></a>', HELP_PATH + $(this).attr("help"), e.image, e.width, e.height))
	});
	a.find("a.helpLink").each(function() {
		help_bindElement(this)
	})
}

function help_bindElement(a, e) {
	var g = $(a);
	g.bind("click", function(c) {
		$(".helpPopupWrap").remove();
		var d = $('<div class="helpPopupWrap"><div class="helpPopup"><img class="helpClose" src=""/cudatel/images/help_close.png" width="15" height="15" alt="Close" /><img class="helpTack" src="/cudatel/images/help_tack_up.png" width="15" height="15" alt="tack" /><div class="helpContent">Loading...</div></div></div>').appendTo("body");
		d.css({
			top: $(this).offset().top,
			left: $(this).offset().left + $(this).width()
		});
		d.find(".helpClose").bind("click", function() {
			helpClearTimeout && clearTimeout(helpClearTimeout);
			$(this).closest(".helpPopupWrap").remove()
		});
		d[0].helpParent = this;
		d.bind("mouseleave", function() {
			var b = $(this).closest(".helpPopupWrap");
			helpClearTimeout && clearTimeout(helpClearTimeout);
			helpClearTimeout = setTimeout(function() {
				b.not(".tacked").remove()
			}, HELP_TIMEOUT)
		});
		d.bind("mouseenter", function() {
			helpClearTimeout && clearTimeout(helpClearTimeout)
		});
		d.find("img.helpTack").bind("click", function() {
			helpClearTimeout && clearTimeout(helpClearTimeout);
			var b = $(this).closest(".helpPopupWrap");
			if(b.is(".tacked")) {
				b.removeClass("tacked");
				this.src = "/cudatel/images/help_tack_up.png"
			} else {
				b.addClass("tacked");
				this.src = "/cudatel/images/help_tack_down.png"
			}
		});
		$.ajax({
			type: "GET",
			dataType: "text",
			url: e || g.attr("href"),
			success: function(b) {
				d.find(".helpContent").html(b)
			},
			error: function() {
				d.find(".helpContent").html("Error loading help: " + (e || g.attr("href")))
			}
		});
		c.preventDefault()
	})
}
$(window).bind("debouncedresize", function() {
	$(".helpPopupWrap").each(function() {
		this.helpParent && $(this).css({
			top: $(this.helpParent).offset().top,
			left: $(this.helpParent).offset().left + $(this.helpParent).width()
		})
	})
});
var systemStatusChannel = {},
	statusGraphUpdateTimeout, statusChannelsTimeout, statusUpdateTimeout, providerStatusArray = [];

function builtStatusScreen() {
	$("#screen-status .statbar.horizontal").bar({
		style: "background-color: #004076; background-image: url(/cudatel/images/bar/blue_horiz.png);",
		animate: 5E3
	});
	$("#screen-status .statbar.line").setBarOpts({
		style: "background-color: transparent; background-image: none; border-right: 4px solid black",
		animate: 5E3
	});
	$("#screen-status .statbar.VMPercents").bar({
		direction: "vertical",
		bars: 3,
		animate: false,
		style: ["background-color: #00447c;", "background-color: #ff7a00;", "background-color: #000"]
	}).setBar(0, 0).setBar(0, 1).setBar(0, 2);
	$("#statusScreenProviders").gatewayStatus()
}
systemStatusChannel = {
	firmware_storage: 0,
	sys_storage: 0,
	voicemail_storage: 0
};

function updateSystemStatus(a) {
	systemStatusChannel = $.extend(true, systemStatusChannel, a);
	if($("#screen-status:visible")[0]) {
		$("#CPUFanRPM").text(parseIntNaNChar(systemStatusChannel.cpu_fan, "0"));
		$("#systemFanRPM").text(parseIntNaNChar(systemStatusChannel.system_fan, "0"));
		parseInt(systemStatusChannel.cpu_load) > 100 ? $("#CPULoadPercent").text("100") : $("#CPULoadPercent").text(parseIntNaNChar(systemStatusChannel.cpu_load, "-"));
		$("#CPUTempC").text(parseIntNaNChar(systemStatusChannel.cpu_temp, "-"));
		$("#SysTempC").text(parseIntNaNChar(systemStatusChannel.system_temp, "-"));
		$("#firmwareFreePercent").text(100 - (systemStatusChannel.firmware_storage || 0));
		$("#VMFreePercent").text(100 - (systemStatusChannel.voicemail_storage || 0));
		$("#phonesProvisionedCount").text(parseInt(systemStatusChannel.provisioned_phones) || 0);
		a = (parseInt(systemStatusChannel.provisioned_phones) || 0) - (parseInt(systemStatusChannel.unassigned_phones) || 0);
		$("#phonesWithUsers").html('<a href="#screen=users">' + a + "</a>");
		a = parseInt(systemStatusChannel.unassigned_phones) || 0;
		$("#phonesWithoutUsers").html('<a href="#screen=phones">' + a + "</a>");
		$("#phonesRegisteredCount").text(parseInt(systemStatusChannel.registered_phones) || 0);
		$("#availableExtensionsCount").text(parseInt(systemStatusChannel.available_extensions) || 0);
		$("#CPUFanGraph").setBar(rangePercent(systemStatusChannel.cpu_fan, 0, 1E4));
		$("#systemFanGraph").setBar(rangePercent(systemStatusChannel.system_fan, 0, 1E4));
		$("#CPULoadGraph").setBar(systemStatusChannel.cpu_load / 100);
		$("#CPUTempGraph").setBar(rangePercent(systemStatusChannel.cpu_temp, 25, 75));
		$("#SysTempGraph").setBar(rangePercent(systemStatusChannel.system_temp, 15, 65));
		a = parseInt(systemStatusChannel.system_temp) || 0;
		var e = parseInt(systemStatusChannel.cpu_temp) || 0;
		if(a && a > 70) $("#SysTempGraph .interBar").css("background-image", "url(/images/bar/red_horiz.png)");
		else if(a && a > 55) $("#SysTempGraph .interBar").css("background-image", "url(/images/bar/yellow_horiz.png)");
		else a && $("#SysTempGraph .interBar").css("background-image", "url(/images/bar/blue_horiz.png)")ction(a, e) {
	e.json.message && e.json.message.search(/keepalive/) && $("#presBarSTHeartbeat").stop().show().fadeTo(10, 1, function() {
		$(this).fadeOut(2E4)
	})
});

function rangePercent(a, e, g) {
	return a = (a = ((a || e) - e) / (g - e)) || 0
};

function users_phoneStatusUpdates(a, e, g) {
	var c = [],
		d = {},
		b = function(o, q) {
			if(q === "down") o.prepend('<img src="/cudatel/images/icons/phone_notfound.png" class="subIcon notfound" alt="Not Registered" title="Not Registered" />');
			else q === "up" && o.find(".notfound").remove()
		},
		f = function(o, q, v) {
			var x = o.data("liveChannels") || [],
				y = false;
			$.each(x, function(D, B) {
				if(B === v) {
					y = D;
					return false
				}
			});
			if(q) {
				x.length || o.prepend('<img src="/cudatel/images/icons/phone_inuse.png" alt="In Use" title="In Use" class="subIcon phoneActive" />');
				y === false && x.push(v)
			} else {
				y !== false && x.splice(y, 1);
				x.length || o.find(".phoneActive").remove()
			}
			o.data("liveChannels", x)
		},
		j;
	for(j in e) c.push(j);
	if(c.length) {
		var n = getUnique("bind"),
			l = setInterval(function() {
				if(e[c[0]].closest("body")[0]) $.inArray("phone_status", Ape.subscriptions()) == -1 && Ape.subscribe("phone_status");
				else {
					Ape.unsubscribe("phone_status");
					clearInterval(l);
					$(window).unbind("meteor_phone_status." + n).unbind("meteor_call_event." + n)
				}
			}, 250);
		Ape.subscribe("phone_status");
		$(window).bind("meteor_phone_status." + n, function(o, q) {
			e[q.json.bbx_phone_id] && b(e[q.json.bbx_phone_id], q.json.status)
		});
		$(window).bind("meteor_call_event." + n, function(o, q) {
			var v = e[g[q.json.bbx_phone_registration_id]] || d[q.json.uuid];
			if(v) if(q.json.call_event === "channel_answer") {
				d[q.json.uuid] = v;
				f(v, true, q.json.uuid)
			} else q.json.call_event === "channel_destroy" && f(d[q.json.uuid], false, q.json.uuid)
		});
		$.getREST("/cudatel/gui/phone/userregs", {
			bbx_user_id: a
		}, function(o) {
			$.each(o.registrations, function(q, v) {
				e[v.bbx_phone_id] && !trueish(v.status) && b(e[v.bbx_phone_id], "down")
			})
		});
		$.getREST("/cudatel/gui/calls/listusers", {
			bbx_user_id: a
		}, function(o) {
			$.each(o.listusers, function(q, v) {
				var x = e[g[v.bbx_phone_registration_id]] || d[v.uuid];
				if(x) {
					d[v.uuid] = x;
					f(x, true, v.uuid)
				}
			})
		})
	}
}

function users_setNewUserExtension(a, e) {
	e = e || $(".newUserForm:eq(0)");
	var g = e.find(".newUserForm:eq(0)"),
		c = g.find(".no"),
		d = g.find(".yes"),
		b = g.find("input[name=bbx_extension_block_begin]"),
		f = g.find("input[name=bbx_extension_block_end]"),
		j = g.find("input[name=bbx_extension_value]"),
		n = g.find("input[name=flag_locked]"),
		l = g.find("input[name=flag_external]"),
		o = g.find("input[name=bbx_extension_id]");
	g = g.find("button[type=submit]");
	b.val("");
	f.val("");
	j.val("");
	n.val("0");
	o.val("");
	g.each(function() {
		this.disabled = false
	});
	if(typeof a == "object") {
		c.hide();
		if(a.bbx_extension_value) {
			d.show().text(a.bbx_extension_value.replace(/[^-0-9]/g, ""));
			j.val(a.bbx_extension_value);
			l.val(a.flag_external ? 1 : 0)
		} else if(a.bbx_extension_block_begin) {
			d.show().text(a.bbx_extension_block_begin.replace(/[^-0-9]/g, "") + "\u2013" + a.bbx_extension_block_end.replace(/[^-0-9]/g, ""));
			b.val(a.bbx_extension_block_begin);
			f.val(a.bbx_extension_block_end);
			n.val(a.flag_locked);
			l.val(a.flag_external ? 1 : 0)
		} else {
			d.show().text("(Next Free Extension)");
			b.add(f).add(j).val("")
		}
	} else if(typeof a == "boolean") {
		c = e.find("form.newUserExtForm [name=bbx_extension_id]:enabled").val();
		b = e.find("form.newUserExtForm [name=bbx_extension_id] option:selected").text();
		d.show().text(b.replace(/[^-0-9]/g, ""));
		o.val(c)
	} else {
		c.hide();
		d.show().text(a.replace(/[^-0-9]/g, ""));
		j.val(a)
	}
}

function users_unsetNewUserExtension(a) {
	var e = a.find(".newUserForm:eq(0)");
	a = e.find("input[name=bbx_extension_block_begin]");
	var g = e.find("input[name=bbx_extension_block_end]"),
		c = e.find("input[name=bbx_extension_value]"),
		d = e.find("input[name=flag_locked]"),
		b = e.find("button[type=submit]"),
		f = e.find(".no");
	e = e.find(".yes");
	f.show();
	e.hide();
	a.val("");
	g.val("");
	d.val("");
	c.val("");
	b.each(function() {
		this.disabled = true
	})
};

function settings_rebootAllPhones() {
	$("#btnRebootPhones")[0].disabled = true;
	$.postREST("/cudatel/gui/system/reboot_phones", {}, function() {
		$("#rebootPhonesSpinner").show();
		setTimeout(function() {
			$("#rebootPhonesSpinner").fadeOut()
		}, 3E3);
		setTimeout(function() {
			$("#btnRebootPhones")[0].disabled = false
		}, 3E3)
	})
}

function settings_shutDown() {
	showBlanker({
		title: "Shut Down",
		text: "WARNING: You are about to power down this Communication Server. All current calls will be dropped, and you must power the Server back on before any services will be available.",
		buttons: ["Shut Down", "Cancel"],
		callbacks: [settings_processShutDown, blankerCancel]
	})
}

function settings_processShutDown() {
	$(this).trigger("closeBlanker");
	showRestartBlanker("System Shutdown", "The system is shutting down. All services will be unavailable until the system is powered on again.");
	$.postREST("/cudatel/gui/system/shutdown", {})
}

function settings_restart() {
	showBlanker({
		title: "Restart",
		text: "WARNING: You are about to restart the Communication Server. All current calls will be dropped, and the system will be unavailable until the Server restarts.",
		buttons: ["Restart", "Cancel"],
		callbacks: [settings_processRestart, blankerCancel]
	})
}

function settings_processRestart() {
	$(this).trigger("closeBlanker");
	showRestartBlanker("System Restart", "The system is restarting. All services will be unavailable until the restart is complete.");
	$.postREST("/cudatel/gui/system/reboot", {})
}

function settings_restart_fs() {
	showBlanker({
		title: "Restart",
		text: "You are about to restart the Telephony Engine. All current calls will be dropped, and services will be unavailable until the engine is completely restarted.",
		buttons: ["Restart Telephony Engine", "Cancel"],
		callbacks: [settings_process_restart_fs, blankerCancel]
	})
}
function settings_process_restart_fs() {
	$(this).trigger("closeBlanker");
	$.postREST("/cudatel/gui/system/restart_fs", {})
};
supportTunnelKeepalive = false;

function settings_startSupportTunnel() {
	$.ajax({
		url: "/cudatel/gui/configure/support_tunnel_start",
		type: "POST",
		dataType: "text",
		error: function() {
			alert("There was an error creating the support tunnel.")
		}
	});
	$("#supportTunnelBarracudaConnection")[0].src = "/cudatel/images/net_work.gif";
	settings_logSupportTunnel()
}

function settings_stopSupportTunnel() {
	$("#btnTunnelEnd").disable("stStop");
	$.ajax({
		url: "/cudatel/gui/configure/support_tunnel_stop",
		type: "POST",
		dataType: "text",
		error: function() {
			alert("There was an error stopping the support tunnel.")
		}
	})
}

function settings_logSupportTunnel(a) {
	supportTunnelKeepalive && clearTimeout(supportTunnelKeepalive);
	$("#btnTunnelStart").disable("stRunning");
	$("#btnTunnelEnd").enable("stRunning");
	supportTunnelKeepalive = setTimeout(settings_timeoutSupportTunnel, 15E3);
	$("#supportTunnelBarracudaConnection").attr("src", "/cudatel/images/net_work.gif");
	$("#supportTunnelBarracudaLogo").attr("src", "/cudatel/images/net_cudatel.png");
	if(a && a.json.message) {
		$("#tunnelLog").append("<p>" + a.json.message + "</p>");
		var e = a.json.message;
		if(e.search(/-exception: /) > -1) {
			var g = e.match(/-exception: (.*)/)[1];
			e = e.match(/T(\d\d:\d\d:\d\d)/)[1];
			g = g.replace(/^IO::Socket::INET::new/, "");
			showError(sprintf("Support Tunnel (%s): %s", e, g))
		}
	}
	if(a && a.json.support_tunnel_key) {
		$("#tunnelStatus").html('Support Tunnel Key: "<span id="tunnelkey">' + a.json.support_tunnel_key + '</span>."  (' + a.json.support_tunnel_key + ")<br />System Serial Number: " + a.json.support_tunnel_serial);
		$("#tunnelkey").militarize()
	}
}
$(window).bind("meteor_support_tunnel", function(a, e) {
	settings_logSupportTunnel(e)
});

function settings_timeoutSupportTunnel() {
	$("#supportTunnelBarracudaConnection")[0].src = "/cudatel/images/net_notwork.png";
	$("#supportTunnelBarracudaLogo")[0].src = "/cudatel/images/net_cudatel_noconnect.png";
	$("#btnTunnelStart").enable("stRunning");
	$("#btnTunnelEnd").enable("stStop");
	$("#btnTunnelEnd").disable("stRunning");
	$("#tunnelLog").append('<p class="tunnelJSMessage">No response from tunnel connection. Connection is closed.</p>');
	$("#tunnelStatus").empty()
};
var settings_LDAPServerProfiles = [];

function settings_spin(a) {
	$(a).find(".spinner").show()
}
function settings_stopSpin(a) {
	$(a).find(".spinner").hide()
}
function dt_getValuesSelected(a, e) {
	var g = a.dynatree("getTree").getSelectedNodes(e),
		c = [];
	$.each(g, function() {
		typeof this.data.value != "undefined" && c.push(this.data.value)
	});
	return c
}

function parseXML(a) {
	if(window.ActiveXObject && window.GetObject) {
		var e = new ActiveXObject("Microsoft.XMLDOM");
		e.loadXML(a);
		return e
	}
	if(window.DOMParser) return(new DOMParser).parseFromString(a, "text/xml");
	window.console && console.log("No XML parser: fallback to jQuery");
	return $(a)
}
function settings_pickLDAPServer() {
	$("#frmLDAPDomain").slideDown();
	$("#screen-settings .ldapWelcome").slideUp()
}

function settings_LDAPRefreshServerInfo() {
	$("#currentSyncInfo").empty();
	$.ajax({
		url: XMLGUI_PATH + "configure/dynamic/ldap",
		type: "POST",
		dataType: "text",
		data: {
			action: "get_server",
			template: "get_server"
		},
		success: function(a) {
			$("#currentSyncInfo").html(a);
			if($("#currentSyncInfo .ldap_server")[0]) {
				$("#yesLDAPServer").show();
				$("#noLDAPServer").hide();
				$.getREST("/cudatel/gui/sync/server", function(e) {
					var g = $("form#frmLDAPAuthConfig");
					$("input[name=bbx_sync_server_id]", g).val(e.servers[0].bbx_sync_server_id);
					$("input[name=bbx_sync_server_auth_enabled]", g).attr("checked", e.servers[0].bbx_sync_server_auth_enabled == "0" ? false : true);
					$("input[name=bbx_sync_server_default_auth_suffix]", g).val(e.servers[0].bbx_sync_server_default_auth_suffix)
				})
			} else {
				$("#yesLDAPServer").hide();
				$("#noLDAPServer").show()
			}
		}
	})
}

function settings_LDAPSyncNow(a) {
	showLDAPBlanker();
	a = $(a);
	var e = a.closest("form");
	$("#ldapSyncWait").show();
	a.attr("disabled", "disabled");
	setTimeout(function() {
		$("#ldapSyncWait").fadeOut();
		a.removeAttr("disabled")
	}, 5E3);
	e = $(e).serialize() + "&action=set_sync_units";
	$.ajax({
		url: XMLGUI_PATH + "configure/dynamic/ldap",
		data: e,
		dataType: "text",
		type: "POST",
		complete: function() {
			$.ajax({
				url: XMLGUI_PATH + "configure/ldap_sync_now",
				type: "POST",
				dataType: "text"
			})
		}
	})
}

function settings_LDAPBuildSyncList() {
	$("#LDAPSyncList").dynatree({
		checkbox: true,
		selectMode: 3,
		clickFolderMode: 2,
		minExpandLevel: 2,
		initAjax: {
			url: XMLGUI_PATH + "configure/dynamic/ldap",
			type: "POST",
			data: {
				action: "list_ous",
				template: "dynatree"
			}
		},
		strings: {
			loading: '<img src="/cudatel/images/table/miniwait.gif" style="width: 8px; height: 16px" alt="" /> Searching...'
		},
		onSelect: function() {
			$("#LDAPSyncListOUs").empty();
			var a = $("#LDAPSyncList").dynatree("getTree").getSelectedNodes();
			$("#LDAPSyncListOUs").append('<input type="hidden" name="changes_made" value="1" />');
			for(var e in a) a[e] && a[e].data.value && $("#LDAPSyncListOUs").append('<input type="hidden" name="ou" value="' + a[e].data.value + '" />')
		}
	})
}
function settings_LDAPRefreshSyncList() {
	$("#frmLDAPSyncList button[type=submit]").html("Apply");
	$("#LDAPSyncList").dynatree("getTree").getRoot().removeChildren();
	$("#LDAPSyncList").dynatree("getTree").getRoot().appendAjax({
		url: XMLGUI_PATH + "configure/dynamic/ldap",
		type: "POST",
		data: {
			action: "list_ous",
			template: "dynatree"
		}
	})
}

function settings_LDAPBack(a) {
	a = $(a)[0];
	a.reset();
	$(a).slideUp().prev("form.section").slport_tunnel", function(a, e) {
	settings_logSupportTunnel(e)
});

function settings_timeoutSupportTunnel() {
	$("#supportTunnelBarracudaConnection")[0].src = "/cudatel/images/net_notwork.png";
	$("#supportTunnelBarracudaLogo")[0].src = "/cudatel/images/net_cudatel_noconnect.png";
	$("#btnTunnelStart").enable("stRunning");
	$("#btnTunnelEnd").enable("stStop");
	$("#btnTunnelEnd").disable("stRunning");
	$("#tunnelLog").append('<p class="tunnelJSMessage">No response from tunnel connection. Connection is closed.</p>');
	$("#tunnelStatus").empty()
};
var settings_LDAPServerProfiles = [];

function settings_spin(a) {
	$(a).find(".spinner").show()
}
function settings_stopSpin(a) {
	$(a).find(".spinner").hide()
}
function dt_getValuesSelected(a, e) {
	var g = a.dynatree("getTree").getSelectedNodes(e),
		c = [];
	$.each(g, function() {
		typeof this.data.value != "undefined" && c.push(this.data.value)
	});
	return c
}

function parseXML(a) {
	if(window.ActiveXObject && window.GetObject) {
		var e = new ActiveXObject("Microsoft.XMLDOM");
		e.loadXML(a);
		return e
	}
	if(window.DOMParser) return(new DOMParser).parseFromString(a, "text/xml");
	window.console && console.log("No XML parser: fallback to jQuery");
	return $(a)
}
function settings_pickLDAPServer() {
	$("#frmLDAPDomain").slideDown();
	$("#screen-settings .ldapWelcome").slideUp()
}

function settings_LDAPRefreshServerInfo() {
	$("#currentSyncInfo").empty();
	$.ajax({
		url: XMLGUI_PATH + "configure/dynamic/ldap",
		type: "POST",
		dataType: "text",
		data: {
			action: "get_server",
			template: "get_server"
		},
		success: function(a) {
			$("#currentSyncInfo").html(a);
			if($("#currentSyncInfo .ldap_server")[0]) {
				$("#yesLDAPServer").show();
				$("#noLDAPServer").hide();
				$.getREST("/cudatel/gui/sync/server", function(e) {
					var g = $("form#frmLDAPAuthConfig");
					$("input[name=bbx_sync_server_id]", g).val(e.servers[0].bbx_sync_server_id);
					$("input[name=bbx_sync_server_auth_enabled]", g).attr("checked", e.servers[0].bbx_sync_server_auth_enabled == "0" ? false : true);
					$("input[name=bbx_sync_server_default_auth_suffix]", g).val(e.servers[0].bbx_sync_server_default_auth_suffix)
				})
			} else {
				$("#yesLDAPServer").hide();
				$("#noLDAPServer").show()
			}
		}
	})
}

function settings_LDAPSyncNow(a) {
	showLDAPBlanker();
	a = $(a);
	var e = a.closest("form");
	$("#ldapSyncWait").show();
	a.attr("disabled", "disabled");
	setTimeout(function() {
		$("#ldapSyncWait").fadeOut();
		a.removeAttr("disabled")
	}, 5E3);
	e = $(e).serialize() + "&action=set_sync_units";
	$.ajax({
		url: XMLGUI_PATH + "configure/dynamic/ldap",
		data: e,
		dataType: "text",
		type: "POST",
		complete: function() {
			$.ajax({
				url: XMLGUI_PATH + "configure/ldap_sync_now",
				type: "POST",
				dataType: "text"
			})
		}
	})
}

function settings_LDAPBuildSyncList() {
	$("#LDAPSyncList").dynatree({
		checkbox: true,
		selectMode: 3,
		clickFolderMode: 2,
		minExpandLevel: 2,
		initAjax: {
			url: XMLGUI_PATH + "configure/dynamic/ldap",
			type: "POST",
			data: {
				action: "list_ous",
				template: "dynatree"
			}
		},
		strings: {
			loading: '<img src="/cudatel/images/table/miniwait.gif" style="width: 8px; height: 16px" alt="" /> Searching...'
		},
		onSelect: function() {
			$("#LDAPSyncListOUs").empty();
			var a = $("#LDAPSyncList").dynatree("getTree").getSelectedNodes();
			$("#LDAPSyncListOUs").append('<input type="hidden" name="changes_made" value="1" />');
			for(var e in a) a[e] && a[e].data.value && $("#LDAPSyncListOUs").append('<input type="hidden" name="ou" value="' + a[e].data.value + '" />')
		}
	})
}
function settings_LDAPRefreshSyncList() {
	$("#frmLDAPSyncList button[type=submit]").html("Apply");
	$("#LDAPSyncList").dynatree("getTree").getRoot().removeChildren();
	$("#LDAPSyncList").dynatree("getTree").getRoot().appendAjax({
		url: XMLGUI_PATH + "configure/dynamic/ldap",
		type: "POST",
		data: {
			action: "list_ous",
			template: "dynatree"
		}
	})
}

function settings_LDAPBack(a) {
	a = $(a)[0];
	a.reset();
	$(a).slideUp().prev("form.section").slideDown()
}
function settings_LDAPCancel() {
	$("#addLDAPForms form").each(function() {
		this.reset()
	});
	$("#addLDAPForms form").slideUp();
	$("#currentSyncInfo .ldap_server")[0] ? $("#yesLDAPServer").slideDown() : $("#noLDAPServer").slideDown()
}

function settings_fillLDAPDomain() {
	$("#LDAPDomainMessage").html('<img src="/cudatel/images/table/miniwait.gif" width="8" height="16" alt="" /> Auto-detecting domain...');
	var a = function() {
			$("#LDAPDomainMessage").html('Auto-detect failed. Please enter your domain. <a href="javascript:settings_fillLDAPDomain();"><img src="/cudatel/images/small_refresh.png" width="15" height="15" alt="Retry" style="vertical-align: bottom" /></a>')
		};
	$("#LDAPUsernameDomain").val("domain");
	$.ajax({
		url: XMLGUI_PATH + "configure/ldap_domain",
		type: "POST",
		dataType: "text",
		success: function(e) {
			e = $(parseXML(e));
			$("#txtLDAPDomain");
			var g = e.find("domain:eq(0)").text();
			$("#txtLDAPDomain").val(g);
			$("#LDAPUsernameDomain").text(g ? g : "domain");
			e.find("error")[0] ? a() : $("#LDAPDomainMessage").empty()
		},
		error: function() {
			a()
		}
	})
}

function settings_fillLDAPServer(a) {
	var e = $("#txtLDAPDomain")[0].value,
		g = $("#txtLDAPUsername")[0].value,
		c = $("#pwdLDAPPassword")[0].value;
	if(!(g ? true : false)) {
		$(a).find(".errorMessage").html("Username and password are required.");
		return false
	}
	$(a).find(".errorMessage").empty();
	settings_spin(a);
	$.ajax({
		url: XMLGUI_PATH + "configure/ldap_discover",
		type: "POST",
		dataType: "text",
		data: {
			domain_name: e,
			username: g,
			password: c
		},
		success: function(d) {
			d = $(parseXML(d));
			var b = $("#selLDAPServerObject");
			settings_LDAPServerProfiles = [];
			b.find("option:not(#optLDAPServerManual)").remove();
			d.find("server").each(function() {
				var j = $(this),
					n = $(this).find("address:eq(0)").text();
				settings_LDAPServerProfiles.push({
					printed_name: n,
					uid: j.find("uid").text(),
					member: j.find("member").text(),
					group_member: j.find("group_member").text(),
					port: j.find("port").text(),
					base_dn: j.find("base_dn").text(),
					address: n,
					type: j.find("base_dn").text(),
					server: n
				})
			});
			settings_LDAPServerProfiles.push({
				printed_name: "Active Directory (Manual Configuration)",
				uid: "sAMAccountName",
				member: "memberOf",
				group_member: "member",
				port: 389,
				base_dn: "",
				address: "",
				type: "Active Directory",
				server: ""
			});
			settings_LDAPServerProfiles.push({
				printed_name: "E-Directory (Manual Configuration)",
				uid: "cn",
				member: "memberOf",
				group_member: "member",
				port: 389,
				base_dn: "",
				address: "",
				type: "E-Directory",
				server: ""
			});
			settings_LDAPServerProfiles.push({
				printed_name: "OpenLDAP/Generic (Manual Configuration)",
				uid: "uid",
				member: "memberOf",
				group_member: "member",
				port: 389,
				base_dn: "",
				address: "",
				type: "Generic LDAP",
				server: ""
			});
			for(var f in settings_LDAPServerProfiles) b[0].options[b[0].options.length] = new Option(settings_LDAPServerProfiles[f].printed_name, f);
			b.bind("change", settings_selectLDAPServer);
			f = b.find("option");
			if(f[1]) f[1].selected = "selected";
			settings_selectLDAPServer();
			settings_stopSpin(a);
			$(a).slideUp().next("form.section").slideDown()
		},
		error: function() {
			alert("Error retrieving LDAP server list.")
		}
	})
}

function settings_selectLDAPServer() {
	var a = $("#selLDAPServerObject > option:selected")[0].value;
	a = settings_LDAPServerProfiles[a] || {};
	$("#frmLDAPServer");
	$("#txtLDAPAddress")[0].value = a.address || "";
	$("#txtLDAPPort")[0].value = a.port || "";
	$("#txtLDAPUID")[0].value = a.uid || "";
	$("#txtLDAPBaseDN")[0].value = a.base_dn || "";
	$("#txtLDAPMember")[0].value = a.member || "";
	$("#txtLDAPGroupMember")[0].value = a.group_member || ""
}

function settings_LDAPShowDeleteServer() {
	showBlanker({
		title: "Remove Synchronization Server",
		text: "This will remove any users or groups associated with this server. Are you sure you want to delete the sync server?",
		buttons: ["Yes", "No"],
		callbacks: [function() {
			settings_LDAPProcessDeleteServer(1);
			blankerCancel.call(this)
		}, function() {
			settings_LDAPProcessDeleteServer(0);
			blankerCancel.call(this)
		}]
	})
}
function settings_LDAPProcessDeleteServer(a) {
	a == 1 && settings_LDAPSubmitDeleteServer()
}

function settings_LDAPHideDeleteServer() {
	$("#screen-settings .deleteLDAPServer").slideUp()
}
function settings_LDAPSubmitDeleteServer() {
	$.deleteREST("/cudatel/gui/sync/server", {}, {
		success: function() {
			settings_LDAPHideDeleteServer();
			settings_LDAPRefreshServerInfo()
		},
		error: function(a) {
			var e;
			try {
				e = JSON.parse(a.responseText)
			} catch(g) {}
			e ? showError(e.error || "There was an internal error deleting the synchronization server") : showError("There was an internal error deleting the synchronization server")
		}
	})
}

function settings_LDAPSubmitServerInfo(a) {
	var e = $("#frmLDAPDomain").serialize();
	e += "&" + $("#frmLDAPServer").serialize();
	e += "&action=set_server";
	if(!$("#txtLDAPBaseDN").val()) {
		alert("The Base DN value is required");
		return false
	}
	$.ajax({
		url: XMLGUI_PATH + "configure/dynamic/ldap",
		type: "POST",
		data: e,
		success: function(g) {
			g = $(parseXML(g));
			if(g.find("error")[0]) {
				alert(g.text());
				g.find("error").attr("type") == "BINDFAIL" && settings_LDAPCancel($(a))
			} else {
				settings_LDAPRefreshSyncList();
				settings_LDAPRefreshServerInfo();
				$("#addLDAPForms form").slideUp()
			}
		},
		error: function() {
			alert("Internal or Network Error saving settings")
		}
	})
}

function settings_LDAPGetOUs(a) {
	$("#txtLDAPDomain");
	$("#txtLDAPUsername");
	$("#pwdLDAPPassword");
	$(a).find(".errorMessage").empty();
	settings_spin(a);
	var e = $("#frmLDAPDomain").serialize();
	e += "&" + $("#frmLDAPServer").serialize();
	$("#LDAPOUs").replaceWith('<div id="LDAPOUs"></div>');
	$("#LDAPOUs").dynatree({
		checkbox: true,
		selectMode: 3,
		clickFolderMode: 2,
		minExpandLevel: 3,
		initAjax: {
			url: XMLGUI_PATH + "configure/ldap_list_ous",
			data: e,
			type: "POST"
		},
		onSelect: function() {
			var g = dt_getValuesSelected($("#LDAPOUs"), true),
				c = "",
				d = "",
				b;
			for(b in g) {
				c += '<input type="hidden" name="base_ou" value="' + g[b] + '" />';
				d += "<div>" + g[b] + "</div>"
			}
			$("#LDAPOUsSelected").html(c)
		}
	});
	settings_stopSpin(a)
}

function settings_LDAPImportSettings(a) {
	if(!$(a).find("input:[name=base_ou]")[0]) {
		$(a).find(".errorMessage").html("You must select an Organizational Unit");
		return false
	}
	settings_spin(a);
	var e = $("#frmLDAPDomain").serialize();
	e += "&" + $("#frmLDAPServer").serialize();
	e += "&" + $("#frmLDAPOU").serialize();
	$.ajax({
		url: XMLGUI_PATH + "configure/ldap_count_users",
		type: "POST",
		dataType: "text",
		data: e,
		success: function(g) {
			var c = $(parseXML(g));
			g = $("#frmLDAPImportOptions");
			var d = c.find("user_count").eq(0).text() || 0;
			c = c.find("group_count").eq(0).text() || 0;
			$(a).find("input.ldapCount").remove();
			$(a).append(sprintf('<input type="hidden" name="group_count" class="ldapCount" value="%s" /><input type="hidden" name="user_count" class="ldapCount" value="%s" />', c, d));
			g.find(".hook.userCount").html(d);
			g.find(".hook.groupCount").html(c);
			settings_stopSpin(a);
			$(a).slideUp().next("form.section").slideDown()
		},
		error: function() {
			alert("Error retrieving count")
		}
	})
}
function settings_LDAPUpdateOUs() {
	$("#frmLDAPSyncList")
}

function settings_LDAPStartImport() {
	var a = $("#frmLDAPImportOptions"),
		e = $("#frmLDAPDomain").serialize();
	e += "&" + $("#frmLDAPServer").serialize();
	e += "&" + $("#frmLDAPOU").serialize();
	e += "&" + $("#frmLDAPImportOptions").serialize();
	$.ajax({
		url: XMLGUI_PATH + "configure/ldap_import_users",
		type: "POST",
		dataType: "text",
		data: e,
		success: function() {
			a[0].reset();
			a.slideUp();
			a.siblings("form.first").slideDown()
		pires: " + (new Date(b.energize_expiration * 1E3)).toDateString() + ")";
		$("#statEnergize, #updEnergize").html(c);
		showActivatedStatus(b);
		trueish(b.activated_status) && trueish(b.activation_warning) && $("#statActivation").html('<a class="activation_warning" target="_blank" href=" ' + b.activation_renew_url + '">Your Energize Updates expire soon. Click to renew.</a>')
	}
	if(g.system_serial) {
		c = {};
		if(g.beta_version) if(g.beta_version == g.system_version) {
			$("#updatesEarlyVersion").show();
			c.beta = "(Currently Installed)"
		} else {
			if(settings_versionToNumber(g.beta_version) < settings_versionToNumber(g.system_version)) {
				$("#updatesEarlyVersion").show();
				c.beta = "(Installed Version is Newer)"
			}
		} else {
			$("#updatesEarlyVersion").hide();
			c.beta = "(None available)"
		}
		if(g.new_version) if(g.new_version == g.system_version) c.stable = "(Currently Installed)";
		else {
			if(settings_versionToNumber(g.new_version) < settings_versionToNumber(g.system_version)) c.stable = "(Installed Version is Newer)"
		} else c.stable = "(None available)";
		if(!(g.download_in_progress && parseInt(g.download_in_progress) && updateDownloading)) {
			d.stable.removeClass("downloadReady").removeClass("noop").removeClass("inprogress").removeClass("startReady");
			d.beta.removeClass("downloadReady").removeClass("noop").removeClass("inprogress").removeClass("startReady");
			g.new_version && d.stable.addClass("startReady");
			g.beta_version && d.beta.addClass("startReady");
			g.downloaded_version && g.downloaded_version == g.new_version && d.stable.addClass("downloadReady").removeClass("startReady");
			g.downloaded_version && g.downloaded_version == g.beta_version && d.beta.addClass("downloadReady").removeClass("startReady")
		}
		if(b.energize_status < 1) {
			console_log("Energize status failed:", b.energize_status, b);
			$("#updatesWarning").show().text("Your Energize Updates subscription is inactive, or the update server cannot be contacted. Cannot download updates.");
			console_log("Disabled download due to Energize Status check");
			$("input, button", d.stable).attr("disabled", "disabled");
			$("input, button", d.beta).attr("disabled", "disabled");
			$("#updatesMainTable").css({
				color: "#666",
				"font-style": "italic"
			})
		}
		$.getJSONCached("/cudatel/gui/permission/checkcheck/", {
			check: "HOTPATCH"
		}, 3E5, function(l) {
			if(trueish(l.checkcheck)) {
				$("#updatesWarning").show().text("Firmware updates have been disabled because Technical Support staff have made manual internal changes to this Server. To upgrade, please call Support at (734) 887-3000");
				console_log("Disabled download due to HOTPATCH check");
				$("input, button", d.stable).attr("disabled", "disabled");
				$("input, button", d.beta).attr("disabled", "disabled");
				$("#updatesMainTable").css({
					color: "#666",
					"font-style": "italic"
				})
			}
			$.getJSONCached("/cudatel/gui/jsoncache/cache", {
				channel: "system_stats"
			}, 5E3, function(o) {
				o = parseInt(o.firmware_storage);
				var q = false;
				if(isNaN(o)) q = "The Server is not properly reporting free disk space.";
				else if(o >= 98) q = "The Server is critically low on disk space.";
				if(q) {
					$("#updatesWarning").show().text(q + " Upgrading has been disabled to prevent possible damage due to low disk space. For assistance, please call CudaTel Support at (734) 887-3000");
					console_log("Disabled download due to disk space check");
					$("input, button", d.stable).attr("disabled", "disabled");
					$("input, button", d.beta).attr("disabled", "disabled");
					$("#updatesMainTable").css({
						color: "#666",
						"font-style": "italic"
					})
				}
			})
		});
		for(j in d) if(c[j]) {
			d[j].addClass("noop");
			d[j].find(".noopMessage").text(c[j])
		}
	}
	if(g.download_complete || g.download_canceled) {
		b = d[g.download_release].removeClass("downloadReady").addClass("noop").removeClass("inprogress").removeClass("startReady");
		b.find(".noop").text("(Please Wait)");
		b.find(".progressBar").setBar(0);
		updateDownloading = 0
	}
	if(g.download_progress && d[g.download_release]) {
		b = d[g.download_release];
		b.removeClass("downloadReady").removeClass("noop").addClass("inprogress").removeClass("startReady");
		$(b).find(".progressBar:visible").setBarOpts({
			halt: false
		});
		$(b).find(".progressBar:visible").setBar(g.download_progress / 100);
		$(b).find(".startDownloadButton").enable("waitfordl");
		if(g.download_progress == 100) $(b).find(".stopDownloadButton").attr("disabled", "disabled");
		else g.download_progress && $(b).find(".stopDownloadButton, .deleteUpdateButton, .installUpdateButton").removeAttr("disabled");
		b.find(".progressText").text(g.download_progress + "%");
		updateDownloading = 1
	}
	g.download_deleted && settings_queryUpdateStatus()
});

function settings_offlineActivationPopup() {}
function settings_queryUpdateStatus() {
	$.postREST("/cudatel/gui/update/query", {});
	getMessageCache("update_status", "update_wrapper")
}
function settings_startDownload(a) {
	$.postREST("/cudatel/gui/update/download", {
		type: a
	})
}

function settings_stopDownload(a) {
	$.postREST("/cudatel/gui/update/cancel", {
		type: a
	})
}

function settings_installUpdate(a, e) {
	var g = function() {
			$.postREST("/cudatel/gui/update/apply", {
				type: a
			}, function() {
				showRestartBlanker()
			})
		};
	e ? showBlanker({
		title: "Install Update?",
		text: "Installing this update will stop all calls currently in progress, and you will experience a temporary loss of connectivity. The install process may take up to 10 minutes to complete.",
		buttons: ["Continue", "Cancel"],
		callbacks: [function() {
			g();
			blankerCancel.call(this)
		},
		blankerCancel]
	}) : g()
}

function settings_deleteUpdate(a) {
	console_log("Disabled download because delete is in progress");
	$(".installUpdateButton").attr("disabled", "disabled");
	$.postREST("/cudatel/gui/update/delete", {
		type: a
	})
};
$(window).bind("login", function() {
	loginData.bbx_extension_id ? $("#presenceBarCCCButton").live("click", function(a) {
		a.preventDefault();
		cccOpen()
	}) : $("#presenceBarCCCButton").hide();
	$.ajax({
		url: "/cudatel/gui/sysinfo/sysinfo",
		type: "GET",
		data: {},
		dataType: "json",
		accept: "application/json",
		success: function(a) {
			a.sysinfo && a.sysinfo.system_model && a.sysinfo.system_version && a.sysinfo.system_serial ? $("#presBarVersionInfo").text("Communication Server " + a.sysinfo.system_model + ",  Firmware " + a.sysinfo.system_version + ",  Serial # " + a.sysinfo.system_serial) : $("#presBarVersionInfo").text("CudaTel Communication Server")
		},
		error: function() {
			$("#presBarVersionInfo").text("CudaTel Communication Server")
		}
	})
});
(function() {
	$(document).ready(function() {
		$.getTemplate("/cudatel/ajax-html/errorPopup.html", function() {})
	});
	var a = false;
	showError = function(e) {
		var g = function() {
				var c = $("#errorWrap > .staticBody");
				$(".errors > .error.first", c).removeClass("first");
				var d = $('<div class="first error"></div>').text(e);
				$(".errors", c).prepend(d);
				d = $(".error", c).length;
				$(".errorCount", c).text(d);
				d > 1 ? $(".opExpand", c).show() : $(".opExpand", c).hide();
				$("#errorWrap").show();
				if($("#errorWrap").is(".autofadeErrorWrap")) {
					a && clearTimeout(a);
					a = setTimeout(function() {
						$("#errorWrap .opClose").trigger("click")
					}, 5E3)
				}
			};
		if($("#errorWrap > .staticBody")[0]) if($("#errorWrap:hidden")[0]) g();
		else {
			g();
			$("#errorWrap:not(.expanded)").blink(2, 200)
		} else $.getTemplate("/cudatel/ajax-html/errorPopup.html", function(c) {
			c = $(c).find(".staticBody");
			$("#errorWrap")[0] || $("body").prepend('<div id="errorWrap"></div>');
			var d = $("#errorWrap").append(c);
			d.data("errors", []);
			$(".opClose", d).bind("click", function(b) {
				b.preventDefault();
				$("#errorWrap").fadeOut(function() {
					$(".error", this).remove();
					$(this).removeClass("expanded")
				})
			});
			$(".opExpand", d).bind("click", function(b) {
				b.preventDefault();
				d.toggleClass("expanded")
			});
			d.is(".autofadeErrorWrap") && $(".opClose", d).hide();
			g()
		})
	}
})();
(function(a) {
	var e = function() {
			this.each(function() {
				for(var c = 0; c < 4; c++) {
					var d = a(".IPv4Quad-" + c, a(this)).val();
					if(c == 0 && d === "0" || d > 255 || d === "") {
						a(this).addClass("IPv4InputInvalid");
						return
					}
				}
				a(this).removeClass("IPv4InputInvalid")
			})
		},
		g = {
			updateValue: function(c) {
				this.each(function() {
					var d = a(this).find(".IPv4Hidden:eq(0)");
					c !== undefined && d.val(c);
					var b = d.siblings("input[type=text]");
					if((d = d[0].value.match(/([0-9]+)\.([0-9]+)\.([0-9]+)\.([0-9]+)/)) && d.length == 5) {
						b[0].value = d[1];
						b[1].value = d[2];
						b[2].value = d[3];
						b[3].value = d[4]
					} else {
						b[0].value = "";
						b[1].value = "";
						b[2].value = "";
						b[3].value = ""
					}
				})
			},
			disable: function(c) {
				this.toggleClass("disabled", c);
				this.find("input").attr("disabled", c)
			},
			init: function() {
				var c = a();
				this.each(function() {
					var d = a(this);
					if(d.is("input[type=text]")) {
						d.wrap('<span class="IPv4Input"></span>');
						var b = d.parent(),
							f = d.attr("disabled");
						a('<input type="hidden" name="' + d.attr("name") + '" class="IPv4Hidden ' + this.className + '" value="' + d[0].value + '">').insertAfter(d).data("widget", b).data("widgetType", "ipv4Input");
						var j = b.find(".IPv4Hidden");
						j.data("originalValue", d[0].value);
						d.remove();
						for(d = 0; d < 4; d++) a('<input type="text" class="IPv4Quad' + d + '" size="3" maxlength="3" /><span class="IPv4Dot">.</span>').appendTo(b);
						f && b.addClass("disabled").find("input").attr("disabled", true);
						var n = function(l) {
								l = l.replace(RegExp("[^0-9]+", "g"), "");
								if(parseInt(l, 10) > 255) return l.slice(0, 2);
								return l
							};
						f = function(l) {
							l = n(l);
							if(l == "0") return "";
							return l
						};
						for(d = 0; d < 4; d++) {
							if(d > 0 && d < 3) a(".IPv4Quad" + d, b).autotab({
								target: a(".IPv4Quad" + (d + 1), b),
								maxlength: 3,
								format: n,
								previous: a(".IPv4Quad" + (d - 1), b)
							});
							else if(d == 0) a(".IPv4Quad0", b).autotab({
								target: a(".IPv4Quad1", b),
								maxlength: 3,
								format: f
							});
							else d == 3 && a(".IPv4Quad3", b).autotab({
								previous: a(".IPv4Quad2", b),
								maxlength: 3,
								format: n
							});
							a(".IPv4Quad" + d, b).bind("keyup", function() {
								for(var l = [], o = 0; o < 4; o++) {
									var q = parseInt(a(".IPv4Quad" + o, b).val());
									if(isNaN(q)) {
										j.trigger("dirty");
										j.val("");
										return
									} else l.push(q)
								}
								j.val(l.join("."));
								j.trigger("dirty")
							});
							d < 3 && a(".IPv4Quad" + d, b).bind("keyup", {
								i: d
							}, function(l) {
								if(l.keyCode == a.ui.keyCode.PERIOD) {
									l.preventDefault();
									if(this.value != "") {
										a(this).trigger("change");
										a(this).nextAll("input[type=text]").eq(0).focus()[0].select()
									}
								}
								if(this.value === "0" && a.inArray(l.keyCode, [a.ui.keyCode.TAB, a.ui.keyCode.SHIFT, a.ui.keyCode.BACKSPACE, a.ui.keyCode.LEFT, a.ui.keyCode.RIGHT]) == -1 && l.data.i != 0 || this.value > 25 && this.value.length == 2 && a.inArray(l.keyCode, [a.ui.keyCode.PERIOD, a.ui.keyCode.BACKSPACE, a.ui.keyCode.TAB, a.ui.keyCode.SHIFT, a.ui.keyCode.CTRL, a.ui.keyCode.ALT, a.ui.keyCode.CAPS_LOCK, a.ui.keyCode.ESCAPE, a.ui.keyCode.PAGE_UP, a.ui.keyCode.PAGE_DOWN, a.ui.keyCode.END, a.ui.keyCode.HOME, a.ui.keyCode.LEFT, a.ui.keyCode.UP, a.ui.keyCode.RIGHT, a.ui.keyCode.DOWN, a.ui.keyCode.INSERT, a.ui.keyCode.DELETE]) == -1) {
									l.preventDefault();
									a(this).trigger("change");
									a(this).nextAll("input[type=text]").eq(0).focus()[0].select()
								}
							});
							a(".IPv4Quad" + d, b).bind("focus", function() {
								a(this).addClass("justFocused")
							}).bind("keydown", function(l) {
								l.keyCode == a.ui.keyCode.PERIOD ? l.preventDefault() : a(this).removeClass("justFocused")
							}).bind("blur", function() {
								e.apply(b)
							})
						}
						b.find(".IPv4Dot:last").remove();
						b.ipv4Input("updateValue");
						c = c.add(b)
					}
				});
				return c
			}
		};
	a.fn.ipv4Input = function(c) {
		if(g[c]) return g[c].apply(this, Array.prototype.slice.call(arguments, 1));
		else if(typeof c === "object" || !c) return g.init.apply(this, arguments);
		else a.error("Method " + c + " does not exist on jQuery.ipv4Input")
	}
})(jQuery);
$(window).bind("tick", function() {
	$("body > .jPlayerDummy").each(function(a, e) {
		var g = $(e),
			c = g.data("attachmentID");
		c && !$("#" + c)[0] && g.jPlayer("destroy").remove()
	})
});
$.soundEffect = function(a) {
	getUnique("sfx");
	$('<div style="position: absolute; left: -999em;" />').appendTo("body").jPlayer({
		supplied: "mp3",
		solution: "flash, html",
		noVolume: {
			all: /./
		},
		preload: "auto",
		swfPath: "/cudatel/js/contrib/",
		ready: function() {
			$(this).jPlayer("setMedia", {
				mp3: a
			}).jPlayer("play")
		},
		ended: function() {
			$(this).jPlayer("destroy").remove()
		}
	})
};
$.fn.soundWidget = function(a, e) {
	var g = this;
	e = $.extend({}, {
		download_params: "disposition=attachment"
	}, e || {});
	var c, d = a.match(/(\?)(.+)/);
	if(e.download_params) c = d[2] ? a + "&" + e.download_params : d[1] ? a + e.download_params : d ? a + "?" + e.download_params : url;
	$("body > iframe[name=download_iframe]")[0] || $("body").prepend('<iframe name="download_iframe" width="1" height="1" style="width: 1px; height: 1px; position: absolute; left: -999em;"></iframe>');
	$.getTemplate("/cudatel/ajax-html/soundWidget.html", function(b) {
		g.each(function() {
			var f = $(this),
				j = $(b),
				n = getUnique("jPlayer");
			j.attr("id", n).appendTo(f);
			j.find(".download").attr("href", c);
			j.find(".play").bind("click", function() {
				$(this).trigger("soundWidgetPlay")
			}).one("click", function() {
				j.find(".pause").show();
				j.find(".playerDiv").addClass("soundPlayerDiv").jPlayer({
					supplied: "mp3",
					noVolume: {
						all: /./
					},
					error: function(l) {
						var o;
						switch(l.jPlayer.error.type) {
						case $.jPlayer.error.URL:
							o = "There was a problem playing the file. The file was missing or not playable.";
							break;
						case $.jPlayer.error.FLASH:
						case $.jPlayer.error.FLASH_DISABLED:
						case $.jPlayer.error.NO_SOLUTION:
							o = "This player requires the Adobe Flash plugin. There is a problem with the Flash plugin, or it is not installed or enabled."
						}
						o && j.find(".play").qtipMessage({
							style: "failure",
							message: o
						})
					},
					cssSelectorAncestor: "#" + n,
					cssSelector: {
						play: ".play",
						pause: ".pause",
						stop: ".stop",
						seekBar: ".soundPlayerScrubLoaded",
						playBar: ".soundPlayerScrubPlayed"
					},
					solution: "flash",
					swfPath: "/cudatel/js/contrib/",
					ready: function() {
						$(this).jPlayer("setMedia", {
							mp3: a
						}).jPlayer("play");
						j.find(".play").attr("src", "/cudatel/images/play.png")
					}
				});
				j.find(".play").attr("src", "/cudatel/images/wait.gif")
			})
		})
	})
};
$.fn.miniSoundWidget = function(a, e) {
	$("body > iframe[name=download_iframe]")[0] || $("body").prepend('<iframe name="download_iframe" width="1" height="1" style="width: 1px; height: 1px; position: absolute; left: -999em;"></iframe>');
	e = $.extend({}, {
		download_params: "disposition=attachment"
	}, e || {});
	var g, c = a.match(/(\?)(.+)/);
	if(e.download_params) g = c[2] ? a + "&" + e.download_params : c[1] ? a + e.download_params : c ? a + "?" + e.download_params : url;
	this.each(function() {
		var d = getUnique("jPlayer"),
			b = $(this),
			f = $('<span class="soundControl"></span>').attr("id", d);
		$('<img src="/cudatel/images/play.png" width="15" height="15" alt="Play" class="play" />').appendTo(f);
		$('<img src="/cudatel/images/play_active.png" width="15" height="15" alt="Pause" class="pause" />').appendTo(f).hide();
		$('<img src="/cudatel/images/stop.png" width="15" height="15" alt="Stop" class="stop" />').appendTo(f);
		f.appendTo(b);
		f.find(".download").attr("href", g).attr("target", "download_iframe");
		f.find(".play").bind("click", function() {
			$(this).trigger("soundWidgetPlay")
		}).one("click", function() {
			var j = $('<div class="jPlayerDummy" style="position: absolute; left: -999em" />').appendTo("body").data("attachmentID", d);
			f.find(".pause").show();
			j.jPlayer({
				supplied: "mp3",
				noVolume: {
					all: /./
				},
				error: function(n) {
					var l;
					switch(n.jPlayer.error.type) {
					case $.jPlayer.error.URL:
						l = "There was a problem playing the file. The file was missing or not playable.";
						break;
					case $.jPlayer.error.FLASH:
					case $.jPlayer.error.FLASH_DISABLED:
					case $.jPlayer.error.NO_SOLUTION:
						l = "This player requires the Adobe Flash plugin. There is a problem with the Flash plugin, or it is not installed or enabled."
					}
					l && f.find(".play").qtipMessage({
						style: "failure",
						message: l
					})
				},
				cssSelectorAncestor: "#" + d,
				cssSelector: {
					play: ".play",
					pause: ".pause",
					stop: ".stop"
				},
				solution: "flash, html",
				swfPath: "/cudatel/js/contrib/",
				ready: function() {
					$(this).jPlayer("setMedia", {
						mp3: a
					}).jPlayer("play");
					f.find(".play").attr("src", "/cudatel/images/play.png")
				}
			});
			f.find(".play").attr("src", "/cudatel/images/wait.gif")
		})
	})
};

function format_information(a, e) {
	if(!(typeof a == "undefined" || a == null)) {
		var g;
		e = e || {};
		var c = e.ndash ? "\u2013" : "-";
		if((g = a.match(/(\d+)-(\d+)/)) && !e.no_auto_split) return format_information(g[1]) + c + format_information(g[2]);
		if(!e.no_seven_digit) {
			if(a.search(/^(\d{3})([\da-zA-Z]{4})$/) > -1) return a.replace(/^(\d{3})([\da-zA-Z]{4})$/, "$1-$2");
			if(a.search(/^1(\d{3})([\da-zA-Z]{4})$/) > -1) return a.replace(/^1(\d{3})([\da-zA-Z]{4})$/, "1-$1-$2")
		}
		if(!e.no_ten_digit) {
			if(a.search(/^(\d{3})([\da-zA-Z]{3})([\da-zA-Z]{4})$/) > -1) return a.replace(/^(\d{3})([\da-zA-Z]{3})([\da-zA-Z]{4})$/, "($1) $2-$3");
			if(a.search(/^1(\d{3})([\da-zA-Z]{3})([\da-zA-Z]{4})$/) > -1) return a.replace(/^1(\d{3})([\da-zA-Z]{3})([\da-zA-Z]{4})$/, "1($1) $2-$3");
			if(a.search(/^\+1(\d{3})([\da-zA-Z]{3})([\da-zA-Z]{4})$/) > -1) return a.replace(/^\+1(\d{3})([\da-zA-Z]{3})([\da-zA-Z]{4})$/, "+1($1) $2-$3")
		}
		if(!e.no_extension) {
			g = e.ext_mark || "x";
			if(a.search(/^(\d{1,6})$/) > -1) return a.replace(/^(\d{1,6})$/, g + "$1")
		}
		return a
	}
};
(function(a) {
	var e = {
		precision: 2,
		format: "long"
	};
	a.formatInterval = function(g, c) {
		var d = [];
		c = a.extend({}, e, c);
		if(g == 0) return c.format == "long" ? "0 seconds" : c.format == "medium" ? "0s" : "00:00";
		var b;
		if(b = g % 60) if(c.format == "long") d.push(b + " second" + (b > 1 ? "s" : ""));
		else c.format == "medium" ? d.push(b + "s ") : d.push(sprintf("%'02d", b));
		else c.format == "short" && d.push("00");
		if((g = Math.floor(g / 60)) && (b = g % 60)) if(c.format == "long") d.push(b + " minute" + (b > 1 ? "s" : ""));
		else c.format == "medium" ? d.push(b + "m ") : d.push(sprintf("%'02d:", b));
		else c.format == "short" && d.push("00:");
		if((g = Math.floor(g / 60)) && (b = g % 24)) if(c.format == "long") d.push(b + " hour" + (b > 1 ? "s" : ""));
		else c.format == "medium" ? d.push(b + "h ") : d.push(sprintf("%'02d:", b));
		if(g = Math.floor(g / 24)) c.format == "long" ? d.push(g + " day" + (g > 1 ? "s" : "")) : d.push(g + "d ");
		return d.reverse().slice(0, c.precision).join(c.format == "long" ? ", " : "")
	};
	a.timeSince = function(g, c) {
		c = a.extend({}, e, c);
		if(g instanceof Date) g = Math.floor(g.getTime() / 1E3);
		if(isNaN(g)) return g;
		var d = Math.floor((new Date).getTime() / 1E3);
		return a.formatInterval(Math.abs(g - d), c)
	}
})(jQuery);
$.fn.callflowDetail = function(a) {
	var e = ["action", "bbx_callflow_id", "bbx_callflow_map_id"];
	if(typeof a != "object") a = {};
	var g = this;
	$.get("/cudatel/gui/configure/dynamic/callflow?action=ui" + (a.mode ? "&mode=" + a.mode : ""), function(c) {
		var d = $(c),
			b, f = function(j, n) {
				var l = function(o) {
						$(".callflowNoActions", n).hide();
						$(".callflowActions", n).append(o.templateElem);
						o.templateElem.prepend('<div class="ops callflowOperations"><a class="ops opsDelete deleteCallflowLink" href="#">Delete this action</a></div><div class="grippy"></div>').data("bbx_callflow_map", o);
						o.templateElem.find(".advancedOptions")[0] && $(".callflowOperations", o.templateElem).prepend('<a class="ops opToggleAdvanced" href="#">Advanced Options</a> | ').find(".opToggleAdvanced").bind("click", function(v) {
							v.preventDefault();
							$(".advancedOptions", o.templateElem).toggle()
						});
						o.templateElem.trigger("callflowTemplateInit");
						for(var q in o.callflow_map_data_display) e.join("|").indexOf(o.bbx_callflow_map_data[q]) == -1 && $("[name=" + q + "]", o.templateElem).val(o.callflow_map_data_display[q])
					};
				$(".callflowMain", n).remove();
				n.append($(".callflowMain", d).clone());
				$(".opMoreOptionsToggle", n).bind("click", function(o) {
					o.preventDefault();
					$(".moreOptionsHidden, .moreOptionsShown", n).toggle();
					$(".checkslider", n).trigger("redraw")
				});
				$(".callflowMain", n).data("callflow", j);
				$(".callflowFinals input[name=bbx_callflow_id]", n).val(j.bbx_callflow_id);
				$.getJSON("/cudatel/gui/configure/dynamic/callflow?action=get_callflow_types&template=json" + ((j.bbx_user_id ? true : false) ? "&type=user" : ""), function(o) {
					o = o.data;
					var q = j.bbx_callflow_maps;
					$("a.deleteCallflowLink", n).live("click", function(B) {
						B.preventDefault();
						var u = $(this).closest(".callflowTemplate");
						B = u.data("bbx_callflow_map");
						confirm("This will delete the action. Continue?") && $.ajax({
							url: "/cudatel/gui/configure/dynamic/callflow",
							data: {
								action: "delete_callflow_map",
								bbx_callflow_map_id: B.bbx_callflow_map_id,
								template: "json"
							},
							success: function() {
								u.remove()
							}
						})
					});
					var v = {
						actions: [],
						presets: [],
						finals: []
					},
						x;
					for(x in o) {
						var y = o[x];
						y.html = $(".callflowTemplate-" + y.name.replace(/[ _]/g, "-"), d);
						if(!y.html[0]) {
							y.html = $(".callflowTemplateGeneric-" + y.section, d).clone().addClass("callflowTemplate-" + y.name.replace(/[ _]/g, "-"));
							y.html.find(".callflowTypeName").text(y.printed_name)
						}
						y.section == "presets" && $('<input type="checkbox" class="checkslider" name="' + y.name + '" />').appendTo(y.html.find(".cb"));
						v[y.section][y.menu_order] = y
					}
					for(var D in q) {
						y = q[D];
						if(o[y.bbx_callflow_map_action]) {
							y.type = o[y.bbx_callflow_map_action];
							if(y.type.html[0]) y.templateElem = y.type.html.clone();
							else console_log("jquery.callflow.js: Unknown callflow map type section: ", y.type.section)
						} else console_log("jquery.callflow.js: Unknown callflow map type: ", y)
					}
					for(D in v.presets) {
						y = v.presets[D];
						q = y.html.clone();
						$(".callflowPresets", n).append(q);
						q.append('<input type="hidden" name="action" value="update_preset" /><input type="hidden" name="bbx_callflow_id" value="' + j.bbx_callflow_id + '" /><input type="hidden" name="bbx_callflow_map_action" value="' + y.name + '" /><input type="hidden" name="template" value="json" />');
						q.wrap('<form class="jsAutoSubmit" action="/cudatel/gui/configure/dynamic/callflow" method="POST"></form>');
						q.find("input.checkslider").checkslider()
					}
					for(D in v.finals) {
						y = v.finals[D];
						$(".callflowFinalSelect", n).append('<option value="' + y.name + '">' + y.printed_name + "</option>")
					}
					$(".callflowFinalSelect", n).bind("change", function() {
						var B = o[$(this).val()];
						if(B) {
							$(".settingsPanel", n).empty().append(B.html);
							B = $(this).closest("form").data("bbx_callflow_map");
							$(this).trigger("callflowTemplateInit", {
								bbx_callflow_map: B
							})
						}
					});
					for(D in v.actions) {
						y = v.actions[D];
						$(".callflowActionSelect", n).append('<option value="' + y.name + '">' + y.printed_name + "</option>")
					}
					$(".callflowActionSelect", n).bind("change", function() {
						var B = o[$(this).val()].html.clone();
						$(".callflowNewActionHolder", n).empty().append(B)
					}).trigger("change");
					$(".callflowAddAction", n).bind("click", function() {
						var B = $(".newCallflowMapForm", n).serialize() + "&bbx_callflow_id=" + j.bbx_callflow_id + "&bbx_callflow_map_priority=last_action&action=insert_action&template=json&return=single";
						$.ajax({
							url: "/cudatel/gui/configure/dynamic/callflow",
							data: B,
							dataType: "json",
							success: function(u) {
								var F = u.data;
								F.templateElem = o[u.data.bbx_callflow_map_action].html.clone();
								l(F)
							}
						})
					});
					for(D in j.bbx_callflow_maps) {
						y = j.bbx_callflow_maps[D];
						switch(y.type.section) {
						case "presets":
							v = $(".callflowPresets .callflowTemplate-" + y.bbx_callflow_map_action.replace(/[ _]/g, "-"), n);
							for(x in y.bbx_callflow_map_data) e.join("|").indexOf(y.bbx_callflow_map_data[x]) == -1 && $(":input[name=" + x + "]", v).val(y.bbx_callflow_map_data[x]);
							$("form", v).removeClass("jqAutoSubmit");
							$("input[type=checkbox][name=" + y.bbx_callflow_map_action + "]", v).attr("checked", "checked").trigger("csupdate");
							$("form", v).addClass("jqAutoSubmit");
							break;
						case "actions":
							l(y);
							break;
						case "finals":
							v = $(".callflowFinals", n);
							v.removeClass("jsAutoSubmit");
							v.data("bbx_callflow_map", y);
							$(".callflowFinalSelect", v).val(y.bbx_callflow_map_action).trigger("change");
							v.trigger("callflowTemplateInit", {
								bbx_callflow_map: y
							});
							for(x in y.bbx_callflow_map_data) e.join("|").indexOf(y.bbx_callflow_map_data[x]) == -1 && $(".callflowTemplate :input[name=" + x + "]", v).val(y.bbx_callflow_map_data[x]);
							v.addClass("jsAutoSubmit")
						}
					}
					$(".callflowActions", n).sortable({
						axis: "y",
						handle: ".grippy"
					});
					$(".callflowActions", n).bind("sortupdate", function() {
						var B = [];
						$(".callflowActions > .callflowTemplate", n).each(function() {
							B.push($(this).data("bbx_callflow_map").bbx_callflow_map_id)
						});
						var u = $(".callflowMain", n).data("callflow").bbx_callflow_id,
							F = this;
						$.ajax({
							url: "/cudatel/gui/configure/dynamic/callflow",
							data: {
								action: "reorder",
								template: "json",
								bbx_callflow_id: u,
								bbx_callflow_map_id: B
							},
							dataType: "json",
							success: function() {},
							error: function() {
								$(F).sortable("cancel")
							}
						})
					})
				});
				n.bind("refreshCallflow", function(o, q) {
					q.json ? f(q.json, n) : b(a.bbx_callflow_id)
				})
			};
		b = function(j) {
			$.getJSON("/cudatel/gui/configure/dynamic/callflow?action=detail&template=json&bbx_callflow_id=" + j, function(n) {
				g.each(function() {
					f(n.data[0], $(this))
				})
			})
		};
		if(a.jsCallflow) g.each(function() {
			f(a.jsCallflow, $(this))
		});
		else a.bbx_callflow_id ? b(a.bbx_callflow_id) : console_log("jquery.callflow.js: No callflow ID or JS object given. Nothing to do.")
	})
};
$(".callflowTemplate").live("callflowTemplateInit", function() {
	var a = $(this),
		e = $(this).data("bbx_callflow_map");
	switch(e.bbx_callflow_map_action) {
	case "try_phone_numbers":
		var g = $(".callflowNumberList", a);
		e.bbx_callflow_map_data ? g.phoneNumberList({
			numbers: e.bbx_callflow_map_data.destination || ""
		}) : g.phoneNumberList({
			numbers: ""
		});
		g.bind("updateList", function(d, b) {
			$.post("/cudatel/gui/configure/dynamic/callflow", {
				action: "modify_action",
				bbx_callflow_map_id: e.bbx_callflow_map_id,
				destination: b,
				no_clearing: 1
			})
		});
		$("input.callflowMapID", a).val(e.bbx_callflow_map_id);
		$(".timeout", a).val(e.bbx_callflow_map_data.timeout || "");
		e.bbx_callflow_map_data.confirm && $(".confirm", a).attr("checked", "checked");
		var c = $(".confirmPrompt", a);
		g = 0;
		if(e.bbx_callflow_map_data.conf_sound) g = e.bbx_callflow_map_data.conf_sound.bbx_sound_id;
		c.empty().soundPicker({
			name: "conf_sound",
			bbx_sound_id: g,
			allowNone: false,
			ready: function() {
				$(".confirm", a).trigger("initchange")
			}
		});
		$(".confirm", a).bind("click change initchange", function() {
			$(this).is(":checked") ? c.soundPicker("enable") : c.soundPicker("disable")
		});
		break;
	case "campon":
		$(".camponHoldPick", a).mohPicker(e.bbx_callflow_map_data.bbx_moh_id ? {
			bbx_moh_id: e.bbx_callflow_map_data.bbx_moh_id.bbx_moh_id
		} : {});
		$(".camponTries", a).val(e.bbx_callflow_map_data.tries);
		$(".camponForm input, .camponForm select", a).bind("change", function() {
			var d = $(".camponForm input, .camponForm select", a).serialize() + "&bbx_callflow_map_id=" + e.bbx_callflow_map_id + "&action=modify_action";
			$.post("/cudatel/gui/configure/dynamic/callflow", d)
		});
		break;
	case "popup":
		$(".popupURL", a).val(e.bbx_callflow_map_data.popup_url);
		$(".popupURL", a).bind("change", function() {
			var d = "popup_url=" + $(".popupURL", a).val() + "&bbx_callflow_map_id=" + e.bbx_callflow_map_id + "&action=modify_action";
			$.post("/cudatel/gui/configure/dynamic/callflow", d)
		});
		break;
	case "playback":
		a.bind("change", function() {
			var d = $("[name=sound_id]", a).val();
			$.post("/cudatel/gui/configure/dynamic/callflow", {
				action: "modify_action",
				bbx_callflow_map_id: e.bbx_callflow_map_id,
				playback: d
			})
		});
		g = 0;
		if(e.bbx_callflow_map_data.playback) g = e.bbx_callflow_map_data.playback.bbx_sound_id;
		$(".soundFile", a).soundPicker({
			name: "sound_id",
			bbx_sound_id: g,
			allowNone: true
		});
		break;
	case "execute_extension":
		g = "";
		if(e.bbx_callflow_map_data.destination && e.bbx_callflow_map_data.destination.bbx_extension_block_begin) g = e.bbx_callflow_map_data.destination.bbx_extension_id;
		$(".extensionPickerText", a).extensionPicker({
			searchTypes: ["user", "group", "queue", "conference", "auto_attendant", "route", "phone"],
			hiddenName: "destination",
			hiddenFormat: "bbx_extension_id",
			initialSearch: g ? {
				bbx_extension_id: g
			} : false,
			autoSelectFirst: true
		});
		$("input.callflowMapID", a).val(e.bbx_callflow_map_id);
		$(".timeout", a).val(e.bbx_callflow_map_data.timeout || "");
		e.bbx_callflow_map_data.confirm && $(".confirm", a).attr("checked", "checked");
		c = $(".confirmPrompt", a);
		g = 0;
		if(e.bbx_callflow_map_data.conf_sound) g = e.bbx_callflow_map_data.conf_sound.bbx_sound_id;
		c.soundPicker({
			name: "conf_sound",
			bbx_sound_id: g,
			allowNone: true
		})
	}
});
(function() {
	$(".callflowFinals").live("callflowTemplateInit", function(a, e) {
		$(this).closest(".callflowMain").data("callflow");
		var g = $(this),
			c;
		getUnique("id");
		c = typeof e != "undefined" ? e.bbx_callflow_map : false;
		switch($(".callflowFinalSelect", g).val()) {
		case "transfer":
			$("input[name=destination]", g).val(c ? c.bbx_callflow_map_data.destination : "").extensionPicker({
				searchTypes: "all",
				hidden: false,
				autoSelectFirst: false,
				forcePickFirst: false
			});
			break;
		case "voicemail":
			var d = c ? c.bbx_callflow_map_data.destination : "";
			$(".mailboxPickerText", g).val(d || "").extensionPicker({
				searchTypes: "user:primary",
				hidden: false,
				autoSelectFirst: true,
				forcePickFirst: true
			});
			break;
		case "page_group":
			c.bbx_callflow_map_data && c.bbx_callflow_map_data.group && c.bbx_callflow_map_data.group.bbx_extension_id && $(".groupPickerText", g).val(c.bbx_callflow_map_data.group.bbx_extension_block_begin);
			$(".groupPickerText", g).extensionPicker({
				searchTypes: ["group:primary"],
				hiddenName: "group",
				hiddenFormat: "{bbx_extension_id}",
				autoSelectFirst: true
			});
			break;
		case "route":
			$(".gateway", g).empty().selectFrom({
				url: "/cudatel/gui/gateway/combined",
				name: "gateway",
				rowDataRoot: "combined",
				rowData: {
					value: function(b) {
						if(b.rowData.bbx_provider_gateway_id) return "gw_" + b.rowData.bbx_provider_gateway_id;
						else if(b.rowData.bbx_tdm_card_port_type === "ANALOG") return "atdm_" + b.rowData.bbx_tdm_card_port_id;
						else if(b.rowData.bbx_tdm_card_port_type === "DIGITAL") return "dtdm_" + b.rowData.bbx_tdm_card_port_id
					},
					text: function(b) {
						if(b.rowData.bbx_provider_gateway_id) return b.rowData.bbx_provider_gateway_name;
						else if(b.rowData.bbx_tdm_card_port_type === "ANALOG") return "Analog port " + b.rowData.bbx_tdm_card_port_number;
						else if(b.rowData.bbx_tdm_card_port_type === "DIGITAL") return "Digital port " + b.rowData.bbx_tdm_card_port_number
					}
				},
				firstEmpty: true,
				complete: function() {
					if(c) {
						var b = "NOTHING!";
						if(c && c.bbx_callflow_map_data && c.bbx_callflow_map_data.gateway) {
							if(c.bbx_callflow_map_data.gateway.bbx_provider_gateway_id) b = "gw_" + c.bbx_callflow_map_data.gateway.bbx_provider_gateway_id;
							else if($("option[value=atdm_" + c.bbx_callflow_map_data.gateway.bbx_tdm_card_port_id + "]", g)[0]) b = "atdm_" + c.bbx_callflow_map_data.gateway.bbx_tdm_card_port_id;
							else if($("option[value=dtdm_" + c.bbx_callflow_map_data.gateway.bbx_tdm_card_port_id + "]", g)[0]) b = "dtdm_" + c.bbx_callflow_map_data.gateway.bbx_tdm_card_port_id;
							var f = $("select[name=gateway]", g);
							b && f.val(b)
						}
					}
				}
			})
		}
	})
})();
jQuery.fn.phoneNumberList = function(a) {
	var e = a.layout || [{
		freeform: true
	}],
		g = a.numbers || "",
		c = function(f) {
			return f.search(/^sip:/) > -1 ? f.replace(/[`|,]/g, "") : f.replace(/[^0-9]/g, "")
		},
		d = function(f, j) {
			var n = function() {
					var B = "";
					$(".phoneNumberListSortable > .phoneNumberListItem", x).each(function() {
						B += "|";
						$(".phoneNumber", this).each(function() {
							B += $(this).data("number") + ","
						})
					});
					B = B.replace(/[|,]$/, "").replace(/^\|/, "").replace(/,\|/g, "|");
					x.trigger("updateList", B)
				},
				l = function() {
					var B = $(this).closest(".phoneNumberListItem");
					$(".newSeqTarget", x).show();
					$(".deleteNumberTarget", B).show();
					$(".opAddSimul", B).hide();
					$(".newSeqEntry", x).hide()
				},
				o = function() {
					$(".newSeqTarget", x).hide();
					$(".newSeqEntry", x).show();
					$(".deleteNumberTarget:visible", x).hide();
					$(".opAddSimul:hidden", x).show()
				},
				q = function(B, u, F) {
					var I = u.find(".phoneNumbersSimul");
					B = $('<div class="phoneNumber" />').text(format_information(B)).appendTo(I).data("number", B);
					u = $(".phoneNumber", I).toArray().sort(function(C, M) {
						return $(C).data("number") - $(M).data("number")
					});
					$.each(u, function() {
						$(this).appendTo(I)
					});
					B.draggable({
						revert: "invalid"
					}).bind("dragstart", l).bind("dragstop", o).bind("selectstart", function(C) {
						C.preventDefault()
					});
					F || n()
				},
				v = function(B, u) {
					var F = $(".phoneNumberListTemplates > .phoneNumberListItem", x).clone(),
						I = B.split(",");
					$(".phoneNumberListSortable", x).append(F);
					$(".phoneNumberListNoItems", x).hide();
					for(D in I) q(I[D], F, true);
					u || n();
					F.droppable({
						accept: ".phoneNumber",
						drop: function(C, M) {
							o(C, M);
							var Q = M.draggable.closest(".phoneNumberListItem");
							q(M.draggable.data("number"), $(this), true);
							M.draggable.remove();
							Q.find(".phoneNumber")[0] || Q.remove();
							n()
						}
					});
					$(".deleteNumberTarget", x).droppable({
						accept: ".phoneNumber",
						greedy: true,
						drop: function(C, M) {
							o(C, M);
							var Q = M.draggable.closest(".phoneNumberListItem");
							$(this).hide();
							M.draggable.remove();
							Q.find(".phoneNumber")[0] || Q.remove();
							n()
						}
					});
					$("a.deleteNumberLink", F).bind("click", function(C) {
						C.preventDefault();
						F.remove();
						n()
					})
				},
				x = $(j);
			x.append($(f));
			x.addClass("phoneNumberList");
			$(".phoneNumberListSortable", x).sortable({
				axis: "y",
				handle: ".grippy"
			}).bind("sortupdate", function(B) {
				n();
				B.stopPropagation()
			});
			var y = $(".phoneNumberListPicker", x).bind("change", function() {
				var B = e[$(this).val()];
				$(".phoneNumberListInput", x).removeClass("phoneNumberActiveInput").hide();
				if(B.freeform) $("input.phoneNumberListInput", x).addClass("phoneNumberActiveInput").show();
				else {
					var u = $("select.phoneNumberListInput", x).addClass("phoneNumberActiveInput").show(),
						F;
					for(F in B.numbers) u.append("<option />").val(B.numbers[F].value).text(B.numbers[F].display)
				}
			});
			if(e.length == 1 && e[0].freeform) y.hide().append('<option value="0"></option>');
			else for(var D in e) y.append("<option />").val(D).text(e[D].display);
			y.trigger("change");
			$(".phoneNumberListInput", x).bind("keyup", function(B) {
				B.keyCode == 13 && $(".addButton", x).trigger("click")
			}).extensionPicker({
				searchTypes: ["all"],
				hidden: false,
				textFormat: "number"
			});
			$(".addButton", x).bind("click", function() {
				var B = $(".phoneNumberActiveInput", x).val();
				B = c(B);
				if(B != "") {
					v(B);
					n();
					$(".phoneNumberActiveInput", x).val("")
				}
			});
			$(".newSeqTarget", x).droppable({
				accept: ".phoneNumber",
				drop: function(B, u) {
					o(B, u);
					var F = u.draggable.closest(".phoneNumberListItem");
					$(this).hide();
					v(u.draggable.data("number"), true);
					u.draggable.remove();
					F.find(".phoneNumber")[0] || F.remove();
					n()
				}
			});
			$(".phoneNumberListTypeSelect", x).bind("change", function() {
				n()
			});
			$(".opAddSimul", x).die("click.addLink").live("click.addLink", function(B) {
				B.preventDefault();
				B = $(this).closest(".phoneNumberListItem");
				if(!$(".newPhoneSimul", B)[0]) {
					var u = $('<input type="text" size="10" value="" class="newPhoneSimul" />');
					u.appendTo($(".phoneNumbersSimul", B));
					u.growable().extensionPicker({
						searchTypes: ["all"],
						hidden: false,
						textFormat: "number"
					}).bind("blur triggerSubmit", function() {
						var F = $(this),
							I = setTimeout(function() {
								var C = F.val();
								(C = c(C)) && q(C, F.closest(".phoneNumberListItem"));
								F.remove()
							}, 200);
						F.one("focus", function() {
							clearTimeout(I)
						})
					}).focus()
				}
			});
			$(".newPhoneSimul", x).die("click.addSubmit").live("keyup.addSubmit", function(B) {
				if(B.keyCode == 27) {
					B.preventDefault();
					$(this).unbind("blur").fadeOut("fast", function() {
						$(this).remove()
					})
				} else if(B.keyCode == 13) {
					B.preventDefault();
					$(this).trigger("triggerSubmit")
				}
			});
			g = g.split("|");
			if(g.length == 1 && g[0] == "") g = [];
			for(D in g) v(g[D], true)
		},
		b = this;
	$.getTemplate("/cudatel/ajax-html/callflow/number_list.html", function(f) {
		b.each(function() {
			d(f, this)
		})
	})
};
(function() {
	autoSubmits = "form[action].jsAutoSubmit input[name]:not(.noAutoSubmit), form[action].jsAutoSubmit textarea[name]:not(.noAutoSubmit), form[action].jsAutoSubmit select[name]:not(.noAutoSubmit), form[action].jsAutoSubmit .jsAutoSubmitWatch";
	var a = function(g, c) {
			if(typeof c == "undefined") c = false;
			if(g.hasClass("jsAutoSubmitInProgress")) {
				g.trigger("jsAutoSubmitQueued");
				g.addClass("jsAutoSubmitQueued")
			} else {
				c && c.data("autoSubmitTimeout") && clearTimeout(c.data("autoSubmitTimeout"));
				if(c.data("autoSubmitBeforeSerialize")) if(c.data("autoSubmitBeforeSerialize")() === false) return false;
				for(var d = g.serializeObject(), b = g.find("input[alwayssubmit]"), f = 0; f < b.length; f++) {
					var j = $(b[f]);
					if(j.attr("name") != "" && !d[j.attr("name")]) if(j.attr("type") == "checkbox") d[j.attr("name")] = j.attr("checked") ? "1" : "0";
					else d[j.attr("name")] = j.val()
				}
				g.data("extraFormData") && $.extend(d, g.data("extraFormData"));
				g.trigger("jsAutoSubmitInProgress");
				g.addClass("jsAutoSubmitInProgress");
				if(g.data("widgetType") == "formModule") g.formModule("submit", {
					success: function() {
						g.removeClass("jsAutoSubmitInProgress")
					},
					error: function() {
						g.removeClass("jsAutoSubmitInProgress")
					}
				});
				else {
					var n = {
						url: g.attr("action"),
						type: g.data("method") || g.getFormMethod() || "GET",
						data: d,
						accept: g.data("accept") || g.attr("accept"),
						success: function(l) {
							c && c.removeAttr("disabled").addClass("autoSubmitSuccess").trigger("autoSubmitSuccess", l);
							g.trigger("jsAutoSubmitSuccess", l);
							g.trigger("jsAutoSubmitComplete", l);
							g.removeClass("jsAutoSubmitInProgress");
							if(g.hasClass("jsAutoSubmitQueued")) {
								g.removeClass("jsAutoSubmitQueued");
								a(g, c)
							}
						},
						afterError: function(l) {
							g.trigger("jsAutoSubmitError", l);
							g.trigger("jsAutoSubmitComplete", l);
							c && c.removeAttr("disabled").addClass("autoSubmitFail").trigger("autoSubmitFail");
							g.removeClass("jsAutoSubmitInProgress");
							if(g.hasClass("jsAutoSubmitQueued")) {
								g.removeClass("jsAutoSubmitQueued");
								a(g, c)
							}
						}
					};
					if(g.data("dataType") || g.attr("returntype")) n.dataType = g.data("dataType") || g.attr("returntype");
					if(!n.dataType) switch(n.accept) {
					case "application/json":
						n.dataType = "json";
						break;
					case "text/xml":
						n.dataType = "xml";
						break;
					case "text/html":
						n.dataType = "html"
					}
					g.is(".delayed") ? setTimeout(function() {
						$.ajax(n)
					}, 200) : $.ajax(n)
				}
			}
		};
	$("form[action].jsAutoSubmit").live("ddSelect", function() {
		a($(this))
	});
	$(autoSubmits).live("keyup", function(g) {
		if(!$(this).is("textarea") && g.keyCode == 13) {
			g.preventDefault();
			$(this).trigger("change");
			return false
		}
		$(this).data("autoSubmitTimeout") && clearTimeout($(this).data("autoSubmitTimeout"));
		var c = this;
		$(this).data("autoSubmitTimeout", setTimeout(function() {
			$(c).trigger("change")
		}, 2E4))
	});
	$(autoSubmits).live("change IEchange selection", function(g, c) {
		var d = $(g.target),
			b = d.closest("form.jsAutoSubmit");
		if(b.closest(".utility")[0] && !b.closest("body")[0]) console_log("liveforms.js: Aborted an improper submit triggered by draggable move");
		else if(!(c && $.isPlainObject(c) && c.autoinit)) {
			$(this).data("autoSubmitTimeout") && clearTimeout(d.data("autoSubmitTimeout"));
			b.serialize();
			d.removeClass("autoSubmitSuccess autoSubmitFail");
			a(b, d)
		}
	});
	$("form.jsAutoSubmit").live("submit", function(g) {
		g.preventDefault()
	});
	if($.browser.msie) {
		var e = function() {
				$(this).triggerHandler("IEchange")
			};
		$("form.jsAutoSubmit").live("doIEAutoSubmit", function() {
			$(this).find("input[name], textarea[name], select[name]").eq(0).trigger("change")
		});
		$(autoSubmits).live("click keyup", function() {
			var g = $(this);
			g.data("jsAutoSubmit") || g.data("jsAutoSubmit", true).bind("change", e)
		})
	}
})();
document.createElement("canvas").getContext ||
function() {
	function a() {
		return this.context_ || (this.context_ = new x(this))
	}
	function e(O, S) {
		var Z = Za.call(arguments, 2);
		return function() {
			return O.apply(S, Z.concat(Za.call(arguments)))
		}
	}
	function g(O) {
		return String(O).replace(/&/g, "&amp;").replace(/"/g, "&quot;")
	}
	function c(O) {
		O.namespaces.g_vml_ || O.namespaces.add("g_vml_", "urn:schemas-microsoft-com:vml", "#default#VML");
		O.namespaces.g_o_ || O.namespaces.add("g_o_", "urn:schemas-microsoft-com:office:office", "#default#VML");
		if(!O.styleSheets.ex_canvas_) {
			O = O.createStyleSheet();
			O.owningElement.id = "ex_canvas_";
			O.cssText = "canvas{display:inline-block;overflow:hidden;text-align:left;width:300px;height:150px}"
		}
	}
	function d(O) {
		var S = O.srcElement;
		switch(O.propertyName) {
		case "width":
			S.getContext().clearRect();
			S.style.width = S.attributes.width.nodeValue + "px";
			S.firstChild.style.width = S.clientWidth + "px";
			break;
		case "height":
			S.getContext().clearRect();
			S.style.height = S.attributes.height.nodeValue + "px";
			S.firstChild.style.height = S.clientHeight + "px"
		}
	}
	function b(O) {
		O = O.srcElement;
		if(O.firstChild) {
			O.firstChild.style.width = O.clientWidth + "px";
			O.firstChild.style.height = O.clientHeight + "px"
		}
	}
	function f() {
		return [[1, 0, 0], [0, 1, 0], [0, 0, 1]]
	}
	function j(O, S) {
		for(var Z = f(), fa = 0; fa < 3; fa++) for(var V = 0; V < 3; V++) {
			for(var Da = 0, ya = 0; ya < 3; ya++) Da += O[fa][ya] * S[ya][V];
			Z[fa][V] = Da
		}
		return Z
	}
	function n(O, S) {
		S.fillStyle = O.fillStyle;
		S.lineCap = O.lineCap;
		S.lineJoin = O.lineJoin;
		S.lineWidth = O.lineWidth;
		S.miterLimit = O.miterLimit;
		S.shadowBlur = O.shadowBlur;
		S.shadowColor = O.shadowColor;
		S.shadowOffsetX = O.shadowOffsetX;
		S.shadowOffsetY = O.shadowOffsetY;
		S.strokeStyle = O.strokeStyle;
		S.globalAlpha = O.globalAlpha;
		S.font = O.font;
		S.textAlign = O.textAlign;
		S.textBaseline = O.textBaseline;
		S.arcScaleX_ = O.arcScaleX_;
		S.arcScaleY_ = O.arcScaleY_;
		S.lineScale_ = O.lineScale_
	}
	function l(O) {
		var S = O.indexOf("(", 3),
			Z = O.indexOf(")", S + 1);
		S = O.substring(S + 1, Z).split(",");
		if(S.length != 4 || O.charAt(3) != "a") S[3] = 1;
		return S
	}
	function o(O, S, Z) {
		return Math.min(Z, Math.max(S, O))
	}
	function q(O, S, Z) {
		Z < 0 && Z++;
		Z > 1 && Z--;
		return 6 * Z < 1 ? O + (S - O) * 6 * Z : 2 * Z < 1 ? S : 3 * Z < 2 ? O + (S - O) * (2 / 3 - Z) * 6 : O
	}
	function v(O) {
		if(O in $a) return $a[O];
		var S, Z = 1;
		O = String(O);
		if(O.charAt(0) == "#") S = O;
		else if(/^rgb/.test(O)) {
			Z = l(O);
			S = "#";
			for(var fa, V = 0; V < 3; V++) {
				fa = Z[V].indexOf("%") != -1 ? Math.floor(parseFloat(Z[V]) / 100 * 255) : +Z[V];
				S += ib[o(fa, 0, 255)]
			}
			Z = +Z[3]
		} else if(/^hsl/.test(O)) {
			V = Z = l(O);
			S = parseFloat(V[0]) / 360 % 360;
			S < 0 && S++;
			fa = o(parseFloat(V[1]) / 100, 0, 1);
			V = o(parseFloat(V[2]) / 100, 0, 1);
			if(fa == 0) fa = V = S = V;
			else {
				var Da = V < 0.5 ? V * (1 + fa) : V + fa - V * fa,
					ya = 2 * V - Da;
				fa = q(ya, Da, S + 1 / 3);
				V = q(ya, Da, S);
				S = q(ya, Da, S - 1 / 3)
			}
			S = "#" + ib[Math.floor(fa * 255)] + ib[Math.floor(V * 255)] + ib[Math.floor(S * 255)];
			Z = Z[3]
		} else S = db[O] || O;
		return $a[O] = {
			color: S,
			alpha: Z
		}
	}
	function x(O) {
		this.m_ = f();
		this.mStack_ = [];
		this.aStack_ = [];
		this.currentPath_ = [];
		this.fillStyle = this.strokeStyle = "#000";
		this.lineWidth = 1;
		this.lineJoin = "miter";
		this.lineCap = "butt";
		this.miterLimit = oa * 1;
		this.globalAlpha = 1;
		this.font = "10px sans-serif";
		this.textAlign = "left";
		this.textBaseline = "alphabetic";
		this.canvas = O;
		var S = "width:" + O.clientWidth + "px;height:" + O.clientHeight + "px;overflow:hidden;position:absolute",
			Z = O.ownerDocument.createElement("div");
		Z.style.cssText = S;
		O.appendChild(Z);
		S = Z.cloneNode(false);
		S.style.backgroundColor = "red";
		S.style.filter = "alpha(opacity=0)";
		O.appendChild(S);
		this.element_ = Z;
		this.lineScale_ = this.arcScaleY_ = this.arcScaleX_ = 1
	}
	function y(O, S, Z, fa) {
		O.currentPath_.push({
			type: "bezierCurveTo",
			cp1x: S.x,
			cp1y: S.y,
			cp2x: Z.x,
			cp2y: Z.y,
			x: fa.x,
			y: fa.y
		});
		O.currentX_ = fa.x;
		O.currentY_ = fa.y
	}
	function D(O, S) {
		var Z = v(O.strokeStyle),
			fa = Z.color;
		Z = Z.alpha * O.globalAlpha;
		var V = O.lineScale_ * O.lineWidth;
		if(V < 1) Z *= V;
		S.push("<g_vml_:stroke", ' opacity="', Z, '"', ' joinstyle="', O.lineJoin, '"', ' miterlimit="', O.miterLimit, '"', ' endcap="', Oa[O.lineCap] || "square", '"', ' weight="', V, 'px"', ' color="', fa, '" />')
	}
	function B(O, S, Z, fa) {
		var V = O.fillStyle,
			Da = O.arcScaleX_,
			ya = O.arcScaleY_,
			Ja = fa.x - Z.x,
			ra = fa.y - Z.y;
		if(V instanceof I) {
			var Na = 0;
			fa = {
				x: 0,
				y: 0
			};
			var Ua = 0,
				fb = 1;
			if(V.type_ == "gradient") {
				Na = V.x1_ / Da;
				Z = V.y1_ / ya;
				var Fa = u(O, V.x0_ / Da, V.y0_ / ya);
				Na = u(O, Na, Z);
				Na = Math.atan2(Na.x - Fa.x, Na.y - Fa.y) * 180 / Math.PI;
				if(Na < 0) Na += 360;
				if(Na < 1.0E-6) Na = 0
			} else {
				Fa = u(O, V.x0_, V.y0_);
				fa = {
					x: (Fa.x - Z.x) / Ja,
					y: (Fa.y - Z.y) / ra
				};
				Ja /= Da * oa;
				ra /= ya * oa;
				fb = Q.max(Ja, ra);
				Ua = 2 * V.r0_ / fb;
				fb = 2 * V.r1_ / fb - Ua
			}
			Da = V.colors_;
			Da.sort(function(kb, ob) {
				return kb.offset - ob.offset
			});
			ya = Da.length;
			Fa = Da[0].color;
			Z = Da[ya - 1].color;
			Ja = Da[0].alpha * O.globalAlpha;
			O = Da[ya - 1].alpha * O.globalAlpha;
			ra = [];
			for(var Pa = 0; Pa < ya; Pa++) {
				var nb = Da[Pa];
				ra.push(nb.offset * fb + Ua + " " + nb.color)
			}
			S.push('<g_vml_:fill type="', V.type_, '"', ' method="none" focus="100%"', ' color="', Fa, '"', ' color2="', Z, '"', ' colors="', ra.join(","), '"', ' opacity="', O, '"', ' g_o_:opacity2="', Ja, '"', ' angle="', Na, '"', ' focusposition="', fa.x, ",", fa.y, '" />')
		} else if(V instanceof C) Ja && ra && S.push("<g_vml_:fill", ' position="', -Z.x / Ja * Da * Da, ",", -Z.y / ra * ya * ya, '"', ' type="tile"', ' src="', V.src_, '" />');
		else {
			V = v(O.fillStyle);
			S.push('<g_vml_:fill color="', V.color, '" opacity="', V.alpha * O.globalAlpha, '" />')
		}
	}
	function u(O, S, Z) {
		O = O.m_;
		return {
			x: oa * (S * O[0][0] + Z * O[1][0] + O[2][0]) - Ka,
			y: oa * (S * O[0][1] + Z * O[1][1] + O[2][1]) - Ka
		}
	}
	function F(O, S, Z) {
		if(isFinite(S[0][0]) && isFinite(S[0][1]) && isFinite(S[1][0]) && isFinite(S[1][1]) && isFinite(S[2][0]) && isFinite(S[2][1])) {
			O.m_ = S;
			if(Z) O.lineScale_ = Ma(pa(S[0][0] * S[1][1] - S[0][1] * S[1][0]))
		}
	}
	function I(O) {
		this.type_ = O;
		this.r1_ = this.y1_ = this.x1_ = this.r0_ = this.y0_ = this.x0_ = 0;
		this.colors_ = []
	}
	function C(O, S) {
		if(!O || O.nodeType != 1 || O.tagName != "IMG") throw new M("TYPE_MISMATCH_ERR");
		if(O.readyState != "complete") throw new M("INVALID_STATE_ERR");
		switch(S) {
		case "repeat":
		case null:
		case "":
			this.repetition_ = "repeat";
			break;
		case "repeat-x":
		case "repeat-y":
		case "no-repeat":
			this.repetition_ = S;
			break;
		default:
			throw new M("SYNTAX_ERR");
		}
		this.src_ = O.src;
		this.width_ = O.width;
		this.height_ = O.height
	}
	function M(O) {
		this.code = this[O];
		this.message = O + ": DOM Exception " + this.code
	}
	var Q = Math,
		N = Q.round,
		X = Q.sin,
		ma = Q.cos,
		pa = Q.abs,
		Ma = Q.sqrt,
		oa = 10,
		Ka = oa / 2;
	navigator.userAgent.match(/MSIE ([\d.]+)?/);
	var Za = Array.prototype.slice;
	c(document);
	var eb = {
		init: function(O) {
			O = O || document;
			O.createElement("canvas");
			O.attachEvent("onreadystatechange", e(this.init_, this, O))
		},
		init_: function(O) {
			O = O.getElementsByTagName("canvas");
			for(var S = 0; S < O.length; S++) this.initElement(O[S])
		},
		initElement: function(O) {
			if(!O.getContext) {
				O.getContext = a;
				c(O.ownerDocument);
				O.innerHTML = "";
				O.attachEvent("onpropertychange", d);
				O.attachEvent("onresize", b);
				var S = O.attributes;
				if(S.width && S.width.specified) O.style.width = S.width.nodeValue + "px";
				else O.width = O.clientWidth;
				if(S.height && S.height.specified) O.style.height = S.height.nodeValue + "px";
				else O.height = O.clientHeight
			}
			return O
		}
	};
	eb.init();
	for(var ib = [], Ea = 0; Ea < 16; Ea++) for(var cb = 0; cb < 16; cb++) ib[Ea * 16 + cb] = Ea.toString(16) + cb.toString(16);
	var db = {
		aliceblue: "#F0F8FF",
		antiquewhite: "#FAEBD7",
		aquamarine: "#7FFFD4",
		azure: "#F0FFFF",
		beige: "#F5F5DC",
		bisque: "#FFE4C4",
		black: "#000000",
		blanchedalmond: "#FFEBCD V, 'px"', ' color="', fa, '" />')
	}
	function B(O, S, Z, fa) {
		var V = O.fillStyle,
			Da = O.arcScaleX_,
			ya = O.arcScaleY_,
			Ja = fa.x - Z.x,
			ra = fa.y - Z.y;
		if(V instanceof I) {
			var Na = 0;
			fa = {
				x: 0,
				y: 0
			};
			var Ua = 0,
				fb = 1;
			if(V.type_ == "gradient") {
				Na = V.x1_ / Da;
				Z = V.y1_ / ya;
				var Fa = u(O, V.x0_ / Da, V.y0_ / ya);
				Na = u(O, Na, Z);
				Na = Math.atan2(Na.x - Fa.x, Na.y - Fa.y) * 180 / Math.PI;
				if(Na < 0) Na += 360;
				if(Na < 1.0E-6) Na = 0
			} else {
				Fa = u(O, V.x0_, V.y0_);
				fa = {
					x: (Fa.x - Z.x) / Ja,
					y: (Fa.y - Z.y) / ra
				};
				Ja /= Da * oa;
				ra /= ya * oa;
				fb = Q.max(Ja, ra);
				Ua = 2 * V.r0_ / fb;
				fb = 2 * V.r1_ / fb - Ua
			}
			Da = V.colors_;
			Da.sort(function(kb, ob) {
				return kb.offset - ob.offset
			});
			ya = Da.length;
			Fa = Da[0].color;
			Z = Da[ya - 1].color;
			Ja = Da[0].alpha * O.globalAlpha;
			O = Da[ya - 1].alpha * O.globalAlpha;
			ra = [];
			for(var Pa = 0; Pa < ya; Pa++) {
				var nb = Da[Pa];
				ra.push(nb.offset * fb + Ua + " " + nb.color)
			}
			S.push('<g_vml_:fill type="', V.type_, '"', ' method="none" focus="100%"', ' color="', Fa, '"', ' color2="', Z, '"', ' colors="', ra.join(","), '"', ' opacity="', O, '"', ' g_o_:opacity2="', Ja, '"', ' angle="', Na, '"', ' focusposition="', fa.x, ",", fa.y, '" />')
		} else if(V instanceof C) Ja && ra && S.push("<g_vml_:fill", ' position="', -Z.x / Ja * Da * Da, ",", -Z.y / ra * ya * ya, '"', ' type="tile"', ' src="', V.src_, '" />');
		else {
			V = v(O.fillStyle);
			S.push('<g_vml_:fill color="', V.color, '" opacity="', V.alpha * O.globalAlpha, '" />')
		}
	}
	function u(O, S, Z) {
		O = O.m_;
		return {
			x: oa * (S * O[0][0] + Z * O[1][0] + O[2][0]) - Ka,
			y: oa * (S * O[0][1] + Z * O[1][1] + O[2][1]) - Ka
		}
	}
	function F(O, S, Z) {
		if(isFinite(S[0][0]) && isFinite(S[0][1]) && isFinite(S[1][0]) && isFinite(S[1][1]) && isFinite(S[2][0]) && isFinite(S[2][1])) {
			O.m_ = S;
			if(Z) O.lineScale_ = Ma(pa(S[0][0] * S[1][1] - S[0][1] * S[1][0]))
		}
	}
	function I(O) {
		this.type_ = O;
		this.r1_ = this.y1_ = this.x1_ = this.r0_ = this.y0_ = this.x0_ = 0;
		this.colors_ = []
	}
	function C(O, S) {
		if(!O || O.nodeType != 1 || O.tagName != "IMG") throw new M("TYPE_MISMATCH_ERR");
		if(O.readyState != "complete") throw new M("INVALID_STATE_ERR");
		switch(S) {
		case "repeat":
		case null:
		case "":
			this.repetition_ = "repeat";
			break;
		case "repeat-x":
		case "repeat-y":
		case "no-repeat":
			this.repetition_ = S;
			break;
		default:
			throw new M("SYNTAX_ERR");
		}
		this.src_ = O.src;
		this.width_ = O.width;
		this.height_ = O.height
	}
	function M(O) {
		this.code = this[O];
		this.message = O + ": DOM Exception " + this.code
	}
	var Q = Math,
		N = Q.round,
		X = Q.sin,
		ma = Q.cos,
		pa = Q.abs,
		Ma = Q.sqrt,
		oa = 10,
		Ka = oa / 2;
	navigator.userAgent.match(/MSIE ([\d.]+)?/);
	var Za = Array.prototype.slice;
	c(document);
	var eb = {
		init: function(O) {
			O = O || document;
			O.createElement("canvas");
			O.attachEvent("onreadystatechange", e(this.init_, this, O))
		},
		init_: function(O) {
			O = O.getElementsByTagName("canvas");
			for(var S = 0; S < O.length; S++) this.initElement(O[S])
		},
		initElement: function(O) {
			if(!O.getContext) {
				O.getContext = a;
				c(O.ownerDocument);
				O.innerHTML = "";
				O.attachEvent("onpropertychange", d);
				O.attachEvent("onresize", b);
				var S = O.attributes;
				if(S.width && S.width.specified) O.style.width = S.width.nodeValue + "px";
				else O.width = O.clientWidth;
				if(S.height && S.height.specified) O.style.height = S.height.nodeValue + "px";
				else O.height = O.clientHeight
			}
			return O
		}
	};
	eb.init();
	for(var ib = [], Ea = 0; Ea < 16; Ea++) for(var cb = 0; cb < 16; cb++) ib[Ea * 16 + cb] = Ea.toString(16) + cb.toString(16);
	var db = {
		aliceblue: "#F0F8FF",
		antiquewhite: "#FAEBD7",
		aquamarine: "#7FFFD4",
		azure: "#F0FFFF",
		beige: "#F5F5DC",
		bisque: "#FFE4C4",
		black: "#000000",
		blanchedalmond: "#FFEBCD",
		blueviolet: "#8A2BE2",
		brown: "#A52A2A",
		burlywood: "#DEB887",
		cadetblue: "#5F9EA0",
		chartreuse: "#7FFF00",
		chocolate: "#D2691E",
		coral: "#FF7F50",
		cornflowerblue: "#6495ED",
		cornsilk: "#FFF8DC",
		crimson: "#DC143C",
		cyan: "#00FFFF",
		darkblue: "#00008B",
		darkcyan: "#008B8B",
		darkgoldenrod: "#B8860B",
		darkgray: "#A9A9A9",
		darkgreen: "#006400",
		darkgrey: "#A9A9A9",
		darkkhaki: "#BDB76B",
		darkmagenta: "#8B008B",
		darkolivegreen: "#556B2F",
		darkorange: "#FF8C00",
		darkorchid: "#9932CC",
		darkred: "#8B0000",
		darksalmon: "#E9967A",
		darkseagreen: "#8FBC8F",
		darkslateblue: "#483D8B",
		darkslategray: "#2F4F4F",
		darkslategrey: "#2F4F4F",
		darkturquoise: "#00CED1",
		darkviolet: "#9400D3",
		deeppink: "#FF1493",
		deepskyblue: "#00BFFF",
		dimgray: "#696969",
		dimgrey: "#696969",
		dodgerblue: "#1E90FF",
		firebrick: "#B22222",
		floralwhite: "#FFFAF0",
		forestgreen: "#228B22",
		gainsboro: "#DCDCDC",
		ghostwhite: "#F8F8FF",
		gold: "#FFD700",
		goldenrod: "#DAA520",
		grey: "#808080",
		greenyellow: "#ADFF2F",
		honeydew: "#F0FFF0",
		hotpink: "#FF69B4",
		indianred: "#CD5C5C",
		indigo: "#4B0082",
		ivory: "#FFFFF0",
		khaki: "#F0E68C",
		lavender: "#E6E6FA",
		lavenderblush: "#FFF0F5",
		lawngreen: "#7CFC00",
		lemonchiffon: "#FFFACD",
		lightblue: "#ADD8E6",
		lightcoral: "#F08080",
		lightcyan: "#E0FFFF",
		lightgoldenrodyellow: "#FAFAD2",
		lightgreen: "#90EE90",
		lightgrey: "#D3D3D3",
		lightpink: "#FFB6C1",
		lightsalmon: "#FFA07A",
		lightseagreen: "#20B2AA",
		lightskyblue: "#87CEFA",
		lightslategray: "#778899",
		lightslategrey: "#778899",
		lightsteelblue: "#B0C4DE",
		lightyellow: "#FFFFE0",
		limegreen: "#32CD32",
		linen: "#FAF0E6",
		magenta: "#FF00FF",
		mediumaquamarine: "#66CDAA",
		mediumblue: "#0000CD",
		mediumorchid: "#BA55D3",
		mediumpurple: "#9370DB",
		mediumseagreen: "#3CB371",
		mediumslateblue: "#7B68EE",
		mediumspringgreen: "#00FA9A",
		mediumturquoise: "#48D1CC",
		mediumvioletred: "#C71585",
		midnightblue: "#191970",
		mintcream: "#F5FFFA",
		mistyrose: "#FFE4E1",
		moccasin: "#FFE4B5",
		navajowhite: "#FFDEAD",
		oldlace: "#FDF5E6",
		olivedrab: "#6B8E23",
		orange: "#FFA500",
		orangered: "#FF4500",
		orchid: "#DA70D6",
		palegoldenrod: "#EEE8AA",
		palegreen: "#98FB98",
		paleturquoise: "#AFEEEE",
		palevioletred: "#DB7093",
		papayawhip: "#FFEFD5",
		peachpuff: "#FFDAB9",
		peru: "#CD853F",
		pink: "#FFC0CB",
		plum: "#DDA0DD",
		powderblue: "#B0E0E6",
		rosybrown: "#BC8F8F",
		royalblue: "#4169E1",
		saddlebrown: "#8B4513",
		salmon: "#FA8072",
		sandybrown: "#F4A460",
		seagreen: "#2E8B57",
		seashell: "#FFF5EE",
		sienna: "#A0522D",
		skyblue: "#87CEEB",
		slateblue: "#6A5ACD",
		slategray: "#708090",
		slategrey: "#708090",
		snow: "#FFFAFA",
		springgreen: "#00FF7F",
		steelblue: "#4682B4",
		tan: "#D2B48C",
		thistle: "#D8BFD8",
		tomato: "#FF6347",
		turquoise: "#40E0D0",
		violet: "#EE82EE",
		wheat: "#F5DEB3",
		whitesmoke: "#F5F5F5",
		yellowgreen: "#9ACD32"
	},
		$a = {},
		qb = {
			style: "normal",
			variant: "normal",
			weight: "normal",
			size: 10,
			family: "sans-serif"
		},
		wb = {},
		Oa = {
			butt: "flat",
			round: "round"
		};
	Ea = x.prototype;
	Ea.clearRect = function() {
		if(this.textMeasureEl_) {
			this.textMeasureEl_.removeNode(true);
			this.textMeasureEl_ = null
		}
		this.element_.innerHTML = ""
	};
	Ea.beginPath = function() {
		this.currentPath_ = []
	};
	Ea.moveTo = function(O, S) {
		var Z = u(this, O, S);
		this.currentPath_.push({
			type: "moveTo",
			x: Z.x,
			y: Z.y
		});
		this.currentX_ = Z.x;
		this.currentY_ = Z.y
	};
	Ea.lineTo = function(O, S) {
		var Z = u(this, O, S);
		this.currentPath_.push({
			type: "lineTo",
			x: Z.x,
			y: Z.y
		});
		this.currentX_ = Z.x;
		this.currentY_ = Z.y
	};
	Ea.bezierCurveTo = function(O, S, Z, fa, V, Da) {
		V = u(this, V, Da);
		O = u(this, O, S);
		Z = u(this, Z, fa);
		y(this, O, Z, V)
	};
	Ea.quadraticCurveTo = function(O, S, Z, fa) {
		O = u(this, O, S);
		Z = u(this, Z, fa);
		fa = {
			x: this.currentX_ + 2 / 3 * (O.x - this.currentX_),
			y: this.currentY_ + 2 / 3 * (O.y - this.currentY_)
		};
		y(this, fa, {
			x: fa.x + (Z.x - this.currentX_) / 3,
			y: fa.y + (Z.y - this.currentY_) / 3
		}, Z)
	};
	Ea.arc = function(O, S, Z, fa, V, Da) {
		Z *= oa;
		var ya = Da ? "at" : "wa",
			Ja = O + ma(fa) * Z - Ka,
			ra = S + X(fa) * Z - Ka;
		fa = O + ma(V) * Z - Ka;
		V = S + X(V) * Z - Ka;
		if(Ja == fa && !Da) Ja += 0.125;
		O = u(this, O, S);
		Ja = u(this, Ja, ra);
		fa = u(this, fa, V);
		this.currentPath_.push({
			type: ya,
			x: O.x,
			y: O.y,
			radius: Z,
			xStart: Ja.x,
			yStart: Ja.y,
			xEnd: fa.x,
			yEnd: fa.y
		})
	};
	Ea.rect = function(O, S, Z, fa) {
		this.moveTo(O, S);
		this.lineTo(O + Z, S);
		this.lineTo(O + Z, S + fa);
		this.lineTo(O, S + fa);
		this.closePath()
	};
	Ea.strokeRect = function(O, S, Z, fa) {
		var V = this.currentPath_;
		this.beginPath();
		this.moveTo(O, S);
		this.lineTo(O + Z, S);
		this.lineTo(O + Z, S + fa);
		this.lineTo(O, S + fa);
		this.closePath();
		this.stroke();
		this.currentPath_ = V
	};
	Ea.fillRect = function(O, S, Z, fa) {
		var V = this.currentPath_;
		this.beginPath();
		this.moveTo(O, S);
		this.lineTo(O + Z, S);
		this.lineTo(O + Z, S + fa);
		this.lineTo(O, S + fa);
		this.closePath();
		this.fill();
		this.currentPath_ = V
	};
	Ea.createLinearGradient = function(O, S, Z, fa) {
		var V = new I("gradient");
		V.x0_ = O;
		V.y0_ = S;
		V.x1_ = Z;
		V.y1_ = fa;
		return V
	};
	Ea.createRadialGradient = function(O, S, Z, fa, V, Da) {
		var ya = new I("gradientradial");
		ya.x0_ = O;
		ya.y0_ = S;
		ya.r0_ = Z;
		ya.x1_ = fa;
		ya.y1_ = V;
		ya.r1_ = Da;
		return ya
	};
	Ea.drawImage = function(O) {
		var S, Z, fa, V, Da, ya, Ja, ra;
		fa = O.runtimeStyle.width;
		V = O.runtimeStyle.height;
		O.runtimeStyle.width = "auto";
		O.runtimeStyle.height = "auto";
		var Na = O.width,
			Ua = O.height;
		O.runtimeStyle.width = fa;
		O.runtimeStyle.height = V;
		if(arguments.length == 3) {
			S = arguments[1];
			Z = arguments[2];
			Da = ya = 0;
			Ja = fa = Na;
			ra = V = Ua
		} else if(arguments.length == 5) {
			S = arguments[1];
			Z = arguments[2];
			fa = arguments[3];
			V = arguments[4];
			Da = ya = 0;
			Ja = Na;
			ra = Ua
		} else if(arguments.length == 9) {
			Da = arguments[1];
			ya = arguments[2];
			Ja = arguments[3];
			ra = arguments[4];
			S = arguments[5];
			Z = arguments[6];
			fa = arguments[7];
			V = arguments[8]
		} else throw Error("Invalid number of arguments");
		var fb = u(this, S, Z),
			Fa = [];
		Fa.push(" <g_vml_:group", ' coordsize="', oa * 10, ",", oa * 10, '"', ' coordorigin="0,0"', ' style="width:', 10, "px;height:", 10, "px;position:absolute;");
		if(this.m_[0][0] != 1 || this.m_[0][1] || this.m_[1][1] != 1 || this.m_[1][0]) {
			var Pa = [];
			Pa.push("M11=", this.m_[0][0], ",", "M12=", this.m_[1][0], ",", "M21=", this.m_[0][1], ",", "M22=", this.m_[1][1], ",", "Dx=", N(fb.x / oa), ",", "Dy=", N(fb.y / oa), "");
			var nb = u(this, S + fa, Z),
				kb = u(this, S, Z + V);
			S = u(this, S + fa, Z + V);
			fb.x = Q.max(fb.x, nb.x, kb.x, S.x);
			fb.y = Q.max(fb.y, nb.y, kb.y, S.y);
			Fa.push("padding:0 ", N(fb.x / oa), "px ", N(fb.y / oa), "px 0;filter:progid:DXImageTransform.Microsoft.Matrix(", Pa.join(""), ", sizingmethod='clip');")
		} else Fa.push("top:", N(fb.y / oa), "px;left:", N(fb.x / oa), "px;");
		Fa.push(' ">', '<g_vml_:image src="', O.src, '"', ' style="width:', oa * fa, "px;", " height:", oa * V, 'px"', ' cropleft="', Da / Na, '"', ' croptop="', ya / Ua, '"', ' cropright="', (Na - Da - Ja) / Na, '"', ' cropbottom="', (Ua - ya - ra) / Ua, '"', " />", "</g_vml_:group>");
		this.element_.insertAdjacentHTML("BeforeEnd", Fa.join(""))
	};
	Ea.stroke = function(O) {
		for(var S = {
			x: null,
			y: null
		}, Z = {
			x: null,
			y: null
		}, fa = 0; fa < this.currentPath_.length; fa += 5E3) {
			var V = [];
			V.push("<g_vml_:shape", ' filled="', !! O, '"', ' style="position:absolute;width:', 10, "px;height:", 10, 'px;"', ' coordorigin="0,0"', ' coordsize="', oa * 10, ",", oa * 10, '"', ' stroked="', !O, '"', ' path="');
			for(var Da = fa; Da < Math.min(fa +rdorigin="0 0"', ' filled="', !V, '" stroked="', !! V, '" style="position:absolute;width:1px;height:1px;">');
		V ? D(this, ra) : B(this, ra, {
			x: -fa,
			y: 0
		}, {
			x: ya,
			y: Na.size
		});
		V = Da[0][0].toFixed(3) + "," + Da[1][0].toFixed(3) + "," + Da[0][1].toFixed(3) + "," + Da[1][1].toFixed(3) + ",0,0";
		S = N(S.x / oa) + "," + N(S.y / oa);
		ra.push('<g_vml_:skew on="t" matrix="', V, '" ', ' offset="', S, '" origin="', fa, ' 0" />', '<g_vml_:path textpathok="true" />', '<g_vml_:textpath on="true" string="', g(O), '" style="v-text-align:', Ua, ";font:", g(Pa), '" /></g_vml_:line>');
		this.element_.insertAdjacentHTML("beforeEnd", ra.join(""))
	};
	Ea.fillText = function(O, S, Z, fa) {
		this.drawText_(O, S, Z, fa, false)
	};
	Ea.strokeText = function(O, S, Z, fa) {
		this.drawText_(O, S, Z, fa, true)
	};
	Ea.measureText = function(O) {
		if(!this.textMeasureEl_) {
			this.element_.insertAdjacentHTML("beforeEnd", '<span style="position:absolute;top:-20000px;left:0;padding:0;margin:0;border:none;white-space:pre;"></span>');
			this.textMeasureEl_ = this.element_.lastChild
		}
		var S = this.element_.ownerDocument;
		this.textMeasureEl_.innerHTML = "";
		this.textMeasureEl_.style.font = this.font;
		this.textMeasureEl_.appendChild(S.createTextNode(O));
		return {
			width: this.textMeasureEl_.offsetWidth
		}
	};
	Ea.clip = function() {};
	Ea.arcTo = function() {};
	Ea.createPattern = function(O, S) {
		return new C(O, S)
	};
	I.prototype.addColorStop = function(O, S) {
		S = v(S);
		this.colors_.push({
			offset: O,
			color: S.color,
			alpha: S.alpha
		})
	};
	Ea = M.prototype = Error();
	Ea.INDEX_SIZE_ERR = 1;
	Ea.DOMSTRING_SIZE_ERR = 2;
	Ea.HIERARCHY_REQUEST_ERR = 3;
	Ea.WRONG_DOCUMENT_ERR = 4;
	Ea.INVALID_CHARACTER_ERR = 5;
	Ea.NO_DATA_ALLOWED_ERR = 6;
	Ea.NO_MODIFICATION_ALLOWED_ERR = 7;
	Ea.NOT_FOUND_ERR = 8;
	Ea.NOT_SUPPORTED_ERR = 9;
	Ea.INUSE_ATTRIBUTE_ERR = 10;
	Ea.INVALID_STATE_ERR = 11;
	Ea.SYNTAX_ERR = 12;
	Ea.INVALID_MODIFICATION_ERR = 13;
	Ea.NAMESPACE_ERR = 14;
	Ea.INVALID_ACCESS_ERR = 15;
	Ea.VALIDATION_ERR = 16;
	Ea.TYPE_MISMATCH_ERR = 17;
	G_vmlCanvasManager = eb;
	CanvasRenderingContext2D = x;
	CanvasGradient = I;
	CanvasPattern = C;
	DOMException = M
}();
(function(a) {
	a.color = {};
	a.color.make = function(g, c, d, b) {
		var f = {};
		f.r = g || 0;
		f.g = c || 0;
		f.b = d || 0;
		f.a = b != null ? b : 1;
		f.add = function(j, n) {
			for(var l = 0; l < j.length; ++l) f[j.charAt(l)] += n;
			return f.normalize()
		};
		f.scale = function(j, n) {
			for(var l = 0; l < j.length; ++l) f[j.charAt(l)] *= n;
			return f.normalize()
		};
		f.toString = function() {
			return f.a >= 1 ? "rgb(" + [f.r, f.g, f.b].join(",") + ")" : "rgba(" + [f.r, f.g, f.b, f.a].join(",") + ")"
		};
		f.normalize = function() {
			function j(n, l, o) {
				return l < n ? n : l > o ? o : l
			}
			f.r = j(0, parseInt(f.r), 255);
			f.g = j(0, parseInt(f.g), 255);
			f.b = j(0, parseInt(f.b), 255);
			f.a = j(0, f.a, 1);
			return f
		};
		f.clone = function() {
			return a.color.make(f.r, f.b, f.g, f.a)
		};
		return f.normalize()
	};
	a.color.extract = function(g, c) {
		var d;
		do {
			d = g.css(c).toLowerCase();
			if(d != "" && d != "transparent") break;
			g = g.parent()
		} while (!a.nodeName(g.get(0), "body"));
		if(d == "rgba(0, 0, 0, 0)") d = "transparent";
		return a.color.parse(d)
	};
	a.color.parse = function(g) {
		var c, d = a.color.make;
		if(c = /rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec(g)) return d(parseInt(c[1], 10), parseInt(c[2], 10), parseInt(c[3], 10));
		if(c = /rgba\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]+(?:\.[0-9]+)?)\s*\)/.exec(g)) return d(parseInt(c[1], 10), parseInt(c[2], 10), parseInt(c[3], 10), parseFloat(c[4]));
		if(c = /rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/.exec(g)) return d(parseFloat(c[1]) * 2.55, parseFloat(c[2]) * 2.55, parseFloat(c[3]) * 2.55);
		if(c = /rgba\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\s*\)/.exec(g)) return d(parseFloat(c[1]) * 2.55, parseFloat(c[2]) * 2.55, parseFloat(c[3]) * 2.55, parseFloat(c[4]));
		if(c = /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(g)) return d(parseInt(c[1], 16), parseInt(c[2], 16), parseInt(c[3], 16));
		if(c = /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(g)) return d(parseInt(c[1] + c[1], 16), parseInt(c[2] + c[2], 16), parseInt(c[3] + c[3], 16));
		g = a.trim(g).toLowerCase();
		if(g == "transparent") return d(255, 255, 255, 0);
		else {
			c = e[g] || [0, 0, 0];
			return d(c[0], c[1], c[2])
		}
	};
	var e = {
		aqua: [0, 255, 255],
		azure: [240, 255, 255],
		beige: [245, 245, 220],
		black: [0, 0, 0],
		blue: [0, 0, 255],
		brown: [165, 42, 42],
		cyan: [0, 255, 255],
		darkblue: [0, 0, 139],
		darkcyan: [0, 139, 139],
		darkgrey: [169, 169, 169],
		darkgreen: [0, 100, 0],
		darkkhaki: [189, 183, 107],
		darkmagenta: [139, 0, 139],
		darkolivegreen: [85, 107, 47],
		darkorange: [255, 140, 0],
		darkorchid: [153, 50, 204],
		darkred: [139, 0, 0],
		darksalmon: [233, 150, 122],
		darkviolet: [148, 0, 211],
		fuchsia: [255, 0, 255],
		gold: [255, 215, 0],
		green: [0, 128, 0],
		indigo: [75, 0, 130],
		khaki: [240, 230, 140],
		lightblue: [173, 216, 230],
		lightcyan: [224, 255, 255],
		lightgreen: [144, 238, 144],
		lightgrey: [211, 211, 211],
		lightpink: [255, 182, 193],
		lightyellow: [255, 255, 224],
		lime: [0, 255, 0],
		magenta: [255, 0, 255],
		maroon: [128, 0, 0],
		navy: [0, 0, 128],
		olive: [128, 128, 0],
		orange: [255, 165, 0],
		pink: [255, 192, 203],
		purple: [128, 0, 128],
		violet: [128, 0, 128],
		red: [255, 0, 0],
		silver: [192, 192, 192],
		white: [255, 255, 255],
		yellow: [255, 255, 0]
	}
})(jQuery);
(function(a) {
	function e(c, d, b, f) {
		function j(R, ca) {
			ca = [lb].concat(ca);
			for(var Y = 0; Y < R.length; ++Y) R[Y].apply(this, ca)
		}
		function n(R) {
			for(var ca = [], Y = 0; Y < R.length; ++Y) {
				var da = a.extend(true, {}, V.series);
				if(R[Y].data != null) {
					da.data = R[Y].data;
					delete R[Y].data;
					a.extend(true, da, R[Y]);
					R[Y].data = da.data
				} else da.data = R[Y];
				ca.push(da)
			}
			fa = ca;
			ca = fa.length;
			Y = [];
			da = [];
			for(R = 0; R < fa.length; ++R) {
				var ba = fa[R].color;
				if(ba != null) {
					--ca;
					typeof ba == "number" ? da.push(ba) : Y.push(a.color.parse(fa[R].color))
				}
			}
			for(R = 0; R < da.length; ++R) ca = Math.max(ca, da[R] + 1);
			Y = [];
			for(R = da = 0; Y.length < ca;) {
				ba = V.colors.length == R ? a.color.make(100, 100, 100) : a.color.parse(V.colors[R]);
				ba.scale("rgb", 1 + (da % 2 == 1 ? -1 : 1) * Math.ceil(da / 2) * 0.2);
				Y.push(ba);
				++R;
				if(R >= V.colors.length) {
					R = 0;
					++da
				}
			}
			for(R = ca = 0; R < fa.length; ++R) {
				da = fa[R];
				if(da.color == null) {
					da.color = Y[ca].toString();
					++ca
				} else if(typeof da.color == "number") da.color = Y[da.color].toString();
				if(da.lines.show == null) {
					var la;
					ba = true;
					for(la in da) if(da[la] && da[la].show) {
						ba = false;
						break
					}
					if(ba) da.lines.show = true
				}
				da.xaxis = v(Ua, l(da, "x"));
				da.yaxis = v(fb, l(da, "y"))
			}
			x()
		}
		function l(R, ca) {
			var Y = R[ca + "axis"];
			if(typeof Y == "object") Y = Y.n;
			if(typeof Y != "number") Y = 1;
			return Y
		}
		function o() {
			return a.grep(Ua.concat(fb), function(R) {
				return R
			})
		}
		function q(R) {
			var ca = {},
				Y, da;
			for(Y = 0; Y < Ua.length; ++Y) if((da = Ua[Y]) && da.used) ca["x" + da.n] = da.c2p(R.left);
			for(Y = 0; Y < fb.length; ++Y) if((da = fb[Y]) && da.used) ca["y" + da.n] = da.c2p(R.top);
			if(ca.x1 !== undefined) ca.x = ca.x1;
			if(ca.y1 !== undefined) ca.y = ca.y1;
			return ca
		}
		function v(R, ca) {
			R[ca - 1] || (R[ca - 1] = {
				n: ca,
				direction: R == Ua ? "x" : "y",
				options: a.extend(true, {}, R == Ua ? V.xaxis : V.yaxis)
			});
			return R[ca - 1]
		}
		function x() {
			function R(J, L, K) {
				if(L < J.datamin && L != -da) J.datamin = L;
				if(K > J.datamax && K != da) J.datamax = K
			}
			var ca = Number.POSITIVE_INFINITY,
				Y = Number.NEGATIVE_INFINITY,
				da = Number.MAX_VALUE,
				ba, la, na, xa, sa, za, ua, qa, La, Sa;
			a.each(o(), function(J, L) {
				L.datamin = ca;
				L.datamax = Y;
				L.used = false
			});
			for(ba = 0; ba < fa.length; ++ba) {
				sa = fa[ba];
				sa.datapoints = {
					points: []
				};
				j(vb.processRawData, [sa, sa.data, sa.datapoints])
			}
			for(ba = 0; ba < fa.length; ++ba) {
				sa = fa[ba];
				var w = sa.data,
					E = sa.datapoints.format;
				if(!E) {
					E = [];
					E.push({
						x: true,
						number: true,
						required: true
					});
					E.push({
						y: true,
						number: true,
						required: true
					});
					if(sa.bars.show || sa.lines.show && sa.lines.fill) {
						E.push({
							y: true,
							number: true,
							required: false,
							defaultValue: 0
						});
						if(sa.bars.horizontal) {
							delete E[E.length - 1].y;
							E[E.length - 1].x = true
						}
					}
					sa.datapoints.format = E
				}
				if(sa.datapoints.pointsize == null) {
					sa.datapoints.pointsize = E.length;
					ua = sa.datapoints.pointsize;
					za = sa.datapoints.points;
					insertSteps = sa.lines.show && sa.lines.steps;
					sa.xaxis.used = sa.yaxis.used = true;
					for(la = na = 0; la < w.length; ++la, na += ua) {
						Sa = w[la];
						var G = Sa == null;
						if(!G) for(xa = 0; xa < ua; ++xa) {
							qa = Sa[xa];
							if(La = E[xa]) {
								if(La.number && qa != null) {
									qa = +qa;
									if(isNaN(qa)) qa = null;
									else if(qa == Infinity) qa = da;
									else if(qa == -Infinity) qa = -da
								}
								if(qa == null) {
									if(La.required) G = true;
									if(La.defaultValue != null) qa = La.defaultValue
								}
							}
							za[na + xa] = qa
						}
						if(G) for(xa = 0; xa < ua; ++xa) {
							qa = za[na + xa];
							if(qa != null) {
								La = E[xa];
								La.x && R(sa.xaxis, qa, qa);
								La.y && R(sa.yaxis, qa, qa)
							}
							za[na + xa] = null
						} else if(insertSteps && na > 0 && za[na - ua] != null && za[na - ua] != za[na] && za[na - ua + 1] != za[na + 1]) {
							for(xa = 0; xa < ua; ++xa) za[na + ua + xa] = za[na + xa];
							za[na + 1] = za[na - ua + 1];
							na += ua
						}
					}
				}
			}
			for(ba = 0; ba < fa.length; ++ba) {
				sa = fa[ba];
				j(vb.processDatapoints, [sa, sa.datapoints])
			}
			for(ba = 0; ba < fa.length; ++ba) {
				sa = fa[ba];
				za = sa.datapoints.points;
				ua = sa.datapoints.pointsize;
				E = sa.datapoints.format;
				Sa = na = ca;
				G = w = Y;
				for(la = 0; la < za.length; la += ua) if(za[la] != null) for(xa = 0; xa < ua; ++xa) {
					qa = za[la + xa];
					La = E[xa];
					if(!(!La || qa == da || qa == -da)) {
						if(La.x) {
							if(qa < na) na = qa;
							if(qa > w) w = qa
						}
						if(La.y) {
							if(qa < Sa) Sa = qa;
							if(qa > G) G = qa
						}
					}
				}
				if(sa.bars.show) {
					la = sa.bars.align == "left" ? 0 : -sa.bars.barWidth / 2;
					if(sa.bars.horizontal) {
						Sa += la;
						G += la + sa.bars.barWidth
					} else {
						na += la;
						w += la + sa.bars.barWidth
					}
				}
				R(sa.xaxis, na, w);
				R(sa.yaxis, Sa, G)
			}
			a.each(o(), function(J, L) {
				if(L.datamin == ca) L.datamin = null;
				if(L.datamax == Y) L.datamax = null
			})
		}
		function y(R, ca) {
			var Y = document.createElement("canvas");
			Y.className = ca;
			Y.width = Pa;
			Y.height = nb;
			R || a(Y).css({
				position: "absolute",
				left: 0,
				top: 0
			});
			a(Y).appendTo(c);
			Y.getContext || (Y = window.G_vmlCanvasManager.initElement(Y));
			Y.getContext("2d").save();
			return Y
		}
		function D() {
			Pa = c.width();
			nb = c.height();
			if(Pa <= 0 || nb <= 0) throw "Invalid dimensions for plot, width = " + Pa + ", height = " + nb;
		}
		function B(R) {
			if(R.width != Pa) R.width = Pa;
			if(R.height != nb) R.height = nb;
			R = R.getContext("2d");
			R.restore();
			R.save()
		}
		function u(R) {
			function ca(na) {
				return na
			}
			var Y, da, ba = R.options.transform || ca,
				la = R.options.inverseTransform;
			if(R.direction == "x") {
				Y = R.scale = kb / Math.abs(ba(R.max) - ba(R.min));
				da = Math.min(ba(R.max), ba(R.min))
			} else {
				Y = R.scale = ob / Math.abs(ba(R.max) - ba(R.min));
				Y = -Y;
				da = Math.max(ba(R.max), ba(R.min))
			}
			R.p2c = ba == ca ?
			function(na) {
				return(na - da) * Y
			} : function(na) {
				return(ba(na) - da) * Y
			};
			R.c2p = la ?
			function(na) {
				return la(da + na / Y)
			} : function(na) {
				return da + na / Y
			}
		}
		function F(R) {
			var ca = R.labelWidth,
				Y = R.labelHeight,
				da = R.options.position,
				ba = R.options.tickLength,
				la = V.grid.axisMargin,
				na = V.grid.labelMargin,
				xa = R.direction == "x" ? Ua : fb,
				sa = a.grep(xa, function(ua) {
					return ua && ua.options.position == da && ua.reserveSpace
				});
			if(a.inArray(R, sa) == sa.length - 1) la = 0;
			if(ba == null) {
				ba = a.grep(xa, function(ua) {
					return ua && ua.reserveSpace
				});
				var za = a.inArray(R, ba) == 0;
				ba = za ? "full" : 5
			}
			isNaN(+ba) || (na += +ba);
			if(R.direction == "x") {
				Y += na;
				if(da == "bottom") {
					Fa.bottom += Y + la;
					R.box = {
						top: nb - Fa.bottom,
						height: Y
					}
				} else {
					R.box = {
						top: Fa.top + la,
						height: Y
					};
					Fa.top += Y + la
				}
			} else {
				ca += na;
				if(da == "left") {
					R.box = {
						left: Fa.left + la,
						width: ca
					};
					Fa.left += ca + la
				} else {
					Fa.right += ca + la;
					R.box = {
						left: Pa - Fa.right,
						width: ca
					}
				}
			}
			R.position = da;
			R.tickLength = ba;
			R.box.padding = na;
			R.innermost = za
		}
		function I() {
			var R = V.grid.minBorderMargin,
				ca = {
					x: 0,
					y: 0
				},
				Y;
			if(R == null) for(Y = R = 0; Y < fa.length; ++Y) R = Math.max(R, 2 * (fa[Y].points.radius + fa[Y].points.lineWidth / 2));
			ca.x = ca.y = Math.ceil(R);
			a.each(o(), function(da, ba) {
				var la = ba.direction;
				if(ba.reserveSpace) ca[la] = Math.ceil(Math.max(ca[la], (la == "x" ? ba.labelWidth : ba.labelHeight) / 2))
			});
			Fa.left = Math.max(ca.x, Fa.left);
			Fa.right = Math.max(ca.x, Fa.right);
			Fa.top = Math.max(ca.y, Fa.top);
			Fa.bottom = Math.max(ca.y, Fa.bottom)
		}
		function C() {
			var R, ca = o();
			R = V.grid.show;
			for(var Y in Fa) Fa[Y] = R ? V.grid.borderWidth : 0;
			a.each(ca, function(ba, la) {
				la.show = la.options.show;
				if(la.show == null) la.show = la.used;
				la.reserveSpace = la.show || la.options.reserveSpace;
				var na = la.options,
					xa = +(na.min != null ? na.min : la.datamin),
					sa = +(na.max != null ? na.max : la.datamax),
					za = sa - xa;
				if(za == 0) {
					za = sa == 0 ? 1 : 0.01;
					if(na.min == null) xa -= za;
					if(na.max == null || na.min != null) sa += za
				} else {
					var ua = na.autoscaleMargin;
					if(ua != null) {
						if(na.min == null) {
							xa -= za * ua;
							if(xa < 0 && la.datamin != null && la.datamin >= 0) xa = 0
						}
						if(na.max == null) {
							sa += za * ua;
							if(sa > 0 && la.datamax != null && la.datamax <= 0) sa = 0
						}
					}
				}
				la.min = xa;
				la.max = sa
			});
			if(R) {
				var da = {
					style: c.css("font-style"),
					size: Math.round(0.8 * (+c.css("font-size").replace("px", "") || 13)),
					variant: c.css("font-variant"),
					weight: c.css("font-weight"),
					family: c.css("font-family")
				};
				Y = a.grep(ca, function(ba) {
					return ba.reserveSpace
				});
				a.each(Y, function(ba, la) {
					M(la);
					var na = la.options.ticks,
						xa = [];
					if(na == null || typeof na == "number" && na > 0) xa = la.tickGenerator(la);
					else if(na) xa = a.isFunction(na) ? na(la) : na;
					var sa;
					la.ticks = [];
					for(na = 0; na < xa.length; ++na) {
						var za = null,
							ua = xa[na];
						if(typeof ua == "object") {
							sa = +ua[0];
							if(ua.length > 1) za = ua[1]
						} else sa = +ua;
						if(za == null) za = la.tickFormatter(sa, la);
						isNaN(sa) || la.ticks.push({
							v: sa,
							label: za
						})
					}
					xa = la.ticks;
					if(la.options.autoscaleMargin && xa.length > 0) {
						if(la.options.min == null) la.min = Math.min(la.min, xa[0].v);
						if(la.options.max == null && xa.length > 1) la.max = Math.max(la.max, xa[xa.length - 1].v)
					}
					la.font = a.extend({}, da, la.options.font);
					xa = la.options;
					na = la.ticks || [];
					sa = xa.labelWidth || 0;
					za = xa.labelHeight || 0;
					ua = la.font;
					ra.save();
					ra.font = ua.style + " " + ua.variant + " " + ua.weight + " " + ua.size + "px '" + ua.family + "'";
					for(var qa = 0; qa < na.length; ++qa) {
						var La = na[qa];
						La.lines = [];
						La.width = La.height = 0;
						if(La.label) {
							for(var Sa = La.label.replace(/<br ?\/?>|\r\n|\r/g, "\n").split("\n"), w = 0; w < Sa.length; ++w) {
								var E = {
									text: Sa[w]
								},
									G = ra.measureText(E.text);
								E.width = G.width;
								E.height = G.height != null ? G.height : ua.size;
								E.height += Math.round(ua.size * 0.15);
								La.width = Math.max(E.width, La.width);
								La.height += E.height;
								La.lines.push(E)
							}
							if(xa.labelWidth == null) sa = Math.max(sa, La.width);
							if(xa.labelHeight == null) za = Math.max(za, La.height)
						}
					}
					ra.restore();
					la.labelWidth = Math.ceil(sa);
					la.labelHeight = Math.ceil(za)
				});
				for(R = Y.length - 1; R >= 0; --R) F(Y[R]);
				I();
				a.each(Y, function(ba, la) {
					if(la.direction == "x") {
						la.box.left = Fa.left - la.labelWidth / 2;
						la.box.width = Pa - Fa.left - Fa.right + la.labelWidth
					} else {
						la.box.top = Fa.top - la.labelHeight / 2;
						la.box.height = nb - Fa.bottom - Fa.top + la.labelHeight
					}
				})
			}
			kb = Pa - Fa.left - Fa.right;
			ob = nb - Fa.bottom - Fa.top;
			a.each(ca, function(ba, la) {
				u(la)
			});
			eb()
		}
		function M(R) {
			var ca = R.options,
				Y = (R.max - R.min) / (typeof ca.ticks == "number" && ca.ticks > 0 ? ca.ticks : 0.3 * Math.sqrt(R.direction == "x" ? Pa : nb)),
				da, ba, la, na;
			if(ca.mode == "time") {
				var xa = {
					second: 1E3,
					minute: 6E4,
					hour: 36E5,
					day: 864E5,
					month: 2592E6,
					year: 525949.2 * 60 * 1E3
				};
				na = [
					[1, "second"],
					[2, "second"],
					[5, "second"],
					[10, "second"],
					[30, "second"],
					[1, "minute"],
					[2, "minute"],
					[5, "minute"],
					[10, "minute"],
					[30, "minute"],
					[1, "hour"],
					[2, "hour"],
					[4, "hour"],
					[8, "hour"],
					[12, "hour"],
					[1, "day"],
					[2, "day"],
					[3, "day"],
					[0.25, "month"],
					[0.5, "month"],
					[1, "month"],
					[2, "month"],
					[3, "month"],
					[6, "month"],
					[1, "year"]
				];
				da = 0;
				if(ca.minTickSize != null) da = typeof ca.tickSize == "number" ? ca.tickSize : ca.minTickSize[0] * xa[ca.minTickSize[1]];
				for(ba = 0; ba < na.length - 1; ++ba) if(Y < (na[ba][0] * xa[na[ba][1]] + na[ba + 1][0] * xa[na[ba + 1][1]]) / 2 && na[ba][0] * xa[na[ba][1]] >= da) break;
				da = na[ba][0];
				la = na[ba][1];
				if(la == "year") {
					ba = Math.pow(10, Math.floor(Math.log(Y / xa.year) / Math.LN10));
					na = Y / xa.year / ba;
					da = na < 1.5 ? 1 : na < 3 ? 2 : na < 7.5 ? 5 : 10;
					da *= ba
				}
				R.tickSize = ca.tickSize || [da, la];
				ba = function(ua) {
					var qa = [],
						La = ua.tickSize[0],
						Sa = ua.tickSize[1],
						w = new Date(ua.min),
						E = La * xa[Sa];
					Sa == "second" && w.setUTCSeconds(g(w.getUTCSeconds(), La));
					Sa == "minute" && w.setUTCMinutes(g(w.getUTCMinutes(), La));
					Sa == "hour" && w.setUTCHours(g(w.getUTCHours(), La));
					Sa == "month" && w.setUTCMonth(g(w.getUTCMonth(), La));
					Sa == "year" && w.setUTCFullYear(g(w.getUTCFullYear(), La));
					w.setUTCMilliseconds(0);
					E >= xa.minute && w.setUTCSeconds(0);
					E >= xa.hour && w.setUTCMinutes(0);
					E >= xa.day && w.setUTCHours(0);
					E >= xa.day * 4 && w.setUTCDate(1);
					E >= xa.year && w.setUTCMonth(0);
					var G = 0,
						J = Number.NaN,
						L;
					do {
						L = J;
						J = w.getTime();
						qa.push(J);
						if(Sa == "month") if(La < 1) {
							w.setUTCDate(1);
							var K = w.getTime();
							w.setUTCMonth(w.getUTCMonth() + 1);
							var ea = w.getTime();
							w.setTime(J + G * xa.hour + (ea - K) * La);
							G = w.getUTCHours();
							w.setUTCHours(0)
						} else w.setUTCMonth(w.getUTCMonth() + La);
						else Sa == "year" ? w.setUTCFullYear(w.getUTCFullYear() + La) : w.setTime(J + E)
					} while (J < ua.max && J != L);
					return qa
				};
				da = function(ua, qa) {
					var La = new Date(ua);
					if(ca.timeformat != null) return a.plot.formatDate(La, ca.timeformat, ca.monthNames);
					var Sa = qa.tickSize[0] * xa[qa.tickSize[1]],
						w = qa.max - qa.min,
						E = ca.twelveHourClock ? " %p" : "";
					fmt = Sa < xa.minute ? "%h:%M:%S" + E : Sa < xa.day ? w < 2 * xa.day ? "%h:%M" + E : "%b %d %h:%M" + E : Sa < xa.month ? "%b %d" : Sa < xa.year ? w < xa.year ? "%b" : "%b %y" : "%y";
					return a.plot.formatDate(La, fmt, ca.monthNames)
				}
			} else {
				la = ca.tickDecimals;
				var sa = -Math.floor(Math.log(Y) / Math.LN10);
				if(la != null && sa > la) sa = la;
				ba = Math.pow(10, -sa);
				na = Y / ba;
				if(na < 1.5) da = 1;
				else if(na < 3) {
					da = 2;
					if(na > 2.25 && (la == null || sa + 1 <= la)) {
						da = 2.5;
						++sa
					}
				} else da = na < 7.5 ? 5 : 10;
				da *= ba;
				if(ca.minTickSize != null && da < ca.minTickSize) da = ca.minTickSize;
				R.tickDecimals = Math.max(0, la != null ? la : sa);
				R.tickSize = ca.tickSize || da;
				ba = function(ua) {
					var qa = [],
						La = g(ua.min, ua.tickSize),
						Sa = 0,
						w = Number.NaN,
						E;
					do {
						E = w;
						w = La + Sa * ua.tickSize;
						qa.push(w);++Sa
					} while (w < ua.max && w != E);
					return qa
				};
				da = function(ua, qa) {
					return ua.toFixed(qa.tickDecimals)
				}
			}
			if(ca.alignTicksWithAxis != null) {
				var za = (R.direction == "x" ? Ua : fb)[ca.alignTicksWithAxis - 1];
				if(za && za.used && za != R) {
					ba = ba(R);
					if(ba.length > 0) {
						if(ca.min == null) R.min = Math.min(R.min, ba[0]);
						if(ca.max == null && ba.length > 1) R.max = Math.max(R.max, ba[ba.length - 1])
					}
					ba = function(ua) {
						var qa = [],
							La, Sa;
						for(Sa = 0; Sa < za.ticks.length; ++Sa) {
							La = (za.ticks[Sa].v - za.min) / (za.max - za.min);
							La = ua.min + La * (ua.max - ua.min);
							qa.push(La)
						}
						return qa
					};
					if(!R.mode && ca.tickDecimals == null) {
						Y = Math.max(0, -Math.floor(Math.log(Y) / Math.LN10) + 1);
						na = ba(R);
						if(!(na.length > 1 && /\..*0$/.test((na[1] - na[0]).toFixed(Y)))) R.tickDecimals = Y
					}
				}
			}
			R.tickGenerator = ba;
			R.tickFormatter = a.isFunction(ca.tickFormatter) ?
			function(ua, qa) {
				return "" + ca.tickFormatter(ua, qa)
			} : da
		}
		function Q() {
			ra.clearRect(0, 0, Pa, nb);
			var R = V.grid;
			if(R.show && R.backgroundColor) {
				ra.save();
				ra.translate(Fa.left, Fa.top);
				ra.fillStyle = Z(V.grid.backgroundColor, ob, 0, "rgba(255, 255, 255, 0)");
				ra.fillRect(0, 0, kb, ob);
				ra.restore()
			}
			if(R.show && !R.aboveData) {
				X();
				ma()
			}
			for(var ca = 0; ca < fa.length; ++ca) {
				j(vb.drawSeries, [ra, fa[ca]]);
				var Y = fa[ca];
				Y.lines.show && pa(Y);
				Y.bars.show && Ka(Y);
				Y.points.show && Ma(Y)
			}
			j(vb.draw, [ra]);
			if(R.show && R.aboveData) {
				X();
				ma()
			}
		}
		function N(R, ca) {
			var Y, da, ba, la, na = o();
			for(i = 0; i < na.length; ++i) {
				Y = na[i];
				if(Y.direction == ca) {
					la = ca + Y.n + "axis";
					if(!R[la] && Y.n == 1) la = ca + "axis";
					if(R[la]) {
						da = R[la].from;
						ba = R[la].to;
						break
					}
				}
			}
			if(!R[la]) {
				Y = ca == "x" ? Ua[0] : fb[0];
				da = R[ca + "1"];
				ba = R[ca + "2"]
			}
			if(da != null && ba != null && da > ba) {
				la = da;
				da = ba;
				ba = la
			}
			return {
				from: da,
				to: ba,
				axis: Y
			}
		}
		function X() {
			var R;
			ra.save();
			ra.translate(Fa.left, Fa.top);
			var ca = V.grid.markings;
			if(ca) {
				if(a.isFunction(ca)) {
					var Y = lb.getAxes();
					Y.xmin = Y.xaxis.min;
					Y.xmax = Y.xaxis.max;
					Y.ymin = Y.yaxis.min;
					Y.ymax = Y.yaxis.max;
					ca = ca(Y)
				}
				for(R = 0; R < ca.length; ++R) {
					Y = ca[R];
					var da = N(Y, "x"),
						ba = N(Y, "y");
					if(da.from == null) da.from = da.axis.min;
					if(da.to == null) da.to = da.axis.max;
					if(ba.from == null) ba.from = ba.axis.min;
					if(ba.to == null) ba.to = ba.axis.max;
					if(!(da.to < da.axis.min || da.from > da.axis.max || ba.to < ba.axis.min || ba.from > ba.axis.max)) {
						da.from = Math.max(da.from, da.axis.min);
						da.to = Math.min(da.to, da.axis.max);
						ba.from = Math.max(ba.from, ba.axis.min);
						ba.to = Math.min(ba.to, ba.axis.max);
						if(!(da.from == da.to && ba.from == ba.to)) {
							da.from = da.axis.p2c(da.from);
							da.to = da.axis.p2c(da.to);
							ba.from = ba.axis.p2c(ba.from);
							ba.to = ba.axis.p2c(ba.to);
							if(da.from == da.to || ba.from == ba.to) {
								ra.beginPath();
								ra.strokeStyle = Y.color || V.grid.markingsColor;
								ra.lineWidth = Y.lineWidth || V.grid.markingsLineWidth;
								ra.moveTo(da.from, ba.from);
								ra.lineTo(da.to, ba.to);
								ra.stroke()
							} else {
								ra.fillStyle = Y.color || V.grid.markingsColor;
								ra.fillRect(da.from, ba.to, da.to - da.from, ba.from - ba.to)
							}
						}
					}
				}
			}
			Y = o();
			ca = V.grid.borderWidth;
			for(da = 0; da < Y.length; ++da) {
				ba = Y[da];
				R = ba.box;
				var la = ba.tickLength,
					na, xa, sa, za;
				if(!(!ba.show || ba.ticks.length == 0)) {
					ra.strokeStyle = ba.options.tickColor || a.color.parse(ba.options.color).scale("a", 0.22).toString();
					ra.lineWidth = 1;
					if(ba.direction == "x") {
						na = 0;
						xa = la == "full" ? ba.position == "top" ? 0 : ob : R.top - Fa.top + (ba.position == "top" ? R.height : 0)
					} else {
						xa = 0;
						na = la == "full" ? ba.position == "left" ? 0 : kb : R.left - Fa.left + (ba.position == "left" ? R.width : 0)
					}
					if(!ba.innermost) {
						ra.beginPath();
						sa = za = 0;
						if(ba.direction == "x") sa = kb;
						else za = ob;
						if(ra.lineWidth == 1) {
							na = Math.floor(na) + 0.5;
							xa = Math.floor(xa) + 0.5
						}
						ra.moveTo(na, xa);
						ra.lineTo(na + sa, xa + za);
						ra.stroke()
					}
					ra.beginPath();
					for(R = 0; R < ba.ticks.length; ++R) {
						var ua = ba.ticks[R].v;
						sa = za = 0;
						if(!(ua < ba.min || ua > ba.max || la == "full" && ca > 0 && (ua == ba.min || ua == ba.max))) {
							if(ba.direction == "x") {
								na = ba.p2c(ua);
								za = la == "full" ? -ob : la;
								if(ba.position == "top") za = -za
							} else {
								xa = ba.p2c(ua);
								sa = la == "full" ? -kb : la;
								if(ba.position == "left") sa = -sa
							}
							if(ra.lineWidth == 1) if(ba.direction == "x") na = Math.floor(na) + 0.5;
							else xa = Math.floor(xa) + 0.5;
							ra.moveTo(na, xa);
							ra.lineTo(na + sa, xa + za)
						}
					}
					ra.stroke()
				}
			}
			if(ca) {
				ra.lineWidth = ca;
				ra.strokeStyle = V.grid.borderColor;
				ra.strokeRect(-ca / 2, -ca / 2, kb + ca, ob + ca)
			}
			ra.restore()
		}
		function ma() {
			ra.save();
			a.each(o(), function(R, ca) {
				if(!(!ca.show || ca.ticks.length == 0)) {
					var Y = ca.box,
						da = ca.font;
					ra.fillStyle = ca.options.color;
					ra.font = da.style + " " + da.variant + " " + da.weight + " " + da.size + "px " + da.family;
					ra.textAlign = "start";
					ra.textBaseline = "middle";
					for(da = 0; da < ca.ticks.length; ++da) {
						var ba = ca.ticks[da];
						if(!(!ba.label || ba.v < ca.min || ba.v > ca.max)) for(var la, na, xa = 0, sa, za = 0; za < ba.lines.length; ++za) {
							sa = ba.lines[za];
							if(ca.direction == "x") {
								la = Fa.left + ca.p2c(ba.v) - sa.width / 2;
								na = ca.position == "bottom" ? Y.top + Y.padding : Y.top + Y.height - Y.padding - ba.height
							} else {
								na = Fa.top + ca.p2c(ba.v) - ba.height / 2;
								la = ca.position == "left" ? Y.left + Y.width - Y.padding - sa.width : Y.left + Y.padding
							}
							na += sa.height / 2 + xa;
							xa += sa.height;
							if(a.browser.opera) {
								la = Math.floor(la);
								na = Math.ceil(na - 2)
							}
							ra.fillText(sa.text, la, na)
						}
					}
				}
			});
			ra.restore()
		}
		function pa(R) {
			function ca(na, xa, sa, za, ua) {
				var qa = na.points;
				na = na.pointsize;
				var La = null,
					Sa = null;
				ra.beginPath();
				for(var w = na; w < qa.length; w += na) {
					var E = qa[w - na],
						G = qa[w - na + 1],
						J = qa[w],
						L = qa[w + 1];
					if(!(E == null || J == null)) {
						if(G <= L && G < ua.min) {
							if(L < ua.min) continue;
							E = (ua.min - G) / (L - G) * (J - E) + E;
							G = ua.min
						} else if(L <= G && L < ua.min) {
							if(G < ua.min) continue;
							J = (ua.min - G) / (L - G) * (J - E) + E;
							L = ua.min
						}
						if(G >= L && G > ua.max) {
							if(L > ua.max) continue;
							E = (ua.max - G) / (L - G) * (J - E) + E;
							G = ua.max
						} else if(L >= G && L > ua.max) {
							if(G > ua.max) continue;
							J = (ua.max - G) / (L - G) * (J - E) + E;
							L = ua.max
						}
						if(E <= J && E < za.min) {
							if(J < za.min) continue;
							G = (za.min - E) / (J - E) * (L - G) + G;
							E = za.min
						} else if(J <= E && J < za.min) {
							if(E < za.min) continue;
							L = (za.min - E) / (J - E) * (L - G) + G;
							J = za.min
						}
						if(E >= J && E > za.max) {
							if(J > za.max) continue;
							G = (za.max - E) / (J - E) * (L - G) + G;
							E = za.max
						} else if(J >= E && J > za.max) {
							if(E > za.max) continue;
							L = (za.max - E) / (J - E) * (L - G) + G;
							J = za.max
						}
						if(E != La || G != Sa) ra.moveTo(za.p2c(E) + xa, ua.p2c(G) + sa);
						La = J;
						Sa = L;
						ra.lineTo(za.p2c(J) + xa, ua.p2c(L) + sa)
					}
				}
				ra.stroke()
			}
			function Y(na, xa, sa) {
				var za = na.points;
				na = na.pointsize;
				for(var ua = Math.min(Math.max(0, sa.min), sa.max), qa = 0, La = false, Sa = 1, w = 0, E = 0;;) {
					if(na > 0 && qa > za.length + na) break;
					qa += na;
					var G = za[qa - na],
						J = za[qa - na + Sa],
						L = za[qa],
						K = za[qa + Sa];
					if(La) {
						if(na > 0 && G != null && L == null) {
							E = qa;
							na = -na;
							Sa = 2;
							continue
						}
						if(na < 0 && qa == w + na) {
							ra.fill();
							La = false;
							na = -na;
							Sa = 1;
							qa = w = E + na;
							continue
						}
					}
					if(!(G == null || L == null)) {
						if(G <= L && G < xa.min) {
							if(L < xa.min) continue;
							J = (xa.min - G) / (L - G) * (K - J) + J;
							G = xa.min
						} else if(L <= G && L < xa.min) {
							if(G < xa.min) continue;
							K = (xa.min - G) / (L - G) * (K - J) + J;
							L = xa.min
						}
						if(G >= L && G > xa.max) {
							if(L > xa.max) continue;
							J = (xa.max - G) / (L - G) * (K - J) + J;
							G = xa.max
						} else if(L >= G && L > xa.max) {
							if(G > xa.max) continue;
							K = (xa.max - G) / (L - G) * (K - J) + J;
							L = xa.max
						}
						if(!La) {
							ra.beginPath();
							ra.moveTo(xa.p2c(G), sa.p2c(ua));
							La = true
						}
						if(J >= sa.max && K >= sa.max) {
							ra.lineTo(xa.p2c(G), sa.p2c(sa.max));
							ra.lineTo(xa.p2c(L), sa.p2c(sa.max))
						} else if(J <= sa.min && K <= sa.min) {
							ra.lineTo(xa.p2c(G), sa.p2c(sa.min));
							ra.lineTo(xa.p2c(L), sa.p2c(sa.min))
						} else {
							var ea = G,
								ga = L;
							if(J <= K && J < sa.min && K >= sa.min) {
								G = (sa.min - J) / (K - J) * (L - G) + G;
								J = sa.min
							} else if(K <= J && K < sa.min && J >= sa.min) {
								L = (sa.min - J) / (K - J) * (L - G) + G;
								K = sa.min
							}
							if(J >= K && J > sa.max && K <= sa.max) {
								G = (sa.max - J) / (K - J) * (L - G) + G;
								J = sa.max
							} else if(K >= J && K > sa.max && J <= sa.max) {
								L = (sa.max - J) / (K - J) * (L - G) + G;
								K = sa.max
							}
							G != ea && ra.lineTo(xa.p2c(ea), sa.p2c(J));
							ra.lineTo(xa.p2c(G), sa.p2c(J));
							ra.lineTo(xa.p2c(L), sa.p2c(K));
							if(L != ga) {
								ra.lineTo(xa.p2c(L), sa.p2c(K));
								ra.lineTo(xa.p2c(ga), sa.p2c(K))
							}
						}
					}
				}
			}
			ra.save();
			ra.translate(Fa.left, Fa.top);
			ra.lineJoin = "round";
			var da = R.lines.lineWidth,
				ba = R.shadowSize;
			if(da > 0 && ba > 0) {
				ra.lineWidth = ba;
				ra.strokeStyle = "rgba(0,0,0,0.1)";
				var la = Math.PI / 18;
				ca(R.datapoints, Math.sin(la) * (da / 2 + ba / 2), Math.cos(la) * (da / 2 + ba / 2), R.xaxis, R.yaxis);
				ra.lineWidth = ba / 2;
				ca(R.datapoints, Math.sin(la) * (da / 2 + ba / 4), Math.cos(la) * (da / 2 + ba / 4), R.xaxis, R.yaxis)
			}
			ra.lineWidth = da;
			ra.strokeStyle = R.color;
			if(ba = Za(R.lines, R.color, 0, ob)) {
				ra.fillStyle = ba;
				Y(R.datapoints, R.xaxis, R.yaxis)
			}
			da > 0 && ca(R.datapoints, 0, 0, R.xaxis, R.yaxis);
			ra.restore()
		}
		function Ma(R) {
			function ca(na, xa, sa, za, ua, qa, La, Sa) {
				var w = na.points;
				na = na.pointsize;
				for(var E = 0; E < w.length; E += na) {
					var G = w[E],
						J = w[E + 1];
					if(!(G == null || G < qa.min || G > qa.max || J < La.min || J > La.max)) {
						ra.beginPath();
						G = qa.p2c(G);
						J = La.p2c(J) + za;
						Sa == "circle" ? ra.arc(G, J, xa, 0, ua ? Math.PI : Math.PI * 2, false) : Sa(ra, G, J, xa, ua);
						ra.closePath();
						if(sa) {
							ra.fillStyle = sa;
							ra.fill()
						}
						ra.stroke()
					}
				}
			}
			ra.save();
			ra.translate(Fa.left, Fa.top);
			var Y = R.points.lineWidth,
				da = R.shadowSize,
				ba = R.points.radius,
				la = R.points.symbol;
			if(Y > 0 && da > 0) {
				da = da / 2;
				ra.lineWidth = da;
				ra.strokeStyle = "rgba(0,0,0,0.1)";
				ca(R.datapoints, ba, null, da + da / 2, true, R.xaxis, R.yaxis, la);
				ra.strokeStyle = "rgba(0,0,0,0.2)";
				ca(R.datapoints, ba, null, da / 2, true, R.xaxis, R.yaxis, la)
			}
			ra.lineWidth = Y;
			ra.strokeStyle = R.color;
			ca(R.datapoints, ba, Za(R.points, R.color), 0, false, R.xaxis, R.yaxis, la);
			ra.restore()
		}
		function oa(R, ca, Y, da, ba, la, na, xa, sa, za, ua, qa) {
			var La, Sa, w, E;
			if(ua) {
				E = Sa = w = true;
				La = false;
				ua = Y;
				R = R;
				Y = ca + da;
				ba = ca + ba;
				if(R < ua) {
					ca = R;
					R = ua;
					ua = ca;
					La = true;
					Sa = false
				}
			} else {
				La = Sa = w = true;
				E = false;
				ua = R + da;
				R = R + ba;
				ba = Y;
				Y = ca;
				if(Y < ba) {
					ca = Y;
					Y = ba;
					ba = ca;
					E = true;
					w = false
				}
			}
			if(!(R < xa.min || ua > xa.max || Y < sa.min || ba > sa.max)) {
				if(ua < xa.min) {
					ua = xa.min;
					La = false
				}
				if(R > xa.max) {
					R = xa.max;
					Sa = false
				}
				if(ba < sa.min) {
					ba = sa.min;
					E = false
				}
				if(Y > sa.max) {
					Y = sa.max;
					w = false
				}
				ua = xa.p2c(ua);
				ba = sa.p2c(ba);
				R = xa.p2c(R);
				Y = sa.p2c(Y);
				if(na) {
					za.beginPath();
					za.moveTo(ua, ba);
					za.lineTo(ua, Y);
					za.lineTo(R, Y);
					za.lineTo(R, ba);
					za.fillStyle = na(ba, Y);
					za.fill()
				}
				if(qa > 0 && (La || Sa || w || E)) {
					za.beginPath();
					za.moveTo(ua, ba + la);
					La ? za.lineTo(ua, Y + la) : za.moveTo(ua, Y + la);
					w ? za.lineTo(R, Y + la) : za.moveTo(R, Y + la);
					Sa ? za.lineTo(R, ba + la) : za.moveTo(R, ba + la);
					E ? za.lineTo(ua, ba + la) : za.moveTo(ua, ba + la);
					za.stroke()
				}
			}
		}
		function Ka(R) {
			ra.save();
			ra.translate(Fa.left, Fa.top);
			ra.lineWidth = R.bars.lineWidth;
			ra.strokeStyle = R.color;
			var ca = R.bars.align == "left" ? 0 : -R.bars.barWidth / 2;
			(function(Y, da, ba, la, na, xa, sa) {
				var za = Y.points;
				Y = Y.pointsize;
				for(var ua = 0; ua < za.length; ua += Y) za[ua] != null && oa(za[ua], za[ua + 1], za[ua + 2], da, ba, la, na, xa, sa, ra, R.bars.horizontal, R.bars.lineWidth)
			})(R.datapoints, ca, ca + R.bars.barWidth, 0, R.bars.fill ?
			function(Y, da) {
				return Za(R.bars, R.color, Y, da)
			} : null, R.xaxis, R.yaxis);
			ra.restore()
		}
		function Za(R, ca, Y, da) {
			var ba = R.fill;
			if(!ba) return null;
			if(R.fillColor) return Z(R.fillColor, Y, da, ca);
			R = a.color.parse(ca);
			R.a = typeof ba == "number" ? ba : 0.4;
			R.normalize();
			return R.toString()
		}
		function eb() {
			c.find(".legend").remove();
			if(V.legend.show) {
				for(var R = [], ca = false, Y = V.legend.labelFormatter, da, ba, la = 0; la < fa.length; ++la) {
					da = fa[la];
					if(ba = da.label) {
						if(la % V.legend.noColumns == 0) {
							ca && R.push("</tr>");
							R.push("<tr>");
							ca = true
						}
						if(Y) ba = Y(ba, da);
						R.push('<td class="legendColorBox"><div style="border:1px solid ' + V.legend.labelBoxBorderColor + ';padding:1px"><div style="width:4px;height:0;border:5px solid ' + da.color + ';overflow:hidden"></div></div></td><td class="legendLabel">' + ba + "</td>")
					}
				}
				ca && R.push("</tr>");
				if(R.length != 0) {
					ca = '<table style="font-size:smaller;color:' + V.grid.color + '">' + R.join("") + "</table>";
					if(V.legend.container != null) a(V.legend.container).html(ca);
					else {
						R = "";
						Y = V.legend.position;
						da = V.legend.margin;
						if(da[0] == null) da = [da, da];
						if(Y.charAt(0) == "n") R += "top:" + (da[1] + Fa.top) + "px;";
						else if(Y.charAt(0) == "s") R += "bottom:" + (da[1] + Fa.bottom) + "px;";
						if(Y.charAt(1) == "e") R += "right:" + (da[0] + Fa.right) + "px;";
						else if(Y.charAt(1) == "w") R += "left:" + (da[0] + Fa.left) + "px;";
						ca = a('<div class="legend">' + ca.replace('style="', 'style="position:absolute;' + R + ";") + "</div>").appendTo(c);
						if(V.legend.backgroundOpacity != 0) {
							Y = V.legend.backgroundColor;
							if(Y == null) {
								Y = (Y = V.grid.backgroundColor) && typeof Y == "string" ? a.color.parse(Y) : a.color.extract(ca, "background-color");
								Y.a = 1;
								Y = Y.toString()
							}
							da = ca.children();
							a('<div style="position:absolute;width:' + da.width() + "px;height:" + da.height() + "px;" + R + "background-color:" + Y + ';"> </div>').prependTo(ca).css("opacity", V.legend.backgroundOpacity)
						}
					}
				}
			}
		}
		function ib(R) {
			V.grid.hoverable && db("plothover", R, function(ca) {
				return ca.hoverable != false
			})
		}
		function Ea(R) {
			V.grid.hoverable && db("plothover", R, function() {
				return false
			})
		}
		function cb(R) {
			db("plotclick", R, function(ca) {
				return ca.clickable != false
			})
		}
		function db(R, ca, Y) {
			var da = Ja.offset(),
				ba = ca.pageX - da.left - Fa.left,
				la = ca.pageY - da.top - Fa.top,
				na = q({
					left: ba,
					top: la
				});
			na.pageX = ca.pageX;
			na.pageY = ca.pageY;
			ca = V.grid.mouseActiveRadius;
			var xa = ca * ca + 1,
				sa = null,
				za, ua;
			for(za = fa.length - 1; za >= 0; --za) if(Y(fa[za])) {
				var qa = fa[za],
					La = qa.xaxis,
					Sa = qa.yaxis,
					w = qa.datapoints.points,
					E = qa.datapoints.pointsize,
					G = La.c2p(ba),
					J = Sa.c2p(la),
					L = ca / La.scale,
					K = ca / Sa.scale;
				if(La.options.inverseTransform) L = Number.MAX_VALUE;
				if(Sa.options.inverseTransform) K = Number.MAX_VALUE;
				if(qa.lines.show || qa.points.show) for(ua = 0; ua < w.length; ua += E) {
					var ea = w[ua],
						ga = w[ua + 1];
					if(ea != null) if(!(ea - G > L || ea - G < -L || ga - J > K || ga - J < -K)) {
						ea = Math.abs(La.p2c(ea) - ba);
						ga = Math.abs(Sa.p2c(ga) - la);
						ga = ea * ea + ga * ga;
						if(ga < xa) {
							xa = ga;
							sa = [za, ua / E]
						}
					}
				}
				if(qa.bars.show && !sa) {
					La = qa.bars.align == "left" ? 0 : -qa.bars.barWidth / 2;
					qa = La + qa.bars.barWidth;
					for(ua = 0; ua < w.length; ua += E) {
						ea = w[ua];
						ga = w[ua + 1];
						Sa = w[ua + 2];
						if(ea != null) if(fa[za].bars.horizontal ? G <= Math.max(Sa, ea) && G >= Math.min(Sa, ea) && J >= ga + La && J <= ga + qa : G >= ea + La && G <= ea + qa && J >= Math.min(Sa, ga) && J <= Math.max(Sa, ga)) sa = [za, ua / E]
					}
				}
			}
			if(sa) {
				za = sa[0];
				ua = sa[1];
				E = fa[za].datapoints.pointsize;
				Y = {
					datapoint: fa[za].datapoints.points.slice(ua * E, (ua + 1) * E),
					dataIndex: ua,
					series: fa[za],
					seriesIndex: za
				}
			} else Y = null;
			if(Y) {
				Y.pageX = parseInt(Y.series.xaxis.p2c(Y.datapoint[0]) + da.left + Fa.left);
				Y.pageY = parseInt(Y.series.yaxis.p2c(Y.datapoint[1]) + da.top + Fa.top)
			}
			if(V.grid.autoHighlight) {
				for(da = 0; da < zb.length; ++da) {
					ba = zb[da];
					ba.auto == R && !(Y && ba.series == Y.series && ba.point[0] == Y.datapoint[0] && ba.point[1] == Y.datapoint[1]) && Oa(ba.series, ba.point)
				}
				Y && wb(Y.series, Y.datapoint, R)
			}
			c.trigger(R, [na, Y])
		}
		function $a() {
			var R = V.interaction.redrawOverlayInterval;
			if(R == -1) qb();
			else Gb || (Gb = setTimeout(qb, R))
		}
		function qb() {
			Gb = null;
			Na.save();
			Na.clearRect(0, 0, Pa, nb);
			Na.translate(Fa.left, Fa.top);
			var R, ca;
			for(R = 0; R < zb.length; ++R) {
				ca = zb[R];
				if(ca.series.bars.show) S(ca.series, ca.point);
				else {
					var Y = ca.series,
						da = ca.point;
					ca = da[0];
					da = da[1];
					var ba = Y.xaxis,
						la = Y.yaxis;
					if(!(ca < ba.min || ca > ba.max || da < la.min || da > la.max)) {
						var na = Y.points.radius + Y.points.lineWidth / 2;
						Na.lineWidth = na;
						Na.strokeStyle = a.color.parse(Y.color).scale("a", 0.5).toString();
						na = 1.5 * na;
						ca = ba.p2c(ca);
						da = la.p2c(da);
						Na.beginPath();
						Y.points.symbol == "circle" ? Na.arc(ca, da, na, 0, 2 * Math.PI, false) : Y.points.symbol(Na, ca, da, na, false);
						Na.closePath();
						Na.stroke()
					}
				}
			}
			Na.restore();
			j(vb.drawOverlay, [Na])
		}
		function wb(R, ca, Y) {
			if(typeof R == "number") R = fa[R];
			if(typeof ca == "number") {
				var da = R.datapoints.pointsize;
				ca = R.datapoints.points.slice(da * ca, da * (ca + 1))
			}
			da = O(R, ca);
			if(da == -1) {
				zb.push({
					series: R,
					point: ca,
					auto: Y
				});
				$a()
			} else if(!Y) zb[da].auto = false
		}
		function Oa(R, ca) {
			if(R == null && ca == null) {
				zb = [];
				$a()
			}
			if(typeof R == "number") R = fa[R];
			if(typeof ca == "number") ca = R.data[ca];
			var Y = O(R, ca);
			if(Y != -1) {
				zb.splice(Y, 1);
				$a()
			}
		}
		function O(R, ca) {
			for(var Y = 0; Y < zb.length; ++Y) {
				var da = zb[Y];
				if(da.series == R && da.point[0] == ca[0] && da.point[1] == ca[1]) return Y
			}
			return -1
		}
		function S(R, ca) {
			Na.lineWidth = R.bars.lineWidth;
			Na.strokeStyle = a.color.parse(R.color).scale("a", 0.5).toString();
			var Y = a.color.parse(R.color).scale("a", 0.5).toString(),
				da = R.bars.align == "left" ? 0 : -R.bars.barWidth / 2;
			oa(ca[0], ca[1], ca[2] || 0, da, da + R.bars.barWidth, 0, function() {
				return Y
			}, R.xaxis, R.yaxis, Na, R.bars.horizontal, R.bars.lineWidth)
		}
		function Z(R, ca, Y, da) {
			if(typeof R == "string") return R;
			else {
				ca = ra.createLinearGradient(0, Y, 0, ca);
				Y = 0;
				for(var ba = R.colors.length; Y < ba; ++Y) {
					var la = R.colors[Y];
					if(typeof la != "string") {
						var na = a.color.parse(da);
						if(la.brightness != null) na = na.scale("rgb", la.brightness);
						if(la.opacity != null) na.a *= la.opacity;
						la = na.toString()
					}
					ca.addColorStop(Y / (ba - 1), la)
				}
				return ca
			}
		}
		var fa = [],
			V = {
				colors: ["#edc240", "#afd8f8", "#cb4b4b", "#4da74d", "#9440ed"],
				legend: {
					show: true,
					noColumns: 1,
					labelFormatter: null,
					labelBoxBorderColor: "#ccc",
					container: null,
					position: "ne",
					margin: 5,
					backgroundColor: null,
					backgroundOpacity: 0.85
				},
				xaxis: {
					show: null,
					position: "bottom",
					mode: null,
					font: null,
					color: null,
					tickColor: null,
					transform: null,
					inverseTransform: null,
					min: null,
					max: null,
					autoscaleMargin: null,
					ticks: null,
					tickFormatter: null,
					labelWidth: null,
					labelHeight: null,
					reserveSpace: null,
					tickLength: null,
					alignTicksWithAxis: null,
					tickDecimals: null,
					tickSize: null,
					minTickSize: null,
					monthNames: null,
					timeformat: null,
					twelveHourClock: false
				},
				yaxis: {
					autoscaleMargin: 0.02,
					position: "left"
				},
				xaxes: [],
				yaxes: [],
				series: {
					points: {
						show: false,
						radius: 3,
						lineWidth: 2,
						fill: true,
						fillColor: "#ffffff",
						symbol: "circle"
					},
					lines: {
						lineWidth: 2,
						fill: false,
						fillColor: null,
						steps: false
					},
					bars: {
						show: false,
						lineWidth: 2,
						barWidth: 1,
						fill: true,
						fillColor: null,
						align: "left",
						horizontal: false
					},
					shadowSize: 3
				},
				grid: {
					show: true,
					aboveData: false,
					color: "#545454",
					backgroundColor: null,
					borderColor: null,
					tickColor: null,
					labelMargin: 5,
					axisMargin: 8,
					borderWidth: 2,
					minBorderMargin: null,
					markings: null,
					markingsColor: "#f4f4f4",
					markingsLineWidth: 2,
					clickable: false,
					hoverable: false,
					autoHighlight: true,
					mouseActiveRadius: 10
				},
				interaction: {
					redrawOverlayInterval: 1E3 / 60
				},
				hooks: {}
			},
			Da = null,
			ya = null,
			Ja = null,
			ra = null,
			Na = null,
			Ua = [],
			fb = [],
			Fa = {
				left: 0,
				right: 0,
				top: 0,
				bottom: 0
			},
			Pa = 0,
			nb = 0,
			kb = 0,
			ob = 0,
			vb = {
				processOptions: [],
				processRawData: [],
				processDatapoints: [],
				drawSeries: [],
				draw: [],
				bindEvents: [],
				drawOverlay: [],
				shutdown: []
			},
			lb = this;
		lb.setData = n;
		lb.setupGrid = C;
		lb.draw = Q;
		lb.getPlaceholder = function() {
			return c
		};
		lb.getCanvas = function() {
			return Da
		};
		lb.getPlotOffset = function() {
			return Fa
		};
		lb.width = function() {
			return kb
		};
		lb.height = function() {
			return ob
		};
		lb.offset = function() {
			var R = Ja.offset();
			R.left += Fa.left;
			R.top += Fa.top;
			return R
		};
		lb.getData = function() {
			return fa
		};
		lb.getAxes = function() {
			var R = {};
			a.each(Ua.concat(fb), function(ca, Y) {
				if(Y) R[Y.direction + (Y.n != 1 ? Y.n : "") + "axis"] = Y
			});
			return R
		};
		lb.getXAxes = function() {
			return Ua
		};
		lb.getYAxes = function() {
			return fb
		};
		lb.c2p = q;
		lb.p2c = function(R) {
			var ca = {},
				Y, da, ba;
			for(Y = 0; Y < Ua.length; ++Y) if((da = Ua[Y]) && da.used) {
				ba = "x" + da.n;
				if(R[ba] == null && da.n == 1) ba = "x";
				if(R[ba] != null) {
					ca.left = da.p2c(R[ba]);
					break
				}
			}
			for(Y = 0; Y < fb.length; ++Y) if((da = fb[Y]) && da.used) {
				ba = "y" + da.n;
				if(R[ba] == null && da.n == 1) ba = "y";
				if(R[ba] != null) {
					ca.top = da.p2c(R[ba]);
					break
				}
			}
			return ca
		};
		lb.getOptions = function() {
			return V
		};
		lb.highlight = wb;
		lb.unhighlight = Oa;
		lb.triggerRedrawOverlay = $a;
		lb.pointOffset = function(R) {
			return {
				left: parseInt(Ua[l(R, "x") - 1].p2c(+R.x) + Fa.left),
				top: parseInt(fb[l(R, "y") - 1].p2c(+R.y) + Fa.top)
			}
		};
		lb.shutdown = function() {
			Gb && clearTimeout(Gb);
			Ja.unbind("mousemove", ib);
			Ja.unbind("mouseleave", Ea);
			Ja.unbind("click", cb);
			j(vb.shutdown, [Ja])
		};
		lb.resize = function() {
			D();
			B(Da);
			B(ya)
		};
		lb.hooks = vb;
		(function() {
			for(var R = 0; R < f.length; ++R) {
				var ca = f[R];
				ca.init(lb);
				ca.options && a.extend(true, V, ca.options)
			}
		})(lb);
		(function(R) {
			a.extend(true, V, R);
			if(V.xaxis.color == null) V.xaxis.color = V.grid.color;
			if(V.yaxis.color == null) V.yaxis.color = V.grid.color;
			if(V.xaxis.tickColor == null) V.xaxis.tickColor = V.grid.tickColor;
			if(V.yaxis.tickColor == null) V.yaxis.tickColor = V.grid.tickColor;
			if(V.grid.borderColor == null) V.grid.borderColor = V.grid.color;
			if(V.grid.tickColor == null) V.grid.tickColor = a.color.parse(V.grid.color).scale("a", 0.22).toString();
			for(R = 0; R < Math.max(1, V.xaxes.length); ++R) V.xaxes[R] = a.extend(true, {}, V.xaxis, V.xaxes[R]);
			for(R = 0; R < Math.max(1, V.yaxes.length); ++R) V.yaxes[R] = a.extend(true, {}, V.yaxis, V.yaxes[R]);
			if(V.xaxis.noTicks && V.xaxis.ticks == null) V.xaxis.ticks = V.xaxis.noTicks;
			if(V.yaxis.noTicks && V.yaxis.ticks == null) V.yaxis.ticks = V.yaxis.noTicks;
			if(V.x2axis) {
				V.xaxes[1] = a.extend(true, {}, V.xaxis, V.x2axis);
				V.xaxes[1].position = "top"
			}
			if(V.y2axis) {
				V.yaxes[1] = a.extend(true, {}, V.yaxis, V.y2axis);
				V.yaxes[1].position = "right"
			}
			if(V.grid.coloredAreas) V.grid.markings = V.grid.coloredAreas;
			if(V.grid.coloredAreasColor) V.grid.markingsColor = V.grid.coloredAreasColor;
			V.lines && a.extend(true, V.series.lines, V.lines);
			V.points && a.extend(true, V.series.points, V.points);
			V.bars && a.extend(true, V.series.bars, V.bars);
			if(V.shadowSize != null) V.series.shadowSize = V.shadowSize;
			for(R = 0; R < V.xaxes.length; ++R) v(Ua, R + 1).options = V.xaxes[R];
			for(R = 0; R < V.yaxes.length; ++R) v(fb, R + 1).options = V.yaxes[R];
			for(var ca in vb) if(V.hooks[ca] && V.hooks[ca].length) vb[ca] = vb[ca].concat(V.hooks[ca]);
			j(vb.processOptions, [V])
		})(b);
		(function() {
			var R;
			R = c.children("canvas.flot-base");
			var ca = c.children("canvas.flot-overlay");
			if(R.length == 0 || ca == 0) {
				c.html("");
				c.css({
					padding: 0
				});
				c.css("position") == "static" && c.css("position", "relative");
				D();
				Da = y(true, "flot-base");
				ya = y(false, "flot-overlay");
				R = false
			} else {
				Da = R.get(0);
				ya = ca.get(0);
				R = true
			}
			ra = Da.getContext("2d");
			Na = ya.getContext("2d");
			Ja = a(ya);
			if(R) {
				c.data("plot").shutdown();
				lb.resize();
				Na.clearRect(0, 0, Pa, nb);
				Ja.unbind();
				c.children().not([Da, ya]).remove()
			}
			c.data("plot", lb)
		})();
		n(d);
		C();
		Q();
		if(V.grid.hoverable) {
			Ja.mousemove(ib);
			Ja.mouseleave(Ea)
		}
		V.grid.clickable && Ja.click(cb);
		j(vb.bindEvents, [Ja]);
		var zb = [],
			Gb = null
	}
	function g(c, d) {
		return d * Math.floor(c / d)
	}
	a.plot = function(c, d, b) {
		return new e(a(c), d, b, a.plot.plugins)
	};
	a.plot.version = "0.7";
	a.plot.plugins = [];
	a.plot.formatDate = function(c, d, b) {
		var f = function(y) {
				y = "" + y;
				return y.length == 1 ? "0" + y : y
			},
			j = [],
			n = false,
			l = false,
			o = c.getUTCHours(),
			q = o < 12;
		if(b == null) b = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
		if(d.search(/%p|%P/) != -1) if(o > 12) o -= 12;
		else if(o == 0) o = 12;
		for(var v = 0; v < d.length; ++v) {
			var x = d.charAt(v);
			if(n) {
				switch(x) {
				case "h":
					x = "" + o;
					break;
				case "H":
					x = f(o);
					break;
				case "M":
					x = f(c.getUTCMinutes());
					break;
				case "S":
					x = f(c.getUTCSeconds());
					break;
				case "d":
					x = "" + c.getUTCDate();
					break;
				case "m":
					x = "" + (c.getUTCMonth() + 1);
					break;
				case "y":
					x = "" + c.getUTCFullYear();
					break;
				case "b":
					x = "" + b[c.getUTCMonth()];
					break;
				case "p":
					x = q ? "am" : "pm";
					break;
				case "P":
					x = q ? "AM" : "PM";
					break;
				case "0":
					x = "";
					l = true
				}
				if(x && l) {
					x = f(x);
					l = false
				}
				j.push(x);
				l || (n = false)
			} else if(x == "%") n = true;
			else j.push(x)
		}
		return j.join("")
	}
})(jQuery);
(function(a) {
	a.plot.plugins.push({
		init: function(e) {
			function g() {
				if(!d.locked) if(d.x != -1) {
					d.x = -1;
					e.triggerRedrawOverlay()
				}
			}
			function c(b) {
				if(!d.locked) if(e.getSelection && e.getSelection()) d.x = -1;
				else {
					var f = e.offset();
					d.x = Math.max(0, Math.min(b.pageX - f.left, e.width()));
					d.y = Math.max(0, Math.min(b.pageY - f.top, e.hnull) V.grid.borderColor = V.grid.color;
			if(V.grid.tickColor == null) V.grid.tickColor = a.color.parse(V.grid.color).scale("a", 0.22).toString();
			for(R = 0; R < Math.max(1, V.xaxes.length); ++R) V.xaxes[R] = a.extend(true, {}, V.xaxis, V.xaxes[R]);
			for(R = 0; R < Math.max(1, V.yaxes.length); ++R) V.yaxes[R] = a.extend(true, {}, V.yaxis, V.yaxes[R]);
			if(V.xaxis.noTicks && V.xaxis.ticks == null) V.xaxis.ticks = V.xaxis.noTicks;
			if(V.yaxis.noTicks && V.yaxis.ticks == null) V.yaxis.ticks = V.yaxis.noTicks;
			if(V.x2axis) {
				V.xaxes[1] = a.extend(true, {}, V.xaxis, V.x2axis);
				V.xaxes[1].position = "top"
			}
			if(V.y2axis) {
				V.yaxes[1] = a.extend(true, {}, V.yaxis, V.y2axis);
				V.yaxes[1].position = "right"
			}
			if(V.grid.coloredAreas) V.grid.markings = V.grid.coloredAreas;
			if(V.grid.coloredAreasColor) V.grid.markingsColor = V.grid.coloredAreasColor;
			V.lines && a.extend(true, V.series.lines, V.lines);
			V.points && a.extend(true, V.series.points, V.points);
			V.bars && a.extend(true, V.series.bars, V.bars);
			if(V.shadowSize != null) V.series.shadowSize = V.shadowSize;
			for(R = 0; R < V.xaxes.length; ++R) v(Ua, R + 1).options = V.xaxes[R];
			for(R = 0; R < V.yaxes.length; ++R) v(fb, R + 1).options = V.yaxes[R];
			for(var ca in vb) if(V.hooks[ca] && V.hooks[ca].length) vb[ca] = vb[ca].concat(V.hooks[ca]);
			j(vb.processOptions, [V])
		})(b);
		(function() {
			var R;
			R = c.children("canvas.flot-base");
			var ca = c.children("canvas.flot-overlay");
			if(R.length == 0 || ca == 0) {
				c.html("");
				c.css({
					padding: 0
				});
				c.css("position") == "static" && c.css("position", "relative");
				D();
				Da = y(true, "flot-base");
				ya = y(false, "flot-overlay");
				R = false
			} else {
				Da = R.get(0);
				ya = ca.get(0);
				R = true
			}
			ra = Da.getContext("2d");
			Na = ya.getContext("2d");
			Ja = a(ya);
			if(R) {
				c.data("plot").shutdown();
				lb.resize();
				Na.clearRect(0, 0, Pa, nb);
				Ja.unbind();
				c.children().not([Da, ya]).remove()
			}
			c.data("plot", lb)
		})();
		n(d);
		C();
		Q();
		if(V.grid.hoverable) {
			Ja.mousemove(ib);
			Ja.mouseleave(Ea)
		}
		V.grid.clickable && Ja.click(cb);
		j(vb.bindEvents, [Ja]);
		var zb = [],
			Gb = null
	}
	function g(c, d) {
		return d * Math.floor(c / d)
	}
	a.plot = function(c, d, b) {
		return new e(a(c), d, b, a.plot.plugins)
	};
	a.plot.version = "0.7";
	a.plot.plugins = [];
	a.plot.formatDate = function(c, d, b) {
		var f = function(y) {
				y = "" + y;
				return y.length == 1 ? "0" + y : y
			},
			j = [],
			n = false,
			l = false,
			o = c.getUTCHours(),
			q = o < 12;
		if(b == null) b = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
		if(d.search(/%p|%P/) != -1) if(o > 12) o -= 12;
		else if(o == 0) o = 12;
		for(var v = 0; v < d.length; ++v) {
			var x = d.charAt(v);
			if(n) {
				switch(x) {
				case "h":
					x = "" + o;
					break;
				case "H":
					x = f(o);
					break;
				case "M":
					x = f(c.getUTCMinutes());
					break;
				case "S":
					x = f(c.getUTCSeconds());
					break;
				case "d":
					x = "" + c.getUTCDate();
					break;
				case "m":
					x = "" + (c.getUTCMonth() + 1);
					break;
				case "y":
					x = "" + c.getUTCFullYear();
					break;
				case "b":
					x = "" + b[c.getUTCMonth()];
					break;
				case "p":
					x = q ? "am" : "pm";
					break;
				case "P":
					x = q ? "AM" : "PM";
					break;
				case "0":
					x = "";
					l = true
				}
				if(x && l) {
					x = f(x);
					l = false
				}
				j.push(x);
				l || (n = false)
			} else if(x == "%") n = true;
			else j.push(x)
		}
		return j.join("")
	}
})(jQuery);
(function(a) {
	a.plot.plugins.push({
		init: function(e) {
			function g() {
				if(!d.locked) if(d.x != -1) {
					d.x = -1;
					e.triggerRedrawOverlay()
				}
			}
			function c(b) {
				if(!d.locked) if(e.getSelection && e.getSelection()) d.x = -1;
				else {
					var f = e.offset();
					d.x = Math.max(0, Math.min(b.pageX - f.left, e.width()));
					d.y = Math.max(0, Math.min(b.pageY - f.top, e.height()));
					e.triggerRedrawOverlay()
				}
			}
			var d = {
				x: -1,
				y: -1,
				locked: false
			};
			e.setCrosshair = function(b) {
				if(b) {
					b = e.p2c(b);
					d.x = Math.max(0, Math.min(b.left, e.width()));
					d.y = Math.max(0, Math.min(b.top, e.height()))
				} else d.x = -1;
				e.triggerRedrawOverlay()
			};
			e.clearCrosshair = e.setCrosshair;
			e.lockCrosshair = function(b) {
				b && e.setCrosshair(b);
				d.locked = true
			};
			e.unlockCrosshair = function() {
				d.locked = false
			};
			e.hooks.bindEvents.push(function(b, f) {
				if(b.getOptions().crosshair.mode) {
					f.mouseout(g);
					f.mousemove(c)
				}
			});
			e.hooks.drawOverlay.push(function(b, f) {
				var j = b.getOptions().crosshair;
				if(j.mode) {
					var n = b.getPlotOffset();
					f.save();
					f.translate(n.left, n.top);
					if(d.x != -1) {
						f.strokeStyle = j.color;
						f.lineWidth = j.lineWidth;
						f.lineJoin = "round";
						f.beginPath();
						if(j.mode.indexOf("x") != -1) {
							f.moveTo(d.x, 0);
							f.lineTo(d.x, b.height())
						}
						if(j.mode.indexOf("y") != -1) {
							f.moveTo(0, d.y);
							f.lineTo(b.width(), d.y)
						}
						f.stroke()
					}
					f.restore()
				}
			});
			e.hooks.shutdown.push(function(b, f) {
				f.unbind("mouseout", g);
				f.unbind("mousemove", c)
			})
		},
		options: {
			crosshair: {
				mode: null,
				color: "rgba(170, 0, 0, 0.80)",
				lineWidth: 1
			}
		},
		name: "crosshair",
		version: "1.0"
	})
})(jQuery);
(function(a) {
	a.plot.plugins.push({
		init: function(e) {
			function g(y) {
				if(q.active) {
					j(y);
					e.getPlaceholder().trigger("plotselecting", [d()])
				}
			}
			function c(y) {
				if(y.which == 1) {
					document.body.focus();
					if(document.onselectstart !== undefined && v.onselectstart == null) {
						v.onselectstart = document.onselectstart;
						document.onselectstart = function() {
							return false
						}
					}
					if(document.ondrag !== undefined && v.ondrag == null) {
						v.ondrag = document.ondrag;
						document.ondrag = function() {
							return false
						}
					}
					f(q.first, y);
					q.active = true;
					x = function(D) {
						x = null;
						if(document.onselectstart !== undefined) document.onselectstart = v.onselectstart;
						if(document.ondrag !== undefined) document.ondrag = v.ondrag;
						q.active = false;
						j(D);
						if(o()) b();
						else {
							e.getPlaceholder().trigger("plotunselected", []);
							e.getPlaceholder().trigger("plotselecting", [null])
						}
					};
					a(document).one("mouseup", x)
				}
			}
			function d() {
				if(!o()) return null;
				var y = {},
					D = q.first,
					B = q.second;
				a.each(e.getAxes(), function(u, F) {
					if(F.used) {
						var I = F.c2p(D[F.direction]),
							C = F.c2p(B[F.direction]);
						y[u] = {
							from: Math.min(I, C),
							to: Math.max(I, C)
						}
					}
				});
				return y
			}
			function b() {
				var y = d();
				e.getPlaceholder().trigger("plotselected", [y]);
				y.xaxis && y.yaxis && e.getPlaceholder().trigger("selected", [{
					x1: y.xaxis.from,
					y1: y.yaxis.from,
					x2: y.xaxis.to,
					y2: y.yaxis.to
				}])
			}
			function f(y, D) {
				var B = e.getOptions(),
					u = e.getPlaceholder().offset(),
					F = e.getPlotOffset(),
					I = D.pageX - u.left - F.left,
					C = e.width();
				y.x = I < 0 ? 0 : I > C ? C : I;
				u = D.pageY - u.top - F.top;
				F = e.height();
				y.y = u < 0 ? 0 : u > F ? F : u;
				if(B.selection.mode == "y") y.x = y == q.first ? 0 : e.width();
				if(B.selection.mode == "x") y.y = y == q.first ? 0 : e.height()
			}
			function j(y) {
				if(y.pageX != null) {
					f(q.second, y);
					if(o()) {
						q.show = true;
						e.triggerRedrawOverlay()
					} else n(true)
				}
			}
			function n(y) {
				if(q.show) {
					q.show = false;
					e.triggerRedrawOverlay();
					y || e.getPlaceholder().trigger("plotunselected", [])
				}
			}
			function l(y, D) {
				var B, u, F, I, C = e.getAxes(),
					M;
				for(M in C) {
					B = C[M];
					if(B.direction == D) {
						I = D + B.n + "axis";
						if(!y[I] && B.n == 1) I = D + "axis";
						if(y[I]) {
							u = y[I].from;
							F = y[I].to;
							break
						}
					}
				}
				if(!y[I]) {
					B = D == "x" ? e.getXAxes()[0] : e.getYAxes()[0];
					u = y[D + "1"];
					F = y[D + "2"]
				}
				if(u != null && F != null && u > F) {
					I = u;
					u = F;
					F = I
				}
				return {
					from: u,
					to: F,
					axis: B
				}
			}
			function o() {
				return Math.abs(q.second.x - q.first.x) >= 5 && Math.abs(q.second.y - q.first.y) >= 5
			}
			var q = {
				first: {
					x: -1,
					y: -1
				},
				second: {
					x: -1,
					y: -1
				},
				show: false,
				active: false
			},
				v = {},
				x = null;
			e.clearSelection = n;
			e.setSelection = function(y, D) {
				var B, u = e.getOptions();
				if(u.selection.mode == "y") {
					q.first.x = 0;
					q.second.x = e.width()
				} else {
					B = l(y, "x");
					q.first.x = B.axis.p2c(B.from);
					q.second.x = B.axis.p2c(B.to)
				}
				if(u.selection.mode == "x") {
					q.first.y = 0;
					q.second.y = e.height()
				} else {
					B = l(y, "y");
					q.first.y = B.axis.p2c(B.from);
					q.second.y = B.axis.p2c(B.to)
				}
				q.show = true;
				e.triggerRedrawOverlay();
				!D && o() && b()
			};
			e.getSelection = d;
			e.hooks.bindEvents.push(function(y, D) {
				if(y.getOptions().selection.mode != null) {
					D.mousemove(g);
					D.mousedown(c)
				}
			});
			e.hooks.drawOverlay.push(function(y, D) {
				if(q.show && o()) {
					var B = y.getPlotOffset(),
						u = y.getOptions();
					D.save();
					D.translate(B.left, B.top);
					B = a.color.parse(u.selection.color);
					D.strokeStyle = B.scale("a", 0.8).toString();
					D.lineWidth = 1;
					D.lineJoin = "round";
					D.fillStyle = B.scale("a", 0.4).toString();
					B = Math.min(q.first.x, q.second.x);
					u = Math.min(q.first.y, q.second.y);
					var F = Math.abs(q.second.x - q.first.x),
						I = Math.abs(q.second.y - q.first.y);
					D.fillRect(B, u, F, I);
					D.strokeRect(B, u, F, I);
					D.restore()
				}
			});
			e.hooks.shutdown.push(function(y, D) {
				D.unbind("mousemove", g);
				D.unbind("mousedown", c);
				x && a(document).unbind("mouseup", x)
			})
		},
		options: {
			selection: {
				mode: null,
				color: "#e8cfac"
			}
		},
		name: "selection",
		version: "1.1"
	})
})(jQuery);
(function(a, e, g) {
	function c() {
		f = e[j](function() {
			d.each(function() {
				var q = a(this),
					v = q.width(),
					x = q.height(),
					y = a.data(this, l);
				if(v !== y.w || x !== y.h) q.trigger(n, [y.w = v, y.h = x])
			});
			c()
		}, b[o])
	}
	var d = a([]),
		b = a.resize = a.extend(a.resize, {}),
		f, j = "setTimeout",
		n = "resize",
		l = n + "-special-event",
		o = "delay";
	b[o] = 250;
	b.throttleWindow = true;
	a.event.special[n] = {
		setup: function() {
			if(!b.throttleWindow && this[j]) return false;
			var q = a(this);
			d = d.add(q);
			a.data(this, l, {
				w: q.width(),
				h: q.height()
			});
			d.length === 1 && c()
		},
		teardown: function() {
			if(!b.throttleWindow && this[j]) return false;
			var q = a(this);
			d = d.not(q);
			q.removeData(l);
			d.length || clearTimeout(f)
		},
		add: function(q) {
			function v(y, D, B) {
				var u = a(this),
					F = a.data(this, l);
				F.w = D !== g ? D : u.width();
				F.h = B !== g ? B : u.height();
				x.apply(this, arguments)
			}
			if(!b.throttleWindow && this[j]) return false;
			var x;
			if(a.isFunction(q)) {
				x = q;
				return v
			} else {
				x = q.handler;
				q.handler = v
			}
		}
	}
})(jQuery, this);
(function(a) {
	a.plot.plugins.push({
		init: function(e) {
			function g() {
				var c = e.getPlaceholder();
				if(!(c.width() == 0 || c.height() == 0)) {
					e.resize();
					e.setupGrid();
					e.draw()
				}
			}
			e.hooks.bindEvents.push(function(c) {
				c.getPlaceholder().resize(g)
			});
			e.hooks.shutdown.push(function(c) {
				c.getPlaceholder().unbind("resize", g)
			})
		},
		options: {},
		name: "resize",
		version: "1.0"
	})
})(jQuery);
(function(a) {
	function e(u, F, I) {
		var C = this;
		C.id = Is(),
					corner: C.options.position.corner.tooltip
				};
				if(C.options.position.target !== "mouse") {
					if(C.options.position.target.get(0).nodeName.toLowerCase() == "area") {
						pa = C.options.position.target.attr("coords").split(",");
						for(N = 0; N < pa.length; N++) pa[N] = parseInt(pa[N]);
						N = C.options.position.target.parent("map").attr("name");
						Ma = a('img[usemap="#' + N + '"]:first').offset();
						X.position = {
							left: Math.floor(Ma.left + pa[0]),
							top: Math.floor(Ma.top + pa[1])
						};
						switch(C.options.position.target.attr("shape").toLowerCase()) {
						case "rect":
							X.dimensions = {
								width: Math.ceil(Math.abs(pa[2] - pa[0])),
								height: Math.ceil(Math.abs(pa[3] - pa[1]))
							};
							break;
						case "circle":
							X.dimensions = {
								width: pa[2] + 1,
								height: pa[2] + 1
							};
							break;
						case "poly":
							X.dimensions = {
								width: pa[0],
								height: pa[1]
							};
							for(N = 0; N < pa.length; N++) if(N % 2 == 0) {
								if(pa[N] > X.dimensions.width) X.dimensions.width = pa[N];
								if(pa[N] < pa[0]) X.position.left = Math.floor(Ma.left + pa[N])
							} else {
								if(pa[N] > X.dimensions.height) X.dimensions.height = pa[N];
								if(pa[N] < pa[1]) X.position.top = Math.floor(Ma.top + pa[N])
							}
							X.dimensions.width -= X.position.left - Ma.left;
							X.dimensions.height -= X.position.top - Ma.top;
							break;
						default:
							return a.fn.qtip.log.error.call(C, 4, a.fn.qtip.constants.INVALID_AREA_SHAPE, "updatePosition")
						}
						X.dimensions.width -= 2;
						X.dimensions.height -= 2
					} else if(C.options.position.target.add(document.body).length === 1) {
						X.position = {
							left: a(document).scrollLeft(),
							top: a(document).scrollTop()
						};
						X.dimensions = {
							height: a(window).height(),
							width: a(window).width()
						}
					} else {
						X.position = typeof C.options.position.target.attr("qtip") !== "undefined" ? C.options.position.target.qtip("api").cache.position : C.options.position.target.offset();
						X.dimensions = {
							height: C.options.position.target.outerHeight(),
							width: C.options.position.target.outerWidth()
						}
					}
					oa = a.extend({}, X.position);
					if(X.corner.search(/right/i) !== -1) oa.left += X.dimensions.width;
					if(X.corner.search(/bottom/i) !== -1) oa.top += X.dimensions.height;
					if(X.corner.search(/((top|bottom)Middle)|center/) !== -1) oa.left += X.dimensions.width / 2;
					if(X.corner.search(/((left|right)Middle)|center/) !== -1) oa.top += X.dimensions.height / 2
				} else {
					X.position = oa = {
						left: C.cache.mouse.x,
						top: C.cache.mouse.y
					};
					X.dimensions = {
						height: 1,
						width: 1
					}
				}
				if(ma.corner.search(/right/i) !== -1) oa.left -= ma.dimensions.width;
				if(ma.corner.search(/bottom/i) !== -1) oa.top -= ma.dimensions.height;
				if(ma.corner.search(/((top|bottom)Middle)|center/) !== -1) oa.left -= ma.dimensions.width / 2;
				if(ma.corner.search(/((left|right)Middle)|center/) !== -1) oa.top -= ma.dimensions.height / 2;
				pa = a.browser.msie ? 1 : 0;
				a.browser.msie && parseInt(a.browser.version.charAt(0));
				if(C.options.style.border.radius > 0) {
					if(ma.corner.search(/Left/) !== -1) oa.left -= C.options.style.border.radius;
					else if(ma.corner.search(/Right/) !== -1) oa.left += C.options.style.border.radius;
					if(ma.corner.search(/Top/) !== -1) oa.top -= C.options.style.border.radius;
					else if(ma.corner.search(/Bottom/) !== -1) oa.top += C.options.style.border.radius
				}
				if(pa) {
					if(ma.corner.search(/top/) !== -1) oa.top -= pa;
					else if(ma.corner.search(/bottom/) !== -1) oa.top += pa;
					if(ma.corner.search(/left/) !== -1) oa.left -= pa;
					else if(ma.corner.search(/right/) !== -1) oa.left += pa;
					if(ma.corner.search(/leftMiddle|rightMiddle/) !== -1) oa.top -= 1
				}
				if(C.options.position.adjust.screen === true) oa = o.call(C, oa, X, ma);
				if(C.options.position.target === "mouse" && C.options.position.adjust.mouse === true) {
					X = C.options.position.adjust.screen === true && C.elements.tip ? C.elements.tip.attr("rel") : C.options.position.corner.tooltip;
					oa.left += X.search(/right/i) !== -1 ? -6 : 6;
					oa.top += X.search(/bottom/i) !== -1 ? -6 : 6
				}!C.elements.bgiframe && a.browser.msie && parseInt(a.browser.version.charAt(0)) == 6 && a("select, object").each(function() {
					Ka = a(this).offset();
					Ka.bottom = Ka.top + a(this).height();
					Ka.right = Ka.left + a(this).width();
					oa.top + ma.dimensions.height >= Ka.top && oa.left + ma.dimensions.width >= Ka.left && B.call(C)
				});
				oa.left += C.options.position.adjust.x;
				oa.top += C.options.position.adjust.y;
				X = C.getPosition();
				if(oa.left != X.left || oa.top != X.top) {
					X = C.beforePositionUpdate.call(C, M);
					if(X === false) return C;
					C.cache.position = oa;
					if(Q === true) {
						C.status.animated = true;
						C.elements.tooltip.animate(oa, 200, "swing", function() {
							C.status.animated = false
						})
					} else C.elements.tooltip.css(oa);
					C.onPositionUpdate.call(C, M);
					typeof M !== "undefined" && M.type && M.type !== "mousemove" && a.fn.qtip.log.error.call(C, 1, a.fn.qtip.constants.EVENT_POSITION_UPDATED, "updatePosition")
				}
				return C
			},
			updateWidth: function(M) {
				var Q;
				if(C.status.rendered) {
					if(M && typeof M !== "number") return a.fn.qtip.log.error.call(C, 2, "newWidth must be of type number", "updateWidth")
				} else return a.fn.qtip.log.error.call(C, 2, a.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "updateWidth");
				Q = C.elements.contentWrapper.siblings().add(C.elements.tip).add(C.elements.button);
				if(!M) if(typeof C.options.style.width.value == "number") M = C.options.style.width.value;
				else {
					C.elements.tooltip.css({
						width: "auto"
					});
					Q.hide();
					a.browser.msie && C.elements.wrapper.add(C.elements.contentWrapper.children()).css({
						zoom: "normal"
					});
					M = C.getDimensions().width + 1;
					if(!C.options.style.width.value) {
						if(M > C.options.style.width.max) M = C.options.style.width.max;
						if(M < C.options.style.width.min) M = C.options.style.width.min
					}
				}
				if(M % 2 !== 0) M -= 1;
				C.elements.tooltip.width(M);
				Q.show();
				C.options.style.border.radius && C.elements.tooltip.find(".qtip-betweenCorners").each(function() {
					a(this).width(M - C.options.style.border.radius * 2)
				});
				if(a.browser.msie) {
					C.elements.wrapper.add(C.elements.contentWrapper.children()).css({
						zoom: "1"
					});
					C.elements.wrapper.width(M);
					C.elements.bgiframe && C.elements.bgiframe.width(M).height(C.getDimensions.height)
				}
				return a.fn.qtip.log.error.call(C, 1, a.fn.qtip.constants.EVENT_WIDTH_UPDATED, "updateWidth")
			},
			updateStyle: function(M) {
				var Q, N, X, ma;
				if(C.status.rendered) {
					if(typeof M !== "string" || !a.fn.qtip.styles[M]) return a.fn.qtip.log.error.call(C, 2, a.fn.qtip.constants.STYLE_NOT_DEFINED, "updateStyle")
				} else return a.fn.qtip.log.error.call(C, 2, a.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "updateStyle");
				C.options.style = x.call(C, a.fn.qtip.styles[M], C.options.user.style);
				C.elements.content.css(q(C.options.style));
				C.options.content.title.text !== false && C.elements.title.css(q(C.options.style.title, true));
				C.elements.contentWrapper.css({
					borderColor: C.options.style.border.color
				});
				if(C.options.style.tip.corner !== false) if(a("<canvas>").get(0).getContext) {
					M = C.elements.tooltip.find(".qtip-tip canvas:first");
					N = M.get(0).getContext("2d");
					N.clearRect(0, 0, 300, 300);
					X = M.parent("div[rel]:first").attr("rel");
					ma = y(X, C.options.style.tip.size.width, C.options.style.tip.size.height);
					f.call(C, M, ma, C.options.style.tip.color || C.options.style.border.color)
				} else if(a.browser.msie) {
					M = C.elements.tooltip.find('.qtip-tip [nodeName="shape"]');
					M.attr("fillcolor", C.options.style.tip.color || C.options.style.border.color)
				}
				if(C.options.style.border.radius > 0) {
					C.elements.tooltip.find(".qtip-betweenCorners").css({
						backgroundColor: C.options.style.border.color
					});
					if(a("<canvas>").get(0).getContext) {
						Q = D(C.options.style.border.radius);
						C.elements.tooltip.find(".qtip-wrapper canvas").each(function() {
							N = a(this).get(0).getContext("2d");
							N.clearRect(0, 0, 300, 300);
							X = a(this).parent("div[rel]:first").attr("rel");
							d.call(C, a(this), Q[X], C.options.style.border.radius, C.options.style.border.color)
						})
					} else a.browser.msie && C.elements.tooltip.find('.qtip-wrapper [nodeName="arc"]').each(function() {
						a(this).attr("fillcolor", C.options.style.border.color)
					})
				}
				return a.fn.qtip.log.error.call(C, 1, a.fn.qtip.constants.EVENT_STYLE_UPDATED, "updateStyle")
			},
			updateContent: function(M, Q) {
				function N() {
					C.updateWidth();
					if(Q !== false) {
						C.options.position.type !== "static" && C.updatePosition(C.elements.tooltip.is(":visible"), true);
						C.options.style.tip.corner !== false && j.call(C)
					}
				}
				var X, ma, pa;
				if(C.status.rendered) {
					if(!M) return a.fn.qtip.log.error.call(C, 2, a.fn.qtip.constants.NO_CONTENT_PROVIDED, "updateContent")
				} else return a.fn.qtip.log.error.call(C, 2, a.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "updateContent");
				X = C.beforeContentUpdate.call(C, M);
				if(typeof X == "string") M = X;
				else if(X === false) return;
				a.browser.msie && C.elements.contentWrapper.children().css({
					zoom: "normal"
				});
				M.jquery && M.length > 0 ? M.clone(true).appendTo(C.elements.content).show() : C.elements.content.html(M);
				ma = C.elements.content.find("img[complete=false]");
				if(ma.length > 0) {
					pa = 0;
					ma.each(function() {
						a('<img src="' + a(this).attr("src") + '" />').load(function() {
							++pa == ma.length && N()
						})
					})
				} else N();
				C.onContentUpdate.call(C);
				return a.fn.qtip.log.error.call(C, 1, a.fn.qtip.constants.EVENT_CONTENT_UPDATED, "loadContent")
			},
			loadContent: function(M, Q, N) {
				function X(ma) {
					C.onContentLoad.call(C);
					a.fn.qtip.log.error.call(C, 1, a.fn.qtip.constants.EVENT_CONTENT_LOADED, "loadContent");
					C.updateContent(ma)
				}
				if(!C.status.rendered) return a.fn.qtip.log.error.call(C, 2, a.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "loadContent");
				if(C.beforeContentLoad.call(C) === false) return C;
				N == "post" ? a.post(M, Q, X) : a.get(M, Q, X);
				return C
			},
			updateTitle: function(M) {
				if(C.status.rendered) {
					if(!M) return a.fn.qtip.log.error.call(C, 2, a.fn.qtip.constants.NO_CONTENT_PROVIDED, "updateTitle")
				} else return a.fn.qtip.log.error.call(C, 2, a.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "updateTitle");
				returned = C.beforeTitleUpdate.call(C);
				if(returned === false) return C;
				if(C.elements.button) C.elements.button = C.elements.button.clone(true);
				C.elements.title.html(M);
				C.elements.button && C.elements.title.prepend(C.elements.button);
				C.onTitleUpdate.call(C);
				return a.fn.qtip.log.error.call(C, 1, a.fn.qtip.constants.EVENT_TITLE_UPDATED, "updateTitle")
			},
			focus: function(M) {
				var Q, N, X;
				if(C.status.rendered) {
					if(C.options.position.type == "static") return a.fn.qtip.log.error.call(C, 1, a.fn.qtip.constants.CANNOT_FOCUS_STATIC, "focus")
				} else return a.fn.qtip.log.error.call(C, 2, a.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "focus");
				Q = parseInt(C.elements.tooltip.css("z-index"));
				N = 6E6 + a("div.qtip[qtip]").length - 1;
				if(!C.status.focused && Q !== N) {
					Q = C.beforeFocus.call(C, M);
					if(Q === false) return C;
					a("div.qtip[qtip]").not(C.elements.tooltip).each(function() {
						if(a(this).qtip("api").status.rendered === true) {
							X = parseInt(a(this).css("z-index"));
							typeof X == "number" && X > -1 && a(this).css({
								zIndex: parseInt(a(this).css("z-index")) - 1
							});
							a(this).qtip("api").status.focused = false
						}
					});
					C.elements.tooltip.css({
						zIndex: N
					});
					C.status.focused = true;
					C.onFocus.call(C, M);
					a.fn.qtip.log.error.call(C, 1, a.fn.qtip.constants.EVENT_FOCUSED, "focus")
				}
				return C
			},
			disable: function(M) {
				if(!C.status.rendered) return a.fn.qtip.log.error.call(C, 2, a.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "disable");
				if(M) if(C.status.disabled) a.fn.qtip.log.error.call(C, 1, a.fn.qtip.constants.TOOLTIP_ALREADY_DISABLED, "disable");
				else {
					C.status.disabled = true;
					a.fn.qtip.log.error.call(C, 1, a.fn.qtip.constants.EVENT_DISABLED, "disable")
				} else if(C.status.disabled) {
					C.status.disabled = false;
					a.fn.qtip.log.error.call(C, 1, a.fn.qtip.constants.EVENT_ENABLED, "disable")
				} else a.fn.qtip.log.error.call(C, 1, a.fn.qtip.constants.TOOLTIP_ALREADY_ENABLED, "disable");
				return C
			},
			destroy: function() {
				var M, Q;
				if(C.beforeDestroy.call(C) === false) return C;
				if(C.status.rendered) {
					C.options.show.when.target.unbind("mousemove.qtip", C.updatePosition);
					C.options.show.when.target.unbind("mouseout.qtip", C.hide);
					C.options.show.when.target.unbind(C.options.show.when.event + ".qtip");
					C.options.hide.when.target.unbind(C.options.hide.when.event + ".qtip");
					C.elements.tooltip.unbind(C.options.hide.when.event + ".qtip");
					C.elements.tooltip.unbind("mouseover.qtip", C.focus);
					C.elements.tooltip.remove()
				} else C.options.show.when.target.unbind(C.options.show.when.event + ".qtip-create");
				if(typeof C.elements.target.data("qtip") == "object") {
					Q = C.elements.target.data("qtip").interfaces;
					if(typeof Q == "object" && Q.length > 0) for(M = 0; M < Q.length - 1; M++) Q[M].id == C.id && Q.splice(M, 1)
				}
				delete a.fn.qtip.interfaces[C.id];
				if(typeof Q == "object" && Q.length > 0) C.elements.target.data("qtip").current = Q.length - 1;
				else C.elements.target.removeData("qtip");
				C.onDestroy.call(C);
				a.fn.qtip.log.error.call(C, 1, a.fn.qtip.constants.EVENT_DESTROYED, "destroy");
				return C.elements.target
			},
			getPosition: function() {
				var M, Q;
				if(!C.status.rendered) return a.fn.qtip.log.error.call(C, 2, a.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "getPosition");
				(M = C.elements.tooltip.css("display") !== "none" ? false : true) && C.elements.tooltip.css({
					visiblity: "hidden"
				}).show();
				Q = C.elements.tooltip.offset();
				M && C.elements.tooltip.css({
					visiblity: "visible"
				}).hide();
				return Q
			},
			getDimensions: function() {
				var M, Q;
				if(!C.status.rendered) return a.fn.qtip.log.error.call(C, 2, a.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "getDimensions");
				(M = !C.elements.tooltip.is(":visible") ? true : false) && C.elements.tooltip.css({
					visiblity: "hidden"
				}).show();
				Q = {
					height: C.elements.tooltip.outerHeight(),
					width: C.elements.tooltip.outerWidth()
				};
				M && C.elements.tooltip.css({
					visiblity: "visible"
				}).hide();
				return Q
			}
		})
	}
	function g() {
		var u, F, I;
		this.beforeRender.call(this);
		this.status.rendered = true;
		this.elements.tooltip = '<div qtip="' + this.id + '" class="qtip ' + (this.options.style.classes.tooltip || this.options.style) + '"style="display:none; -moz-border-radius:0; -webkit-border-radius:0; border-radius:0;position:' + this.options.position.type + ';">  <div class="qtip-wrapper" style="position:relative;  text-align:left;">    <div class="qtip-contentWrapper" style="">       <div class="qtip-content ' + this.options.style.classes.content + '"></div></div></div></div>';
		this.elements.tooltip = a(this.elements.tooltip);
		this.elements.tooltip.appendTo(this.options.position.container);
		this.elements.tooltip.data("qtip", {
			current: 0,
			interfaces: [this]
		});
		this.elements.wrapper = this.elements.tooltip.children("div:first");
		this.elements.contentWrapper = this.elements.wrapper.children("div:first").css({
			background: this.options.style.background
		});
		this.elements.content = this.elements.contentWrapper.children("div:first").css(q(this.options.style));
		a.browser.msie && this.elements.wrapper.add(this.elements.content).css({
			zoom: 1
		});
		this.options.hide.when.event == "unfocus" && this.elements.tooltip.attr("unfocus", true);
		typeof this.options.style.width.value == "number" && this.updateWidth();
		if(a("<canvas>").get(0).getContext || a.browser.msie) {
			this.options.style.border.radius > 0 ? c.call(this) : this.elements.contentWrapper.css({
				border: this.options.style.border.width + "px solid " + this.options.style.border.color
			});
			this.options.style.tip.corner !== false && b.call(this)
		} else {
			this.elements.contentWrapper.css({
				border: this.options.style.border.width + "px solid " + this.options.style.border.color
			});
			this.options.style.border.radius = 0;
			this.options.style.tip.corner = false;
			a.fn.qtip.log.error.call(this, 2, a.fn.qtip.constants.CANVAS_VML_NOT_SUPPORTED, "render")
		}
		if(typeof this.options.content.text == "string" && this.options.content.text.length > 0 || this.options.content.text.jquery && this.options.content.text.length > 0) u = this.options.content.text;
		else if(typeof this.elements.target.attr("title") == "string" && this.elements.target.attr("title").length > 0) {
			u = this.elements.target.attr("title").replace("\\n", "<br />");
			this.elements.target.attr("title", "")
		} else if(typeof this.elements.target.attr("alt") == "string" && this.elements.target.attr("alt").length > 0) {
			u = this.elements.target.attr("alt").replace("\\n", "<br />");
			this.elements.target.attr("alt", "")
		} else {
			u = " ";
			a.fn.qtip.log.error.call(this, 1, a.fn.qtip.constants.NO_VALID_CONTENT, "render")
		}
		this.options.content.title.text !== false && n.call(this);
		this.updateContent(u);
		l.call(this);
		this.options.show.ready === true && this.show();
		if(this.options.content.url !== false) {
			u = this.options.content.url;
			F = this.options.content.data;
			I = this.options.content.method || "get";
			this.loadContent(u, F, I)
		}
		this.onRender.call(this);
		a.fn.qtip.log.error.call(this, 1, a.fn.qtip.constants.EVENT_RENDERED, "render")
	}
	function c() {
		var u, F, I, C, M, Q, N, X, ma;
		u = this;
		u.elements.wrapper.find(".qtip-borderBottom, .qtip-borderTop").remove();
		I = u.options.style.border.width;
		C = u.options.style.border.radius;
		M = u.options.style.border.color || u.options.style.tip.color;
		Q = D(C);
		N = {};
		for(F in Q) {
			N[F] = '<div rel="' + F + '" style="' + (F.search(/Left/) !== -1 ? "left" : "right") + ":0; position:absolute; height:" + C + "px; width:" + C + 'px;  line-height:0.1px; font-size:1px">';
			if(a("<canvas>").get(0).getContext) N[F] += '<canvas height="' + C + '" width="' + C + '" style="vertical-align: top"></canvas>';
			else if(a.browser.msie) {
				X = C * 2 + 3;
				N[F] += '<v:arc stroked="false" fillcolor="' + M + '" startangle="' + Q[F][0] + '" endangle="' + Q[F][1] + '" style="width:' + X + "px; height:" + X + "px; margin-top:" + (F.search(/bottom/) !== -1 ? -2 : -1) + "px; margin-left:" + (F.search(/Right/) !== -1 ? Q[F][2] - 3.5 : -1) + 'px; vertical-align:top; display:inline-block; behavior:url(#default#VML)"></v:arc>'
			}
			N[F] += "</div>"
		}
		F = u.getDimensions().width - Math.max(I, C) * 2;
		F = '<div class="qtip-betweenCorners" style="height:' + C + "px; width:" + F + "px;  background-color:" + M + '; line-height:0.1px; font-size:1px;">';
		u.elements.wrapper.prepend('<div class="qtip-borderTop" dir="ltr" style="height:' + C + "px; margin-left:" + C + 'px; line-height:0.1px; font-size:1px; padding:0;">' + N.topLeft + N.topRight + F);
		u.elements.wrapper.append('<div class="qtip-borderBottom" dir="ltr" style="height:' + C + "px; margin-left:" + C + 'px; line-height:0.1px; font-size:1px; padding:0;">' + N.bottomLeft + N.bottomRight + F);
		if(a("<canvas>").get(0).getContext) u.elements.wrapper.find("canvas").each(function() {
			ma = Q[a(this).parent("[rel]:first").attr("rel")];
			d.call(u, a(this), ma, C, M)
		});
		else a.browser.msie && u.elements.tooltip.append('<v:image style="behavior:url(#default#VML);"></v:image>');
		u.elements.contentWrapper.css({
			border: "0px solid " + M,
			borderWidth: Math.max(I - C, 0) + "px " + Math.max(C, C + (I - C)) + "px"
		})
	}
	function d(u, F, I, C) {
		u = u.get(0).getContext("2d");
		u.fillStyle = C;
		u.beginPath();
		u.arc(F[0], F[1], I, 0, Math.PI * 2, false);
		u.fill()
	}
	function b(u) {
		var F, I, C, M;
		this.elements.tip !== null && this.elements.tip.remove();
		F = this.options.style.tip.color || this.options.style.border.color;
		if(this.options.style.tip.corner !== false) {
			if(!u) u = this.options.style.tip.corner;
			I = y(u, this.options.style.tip.size.width, this.options.style.tip.size.height);
			this.elements.tip = '<div class="' + this.options.style.classes.tip + '" dir="ltr" rel="' + u + '" style="position:absolute; height:' + this.options.style.tip.size.height + "px; width:" + this.options.style.tip.size.width + 'px; margin:0 auto; line-height:0.1px; font-size:1px;">';
			if(a("<canvas>").get(0).getContext) this.elements.tip += '<canvas height="' + this.options.style.tip.size.height + '" width="' + this.options.style.tip.size.width + '"></canvas>';
			else if(a.browser.msie) {
				C = this.options.style.tip.size.width + "," + this.options.style.tip.size.height;
				M = "m" + I[0][0] + "," + I[0][1];
				M += " l" + I[1][0] + "," + I[1][1];
				M += " " + I[2][0] + "," + I[2][1];
				M += " xe";
				this.elements.tip += '<v:shape fillcolor="' + F + '" stroked="false" filled="true" path="' + M + '" coordsize="' + C + '" style="width:' + this.options.style.tip.size.width + "px; height:" + this.options.style.tip.size.height + "px; line-height:0.1px; display:inline-block; behavior:url(#default#VML); vertical-align:" + (u.search(/top/) !== -1 ? "bottom" : "top") + '"></v:shape>';
				this.elements.tip += '<v:image style="behavior:url(#default#VML);"></v:image>';
				this.elements.contentWrapper.css("position", "relative")
			}
			this.elements.tooltip.prepend(this.elements.tip + "</div>");
			this.elements.tip = this.elements.tooltip.find("." + this.options.style.classes.tip).eq(0);
			a("<canvas>").get(0).getContext && f.call(this, this.elements.tip.find("canvas:first"), I, F);
			u.search(/top/) !== -1 && a.browser.msie && parseInt(a.browser.version.charAt(0)) === 6 && this.elements.tip.css({
				marginTop: -4
			});
			j.call(this, u)
		}
	}
	function f(u, F, I) {
		u = u.get(0).getContext("2d");
		u.fillStyle = I;
		u.beginPath();
		u.moveTo(F[0][0], F[0][1]);
		u.lineTo(F[1][0], F[1][1]);
		u.lineTo(F[2][0], F[2][1]);
		u.fill()
	}
	function j(u) {
		var F;
		if(!(this.options.style.tip.corner === false || !this.elements.tip)) {
			u || (u = this.elements.tip.attr("rel"));
			F = positionAdjust = a.browser.msie ? 1 : 0;
			this.elements.tip.css(u.match(/left|right|top|bottom/)[0], 0);
			if(u.search(/top|bottom/) !== -1) {
				if(a.browser.msie) positionAdjust = parseInt(a.browser.version.charAt(0)) === 6 ? u.search(/top/) !== -1 ? -3 : 1 : u.search(/top/) !== -1 ? 1 : 2;
				if(u.search(/Middle/) !== -1) this.elements.tip.css({
					left: "50%",
					marginLeft: -(this.options.style.tip.size.width / 2)
				});
				else if(u.search(/Left/) !== -1) this.elements.tip.css({
					left: this.options.style.border.radius - F
				});
				else u.search(/Right/) !== -1 && this.elements.tip.css({
					right: this.options.style.border.radius + F
				});
				u.search(/top/) !== -1 ? this.elements.tip.css({
					top: -positionAdjust
				}) : this.elements.tip.css({
					bottom: positionAdjust
				})
			} else if(u.search(/left|right/) !== -1) {
				if(a.browser.msie) positionAdjust = parseInt(a.browser.version.charAt(0)) === 6 ? 1 : u.search(/left/) !== -1 ? 1 : 2;
				if(u.search(/Middle/) !== -1) this.elements.tip.css({
					top: "50%",
					marginTop: -(this.options.style.tip.size.height / 2)
				});
				else if(u.search(/Top/) !== -1) this.elements.tip.css({
					top: this.options.style.border.radius - F
				});
				else u.search(/Bottom/) !== -1 && this.elements.tip.css({
					bottom: this.options.style.border.radius + F
				});
				u.search(/left/) !== -1 ? this.elements.tip.css({
					left: -positionAdjust
				}) : this.elements.tip.css({
					right: positionAdjust
				})
			}
			u = "padding-" + u.match(/left|right|top|bottom/)[0];
			F = this.options.style.tip.size[u.search(/left|right/) !== -1 ? "width" : "height"];
			this.elements.tooltip.css("padding", 0);
			this.elements.tooltip.css(u, F);
			if(a.browser.msie && parseInt(a.browser.version.charAt(0)) == 6) {
				u = parseInt(this.elements.tip.css("margin-top")) || 0;
				u += parseInt(this.elements.content.css("margin-top")) || 0;
				this.elements.tip.css({
					marginTop: u
				})
			}
		}
	}
	function n() {
		var u = this;
		u.elements.title !== null && u.elements.title.remove();
		u.elements.title = a('<div class="' + u.options.style.classes.title + '">').css(q(u.options.style.title, true)).css({
			zoom: a.browser.msie ? 1 : 0
		}).prependTo(u.elements.contentWrapper);
		u.options.content.title.text && u.updateTitle.call(u, u.options.content.title.text);
		if(u.options.content.title.button !== false && typeof u.options.content.title.button == "string") u.elements.button = a('<a class="' + u.options.style.classes.button + '" style="float:right; position: relative"></a>').css(q(u.options.style.button, true)).html(u.options.content.title.button).prependTo(u.elements.title).click(function(F) {
			u.status.disabled || u.hide(F)
		})
	}
	function l() {
		function u(X) {
			if(I.status.disabled !== true) {
				if(I.options.hide.when.event == "inactive") {
					a(Q).each(function() {
						M.bind(this + ".qtip-inactive", N);
						I.elements.content.bind(this + ".qtip-inactive", N)
					});
					N()
				}
				clearTimeout(I.timers.show);
				clearTimeout(I.timers.hide);
				I.timers.show = setTimeout(function() {
					I.show(X)
				}, I.options.show.delay)
			}
		}
		function F(X) {
			if(I.status.disabled !== true) {
				if(I.options.hide.fixed === true && I.options.hide.when.event.search(/mouse(out|leave)/i) !== -1 && a(X.relatedTarget).parents("div.qtip[qtip]").length > 0) {
					X.stopPropagation();
					X.preventDefault();
					clearTimeout(I.timers.hide);
					return false
				}
				clearTimeout(I.timers.show);
				clearTimeout(I.timers.hide);
				I.elements.tooltip.stop(true, true);
				I.timers.hide = setTimeout(function() {
					I.hide(X)
				}, I.options.hide.delay)
			}
		}
		var I, C, M, Q;
		I = this;
		C = I.options.show.when.target;
		M = I.options.hide.when.target;
		if(I.options.hide.fixed) M = M.add(I.elements.tooltip);
		if(I.options.hide.when.event == "inactive") {
			Q = ["click", "dblclick", "mousedown", "mouseup", "mousemove", "mouseout", "mouseenter", "mouseleave", "mouseover"];
			var N = function(X) {
					if(I.status.disabled !== true) {
						clearTimeout(I.timers.inactive);
						I.timers.inactive = setTimeout(function() {
							a(Q).each(function() {
								M.unbind(this + ".qtip-inactive");
								I.elements.content.unbind(this + ".qtip-inactive")
							});
							I.hide(X)
						}, I.options.hide.delay)
					}
				}
		} else I.options.hide.fixed === true && I.elements.tooltip.bind("mouseover.qtip", function() {
			I.status.disabled !== true && clearTimeout(I.timers.hide)
		});
		if(I.options.show.when.target.add(I.options.hide.when.target).length === 1 && I.options.show.when.event == I.options.hide.when.event && I.options.hide.when.event !== "inactive" || I.options.hide.when.event == "unfocus") {
			I.cache.toggle = 0;
			C.bind(I.options.show.when.event + ".qtip", function(X) {
				I.cache.toggle == 0 ? u(X) : F(X)
			})
		} else {
			C.bind(I.options.show.when.event + ".qtip", u);
			I.options.hide.when.event !== "inactive" && M.bind(I.options.hide.when.event + ".qtip", F)
		}
		I.options.position.type.search(/(fixed|absolute)/) !== -1 && I.elements.tooltip.bind("mouseover.qtip", I.focus);
		I.options.position.target === "mouse" && I.options.position.type !== "static" && C.bind("mousemove.qtip", function(X) {
			I.cache.mouse = {
				x: X.pageX,
				y: X.pageY
			};
			I.status.disabled === false && I.options.position.adjust.mouse === true && I.options.position.type !== "static" && I.elements.tooltip.css("display") !== "none" && I.updatePosition(X)
		})
	}

	function o(u, F, I) {
		var C, M, Q;
		if(I.corner == "center") return F.position;
		C = a.extend({}, u);
		Q = {
			x: false,
			y: false
		};
		M = {
			left: C.left < a.fn.qtip.cache.screen.scroll.left,
			right: C.left + I.dimensions.width + 2 >= a.fn.qtip.cache.screen.width + a.fn.qtip.cache.screen.scroll.left,
			top: C.top < a.fn.qtip.cache.screen.scroll.top,
			bottom: C.top + I.dimensions.height + 2 >= a.fn.qtip.cache.screen.height + a.fn.qtip.cache.screen.scroll.top
		};
		M = {
			left: M.left && (I.corner.search(/right/i) != -1 || I.corner.search(/right/i) == -1 && !M.right),
			right: M.right && (I.corner.search(/left/i) != -1 || I.corner.search(/left/i) == -1 && !M.left),
			top: M.top && I.corner.search(/top/i) == -1,
			bottom: M.bottom && I.corner.search(/bottom/i) == -1
		};
		if(M.left) {
			C.left = this.options.position.target !== "mouse" ? F.position.left + F.dimensions.width : this.cache.mouse.x;
			Q.x = "Left"
		} else if(M.right) {
			C.left = this.options.position.target !== "mouse" ? F.position.left - I.dimensions.width : this.cache.mouse.x - I.dimensions.width;
			Q.x = "Right"
		}
		if(M.top) {
			C.top = this.options.position.target !== "mouse" ? F.position.top + F.dimensions.height : this.cache.mouse.y;
			Q.y = "top"
		} else if(M.bottom) {
			C.top = this.options.position.target !== "mouse" ? F.position.top - I.dimensions.height : this.cache.mouse.y - I.dimensions.height;
			Q.y = "bottom"
		}
		if(C.left < 0) {
			C.left = u.left;
			Q.x = false
		}
		if(C.top < 0) {
			C.top = u.top;
			Q.y = false
		}
		if(this.options.style.tip.corner !== false) {
			C.corner = new String(I.corner);
			if(Q.x !== false) C.corner = C.corner.replace(/Left|Right|Middle/, Q.x);
			if(Q.y !== false) C.corner = C.corner.replace(/top|bottom/, Q.y);
			C.corner !== this.elements.tip.attr("rel") && b.call(this, C.corner)
		}
		return C
	}
	function q(u, F) {
		var I, C;
		I = a.extend(true, {}, u);
		for(C in I) if(F === true && C.search(/(tip|classes)/i) !== -1) delete I[C];
		else !F && C.search(/(width|border|tip|title|classes|user)/i) !== -1 && delete I[C];
		return I
	}
	function v(u) {
		if(typeof u.tip !== "object") u.tip = {
			corner: u.tip
		};
		if(typeof u.tip.size !== "object") u.tip.size = {
			width: u.tip.size,
			height: u.tip.size
		};
		if(typeof u.border !== "object") u.border = {
			width: u.border
		};
		if(typeof u.width !== "object") u.width = {
			value: u.width
		};
		if(typeof u.width.max == "string") u.width.max = parseInt(u.width.max.replace(/([0-9]+)/i, "$1"));
		if(typeof u.width.min == "string") u.width.min = parseInt(u.width.min.replace(/([0-9]+)/i, "$1"));
		if(typeof u.tip.size.x == "number") {
			u.tip.size.width = u.tip.size.x;
			delete u.tip.size.x
		}
		if(typeof u.tip.size.y == "number") {
			u.tip.size.height = u.tip.size.y;
			delete u.tip.size.y
		}
		return u
	}
	function x() {
		var u, F;
		F = [true,
		{}];
		for(u = 0; u < arguments.length; u++) F.push(arguments[u]);
		for(u = [a.extend.apply(a, F)]; typeof u[0].name == "string";) u.unshift(v(a.fn.qtip.styles[u[0].name]));
		u.unshift(true, {
			classes: {
				tooltip: "qtip-" + (arguments[0].name || "defaults")
			}
		}, a.fn.qtip.styles.defaults);
		u = a.extend.apply(a, u);
		F = a.browser.msie ? 1 : 0;
		u.tip.size.width += F;
		u.tip.size.height += F;
		if(u.tip.size.width % 2 > 0) u.tip.size.width += 1;
		if(u.tip.size.height % 2 > 0) u.tip.size.height += 1;
		if(u.tip.corner === true) u.tip.corner = this.options.position.corner.tooltip === "center" ? false : this.options.position.corner.tooltip;
		return u
	}
	function y(u, F, I) {
		F = {
			bottomRight: [
				[0, 0],
				[F, I],
				[F, 0]
			],
			bottomLeft: [
				[0, 0],
				[F, 0],
				[0, I]
			],
			topRight: [
				[0, I],
				[F, 0],
				[F, I]
			],
			topLeft: [
				[0, 0],
				[0, I],
				[F, I]
			],
			topMiddle: [
				[0, I],
				[F / 2, 0],
				[F, I]
			],
			bottomMiddle: [
				[0, 0],
				[F, 0],
				[F / 2, I]
			],
			rightMiddle: [
				[0, 0],
				[F, I / 2],
				[0, I]
			],
			leftMiddle: [
				[F, 0],
				[F, I],
				[0, I / 2]
			]
		};
		F.leftTop = F.bottomRight;
		F.rightTop = F.bottomLeft;
		F.leftBottom = F.topRight;
		F.rightBottom = F.topLeft;
		return F[u]
	}
	function D(u) {
		var F;
		if(a("<canvas>").get(0).getContext) F = {
			topLeft: [u, u],
			topRight: [0, u],
			bottomLeft: [u, 0],
			bottomRight: [0, 0]
		};
		else if(a.browser.msie) F = {
			topLeft: [-90, 90, 0],
			topRight: [-90, 90, -u],
			bottomLeft: [90, 270, 0],
			bottomRight: [90, 270, -u]
		};
		return F
	}
	function B() {
		var u;
		u = this.getDimensions();
		this.elements.bgiframe = this.elements.wrapper.prepend('<iframe class="qtip-bgiframe" frameborder="0" tabindex="-1" src="javascript:false" style="display:block; position:absolute; z-index:-1; filter:alpha(opacity=\'0\'); border: 1px solid red; height:' + u.height + "px; width:" + u.width + 'px" />').children(".qtip-bgiframe:first")
	}
	a.fn.qtip = function(u, F) {
		var I, C, M, Q, N, X, ma, pa;
		if(typeof u == "string") {
			typeof a(this).data("qtip") !== "object" && a.fn.qtip.log.error.call(self, 1, a.fn.qtip.constants.NO_TOOLTIP_PRESENT, false);
			if(u == "api") return a(this).data("qtip").interfaces[a(this).data("qtip").current];
			else if(u == "interfaces") return a(this).data("qtip").interfaces
		} else {
			u || (u = {});
			if(typeof u.content !== "object" || u.content.jquery && u.content.length > 0) u.content = {
				text: u.content
			};
			if(typeof u.content.title !== "object") u.content.title = {
				text: u.content.title
			};
			if(typeof u.position !== "object") u.position = {
				corner: u.position
			};
			if(typeof u.position.corner !== "object") u.position.corner = {
				target: u.position.corner,
				tooltip: u.position.corner
			};
			if(typeof u.show !== "object") u.show = {
				when: u.show
			};
			if(typeof u.show.when !== "object") u.show.when = {
				event: u.show.when
			};
			if(typeof u.show.effect !== "object") u.show.effect = {
				type: u.show.effect
			};
			if(typeof u.hide !== "object") u.hide = {
				when: u.hide
			};
			if(typeof u.hide.when !== "object") u.hide.when = {
				event: u.hide.when
			};
			if(typeof u.hide.effect !== "object") u.hide.effect = {
				type: u.hide.effect
			};
			if(typeof u.style !== "object") u.style = {
				name: u.style
			};
			u.style = v(u.style);
			Q = a.extend(true, {}, a.fn.qtip.defaults, u);
			Q.style = x.call({
				options: Q
			}, Q.style);
			Q.user = a.extend(true, {}, u)
		}
		return a(this).each(function() {
			if(typeof u == "string") {
				X = u.toLowerCase();
				M = a(this).qtip("interfaces");
				if(typeof M == "object") if(F === true && X == "destroy") for(; M.length > 0;) M[M.length - 1].destroy();
				else {
					if(F !== true) M = [a(this).qtip("api")];
					for(I = 0; I < M.length; I++) if(X == "destroy") M[I].destroy();
					else if(M[I].status.rendered === true) if(X == "show") M[I].show();
					else if(X == "hide") M[I].hide();
					else if(X == "focus") M[I].focus();
					else if(X == "disable") M[I].disable(true);
					else X == "enable" && M[I].disable(false)
				}
			} else {
				ma = a.extend(true, {}, Q);
				ma.hide.effect.length = Q.hide.effect.length;
				ma.show.effect.length = Q.show.effect.length;
				if(ma.position.container === false) ma.position.container = a(document.body);
				if(ma.position.target === false) ma.position.target = a(this);
				if(ma.show.when.target === false) ma.show.when.target = a(this);
				if(ma.hide.when.target === false) ma.hide.when.target = a(this);
				C = a.fn.qtip.interfaces.length;
				for(I = 0; I < C; I++) if(typeof a.fn.qtip.interfaces[I] == "undefined") {
					C = I;
					break
				}
				N = new e(a(this), ma, C);
				a.fn.qtip.interfaces[C] = N;
				if(typeof a(this).data("qtip") == "object") {
					if(typeof a(this).attr("qtip") === "undefined") a(this).data("qtip").current = a(this).data("qtip").interfaces.length;
					a(this).data("qtip").interfaces.push(N)
				} else a(this).data("qtip", {
					current: 0,
					interfaces: [N]
				});
				if(ma.content.prerender === false && ma.show.when.event !== false && ma.show.ready !== true) ma.show.when.target.bind(ma.show.when.event + ".qtip-" + C + "-create", {
					qtip: C
				}, function(Ma) {
					pa = a.fn.qtip.interfaces[Ma.data.qtip];
					pa.options.show.when.target.unbind(pa.options.show.when.event + ".qtip-" + Ma.data.qtip + "-create");
					pa.cache.mouse = {
						x: Ma.pageX,
						y: Ma.pageY
					};
					g.call(pa);
					pa.options.show.when.target.trigger(pa.options.show.when.event)
				});
				else {
					N.cache.mouse = {
						x: ma.show.when.target.offset().left,
						y: ma.show.when.target.offset().top
					};
					g.call(N)
				}
			}
		})
	};
	a(document).ready(function() {
		a.fn.qtip.cache = {
			screen: {
				scroll: {
					left: a(window).scrollLeft(),
					top: a(window).scrollTop()
				},
				width: a(window).width(),
				height: a(window).height()
			}
		};
		var u;
		a(window).bind("resize scroll", function(F) {
			clearTimeout(u);
			u = setTimeout(function() {
				if(F.type === "scroll") a.fn.qtip.cache.screen.scroll = {
					left: a(window).scrollLeft(),
					top: a(window).scrollTop()
				};
				else {
					a.fn.qtip.cache.screen.width = a(window).width();
					a.fn.qtip.cache.screen.height = a(window).height()
				}
				for(i = 0; i < a.fn.qtip.interfaces.length; i++) {
					var I = a.fn.qtip.interfaces[i];
					if(I && I.status.rendered === true && (I.options.position.type !== "static" || I.options.position.adjust.scroll && F.type === "scroll" || I.options.position.adjust.resize && F.type === "resize")) I.updatePosition(F, true)
				}
			}, 100)
		});
		a(document).bind("mousedown.qtip", function(F) {
			a(F.target).parents("div.qtip").length === 0 && a(".qtip[unfocus]").each(function() {
				var I = a(this).qtip("api");
				a(this).is(":visible") && !I.status.disabled && a(F.target).add(I.elements.target).length > 1 && I.hide(F)
			})
		})
	});
	a.fn.qtip.interfaces = [];
	a.fn.qtip.log = {
		error: function() {
			return this
		}
	};
	a.fn.qtip.constants = {};
	a.fn.qtip.defaults = {
		content: {
			prerender: false,
			text: false,
			url: false,
			data: null,
			title: {
				text: false,
				button: false
			}
		},
		position: {
			target: false,
			corner: {
				target: "bottomRight",
				tooltip: "topLeft"
			},
			adjust: {
				x: 0,
				y: 0,
				mouse: true,
				screen: false,
				scroll: true,
				resize: true
			},
			type: "absolute",
			container: false
		},
		show: {
			when: {
				target: false,
				event: "mouseover"
			},
			effect: {
				type: "fade",
				length: 100
			},
			delay: 140,
			solo: false,
			ready: false
		},
		hide: {
			when: {
				target: false,
				event: "mouseout"
			},
			effect: {
				type: "fade",
				length: 100
			},
			delay: 0,
			fixed: false
		},
		api: {
			beforeRender: function() {},
			onRender: function() {},
			beforePositionUpdate: function() {},
			onPositionUpdate: function() {},
			beforeShow: function() {},
			onShow: function() {},
			beforeHide: function() {},
			onHide: function() {},
			beforeContentUpdate: function() {},
			onContentUpdate: function() {},
			beforeContentLoad: function() {},
			onContentLoad: function() {},
			beforeTitleUpdate: function() {},
			onTitleUpdate: function() {},
			beforeDestroy: function() {},
			onDestroy: function() {},
			beforeFocus: function() {},
			onFocus: function() {}
		}
	};
	a.fn.qtip.styles = {
		defaults: {
			background: "white",
			color: "#111",
			textAlign: "left",
			width: {
				min: 0,
				max: 250
			},
			padding: "5px 9px",
			border: {
				width: 1,
				radius: 0,
				color: "#d3d3d3"
			},
			tip: {
				corner: false,
				color: false,
				size: {
					width: 13,
					height: 13
				},
				opacity: 1
			},
			title: {
				background: "#e1e1e1",
				fontWeight: "bold",
				padding: "7px 12px"
			},
			button: {
				cursor: "pointer"
			},
			classes: {
				target: "",
				tip: "qtip-tip",
				title: "qtip-title",
				button: "qtip-button",
				content: "qtip-content",
				active: "qtip-active"
			}
		},
		cream: {
			border: {
				width: 3,
				radius: 0,
				color: "#F9E98E"
			},
			title: {
				background: "#F0DE7D",
				color: "#A27D35"
			},
			background: "#FBF7AA",
			color: "#A27D35",
			classes: {
				tooltip: "qtip-cream"
			}
		},
		light: {
			border: {
				width: 3,
				radius: 0,
				color: "#E2E2E2"
			},
			title: {
				background: "#f1f1f1",
				color: "#454545"
			},
			background: "white",
			color: "#454545",
			classes: {
				tooltip: "qtip-light"
			}
		},
		dark: {
			border: {
				width: 3,
				radius: 0,
				color: "#303030"
			},
			title: {
				background: "#404040",
				color: "#f3f3f3"
			},
			background: "#505050",
			color: "#f3f3f3",
			classes: {
				tooltip: "qtip-dark"
			}
		},
		red: {
			border: {
				width: 3,
				radius: 0,
				color: "#CE6F6F"
			},
			title: {
				background: "#f28279",
				color: "#9C2F2F"
			},
			background: "#F79992",
			color: "#9C2F2F",
			classes: {
				tooltip: "qtip-red"
			}
		},
		green: {
			border: {
				width: 3,
				radius: 0,
				color: "#A9DB66"
			},
			title: {
				background: "#b9db8c",
				color: "#58792E"
			},
			background: "#CDE6AC",
			color: "#58792E",
			classes: {
				tooltip: "qtip-green"
			}
		},
		blue: {
			border: {
				width: 3,
				radius: 0,
				color: "#ADD9ED"
			},
			title: {
				background: "#D0E9F5",
				color: "#5E99BD"
			},
			background: "#E5F6FE",
			color: "#4D9FBF",
			classes: {
				tooltip: "qtip-blue"
			}
		}
	}
})(jQuery);
(function(a) {
	var e = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
	a.fn.datetimeSlider = function(g) {
		var c, d = a(this);
		a('<div class="ui-slider-handle startHandle"><div class="startHandleLabel"></div></div><div class="ui-slider-handle endHandle"><div class="endHandleLabel"></div></div>').appendTo(d);
		if(g.type == "day") {
			g.min = 0;
			g.max = 6;
			c = function(f, j) {
				var n = [e[j.values[0]], e[j.values[1]]];
				if(j.values[1] < j.values[0]) {
					n = [e[j.values[0]], e[j.values[1] - 1]];
					if(j.values[1] == 0) n[1] = e[6]
				}
				d.find(".startHandleLabel").text(n[0]);
				d.find(".endHandleLabel").text(n[1]);
				if(j.values[0] == g.min && j.values[1] == g.max || j.values[0] == g.max && j.values[1] == g.min) a(g.displayTarget).text("Any Day");
				else j.values[0] == j.values[1] ? a(g.displayTarget).text(n[0] + "s") : a(g.displayTarget).text(n[0] + "-" + n[1])
			};
			if(!g.values) g.values = [1, 5]
		} else if(g.type == "15min" || g.type == "5min" || g.type == "1min") {
			var b;
			if(g.type == "15min") {
				g.min = 0;
				g.max = 96;
				b = 900;
				if(!g.values) g.values = [36, 68]
			} else if(g.type == "5min") {
				g.min = 0;
				g.max = 288;
				b = 300;
				if(!g.values) g.values = [108, 204]
			} else if(g.type == "1min") {
				g.min = 0;
				g.max = 1440;
				b = 60;
				if(!g.values) g.values = [540, 1020]
			}
			c = function(f, j) {
				var n = [(new Date.today).addSeconds(j.values[0] * b).toString("hh:mmtt"), (new Date.today).addSeconds(j.values[1] * b).toString("hh:mmtt")],
					l = d.find(".startHandleLabel"),
					o = d.find(".endHandleLabel");
				l.text(n[0]);
				o.text(n[1]);
				j.values[0] == g.min && j.values[1] == g.max || j.values[0] == g.max && j.values[1] == g.min ? a(g.displayTarget).text("Any Time") : a(g.displayTarget).text(n[0] + "-" + n[1])
			}
		}
		g.range = true;
		a(this).slider(g).bind("slide", c).bind("slidestart", function() {
			a(".startHandleLabel", d).show();
			a(".endHandleLabel", d).show()
		}).bind("slidestop", function() {
			a(".startHandleLabel", d).hide();
			a(".endHandleLabel", d).hide()
		}).bind("slidestart slide", function() {
			setTimeout(function() {
				var f = d.find(".startHandleLabel"),
					j = d.find(".endHandleLabel");
				f.offsetParent().position().left < f.outerWidth() ? f.addClass("offscreen") : f.removeClass("offscreen");
				j.outerWidth() + j.offsetParent().position().left > d.outerWidth() ? j.addClass("offscreen") : j.removeClass("offscreen")
			}, 5)
		});
		c({}, {
			values: [d.slider("values", 0), d.slider("values", 1)]
		});
		a(".startHandleLabel, .endHandleLabel", d).hide();
		return a(this)
	}
})(jQuery);
var plot;
(function() {
	var a = function(d) {
			return d > 1E9 ? Math.round(d / 1E9 * 100) / 100 + "GB" : d > 1E6 ? Math.round(d / 1E6 * 100) / 100 + "MB" : d > 1E3 ? Math.round(d / 1E3 * 100) / 100 + "KB" : Math.round(d * 100) / 100 + "B"
		},
		e = (new Date).getTimezoneOffset() * 60 * 1E3,
		g = [];
	g.push({
		url: "/cudatel/gui/graph/data",
		type: "lan",
		start: new Date - 432E5,
		end: (new Date).getTime(),
		dom: "#LANInterface",
		yaxisformat: a
	});
	g.push({
		url: "/cudatel/gui/graph/data",
		type: "sessions",
		start: new Date - 432E5,
		end: (new Date).getTime(),
		dom: "#sessions",
		steps: true,
		yaxisformat: function(d) {
			return Math.round(d)
		}
	});
	var c = function(d) {
			var b = (new Date).getTime(),
				f;
			for(f in d) {
				if(b - d[f].end < 12E3) {
					d[f].start += b - d[f].end;
					d[f].end = b
				}
				$.ajax({
					url: d[f].url,
					data: {
						type: d[f].type,
						start: Math.round(d[f].start / 1E3),
						end: Math.round(d[f].end / 1E3),
						interpolation: d[f].interpolation || "AVERAGE",
						action: "flot"
					},
					dataType: "json",
					context: d[f],
					success: function(j) {
						for(var n = this, l = $(this.dom), o = [], q = 0;; q++) if(j["v" + q]) {
							j["v" + q].data = jQuery.map(j["v" + q].data, function(y) {
								return [[y[0] - e, y[1]]]
							});
							o.push(j["v" + q])
						} else break;
						if(l.is(":visible")) {
							var v;
							if(l.data("plot")) {
								v = l.data("plot");
								v.setData(o);
								v.setupGrid();
								v.draw()
							} else {
								v = $.plot(l, o, {
									xaxis: {
										mode: "time",
										twelveHourClock: true
									},
									yaxis: {
										tickFormatter: this.yaxisformat,
										minTickSize: 1,
										min: 0
									},
									crosshair: {
										mode: "x"
									},
									steps: this.steps ? true : false,
									grid: {
										hoverable: true,
										clickable: true
									},
									selection: {
										mode: "x"
									},
									legend: {
										position: "nw"
									}
								});
								l.data("plot", v)
							}
							if(!$(".graphTooltip", l)[0]) {
								var x = $('<div class="graphTooltip" style="position: absolute; left: -999em"></div>').appendTo(l).hide();
								j = $('<a href="#" class="graphZoomOverlay">Zoom Out</a>').appendTo(l);
								o = $('<select><option value="MIN">Minimum Value</option><option value="AVERAGE" selected="selected">Average Value</option><option value="MAX">Maximum Value</option></select>').appendTo($('<div class="graphInterpolation">Points Show </div>').appendTo(l));
								q = $('<a href="#" class="graphResetOverlay">Reset</a>').appendTo(l);
								j.bind("click", function(y) {
									y.preventDefault();
									if(n.zoomstack && n.zoomstack.length > 0) {
										y = n.zoomstack.pop();
										n.start = y[0];
										n.end = y[1]
									} else {
										y = (n.end - n.start) * 1.33;
										n.end = (new Date).getTime();
										n.start = n.end - y
									}
									c([n])
								});
								q.bind("click", function(y) {
									y.preventDefault();
									n.end = (new Date).getTime();
									n.start = n.end - 432E5;
									n.zoomstack = [];
									c([n])
								});
								o.bind("change", function() {
									n.interpolation = $(this).val();
									c([n])
								});
								l.unbind("mouseover.ttip").bind("mouseover.ttip", function() {
									x.show()
								});
								l.unbind("mouseout.ttip").bind("mouseout.ttip", function() {
									x.hide()
								});
								l.debounce("plothover", function(y, D) {
									var B = findClosestPoints(v, D.x),
										u = "",
										F;
									for(F in B) {
										var I = B[F][1];
										if(n.yaxisformat) I = n.yaxisformat(I);
										u += sprintf('<div class="stat">%s: %s</div>', F, I)
									}
									x.html(u);
									x.css({
										position: "absolute",
										top: D.pageY - x.offsetParent().offset().top + "px",
										"z-index": 99999,
										"white-space": "nowrap",
										left: D.pageX - x.offsetParent().offset().left - (D.pageX + x.width() <= $(window).width() ? 0 : x.outerWidth()) + "px"
									})
								}, 100);
								l.bind("plotselected", function(y, D) {
									if(!n.zoomstack) n.zoomstack = [];
									n.zoomstack.push([n.start, n.end]);
									v.clearSelection();
									n.start = D.xaxis.from + e;
									n.end = D.xaxis.to + e;
									c([n])
								})
							}
						}
					}
				})
			}
		};
	$(window).bind("screenready", function(d, b) {
		b.screen == "statsgraphs" && $.getREST("/cudatel/gui/system/wanenabled", {}, function(f) {
			if(f.wan) {
				g.push({
					url: "/cudatel/gui/graph/data",
					type: "wan",
					start: new Date - 432E5,
					end: (new Date).getTime(),
					dom: "#WANInterface",
					yaxisformat: a
				});
				$("#WANgraph").show()
			} else $("#WANgraph").hide();
			var j = setInterval(function() {
				$("#statsGraphsBody")[0] ? c(g) : clearInterval(j)
			}, 1E4);
			c(g)
		})
	})
})();

function findClosestPoints(a, e) {
	a.getAxes();
	var g = {},
		c = a.getData(),
		d;
	for(d in c) {
		var b = c[d],
			f;
		for(f in b.data) {
			var j = b.data[f];
			if(j[0] >= e) {
				g[b.label] = j;
				break
			}
		}
	}
	return g
};
(function(a) {
	var e = function() {
			var d = a(this).closest(".checksliderContainer");
			if(!d.data("options").noColor) {
				var b = Math.round(-a(this).closest(".checksliderInner").position().left / a(".checksliderOnLabel", d).outerWidth(true) * 10);
				a(".checksliderBgLeft", d).css({
					"background-position": "left -" + (25 + b * 25) + "px"
				});
				a(".checksliderBgRight", d).css({
					"background-position": "right -" + (25 + b * 25) + "px"
				})
			}
		},
		g = function(d, b) {
			var f = b ? -a(".checksliderOnLabel", d).outerWidth(true) : 0;
			d.data("options").noColor ? a(".checksliderInner", d).animate({
				left: f + "px"
			}, {
				duration: "fast"
			}) : a(".checksliderInner", d).animate({
				left: f + "px"
			}, {
				duration: "fast",
				step: e,
				complete: e
			})
		};
	a(".checksliderOuter").live("selectstart mousedown", function(d) {
		d.preventDefault();
		return false
	});
	a(".checksliderContainer").live("updateCheckslider", function(d, b) {
		var f = a(this),
			j = b.value;
		b = f.data("options");
		a(this).find(".checksliderInner");
		a(".checksliderOnLabel", f).outerWidth(true);
		if(b.values[0] == j) g(f, 0);
		else b.values[1] == j && g(f, 1)
	});
	a(".checksliderContainer").live("updateChecksliderTarget", function(d, b) {
		var f = b.target,
			j = b.value;
		if(j === null && f.is("input[type=checkbox]")) f.removeAttr("checked");
		else if(j === null && f.is("input,select,textarea")) f.attr("disabled", "disabled");
		else if(f.is("input[type=checkbox]")) {
			f.val(j);
			f.attr("checked", "checked")
		} else if(f.is("input,select,textarea")) {
			f.val(j);
			f.removeAttr("disabled")
		}
		f.trigger("change", {
			csupdate: true
		});
		f.trigger("dirty")
	});
	a(".checksliderWrap").live("redraw", function(d) {
		if(!a(d.target).closest(".checksliderContainer")[0]) {
			d.stopPropagation();
			a(".checksliderContainer", a(this)).trigger("redraw")
		}
	});
	a(".checksliderContainer").live("redraw", function() {
		var d = a(this);
		d.find(".checksliderOnLabel, .checksliderOffLabel").css({
			width: ""
		});
		var b = Math.max(a(".checksliderOffLabel", d).innerWidth(), a(".checksliderOnLabel", d).innerWidth());
		a(".checksliderOnLabel,.checksliderOffLabel", d).css("width", b);
		b = a(".checksliderOnLabel", d).outerWidth(true);
		var f = a(".checksliderOnLabel", d).outerWidth(true) + a(".checksliderOffLabel", d).outerWidth(true) + a(".checksliderDrag", d).outerWidth(true);
		a(".checksliderConstraint", d).css({
			width: f + b + "px",
			left: -b + "px"
		});
		a(".checksliderInner", d).css("width", f);
		b = a(".checksliderOnLabel", d).outerWidth(true) + a(".checksliderDrag", d).outerWidth();
		a(".checksliderBgWrap", d).css({
			width: b
		});
		f = "rect(0," + b + "px," + a(".checksliderOuter", d).innerHeight() + "px,0)";
		a(".checksliderOuter", d).css({
			clip: f
		});
		d.css({
			width: b + "px"
		});
		d.data("target").trigger("csinit")
	});
	var c = {
		updateValue: function(d) {
			var b = this.data("options");
			b.target.val(d);
			if(b.target.is("input[type=checkbox]")) b.target.attr("checked", d ? true : false);
			this.trigger("updateCheckslider", {
				value: d
			})
		},
		disable: function() {},
		init: function(d) {
			return this.each(function() {
				var b = a(this),
					f = a.extend(true, [], d);
				if(b.is("input,textarea,select")) {
					b.wrap('<div class="checksliderWrap"></div>');
					f.target = b;
					b = b.parent()
				} else if(!f.target) f.target = false;
				if(f.target && f.target.is("input,textarea,select")) {
					if(f.target.is("[type=checkbox]")) f.values = [f.target.val(), null];
					else if(f.target.is("select")) {
						var j = [f.target.find("option:eq(0)"), f.target.find("option:eq(1)")];
						f.labels = [j[0].text(), j[1].text()];
						f.values = [j[0].val(), j[1].val()]
					}
					f.showTarget || f.target.hide()
				}
				f.labels = f.labels || ["On", "Off"];
				f.values = f.values || ["on", null];
				if(f.target && f.target.is("input,textarea,select")) for(j = 0; j < 1; j++) f.target.val();
				var n = a('<div class="checksliderContainer" style="position: relative"><div class="checksliderOuter" style="position:absolute; top: 0; left: 0;"><div class="checksliderConstraint"></div><div class="checksliderBgWrap"><div class="checksliderBgLeft"></div><div class="checksliderBgRight"></div></div><div class="checksliderInner"><div class="checksliderOnLabel"></div><div class="checksliderDrag"></div><div class="checksliderOffLabel"></div></div></div></div>');
				a(".checksliderContainer", n).attr("id", "jid-" + Math.floor(Math.random() * 1E5));
				a(".checksliderOnLabel", n).text(f.labels[0]);
				a(".checksliderOffLabel", n).text(f.labels[1]);
				f.noColor || n.addClass("color");
				n.data("options", f);
				if(!f.target) f.target = a('<input type="hidden" name="' + (f.name || "slider") + '" style="display: none" />').insertAfter(a(".checksliderOffLabel", n));
				b.append(n);
				n.data("target", f.target);
				f.target.data("widgetType", "checkslider");
				f.target.data("widget", n);
				a(".checksliderInner", n).draggable({
					axis: "x",
					containment: a(".checksliderConstraint", n),
					handle: a(".checksliderDrag", n)
				});
				a(".checksliderInner", n).bind("dragstop", function(l, o) {
					var q = -o.position.left > a(".checksliderOnLabel", n).outerWidth(true) / 2 ? 1 : 0;
					g(a(this).closest(".checksliderContainer"), q);
					a(this).trigger("updateChecksliderTarget", {
						position: q,
						value: f.values[q],
						options: f,
						source: n,
						target: f.target
					})
				}).bind("drag", e);
				a(".checksliderOnLabel,.checksliderOffLabel", n).bind("click", function() {
					var l = a(this).closest(".checksliderInner"),
						o = -l.position().left <= a(".checksliderOnLabel", n).outerWidth(true) / 2 ? 1 : 0;
					g(a(this).closest(".checksliderContainer"), o);
					l.trigger("updateChecksliderTarget", {
						position: o,
						value: f.values[o],
						options: f,
						source: n,
						target: f.target
					})
				});
				if(f.value === null) f.target.is("input[type=checkbox]") ? f.target.removeAttr("checked") : f.target.attr("disabled", "disabled");
				else if(f.value !== undefined && (f.value == f.values[0] || f.value == f.values[1])) {
					f.target.val(f.value);
					f.target.is("input[type=checkbox]") && f.target.attr("checked", "checked");
					f.target("originalValue", f.value)
				}
				f.target.bind("change csinit csupdate", function(l, o) {
					if(!(typeof o == "object" && o.csupdate)) {
						var q;
						if(a(this).is("input,textarea,select")) q = a(this).val();
						if(a(this).is("input[type=checkbox]:not(:checked),[disabled]")) q = null;
						n.trigger("updateCheckslider", {
							value: q
						})
					}
				});
				n.trigger("redraw")
			})
		}
	};
	a.fn.checkslider = function(d) {
		if(c[d]) return c[d].apply(this, Array.prototype.slice.call(arguments, 1));
		else if(typeof d === "object" || !d) return c.init.apply(this, arguments);
		else a.error("Method " + d + " does not exist on jQuery.checkslider")
	}
})(jQuery);
(function(a) {
	var e = function(n) {
			var l = a(n).slider("option", "min"),
				o = a(n).slider("option", "max"),
				q = a(n).slider("values", 0);
			n = a(n).slider("values", 1);
			return q == l && n == o || q == o && n == l
		},
		g = function(n, l, o) {
			var q = this.elements.content,
				v = this,
				x = "days",
				y = a(".slider-weekday", q).datetimeSlider({
					wraparound: true,
					type: "day",
					displayTarget: a(".wdayDisplay", q),
					values: [0, 6]
				}),
				D = a(".slider-minute", q).datetimeSlider({
					type: "5min",
					wraparound: true,
					displayTarget: a(".minDisplay", q),
					values: [0, 288]
				});
			a(".pickdates", q).bind("click", function(B) {
				B.preventDefault();
				a(this).hide();
				a(".pickdays", q).show();
				a(".slider-weekday", q).hide();
				a(".wdayDisplay", q).hide();
				B = a(".dates", q).show();
				x = "dates";
				B.find(".checksliderContainer").trigger("redraw")
			});
			a(".pickdays", q).bind("click", function(B) {
				B.preventDefault();
				a(this).hide();
				a(".pickdates", q).show();
				a(".slider-weekday", q).show();
				a(".wdayDisplay", q).show();
				a(".dates", q).hide();
				x = "days"
			}).hide();
			a(".fromDate, .toDate", q).datepicker({
				beforeShow: function() {
					return {
						showYear: a(".anyYear", q).val() == "thisyear"
					}
				}
			});
			a(".anyYear", q).checkslider({
				noColor: true
			}).bind("change", function(B) {
				a(B.target).val() == "anyyear" ? a(".fromDate, .toDate", q).datepicker("option", "dateFormat", "mm/dd") : a(".fromDate, .toDate", q).datepicker("option", "dateFormat", "mm/dd/yy")
			}).trigger("change");
			a(".dates", q).hide();
			a(".filter_type", q).bind("change", function() {
				a(this).val() ? a(".filter_value", q).show() : a(".filter_value", q).hide()
			});
			a(".hideButton", q).bind("click", function(B) {
				B.preventDefault();
				B = {
					bbx_router_condition_map_tod_wday: "",
					bbx_router_condition_map_tod_min_day: "",
					bbx_router_condition_map_specific_date: "",
					bbx_router_condition_map_recurring_date: "",
					filter_type: "",
					filter_value: ""
				};
				if(x == "days") {
					if(!e(y)) {
						var u = [y.slider("values", 0) + 1, y.slider("values", 1) + 1];
						if(u[0] > u[1]) {
							u[1] -= 1;
							if(u[1] < 1) u[1] = 7
						}
						B.bbx_router_condition_map_tod_wday = u[0] + "-" + u[1]
					}
				} else {
					u = a(".anyYear", q).val() == "thisyear" ? "bbx_router_condition_map_specific_date" : "bbx_router_condition_map_recurring_date";
					B[u] = a(".fromDate", q).val() == a(".toDate", q).val() ? a(".fromDate", q).val() : a(".fromDate", q).val() + "-" + a(".toDate", q).val()
				}
				if(!e(D)) B.bbx_router_condition_map_tod_min_day = D.slider("values", 0) * 5 + "-" + D.slider("values", 1) * 5;
				if(a(".filter_type", q).val() != "" && a(".filter_value", q).val() != "") {
					B.filter_type = a(".filter_type", q).val();
					B.filter_value = a(".filter_value", q).val()
				}
				if(B.filter_type && B.filter_type !== "cid_regex") B.filter_value = B.filter_value.replace(/[^0-9+]/g, "");
				B.bbx_router_condition_map_id = l;
				B.action = "modify_condition_map";
				B.template = "json";
				a.ajax({
					url: "/cudatel/gui/configure/dynamic/routers",
					data: B,
					dataType: "json",
					success: function(F) {
						d(o, F.data.bbx_router_condition_map)
					}
				});
				v.hide()
			})
		},
		c = function(n, l, o) {
			if(!o) return false;
			o = o.split("-", 2);
			var q = parseInt(o[0]),
				v = parseInt(o[1]);
			switch(l) {
			case "wday":
				var x = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
				q == v ? a('<div class="range">' + x[q - 1] + "s</div>").appendTo(n).data("range", o).data("type", l) : a('<div class="range">' + x[q - 1] + "-" + x[v - 1] + "</div>").appendTo(n).data("range", o).data("type", l);
				break;
			case "min_day":
				a('<div class="range">' + (new Date.today).addSecon c.init.apply(this, arguments);
		else a.error("Method " + d + " does not exist on jQuery.checkslider")
	}
})(jQuery);
(function(a) {
	var e = function(n) {
			var l = a(n).slider("option", "min"),
				o = a(n).slider("option", "max"),
				q = a(n).slider("values", 0);
			n = a(n).slider("values", 1);
			return q == l && n == o || q == o && n == l
		},
		g = function(n, l, o) {
			var q = this.elements.content,
				v = this,
				x = "days",
				y = a(".slider-weekday", q).datetimeSlider({
					wraparound: true,
					type: "day",
					displayTarget: a(".wdayDisplay", q),
					values: [0, 6]
				}),
				D = a(".slider-minute", q).datetimeSlider({
					type: "5min",
					wraparound: true,
					displayTarget: a(".minDisplay", q),
					values: [0, 288]
				});
			a(".pickdates", q).bind("click", function(B) {
				B.preventDefault();
				a(this).hide();
				a(".pickdays", q).show();
				a(".slider-weekday", q).hide();
				a(".wdayDisplay", q).hide();
				B = a(".dates", q).show();
				x = "dates";
				B.find(".checksliderContainer").trigger("redraw")
			});
			a(".pickdays", q).bind("click", function(B) {
				B.preventDefault();
				a(this).hide();
				a(".pickdates", q).show();
				a(".slider-weekday", q).show();
				a(".wdayDisplay", q).show();
				a(".dates", q).hide();
				x = "days"
			}).hide();
			a(".fromDate, .toDate", q).datepicker({
				beforeShow: function() {
					return {
						showYear: a(".anyYear", q).val() == "thisyear"
					}
				}
			});
			a(".anyYear", q).checkslider({
				noColor: true
			}).bind("change", function(B) {
				a(B.target).val() == "anyyear" ? a(".fromDate, .toDate", q).datepicker("option", "dateFormat", "mm/dd") : a(".fromDate, .toDate", q).datepicker("option", "dateFormat", "mm/dd/yy")
			}).trigger("change");
			a(".dates", q).hide();
			a(".filter_type", q).bind("change", function() {
				a(this).val() ? a(".filter_value", q).show() : a(".filter_value", q).hide()
			});
			a(".hideButton", q).bind("click", function(B) {
				B.preventDefault();
				B = {
					bbx_router_condition_map_tod_wday: "",
					bbx_router_condition_map_tod_min_day: "",
					bbx_router_condition_map_specific_date: "",
					bbx_router_condition_map_recurring_date: "",
					filter_type: "",
					filter_value: ""
				};
				if(x == "days") {
					if(!e(y)) {
						var u = [y.slider("values", 0) + 1, y.slider("values", 1) + 1];
						if(u[0] > u[1]) {
							u[1] -= 1;
							if(u[1] < 1) u[1] = 7
						}
						B.bbx_router_condition_map_tod_wday = u[0] + "-" + u[1]
					}
				} else {
					u = a(".anyYear", q).val() == "thisyear" ? "bbx_router_condition_map_specific_date" : "bbx_router_condition_map_recurring_date";
					B[u] = a(".fromDate", q).val() == a(".toDate", q).val() ? a(".fromDate", q).val() : a(".fromDate", q).val() + "-" + a(".toDate", q).val()
				}
				if(!e(D)) B.bbx_router_condition_map_tod_min_day = D.slider("values", 0) * 5 + "-" + D.slider("values", 1) * 5;
				if(a(".filter_type", q).val() != "" && a(".filter_value", q).val() != "") {
					B.filter_type = a(".filter_type", q).val();
					B.filter_value = a(".filter_value", q).val()
				}
				if(B.filter_type && B.filter_type !== "cid_regex") B.filter_value = B.filter_value.replace(/[^0-9+]/g, "");
				B.bbx_router_condition_map_id = l;
				B.action = "modify_condition_map";
				B.template = "json";
				a.ajax({
					url: "/cudatel/gui/configure/dynamic/routers",
					data: B,
					dataType: "json",
					success: function(F) {
						d(o, F.data.bbx_router_condition_map)
					}
				});
				v.hide()
			})
		},
		c = function(n, l, o) {
			if(!o) return false;
			o = o.split("-", 2);
			var q = parseInt(o[0]),
				v = parseInt(o[1]);
			switch(l) {
			case "wday":
				var x = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
				q == v ? a('<div class="range">' + x[q - 1] + "s</div>").appendTo(n).data("range", o).data("type", l) : a('<div class="range">' + x[q - 1] + "-" + x[v - 1] + "</div>").appendTo(n).data("range", o).data("type", l);
				break;
			case "min_day":
				a('<div class="range">' + (new Date.today).addSeconmm/dd").datepicker("setDate", a(this).data("range")[0]);
								if(!a(this).data("range")[1] || a(this).data("range")[1] == "") a(this).data("range")[1] = a(this).data("range")[0];
								a(".toDate", D).datepicker("option", "dateFormat", "mm/dd").datepicker("setDate", a(this).data("range")[1]);
								a(".anyYear", D).val("anyyear");
								break;
							case "specific_date":
								a(".pickdates", D).trigger("click");
								a(".fromDate", D).datepicker("option", "dateFormat", "mm/dd/yy").datepicker("setDate", a(this).data("range")[0]);
								if(!a(this).data("range")[1] || a(this).data("range")[1] == "") a(this).data("range")[1] = a(this).data("range")[0];
								a(".toDate", D).datepicker("option", "dateFormat", "mm/dd/yy").datepicker("setDate", a(this).data("range")[1]);
								a(".anyYear", D).val("thisyear")
							}
						})
					},
					onShow: function() {
						a(this.elements.content).find(".checksliderContainer").trigger("redraw")
					}
				}
			});
			x.bind("remove", function() {
				var D = a("a.opChange", a(this));
				D.data("qtip") && D.qtip("destroy")
			});
			a("a.opDeleteRouter", x).bind("click", function(D) {
				D.preventDefault();
				confirm("This will delete this condition. Continue?") && a.ajax({
					url: "/cudatel/gui/configure/dynamic/routers",
					data: {
						action: "delete_condition_map",
						bbx_router_condition_map_id: a(this).closest(".routerRule").data("bbx_router_condition_map_id"),
						template: "json"
					},
					dataType: "json",
					success: function() {
						x.trigger("remove");
						x.remove();
						a(".routerRule:visible", n)[1] || n.removeClass("hasRouterRules")
					}
				})
			});
			x.bind("click", function() {
				n.find(".routerRuleSelected").removeClass("routerRuleSelected");
				a(this).addClass("routerRuleSelected")
			});
			a(".routerList", x).callflowDetail({
				bbx_callflow_id: q.bbx_callflow_id,
				mode: v
			});
			n.addClass("hasRouterRules")
		},
		f = function(n, l, o) {
			var q = n.find(".template > .routerRule"),
				v;
			for(v in o.conditions) b(n, q, l, o.conditions[v], o.bbx_user_id ? "user" : "standalone");
			o.conditions.length > 0 ? n.addClass("hasRouterRules") : n.removeClass("hasRouterRules");
			n = a(q).clone().appendTo(a(".routerDefaultAction", n));
			a(".routerList", n).callflowDetail({
				bbx_callflow_id: o.bbx_callflow_id_fallback.bbx_callflow_id,
				mode: o.bbx_user_id ? "user" : "standalone"
			});
			a(".routerTimeBox", n).text("Default Action")
		},
		j = function(n, l, o, q) {
			var v = a(q);
			if(o.jsRouter) o.bbx_router_id = o.jsRouter.bbx_router_id;
			o.bbx_router_id && a.ajax({
				url: "/cudatel/gui/configure/dynamic/routers",
				dataType: "json",
				data: {
					action: "detail",
					bbx_router_id: o.bbx_router_id,
					template: "json"
				},
				success: function(x) {
					o.jsRouter = x.data.routers[0];
					v.empty().append(n).find(".routerActions").sortable({
						axis: "y",
						handle: ".routerTimeBox > .grippy",
						update: function() {
							var y = [];
							a(this).find(".routerRule").each(function() {
								y.push(a(this).data("bbx_router_condition_map_id"))
							});
							a.ajax({
								url: "/cudatel/gui/configure/dynamic/routers",
								dataType: "json",
								data: {
									action: "reorder",
									bbx_router_id: o.bbx_router_id,
									bbx_router_condition_map_id: y,
									template: "json"
								}
							})
						}
					});
					a("a.opAddRouterAction", v).bind("click", function(y) {
						y.preventDefault();
						a.ajax({
							url: "/cudatel/gui/configure/dynamic/routers",
							data: {
								action: "create_default_condition_map",
								template: "json",
								bbx_router_id: o.jsRouter.bbx_router_id
							},
							dataType: "json",
							success: function(D) {
								b(v, v.find(".template > .routerRule"), l, D.data.result, o.jsRouter.bbx_user_id ? "user" : "standalone");
								v.addClass("hasRouterRules")
							}
						})
					});
					f(v, l, x.data.routers[0])
				}
			})
		};
	a.fn.routerDetail = function(n) {
		var l = this;
		a.getTemplate(n.template || "/cudatel/ajax-html/routers_template.html", function(o) {
			a.getTemplate("/cudatel/ajax-html/rulerouterPopup.html", function(q) {
				l.each(function() {
					j(o, q, n, this)
				})
			})
		})
	}
})(jQuery);
(function(a) {
	var e = {
		unknown: "/cudatel/images/typeicons/phone.png",
		user: "/cudatel/images/typeicons/user.png",
		group: "/cudatel/images/typeicons/group.png",
		auto_attendant: "/cudatel/images/typeicons/autoattend.png",
		queue: "/cudatel/images/typeicons/queue.png",
		conference: "/cudatel/images/typeicons/conference.png",
		phone: "/cudatel/images/typeicons/phone.png",
		queue_service: "/cudatel/images/typeicons/queue_service.png",
		auto_attendant_non_interactive: "/cudatel/images/typeicons/listrouter.png",
		router: "/cudatel/images/typeicons/branchrouter.png",
		gateway: "/cudatel/images/typeicons/provider.png",
		parking: "/cudatel/images/typeicons/parking.png"
	},
		g = {
			unknown: "Unknown Type",
			user: "Local Extension",
			group: "Group",
			auto_attendant: "Automated Attendant",
			queue: "Queue",
			conference: "Conference",
			phone: "Unassigned Phone",
			queue_service: "Queue Service Extension",
			router: "Call Router",
			gateway: "Gateway",
			parking: "Call Parking"
		},
		c = function(q, v) {
			var x = /\{([-a-zA-X0-9_]+)}/,
				y = x.exec(q);
			if(y) {
				for(; y = x.exec(q);) q = q.replace(y[0], v[y[1]] || "");
				return q
			} else return v[q] || ""
		},
		d = function(q, v) {
			var x = a();
			if(q.search(/^[0-9]+$/) > -1) q = q.replace(/([0-9])/g, "[x() -]?$1");
			for(var y = RegExp(q, "gi"), D, B = 0, u;
			(D = y.exec(v)) !== null;) {
				if(u = D.index - B) {
					B = v.substr(B, u);
					x = x.add(a(document.createTextNode(B)))
				}
				x = x.add(a('<span class="highlight" />').text(D[0]));
				B = D.index + D[0].length
			}
			if(u = v.length - B) x = x.add(a(document.createTextNode(v.substr(B, u))));
			return x
		},
		b = function(q, v, x) {
			var y = {},
				D = 0,
				B;
			for(B in q) if(y[q[B].category]) y[q[B].category].push(q[B]);
			else {
				D += 1;
				y[q[B].category] = [q[B]]
			}
			q = Math.ceil(x.maxValues / D);
			B = 0;
			for(var u in y) if(y[u].length < q) {
				B += q - y[u].length;
				D -= 1
			}
			q += Math.ceil(B / D);
			D = [];
			var F = v.toLowerCase();
			v = 0;
			for(u in y) {
				y[u].sort(function(I, C) {
					return Math.max(I.label.toLowerCase().indexOf(F), I.number.toLowerCase().indexOf(F)) - Math.max(C.label.toLowerCase().indexOf(F), C.number.toLowerCase().indexOf(F))
				});
				if(y[u].length <= q) D = D.concat(y[u]);
				else {
					D = D.concat(y[u].slice(0, q));
					v += y[u].length - q
				}
			}
			x.categories || D.sort(function(I, C) {
				return cmp(I.label.toLowerCase(), C.label.toLowerCase())
			}).sort(function(I, C) {
				return Math.max(I.label.toLowerCase().indexOf(F), I.number.toLowerCase().indexOf(F)) - Math.max(C.label.toLowerCase().indexOf(F), C.number.toLowerCase().indexOf(F))
			});
			v && D.push({
				elided: v
			});
			return D
		},
		f = function(q, v, x, y) {
			var D = 0,
				B = a.map(v.searchTypes, function(u) {
					if(u.match(/^contact/)) return null;
					else if(u.search(/:primary/) > -1) {
						D = 1;
						return u.replace(/:primary/, "")
					} else return u
				});
			if(B.length > 0) {
				B = {
					rows: 30,
					type: B,
					search_string: q,
					primary: D
				};
				if(v.directory) B.directory = 1;
				if(v.requirePhone) B.registered_phones = 1;
				a.getJSON("/cudatel/gui/extension/list", B, function(u) {
					a.each(u.list, function(F, I) {
						result = {
							label: I.show_name || "(Unnamed Extension)",
							value: I.bbx_extension_id,
							category: "Local Extensions",
							number: I.bbx_extension_block_begin,
							type: g[I.type] || g.unknown,
							extension_type: I.type,
							icon: e[I.type] || e.unknown,
							object_type: "bbx_" + I.type + "_id",
							object_id: I["bbx_" + I.type + "_id"],
							bbx_extension_id: I.bbx_extension_id
						};
						if(!result[result.object_type]) result[result.object_type] = result.object_id;
						y.push(result)
					});
					y = b(y, q, v);
					x(y)
				})
			} else {
				y = b(y, q, v);
				x(y)
			}
		},
		j = function(q, v, x, y) {
			var D = /^contact:(.+)$/,
				B = a.map(v.searchTypes, function(u) {
					if(u == "contact") return "private,user,public";
					else if(u = u.match(D)) return u[1];
					return null
				});
			B.length > 0 ? a.getJSON("/cudatel/gui/contact/search", {
				scope: B.join(","),
				template: "json",
				rows: 30,
				search_string: q,
				extra_search: q
			}, function(u) {
				var F = u.contact;
				a.each(F, function(I, C) {
					a.each(a.grep(C.bbx_contact_labels || [], function(M) {
						return M.bbx_contact_label_property === "TEL"
					}), function(M, Q) {
						y.push({
							label: C.bbx_contact_first_name + " " + C.bbx_contact_last_name,
							value: C.bbx_contact_id,
							type: Q.bbx_contact_label_type,
							number: Q.bbx_contact_label_value,
							icon: e[C.bbx_contact_scope] || e.unknown,
							category: l[C.bbx_contact_scope],
							object_type: "bbx_contact_id",
							object_id: C.bbx_contact_id,
							bbx_contact_id: F
						})
					})
				});
				f(q, v, x, y)
			}) : f(q, v, x, y)
		},
		n = {
			searchTypes: ["all"],
			hiddenFormat: "{object_type}:{object_id}",
			textFormat: "number",
			validate: ["routable"],
			mustValidate: false,
			maxValues: 10,
			categories: true
		},
		l = {
			"private": "Address Book",
			"public": "Global Contacts",
			user: "Local Users"
		},
		o = {
			search: function(q) {
				var v = a(this);
				if(v.is(".extensionPickerReady")) {
					var x = v.data("params");
					a.getREST("/cudatel/gui/extension/extension", q, function(y) {
						if(y = y.extension[0]) {
							y.value = y.bbx_extension_id;
							y.number = y.bbx_extension_block_begin;
							v.val(c(x.textFormat, y)).trigger("change", {
								autoinit: true
							});
							x.hiddenElem.val(c(x.hiddenFormat, y)).trigger("change", {
								autoinit: true
							})
						}
					})
				} else v.one("extensionPickerReady", function() {
					o.search.call(v[0], q)
				})
			},
			init: function(q) {
				q = a.extend({}, n, q);
				if(typeof q.searchTypes == "string") q.searchTypes = [q.searchTypes];
				var v = function(x, y) {
						j(x.term, q, y, [])
					};
				return a(this).each(function() {
					var x = a(this);
					if(!x.data("extensionPicker")) {
						x.data("extensionPicker", true);
						q.hiddenElem = q.hidden ? a(q.hidden) : q.hiddenName ? a('<input type="hidden">').attr("name", q.hiddenName).insertAfter(a(this)) : a('<input type="hidden"/>').insertAfter(a(this));
						q.initialSearch && o.search.call(x[0], q.initialSearch);
						var y = false,
							D = false,
							B = function(F) {
								q.hiddenElem.val(c(q.hiddenFormat, F));
								x.val(c(q.textFormat, F));
								q.hiddenElem.trigger("dirty");
								q.hiddenElem.trigger("selection", F);
								x.trigger("dirty");
								x.trigger("selection", F);
								y = true
							},
							u = a(this).autocomplete({
								source: v,
								minLength: 1,
								select: function(F, I) {
									B(I.item);
									return false
								},
								focus: function() {
									return false
								},
								close: function() {
									q.forcePickFirst && x.val() !== "" && !y && D && B(D)
								},
								open: function() {
									y = false;
									q.hiddenElem.val("");
									var F = a(this).data("autocomplete").menu,
										I = F.element.find(".ui-menu-item:first");
									if(q.forcePickFirst && I.data("item.autocomplete")) D = I.data("item.autocomplete");
									q.autoSelectFirst && F.activate(a.Event({
										type: "mouseenter"
									}), I)
								}
							}).bind("focus", function(F) {
								a(F.target).css("border-color", "")
							}).bind("blur", function(F) {
								q.mustValidate && !q.emptyTriggersSelection && !y && q.hiddenElem.val() == "" && a(F.target).css("border-color", "red");
								if(q.emptyTriggersSelection && x.val() === "") B({});
								else y || x.trigger("noselection")
							}).data("autocomplete");
						u._renderMenu = function(F, I) {
							var C = this,
								M;
							a.each(I, function(Q, N) {
								if(N.elided) F.append("<li>And " + parseInt(N.elided, 10) + " more..</li>");
								else {
									if(N.category != M && q.categories) {
										F.append(a('<li class="ui-autocomplete-category" />').text(N.category));
										M = N.category
									}
									C._renderItem(F, N)
								}
							})
						};
						u._renderItem = function(F, I) {
							if(I.number && I.type != undefined) {
								var C = a('<li><a><img /><span class="label" /><br /><span class="extPickerNumber" /> <span class="extPickerItemType" /></a></li>'),
									M = C.find("> a");
								C.data("item.autocomplete", I);
								M.find("> img").attr("src", I.icon);
								M.find("> .label").append(d(this.term, I.label));
								M.find("> .extPickerNumber").append(d(this.term, format_information(I.number)));
								M.find("> .extPickerItemType").text(I.type)
							} else {
								C = a("<li><a /></li>");
								C.data("item.autocomplete", I);
								C.find("> a").text(I.label)
							}
							C.appendTo(F);
							return C
						};
						x.data("params", q);
						x.addClass("extensionPickerReady").trigger("extensionPickerReady")
					}
				})
			}
		};
	a.fn.extensionPicker = function(q) {
		if(o[q]) return o[q].apply(this, Array.prototype.slice.call(arguments, 1));
		else if(typeof q === "object" || !q) return o.init.apply(this, arguments);
		else a.error("Method " + q + " does not exist on jQuery.extensionPicker")
	}
})(jQuery);
(function(a) {
	var e = function(f, j, n, l, o, q, v) {
			var x = a(".queueCallList", v),
				y = null;
			x.find(".queueCallItem").each(function() {
				if(a(".waittime", this).data("time") > q) {
					y = v.find(".template > .queueCallItem").clone().insertBefore(a(this)).data("uuid", f);
					return false
				}
			});
			y || (y = v.find(".template > .queueCallItem").clone().appendTo(x).data("uuid", f));
			y.data("queue", j);
			a(".cidname", y).text(formatCID(l, o));
			a(".waittime", y).data("time", q).text(a.timeSince(q, {
				format: "short",
				precision: 4
			}));
			a(".queue", y).text(n);
			a("a.opPop", y).bind("click", function(D) {
				var B = a(this).closest("td").addClass("disabled"),
					u = a(this).closest("div.queueCallItem").data("uuid"),
					F = getUnique("bind");
				D.preventDefault();
				a(window).bind("meteor_channel_hangup." + F, function(I, C) {
					if(C.json.call_uuid === u) {
						B.removeClass("disabled");
						a(window).unbind("meteor_channel_hangup." + F)
					}
				});
				a.ajax({
					url: "/cudatel/gui/freeswitch/queue_pick",
					data: {
						uuid: u,
						template: "json",
						queue_key_name: j,
						caller_id_name: l,
						caller_id_number: o
					},
					dataType: "json",
					success: function(I) {
						I.failure && B.removeClass("disabled").addClass("failed")
					}
				})
			});
			a(".queueCallNoCalls", v).hide()
		},
		g = function(f, j, n) {
			var l = j.find(".queueCallItem").filter(function() {
				return a(this).data("uuid") == f
			});
			l.addClass("removed");
			a(".ownerName", l).text(n);
			setTimeout(function() {
				l.remove();
				j.find(".queueCallList .queueCallItem").length < 1 && a(".queueCallNoCalls", j).show()
			}, 5E3)
		},
		c = function(f, j, n, l) {
			f = j.json.fifo_action;
			if(f == "push" && l[j.json.fifo_name]) e(j.json.unique_id, j.json.fifo_name, l[j.json.fifo_name].name, j.json.caller_caller_id_name, j.json.caller_caller_id_number, Math.round((new Date).getTime() / 1E3), n);
			else if(f == "abort" || f == "timeout" || f == "consumer_pop") {
				l = "";
				var o = j.json.unique_id;
				if(f == "consumer_pop") {
					l = formatCID(j.json.bbx_caller_id_name, j.json.bbx_caller_id_number);
					o = j.json.fifo_caller_uuid
				} else if(f == "timeout") l = "Timed Out";
				else if(f == "abort") l = "Abandoned";
				g(o, n, l)
			}
		},
		d = function(f, j, n) {
			var l = f.status,
				o = a(".queueSignIn > .bbx_user_status_id", j);
			a.each(l, function() {
				a("option:first", o).attr("value") > this.bbx_user_status_id ? o.prepend('<option value="' + this.bbx_user_status_id + '">' + this.bbx_user_status_name + "</option>") : o.append('<option value="' + this.bbx_user_status_id + '">' + this.bbx_user_status_name + "</option>")
			});
			a.ajax({
				url: "/cudatel/gui/user/status",
				type: "GET",
				data: {
					template: "json"
				},
				dataType: "json",
				success: function(y) {
					o.val(parseInt(y.data.bbx_user_status_id));
					j.parent().data("status", parseInt(y.data.bbx_user_status_id))
				}
			});
			for(var q in f.fifo) {
				l = f.fifo[q].name;
				n[q] = {
					name: l,
					warning_seconds: f.fifo[q].warning_seconds,
					critical_seconds: f.fifo[q].critical_seconds
				};
				if(f.fifo[q].callers) {
					var v = f.fifo[q].callers,
						x;
					for(x in v) e(v[x].uuid, q, l, v[x].caller_id_name, v[x].caller_id_number, Math.round((new Date).getTime() / 1E3) - v[x].age, j)
				}
			}
		},
		b = {
			template: "/cudatel/ajax-html/queueCalls.html"
		};
	jQuery.fn.queueCalls = function(f) {
		if(f == "getstatus") return this.data("status");
		f = a.extend({}, b, f);
		var j = this;
		a.getTemplate(f.template, function(n) {
			a(j).each(function() {
				var l = a(n).appendTo(a(this).empty());
				l.find(".template > .queueCallItem");
				var o = {};
				a(window).bind("tick", function() {
					a(".waittime", l).each(function() {
						var v;
						if(v = a(this).data("time")) {
							a(this).text(a.timeSince(v, {
								format: "short",
								precision: 4
							}));
							var x = a(this).closest(".queueCallItem"),
								y = o[x.data("queue")].critical_seconds,
								D = o[x.data("queue")].warning_seconds;
							if(D || y) {
								v = Math.round((new Date).getTime() / 1E3) - v;
								if(y && v > y) x.addClass("critical").removeClass("warning");
								else D && v > D ? x.addClass("warning").removeClass("critical") : x.removeClass("warning critical")
							}
						}
					})
				});
				if(f.data) {
					d(f.data, l, o);
					a(window).bind("meteor_queue_status", function(v, x) {
						c(v, x, l, o)
					})
				} else a.ajax({
					url: "/cudatel/gui/queue/userlist",
					data: {
						template: "json",
						verbose: 1
					},
					dataType: "json",
					success: function(v) {
						d(v.data, l, o);
						a(window).bind("meteor_queue_status", function(x, y) {
							c(x, y, l, o)
						})
					}
				});
				var q = a(".queueSignIn > .bbx_user_status_id", l);
				a(window).bind("meteor_user_" + validUsername, function(v, x) {
					if(x.json.action == "set_user_status") {
						l.parent().data("status", parseInt(x.json.status_id));
						q.val(parseInt(x.json.status_id))
					}
				})
			})
		});
		return a(this)
	}
})(jQuery);
(function(a) {
	var e = {},
		g = function(c, d) {
			if(c.data("longest")) {
				var b = Math.round((new Date).getTime() / 1E3) - c.data("longest");
				if(c.data("critical_seconds") && b > c.data("critical_seconds")) c.addClass("critical").removeClass("warning");
				else if(c.data("critical_calls") && d >= c.data("critical_calls")) c.addClass("critical").removeClass("warning");
				else if(c.data("warning_seconds") && b > c.data("warning_seconds")) c.addClass("warning").removeClass("critical");
				else c.data("warning_calls") && d >= c.data("warning_calls") ? c.addClass("warning").removeClass("critical") : c.removeClass("warning critical")
			} else c.removeClass("warning critical")
		};
	a.fn.queueBoard = function(c) {
		var d = a(this);
		c = a.extend({}, e, c);
		a.getTemplate("/cudatel/ajax-html/wallboard/queues.html", function(b) {
			d.each(function() {
				var f = a(this);
				a(this).append(a(b));
				f.addClass("queueBoard");
				a.getJSON("/cudatel/gui/queue/list", {
					template: "json"
				}, function(j) {
					f.find(".queueWallCalls:eq(0)").queueCalls({
						template: "/cudatel/ajax-html/wallboard/queueCallsBoard.html",
						data: j.data
					});
					j = j.data.fifo;
					var n = [],
						l;
					for(l in j) {
						j[l].keyname = l;
						n.push(j[l])
					}
					var o = {},
						q = {};
					n = n.sort(function(y, D) {
						return y.name < D.name ? -1 : y.name > D.name ? 1 : 0
					});
					a.each(n, function() {
						if(this.keyname != "manual_calls") {
							var y = a(".template .queueBox", f).clone().appendTo(a(".queueWallQueues", f));
							y.data("queue", this);
							y.data("queuename", this.keyname);
							a(".queueBoxName", y).text(this.name);
							a(".queueBoxExtension", y).text(format_information(this.extension_value));
							a(".queueAgentAvailable", y).text(this.agents.available.toString());
							a(".queueAgentTotal", y).text(this.agents.number.toString());
							this.agents.number == 0 && y.addClass("noagents");
							a(".queueTime", y).empty();
							y.data("warning_seconds", this.warning_seconds);
							y.data("critical_seconds", this.critical_seconds);
							y.data("warning_calls", this.warning_calls);
							y.data("critical_calls", this.critical_calls);
							if(this.callers) {
								o[this.keyname] = a.map(this.callers, function(u) {
									var F = Math.round((new Date).getTime() / 1E3 - u.age);
									return {
										uuid: u.uuid,
										timestamp: F
									}
								});
								var D = a.map(o[this.keyname], function(u) {
									return u.timestamp
								}).sort(function(u, F) {
									return u - F
								});
								D = D[0];
								y.data("longest", D);
								a(".queueCallerTotal", y).text(this.callers.length);
								a(".queueTime", y).text(a.timeSince(D, {
									format: "short",
									precision: 4
								}));
								g(y, this.callers.length)
							} else {
								a(".queueCallerTotal", y).text("0");
								o[this.keyname] = [];
								y.addClass("empty")
							}
							var B = this.keyname;
							a.each(this.agents.bbx_user_ids, function() {
								if(q[this.bbx_user_id]) q[this.bbx_user_id].queues.push(B);
								else q[this.bbx_user_id] = {
									queues: [B],
									available: this.status_id == "1",
									status: this.status_id,
									calls: parseInt(this.use_count)
								}
							})
						}
					});
					var v = 0;
					a(".queueBoxInner > .sizer", f).each(function() {
						var y = a(this).outerWidth();
						if(y > v) v = y
					});
					l = a(".queueBox", f);
					l.css({
						width: v + 40 + "px"
					});
					if(c.autosize) {
						l.data("ratio", l.width() / l.height());
						var x = a(".queueWallQueues", f);
						a(".queueBox", x).bind("resize", function(y) {
							y.stopPropagation();
							a(this).css({
								"font-size": a(this).innerHeight() / 5.5 + "px"
							})
						});
						a(window).debounce("resize", function() {
							x.fullHeight();
							fitAll(x, a(".queueBox", x));
							a(".queueWallCalls", f).css({
								"font-size": a(window).width() / 70 + "px"
							})
						}).trigger("resize")
					}
					a(window).bind("tick", function() {
						a(".queueBox", f).each(function() {
							if(a(this).data("longest")) {
								a(this).find(".queueTime").text(a.timeSince(a(this).data("longest"), {
									format: "short",
									precision: 4
								}));
								g(a(this), o[a(this).data("queuename")].length)
							} else a(this).find(".queueTime").empty()
						})
					});
					Ape.subscribe("user_status");
					a(window).bind("meteor_user_status", function(y, D) {
						if(D && D.json && D.json.action === "delete_user") if(q[D.json.user_id]) {
							agent = q[D.json.user_id];
							var B = a(".queueBox", f).filter(function() {
								return a.inArray(a(this).data("queuename"), agent.queues) > -1
							});
							a(".queueAgentTotal, .queueAgentAvailable", B).each(function() {
								a(this).text(parseInt(a(this).text(), 10) - 1)
							})
						}
					});
					a(window).bind("meteor_queue_status", function(y, D) {
						if(D.json.action == "refresh") location.reload();
						else {
							var B = f.find(".queueWallQueues > .queueBox").filter(function() {
								return a(this).data("queuename") == D.json.fifo_name
							});
							if(B.length != 0) {
								var u = D.json.fifo_action;
								if(u == "push") {
									B.data("calls", B.data("calls") + 1);
									o[D.json.fifo_name].push({
										uuid: D.json.unique_id,
										timestamp: Math.round((new Date).getTime() / 1E3)
									})
								} else if(u == "abort" || u == "timeout" || u == "consumer_pop") {
									var F = D.json.unique_id;
									if(u == "consumer_pop") F = D.json.fifo_caller_uuid;
									o[D.json.fifo_name] = a.grep(o[D.json.fifo_name], function(N) {
										return N.uuid != F
									})
								} else if(u == "bridge-consumer-start" || u == "bridge-consumer-stop") {
									var I;
									if(I = q[D.json.variable_fifo_outbound_uuid]) {
										if(u == "bridge-consumer-start") {
											u = -1;
											I.calls += 1;
											I.available = false
										} else if(u == "bridge-consumer-stop" && I.calls != 0) {
											u = 1;
											I.calls -= 1;
											I.available = true
										} else return;
										if(I.status != "1") {
											u = 0;
											I.available = false
										}
										I = uniqueArray(q[D.json.variable_fifo_outbound_uuid].queues);
										for(var C in I) {
											var M = I[C],
												Q = f.find(".queueWallQueues > .queueBox").filter(function() {
													return a(this).data("queuename") == M
												});
											a(".queueAgentAvailable", Q).text((parseInt(a(".queueAgentAvailable", Q).text()) + u).toString())
										}
									}
								} else if(D.json.action == "queue_member_add") {
									if(I = q[D.json.user_id]) I.queues.push(D.json.fifo_name);
									else I = q[D.json.user_id] = {
										queues: D.json.fifo_name,
										available: D.json.status_id == "1",
										status: D.json.status_id,
										calls: 0
									};
									I.status != "2" && a(".queueAgentTotal", B).text(parseInt(a(".queueAgentTotal", B).text()) + 1);
									I.calls == 0 && I.status == "1" && a(".queueAgentAvailable", B).text(parseInt(a(".queueAgentAvailable", B).text()) + 1)
								} else if(D.json.action == "queue_member_delete") {
									if(I = q[D.json.user_id]) if(a.inArray(D.json.fifo_name, I.queues) != -1) {
										I.queues.splice(a.inArray(D.json.fifo_name, I.queues), 1);
										I.status != "2" && a(".queueAgentTotal", B).text(parseInt(a(".queueAgentTotal", B).text()) - 1);
										I.calls == 0 && I.status == "1" && a(".queueAgentAvailable", B).text(parseInt(a(".queueAgentAvailable", B).text()) - 1)
									}
								} else return;
								C = a.map(o[D.json.fifo_name], function(N) {
									return N.timestamp
								}).sort(function(N, X) {
									return N - X
								});
								C = C[0];
								B.data("longest", C);
								a(".queueCallerTotal", B).text(o[D.json.fifo_name].length.toString());
								if(o[D.json.fifo_name].length > 0) {
									B.removeClass("empty");
									g(B, o[D.json.fifo_name].length)
								} else {
									B.addClass("empty").removeClass("critical warning");
									B.removeData("longest")
								}
							}
						}
					});
					a(window).bind("meteor_user_status", function(y, D) {
						var B = 1;
						if(D.json.status_id != "1") B = -1;
						var u, F, I;
						if(I = q[D.json.user_id]) {
							I.queues = D.json.queues;
							u = I.available;
							F = I.status;
							I.available = D.json.status_id == "1";
							I.status = D.json.status_id
						} else {
							I = q[D.json.user_id] = {
								queues: D.json.queues,
								available: D.json.status_id == "1",
								status: D.json.status_id,
								calls: 0
							};
							F = "2";
							u = false
						}
						var C = 0;
						if(F == "2" && I.status != "2") C = 1;
						else if(F != "2" && I.status == "2") C = -1;
						var M = uniqueArray(q[D.json.user_id].queues || []),
							Q;
						for(Q in M) {
							var N = M[Q],
								X = a.grep(q[D.json.user_id].queues, function(pa) {
									return pa == M[Q]
								}).length;
							F = f.find(".queueWallQueues > .queueBox").filter(function() {
								return a(this).data("queuename") == N
							});
							if(C) {
								var ma = parseInt(a(".queueAgentTotal", F).text()) + C * X;
								a(".queueAgentTotal", F).text(ma.toString());
								ma == 0 ? F.addClass("noagents") : F.removeClass("noagents")
							}
							if(u != I.available) {
								X = B * (X - I.calls);
								a(".queueAgentAvailable", F).text((parseInt(a(".queueAgentAvailable", F).text()) + X).toString())
							}
						}
					})
				})
			})
		});
		return d
	}
})(jQuery);
(function(a) {
	var e = {},
		g = function(b) {
			if(b.is(".oncall")) return false;
			b.addClass("droppedCall dropWrap");
			for(var f = function() {
					b.addClass("droppedCall")
				}, j = function() {
					b.removeClass("droppedCall")
				}, n = 0; n < 3; n++) {
				setTimeout(f, n * 1E3);
				setTimeout(j, n * 1E3 + 500)
			}
			setTimeout(f, 3E3)
		},
		c = function(b, f) {
			return a(".agentBox", f).filter(function() {
				return a.isArray(b) ? a.inArray(a(this).data("bbx_user_id"), b) != -1 : a(this).data("bbx_user_id") == b
			})
		},
		d = function(b, f, j) {
			var n = f.name,
				l = f.id,
				o = f.extension,
				q = f.status,
				v = typeof f.lastcall_age == "undefined" ? false : f.lastcall_age,
				x = f.status_age;
			if(v !== false && v < x) x = v;
			v = f.statuses;
			var y = a(".template .agentBox", b).clone();
			a(".agentName", y).text(n);
			a(".agentExtension", y).text(o);
			y.data("bbx_user_id", l);
			y.data("sort_name", f.sort_name);
			if(q == "1") y.addClass("idle");
			else q == "2" ? y.addClass("offline") : y.addClass("away");
			y.data("status", q);
			y.data("lag", f.lag);
			a(".status", y).text(v[q].bbx_user_status_name);
			n = unixTime() - x;
			y.data("statustime", n);
			a(".statusTime", y).text(a.timeSince(n, {
				format: "medium"
			}));
			if(j) {
				var D = false;
				a(".agentWallAgents .agentBox").each(function() {
					if(a(this).data("sort_name") > f.sort_name) {
						y.insertBefore(a(this));
						D = true;
						return false
					}
				});
				D || y.appendTo(a(".agentWallAgents", b))
			} else y.appendTo(a(".agentWallAgents", b));
			return y
		};
	a.fn.agentBoard = function(b) {
		var f = a(this);
		b = a.extend({}, e, b);
		a.getTemplate("/cudatel/ajax-html/wallboard/agents.html", function(j) {
			f.each(function() {
				var n = a(this),
					l = 0,
					o = function() {
						l = 0;
						a(".agentBoxInner > .sizer", n).each(function() {
							var q = a(this).outerWidth();
							if(q > l) l = q
						});
						l = l || 150;
						a(".agentBox", n).css({
							width: l + 40 + "px"
						})
					};
				a(this).append(a(j));
				n.addClass("agentBoard");
				a.getJSON("/cudatel/gui/queue/list", {
					template: "json"
				}, function(q) {
					n.find(".agentWallCalls:eq(0)").queueCalls({
						template: "/cudatel/ajax-html/wallboard/queueCallsBoard.html",
						data: q.data
					});
					var v = q.data.agents;
					a.isEmptyObject(v) && n.addClass("noagents");
					var x = q.data.status,
						y = q.data.fifo,
						D = [],
						B;
					for(B in v) D.push(v[B]);
					D = D.sort(function(F, I) {
						return F.sort_name < I.sort_name ? -1 : F.sort_name > I.sort_name ? 1 : 0
					});
					a.each(D, function() {
						var F = d(n, {
							name: this.name,
							id: this.bbx_user_id,
							extension: this.extension_value,
							status: this.status_id,
							status_age: this.status_age,
							statuses: x,
							lastcall_age: this.avail_secs,
							lag: this.lag,
							sort_name: this.sort_name
						});
						if(this.bridges) {
							var I = this.bridges[0];
							F.addClass("oncall");
							F.data("uuid", I.caller_uuid);
							a(".cid", F).text(formatCID(I.caller.caller_id_name, I.caller.caller_id_number));
							var C = unixTime() - I.bridge_start_epoch_ago;
							F.data("calltime", C);
							a(".callTime", F).text(a.timeSince(C, {
								format: "medium"
							}));
							a(".callQueueName", F).text(q.data.fifo[I.fifo_name].name)
						} else if(this.avail_secs < 0) {
							F.addClass("wrap");
							I = unixTime() + this.avail_secs * -1;
							F.data("wraptime", I);
							a(".wrapTime", F).text(a.timeSince(I, {
								format: "medium"
							}));
							setTimeout(function() {
								F.removeClass("wrap")
							}, this.avail_secs * -1E3)
						}
						F.data("statustime", unixTime() - this.status_age)
					});
					a.each(y, function() {
						a.each(this.agents.bbx_user_ids, function() {
							if(this.outbound_fail_count != "0") {
								var F = c(this.bbx_user_id, a(".agentWallAgents", n));
								a(".failcount", F).text((parseInt(a(".failcount", F).text()) + parseInt(this.outbound_fail_count)).toString());
								F.addClass("droppedCall")
							}
						})
					});
					o();
					if(b.autosize) {
						v = a(".agentBox", n);
						v.data("ratio", v.width() / v.height());
						var u = a(".agentWallAgents", n);
						a(".agentBox", u[0]).live("resize", function(F) {
							F.stopPropagation();
							a(this).css({
								"font-size": a(this).innerHeight() / 5.5 + "px"
							})
						});
						a(window).debounce("resize", function() {
							u.fullHeight();
							fitAll(u, a(".agentBox.idle, .agentBox.away", u));
							a(".agentWallCalls", n).css({
								"font-size": a(window).width() / 70 + "px"
							})
						}).trigger("resize")
					}
					a(window).bind("meteor_user_status", function(F, I) {
						if(I.json.action === "delete_user") {
							var C = c(I.json.user_id, a(".agentWallAgents", n));
							if(C && C[0]) {
								C.remove();
								a(window).trigger("resize")
							}
						} else {
							C = c(I.json.user_id, a(".agentWallAgents", n));
							a(".status", C).text(x[I.json.status_id].bbx_user_status_name);
							var M = unixTime();
							C.data("statustime", M);
							C.data("status", I.json.status_id);
							a(".statusTime", C).text(a.timeSince(M, {
								format: "medium"
							}));
							if(I.json.status_id == "1") C.addClass("idle").removeClass("offline away");
							else I.json.status_id == "2" ? C.addClass("offline").removeClass("idle away") : C.addClass("away").removeClass("idle offline");
							a(window).trigger("resize")
						}
					});
					a(window).bind("meteor_queue_status", function(F, I) {
						if(I.json.action == "refresh") location.reload();
						else if(I.json.fifo_action == "bridge-consumer-start") {
							var C = c(I.json.variable_fifo_outbound_uuid, a(".agentWallAgents", n));
							if(C[0]) {
								C.addClass("oncall").removeClass("droppedCall wrap ringing").find(".failcount").text("0");
								var M = unixTime();
								C.data("calltime", M);
								C.data("uuid", I.json.unique_id);
								a(".callTime", C).text(a.timeSince(M, {
									format: "medium"
								}));
								a(".cid", C).text(formatCID(I.json.caller_caller_id_name, I.json.caller_caller_id_number));
								a(".callQueueName", C).text(y[I.json.fifo_name].name)
							}
						} else if(I.json.fifo_action == "bridge-consumer-stop") {
							C = c(I.json.variable_fifo_outbound_uuid, a(".agentWallAgents", n));
							if(C[0]) {
								if(C.data("status") == 1) {
									M = unixTime();
									C.data("statustime", M)
								}
								C.removeClass("oncall");
								if(C.data("lag")) {
									C.addClass("wrap");
									M = unixTime() + C.data("lag");
									C.data("wraptime", M);
									C.data("status") == 1 && C.data("statustime", M);
									a(".wrapTime", C).text(a.timeSince(M, {
										format: "medium"
									}));
									setTimeout(function() {
										C.removeClass("wrap dropWrap")
									}, C.data("lag") * 1E3)
								}
								C.removeData("uuid")
							}
						} else if(I.json.action == "queue_member_add") {
							C = c(I.json.user_id, a(".agentWallAgents", n));
							if(!C[0]) {
								C = I.json;
								d(n, {
									name: C.name,
									id: C.user_id,
									extension: C.extension_value,
									status: C.status_id,
									status_age: 0,
									statuses: x,
									sort_name: C.sort_name
								}, true);
								o();
								a(window).trigger("resize")
							}
						} else if(I.json.action == "queue_member_delete") {
							C = c(I.json.user_id, a(".agentWallAgents", n));
							if(C[0] && I.json.count == 0) {
								C.remove();
								a(window).trigger("resize")
							}
						} else if(I.json.fifo_action == "post-dial" && I.json.result == "failure" && I.json.acceptable == "false") {
							M = I.json.fifo_outbound_uuid_list.split(",");
							M = c(M, a(".agentWallAgents", n));
							M.removeClass("ringing");
							a.each(M, function() {
								var N = a(this);
								a(".failcount", N).text((parseInt(a(".failcount", N).text()) + 1).toString());
								if(N.data("lag")) {
									N.addClass("wrap");
									var X = unixTime() + N.data("lag");
									N.data("wraptime", X);
									a(".wrapTime", N).text(a.timeSince(X, {
										format: "medium"
									}));
									setTimeout(function() {
										N.removeClass("wrap dropWrap")
									}, N.data("lag") * 1E3)
								}
							});
							g(M)
						} else if(I.json.fifo_action == "post-dial" && I.json.result == "failure") {
							M = I.json.fifo_outbound_uuid_list.split(",");
							M = c(M, a(".agentWallAgents", n));
							M.removeClass("ringing")
						} else if(I.json.fifo_action == "post-dial" && I.json.result == "success") {
							M = I.json.fifo_outbound_uuid_list.split(",");
							var Q = a.inArray(I.json.variable_bbx_user_id, M);
							Q != -1 && M.splice(Q, 1);
							M = c(M, a(".agentWallAgents", n));
							M.removeClass("ringing")
						} else if(I.json.fifo_action == "pre-dial") {
							M = I.json.fifo_outbound_uuid_list.split(",");
							M = c(M, a(".agentWallAgents", n));
							a(".ringName", M).text(y[I.json.fifo_name].name);
							a(".cid", M).text(formatCID(I.json.caller_caller_id_name, I.json.caller_caller_id_number));
							M.removeClass("wrap").addClass("ringing")
						}
					});
					Ape.subscribe("call_unhold");
					a(window).bind("meteor_call_unhold", function(F, I) {
						var C = c(I.json.variable_fifo_outbound_uuid, a(".agentWallAgents", n));
						if(C[0]) {
							C.data("calltime", parseInt(I.json.variable_fifo_epoch_start_bridge, 10));
							C.data("uuid", I.json["unique-id"]);
							a(".callTime", C).text(a.timeSince(C.data("calltime"), {
								format: "medium"
							}));
							a(".cid", C).text(formatCID(I.json["caller-caller-id-name"], I.json["caller-caller-id-number"]));
							a(".callQueueName", C).text(I.json.bbx_queue_name);
							C.addClass("oncall").removeClass("droppedCall wrap ringing")
						}
					});
					Ape.subscribe("call_update");
					a(window).bind("meteor_call_update", function(F, I) {
						var C = I.json;
						C.direction == "SEND" && n.find(".agentBox").filter(function() {
							return a(this).data("uuid") && a(this).data("uuid") == C["unique-id"]
						}).find(".cid").text(formatCID(C["sent-callee-id-name"], C["sent-callee-id-number"]))
					});
					a(window).bind("tick", function() {
						a(".agentWallAgents .agentBox", n).each(function() {
							a(".statusTime", this).text(a.timeSince(a(this).data("statustime"), {
								format: "medium"
							}));
							a(".wrapTime", this).text(a.timeSince(a(this).data("wraptime"), {
								format: "medium"
							}));
							a(".callTime", this).text(a.timeSince(a(this).data("calltime"), {
								format: "medium"
							}));
							var F = a(this),
								I = x[a(this).data("status")].bbx_user_status_warning_seconds,
								C = x[a(this).data("status")].bbx_user_status_critical_seconds;
							if(!F.hasClass("oncall")) {
								var M = Math.round((new Date).getTime() / 1E3) - F.data("statustime");
								if(C && M > C) F.addClass("critical").removeClass("warning");
								else I && M >= I ? F.addClass("warning").removeClass("critical") : F.removeClass("warning critical")
							}
						})
					})
				})
			})
		});
		return f
	}
})(jQuery);
(function(a) {
	var e = function(c, d, b) {
			var f = a(".queueAgentTable", d),
				j = a(".template .queueAgentRow", d).clone();
			a(".name", j).text(c.name);
			a(".status", j).val(c.status_id);
			a(".extension", j).text(format_information(c.extension_value));
			j.data("extension", c.extension_value);
			j.data("sort_name", c.sort_name);
			if(c.status_id == "1") j.addClass("online");
			else c.status_id == "2" ? j.addClass("offline") : j.addClass("away");
			a(".statustext", j).text(a(".status option:selected", j).text());
			j.addClass("userStatus" + c.status_id);
			d = Math.round((new Date).getTime() / 1E3) - c.status_age;
			a(".statusTime", j).text(a.timeSince(d, {
				precision: 2,
				format: "medium"
			}));
			j.data("time", d);
			a("a.opCall", j).bind("click", function(l) {
				l.preventDefault();
				a.getJSON("/cudatel/gui/freeswitch/originate", {
					destination: c.extension_value,
					caller_id_name: c.name
				}, function() {})
			});
			a("input[name=bbx_user_id]", j).val(c.bbx_user_id);
			var n;
			b && a(".queueAgentRow", f).each(function() {
				if(a(this).data("sort_name") > c.sort_name) {
					j.insertBefore(this);
					n = true;
					return false
				}
			});
			n || j.appendTo(f);
			return j
		},
		g = function(c) {
			var d = {},
				b = {};
			a.getJSONCached("/cudatel/gui/permission/check", {
				bbx_permission_name: "EAVESDROP"
			}, 36E5, function(f) {
				trueish(f.self.EAVESDROP) && c.addClass("eavesdropEnabled")
			});
			a(window).bind("tick", function() {
				c.find(".queueAgentTable .queueAgentRow").each(function() {
					var f = a(this).data("time");
					a(this).find(".statusTime").text(a.timeSince(f, {
						precision: 2,
						format: "medium"
					}));
					a(this).find(".queueAgentCallsRow").each(function() {
						var j = a(this).data("time");
						a(this).find(".callTime").text(a.timeSince(j, {
							precision: 2,
							format: "medium"
						}))
					})
				})
			});
			a(window).bind("meteor_user_status", function(f, j) {
				j && j.json && j.json.action === "delete_user" && d[j.json.user_id] && d[j.json.user_id].dom.remove()
			});
			a(window).bind("meteor_queue_status", function(f, j) {
				var n;
				if(n = d[j.json.variable_fifo_outbound_uuid]) {
					var l = j.json.fifo_action,
						o = j.json;
					if(l == "bridge-consumer-start") {
						n.dom.addClass("oncall");
						var q = c.find(".queueAgentCallsRow").filter(function() {
							return a(this).data("uuid") == o.unique_id
						});
						if(q[0]) a(".callName", q).text(formatCID(o.caller_caller_id_name, o.caller_caller_id_number));
						else {
							q = a(".template .queueAgentCallsRow", c).clone();
							q.data("uuid", o.unique_id);
							l = Math.round((new Date).getTime() / 1E3);
							q.data("time", l);
							a(".callName", q).text(formatCID(o.caller_caller_id_name, o.caller_caller_id_number));
							a(".callTime", q).text(a.timeSince(parseInt(l), {
								format: "medium"
							}));
							b[j.json.fifo_name] && a(".queueName", q).text(b[j.json.fifo_name].name);
							a(".qamCallsTable", n.dom).append(q);
							a("a.eavesdrop", q).bind("click", function(v) {
								v.preventDefault();
								a.getJSON("/cudatel/gui/freeswitch/eavesdrop", {
									template: "json",
									uuid: q.data("uuid")
								}, function() {})
							})
						}
					} else if(l == "bridge-consumer-stop") {
						n.dom.find(".queueAgentCallsRow").filter(function() {
							return a(this).data("uuid") == o.unique_id
						}).remove();
						n.dom.find(".queueAgentCallsRow").length == 0 && n.dom.removeClass("oncall")
					}
				} else if(j.json.action == "queue_member_add") {
					if(!d[j.json.user_id]) {
						n = j.json;
						n.bbx_user_id = n.user_id;
						n.status_age = 0;
						l = e(n, c, true);
						d[n.bbx_user_id] = {
							dom: l
						}
					}
				} else if(j.json.action == "queue_member_delete" && j.json.count == 0) if(n = d[j.json.user_id]) {
					n.dom.remove();
					delete d[j.json.user_id]
				}
			});
			Ape.subscribe(["user_status", "call_update"]);
			a(window).bind("meteor_user_status", function(f, j) {
				var n;
				if(n = d[j.json.user_id].dom) {
					a(".status", n).val(j.json.status_id);
					a(".statustext", n).text(a(".status option:selected", n).text());
					n.attr("class", n.attr("class").replace(/ ?userStatus\d+ ?/g, " ")).addClass("userStatus" + j.json.status_id);
					if(j.json.status_id == "1") n.addClass("online").removeClass("offline away");
					else j.json.status_id == "2" ? n.addClass("offline").removeClass("online away") : n.addClass("away").removeClass("online offline");
					var l = Math.round((new Date).getTime() / 1E3);
					n.data("time", l);
					a(".statusTime", n).text(a.timeSince(l, {
						precision: 2,
						format: "medium"
					}))
				}
			});
			a(window).bind("meteor_call_update", function(f, j) {
				var n = j.json;
				n.direction == "SEND" && c.find(".queueAgentCallsRow").filter(function() {
					return a(this).data("uuid") == n["unique-id"]
				}).find(".callName").text(formatCID(n["sent-callee-id-name"], n["sent-callee-id-number"]))
			});
			a.getJSON("/cudatel/gui/queue/list", {
				template: "json"
			}, function(f) {
				a.getJSONCached("/cudatel/gui/permission/check", {
					bbx_permission_name: ["EDIT_QUEUE_AGENT_STATUS"]
				}, 36E5, function(j) {
					var n = [],
						l = f.data.status;
					b = f.data.fifo;
					var o = a(".status", c);
					a.each(l, function() {
						a("option:first", o).attr("value") > this.bbx_user_status_id ? o.prepend(a("<option />").val(this.bbx_user_status_id).text(this.bbx_user_status_name)) : o.append(a("<option />").val(this.bbx_user_status_id).text(this.bbx_user_status_name))
					});
					trueish(j.self.EDIT_QUEUE_AGENT_STATUS) || o.disable("permission_queueAgentManager_js");
					for(var q in f.data.agents) n.push(f.data.agents[q]);
					n.sort(function(v, x) {
						var y = v.sort_name,
							D = x.sort_name;
						return y < D ? -1 : y > D ? 1 : 0
					});
					a(".queueAgentTable", c);
					a.each(n, function() {
						var v = e(this, c);
						d[this.bbx_user_id] = {
							dom: v
						};
						if(this.bridges) {
							v.addClass("oncall");
							a.each(this.bridges, function() {
								var x = a(".template .queueAgentCallsRow", c).clone();
								x.data("uuid", this.consumer.uuid);
								var y = Math.round((new Date).getTime() / 1E3 - this.bridge_start_epoch_ago);
								x.data("time", y);
								a(".callTime", x).text(a.timeSince(parseInt(y), {
									format: "medium"
								}));
								a(".callName", x).text(formatCID(this.caller.caller_id_name, this.caller.caller_id_number));
								a(".queueName", x).text(f.data.fifo[this.fifo_name].name);
								a("a.eavesdrop", x).bind("click", function(D) {
									D.preventDefault();
									a.getJSON("/cudatel/gui/freeswitch/eavesdrop", {
										template: "json",
										uuid: x.data("uuid")
									}, function() {})
								});
								a(".qamCallsTable", v).append(x)
							})
						}
					})
				})
			})
		};
	a.fn.queueAgentManager = function(c) {
		c || (c = {});
		var d = a(this);
		a.getTemplate(c.template || "/cudatel/ajax-html/queueAgentManager.html", function(b) {
			d.each(function() {
				var f = a(b).appendTo(a(this));
				g(f)
			})
		});
		return d
	}
})(jQuery);
(function(a) {
	var e = function(g, c, d) {
			var b = a(d);
			a("a.opUnassign", g).live("click", function(f) {
				f.preventDefault();
				var j = a(this).closest(".routerItem");
				f = j.data("eem").bbx_extension_entity_map_id;
				var n = a(this).closest(".routerWrap");
				if(!confirm("This will permanently remove all forwarding actions and time-based rules associated with this extension. Continue?")) return false;
				f && a.getJSON("/cudatel/gui/configure/dynamic/user_routers", {
					action: "unassign",
					bbx_extension_entity_map_id: f,
					template: "json"
				}, function() {
					n.empty().append(a(".noActions", b).clone()).find(".extension").text(format_information(j.data("eem").bbx_extension_id.bbx_extension_value))
				})
			});
			a("a.opsAddRouter", g).live("click", function(f) {
				f.preventDefault();
				var j = a(this),
					n = j.closest(".routerItem"),
					l = n.data("eem");
				a.getJSON("/cudatel/gui/configure/dynamic/user_routers", {
					action: "assign",
					bbx_extension_entity_map_id: l.bbx_extension_entity_map_id,
					template: "json"
				}, function(o) {
					if(o.data.bbx_router_id > 0) {
						l.bbx_router_id = {
							bbx_router_id: o.data.bbx_router_id
						};
						n.data("eem", l);
						j.closest(".routerWrap").routerDetail({
							mode: "user",
							bbx_router_id: o.data.bbx_router_id,
							template: "/cudatel/ajax-html/routers_template_fmfm.html"
						})
					}
				})
			});
			a.each(c, function() {
				var f = a(".routerItem", b).clone().appendTo(g);
				a(".extension", f).text(format_information(this.bbx_extension_id.bbx_extension_value));
				this.bbx_router_id.bbx_router_id ? a(".routerWrap", f).routerDetail({
					bbx_router_id: this.bbx_router_id.bbx_router_id,
					template: "/cudatel/ajax-html/routers_template_fmfm.html"
				}) : a(".noActions", b).clone().appendTo(a(".routerWrap", f).empty()).find(".extension").text(format_information(this.bbx_extension_id.bbx_extension_value));
				f.data("eem", this)
			})
		};
	a.fn.userRouter = function(g) {
		elems = this;
		a.getTemplate(g.template || "/cudatel/ajax-html/user_router.html", function(c) {
			elems.each(function() {
				g.json && e(this, g.json, c)
			})
		});
		return elems
	}
})(jQuery);
(function(a) {
	var e = function(g) {
			var c = g.replace(/\\;/g, "%ESCAPED_SEMICOLON%").split(";"),
				d = {};
			a.each(["pobox", "extended", "street", "city", "state", "postcode", "country"], function(b, f) {
				d[f] = c[b].replace(/%ESCAPED_SEMICOLON%/g, ";").replace(/\\(.)/g, "$1")
			});
			return d
		};
	(function() {
		var g = function(b, f, j, n) {
				n = n || {};
				var l = a('<div class="addressViewEdit"><div class="addressView addressOverlay"><div class="addressViewHeader"></div><div class="addressViewBody"></div></div><div class="addressEdit addressOverlay"><div class="addressEditHeader"></div><div class="addressEditBody"></div></div>').appendTo(f),
					o = a(".addressView", l),
					q = a(".addressViewHeader", o),
					v = a(".addressViewBody", o),
					x = a(".addressEdit", l),
					y = a(".addressEditHeader", x),
					D = a(".addressEditBody", x);
				a.getTemplate("/cudatel/ajax-html/ccc_address_book_headers.html", function(B) {
					var u = a(B);
					B = a(".view", u);
					var F = a(".edit", u);
					a(".name", u).text(j.bbx_contact_first_name + " " + j.bbx_contact_last_name);
					o.add(x).bind("name", function(I, C) {
						a(".name", q.add(y)).text(C.bbx_contact_first_name + " " + C.bbx_contact_last_name)
					});
					n.noDelete ? a(".opUnmapContact", u).remove() : a(".opUnmapContact", u).bind("click", function(I) {
						I.preventDefault();
						confirm("Remove this contact from your address book?") && a.deleteREST("/cudatel/gui/contact/map", {
							bbx_contact_id: j.bbx_contact_id
						}, function() {
							f.empty().addressBook()
						})
					});
					u = function(I) {
						I && I.preventDefault();
						D.empty().addressEdit(j.bbx_contact_id, n);
						x.show();
						o.hide()
					};
					a(".opEditContact", B).bind("click", u);
					a(".opBack", F).bind("click", function(I) {
						I.preventDefault();
						v.empty().addressView(j.bbx_contact_id, n);
						o.show();
						x.hide()
					});
					a(".opBack", B).bind("click", function(I) {
						I.preventDefault();
						f.empty().addressBook()
					});
					B.appendTo(q);
					F.appendTo(y);
					if(b == "edit") u();
					else {
						x.hide();
						v.addressView(j.bbx_contact_id, n)
					}
				})
			},
			c = function(b) {
				b.preventDefault();
				var f = a(this).closest(".addressBook");
				a.getTemplate("/cudatel/ajax-html/contactNewPopup.html", function(j) {
					var n = a(j).appendTo(f);
					a(".cancel", n).one("click", function(l) {
						l.preventDefault();
						n.remove()
					});
					a(".searchNewContact", n).extensionPicker({
						searchTypes: ["user:primary"],
						hiddenName: "bbx_user_id_contact",
						hiddenFormat: "object_id",
						textFormat: "label",
						autoSelectFirst: true
					});
					a("form", n).ajaxForm({
						accept: "application/json",
						success: function(l) {
							if(typeof l == "string") l = a.parseJSON(l);
							l = l.contact;
							n.remove();
							g("edit", f, l)
						}
					})
				})
			},
			d = function(b, f, j) {
				var n = a(j);
				a(b).empty();
				a.each(f, function(l, o) {
					var q = a(".template > .addressRow", n).clone().appendTo(a(".addressList", n));
					a(".firstName", q).text(o.bbx_contact_first_name);
					a(".lastName", q).text(o.bbx_contact_last_name);
					q.data("contact", o)
				});
				n.appendTo(b);
				a(".opAddContact", n).bind("click", c);
				a(".addressRow", n).bind("click", function(l) {
					l.preventDefault();
					g("view", n, a(this).data("contact"))
				});
				a(".opMyContact", n).bind("click", function(l) {
					l.preventDefault();
					a.getREST("/cudatel/gui/contact/me", {}, function(o) {
						g("view", n, o.me, {
							noDelete: true
						})
					})
				})
			};
		a.fn.addressBook = function(b) {
			b = typeof b == "undefined" ? {} : b;
			elems = this;
			elems.addClass("addressBookWidget");
			a.getTemplate(b.template || "/cudatel/ajax-html/ccc_address_book.html", function(f) {
				a.getJSON("/cudatel/gui/vcard/types", {}, function() {
					elems.each(function() {
						var j = this;
						b.json ? d(j, b.json, f, vcd) : a.getJSON("/cudatel/gui/contact/addressbook", {
							no_labels: 1
						}, function(n) {
							d(j, n.addressbook, f, b)
						})
					})
				})
			});
			return elems
		}
	})();
	(function() {
		var g = ["TEL", "ORG", "ADR", "EMAIL", "IMPP"],
			c = {},
			d = function(f) {
				f.preventDefault();
				(f = a(this).data("number")) ? a.post("/cudatel/gui/freeswitch/originate", {
					destination: f,
					caller_id_name: "Calling Contact..."
				}) : console_log('Error: a.call clicked, has no "number" data element', this)
			},
			b = function(f, j, n, l) {
				var o = function(y) {
						if(!c[y.bbx_contact_label_property].valid_types) return "";
						var D = [];
						a.each(c[y.bbx_contact_label_property].valid_types, function(B, u) {
							y.bbx_contact_label_type.indexOf(u.type) > -1 && D.push(u.display_name)
						});
						return D.join(", ")
					};
				f.addClass("view");
				a(".name", f).text(n.bbx_contact_first_name + " " + n.bbx_contact_last_name);
				l.noCall || a(".opCall", f[0]).live("click", d);
				var q = false,
					v;
				for(v in n.bbx_contact_labels) {
					q = true;
					break
				}
				n.bbx_contact_labels_by_name = {};
				if(q) {
					a(".noLabelMessage", f).remove();
					a.each(n.bbx_contact_labels, function(y, D) {
						n.bbx_contact_labels_by_name[D.bbx_contact_label_property] = n.bbx_contact_labels_by_name[D.bbx_contact_label_property] || [];
						n.bbx_contact_labels_by_name[D.bbx_contact_label_property].push(D)
					})
				}
				a.each(g, function(y, D) {
					n.bbx_contact_labels_by_name[D] || a("tr." + D + "-TR", f).remove()
				});
				a("tr.name-TR", f).remove();
				if(n.extensions && !l.noLocal) for(var x in n.extensions) {
					l = n.extensions[x];
					q = a(".local", j).clone().appendTo(a(".local-TR > td.content", f));
					a(".value", q).text(format_information(l.bbx_extension_value));
					a("a.opCall", q).data("number", l.bbx_extension_block_begin)
				} else a("tr.local-TR", f).remove();
				a.each(n.bbx_contact_labels_by_name.TEL || [], function(y, D) {
					var B = a(".TEL", j).clone().appendTo(a(".TEL-TR > td.content", f));
					B.closest("tr").show();
					a(".value", B).text(format_information(D.bbx_contact_label_value.replace(/[()-]/g, ""), {
						no_auto_split: true
					}));
					a("a.opCall", B).data("number", D.bbx_contact_label_value);
					a(".contactType", B).text(o(D))
				});
				a.each(n.bbx_contact_labels_by_name.ORG || [], function(y, D) {
					var B = a(".ORG", j).clone().appendTo(a(".ORG-TR > td.content", f));
					B.closest("tr").show();
					a(".value", B).text(D.bbx_contact_label_value.replace(/\\(.)/g, "$1"));
					a(".contactType", B).text(o(D))
				});
				a.each(n.bbx_contact_labels_by_name.ADR || [], function(y, D) {
					var B = a(".ADR", j).clone().appendTo(a(".ADR-TR > td.content", f));
					B.closest("tr").show();
					var u = e(D.bbx_contact_label_value),
						F = "";
					if(u.pobox) F += "P.O. Box " + u.pobox + "\n";
					if(u.extended) F += u.extended + "\n";
					if(u.street) F += u.street + "\n";
					if(u.city || u.state || u.postcode) {
						if(u.city) {
							F += u.city;
							F += u.state ? ", " : " "
						}
						if(u.state) F += u.state + " ";
						if(u.postcode) F += u.postcode + "\n"
					}
					if(u.country) F += u.country;
					u = F = F.replace(/&/, "&amp;").replace(/</gm, "&lt;").replace(/>/gm, "&gt;").replace(/\n+$/m, "").replace(/\n/gm, "<br />");
					a(".value", B).html(u);
					a(".contactType", B).text(o(D))
				});
				a.each(n.bbx_contact_labels_by_name.EMAIL || [], function(y, D) {
					var B = a(".EMAIL", j).clone().appendTo(a(".EMAIL-TR > td.content", f));
					B.closest("tr").show();
					var u = format_information(D.bbx_contact_label_value.replace(/\\(.)/g, "$1"));
					a(".value", B).text(u).attr("href", "mailto:" + u);
					a(".contactType", B).text(o(D))
				});
				a.each(n.bbx_contact_labels_by_name.IMPP || [], function(y, D) {
					var B = a(".IMPP", j).clone().appendTo(a(".IMPP-TR > td.content", f));
					B.closest("tr").show();
					a(".value", B).text(format_information(D.bbx_contact_label_value.replace(/\\(.)/g, "$1")));
					a(".contactType", B).text(o(D))
				})
			};
		a.fn.addressView = function(f, j) {
			j = a.extend({
				admin: false
			}, j || {});
			a.getREST("/cudatel/gui/vcard/properties", {}, function(n) {
				c = n.properties
			});
			this.each(function() {
				var n = a(this);
				a.getTemplate(j.template || "/cudatel/ajax-html/ccc_address_view_common.html", function(l) {
					a.getTemplate(j.template || "/cudatel/ajax-html/ccc_address_view.html", function(o) {
						o = a(o);
						a(".staticBody", o).append(l);
						n.empty().append("<div></div>");
						staticBody = a(".staticBody", o).clone();
						template = a(".template", o);
						j.noCall ? a(".callable", template).remove() : a(".no-callable", template).remove();
						a.getREST("/cudatel/gui/contact/detail", {
							bbx_contact_id: f
						}, function(q) {
							n.empty().append(staticBody);
							b(staticBody, template, q.detail, j)
						})
					})
				})
			});
			return this
		}
	})();
	(function() {
		var g = ["TEL", "ORG", "ADR", "EMAIL", "IMPP"],
			c = {},
			d = function(n) {
				var l = "";
				a.each(c[n.bbx_contact_label_property].valid_types || [], function(o, q) {
					var v = n.bbx_contact_label_type ? n.bbx_contact_label_type.indexOf(q.type) > -1 : false,
						x = "js" + (n.bbx_contact_label_id || getUnique("new")) + "chk" + o;
					l += sprintf('<input type="checkbox" id="%s-type-%s" name="bbx_contact_label_type" value="%s"%s /><label for="%s-type-%s">%s</label>', x, o, q.type, v ? ' checked="checked"' : "", x, o, q.display_name)
				});
				return l
			},
			b = function(n) {
				n.preventDefault();
				if(confirm("Delete this contact information?")) {
					var l = a(this).closest("form");
					(n = a(this).closest(".hasLabelID").data("bbx_contact_label_id")) ? a.deleteREST("/cudatel/gui/contact/label", {
						bbx_contact_label_id: n
					}, function() {
						var o = l.closest("td");
						l.remove();
						a("form", o)[0] || o.addClass("empty").append(a(".nothing", template).clone().css({
							display: "block"
						}))
					}) : l.closest("td").addClass("empty").empty().append(a(".nothing", template).clone().css({
						display: "block"
					}))
				}
			},
			f = function(n, l, o, q) {
				q.admin && !trueish(o.my_contact) ? a.getJSONCached("/cudatel/gui/permission/check", {
					bbx_permission_name: ["EDIT_CONTACT"]
				}, 36E5, function(v) {
					if(trueish(v.self.EDIT_CONTACT)) q.admin = true;
					else {
						showError("Some editing features have been disabled because you do not have the proper permissions");
						q.admin = false
					}
					j(n, l, o, q)
				}) : j(n, l, o, q)
			},
			j = function(n, l, o, q) {
				a(".noLabelMessage", n).remove();
				o.bbx_contact_labels_by_name = {};
				a.each(o.bbx_contact_labels || [], function(x, y) {
					o.bbx_contact_labels_by_name[y.bbx_contact_label_property] = o.bbx_contact_labels_by_name[y.bbx_contact_label_property] || [];
					o.bbx_contact_labels_by_name[y.bbx_contact_label_property].push(y)
				});
				a("tr.local-TR", n).remove();
				n.addClass("edit").removeClass("view");
				a.each(g, function(x, y) {
					a("." + y + "-TR").data("property", y)
				});
				a(".addressTypesTable td.legend", n).append('<a href="#" style="display:block" class="ops opNewLabel">Add Info</a>');
				a(".addressTypesTable td.legend > .opNewLabel", n[0]).live("click", functionlace(/\n/gm, "<br />");
					a(".value", B).html(u);
					a(".contactType", B).text(o(D))
				});
				a.each(n.bbx_contact_labels_by_name.EMAIL || [], function(y, D) {
					var B = a(".EMAIL", j).clone().appendTo(a(".EMAIL-TR > td.content", f));
					B.closest("tr").show();
					var u = format_information(D.bbx_contact_label_value.replace(/\\(.)/g, "$1"));
					a(".value", B).text(u).attr("href", "mailto:" + u);
					a(".contactType", B).text(o(D))
				});
				a.each(n.bbx_contact_labels_by_name.IMPP || [], function(y, D) {
					var B = a(".IMPP", j).clone().appendTo(a(".IMPP-TR > td.content", f));
					B.closest("tr").show();
					a(".value", B).text(format_information(D.bbx_contact_label_value.replace(/\\(.)/g, "$1")));
					a(".contactType", B).text(o(D))
				})
			};
		a.fn.addressView = function(f, j) {
			j = a.extend({
				admin: false
			}, j || {});
			a.getREST("/cudatel/gui/vcard/properties", {}, function(n) {
				c = n.properties
			});
			this.each(function() {
				var n = a(this);
				a.getTemplate(j.template || "/cudatel/ajax-html/ccc_address_view_common.html", function(l) {
					a.getTemplate(j.template || "/cudatel/ajax-html/ccc_address_view.html", function(o) {
						o = a(o);
						a(".staticBody", o).append(l);
						n.empty().append("<div></div>");
						staticBody = a(".staticBody", o).clone();
						template = a(".template", o);
						j.noCall ? a(".callable", template).remove() : a(".no-callable", template).remove();
						a.getREST("/cudatel/gui/contact/detail", {
							bbx_contact_id: f
						}, function(q) {
							n.empty().append(staticBody);
							b(staticBody, template, q.detail, j)
						})
					})
				})
			});
			return this
		}
	})();
	(function() {
		var g = ["TEL", "ORG", "ADR", "EMAIL", "IMPP"],
			c = {},
			d = function(n) {
				var l = "";
				a.each(c[n.bbx_contact_label_property].valid_types || [], function(o, q) {
					var v = n.bbx_contact_label_type ? n.bbx_contact_label_type.indexOf(q.type) > -1 : false,
						x = "js" + (n.bbx_contact_label_id || getUnique("new")) + "chk" + o;
					l += sprintf('<input type="checkbox" id="%s-type-%s" name="bbx_contact_label_type" value="%s"%s /><label for="%s-type-%s">%s</label>', x, o, q.type, v ? ' checked="checked"' : "", x, o, q.display_name)
				});
				return l
			},
			b = function(n) {
				n.preventDefault();
				if(confirm("Delete this contact information?")) {
					var l = a(this).closest("form");
					(n = a(this).closest(".hasLabelID").data("bbx_contact_label_id")) ? a.deleteREST("/cudatel/gui/contact/label", {
						bbx_contact_label_id: n
					}, function() {
						var o = l.closest("td");
						l.remove();
						a("form", o)[0] || o.addClass("empty").append(a(".nothing", template).clone().css({
							display: "block"
						}))
					}) : l.closest("td").addClass("empty").empty().append(a(".nothing", template).clone().css({
						display: "block"
					}))
				}
			},
			f = function(n, l, o, q) {
				q.admin && !trueish(o.my_contact) ? a.getJSONCached("/cudatel/gui/permission/check", {
					bbx_permission_name: ["EDIT_CONTACT"]
				}, 36E5, function(v) {
					if(trueish(v.self.EDIT_CONTACT)) q.admin = true;
					else {
						showError("Some editing features have been disabled because you do not have the proper permissions");
						q.admin = false
					}
					j(n, l, o, q)
				}) : j(n, l, o, q)
			},
			j = function(n, l, o, q) {
				a(".noLabelMessage", n).remove();
				o.bbx_contact_labels_by_name = {};
				a.each(o.bbx_contact_labels || [], function(x, y) {
					o.bbx_contact_labels_by_name[y.bbx_contact_label_property] = o.bbx_contact_labels_by_name[y.bbx_contact_label_property] || [];
					o.bbx_contact_labels_by_name[y.bbx_contact_label_property].push(y)
				});
				a("tr.local-TR", n).remove();
				n.addClass("edit").removeClass("view");
				a.each(g, function(x, y) {
					a("." + y + "-TR").data("property", y)
				});
				a(".addressTypesTable td.legend", n).append('<a href="#" style="display:block" class="ops opNewLabel">Add Info</a>');
				a(".addressTypesTable td.legend > .opNewLabel", n[0]).live("click", functionatel/ajax-html/ccc_address_edit.html", function(v) {
						v = a(v);
						a(".staticBody", v).append(q);
						o.empty();
						staticBody = a(".staticBody", v).clone();
						template = a(".template", v);
						a.getREST("/cudatel/gui/contact/detail", {
							bbx_contact_id: n
						}, function(x) {
							staticBody.prependTo(o);
							f(staticBody, template, x.detail, l)
						})
					})
				})
			});
			return this
		}
	})()
})(jQuery);
DEBUG_ACTIVE_RECENT = false;
(function(a) {
	var e = a('<tr class=""><td class="callStatus"></td><td class="cidname"></td><td class="cidnum"></td><td class="ceidname"></td><td class="ceidnum"></td></tr>'),
		g = function(b, f, j, n) {
			var l = e.clone().addClass(b);
			j = j || ["", ""];
			n = n || ["", ""];
			l.find(".callStatus").text(f);
			l.find(".cidname").text(j[0] || "");
			l.find(".cidnum").text(j[1] || "");
			l.find(".ceidname").text(n[0] || "");
			l.find(".ceidnum").text(n[1] || "");
			b === "active" && l.contextMenu([{
				title: "Listen In...",
				fn: function() {
					var o = a(this).data("call");
					eavesdropUI(o)
				}
			}, {
				title: "End Call...",
				fn: function() {
					var o = a(this).data("call");
					showBlanker({
						title: "End Call?",
						text: "Are you would like to end this call?",
						buttons: ["End Call", "Cancel"],
						callbacks: [function() {
							a.post("/cudatel/gui/freeswitch/uuid/uuid_kill", {
								uuid: o.uuid,
								template: "json"
							});
							blankerCancel.call(this)
						},
						blankerCancel]
					})
				}
			}], {
				doubleClickFirst: false
			});
			return l
		},
		c = function(b, f) {
			var j = b.data("callInfo") || {};
			a.each(["caller-callee-id-name", "caller-callee-id-number", "sent-callee-id-name", "sent-callee-id-number", "direction", "caller-caller-id-name", "caller-caller-id-number", "unique-id", "click_to_call_destination"], function(o, q) {
				if(f[q]) j[q] = f[q]
			});
			b.data("callInfo", j);
			var n, l;
			n = f.click_to_call ? formatCID("", j.click_to_call_destination, true) : formatCID(j["sent-callee-id-name"] || j["caller-callee-id-name"], j["sent-callee-id-number"] || j["caller-callee-id-number"] || f.caller_destination_number, true);
			l = formatCID(j["caller-caller-id-name"] || f.cid_name, j["caller-caller-id-number"] || f.cid_number, true);
			if(DEBUG_ACTIVE_RECENT) n = [n[0] + "-USI", n[1] + "-USI"];
			n[0] && a(".ceidname", b).text(n[0]);
			n[1] && a(".ceidnum", b).text(n[1]);
			l[0] && a(".cidname", b).text(l[0]);
			l[1] && a(".cidnum", b).text(l[1])
		},
		d = function(b) {
			Ape.subscribe(["channel_hangup", "call_update"]);
			var f = a(".activeRecentTable", b);
			a.ajax({
				url: "/cudatel/gui/calls/list",
				accept: "application/json",
				dataType: "json",
				success: function(j) {
					var n = j.list;
					a.getJSON("/cudatel/gui/cdr/cdr", {
						rows: 20 - n.length,
						page: 1,
						sortby: "end_timestamp",
						since: "7 days"
					}, function(l) {
						l = l.cdr;
						a.each(n, function() {
							if(this.callstate != "RINGING") {
								var o = formatCID(this.cid_name, this.cid_num, true),
									q = formatCID(this.callee_name, this.callee_num, true);
								if(DEBUG_ACTIVE_RECENT) {
									o = [o[0] + "-BOOTLIVE", o[1] + "-BOOTLIVE"];
									q = [q[0] + "-BOOTLIVE", q[1] + "-BOOTLIVE"]
								}
								g("active", "Active", o, q).appendTo(f).data("uuid", this.uuid || "").data("call", this).data("call_uuid", this.call_uuid || "").data("aleg", this.bridge_a_unique_id || "").data("bleg", this.bridge_b_unique_id || "")
							}
						});
						a.each(l, function() {
							var o = formatCID(this.caller_id_name, this.caller_id_number, true),
								q = formatCID(this.destination_name, this.destination_number, true);
							if(DEBUG_ACTIVE_RECENT) {
								o = [o[0] + "-BOOT", o[1] + "-BOOT"];
								q = [q[0] + "-BOOT", q[1] + "-BOOT"]
							}
							g("completed", "Completed", o, q).appendTo(f).data("uuid", this.uuid)
						});
						a(window).bind("meteor_call_event", function(o, q) {
							var v = q.json;
							if(v.caller_destination_number !== "voicemail") if(v.call_event === "channel_create") {
								x = g("active", "Active", x, y);
								var x = formatCID(v.cid_name, v.cid_number, true),
									y = formatCID(v.ceid_name, v.ceid_number, true);
								if(DEBUG_ACTIVE_RECENT) {
									x = [x[0] + "-CREATE", x[1] + "-CREATE"];
									y = [y[0] + "-CREATE", y[1] + "-CREATE"]
								}
								x = g("active", "Active", x, y);
								c(x, v);
								x.prependTo(f).show().data("uuid", v.uuid || "").data("call", v).data("call_uuid", v.call_uuid || "")
							} else if(v.call_event === "channel_state" && v["channel-state"] === "CS_EXECUTE" && (v["channel-hit-dialplan"] === "true" || v["call-direction"] === "inbound")) {
								x = a("tr", f).filter(function() {
									return a(this).data("uuid") === v["unique-id"]
								});
								x.show()
							} else if(!(v.call_event === "channel_state" && v["channel-state"] === "CS_EXECUTE")) if(v.call_event === "channel_bridge") {
								x = a("tr", f);
								y = x.filter(function() {
									return a(this).data("uuid") === v.bridge_b_unique_id
								});
								y.hide();
								x.filter(function() {
									return a(this).data("uuid") === v.bridge_a_unique_id
								}).show().data("aleg", v.bridge_a_unique_id || "").data("bleg", v.bridge_b_unique_id || "");
								x = formatCID(v.cid_name, v.cid_number, true);
								y = formatCID(v.ceid_name, v.ceid_number, true);
								if(DEBUG_ACTIVE_RECENT) {
									x = [x[0] + "-BRIDGE", x[1] + "-BRIDGE"];
									y = [y[0] + "-BRIDGE", y[1] + "-BRIDGE"]
								}
							} else if(v.call_event === "channel_destroy") {
								v = q.json;
								y = a("tr", f).filter(function() {
									return a(this).data("uuid") == v.uuid
								});
								a(".callStatus", y).text("Completed");
								y.removeClass("active").addClass("completed");
								y.unbind("click");
								y.css("cursor", "")
							}
						});
						a(window).bind("meteor_call_update", function(o, q) {
							var v = q.json;
							if(v.direction == "SEND") {
								var x = a("tr", f).filter(function() {
									return a(this).data("uuid") == v["unique-id"]
								});
								x[0] && c(x, v)
							}
						})
					})
				}
			})
		};
	a.fn.recentActiveCalls = function() {
		elems = this;
		a.getTemplate("/cudatel/ajax-html/recentActiveCalls.html", function(b) {
			elems.each(function() {
				var f = a(b).appendTo(a(this));
				d(f)
			})
		});
		return elems
	}
})(jQuery);
(function(a) {
	var e = function(c, d, b, f) {
			var j = a(".template .secondaryExtItem", c).clone();
			a(".ext", j).text(format_information(d.bbx_extension_id.bbx_extension_value));
			j.data("eem", d);
			if(b && a(".secondaryExtList", c)[0]) {
				var n = false;
				a(".secondaryExtList > .secondaryExtItem", c).each(function() {
					var l = a(this).data("eem");
					if(d.bbx_extension_id.bbx_extension_block_begin <= l.bbx_extension_id.bbx_extension_block_begin) {
						j.insertBefore(a(this));
						n = true;
						return false
					}
				});
				n == false && j.appendTo(a(".secondaryExtList", c))
			} else j.appendTo(a(".secondaryExtList", c));
			f && f.readonly || j.contextMenu([{
				title: "Remove secondary extension",
				fn: function() {
					var l = a(this),
						o = l.data("eem");
					a.post("/cudatel/gui/configure/dynamic/secondary", {
						action: "remove_extension_entity_map",
						bbx_extension_entity_map_id: o.bbx_extension_entity_map_id,
						template: "json"
					}, function() {
						l.remove()
					})
				}
			}], {
				doubleClickFirst: false
			})
		},
		g = function(c, d, b, f) {
			var j = {
				action: "detail",
				template: "json"
			};
			j[d] = b;
			if(f.agent_access) j.bbx_extension_entity_map_metadata = "out";
			else if(d == "bbx_queue_id") j.bbx_extension_entity_map_metadata = "in";
			a.getJSON("/cudatel/gui/configure/dynamic/secondary", j, function(n) {
				n = n.data;
				var l = a(".secondaryExtForm", c);
				if(f && f.readonly) a(".secondaryExtForm", c).hide();
				else {
					a(".addExtension", l).extensionValidator({
						allow: f.allow || ["nextfree", "single", "block", "external"]
					});
					a(".secondaryExtForm", c).bind("valid", function() {
						a(".submitAddSecondary", c).removeAttr("disabled")
					}).bind("invalid", function() {
						a(".submitAddSecondary", c).attr("disabled", "disabled")
					});
					a(".secondary-hiddens", l).append('<input type="hidden" name="' + d + '" value="' + b + '" />');
					if(f.agent_access) a(".secondary-hiddens", l).append('<input type="hidden" name="bbx_extension_entity_map_metadata" value="out" />');
					else d == "bbx_queue_id" && a(".secondary-hiddens", l).append('<input type="hidden" name="bbx_extension_entity_map_metadata" value="in" />');
					l.bind("submit", function(q) {
						q.preventDefault();
						q = a(this).serialize();
						a.post("/cudatel/gui/configure/dynamic/secondary", q, function(v) {
							if(typeof v == "string") v = a.parseJSON(v).data;
							e(c, v, true, f)
						})
					})
				}
				for(var o in n) e(c, n[o], false, f)
			})
		};
	a.fn.secondaryExt = function(c, d, b) {
		b = b || {};
		elems = this;
		if(!(c && d)) {
			console_log("No object or object ID given to create secondary-editing UI", c, d);
			return elems
		}
		elems.each(function() {
			var f = a(this);
			a.getTemplate("/cudatel/ajax-html/secondary.html", function(j) {
				g(a(j).appendTo(f), c, d, b)
			})
		});
		return elems
	}
})(jQuery);
(function(a) {
	a("a.smListCatsItem").live("click", function(n) {
		n.preventDefault();
		n = a(this);
		n.blur();
		n.closest("ul").find("a.smListCatsItem").removeClass("active");
		n.addClass("active")
	});
	var e = {},
		g = {},
		c = false,
		d = function() {
			for(var n in g) {
				a.post("/cudatel/gui/freeswitch/cancel_record", {
					uuid: n,
					template: "json"
				});
				delete g[n];
				b()
			}
		},
		b = function() {
			for(var n in e) if(g[n]) {
				c || (c = showBlanker({
					spinner: true,
					icon: "/cudatel/images/recording_large.png",
					iconCSS: {
						width: "100px",
						height: "100px"
					},
					title: "Recording in Progress",
					text: "The automated assistant will phone you in a moment to assist you in recording the sound file",
					buttons: ["Cancel Recording"],
					callbacks: [d]
				}));
				return true
			}
			if(c) {
				c.trigger("closeBlanker");
				c = false
			}
			return false
		};
	a(window).bind("meteor_sound_recording", function(n, l) {
		if(l.json.start_recording) {
			e[l.json.uuid] = true;
			b()
		} else if(l.json.end_recording) {
			var o = l.json.uuid;
			delete e[o];
			a(window).trigger("recording_complete", {
				uuid: o
			});
			b()
		}
	});
	a(".smListSoundCats a.smListCatsItem").live("click", function() {
		var n = a(this),
			l = n.closest(".soundMusic"),
			o = n.data("bbx_sound_category"),
			q = a(".smMainContent", l);
		a(".smCategoryOptions", l).hide();
		var v = a(".soundCategoryOptions").show().data("bbx_sound_category", o).unbind("updateCategory").bind("updateCategory", function() {
			a.getREST("/cudatel/gui/sound/category", {
				bbx_sound_category_id: o.bbx_sound_category_id
			}, function(x) {
				if(x && x.category && x.category[0]) {
					x = x.category[0];
					n.data("bbx_sound_category", x).text(x.bbx_sound_category_name);
					n.trigger("click")
				}
			})
		});
		a(".catName", v).text(o.bbx_sound_category_name || "(Untitled)");
		q.unbind("refreshCategory").bind("refreshCategory", function(x) {
			x.stopPropagation();
			a.getREST("/cudatel/gui/sound/file", {
				bbx_sound_category_id: o.bbx_sound_category_id
			}, function(y) {
				y = y.file;
				q.empty();
				a.each(y, function() {
					var D = a(".template .soundItem", l).clone().appendTo(a(".smMainContent", l));
					D.data("bbx_sound", this);
					a(".soundFileName", D).text(this.bbx_sound_name).attr("title", this.bbx_sound_name);
					a(".soundPlayer", D).soundWidget("/cudatel/gui/sound_file/playback?bbx_sound_id=" + this.bbx_sound_id)
				});
				y.length || q.html('<div class="hasNone">Category has no sound files</div>')
			})
		}).trigger("refreshCategory")
	});
	a(".smListMohClasses a.smListCatsItem").live("click", function() {
		var n = a(this),
			l = n.closest(".soundMusic"),
			o = n.data("bbx_moh"),
			q = a(".smMainContent", l);
		a(".smCategoryOptions", l).hide();
		var v = a(".musicClassOptions").show().data("bbx_moh", o).unbind("updateCategory").bind("updateCategory", function() {
			a.getREST("/cudatel/gui/moh/class", {
				bbx_moh_id: o.bbx_moh_id
			}, function(x) {
				if(x && x["class"] && x["class"][0]) {
					x = x["class"][0];
					n.data("bbx_moh", x).text(x.bbx_moh_name);
					n.trigger("click")
				}
			})
		});
		a(".catName", v).text(o.bbx_moh_name || "(Untitled)");
		o.bbx_moh_system == "0" || !o.bbx_moh_system ? v.removeClass("system") : v.addClass("system");
		q.unbind("refreshCategory").bind("refreshCategory", function(x) {
			x.stopPropagation();
			a.getREST("/cudatel/gui/moh/file", {
				bbx_moh_id: o.bbx_moh_id
			}, function(y) {
				y = y.file;
				a(".smMainContent", l).empty();
				a.each(y, function() {
					var D = a(".template .musicItem", l).clone().appendTo(a(".smMainContent", l));
					D.data("bbx_moh_file", this);
					a(".musicFileName", D).text(this.bbx_moh_file_name).attr("title", this.bbx_moh_file_name);
					a(".soundPlayer", D).soundWidget("/cudatel/gui/moh_file/playback?bbx_moh_file_id=" + this.bbx_moh_file_id)
				});
				y.length || q.html('<div class="hasNone">Class has no music files</div>')
			})
		}).trigger("refreshCategory")
	});
	a(".soundItem .opDelete").live("click", function(n) {
		n.preventDefault();
		var l = a(this).closest(".soundItem"),
			o = l.data("bbx_sound");
		o && o.bbx_sound_id ? showBlanker({
			title: "Delete this sound?",
			text: "This operation cannot be undone.",
			buttons: ["Delete", "Cancel"],
			callbacks: [function() {
				a.deleteREST("/cudatel/gui/sound/file", {
					bbx_sound_id: o.bbx_sound_id
				}, {
					success: function() {
						l.remove()
					},
					error: function(q) {
						var v = false;
						try {
							v = JSON.parse(q.responseText).error
						} catch(x) {}
						v && v.bbx_sound_id ? showError(v.bbx_sound_id) : showError("There was an internal error deleting the sound")
					}
				});
				blankerCancel.call(this)
			},
			blankerCancel]
		}) : console_log("DOM element had no attached bbx_sound_id: ", o)
	});
	a(".musicItem .opDelete").live("click", function(n) {
		n.preventDefault();
		var l = a(this).closest(".musicItem"),
			o = l.data("bbx_moh_file");
		o && o.bbx_moh_file_id ? showBlanker({
			title: "Delete this music file?",
			text: "This operation cannot be undone.",
			buttons: ["Delete", "Cancel"],
			callbacks: [function() {
				a.deleteREST("/cudatel/gui/moh/file", {
					bbx_moh_file_id: o.bbx_moh_file_id
				}, function() {
					l.remove()
				});
				blankerCancel.call(this)
			},
			blankerCancel]
		}) : console_log("DOM element had no attached bbx_moh_file_id: ", o)
	});
	a(".musicItem .opRename, .soundItem .opRename").live("click", function(n) {
		n.preventDefault();
		var l = a(this).closest(".musicItem, .soundItem");
		a(".smItemName", l).hide();
		n = a(".smItemRename", l).show();
		var o = a("input[type=text]", n);
		if(l.data("bbx_moh_file")) {
			var q = l.data("bbx_moh_file");
			o.val(q.bbx_moh_file_name).focus().bind("blur", function() {
				a.putREST("/cudatel/gui/moh/file", {
					bbx_moh_file_name: o.val(),
					bbx_moh_file_id: q.bbx_moh_file_id
				}, function() {
					l.trigger("refreshCategory")
				})
			})
		} else if(l.data("bbx_sound")) {
			var v = l.data("bbx_sound");
			o.val(v.bbx_sound_name).focus().bind("blur", function() {
				a.putREST("/cudatel/gui/sound/file", {
					bbx_sound_name: o.val(),
					bbx_sound_id: v.bbx_sound_id
				}, function() {
					l.trigger("refreshCategory")
				})
			})
		}
	});
	a(".smCategoryOptions .opUpload").live("click", function(n) {
		n.preventDefault();
		n = a(this).closest(".smContent").find(".smMainContent");
		if(!a(".smUpload", n)[0]) {
			a(".smRecord", n)[0] && a(".smRecord", n).remove();
			var l = a(this).closest(".soundMusic").find(".template .smUpload").clone().prependTo(n);
			n = a("form", l);
			var o = a(this).closest(".smCategoryOptions"),
				q, v;
			if(= a(this),
			l = n.closest(".soundMusic"),
			o = n.data("bbx_moh"),
			q = a(".smMainContent", l);
		a(".smCategoryOptions", l).hide();
		var v = a(".musicClassOptions").show().data("bbx_moh", o).unbind("updateCategory").bind("updateCategory", function() {
			a.getREST("/cudatel/gui/moh/class", {
				bbx_moh_id: o.bbx_moh_id
			}, function(x) {
				if(x && x["class"] && x["class"][0]) {
					x = x["class"][0];
					n.data("bbx_moh", x).text(x.bbx_moh_name);
					n.trigger("click")
				}
			})
		});
		a(".catName", v).text(o.bbx_moh_name || "(Untitled)");
		o.bbx_moh_system == "0" || !o.bbx_moh_system ? v.removeClass("system") : v.addClass("system");
		q.unbind("refreshCategory").bind("refreshCategory", function(x) {
			x.stopPropagation();
			a.getREST("/cudatel/gui/moh/file", {
				bbx_moh_id: o.bbx_moh_id
			}, function(y) {
				y = y.file;
				a(".smMainContent", l).empty();
				a.each(y, function() {
					var D = a(".template .musicItem", l).clone().appendTo(a(".smMainContent", l));
					D.data("bbx_moh_file", this);
					a(".musicFileName", D).text(this.bbx_moh_file_name).attr("title", this.bbx_moh_file_name);
					a(".soundPlayer", D).soundWidget("/cudatel/gui/moh_file/playback?bbx_moh_file_id=" + this.bbx_moh_file_id)
				});
				y.length || q.html('<div class="hasNone">Class has no music files</div>')
			})
		}).trigger("refreshCategory")
	});
	a(".soundItem .opDelete").live("click", function(n) {
		n.preventDefault();
		var l = a(this).closest(".soundItem"),
			o = l.data("bbx_sound");
		o && o.bbx_sound_id ? showBlanker({
			title: "Delete this sound?",
			text: "This operation cannot be undone.",
			buttons: ["Delete", "Cancel"],
			callbacks: [function() {
				a.deleteREST("/cudatel/gui/sound/file", {
					bbx_sound_id: o.bbx_sound_id
				}, {
					success: function() {
						l.remove()
					},
					error: function(q) {
						var v = false;
						try {
							v = JSON.parse(q.responseText).error
						} catch(x) {}
						v && v.bbx_sound_id ? showError(v.bbx_sound_id) : showError("There was an internal error deleting the sound")
					}
				});
				blankerCancel.call(this)
			},
			blankerCancel]
		}) : console_log("DOM element had no attached bbx_sound_id: ", o)
	});
	a(".musicItem .opDelete").live("click", function(n) {
		n.preventDefault();
		var l = a(this).closest(".musicItem"),
			o = l.data("bbx_moh_file");
		o && o.bbx_moh_file_id ? showBlanker({
			title: "Delete this music file?",
			text: "This operation cannot be undone.",
			buttons: ["Delete", "Cancel"],
			callbacks: [function() {
				a.deleteREST("/cudatel/gui/moh/file", {
					bbx_moh_file_id: o.bbx_moh_file_id
				}, function() {
					l.remove()
				});
				blankerCancel.call(this)
			},
			blankerCancel]
		}) : console_log("DOM element had no attached bbx_moh_file_id: ", o)
	});
	a(".musicItem .opRename, .soundItem .opRename").live("click", function(n) {
		n.preventDefault();
		var l = a(this).closest(".musicItem, .soundItem");
		a(".smItemName", l).hide();
		n = a(".smItemRename", l).show();
		var o = a("input[type=text]", n);
		if(l.data("bbx_moh_file")) {
			var q = l.data("bbx_moh_file");
			o.val(q.bbx_moh_file_name).focus().bind("blur", function() {
				a.putREST("/cudatel/gui/moh/file", {
					bbx_moh_file_name: o.val(),
					bbx_moh_file_id: q.bbx_moh_file_id
				}, function() {
					l.trigger("refreshCategory")
				})
			})
		} else if(l.data("bbx_sound")) {
			var v = l.data("bbx_sound");
			o.val(v.bbx_sound_name).focus().bind("blur", function() {
				a.putREST("/cudatel/gui/sound/file", {
					bbx_sound_name: o.val(),
					bbx_sound_id: v.bbx_sound_id
				}, function() {
					l.trigger("refreshCategory")
				})
			})
		}
	});
	a(".smCategoryOptions .opUpload").live("click", function(n) {
		n.preventDefault();
		n = a(this).closest(".smContent").find(".smMainContent");
		if(!a(".smUpload", n)[0]) {
			a(".smRecord", n)[0] && a(".smRecord", n).remove();
			var l = a(this).closest(".soundMusic").find(".template .smUpload").clone().prependTo(n);
			n = a("form", l);
			var o = a(this).closest(".smCategoryOptions"),
				q, v;
			if(hClasses").find("li > a").filter(function() {
						return a(this).data("bbx_moh").bbx_moh_id == o.bbx_moh_id
					}),
						v = q.closest("li").next("li");
					v[0] || (v = q.closest("li").prev("li"));
					q.closest("li").remove();
					a("a", v).trigger("click")
				});
				blankerCancel.call(this)
			},
			blankerCancel]
		}) : console_log("DOM element had no attached bbx_moh_id: ", o)
	});
	a(".soundCategoryOptions .opDelete").live("click", function(n) {
		n.preventDefault();
		var l = a(this).closest(".soundCategoryOptions"),
			o = l.data("bbx_sound_category");
		o && o.bbx_sound_category_id ? showBlanker({
			title: "Delete this sound category?",
			text: "This will also delete the sound files. This operation cannot be undone.",
			buttons: ["Delete", "Cancel"],
			callbacks: [function() {
				a.deleteREST("/cudatel/gui/sound/category", {
					bbx_sound_category_id: o.bbx_sound_category_id
				}, function() {
					var q = l.closest(".soundMusic").find(".smListSoundCats").find("li > a").filter(function() {
						return a(this).data("bbx_sound_category").bbx_sound_category_id == o.bbx_sound_category_id
					}),
						v = q.closest("li").next("li");
					v[0] || (v = q.closest("li").prev("li:not(.smNewSoundCat)"));
					q.closest("li").remove();
					v[0] ? a("a", v).trigger("click") : l.closest(".soundMusic").find(".smTabSound").trigger("click")
				});
				blankerCancel.call(this)
			},
			blankerCancel]
		}) : console_log("DOM element had no attached bbx_sound_category_id: ", o)
	});
	a(".soundItem .opMove, .musicItem .opMove").live("click", function(n) {
		n.preventDefault();
		n = a(this).closest(".smItem");
		var l = a(".mover", n),
			o;
		if(n.data("bbx_moh_file")) o = n.data("bbx_moh_file").bbx_moh_file_name;
		else if(n.data("bbx_sound")) o = n.data("bbx_sound").bbx_sound_name;
		l.show().find(".opCancelMove").one("click", function(q) {
			q.preventDefault();
			l.hide()
		});
		l.draggable({
			helper: function() {
				return a(sprintf('<div class="dragSound"><img src="/cudatel/images/sound_button.png" width="30" height="20" /><br />%s</div>', o))
			},
			cursorAt: {
				top: 0,
				left: 0
			}
		})
	});
	var f = function(n) {
			n.droppable({
				tolerance: "pointer",
				drop: function(l, o) {
					var q = o.draggable.closest(".soundItem, .musicItem"),
						v = a(this);
					if(q.data("bbx_moh_file")) {
						var x = q.data("bbx_moh_file"),
							y = v.data("bbx_moh");
						a.putREST("/cudatel/gui/moh/file", {
							bbx_moh_id: y.bbx_moh_id,
							bbx_moh_file_id: x.bbx_moh_file_id
						}, function() {
							q.find(".mover").hide();
							v.trigger("click")
						})
					} else if(q.data("bbx_sound")) {
						x = q.data("bbx_sound");
						y = v.data("bbx_sound_category");
						a.putREST("/cudatel/gui/sound/file", {
							bbx_sound_category_id: y.bbx_sound_category_id,
							bbx_sound_id: x.bbx_sound_id
						}, function() {
							q.find(".mover").hide();
							v.trigger("click")
						})
					}
				},
				hoverClass: "dropActive"
			})
		},
		j = function(n) {
			var l = "jContext" + Math.floor(Math.random() * 1E5);
			a(window).debounce("resize." + l, function() {
				var o = a(".smCategories", n);
				if(n.closest("body")[0]) {
					var q = a(window).height() - o.offset().top;
					o.css("min-height", q + "px")
				} else a(window).unbind("resize." + l)
			}).trigger("resize");
			a(".smTabSound, .smTabMusic", n).bind("click", function(o) {
				o.preventDefault();
				o = a(this);
				a("a", o.closest("ul")).removeClass("active");
				o.addClass("active");
				o.blur()
			});
			a(".smTabSound", n).bind("click", function() {
				var o = a(".smList", n).empty(),
					q = a(".template > .smListSoundCats", n).clone().appendTo(o),
					v = function(x) {
						return sprintf('<li><a href="#" class="smListCatsItem">%s</a></li>', x.replace(/[<>]/g, "") || "(Untitled)")
					};
				a.getREST("/cudatel/gui/sound/category", {}, function(x) {
					a(".opNewSoundCategory", q).bind("click", function(D) {
						D.preventDefault();
						var B = a(".smNew > input[type=text]", q);
						B.val("");
						a(".smNew", q).show();
						B.focus();
						B.unbind("blur").unbind("keyup").bind("blur", function() {
							B.val() ? a.postREST("/cudatel/gui/sound/category", {
								bbx_sound_category_name: B.val()
							}, function(u) {
								a(".smNew", q).hide();
								u = u.category;
								var F = a(v(u.bbx_sound_category_name)).insertAfter(a(".smNew", q));
								a(".smListCatsItem", F).data("bbx_sound_category", u);
								f(a(".smListCatsItem", F))
							}) : a(".smNew", q).hide();
							B.val("")
						}).bind("keyup", function(u) {
							u.which === a.ui.keyCode.ENTER && a(this).triggerHandler("blur")
						})
					});
					x = x.category;
					a.each(x, function() {
						var D = a(v(this.bbx_sound_category_name)).appendTo(a(".smListCats", q));
						a(".smListCatsItem", D).data("bbx_sound_category", this)
					});
					if(!x || !x.length) {
						x = o.closest(".smContent");
						var y = x.find(".smMainContent");
						x.find(".smCategoryOptions").hide();
						y.empty().html('<div class="hasNone">No sound categories are configured</div>')
					}
					f(a(".smListCatsItem", q));
					a(".smListCatsItem:eq(0)", q).click()
				})
			});
			a(".smTabMusic", n).bind("click", function() {
				var o = a(".smList", n).empty(),
					q = a(".template > .smListMohClasses", n).clone().appendTo(o);
				a.getREST("/cudatel/gui/moh/class", {
					bbx_moh_hidden: 0
				}, function(v) {
					a(".opNewMohClass", q).bind("click", function(x) {
						x.preventDefault();
						var y = a(".smNew > input[type=text]", q);
						y.val("");
						a(".smNew", q).show();
						y.focus();
						y.unbind("blur").unbind("keyup").bind("blur", function() {
							y.val() ? a.postREST("/cudatel/gui/moh/class", {
								bbx_moh_name: y.val()
							}, function(D) {
								a(".smNew", q).hide();
								D = D["class"];
								var B = a(sprintf('<li><a href="#" class="smListCatsItem">%s</a></li>', D.bbx_moh_name.replace(/[<>]/g, "") || "(Untitled)")).insertAfter(a(".smNew", q));
								a(".smListCatsItem", B).data("bbx_moh", D);
								f(a(".smListCatsItem", B))
							}) : a(".smNew", q).hide();
							y.val("")
						}).bind("keyup", function(D) {
							D.which === a.ui.keyCode.ENTER && a(this).triggerHandler("blur")
						})
					});
					a.each(v["class"], function() {
						var x = a(sprintf('<li><a href="#" class="smListCatsItem">%s</a></li>', this.bbx_moh_name.replace(/[<>]/g, "") || "(Untitled)")).appendTo(a(".smListCats", q));
						a(".smListCatsItem", x).data("bbx_moh", this)
					});
					f(a(".smListCatsItem", q));
					a(".smListCatsItem:eq(0)", q).click()
				})
			});
			a(".tabs > li:eq(0) > a").click()
		};
	a.fn.soundMusicScreen = function() {
		elems = this;
		a.getTemplate("/cudatel/ajax-html/soundMusic.html", function(n) {
			elems.each(function() {
				var l = a(n).appendTo(a(this));
				j(l)
			})
		});
		return elems
	}
})(jQuery);
(function(a) {
	a.fn.soundPicker = function(e, g) {
		var c = this,
			d = {
				disable: function() {
					var f = c.data("soundPicker") || {};
					f.disabled = true;
					c.data("soundPicker", f);
					a("select", c).disable("wdisable")
				},
				enable: function() {
					var f = c.data("soundPicker") || {};
					f.disabled = false;
					c.data("soundPicker", f);
					a("select", c).enable("wdisable")
				}
			};
		if(typeof e === "string" && d[e]) {
			d[e]();
			return this
		} else g = e || {};
		g = a.extend({
			name: "bbx_sound_id",
			allowNone: false
		}, g);
		var b = g.bbx_sound_id;
		a.getJSONCached("/cudatel/gui/sound/category_populated", {
			"content-type": "application/json",
			_sortby: "bbx_sound_category_name",
			_sortorder: "asc"
		}, 3E3, function(f) {
			var j = f.category_populated,
				n = {};
			a.each(f.category_populated, function(l, o) {
				n[o.bbx_sound_category_id] = o
			});
			c.each(function() {
				var l = a(this),
					o = a('<span class="staticBody soundPicker"></span>');
				if(g.allowNone || j && j.length) {
					var q = a('<select class="soundPickerCategory"></select>').appendTo(o),
						v = false;
					g.allowNone && q.append('<option class="categoryNone" value="">(None)</option>');
					a.each(j, function(x, y) {
						$catOpt = a("<option></option>").val(y.bbx_sound_category_id).text(y.bbx_sound_category_name || "(Untitled)").appendTo(q);
						g.bbx_sound_id && !v && a.each(y.bbx_sound_ids, function(D, B) {
							if(parseInt(B.bbx_sound_id || 0, 10) === parseInt(g.bbx_sound_id || 0, 10)) {
								v = y.bbx_sound_category_id;
								return false
							}
						})
					});
					q.bind("change keyup", function() {
						var x = q.val();
						if(q.data("was") !== x) {
							q.data("was", x);
							a(".selSoundFile", o).remove();
							if(x && n[x]) {
								var y = a('<select class="selSoundFile"></select>').attr("name", g.name);
								a.each(n[x].bbx_sound_ids, function(D, B) {
									a("<option></option>").val(B.bbx_sound_id).text(B.bbx_sound_name).appendTo(y)
								});
								y.bind("change keyup", function() {
									var D = y.val();
									if(y.data("was") !== D) {
										y.data("was", D);
										a(".soundPickerPlayer", o).remove();
										D && a('<span class="soundPickerPlayer"></span>').appendTo(o).miniSoundWidget("/cudatel/gui/sound_file/playback?bbx_sound_id=" + D)
									}
								});
								if(b) {
									y.val(b);
									b = false
								}
								y.appendTo(o).trigger("change")
							} else a('<select class="selSoundFile"><option class="optNoSoundFile" value="">(None)</option></select>').attr("name", g.name).appendTo(o)
						}
					});
					v && q.val(v);
					q.triggerHandler("change")
				} else {
					o.html('<span class="soundPickerNoSounds">(No Sounds Installed)</span>');
					l.trigger("noSounds noSoundSelected")
				}
				l.empty().append(o);
				typeof g.ready === "function" && g.ready()
			})
		});
		this.data("soundPicker", g);
		return this
	}
})(jQuery);
(function(a) {
	a.fn.mohPicker = function(e) {
		e = e || {};
		this.each(function() {
			var g = a('<span class="mohPicker fmWidget"></span>').appendTo(this),
				c = a(sprintf('<select name="%s" class="mohPickerSelect"></select>', e.name || "bbx_moh_id")).appendTo(g),
				d = e.bbx_moh_id || c.data("originalValue") || 1;
			e.id && c.attr("id", e.id);
			a.getJSONCached("/cudatel/gui/moh/class", {
				"content-type": "application/json",
				_sortby: "bbx_moh_name",
				_sortorder: "asc"
			}, 3E3, function(b) {
				b = b["class"];
				var f = a(".mohPickerSelect", g);
				a.each(b, function() {
					var j = "";
					if(d == this.bbx_moh_id) j = ' selected="selected"';
					if(this.bbx_moh_system) {
						j = a(sprintf('<option value="%s"%s>%s</option>', this.bbx_moh_id, j, this.bbx_moh_name.replace(/[<>]/g, "")));
						a(".sys", f)[0] ? j.insertAfter(a(".sys:last", f)) : f.prepend(j)
					} else a(sprintf('<option value="%s"%s>%s</option>', this.bbx_moh_id, j, this.bbx_moh_name.replace(/[<>]/g, ""))).appendTo(f)
				});
				if(a.browser.msie) {
					f.css("width", "200px");
					f.css("width", "auto");
					f.show()
				}
				f.trigger("mohPickerBuilt")
			})
		});
		return this
	}
})(jQuery);
$(window).bind("meteor_all", function(a, e) {
	try {
		var g = e.json;
		if(e.json) g = e.json;
		g.restart && showRestartBlanker(g.title, g.message);
		if(g.errorText) {
			errorPriority = g.errorPriority ? g.errorPriority : 0;
			showError(g.errorText, errorPriority)
		}
		var c = 0;
		if(g.displayPriority) c = g.displayPriority;
		if(c < 2) g.displayText && popupMessage(g.displayText, c);
		else if(c == 2) showBlanker({
			title: g.displayTitle || "Warning",
			text: g.displayText
		});
		else c == 3 && showError(g.displayText, 0)
	} catch(d) {}
});
$(window).bind("meteor_restore", function(a, e) {
	if(e.json.status == "running") showRestoreBlanker(e.json.text);
	else if(e.json.status == "failed") {
		showRestoreBlanker("Restore failed: " + e.json.text);
		setTimeout(hideRestoreBlanker, 3E3)
	} else if(e.json.status == "success") {
		showRestoreBlanker("Restore Successful");
		setTimeout(hideRestoreBlanker, 3E3)
	}
});

function getMessageCache(a, e) {
	a && e && $.ajax({
		url: "/cudatel/gui/jsoncache/cache?channel=" + e,
		accept: "application/json",
		dataType: "json",
		success: function(g) {
			$(window).trigger("meteor_" + a, {
				json: g
			})
		},
		error: function() {}
	})
};
(function(a) {
	var e = function(g, c, d) {
			var b = a(".template", g),
				f = a(".staticBody", g),
				j = a(".agentList", f),
				n = function() {
					a.getREST("/cudatel/gui/queue2/agent", {
						bbx_queue_id: c.bbx_queue_id
					}, function(F) {
						F = F.agent;
						j.empty();
						F.length || j.html('<div class="hasNone">This queue has no agents</div>');
						a.each(F, function() {
							a(sprintf('<div class="agentItem"><span class="number">%s</span> - <span class="name">%s</span></div>', this.bbx_extension_value, this.show_name)).data("bbx_queue_extension_map_id", this.bbx_queue_extension_map_id).appendTo(j).contextMenu([{
								title: "Remove Agent Extension",
								fn: function() {
									var I = this,
										C = a(this).data("bbx_queue_extension_map_id");
									a.deleteREST("/cudatel/gui/queue2/agent", {
										bbx_queue_extension_map_id: C
									}, function() {
										a(I).remove()
									})
								}
							}], {
								doubleClickFirst: false
							})
						})
					})
				};
			n();
			var l = a(".addAgentForm", f);
			a(".addAgentInput", l).extensionPicker({
				searchTypes: ["user"],
				hidden: a(".addAgentHidden", l),
				hiddenFormat: "bbx_extension_id",
				textFormat: "number",
				autoSelectFirst: true
			}).bind("selection", function() {
				var F = a(".addAgentHidden", l).val();
				a(".addAgentHidden, .addAgentInput", l).val("");
				F && a.postREST("/cudatel/gui/queue2/agent", {
					bbx_extension_id: F,
					bbx_queue_id: c.bbx_queue_id
				}, function() {
					n()
				})
			});
			a(".mohForm > .mohPicker", f).mohPicker({
				bbx_moh_id: c.bbx_moh_id
			});
			a(".chimeFreq", f).val(c.bbx_queue_chime_freq);
			var o = a(".chimeList", f),
				q = function() {
					a.getREST("/cudatel/gui/queue2/chime", {
						bbx_queue_id: c.bbx_queue_id
					}, function(F) {
						F = F.chime;
						o.empty();
						F = F.sort(function(I, C) {
							return cmp(I.bbx_queue_chime_map_order, C.bbx_queue_chime_map_order)
						});
						a(".noChimes", f).remove();
						F.length ? a.each(F, function() {
							var I = a(".chimeItem", b).clone().data("bbx_queue_chime_map", this);
							a(".soundName", I).text(this.bbx_sound_id.bbx_sound_name);
							I.appendTo(o);
							a(".chimePlayer", I).miniSoundWidget("/cudatel/gui/sound_file/playback?bbx_sound_id=" + this.bbx_sound_id.bbx_sound_id)
						}) : a(".noChimes", b).clone().appendTo(a(".chimeList", f));
						if(o.closest(".onlyIfFullEdit")[0] && !d.hasEditPermission) {
							a("a", o).hide();
							a("a, input, select", o).unbind("click change").bind("click", function(I) {
								I.preventDefault()
							})
						}
					})
				};
			a("a.opDeleteChime", o[0]).live("click", function(F) {
				F.preventDefault();
				var I = a(this).closest(".chimeItem");
				F = I.data("bbx_queue_chime_map");
				a.deleteREST("/cudatel/gui/queue2/chime", {
					bbx_queue_chime_map_id: F.bbx_queue_chime_map_id
				}, {
					success: function() {
						I.remove();
						var C = a(".chimeList", f);
						a(".chimeItem", C)[0] || a(".noChimes", b).clone().appendTo(C)
					},
					error: function() {
						showError("Internal error deleting the announcement");
						q()
					}
				})
			});
			q();
			o.sortable({
				handle: ".grippy",
				stop: function() {
					var F = [];
					a(".chimeList > .chimeItem", f).each(function() {
						F.push(a(this).data("bbx_queue_chime_map").bbx_queue_chime_map_id)
					});
					a.putREST("/cudatel/gui/queue2/chime_order", {
						bbx_queue_id: c.bbx_queue_id,
						bbx_queue_chime_map_id: F
					}, {
						error: function() {
							showError("Could not re-arrange the announcement order: announcements may have changed. Please try again.");
							q()
						}
					})
				}
			});
			a("a.opAddChime", f).bind("click", function(F) {
				F.preventDefault();
				F = a(".newChime", f);
				if(!F.is("visible")) {
					a(".newChimePicker", F).text("Loading...");
					a(".newChimePicker", F).soundPicker({
						name: "bbx_sound_id",
						allowNone: false
					});
					F.show()
				}
			});
			a("a.newChimeApply", f).bind("click", function(F) {
				F.preventDefault();
				F = a(this).closest(".newChime");
				var I = a("[name=bbx_sound_id]", F).val();
				F.hide();
				a.postREST("/cudatel/gui/queue2/chime", {
					bbx_queue_id: c.bbx_queue_id,
					bbx_sound_id: I
				}, {
					complete: function() {
						q()
					}
				})
			});
			a(".ringTime", f).val(c.bbx_queue_ring_timeout || "").mask("?9999999999", {
				placeholder: ""
			});
			var v = c.params.orbit_exten_timeout;
			g = c.params.orbit_exten_id;
			var x = {
				searchTypes: ["bbx_user_id", "bbx_group_id", "bbx_queue_id", "bbx_conference_id", "bbx_auto_attendant_id", "bbx_router_id", "unassignedphone"],
				hidden: a(".orbitDestHidden", f),
				hiddenFormat: "bbx_extension_id",
				textFormat: "number",
				mustValidate: true,
				autoSelectFirst: true
			};
			if(v && g) x.initialSearch = {
				bbx_extension_id: g
			};
			a(".orbitDest", f).extensionPicker(x);
			var y = 1;
			if(v) {
				a(".orbitMultiplier > option", f).each(function() {
					v % a(this).val() || (y = a(this).val())
				});
				a(".orbitMultiplier", f).val(y);
				a(".orbitTimeout", f).val(v / y)
			}
			a(".orbitForm .opClearSubmit", f).bind("click", function(F) {
				F.preventDefault();
				a.deleteREST("/cudatel/gui/queue2/queue_orbit", {
					bbx_queue_id: c.bbx_queue_id
				}, function() {
					a(".orbitDestHidden, .orbitDest, .orbitTimeout", f).val("")
				})
			});
			a(".orbitForm", f).bind("autoSubmitSuccess", function(F, I) {
				if(I && !I.result) {
					var C = a(this).find(".orbitDest"),
						M = a(this).find(".orbitTimeout");
					C.val() == "" ? C.markInvalid("No extension selected") : C.clearInvalid();
					M.val() == "" ? M.markInvalid("No timeout specified") : M.clearInvalid()
				} else a("input", a(this)).clearInvalid()
			});
			if(c.params.record_calls) {
				g = a("input[name=record_calls]", f).attr("checked", true);
				var D = a("input[name=record_keep_days]", f);
				D.val(c.params.record_keep_days || "");
				D.add(g).bind("change", function() {
					var F = D.val();
					if(!parseInt(F, 10) || isNaN(parseInt(F, 10)) && a("input[name=record_calls]", f).is(":checked")) D.val("7").qtipMessage({
						style: "notice",
						message: "Default value inserted"
					})
				});
				a("input[name=recording-mailto]", f).val(c.params["recording-mailto"])
			}
			a(".outboundPerCycle", f).val(c.outbound_per_cycle);
			var B = ["Not Set", "Highest", "High", "High", "Medium", "Default", "Medium", "Low", "Low", "Low", "Lowest"];
			g = c.outbound_priority || 5;
			a(".prioritySliderValue", f).text(g + " (" + B[g] + ")");
			a(".outboundPriority", f).val(g);
			a(".prioritySlider", f).slider({
				min: 1,
				max: 10,
				value: c.outbound_priority,
				slide: function(F, I) {
					a(".prioritySliderValue", f).text(I.value + " (" + B[I.value] + ")")
				},
				change: function(F, I) {
					a(".outboundPriority", f).val(I.value);
					a(".outboundPriority", f).trigger("change")
				}
			});
			a(".warningSeconds", f).val(c.bbx_queue_warning_seconds);
			a(".warningCalls", f).val(c.bbx_queue_warning_calls);
			a(".criticalSeconds", f).val(c.bbx_queue_critical_seconds);
			a(".criticalCalls", f).val(c.bbx_queue_critical_calls);
			a(".outboundName", f).val(c.outbound_name);
			a(".popupURL", f).val(c.bbx_queue_popup_url);
			a(".secondary", f).secondaryExt("bbx_queue_id", c.bbx_queue_id, {
				readonly: !d.hasEditPermission
			});
			a(".aa", f).secondaryExt("bbx_queue_id", c.bbx_queue_id, {
				agent_access: true,
				readonly: !d.hasEditPermission
			});
			if(!d.hasEditPermission) {
				g = a(".onlyIfFullEdit", f);
				a("input, select", g).attr("disabled", "disabled");
				a(".ui-sortable", g).sortable("disable");
				a(".ui-slider", g).slider("disable");
				a("a", g).hide();
				a("a, input, select", g).unbind("click change").bind("click", function(F) {
					F.preventDefault()
				})
			}
			a("input[value={bbx_queue_id}]", f).val(c.bbx_queue_id);
			var u = a("[name=bbx_queue_popup_url]", f);
			u.data("autoSubmitBeforeSerialize", function() {
				var F = u.val();
				F = F.replace(/^ +/, "").replace(/ +$/, "");
				var I = F.match(/^([^ ]+) +(.+)/);
				if(I && !I[2].match(/^[-a-zA-Z]+:\/\//)) u.val(I[1] + " http://" + I[2]);
				else !I && F && !F.match(/^[-a-zA-Z]+:\/\//) && u.val("http://" + F)
			})
		};
	a.fn.queueDetail = function(g, c) {
		var d = this;
		c = c || {};
		a.getTemplate("/cudatel/ajax-html/queue_detail.html", function(b) {
			var f = function(j, n) {
					d.each(function() {
						var l = a(b).replaceAll(this);
						n = n || {};
						e(l, j, n)
					})
				};
			if(typeof g == "object") if(g.jsQueue) g = g.jsQueue.bbx_queue_id;
			else if(g.bbx_queue_id) g = g.bbx_queue_id;
			a.getREST("/cudatel/gui/queue2/queue", {
				bbx_queue_id: g
			}, function(j) {
				a.getREST("/cudatel/gui/queue2/param", {
					bbx_queue_id: g
				}, function(n) {
					a.getREST("/cudatel/gui/permission/check", {
						bbx_permission_name: "EDIT_QUEUE"
					}, function(l) {
						var o = j.queue[0];
						o.params = n.param;
						c.hasEditPermission = l.self.EDIT_QUEUE ? true : false;
						f(o, c)
					})
				})
			})
		})
	}
})(jQuery);
(function(a) {
	var e = function(g, c, d) {
			var b = c.registrations,
				f = c.group,
				j = a(".staticBody", g);
			c = a(".template", g);
			var n = a(".switchboardUL", j),
				l = [],
				o = {},
				q = {};
			f ? a(".filterDescription", j).text("Filtered by Group: " + f).show() : a(".filterDescription", j).hide();
			d.popupLink ? a(".opPopup", j).show().bind("click", function(u) {
				u.preventDefault();
				windowOpen({
					preset: "fullscreen",
					url: d.popupLink + (d.bbx_group_id ? "#bbx_group_id=" + d.bbx_group_id : "")
				})
			}) : a(".opPopup", j).hide();
			a(".groupFilterText", j).extensionPicker({
				hidden: a(".groupFilterHidden", j).eq(0),
				hiddenFormat: "object_id",
				searchTypes: ["group"],
				textFormat: "number",
				autoSelectFirst: true
			}).bind("selection", function() {
				a(".applyFilterButton").attr("disabled", "")
			}).bind("noselection", function() {
				a(".applyFilterButton").attr("disabled", "disabled")
			});
			a(".applyFilterButton").bind("click", function() {
				d.bbx_group_id = a(".groupFilterHidden").val();
				setHashParam("oncallfilter", d.bbx_group_id);
				g.empty().peopleOnCall(d)
			}).attr("disabled", "disabled");
			a(".clearFilterButton").bind("click", function() {
				delete d.bbx_group_id;
				g.empty().peopleOnCall(d)
			});
			for(var v in b) l.push({
				number: v,
				registrations: b[v]
			});
			l = l.sort(function(u, F) {
				return u.number < F.number ? -1 : u.number > F.number ? 1 : 0
			});
			f = 0;
			for(v in l) {
				j = a(".switchboardExt", c).clone();
				var x = l[v].registrations,
					y = l[v].registrations[0];
				j.data("registration", b[v]);
				a(".name", j).text(y.show_name || "\u00a0");
				a(".number", j).text(format_information(l[v].number) || "\u00a0");
				for(var D in x) {
					y = x[D];
					q[y.bbx_phone_registration_id] = j;
					if(y.uuid) {
						o[y.uuid] = j;
						j.addClass("oncall")
					}
				}
				j.appendTo(n);
				j = j.height();
				if(j > f) f = j
			}
			a(".switchboardExt", n).height(f + "px");
			Ape.subscribe("call_event");
			var B = "rns" + Math.floor(Math.random() * 1E6);
			a(window).bind("meteor_call_event." + B, function(u, F) {
				if(g.closest("body")[0]) switch(F.json.call_event) {
				case "channel_answer":
				case "channel_create":
					var I = q[F.json.bbx_phone_registration_id];
					if(I) {
						o[F.json.uuid] = I;
						var C = I.data("channels") || {};
						C[F.json.uuid] = true;
						I.data("channels", C);
						I.addClass("oncall")
					}
					break;
				case "channel_destroy":
					I = o[F.json.uuid];
					if(!I) break;
					C = I.data("channels") || {};
					C[F.json.uuid] && delete C[F.json.uuid];
					I.data("channels", C);
					I && a.isEmptyObject(C) && I.removeClass("oncall");
					delete o[F.json.uuid]
				} else a(window).unbind("meteor_call_event." + B)
			})
		};
	a.fn.peopleOnCall = function(g) {
		var c = this;
		g = g || {};
		a.getTemplate("/cudatel/ajax-html/wallboard/oncall.html", function(d) {
			var b = {};
			if(g.bbx_group_id) b.bbx_group_id = g.bbx_group_id;
			a.getREST("/cudatel/gui/switchboard/registrations", b, function(f) {
				c.each(function() {
					var j = a(d).replaceAll(this);
					e(j, f, g)
				})
			})
		})
	}
})(jQuery);
(function(a) {
	var e = function(g, c) {
			c.name && a(".name", g).text(c.name);
			c.number && a(".extension", g).text(format_information(c.number));
			if(!c.number || !c.name) a(".extNameSep", g).remove();
			var d = {},
				b;
			for(b in c.buttons) d[c.buttons[b]] = true;
			a(".edmOps > a", g).hide();
			d.rename ? a(".opRename", g).show().bind("click", function(f) {
				f.preventDefault();
				var j = showPopup("extension_rename", {}, true);
				j.one("popup_ready", function() {
					var n = a(".newNameInput", j),
						l = a(".popupSubmitButton", j);
					n.val(c.name);
					a(".oldName", j).text(c.name);
					n.bind("change keyup input", function() {
						var o = n.val();
						!o || 0 === o.length ? l.disable("novalue") : l.enable("novalue")
					});
					a("form", j).bind("submit", function(o) {
						o.preventDefault();
						o = {};
						o[c.prefix + "_id"] = c[c.prefix + "_id"];
						o[c.name_param || c.prefix + "_name"] = n.val();
						a.putREST(c.restURL, o, function(q) {
							var v, x;
							for(x in q) if(x != "error" && q[x][c.prefix + "_id"]) {
								v = q[x];
								break
							}
							q = v[c.name_param || c.prefix + "_name"];
							a(".name", g).text(q);
							c.name = q;
							j.trigger("close_request")
						})
					})
				})
			}) : a(".opRename", g).remove();
			d.migrate && c.bbx_extension_id ? a(".opMigrate", g).show().bind("click", function(f) {
				f.preventDefault();
				var j = showPopup("extension_migrate", {}, true);
				j.bind("popup_ready", function() {
					j.bind("close_request", function() {
						g.trigger("refreshDetail")
					});
					a(".newNameInput", j).val(c.name);
					a(".migrateExtensionPicker", j).bind("valid", function() {
						j.find("button[type=submit]").enable("extension_ok")
					}).bind("invalid", function() {
						j.find("button[type=submit]").disable("extension_ok")
					}).extensionValidator({
						allow: ["nextfree", "single"]
					});
					a("form", j).bind("submit", function(n) {
						n.preventDefault();
						n = a(this).serialize() + "&bbx_extension_id=" + c.bbx_extension_id;
						a.putREST("/cudatel/gui/extension/migrate", n, function() {
							j.trigger("close_request")
						})
					})
				})
			}) : a(".opMigrate", g).remove();
			d["delete"] ? a(".opDelete", g).show().bind("click", function(f) {
				f.preventDefault();
				var j = showPopup("extension_delete", {}, true);
				j.bind("popup_ready", function() {
					a(".name", j).text(c.name);
					a(".opDelete", j).bind("click", function(n) {
						n.preventDefault();
						n = {};
						n[c.prefix + "_id"] = c[c.prefix + "_id"];
						a(this).disable("working");
						a.deleteREST(c.restURL, n, function() {
							j.trigger("close_request");
							g.trigger("close_request")
						})
					})
				})
			}) : a(".opDelete", g).remove();
			a(".edmOps > a", g).not(":last").after(document.createTextNode(", "))
		};
	a.fn.extensionDetailMasthead = function(g) {
		var c = this;
		g = g || {};
		g.buttons = g.buttons || ["rename", "migrate", "delete"];
		if(!(g.prefix && g[g.prefix + "_id"] && g.restURL && g.name)) return false;
		a.getTemplate("/cudatel/ajax-html/extension_detail_masthead.html", function(d) {
			c.each(function() {
				var b = a(d).replaceAll(this);
				e(b, g)
			})
		})
	}
})(jQuery);
(function(a) {
	var e = [{
		name: "total",
		display: "Total time"
	}, {
		name: "average",
		display: "Average time"
	}, {
		name: "averageWait",
		display: "Average wait"
	}, {
		name: "n_in",
		display: "Calls In"
	}, {
		name: "n_out",
		display: "Calls Out"
	}, {
		name: "last_call_start",
		display: "Last Call"
	}],
		g = {
			bbx_report_json: {
				time: "0",
				since: "same day",
				filter_by_group: "0",
				leader_sort: "",
				leader_rows: "",
				leader_refresh: "10000"
			}
		},
		c = function(d) {
			var b = a(".staticBody", d),
				f = a(".template", d),
				j = function(o) {
					var q = a(".reportLoadSelect", b);
					a(".opDelete, .opEdit", b).attr("disabled", "disabled");
					q.bind("change.undisable", function() {
						if(trueish(a(this).val())) {
							a(".opDelete, .opEdit", b).removeAttr("disabled");
							a(this).unbind("change.undisable")
						}
					});
					q.empty();
					a.getREST("/cudatel/gui/report/report", {
						bbx_report_type: "group",
						sortby: "bbx_report_name",
						sortorder: "asc"
					}, function(v) {
						if(v.report.length) {
							v.report = v.report.sort(function(x, y) {
								return cmp(x.bbx_report_name.toLowerCase(), y.bbx_report_name.toLowerCase())
							});
							a.each(v.report, function() {
								q.append(sprintf('<option value="%s">%s</option>', this.bbx_report_id, this.bbx_report_name))
							});
							o && q.val(o).trigger("change")
						} else q.append(sprintf('<option value="0">There are no saved reports on this system</option>', this.bbx_report_id, this.bbx_report_name))
					})
				};
			j();
			var n = function(o, q) {
					l(o, q);
					a(".reportSettingsForm .settingTable > tbody", q).append(a(".reportSettingsEdit", f).clone());
					a(".reportNameInput", q).val(o.bbx_report_name);
					if(o.bbx_report_id) {
						a(".reportWrapReportName", b).text(o.bbx_report_name);
						a(".report", b).empty().groupActivity({
							bbx_report_id: o.bbx_report_id
						});
						a(".opCSV", b).attr("href", "/cudatel/gui/group_report/member_csv?bbx_report_id=" + o.bbx_report_id)
					} else {
						a(".reportWrapReportName", b).text("No Saved Report Loaded");
						a(".report", b).empty().append(a(".noReportLoaded", f).clone())
					}
				},
				l = function(o, q) {
					var v = o.bbx_report_json;
					if(typeof v == "string") try {
						v = JSON.parse(v)
					} catch(x) {
						showError("Internal error: Report specification data is malformed")
					}
					q.empty().data("bbx_report", o);
					var y = function(C) {
							var M = a(".reportScheduleRow", f).clone().appendTo(a(".reportScheduleTable", q));
							M.data("bbx_report_schedule", C);
							var Q = C.bbx_report_schedule_when.match(/^(\d\d?):(\d\d)/);
							Q = Q[1] > 12 ? (Q[1] - 12 || 12) + ":" + Q[2] + "PM" : (parseInt(Q[1]) || 12) + ":" + Q[2] + " AM";
							a(".emailAddress", M).text(C.bbx_report_schedule_email);
							a(".time", M).text(Q);
							M.contextMenu([{
								title: "Remove",
								fn: function() {
									var N = a(this),
										X = N.data("bbx_report_schedule");
									a.deleteREST("/cudatel/gui/report/schedule", {
										bbx_report_schedule_id: X.bbx_report_schedule_id
									}, function() {
										N.remove()
									})
								}
							}], {
								doubleClickFirst: false
							})
						};
					if(o.bbx_report_id) {
						a(".reportScheduleForm", f).clone().appendTo(q);
						var D = function() {
								a.getREST("/cudatel/gui/report/schedule", {
									bbx_report_id: o.bbx_report_id
								}, function(C) {
									if(C.schedule.length) {
										a(".reportScheduleTable > tbody", q).empty();
										a.each(C.schedule, function() {
											y(this)
										})
									}
								})
							};
						D();
						a(".btnAddReportTime", q).bind("click", function() {
							var C = a(".newReportEmail", q).val(),
								M = a(".newReportTime", q).val();
							if(C) {
								a.postREST("/cudatel/gui/report/schedule", {
									bbx_report_id: o.bbx_report_id,
									bbx_report_schedule_when: M,
									bbx_report_schedule_email: C
								}, function() {
									D()
								});
								a(".newReportEmail", q).val("");
								a(".newReportTime", q).find("option:first").attr("selected", "selected")
							} else alert("You must enter an email address")
						})
					} else a(".notSavedReport", f).clone().appendTo(q);
					var B = a(".reportSettingsForm", f).clone().appendTo(q);
					a("input.leaderboardLimit, input[name=min_time]", B).mask(: "0",
				leader_sort: "",
				leader_rows: "",
				leader_refresh: "10000"
			}
		},
		c = function(d) {
			var b = a(".staticBody", d),
				f = a(".template", d),
				j = function(o) {
					var q = a(".reportLoadSelect", b);
					a(".opDelete, .opEdit", b).attr("disabled", "disabled");
					q.bind("change.undisable", function() {
						if(trueish(a(this).val())) {
							a(".opDelete, .opEdit", b).removeAttr("disabled");
							a(this).unbind("change.undisable")
						}
					});
					q.empty();
					a.getREST("/cudatel/gui/report/report", {
						bbx_report_type: "group",
						sortby: "bbx_report_name",
						sortorder: "asc"
					}, function(v) {
						if(v.report.length) {
							v.report = v.report.sort(function(x, y) {
								return cmp(x.bbx_report_name.toLowerCase(), y.bbx_report_name.toLowerCase())
							});
							a.each(v.report, function() {
								q.append(sprintf('<option value="%s">%s</option>', this.bbx_report_id, this.bbx_report_name))
							});
							o && q.val(o).trigger("change")
						} else q.append(sprintf('<option value="0">There are no saved reports on this system</option>', this.bbx_report_id, this.bbx_report_name))
					})
				};
			j();
			var n = function(o, q) {
					l(o, q);
					a(".reportSettingsForm .settingTable > tbody", q).append(a(".reportSettingsEdit", f).clone());
					a(".reportNameInput", q).val(o.bbx_report_name);
					if(o.bbx_report_id) {
						a(".reportWrapReportName", b).text(o.bbx_report_name);
						a(".report", b).empty().groupActivity({
							bbx_report_id: o.bbx_report_id
						});
						a(".opCSV", b).attr("href", "/cudatel/gui/group_report/member_csv?bbx_report_id=" + o.bbx_report_id)
					} else {
						a(".reportWrapReportName", b).text("No Saved Report Loaded");
						a(".report", b).empty().append(a(".noReportLoaded", f).clone())
					}
				},
				l = function(o, q) {
					var v = o.bbx_report_json;
					if(typeof v == "string") try {
						v = JSON.parse(v)
					} catch(x) {
						showError("Internal error: Report specification data is malformed")
					}
					q.empty().data("bbx_report", o);
					var y = function(C) {
							var M = a(".reportScheduleRow", f).clone().appendTo(a(".reportScheduleTable", q));
							M.data("bbx_report_schedule", C);
							var Q = C.bbx_report_schedule_when.match(/^(\d\d?):(\d\d)/);
							Q = Q[1] > 12 ? (Q[1] - 12 || 12) + ":" + Q[2] + "PM" : (parseInt(Q[1]) || 12) + ":" + Q[2] + " AM";
							a(".emailAddress", M).text(C.bbx_report_schedule_email);
							a(".time", M).text(Q);
							M.contextMenu([{
								title: "Remove",
								fn: function() {
									var N = a(this),
										X = N.data("bbx_report_schedule");
									a.deleteREST("/cudatel/gui/report/schedule", {
										bbx_report_schedule_id: X.bbx_report_schedule_id
									}, function() {
										N.remove()
									})
								}
							}], {
								doubleClickFirst: false
							})
						};
					if(o.bbx_report_id) {
						a(".reportScheduleForm", f).clone().appendTo(q);
						var D = function() {
								a.getREST("/cudatel/gui/report/schedule", {
									bbx_report_id: o.bbx_report_id
								}, function(C) {
									if(C.schedule.length) {
										a(".reportScheduleTable > tbody", q).empty();
										a.each(C.schedule, function() {
											y(this)
										})
									}
								})
							};
						D();
						a(".btnAddReportTime", q).bind("click", function() {
							var C = a(".newReportEmail", q).val(),
								M = a(".newReportTime", q).val();
							if(C) {
								a.postREST("/cudatel/gui/report/schedule", {
									bbx_report_id: o.bbx_report_id,
									bbx_report_schedule_when: M,
									bbx_report_schedule_email: C
								}, function() {
									D()
								});
								a(".newReportEmail", q).val("");
								a(".newReportTime", q).find("option:first").attr("selected", "selected")
							} else alert("You must enter an email address")
						})
					} else a(".notSavedReport", f).clone().appendTo(q);
					var B = a(".reportSettingsForm", f).clone().appendTo(q);
					a("input.leaderboardLimit, input[name=min_time]", B).mask("?999999", {
						placeholder: ""
					});
					a.each(e, function() {
						a(".leaderboardColumn", B).append('<option value="' + this.name + '">' + this.display + "</option>")
					});
					B.unserializeObject(v);
					if(a.isArray(v.between)) {
						var u = v.between;
						a(".dateStart", B).val(u[0]);
						a(".dateEnd", B).val(u[1])
					}
					trueish(v.sort_is_fallback) && a(".leaderboardSort", q).val(a(".leaderboardSort > option:eq(0)").val());
					var F = a(".customDateRange", B);
					a(".selSince", B).bind("change", function() {
						a(this).val() === "RANGE" ? F.show().find("input[disabled]").removeAttr("disabled") : F.hide().find("input").attr("disabled", "disabled");
						a(".dateEnd.hasDatepicker", F).datepicker("destroy");
						a(".dateStart.hasDatepicker", F).datepicker("destroy");
						var C = {
							showAnim: "",
							changeMonth: true,
							changeYear: true,
							dateFormat: "MM d, yy"
						};
						a(".dateEnd", F).attr("id", getUnique("dp")).datepicker(C).datepicker("setDate", a(".dateEnd", F).val() || new Date);
						a(".dateStart", F).attr("id", getUnique("dp")).datepicker(C).datepicker("setDate", a(".dateStart", F).val() || new Date)
					}).trigger("change");
					a(".leaderboardSort", B).bind("change", function() {
						var C = a(this);
						if(C.val()) {
							C.closest("td.form").find("input, select").removeAttr("disabled");
							a(".fallbackSort", q).attr("disabled", "disabled")
						} else {
							C.closest("td.form").find("input, select").not(C).attr("disabled", "disabled");
							a(".fallbackSort", q).removeAttr("disabled")
						}
					}).trigger("change");
					a(".filterGroupRadio", B).bind("click", function() {
						var C = a(this).closest("td.form");
						if(a(this).is(":checked")) if(trueish(a(this).val())) {
							C.find("button, input:not([type=radio])").removeAttr("disabled");
							C.find(".disabled").removeClass("disabled")
						} else {
							C.find("button, input:not([type=radio])").attr("disabled", "disabled");
							C.find(".disableable").addClass("disabled")
						}
					}).filter(":checked").trigger("click");
					var I = function(C) {
							var M = a(".groupFilterItem", f).clone();
							M.appendTo(a(".groupFilterList", q));
							M.contextMenu([{
								title: "Remove",
								fn: function() {
									a(this).remove()
								}
							}], {
								doubleClickFirst: false
							});
							a(".groupFilterItemHidden", M).val(C);
							a.getREST("/cudatel/gui/group/basic", {
								bbx_group_id: C
							}, function(Q) {
								Q = Q.basic[0];
								a(".groupItemName", M).text(Q.bbx_group_name).data("bbx_group", Q)
							})
						};
					a(".groupFilterInput", q).extensionPicker({
						hidden: a(".groupFilterID", q),
						hiddenFormat: "object_id",
						searchTypes: ["group"],
						textFormat: "number",
						autoSelectFirst: true
					}).bind("selection", function() {
						var C = a(".groupFilterID", q).val();
						I(C);
						a(this).val("")
					});
					if(v.bbx_group_id) {
						if(!a.isArray(v.bbx_group_id)) v.bbx_group_id = [v.bbx_group_id];
						a.each(v.bbx_group_id, function() {
							I(this)
						})
					}
				};
			(function() {
				a(".reportLoadSelect", b).bind("change", function() {
					if(trueish(a(this).val())) {
						a(this).closest("form");
						var o = a(this).val();
						o ? a.getREST("/cudatel/gui/report/report", {
							bbx_report_id: o,
							bbx_report_type: "group"
						}, function(q) {
							q.report.length ? n(q.report[0], a(".reportSettings", b)) : showError("This is not a valid report. The report may have been deleted.")
						}) : showError("This is not a valid report name")
					}
				});
				a(".opNew", b).bind("click", function() {
					l(g, a(".newReport", b));
					a(".newReport", b).closest(".overlayPanel").show();
					var o = a(".newReport .settingTable > tbody", b).append(a(".reportSettingsNew", f).clone());
					a("input.leaderboardLimit, input[name=min_time]", o).mask("?999999", {
						placeholder: ""
					})
				});
				a(".opEdit", b).bind("click", function() {
					if(a(this).is(":disabled")) return false;
					a(".reportSettings", b).closest(".overlayPanel").show()
				});
				a(".hideOverlayPanel", b[0]).live("click", function() {
					a(this).closest(".overlayPanel").hide()
				});
				a(".opDelete", b).bind("click", function() {
					confirm("Delete the selected report?") && a.deleteREST("/cudatel/gui/report/report", {
						bbx_report_id: a(".reportLoadSelect", b).val()
					}, function() {
						j();
						n(g, a(".reportSettings", b))
					})
				});
				a(".opCreate", b[0]).live("click", function() {
					var o = a(this).closest("form"),
						q = a(".reportNameInput", o).val();
					if(!q) {
						alert("You must enter a report name");
						a(".loadSaveName", o).focus();
						return false
					}
					a.getREST("/cudatel/gui/report/report", {
						bbx_report_name: q
					}, function(v) {
						if(v.report.length) alert("This report name is already in use");
						else {
							v = o.serializeObject();
							if(typeof v.sortorder == "array" || typeof v.sortorder == "object" && !v.sortorder[0]) v.sortorder = v.sortorder[1];
							v = JSON.stringify(v);
							a.postREST("/cudatel/gui/report/report", {
								bbx_report_name: q,
								bbx_report_type: "group",
								bbx_report_json: v
							}, function(x) {
								o.closest(".overlayPanel").hide();
								j(x.report.bbx_report_id)
							})
						}
					})
				});
				a(".opSaveOver", b[0]).live("click", function() {
					var o = a(this).closest("form"),
						q = a(".reportNameInput", o).val(),
						v = o.closest(".reportSettings").data("bbx_report").bbx_report_id;
					if(!q) {
						alert("You must enter a report name");
						a(".loadSaveName", o).focus();
						return false
					}
					var x = o.serializeObject();
					if(typeof x.sortorder == "array" || typeof x.sortorder == "object" && !x.sortorder[0]) x.sortorder = x.sortorder[1];
					x = JSON.stringify(x);
					a.putREST("/cudatel/gui/report/report", {
						bbx_report_name: q,
						bbx_report_id: v,
						bbx_report_json: x
					}, function(y) {
						o.closest(".overlayPanel").hide();
						j(y.report.bbx_report_id)
					})
				})
			})({});
			n(g, a(".reportSettings", b))
		};
	a.fn.groupActivityWrap = function(d) {
		var b = this;
		d = d || {};
		a.getTemplate("/cudatel/ajax-html/group_activity_wrap.html", function(f) {
			b.each(function() {
				var j = a(f).replaceAll(this);
				help_activate(j);
				c(j, d)
			})
		})
	}
})(jQuery);
(function(a) {
	var e = ["lastname", "n_out", "total_out_secs", "average_out_secs", "total_wait_secs", "average_wait_secs", "n_in", "total_in_secs", "average_in_secs", "n", "total", "average", "last_call_start"],
		g = {},
		c;
	for(c in e) g[e[c]] = parseInt(c);
	var d = function(b, f, j) {
			var n = a(".template", b),
				l = a(".staticBody", b),
				o = {},
				q = {};
			if(typeof f.bbx_report_json == "string") try {
				f.bbx_report_json = JSON.parse(f.bbx_report_json)
			} catch(v) {
				console_log("jquery.groupActivity.js: error parsing report JSON")
			}
			var x = function(C, M) {
					if(C) {
						C.data("calls") || C.data("calls", []);
						M.bindNamespace = getUnique("ns");
						M.offsetStart = unixTime() - M.time;
						C.data("calls", C.data("calls").concat([M]));
						var Q = M.uuid;
						o[Q] = o[Q] || [];
						o[Q].push(C);
						B(C)
					} else console_log("jquery.groupActivity.js: addCall called without a proper row parameter")
				},
				y = function(C) {
					var M = a(".tableRow", n).clone();
					a(".nameStatus", M).data("sort", C.sort_name);
					q[C.bbx_user_id] = M;
					C.calls && C.calls.length ? a.each(C.calls, function(Q, N) {
						x(M, {
							callee_name: trueish(N.i_am_caller) ? N.callee_name : N.cid_name || N.caller_name,
							callee_num: trueish(N.i_am_caller) ? N.callee_num : N.cid_num || N.caller_num,
							uuid: trueish(N.i_am_caller) ? N.uuid : N.other_uuid,
							time: N.age
						})
					}) : u(M);
					M.data("rowData", C);
					a(".name", M).text(C.show_name);
					a(".outgoing", M).text(C.n_out + "");
					a(".outTime", M).text(a.formatInterval(C.total_out_				};
						C.tablesorter({
							widgets: ["zebra"],
							textExtraction: M,
							sortList: Q ? false : N,
							headers: [Q ? {
								sorter: false
							} : {},
							X, X, X, X, X, X, X, X, X, X]
						});
						if(l.closest(".groupActivityWrap")[0]) {
							var ma = l.closest(".groupActivityWrap").children(".staticBody");
							C.bind("sortStart", function() {
								var pa;
								pa = C[0].config.sortList;
								pa = pa[0] ? {
									sortby: e[pa[0][0]],
									sortorder: pa[0][1] ? "desc" : "asc"
								} : {
									sortby: e[0],
									sortorder: "asc"
								};
								a(".fallbackSortorder", ma).val(pa.sortorder);
								a(".fallbackSortby", ma).val(pa.sortby)
							})
						}
					}
				};
			a.getJSON("/cudatel/gui/group_report/member_status", {
				bbx_report_id: j.bbx_report_id
			}, function(C) {
				data = C.member_status;
				table = a("table.gaTable", l);
				I(table, data, f.bbx_report_json.leader_refresh);
				if(f.bbx_report_json.leader_refresh && parseInt(f.bbx_report_json.leader_refresh) >= 1E4) var M = setInterval(function() {
					l.closest("body")[0] ? a.getJSON("/cudatel/gui/group_report/member_status", {
						bbx_report_id: j.bbx_report_id
					}, function(N) {
						I(table, N.member_status, f.bbx_report_json.leader_refresh)
					}) : clearInterval(M)
				}, parseInt(f.bbx_report_json.leader_refresh));
				Ape.subscribe("channel_hangup");
				var Q = getUnique("ns");
				a(window).bind("meteor_channel_hangup." + Q, function(N, X) {
					b.closest("body") ? F(X.json.uuid) : a(window).unbind("meteor_channel_hangup." + Q)
				});
				a(window).bind("meteor_call_event", function(N, X) {
					X = X.json;
					var ma = X.variable_call_uuid == X.uuid ? true : false;
					if(X.call_event == "channel_answer" && X.bbx_user_id && q[X.bbx_user_id]) x(q[X.bbx_user_id], {
						callee_name: ma ? X.caller_destination_formatted : X.cid_name,
						callee_num: ma ? X.caller_destination_number : X.cid_number,
						uuid: X.uuid,
						time: 0
					})
				})
			})
		};
	a.fn.groupActivity = function(b) {
		var f = this;
		b = b || {};
		a.getTemplate("/cudatel/ajax-html/group_activity.html", function(j) {
			a.getREST("/cudatel/gui/report/report", {
				bbx_report_id: b.bbx_report_id
			}, function(n) {
				f.each(function() {
					var l = a(j);
					a(this).empty().append(l);
					d(l, n.report[0], b)
				})
			})
		})
	}
})(jQuery);
(function(a) {
	a.fn.providersTable = function(c) {
		var d = this;
		Ape.subscribe(["provider_status"]);
		this.jsonTable("destroy").jsonTable({
			url: "/cudatel/gui/gateway/siplist",
			type: "GET",
			rows: 10,
			page: 1,
			sortby: "bbx_provider_gateway_name",
			sortorder: "asc",
			rowDataRoot: "siplist",
			columnData: [{
				header: "",
				value: 'static:<img src="/cudatel/images/typeicons/provider.png" width="20" height="20" />',
				render: "html"
			}, {
				header: "Name",
				value: "bbx_provider_gateway_name",
				sortby: "bbx_provider_gateway_name"
			}, {
				header: "Account",
				value: function(b) {
					b = b.rowData;
					return b.bbx_provider_gateway_username + "@" + b.bbx_provider_gateway_host + (b.bbx_provider_gateway_port == "5060" ? "" : ":" + b.bbx_provider_gateway_port)
				},
				sortby: "bbx_provider_gateway_host"
			}, {
				header: "Provider",
				value: "bbx_provider_name",
				sortby: "bbx_provider_name"
			}, {
				header: "Services",
				value: function(b) {
					b = b.rowData;
					var f = [];
					trueish(b.bbx_provider_gateway_flag_inbound) && f.push("In");
					trueish(b.bbx_provider_gateway_flag_outbound) && f.push("Out");
					return f.join(" | ")
				}
			}, {
				header: "Status",
				value: function(b) {
					b = b.rowData;
					return a("<span></span>").gatewayRegState({
						bbx_provider_gateway_id: b.bbx_provider_gateway_id,
						bbx_provider_gateway_state: b.bbx_provider_gateway_state
					})
				},
				render: "html"
			}]
		}).addClass("clickable");
		this.each(function() {
			a("td", this).die("click").live("click", function() {
				var b = a(this).closest("tr").data("row").bbx_provider_gateway_id;
				showOverlay("gateway_edit", {
					bbx_provider_gateway_id: b,
					close: function() {
						d.providersTable(c)
					}
				})
			})
		});
		return this
	};
	a.fn.newGatewayProviderPicker = function(c) {
		var d = this;
		c = c || {};
		a.getREST("/cudatel/gui/provider/provider", {}, function(b) {
			d.each(function() {
				var f = a(this),
					j = f.closest("form"),
					n = b.provider,
					l = a('<select name="bbx_provider_id"></select>');
				a.each(n, function(o, q) {
					var v = a('<option value="' + q.bbx_provider_id + '">' + q.bbx_provider_name + "</option>");
					delete q.gateways;
					delete q.bbx_provider_template;
					var x = {
						presets: {},
						attributes: {}
					};
					a.each(q, function(y, D) {
						if(y == "bbx_provider_direction") {
							D = D || "both";
							if(D.indexOf("LOCKED:") > -1) {
								x.attributes.bbx_provider_gateway_flag_inbound = "readonly";
								x.attributes.bbx_provider_gateway_flag_outbound = "readonly"
							}
							if(D.indexOf("inbound") > -1) x.presets.bbx_provider_gateway_flag_inbound = 1;
							else if(D.indexOf("outbound") > -1) x.presets.bbx_provider_gateway_flag_outbound = 1;
							else if(D.indexOf("both") > -1) {
								x.presets.bbx_provider_gateway_flag_inbound = 1;
								x.presets.bbx_provider_gateway_flag_outbound = 1
							}
						} else if(D === null) return true;
						else if(y.indexOf("bbx_provider") > -1) {
							var B = y.replace(/_provider_/, "_provider_gateway_");
							if(D == "NONE") {
								x.presets[B] = "";
								x.attributes[B] = "disabled"
							} else if(D.indexOf("LOCKED:") === 0) {
								x.presets[B] = D.replace(/^LOCKED:/, "");
								x.attributes[B] = "readonly"
							}
						}
					});
					v.data("gwPresets", x);
					v.appendTo(l)
				});
				if(!c.noTrackChange) {
					l.bind("change", function() {
						var o = a(this),
							q = a("option:selected", o).data("gwPresets"),
							v = a("[name]", j);
						v.removeAttr("readonly").removeAttr("disabled");
						v.not("input:checkbox, input:radio").not(o).val("");
						v.filter("input:checkbox, input:radio").removeAttr("checked").removeAttr("selected");
						v.unbind("click.gwPresetLock");
						j.unserializeObject(q.presets);
						a.each(q.attributes, function(x, y) {
							var D = v.filter("[name=" + x + "]");
							D.attr(y, y);
							D = D.filter(":checkbox");
							y == "readonly" && D[0] && D.bind("click.gwPresetLock", function(B) {
								B.preventDefault()
							})
						})
					});
					e(j, {
						neverOnMissingCID: true
					})
				}
				l.appendTo(f.empty());
				l.trigger("providerPickerReady")
			})
		});
		return d
	};
	var e = function(c) {
			var d = [],
				b = c.closest(".staticBody"),
				f = a("input[name=bbx_provider_gateway_flag_inbound], input[name=bbx_provider_gateway_flag_outbound]", c);
			if(!f.filter(":checked")[0]) {
				f.attr("checked", "checked");
				d.push({
					elem: f.first(),
					text: "At least one direction must be selected"
				})
			}
			f = !! a("[name=bbx_provider_gateway_flag_inbound]:checked", c)[0];
			var j = !! a("[name=bbx_provider_gateway_flag_outbound]:checked", c)[0];
			if(f && j) {
				a(".inboundOnly [disabled]", b).removeAttr("disabled");
				a(".outboundOnly [disabled]", b).removeAttr("disabled");
				a(".inboundOnly.hideOnDisable, .inboundOnly .hideOnDisable", b).show();
				a(".outboundOnly.hideOnDisable, .outboundOnly .hideOnDisable", b).show()
			} else if(f) {
				a(".inboundOnly [disabled]", b).removeAttr("disabled");
				a(".outboundOnly", b).find("input,select,textarea,button").attr("disabled", "disabled");
				a(".outboundOnly.hideOnDisable, .outboundOnly .hideOnDisable", b).hide();
				a(".inboundOnly.hideOnDisable, .inboundOnly .hideOnDisable", b).show()
			} else if(j) {
				a(".outboundOnly [disabled]", b).removeAttr("disabled");
				a(".inboundOnly", b).find("input,select,textarea,button").attr("disabled", "disabled");
				a(".outboundOnly.hideOnDisable, .outboundOnly .hideOnDisable", b).show();
				a(".inboundOnly.hideOnDisable, .inboundOnly .hideOnDisable", b).hi_id;
				showOverlay("gateway_edit", {
					bbx_provider_gateway_id: b,
					close: function() {
						d.providersTable(c)
					}
				})
			})
		});
		return this
	};
	a.fn.newGatewayProviderPicker = function(c) {
		var d = this;
		c = c || {};
		a.getREST("/cudatel/gui/provider/provider", {}, function(b) {
			d.each(function() {
				var f = a(this),
					j = f.closest("form"),
					n = b.provider,
					l = a('<select name="bbx_provider_id"></select>');
				a.each(n, function(o, q) {
					var v = a('<option value="' + q.bbx_provider_id + '">' + q.bbx_provider_name + "</option>");
					delete q.gateways;
					delete q.bbx_provider_template;
					var x = {
						presets: {},
						attributes: {}
					};
					a.each(q, function(y, D) {
						if(y == "bbx_provider_direction") {
							D = D || "both";
							if(D.indexOf("LOCKED:") > -1) {
								x.attributes.bbx_provider_gateway_flag_inbound = "readonly";
								x.attributes.bbx_provider_gateway_flag_outbound = "readonly"
							}
							if(D.indexOf("inbound") > -1) x.presets.bbx_provider_gateway_flag_inbound = 1;
							else if(D.indexOf("outbound") > -1) x.presets.bbx_provider_gateway_flag_outbound = 1;
							else if(D.indexOf("both") > -1) {
								x.presets.bbx_provider_gateway_flag_inbound = 1;
								x.presets.bbx_provider_gateway_flag_outbound = 1
							}
						} else if(D === null) return true;
						else if(y.indexOf("bbx_provider") > -1) {
							var B = y.replace(/_provider_/, "_provider_gateway_");
							if(D == "NONE") {
								x.presets[B] = "";
								x.attributes[B] = "disabled"
							} else if(D.indexOf("LOCKED:") === 0) {
								x.presets[B] = D.replace(/^LOCKED:/, "");
								x.attributes[B] = "readonly"
							}
						}
					});
					v.data("gwPresets", x);
					v.appendTo(l)
				});
				if(!c.noTrackChange) {
					l.bind("change", function() {
						var o = a(this),
							q = a("option:selected", o).data("gwPresets"),
							v = a("[name]", j);
						v.removeAttr("readonly").removeAttr("disabled");
						v.not("input:checkbox, input:radio").not(o).val("");
						v.filter("input:checkbox, input:radio").removeAttr("checked").removeAttr("selected");
						v.unbind("click.gwPresetLock");
						j.unserializeObject(q.presets);
						a.each(q.attributes, function(x, y) {
							var D = v.filter("[name=" + x + "]");
							D.attr(y, y);
							D = D.filter(":checkbox");
							y == "readonly" && D[0] && D.bind("click.gwPresetLock", function(B) {
								B.preventDefault()
							})
						})
					});
					e(j, {
						neverOnMissingCID: true
					})
				}
				l.appendTo(f.empty());
				l.trigger("providerPickerReady")
			})
		});
		return d
	};
	var e = function(c) {
			var d = [],
				b = c.closest(".staticBody"),
				f = a("input[name=bbx_provider_gateway_flag_inbound], input[name=bbx_provider_gateway_flag_outbound]", c);
			if(!f.filter(":checked")[0]) {
				f.attr("checked", "checked");
				d.push({
					elem: f.first(),
					text: "At least one direction must be selected"
				})
			}
			f = !! a("[name=bbx_provider_gateway_flag_inbound]:checked", c)[0];
			var j = !! a("[name=bbx_provider_gateway_flag_outbound]:checked", c)[0];
			if(f && j) {
				a(".inboundOnly [disabled]", b).removeAttr("disabled");
				a(".outboundOnly [disabled]", b).removeAttr("disabled");
				a(".inboundOnly.hideOnDisable, .inboundOnly .hideOnDisable", b).show();
				a(".outboundOnly.hideOnDisable, .outboundOnly .hideOnDisable", b).show()
			} else if(f) {
				a(".inboundOnly [disabled]", b).removeAttr("disabled");
				a(".outboundOnly", b).find("input,select,textarea,button").attr("disabled", "disabled");
				a(".outboundOnly.hideOnDisable, .outboundOnly .hideOnDisable", b).hide();
				a(".inboundOnly.hideOnDisable, .inboundOnly .hideOnDisable", b).show()
			} else if(j) {
				a(".outboundOnly [disabled]", b).removeAttr("disabled");
				a(".inboundOnly", b).find("input,select,textarea,button").attr("disabled", "disabled");
				a(".outboundOnly.hideOnDisable, .outboundOnly .hideOnDisable", b).show();
				a(".inboundOnly.hideOnDisable, .inboundOnly .hideOnDisable", b).hide()
			}
			a(".cidSelector", b).cidNumberSelector("rescan");
			b = a("input[name=bbx_provider_gateway_expire]", c);
			f = a("input[name=bbx_provider_gateway_flag_register]", c);
			!b.val() && f.is(":checked") && b.val("3600");
			a("[name=bbx_provider_gateway_flag_register]", c).is(":checked") ? b.add(a(".opRefreshReg", c)).enable("noReg") : b.add(a(".opRefreshReg", c)).disable("noReg");
			return d.length ? d : false
		},
		g = function(c) {
			var d = a(this).closest("form");
			d = e(d, {
				neverOnMissingCID: c.type == "revalidate"
			});
			c.type != "revalidate" && d && a.each(d, function(b, f) {
				if(f.elem && f.text) f.elem.qtipMessage({
					message: f.text
				});
				else f.text && alert(f.text)
			})
		};
	a.fn.gatewayCreate = function() {
		var c = function(d, b) {
				a(".editOnly", b).remove();
				a(".title", b).html("<h3>New SIP Provider Account</h3>");
				var f = a(".gatewayForm", b);
				a(".provider", b).newGatewayProviderPicker();
				a(".mohOut", f).mohPicker();
				var j = a("input[name=bbx_provider_gateway_host]", f),
					n = a("input[name=bbx_provider_gateway_realm]", f);
				j.bind("keyup.linking", function() {
					n.val(j.val())
				});
				n.bind("keyup.linking", function() {
					j.add(n).unbind("keyup.linking")
				});
				var l = a("input[name=bbx_provider_gateway_username]", f),
					o = a("input[name=bbx_provider_gateway_auth_username]", f);
				l.bind("keyup.linking", function() {
					o.val(l.val())
				});
				o.bind("keyup.linking", function() {
					l.add(o).unbind("keyup.linking")
				});
				a(".codecs", f).codecPicker({
					inputName: "absolute_codec_string",
					selected: []
				});
				a(".cidSelector", b).cidNumberSelector({
					name: {
						force: "bbx_provider_gateway_flag_force_caller_id",
						number: "bbx_provider_gateway_caller_id"
					},
					force: false,
					number: ""
				});
				f.bind("revalidate", g);
				f.delegate("input:not([name=bbx_provider_id])", "change", g);
				a(".localRegDisplay", b).remove();
				a("[name=local_registration]", f).bind("change", function() {
					this.checked ? a(".localRegPending", b).show() : a(".localRegPending", b).hide()
				});
				f.ajaxForm({
					url: "/cudatel/gui/gateway/sip",
					type: "POST",
					accept: "application/json",
					success: function() {
						d.trigger("close_request")
					},
					error: function(q) {
						var v = {
							required: "This value is required"
						};
						try {
							var x = a.parseJSON(q.responseText),
								y = Infinity;
							if(x.error && a.isPlainObject(x.error)) {
								var D = b.closest(".popup"),
									B = a();
								a.each(x.error, function(F) {
									F = a(":input[name=" + F + "]", f);
									if(F.offset().top < y) y = F.offset().top;
									B = B.add(F)
								});
								y < Infinity && D.scrollTop() > y - 20 && D.scrollTop(y - 20);
								a.each(x.error, function(F, I) {
									var C = a(":input[name=" + F + "]", f);
									C.qtipMessage({
										style: "failure",
										message: v[I] || I
									});
									C.addClass("invalid")
								})
							}
						} catch(u) {}
					}
				});
				b.appendTo(d.empty());
				f.trigger("revalidate")
			};
		return this.each(function(d, b) {
			b = a(b);
			a.getTemplate("/cudatel/ajax-html/gateway.html", function(f) {
				var j = a(f);
				f = a(".template", j);
				j = a(".staticBody", j);
				c(b, j, f)
			})
		})
	};
	a.fn.gatewayEdit = function(c) {
		var d = c.bbx_provider_gateway_id,
			b = function(j, n) {
				var l = a(".gatewayForm", n);
				a("[name=local_registration]", l).unbind("change.sir");
				a(".localRegDisplay", l).hide();
				if(j.bbx_registration_username) {
					var o = a(".localRegDisplay", n);
					a("[name=local_registration]", l).attr("checked", "checked");
					a(".username", o).val(j.bbx_registration_username);
					a(".password", o).val(j.bbx_registration_password);
					a.getREST("/cudatel/gui/sysinfo/ip_port_info", function(q) {
						q = q.ip_port_info;
						a(".port", o).val(q.registration_port);
						a(".internal", o).val(q.system_ip);
						a(".external", o).val(q.external_ip)
					});
					o.show();
					a("[name=local_registration]", l).bind("change.sir", function() {
						this.checked ? o.show() : o.hide()
					})
				} else a("[name=local_registration]", l).bind("change.sir", function() {
					this.checked ? a(".localRegPending", n).show() : a(".localRegPending", n).hide()
				})
			},
			f = function(j, n, l) {
				a(".createOnly", l).remove();
				a(".changeProvider", l).newGatewayProviderPicker({
					noTrackChange: true
				});
				a(".title", l).extensionDetailMasthead({
					prefix: "bbx_provider_gateway",
					restURL: "/cudatel/gui/gateway/sip",
					bbx_provider_gateway_id: j.bbx_provider_gateway_id,
					name: j.bbx_provider_gateway_name,
					buttons: ["rename", "delete"]
				});
				var o = a(".gatewayForm", l);
				o.unserializeObject(j);
				o.one("providerPickerReady", function() {
					a("[name=bbx_provider_id]", o).val(j.bbx_provider_id)
				});
				a("input[name=bbx_provider_gateway_flag_inbound]", o).checks({
					offValue: "0"
				});
				a("input[name=bbx_provider_gateway_flag_outbound]", o).checks({
					offValue: "0"
				});
				a("input[name=outbound_fax]", o).checks({
					offValue: "0"
				});
				a("input[name=fax_enable_t38_request]", o).checks({
					offValue: "0"
				});
				a(".provider", l).text(j.bbx_provider_name);
				var q = a("input[name=bbx_provider_gateway_host]", o),
					v = a("input[name=bbx_provider_gateway_realm]", o);
				if(q.val() == v.val()) {
					q.bind("keyup.linking", function() {
						v.val(q.val())
					});
					v.bind("keyup.linking", function() {
						q.add(v).unbind("keyup.linking")
					})
				}
				var x = a("input[name=bbx_provider_gateway_username]", o),
					y = a("input[name=bbx_provider_gateway_auth_username]", o);
				if(x.val() == y.val()) {
					x.bind("keyup.linking", function() {
						y.val(x.val())
					});
					y.bind("keyup.linking", function() {
						x.add(y).unbind("keyup.linking")
					})
				}
				var D = [];
				if(j.absolute_codec_string) D = j.absolute_codec_string.split(/,/);
				a(".codecs", o).codecPicker({
					inputName: "absolute_codec_string",
					selected: D
				});
				a(".externalForm", l);
				if(trueish(j.bbx_provider_gateway_flag_inbound)) {
					D = j.bbx_provider_gateway_exten_maps;
					a(".externals", l).providerExternals({
						maps: D,
						bbx_provider_gateway_id: j.bbx_provider_gateway_id
					})
				} else a(".inboundOnly", l).hide();
				trueish(j.bbx_provider_gateway_flag_outbound) ? a("td.form.outboundRouting", l).miniRoute({
					bbx_provider_gateway_id: j.bbx_provider_gateway_id
				}) : a(".outboundOnly", l).hide();
				a(".cidSelector", l).cidNumberSelector({
					name: {
						force: "bbx_provider_gateway_flag_force_caller_id",
						number: "bbx_provider_gateway_caller_id"
					},
					force: trueish(j.bbx_provider_gateway_flag_force_caller_id),
					number: j.bbx_provider_gateway_caller_id
				});
				a(".mohOut", o).mohPicker({
					bbx_moh_id: j.bbx_moh_id,
					allowNone: true
				});
				a("input.idAutoFill[name=bbx_provider_gateway_id]", l).val(j.bbx_provider_gateway_id);
				a(".opRefreshReg", o).bind("click", function(B) {
					B.preventDefault();
					a.putREST("/cudatel/gui/gateway/sip", {
						bbx_provider_gateway_state: "REFRESH",
						bbx_provider_gateway_id: j.bbx_provider_gateway_id
					})
				});
				a(".regStatus", o).gatewayRegState({
					bbx_provider_gateway_state: j.bbx_provider_gateway_state,
					bbx_provider_gateway_id: j.bbx_provider_gateway_id
				});
				o.ajaxForm({
					dataType: "json",
					accept: "application/json",
					beforeSerialize: function(B) {
						a(B).formQtipMessage({
							style: "notice"
						})
					},
					success: function(B) {
						a(o).formQtipMessage({
							style: "success"
						});
						b(B.sip, l)
					},
					afterError: function() {
						o.formQtipMessage({
							style: "failure"
						})
					}
				});
				o.bind("revalidate", g);
				o.bind("change", g);
				b(j, l);
				l.appendTo(n.empty());
				e(o, {
					neverOnMissingCID: true
				});
				a("input[name=local_registration]",tTemplate("/cudatel/ajax-html/tdm_analog.html", function(d) {
			c.each(function() {
				var b = a(this),
					f = a(d),
					j = a(".staticBody", f);
				a.getREST("/cudatel/gui/gateway/hardware", {
					bbx_tdm_card_port_id: g
				}, function(n) {
					e(b, j, n.hardware)
				})
			})
		});
		return this
	}
})(jQuery);
(function(a) {
	var e = function(g, c, d) {
			a(".title", c).text(d.bbx_tdm_card_port_name);
			var b = a("form.gatewayForm", c);
			b.checks();
			b.unserializeObject(d).ajaxForm({
				data: {
					bbx_tdm_card_port_id: d.bbx_tdm_card_port_id
				},
				beforeSerialize: function(n) {
					a(n).formQtipMessage({
						style: "notice"
					})
				},
				success: function() {
					a(b).formQtipMessage({
						style: "success"
					})
				},
				afterError: function() {
					b.formQtipMessage({
						style: "failure"
					})
				},
				accept: "application/json"
			});
			var f = a(".channelsSelect", c).tdmChannelSelector({
				value: d.tdm_channels || false,
				type: d.bbx_tdm_card_port_signal_type
			}),
				j = a("select[name=bbx_tdm_card_port_signal_type]", c).val() === "euroisdn" ? "e1" : "t1";
			a("select[name=bbx_tdm_card_port_signal_type]", c).bind("change", function() {
				var n = a(this),
					l = n.val() === "euroisdn" ? "e1" : "t1";
				if(l !== n.data("signalType")) {
					a("select option:gt(0):selected", f)[0] && f.qtipMessage({
						message: "The selected signal type has a different number of channels"
					});
					if(j !== l) {
						var o = l === "e1" ? " to " : " from ";
						f.tdmChannelSelector({
							type: l
						});
						n.qtipMessage({
							message: "Changing" + o + "Euro ISDN will change signaling on all digital ports"
						})
					}
				}
				n.data("signalType", l)
			}).data("signalType", a("select[name=bbx_tdm_card_port_signal_type]", c).val() === "euroisdn" ? "e1" : "t1");
			a(".cidSelector", c).cidNumberSelector({
				name: {
					force: "bbx_tdm_card_port_flag_force_caller_id",
					number: "bbx_tdm_card_port_caller_id"
				},
				force: trueish(d.bbx_tdm_card_port_flag_force_caller_id),
				number: d.bbx_tdm_card_port_caller_id
			});
			a(".externals", c).providerExternals({
				maps: d.bbx_tdm_card_port_exten_maps,
				bbx_tdm_card_port_id: d.bbx_tdm_card_port_id
			});
			a("td.form.outboundRouting", c).miniRoute({
				bbx_tdm_card_port_id: d.bbx_tdm_card_port_id
			});
			g.html(c)
		};
	a.fn.tdmDigitalEdit = function(g) {
		var c = this;
		a.getTemplate("/cudatel/ajax-html/tdm_digital.html", function(d) {
			c.each(function() {
				var b = a(this),
					f = a(d),
					j = a(".staticBody", f);
				a(".template", f);
				a.getREST("/cudatel/gui/gateway/hardware", {
					bbx_tdm_card_port_id: g
				}, function(n) {
					e(b, j, n.hardware)
				})
			})
		});
		return this
	}
})(jQuery);
(function() {
	var a, e = function(g, c, d, b, f, j, n) {
			var l = $(".routeMapRowTable", d).clone(),
				o = $(sprintf('<form action="/cudatel/gui/route/map" method="PUT" class="jsAutoSubmit">%s</form>', '<select name="bbx_outbound_route_id"></select>'));
			$.each(f, function(v, x) {
				$("<option></option>", {
					value: x.bbx_outbound_route_id
				}).text(x.bbx_outbound_route_name).appendTo($("select", o))
			});
			var q = $(sprintf('<form action="/cudatel/gui/route/map" method="PUT" class="jsAutoSubmit">%s</form>', '<select class="jsAutoSubmitWatch"></select>'));
			$.each(j, function(v, x) {
				if(x.bbx_provider_gateway_id) {
					var y = $("<option></option>", {
						value: "bbx_provider_gateway_id:" + x.bbx_provider_gateway_id
					});
					y.text(x.bbx_provider_gateway_name);
					y.appendTo($("select", q));
					y.data({
						bbx_provider_gateway_id: x.bbx_provider_gateway_id
					})
				} else if(x.bbx_tdm_card_port_id) {
					y = x.bbx_tdm_card_port_name || "Unknown Port (" + (x.bbx_tdm_card_port_type || "unknown").toLowerCase() + " port " + x.bbx_tdm_card_port_number + ")";
					$("<option></option>", {
						value: "bbx_tdm_card_port_id:" + x.bbx_tdm_card_port_id
					}).text(y).data({
						bbx_tdm_card_port_id: x.bbx_tdm_card_port_id
					}).appendTo($("select", q))
				}
			});
			f = $("<option></option>", {
				value: "blocked:1"
			});
			f.text("Blocked");
			f.appendTo($("select", q));
			f.data({
				blocked: 1
			});
			$(">.routeMapHeader a.opManageRoutes", c).bind("click", function(v) {
				v.preventDefault();
				showPopup("routemanager", {
					close: function() {
						g.routeMapList(n)
					}
				})
			});
			c.delegate("a.opManageRoutesAutoPick", "click", function(v) {
				v.preventDefault();
				v = $(this).closest("td").find("select");
				showPopup("routemanager", {
					preselect: v.val(),
					close: function() {
						g.routeMapList(n)
					}
				})
			});
			$(".routeMapListBody", c).sortList({
				allow: ["add", "remove", "reorder"],
				data: b,
				rowData: {
					value: function(v) {
						var x = l.clone(),
							y = $(">tbody > tr", x),
							D = o.clone().data("extraFormData", {
								bbx_outbound_route_map_id: v.bbx_outbound_route_map_id
							});
						$("select", D).val(v.bbx_outbound_route_id);
						D.prependTo($(">td.callType", y));
						$(">td.restrictTo", y).routeMapRestrictions({
							bbx_outbound_route_map_id: v.bbx_outbound_route_map_id,
							restrictions: v.restrictions
						});
						var B = q.clone().data("extraFormData", {
							bbx_outbound_route_map_id: v.bbx_outbound_route_map_id
						}).addClass("delayed");
						thisGWSelect = $("select", B);
						if(v.bbx_provider_gateway_id) thisGWSelect.val("bbx_provider_gateway_id:" + v.bbx_provider_gateway_id);
						else v.bbx_tdm_card_port_id ? thisGWSelect.val("bbx_tdm_card_port_id:" + v.bbx_tdm_card_port_id) : thisGWSelect.val("blocked:1");
						thisGWSelect.bind("change", function() {
							var u = $(this).val();
							if(u.indexOf("gateway") > -1) B.data("extraFormData", {
								bbx_outbound_route_map_id: v.bbx_outbound_route_map_id,
								bbx_provider_gateway_id: u.match(/\d+$/)[0]
							});
							else u.indexOf("card_port") > -1 ? B.data("extraFormData", {
								bbx_outbound_route_map_id: v.bbx_outbound_route_map_id,
								bbx_tdm_card_port_id: u.match(/\d+$/)[0]
							}) : B.data("extraFormData", {
								bbx_outbound_route_map_id: v.bbx_outbound_route_map_id,
								bbx_tdm_card_port_id: "",
								bbx_provider_gateway_id: ""
							})
						});
						$(">td.destination", y).append(B);
						return x
					},
					render: "html"
				},
				reorder: function(v, x) {
					$.putREST("/cudatel/gui/route/map", {
						bbx_outbound_route_map_id: x.moved.bbx_outbound_route_map_id,
						bbx_outbound_route_map_priority: x.position + 1
					})
				},
				remove: function(v, x) {
					var y = x.success,
						D = x.error;
					showBlanker({
						title: "Delete this routing entry?",
						text: "Some calls may be routed differently or fail to complete if this routing entry is removed.",
						buttons: ["Delete", "Cancel"],
						callbacks: [function() {
							var B = $(this);
							B.add(B.siblings("button")).attr("disabled", "disabled");
							$.deleteREST("/cudatel/gui/route/map", {
								bbx_outbound_route_map_id: x.row.bbx_outbound_route_map_id
							}, {
								success: function() {
									y();
									B.trigger("closeBlanker")
								},
								afterError: function() {
									D();
									B.trigger("closeBlanker")
								}
							})
						}, function() {
							D();
							$(this).trigger("closeBlanker")
						}]
					})
				},
				addLink: {
					value: $('<a class="ops addLink" href="#">Add a routing entry...</a>'),
					render: "html",
					position: "last"
				},
				addForm: {
					value: function() {
						var v = $('<form action="/cudatel/gui/route/map" method="POST"></form>').html(l.clone()),
							x = $(">table > tbody > tr", v);
						$(">td.callType", x).find("a").remove();
						var y = o.find("select").clone().prepend('<option value="" selected="selected"></option>').prependTo($(">td.callType", x));
						$(">td.restrictTo", x).html($(".restrictNotAvailable", d).clone());
						var D = q.find("select").clone().prepend('<option value="" selected="selected"></option>').appendTo($(">td.destination", x));
						y.add(D).bind("change", function() {
							if(y.val() && D.val()) {
								var B = v.serializeObject(),
									u = D.val().match(/^([^:]+):(\d+)$/);
								B[u[1]] = u[2];
								$("select", v).attr("disabled", "disabled");
								$.postREST("/cudatel/gui/route/map", B, function(F) {
									v.trigger("add", {
										data: F.map,
										last: true
									})
								})
							}
						});
						D.val("");
						y.val("");
						return v
					},
					position: "last",
					prepare: function() {
						$(this)
					}
				}
			});
			g.html(c)
		};
	$.fn.routeMapList = function(g) {
		var c = this,
			d = g || {};
		$.getTemplate("/cudatel/ajax-html/routeMapList.html", function(b) {
			$.getREST("/cudatel/gui/route/map", {}, function(f) {
				$.getREST("/cudatel/gui/route/route", {}, function(j) {
					$.getREST("/cudatel/gui/gateway/combined", {
						bbx_provider_gateway_flag_outbound: 1
					}, function(n) {
						(function() {
							c.each(function() {
								var l = $(this),
									o = $(b),
									q = $(".staticBody", o);
								a = a || $(".template", o);
								e(l, q, a, f.map, j.route, n.combined, d)
							})
						})()
					})
				})
			})
		});
		this.data("routeMapList", d);
		return this
	}
})();
(function() {
	var a, e = function(g, c, d, b, f) {
			var j = $(".systemPassForm", c).hide(),
				n = f.bbx_outbound_route_map_id;
			$(".rmid", j).val(n);
			$(".scCxbox", j).checks();
			var l = function() {
					$.getREST("/cudatel/gui/route/map", {
						bbx_outbound_route_map_id: n
					}, function(o) {
						if(o.map.restrictions[0]) {
							j.show();
							trueish(o.map.bbx_outbound_route_map_allow_system) ? $(".scCxbox", j).attr("checked", "checked") : $(".scCxbox", j).removeAttr("checked")
						} else j.hide()
					})
				};
			l();
			$(".restrictionList", c).sortList({
				data: b,
				allow: ["add", "remove"],
				rowData: {
					value: function(o) {
						if(o.bbx_site_name) return $("<div></div>").text(o.bbx_site_name).prepend('<img src="/cudatel/images/typeicons/site.png" style="vertical-align: middle; padding-right: 1em" width: "20" height="20" />');
						else if(o.bbx_group_name) return $("<div></div>").text(o.bbx_group_name).prepend('<img src="/cudatel/images/typeicons/group.png" style="vertical-align: middle; padding-right: 1em" width: "20" height="20" />');
						return o.bbx_group_name || o.bbx_site_name || "Unknown restriction"
					},
					render: "html"
				},
				addForm: {
					value: function() {
						var o = $("<div>Please wait...</div>"),
							q = $(".restrictionAddForm", d).clone();
						$.getREST("/cudatel/gui/group/group_count", {
							rows: 1
						}, function(v) {
							$.getREST("/cudatel/gui/site/site", {}, function(x) {
								var y = function() {
										$(".picker > *", q).remove();
										$(".picker", q).html($(".groupInput", d).clone());
										$(".picker > .groupInput", q).extensionPicker({
											searchTypes: ["group"],
											hiddenName: "bbx_group_id",
											hiddenFormat: "object_id",
											autoSelectFirst: true
										})
									},
									D = function() {
										$(".picker > *", q).remove();
										var u = $('<select name="bbx_site_id"></select>');
										$.each(x.site, function(F, I) {
											$('<option value="' + I.bbx_site_id + '"></option>').text(I.bbx_site_name).appendTo(u)
										});
										u.appendTo($(".picker", q)).trigger("change")
									},
									B = $(".addGoLink", q).bind("click", function(u) {
										var F = $(this).closest("form").serializeObject();
										F.bbx_outbound_route_map_id = f.bbx_outbound_route_map_id;
										$.postREST("/cudatel/gui/route/restriction", F, function(I) {
											l();
											q.trigger("add", {
												data: I.restriction,
												last: true
											})
										});
										u.preventDefault()
									});
								$(".picker", q).bind("selection", function(u, F) {
									$(".label", B).text("\u201c" + F.label + "\u201d");
									B.show()
								});
								$(".picker", q).delegate("select", "change", function() {
							ind("change", function() {
							if(y.val() && D.val()) {
								var B = v.serializeObject(),
									u = D.val().match(/^([^:]+):(\d+)$/);
								B[u[1]] = u[2];
								$("select", v).attr("disabled", "disabled");
								$.postREST("/cudatel/gui/route/map", B, function(F) {
									v.trigger("add", {
										data: F.map,
										last: true
									})
								})
							}
						});
						D.val("");
						y.val("");
						return v
					},
					position: "last",
					prepare: function() {
						$(this)
					}
				}
			});
			g.html(c)
		};
	$.fn.routeMapList = function(g) {
		var c = this,
			d = g || {};
		$.getTemplate("/cudatel/ajax-html/routeMapList.html", function(b) {
			$.getREST("/cudatel/gui/route/map", {}, function(f) {
				$.getREST("/cudatel/gui/route/route", {}, function(j) {
					$.getREST("/cudatel/gui/gateway/combined", {
						bbx_provider_gateway_flag_outbound: 1
					}, function(n) {
						(function() {
							c.each(function() {
								var l = $(this),
									o = $(b),
									q = $(".staticBody", o);
								a = a || $(".template", o);
								e(l, q, a, f.map, j.route, n.combined, d)
							})
						})()
					})
				})
			})
		});
		this.data("routeMapList", d);
		return this
	}
})();
(function() {
	var a, e = function(g, c, d, b, f) {
			var j = $(".systemPassForm", c).hide(),
				n = f.bbx_outbound_route_map_id;
			$(".rmid", j).val(n);
			$(".scCxbox", j).checks();
			var l = function() {
					$.getREST("/cudatel/gui/route/map", {
						bbx_outbound_route_map_id: n
					}, function(o) {
						if(o.map.restrictions[0]) {
							j.show();
							trueish(o.map.bbx_outbound_route_map_allow_system) ? $(".scCxbox", j).attr("checked", "checked") : $(".scCxbox", j).removeAttr("checked")
						} else j.hide()
					})
				};
			l();
			$(".restrictionList", c).sortList({
				data: b,
				allow: ["add", "remove"],
				rowData: {
					value: function(o) {
						if(o.bbx_site_name) return $("<div></div>").text(o.bbx_site_name).prepend('<img src="/cudatel/images/typeicons/site.png" style="vertical-align: middle; padding-right: 1em" width: "20" height="20" />');
						else if(o.bbx_group_name) return $("<div></div>").text(o.bbx_group_name).prepend('<img src="/cudatel/images/typeicons/group.png" style="vertical-align: middle; padding-right: 1em" width: "20" height="20" />');
						return o.bbx_group_name || o.bbx_site_name || "Unknown restriction"
					},
					render: "html"
				},
				addForm: {
					value: function() {
						var o = $("<div>Please wait...</div>"),
							q = $(".restrictionAddForm", d).clone();
						$.getREST("/cudatel/gui/group/group_count", {
							rows: 1
						}, function(v) {
							$.getREST("/cudatel/gui/site/site", {}, function(x) {
								var y = function() {
										$(".picker > *", q).remove();
										$(".picker", q).html($(".groupInput", d).clone());
										$(".picker > .groupInput", q).extensionPicker({
											searchTypes: ["group"],
											hiddenName: "bbx_group_id",
											hiddenFormat: "object_id",
											autoSelectFirst: true
										})
									},
									D = function() {
										$(".picker > *", q).remove();
										var u = $('<select name="bbx_site_id"></select>');
										$.each(x.site, function(F, I) {
											$('<option value="' + I.bbx_site_id + '"></option>').text(I.bbx_site_name).appendTo(u)
										});
										u.appendTo($(".picker", q)).trigger("change")
									},
									B = $(".addGoLink", q).bind("click", function(u) {
										var F = $(this).closest("form").serializeObject();
										F.bbx_outbound_route_map_id = f.bbx_outbound_route_map_id;
										$.postREST("/cudatel/gui/route/restriction", F, function(I) {
											l();
											q.trigger("add", {
												data: I.restriction,
												last: true
											})
										});
										u.preventDefault()
									});
								$(".picker", q).bind("selection", function(u, F) {
									$(".label", B).text("\u201c" + F.label + "\u201d");
									B.show()
								});
								$(".picker", q).delegate("select", "change", function() {
									$(".label", B).text("\u201c" + $("option:selected", this).text() + "\u201d");
									B.show()
								});
								if(x.site.length && trueish(v.group_count)) {
									$(".type", q).remove();
									$(".restrictionType", q).bind("change", function() {
										switch($(this).val()) {
										case "bbx_site_id":
											D();
											break;
										case "bbx_group_id":
											y()
										}
										setTimeout(function() {
											$(".picker input[type=text], .picker select", q).focus()
										}, 100)
									}).triggerHandler("change")
								} else if(x.site.length) {
									$(".restrictionType", q).remove();
									$(".type", q).html('<img src="/cudatel/images/typeicons/site.png" style="vertical-align: middle" width="20" height="20" /> Site:');
									D()
								} else if(trueish(v.group_count)) {
									$(".restrictionType", q).remove();
									$(".type", q).html('<img src="/cudatel/images/typeicons/group.png" style="vertical-align: middle" width="20" height="20" /> Group:');
									y()
								} else q = $(".cannotRestrict", d).clone();
								o.html(q)
							})
						});
						return o
					},
					render: "html",
					position: "last"
				},
				addLink: {
					value: $('<a class="ops" href="#">Add a Restriction</a>'),
					position: "last"
				},
				hasNoneText: "(All Calls)",
				remove: function(o, q) {
					var v = q.success,
						x = q.error,
						y = q.row.bbx_group_name || q.row.bbx_site_name || "this entry";
					showBlanker({
						title: "Remove " + y + "?",
						text: q.rows.length == 1 ? "Unless new restrictions are added, all calls that match the Call Type will be able to use this route." : "Callers from " + y + " will no longer use this route.",
						buttons: ["Remove", "Cancel"],
						callbacks: [function() {
							var D = $(this);
							D.add(D.siblings("button")).attr("disabled", "disabled");
							$.extend(q.row, {
								bbx_outbound_route_map_id: f.bbx_outbound_route_map_id
							});
							$.deleteREST("/cudatel/gui/route/restriction", q.row, {
								success: function() {
									v();
									D.trigger("closeBlanker");
									l()
								},
								afterError: function() {
									x();
									D.trigger("closeBlanker")
								}
							})
						}, function() {
							x();
							$(this).trigger("closeBlanker")
						}]
					})
				}
			});
			g.html(c)
		};
	$.fn.routeMapRestrictions = function(g) {
		var c = this,
			d = g || {};
		$.getTemplate("/cudatel/ajax-html/routeMapRestrictions.html", function(b) {
			c.each(function() {
				var f = $(this),
					j = $(b),
					n = $(".staticBody", j);
				a = a || $(".template", j);
				e(f, n, a, d.restrictions, d)
			})
		});
		this.data("routeMapRestrictions", d);
		return this
	}
})();
(function(a) {
	a.fn.growable = function() {
		this.each(function() {
			var e = a(this),
				g = e.innerWidth(),
				c = g - e.width();
			e.bind("keyup grow", function() {
				if(e.val()) {
					var d = '<div style="position: absolute; left: -999em;';
					a.each(["font-name", "font-family", "font-size", "font-weight", "font-style"], function() {
						if(e.css(this)) d += " " + this + ":" + e.css(this) + ";"
					});
					d += '"></div>';
					var b = a(d).text(e.val()).appendTo("body");
					b.innerWidth() > g - c ? e.css("width", b.innerWidth() + c + 5 + "px") : e.css("width", "");
					b.remove()
				}
			})
		}).trigger("grow");
		return this
	}
})(jQuery);
(function(a) {
	a.fn.blink = function(e, g) {
		var c = this;
		c.css("visibility", "visible");
		var d = 0,
			b = "visible";
		for(i = 0; i < 2 * e; i++) setTimeout(function() {
			b = b == "visible" ? "hidden" : "visible";
			c.css("visibility", b)
		}, d += g)
	}
})(jQuery);
(function(a) {
	a.fn.serializeObject = function() {
		var e = this.serializeArray(),
			g = {},
			c;
		for(c in e) {
			var d = e[c].name,
				b = e[c].value;
			if(d in g) if(a.isArray(g[d])) g[d].push(b);
			else g[d] = [g[d], b];
			else g[d] = a(".forceArray[name=" + d + "]", this)[0] ? [b] : b
		}
		return g
	};
	a.fn.unserializeObject = function(e, g) {
		var c);
						a(".queueExtension", q).text(format_information(n.extension_value));
						q.appendTo(d)
					}
				}
			});
			a(window).bind("meteor_queue_status", function(j, n) {
				var l = n.json.fifo_action,
					o;
				if(l == "push" && (o = b[n.json.fifo_name]) && o.row) {
					e(c, o.row, o, undefined, {
						caller_id_name: n.json.caller_caller_id_name,
						caller_id_number: n.json.caller_caller_id_number,
						uuid: n.json.unique_id
					}, 0);
					o.row.removeClass("empty");
					a(".queueWaitingCount", o.row).numberDisplay("increment");
					a(".queueCallCount", o.row).numberDisplay("increment")
				} else if(l == "consumer_pop" && (o = b[n.json.fifo_name]) && o.row) {
					l = o.row.find(".boardBox").filter(function() {
						return a(this).data("uuid") == n.json.fifo_caller_uuid
					});
					l.data("agent_uuid", n.json.unique_id);
					a(".agentName", l).text(n.json.bbx_caller_id_name);
					a(".agentExtension", l).text(n.json.bbx_caller_id_number);
					l.removeClass("warning").removeClass("critical");
					l.addClass("oncall");
					a(".callTime", l).timeDisplay(unixTime());
					a(".queueWaitingCount", o.row).numberDisplay("decrement");
					a(".queueActiveAgents", o.row).numberDisplay("increment")
				} else if(l == "timeout" || l == "abort") {
					if((o = b[n.json.fifo_name]) && o.row) {
						l = o.row.find(".boardBox").filter(function() {
							return a(this).data("uuid") == n.json.unique_id
						});
						if(l[0]) {
							a(".queueWaitingCount", o.row).numberDisplay("decrement");
							a(".queueCallCount", o.row).numberDisplay("decrement");
							l.addClass("removed").remove()
						}
						o.row.find(".boardBox").length == 0 && o.row.addClass("empty")
					}
				} else if(l == "bridge-consumer-stop") if((o = b[n.json.fifo_name]) && o.row) {
					l = o.row.find(".boardBox").filter(function() {
						return a(this).data("agent_uuid") == n.json.unique_id
					});
					if(l[0]) {
						a(".queueCallCount", o.row).numberDisplay("decrement");
						a(".queueActiveAgents", o.row).numberDisplay("decrement");
						l.addClass("removed").remove()
					}
					o.row.find(".boardBox").length == 0 && o.row.addClass("empty")
				}
			});
			a(window).bind("meteor_user_status", function(j, n) {
				var l, o;
				if(l = f[n.json.user_id]) {
					var q = undefined;
					if(n.json.last_status_id == "2") q = "increment";
					else if(n.json.status_id == "2") q = "decrement";
					if(q) for(var v in l.fifos) if((o = b[l.fifos[v]]) && o.row) a(".queueTotalAgents", o.row).numberDisplay(q)
				}
			})
		};
	a.fn.queueManager = function() {
		var c = a(this);
		a.getTemplate("/cudatel/ajax-html/queueManager.html", function(d) {
			c.each(function() {
				var b = a(d).appendTo(a(this));
				b.find(".agentList").queueAgentManager({
					template: "/cudatel/ajax-html/queueManagerAgentList.html"
				});
				a(".qamNameTD .name").live("click", function() {
					a(this).parent().find(".qamStatusTD").toggle()
				});
				a(".opToggleAll", b).bind("click", function(f) {
					f.preventDefault();
					b.find(".queueRow.expanded")[0] ? a(".queueRow", b).removeClass("expanded").addClass("collapsed") : a(".queueRow", b).removeClass("collapsed").addClass("expanded")
				});
				g(b)
			})
		});
		return c
	}
})(jQuery);
(function(a) {
	var e = {
		init: function(g) {
			this.data("numberDisplay", {
				value: g
			});
			this.text(g.toString())
		},
		increment: function() {
			var g = this.data("numberDisplay").value + 1;
			this.data("numberDisplay", {
				value: g
			});
			this.text(g.toString())
		},
		decrement: function() {
			var g = this.data("numberDisplay").value - 1;
			this.data("numberDisplay", {
				value: g
			});
			this.text(g.toString())
		},
		set: function(g) {
			this.data("numberDisplay", {
				value: g
			});
			this.text(g.toString())
		}
	};
	a.fn.numberDisplay = function(g) {
		var c = arguments;
		return this.each(function() {
			if(a(this).data("numberDisplay")) if(e[g]) return e[g].apply(a(this), Array.prototype.slice.call(c, 1));
			return e.init.apply(a(this), c)
		})
	}
})(jQuery);
(function(a) {
	var e = {
		precision: 2,
		format: "medium"
	};
	a.fn.timeDisplay = function(g, c) {
		return this.each(function() {
			c || (c = {});
			c = a.extend(e, c);
			a(this).text(a.timeSince(g, c));
			a(this).data("timeDisplay") || a(window).bind("tick", {
				target: a(this)
			}, function(d) {
				d = d.data.target;
				d.text(a.timeSince(d.data("timeDisplay"), c))
			});
			a(this).data("timeDisplay", g)
		})
	}
})(jQuery);
(function(a) {
	a.fn.markInvalid = function() {
		return this.each(function() {
			a(this).css("border-color", "red")
		})
	};
	a.fn.clearInvalid = function() {
		return this.each(function() {
			a(this).css("border-color", "")
		})
	}
})(jQuery);
(function(a) {
	var e = function(g) {
			var c = a(".template", g),
				d = a(".staticBody", g),
				b = function() {
					a.getREST("/cudatel/gui/phone/cisco/list", function(n) {
						n.list.sort(function(o, q) {
							return cmp(o.model, q.model)
						});
						var l = a(".ciscoFirmwareList > tbody", d).empty();
						a.each(n.list, function() {
							var o = this.is_installed == "1" ? '<img src="/cudatel/images/monitor/online.png" alt="Yes" title="Installed">' : "",
								q = a(".ciscoRow", c).clone();
							this.is_installed == "1" && q.addClass("isInstalled");
							a(".model", q).text(this.model);
							a(".cfFile", q).text(this.file);
							a(".installed", q).html(o);
							q.appendTo(l)
						})
					})
				};
			b();
			a(".ciscoFileInput", d).clone();
			var f = a("button[type=submit]", d);
			f.attr("disabled", "disabled");
			var j;
			a(".ciscoUploadForm", d).ajaxForm({
				iframe: true,
				beforeSubmit: function() {
					j = showUploadBlanker();
					f.attr("disabled", "disabled")
				},
				success: function(n) {
					j.trigger("closeBlanker");
					if(typeof n === "string") {
						var l = n.match(/\{.*\}/);
						if(l && l[0]) n = l[0]
					}
					try {
						var o = a.parseJSON(n);
						o.error && showError("Cisco Firmware file upload failed: " + o.error)
					} catch(q) {
						showError("Cisco Firmware file upload failed")
					} finally {
						b()
					}
				},
				error: function(n, l, o) {
					console_log("Failure");
					j.trigger("closeBlanker");
					o == "timeout" ? showError("Cisco Firmware file upload failed: Upload timed out") : showError("Cisco Firmware file upload failed");
					b()
				}
			});
			a(".ciscoFileInput", d).bind("change", function() {
				a("button[type=submit]", d).removeAttr("disabled")
			})
		};
	a.fn.ciscoFirmware = function(g) {
		var c = this;
		g = g || {};
		a.getTemplate("/cudatel/ajax-html/settings/cisco.html", function(d) {
			c.each(function() {
				var b = a(d).replaceAll(this);
				e(b, g)
			})
		});
		return this
	}
})(jQuery);
(function(a) {
	var e = function(d, b, f, j) {
			if(!b) j = f = b = "";
			d.find(".hasNone").hide();
			var n = d.find(".staticRoute").length;
			b = a("<div class='staticRoute'>IP Address:<input type='text' class='requiredIfDirty' name='subnet_ip" + n + "' value='" + b + "'/> Subnet Mask: <input class='requiredIfDirty' type='text' name='subnet_mask" + n + "' value='" + f + "'/> Gateway <input class='requiredIfDirty' type='text' name='subnet_gateway" + n + "' value='" + j + "'><button class='delete'>Delete</button>").appendTo(d);
			b.find(".delete").bind("click", function(l) {
				a(l.target).closest("div").hide().find("input[type=hidden]").each(function() {
					a(this).addClass("dirty").data("widget").ipv4Input("updateValue", "")
				});
				d.find("div.staticRoute:visible")[0] || d.find(".hasNone").show()
			});
			b.find("input").ipv4Input()
		},
		g = function(d, b) {
			d.data("widget") && d.data("widgetType") ? d.data("widget")[d.data("widgetType")]("disable", !b) : d.attr("disabled", !b)
		},
		c = function(d) {
			g(a("input[name=external_inet_ip]", this), trueish(d.lan_behind_nat));
			g(a("input[name=wan_ip]", this), trueish(d.wan_enabled));
			g(a("input[name=wan_netmask]", this), trueish(d.wan_enabled));
			g(a("input[name=wan_gateway]", this), trueish(d.wan_enabled) && !trueish(d.system_force_internal));
			g(a("input[name=system_gateway]", this), !trueish(d.wan_enabled) || trueish(d.wan_enabled) && trueish(d.system_force_internal));
			g(a("input[name=wan_behind_nat]", this), trueish(d.wan_enabled));
			g(a("input[name=system_force_internal]", this), trueish(d.wan_enabled));
			g(a("input[name=external_wan_ip]", this), trueish(d.wan_behind_nat));
			d.lan_behind_nat && a("input[name=external_inet_ip]").data("originalValue", "");
			d.wan_behind_nat && a("input[name=external_wan_ip]").data("originalValue", "")
		};
	a.fn.networkSettings = function() {
		return this.each(function() {
			var d = a(this);
			a.getREST("/cudatel/gui/ha_ip/ha_ip", {}, function(b) {
				var f = trueish(b.ha_ip.ha_active) || trueish(b.ha_ip.ha_in_progress);
				a.getTemplate("/cudatel/ajax-html/settings/network_settings.html", function(j) {
					j = a(j);
					var n = a(".staticBody", j);
					a(".template", j);
					a("input[type=checkbox]", n).checkbox();
					a.mask.definitions.n = "[-a-zA-Z0-9]";
					j = [];
					for(var l = 255; l--;) j.push("n");
					j = j.join("");
					a("input[name=system_default_hostname]", n).mask("?" + j, {
						placeholder: ""
					});
					a("form", n).formModule({
						dirty: c
					}).bind("built", function() {
						if(f) {
							a(".cannotProceedWarning", n).text("Network settings cannot be changed while a High Availability Pair is active.").show();
							a(this).find("input,textarea,select,button").disable("haPair");
							a(this).find(".IPv4Input").addClass("disabled")
						} else a(".cannotProceedWarning", n).empty().hide();
						a(".continue", n).bind("click", function(o) {
							o.preventDefault();
							o.stopPropagation();
							var q = function() {
									a("form", n).formModule("submit", {
										success: function() {
											n.trigger("submitted")
										}
									})
								};
							d.closest("#screen-firstrun1")[0] ? q() : showBlanker({
								title: "Apply Settings?",
								text: "Applying network settings may drop any calls currently in progress. Continue?",
								buttons: ["Apply Settings", "Cancel"],
								callbacks: [function() {
									q();
									blankerCancel.call(this)
								},
								blankerCancel]
							})
						});
						a(".addStaticRoute", n).bind("click", function(o) {
							o.preventDefault();
							o = a(".staticRoutes .list", n);
							e(o)
						});
						a(".opAutoLan", n).bind("click", function(o) {
							o.preventDefault();
							a.getREST("/cudatel/gui/system/stun", {
								ip: a("input[name=system_ip]", n).val()
							}, function(q) {
								a("input[name=external_inet_ip]", n).addClass("dirty").data("widget").ipv4Input("updateValue", q.ip)
							})
						});
						a(".opAutoWan", n).bind("click", function(o) {
							o.preventDefault();
							a.getREST("/cudatel/gui/system/stun", {
								ip: a("input[name=wan_ip]", n).val()
							}, function(q) {
								a("input[name=external_wan_ip]", n).addClass("dirty").data("widget").ipv4Input("updateValue", q.ip)
							})
						});
						d.append(n)
					}).bind("deserialize", function(o, q) {
						a(".staticRoutes .list .staticRoute", n).remove();
						if(q.subnet_ip.length) for(var v = a(".staticRoutes .list", n), x = q.subnet_ip.length, y = 0; y < x; y++) e(v, q.subnet_ip[y], q.subnet_mask[y], q.subnet_gateway[y]);
						else a(".staticRoutes .list .hasNone", n).show()
					})
				})
			})
		})
	}
})(jQuery);
(function(a) {
	var e = function(g, c) {
			g.find(".pleaseWait").hide();
			if(c.activated == 1) {
				g.find(".activated").show();
				g.trigger("activated")
			} else {
				var d = g.find(".notactivated");
				if(c.activation_online) {
					a(".activationLinkWrapper", g).html('<a href="' + c.activation_url + '&connected_update=1" target="_blank">Click here to complete the activation form (opens in a new window)</a>').show();
					var b = setInterval(function() {
						a.getREST("/cudatel/gui/sysinfo/activation", function(f) {
							if(f.activation.activated == 1) {
								g.find(".notactivated").hide();
								g.find(".activated").show();
								g.trigger("activated");
								clearInterval(b)
				, this), !trueish(d.wan_enabled) || trueish(d.wan_enabled) && trueish(d.system_force_internal));
			g(a("input[name=wan_behind_nat]", this), trueish(d.wan_enabled));
			g(a("input[name=system_force_internal]", this), trueish(d.wan_enabled));
			g(a("input[name=external_wan_ip]", this), trueish(d.wan_behind_nat));
			d.lan_behind_nat && a("input[name=external_inet_ip]").data("originalValue", "");
			d.wan_behind_nat && a("input[name=external_wan_ip]").data("originalValue", "")
		};
	a.fn.networkSettings = function() {
		return this.each(function() {
			var d = a(this);
			a.getREST("/cudatel/gui/ha_ip/ha_ip", {}, function(b) {
				var f = trueish(b.ha_ip.ha_active) || trueish(b.ha_ip.ha_in_progress);
				a.getTemplate("/cudatel/ajax-html/settings/network_settings.html", function(j) {
					j = a(j);
					var n = a(".staticBody", j);
					a(".template", j);
					a("input[type=checkbox]", n).checkbox();
					a.mask.definitions.n = "[-a-zA-Z0-9]";
					j = [];
					for(var l = 255; l--;) j.push("n");
					j = j.join("");
					a("input[name=system_default_hostname]", n).mask("?" + j, {
						placeholder: ""
					});
					a("form", n).formModule({
						dirty: c
					}).bind("built", function() {
						if(f) {
							a(".cannotProceedWarning", n).text("Network settings cannot be changed while a High Availability Pair is active.").show();
							a(this).find("input,textarea,select,button").disable("haPair");
							a(this).find(".IPv4Input").addClass("disabled")
						} else a(".cannotProceedWarning", n).empty().hide();
						a(".continue", n).bind("click", function(o) {
							o.preventDefault();
							o.stopPropagation();
							var q = function() {
									a("form", n).formModule("submit", {
										success: function() {
											n.trigger("submitted")
										}
									})
								};
							d.closest("#screen-firstrun1")[0] ? q() : showBlanker({
								title: "Apply Settings?",
								text: "Applying network settings may drop any calls currently in progress. Continue?",
								buttons: ["Apply Settings", "Cancel"],
								callbacks: [function() {
									q();
									blankerCancel.call(this)
								},
								blankerCancel]
							})
						});
						a(".addStaticRoute", n).bind("click", function(o) {
							o.preventDefault();
							o = a(".staticRoutes .list", n);
							e(o)
						});
						a(".opAutoLan", n).bind("click", function(o) {
							o.preventDefault();
							a.getREST("/cudatel/gui/system/stun", {
								ip: a("input[name=system_ip]", n).val()
							}, function(q) {
								a("input[name=external_inet_ip]", n).addClass("dirty").data("widget").ipv4Input("updateValue", q.ip)
							})
						});
						a(".opAutoWan", n).bind("click", function(o) {
							o.preventDefault();
							a.getREST("/cudatel/gui/system/stun", {
								ip: a("input[name=wan_ip]", n).val()
							}, function(q) {
								a("input[name=external_wan_ip]", n).addClass("dirty").data("widget").ipv4Input("updateValue", q.ip)
							})
						});
						d.append(n)
					}).bind("deserialize", function(o, q) {
						a(".staticRoutes .list .staticRoute", n).remove();
						if(q.subnet_ip.length) for(var v = a(".staticRoutes .list", n), x = q.subnet_ip.length, y = 0; y < x; y++) e(v, q.subnet_ip[y], q.subnet_mask[y], q.subnet_gateway[y]);
						else a(".staticRoutes .list .hasNone", n).show()
					})
				})
			})
		})
	}
})(jQuery);
(function(a) {
	var e = function(g, c) {
			g.find(".pleaseWait").hide();
			if(c.activated == 1) {
				g.find(".activated").show();
				g.trigger("activated")
			} else {
				var d = g.find(".notactivated");
				if(c.activation_online) {
					a(".activationLinkWrapper", g).html('<a href="' + c.activation_url + '&connected_update=1" target="_blank">Click here to complete the activation form (opens in a new window)</a>').show();
					var b = setInterval(function() {
						a.getREST("/cudatel/gui/sysinfo/activation", function(f) {
							if(f.activation.activated == 1) {
								g.find(".notactivated").hide();
								g.find(".activated").show();
								g.trigger("activated");
								clearInterval(b)
							}
						})
					}, 2E3)
				} else {
					a(".serialNumber", g).text(c.system_serial);
					a(".activationURL", g).attr("href", c.activation_url);
					a(".offlineActivationForm", g).bind("submit", function(f) {
						f.preventDefault();
						console_log(a(this).serialize());
						a.postREST("/cudatel/gui/sysinfo/activation", a(this).serializeObject(), {
							success: function() {
								g.find(".notactivated").hide();
								g.find(".activated").show();
								g.trigger("activated")
							}
						})
					});
					a(".offlineActivation", g).show()
				}
				d.show();
				g.trigger("notactivated")
			}
		};
	a.fn.activation = function() {
		return this.each(function() {
			var g = a(this);
			a.getTemplate("/cudatel/ajax-html/settings/activation.html", function(c) {
				g.html(c);
				a.getREST("/cudatel/gui/sysinfo/activation", function(d) {
					e(g, d.activation)
				})
			})
		})
	}
})(jQuery);

function eavesdropUI(a) {
	var e = showPopup("eavesdrop", {}, true);
	e.bind("popup_ready", function() {
		var g = false;
		$(".listener", e).extensionPicker({
			searchTypes: ["user", "phone"],
			hiddenName: "listener",
			hiddenFormat: "number",
			autoSelectFirst: true
		}).bind("selection", function() {
			$("button[type=submit]", e).removeAttr("disabled");
			g = true
		}).bind("noselection", function() {
			$("button[type=submit]", e).attr("disabled", "disabled");
			g = false
		});
		$("form", e).bind("submit", function(c) {
			c.preventDefault();
			g && $.postREST("/cudatel/gui/calls/eavesdrop", {
				listener: $("input[name=listener]", e).val(),
				uuid: a.uuid,
				cid_number: a.cid_number,
				ceid_number: a.ceid_number
			}, function() {
				e.trigger("close_request")
			})
		})
	})
};
(function(a) {
	var e = {
		init: function() {
			return this.each(function() {
				var g = a(this);
				a(this).wrap('<span class="checkboxWrap"/>');
				var c = g.attr("checked") ? 1 : 0;
				g.attr("disabled");
				var d = a(this).parent();
				d.html('<input type="checkbox"/><input type="hidden" name="' + g.attr("name") + '" value="' + c + '"' + (g.attr("id") ? ' id="' + g.attr("id") + '"' : "") + " />");
				var b = a("input[type=hidden]", d);
				a.each(["dirty", "required", "requiredIfDirty"], function(f, j) {
					g.hasClass(j) && b.addClass(j)
				});
				a("input[type=checkbox]", d).attr("checked", g.attr("checked")).bind("change", function(f, j) {
					f.preventDefault();
					d.find("input[type=hidden]").val(f.target.checked ? 1 : 0);
					d.trigger("change", j);
					a("input[type=hidden]", d).trigger("dirty").trigger("change")
				});
				a("input[type=hidden]", d).data("widget", d).data("widgetType", "checkbox").data("originalValue", c)
			})
		},
		updateValue: function(g) {
			a("input[type=hidden]", this).val(g ? 1 : 0).data("originalValue", !! g);
			a("input[type=checkbox]", this).attr("checked", trueish(g)).trigger("change")
		},
		disable: function(g) {
			a("input[type=checkbox], input[type=hidden]", this).attr("disabled", !! g)
		}
	};
	a.fn.checkbox = function(g) {
		if(e[g]) return e[g].apply(this, Array.prototype.slice.call(arguments, 1));
		else if(typeof g === "object" || !g) return e.init.apply(this, arguments);
		else a.error("Method " + g + " does not exist on jQuery.checkbox")
	}
})(jQuery);
(function(a) {
	var e = function(d) {
			return d.split("/").pop()
		},
		g = function(d, b) {
			d || (d = this.data("formModule") || {});
			var f = this;
			if(!f.hasClass("dirty") && !f.find("input.required")) d.success && d.success();
			else {
				var j = f.data("preSubmit");
				if(a.isFunction(j) && !b) if(!j(function() {
					g.call(f, d, true)
				})) return;
				var n = {};
				a("input[name]:checkbox:not(:checked)", f).filter(".dirty, .required, .requiredIfDirty").each(function(o, q) {
					var v = a(q),
						x = v.data("unchecked");
					x = x === undefined ? d.unchecked : x;
					n[v.attr("name")] = x
				});
				j = a.extend(true, {}, n, f.data("formData") || {});
				var l = f.getFormMethod() || "POST";
				if(l === "get" && a.browser.msie && parseInt(a.browser.version) <= 7) l = (l = f[0].outerHTML.match(/method="?([^ "]+)/)) ? l[1] : "POST";
				f.ajaxSubmit({
					accept: "application/json",
					type: l,
					dataType: "json",
					data: j,
					filterSubmit: function(o, q) {
						for(var v = o.length, x = [], y = 0; y < v; y++) if(a("[name=" + o[y].name + "].dirty, [name=" + o[y].name + "].required, [name=" + o[y].name + "].requiredIfDirty", q).length) x.push(o[y]);
						else f.data("formData") && f.data("formData")[o[y].name] && x.push(o[y]);
						return x
					},
					success: function(o) {
						var q;
						if(q = o[e(f.attr("action"))]) {
							f.unserializeObject(q);
							f.tagOriginalValues();
							f.triggerHandler("deserialize", q);
							f.removeClass("dirty");
							f.find("input").removeClass("dirty invalid");
							f.triggerHandler("undirtyForm");
							d.success && d.success();
							f.trigger("formModuleSuccess", o)
						} else console_log("unexpected result ", o)
					},
					error: function(o, q, v) {
						try {
							var x = a.parseJSON(o.responseText);
							if(x.error && a.isPlainObject(x.error)) {
								var y = Infinity;
								a.each(x.error, function(B, u) {
									var F = a(":input[name=" + B + "]", f);
									if(F.offset().top < y) y = F.offset().top;
									if(F.data("widget")) F = F.data("widget").addClass("invalid");
									F.addClass("invalid");
									F.qtipMessage({
										style: "failure",
										message: u
									})
								});
								y < Infinity && a(window).scrollTop() > y - 130 && a(window).scrollTop(y - 130)
							} else typeof x.error === "string" ? showError(x.error) : console_log("unexpected json error data", x)
						} catch(D) {
							_defaultAJAXErrorHandler(o, q, v)
						}
						d.error && d.error()
					}
				})
			}
		},
		c = {
			init: function(d) {
				d = a.extend(true, {
					getCurrent: true,
					unchecked: "0",
					formData: {}
				}, d || {});
				this.data("formModule", d);
				return this.each(function() {
					var b = a(this);
					if(!b.data("widgetType")) {
						b.data("widgetType", "formModule");
						b.data("formData", d.formData);
						b.data("preSubmit", d.preSubmit);
						var f = function(j) {
								d.dirty && d.dirty.call(b, j);
								b.find("select.checkslider").checkslider();
								b.find("input.ipv4").ipv4Input();
								a(".fmWidget", b).find("input,select,textarea").addClass("inFmWidget");
								a("input,select,textarea").not(".inFmWidget").addClass("notInFmWidget");
								j = function(n) {
									a(n.target).trigger("dirty")
								};
								b.delegate("input[name]", "keyup change", j).delegate("select[name]", "change", j).delegate(":checkbox", "click", j);
								b.delegate("input[name], select[name]", "dirty", function(n) {
									n.preventDefault();
									n = a(n.target);
									if(d.dirty) {
										if(d.dirty.call(b, b.serializeObject()) === false) {
											b.find(".dirty").removeClass("dirty");
											b.triggerHandler("undirtyForm");
											return
										}
										a.each(b.serializeObject(), function(q) {
											q = a("[name=" + q + "]", b);
											if(q.is(":checkbox")) {
												var v = q.data("wasChecked"),
													x = q.is(":checked");
												q.data("wasChecked", !! x);
												!v == !! x && q.addClass("dirty")
											} else if(!q.data("originalValue") !== undefined && q.val() != q.data("originalValue") || q.data("originalValue") === undefined && q.val() !== undefined) {
												q.addClass("dirty");
												q.data("widget") && q.data("widget").addClass("dirty")
											}
										})
									}
									if(n.is(":checkbox")) {
										var l = n.data("wasChecked"),
											o = n.is(":checked");
										l = !l === !! o;
										n.toggleClass("dirty", l);
										n.removeClass("invalid");
										b.triggerHandler((l ? "" : "un") + "dirtyForm")
									} else if(n.data("originalValue") != n.val() || n.data("originalValue") === undefined) {
										n.addClass("dirty").removeClass("invalid");
										n.data("widget") && n.data("widget").addClass("dirty").removeClass("invalid"age,
				style: {
					name: g.style,
					tip: g.tip || "bottomRight"
				},
				position: {
					corner: g.position || {
						target: "leftMiddle",
						tooltip: "bottomRight"
					}
				},
				show: {
					ready: true
				},
				hide: {
					when: {
						event: "dummy_null_event"
					}
				},
				api: {
					onHide: function() {
						this.destroy()
					},
					onShow: function() {
						var d = this;
						setTimeout(function() {
							d.hide()
						}, 5E3)
					}
				}
			};
			$elem.offset().left < 200 && a.extend(true, c, {
				style: {
					tip: "leftBottom"
				},
				position: {
					corner: {
						target: "rightMiddle",
						tooltip: "bottomLeft"
					}
				}
			});
			a(this).qtip(c)
		});
		return this
	}
})(jQuery);
(function(a) {
	a.fn.includeList = function() {
		var e = this;
		a.getTemplate("/cudatel/ajax-html/widget/includeList.html", function(g) {
			e.each(function() {
				var c = a(this),
					d = a(g),
					b = a(".staticBody", d);
				a(".template", d);
				c.empty().append(b)
			})
		});
		return this
	}
})(jQuery);
(function(a) {
	var e = {
		e1: [31, 15],
		t1: [23, false]
	};
	e.euroisdn = e.e1;
	e["5ess"] = e.t1;
	e.national = e.t1;
	e.dms100 = e.t1;
	(function() {
		var g = function(d, b, f, j) {
				var n = e[j.type] || e.t1,
					l = n[1] || Infinity,
					o = f = false;
				if(j.value) o = j.value.toString().match(/^1(?:(?:-([0-9]+)(?:,([0-9]+)(?:-([0-9]+))?)?)?)?$/);
				if(o && o[1] && o[2] && parseInt(o[1], 10) === l - 1 && parseInt(o[2], 10) === l + 1) f = parseInt(o[3], 10) || o[2].parseInt(10);
				else if(o && o[1] && !o[2]) f = o[1];
				else if(o) f = 1;
				else j.value || (f = n[0]);
				var q = a(".tdmChannelSelect", b);
				if(f === n[0]) q.val("");
				else f && a(".tdmChannelOptManual", q).attr("selected", "selected");
				q.bind("change", function(v, x) {
					if(a(this).val() === "") {
						a(".tdmChannelSliderWrap", b).hide();
						a(".tdmChannelSlider", b).slider("destroy").empty()
					} else {
						a(".tdmChannelSliderWrap", b).show();
						var y;
						y = x && x.set ? x.set : n[0] - (n[1] && n[0] >= n[1] ? 1 : 0);
						a(".tdmChannelSlider", b).slider({
							min: 1,
							max: n[0] - (n[1] ? 1 : 0),
							range: "min",
							value: y
						}).bind("slide", function(D, B) {
							var u = B.value,
								F = "1-" + u;
							if(u === 1) F = "1";
							if(l && u >= l) {
								F = "1-" + (l - 1) + ",";
								F += u === l ? u + 1 : l + 1 + "-" + (u + 1)
							}
							a(".tdmChannelOptManual", q).val(F);
							a(".tdmChannelSliderDisplay", b).text(F.replace(/,/, ", ").replace(/-/, "\u2013"))
						}).triggerHandler("slide", {
							value: y
						})
					}
				}).triggerHandler("change", {
					set: f
				});
				d.html(b)
			},
			c = function(d, b) {
				a.extend(true, d, b);
				a(".tdmChannelSelect option:eq(0)", this).attr("selected", "selected");
				a(".tdmChannelSelect", this).trigger("change");
				return this
			};
		a.fn.tdmChannelSelector = function(d) {
			var b = this,
				f = {
					reset: c
				};
			if(f[d]) {
				var j = this.data("tdmChannelSelector");
				if(typeof j === "undefined") {
					this.data("tdmChannelSelector", {});
					j = this.data("tdmChannelSelector")
				}
				return f[d].apply(this, [].concat(j, Array.prototype.slice.call(arguments, 1)))
			} else if(d && typeof d !== "object") {
				console_log("Method does not exist in plugin tdmChannelSelector");
				return this
			}
			var n = d || {};
			a.getTemplate("/cudatel/ajax-html/tdmChannelSelector.html", function(l) {
				b.each(function() {
					var o = a(this),
						q = a(l),
						v = a(".staticBody", q);
					q = a(".template", q);
					g(o, v, q, n)
				})
			});
			this.data("tdmChannelSelector", n);
			return this
		}
	})()
})(jQuery);
(function(a) {
	var e = function(c, d, b) {
			b.name = b.name || {};
			b.name = a.extend({}, {
				force: "bbx_provider_gateway_flag_force_caller_id",
				number: "bbx_provider_gateway_caller_id"
			}, b.name);
			a(".radioNever, .radioSometimes, .radioAlways", d).each(function() {
				var j = a(this),
					n = j.attr("class"),
					l = !! stringContains("Always", n);
				n = a('<input name="' + b.name.force + '" type="radio" class="' + n + '" value="' + (l ? "1" : "0") + '" />');
				j.replaceWith(n)
			});
			if(trueish(b.force)) a(".radioAlways", d).attr("checked", "checked");
			else b.number ? a(".radioSometimes", d).attr("checked", "checked") : a(".radioNever", d).attr("checked", "checked");
			var f = a('<input type="text" class="txtNumber" name="' + b.name.number + '" />').val(b.number || "");
			f.mask("?99999999999999999999", {
				placeholder: ""
			});
			a(".txtNumber", d).replaceWith(f);
			a("input", d).bind("change", function() {
				c.cidNumberSelector("rescan")
			});
			c.html(d).cidNumberSelector("rescan")
		},
		g = function() {
			if(a("input.radioNever:checked", this).not("[disabled]")[0]) {
				var c = a(".txtNumber", this);
				c.attr("disabled", "disabled");
				a(".hidNumber", this)[0] || c.after('<input class="hidNumber" type="hidden" name="' + c.attr("name") + '" value="" />')
			} else {
				a(".txtNumber", this).removeAttr("disabled");
				a(".hidNumber", this).remove()
			}
			return this
		};
	a.fn.cidNumberSelector = function(c) {
		var d = this,
			b = {
				rescan: g
			};
		if(b[c]) {
			var f = this.data("cidNumberSelector");
			if(typeof f === "undefined") {
				this.data("cidNumberSelector", {});
				f = this.data("cidNumberSelector")
			}
			return b[c].apply(this, [].concat(f, Array.prototype.slice.call(arguments, 1)))
		} else if(c && typeof c !== "object") {
			console_log("Method does not exist in plugin cidNumberSelector");
			return this
		}
		var j = c || {};
		a.getTemplate("/cudatel/ajax-html/cidNumberSelector.html", function(n) {
			d.each(function() {
				var l = a(this),
					o = a(n);
				e(l, o, j)
			})
		});
		this.data("cidNumberSelector", j);
		return this
	}
})(jQuery);
(function(a) {
	var e = function(c, d, b, f) {
			b = f.url || "/cudatel/gui/gateway/external";
			var j = {};
			if(f.bbx_provider_gateway_id) j.bbx_provider_gateway_id = f.bbx_provider_gateway_id;
			else if(f.bbx_tdm_card_port_id) j.bbx_tdm_card_port_id = f.bbx_tdm_card_port_id;
			var n = a(".externalForm", d);
			n.ajaxForm({
				url: b,
				data: j,
				beforeSerialize: function() {
					n.formQtipMessage({
						style: "notice"
					})
				},
				success: function(l) {
					n.formQtipMessage({
						style: "success"
					});
					a("input[type=text],textarea", n).val("");
					l.error > 0 && showError(l.error + " external numbers could not be created");
					a.getREST("/cudatel/gui/gateway/external", j, function(o) {
						c.providerExternals("refresh", {
							maps: o.external
						})
					})
				},
				afterError: function() {
					n.formQtipMessage({
						style: "failure"
					})
				},
				accept: "application/json"
			});
			a(".opAddNumbers", d).one("click", function(l) {
				l.preventDefault();
				a(this).remove();
				n.show()
			});
			c.html(d);
			c.providerExternals("refresh")
		},
		g = function(c, d) {
			a.extend(c, d || {});
			var b = c.maps,
				f = this,
				j = a(".providerExternals", f),
				n = c.template,
				l = c.url || "/cudatel/gui/gateway/external",
				o = {};
			if(c.bbx_provider_gateway_id) o.bbx_provider_gateway_id = c.bbx_provider_gateway_id;
			else if(c.bbx_tdm_card_port_id) o.bbx_tdm_card_port_id = c.bbx_tdm_card_port_id;
			if(b && b[0]) {
				var q = a(".extNums", n).clone();
				a.each(b, function(v, x) {
					var y = a('<li class="hlButton"></li>');
					y.text(format_information(x.bbx_extension_value));
					y.appendTo(q);
					y.contextMenu([{
						title: "Remove External Number",
						fn: function() {
							var D = {};
							if(x.bbx_provider_gateway_id && x.bbx_extension_id) {
								D.bbx_provider_gateway_id = x.bbx_provider_gateway_id;
								D.bbx_extension_id = x.bbx_extension_id
							} else if(x.bbx_tdm_card_port_id && x.bbx_extension_id) {
								D.bbx_tdm_card_port_id = x.bbx_tdm_card_port_id;
								D.bbx_extension_id = x.bbx_extension_id
							}
							a.deleteREST(l, D, {
								complete: function() {
									a.getREST("/cudatel/gur("class"),
					l = !! stringContains("Always", n);
				n = a('<input name="' + b.name.force + '" type="radio" class="' + n + '" value="' + (l ? "1" : "0") + '" />');
				j.replaceWith(n)
			});
			if(trueish(b.force)) a(".radioAlways", d).attr("checked", "checked");
			else b.number ? a(".radioSometimes", d).attr("checked", "checked") : a(".radioNever", d).attr("checked", "checked");
			var f = a('<input type="text" class="txtNumber" name="' + b.name.number + '" />').val(b.number || "");
			f.mask("?99999999999999999999", {
				placeholder: ""
			});
			a(".txtNumber", d).replaceWith(f);
			a("input", d).bind("change", function() {
				c.cidNumberSelector("rescan")
			});
			c.html(d).cidNumberSelector("rescan")
		},
		g = function() {
			if(a("input.radioNever:checked", this).not("[disabled]")[0]) {
				var c = a(".txtNumber", this);
				c.attr("disabled", "disabled");
				a(".hidNumber", this)[0] || c.after('<input class="hidNumber" type="hidden" name="' + c.attr("name") + '" value="" />')
			} else {
				a(".txtNumber", this).removeAttr("disabled");
				a(".hidNumber", this).remove()
			}
			return this
		};
	a.fn.cidNumberSelector = function(c) {
		var d = this,
			b = {
				rescan: g
			};
		if(b[c]) {
			var f = this.data("cidNumberSelector");
			if(typeof f === "undefined") {
				this.data("cidNumberSelector", {});
				f = this.data("cidNumberSelector")
			}
			return b[c].apply(this, [].concat(f, Array.prototype.slice.call(arguments, 1)))
		} else if(c && typeof c !== "object") {
			console_log("Method does not exist in plugin cidNumberSelector");
			return this
		}
		var j = c || {};
		a.getTemplate("/cudatel/ajax-html/cidNumberSelector.html", function(n) {
			d.each(function() {
				var l = a(this),
					o = a(n);
				e(l, o, j)
			})
		});
		this.data("cidNumberSelector", j);
		return this
	}
})(jQuery);
(function(a) {
	var e = function(c, d, b, f) {
			b = f.url || "/cudatel/gui/gateway/external";
			var j = {};
			if(f.bbx_provider_gateway_id) j.bbx_provider_gateway_id = f.bbx_provider_gateway_id;
			else if(f.bbx_tdm_card_port_id) j.bbx_tdm_card_port_id = f.bbx_tdm_card_port_id;
			var n = a(".externalForm", d);
			n.ajaxForm({
				url: b,
				data: j,
				beforeSerialize: function() {
					n.formQtipMessage({
						style: "notice"
					})
				},
				success: function(l) {
					n.formQtipMessage({
						style: "success"
					});
					a("input[type=text],textarea", n).val("");
					l.error > 0 && showError(l.error + " external numbers could not be created");
					a.getREST("/cudatel/gui/gateway/external", j, function(o) {
						c.providerExternals("refresh", {
							maps: o.external
						})
					})
				},
				afterError: function() {
					n.formQtipMessage({
						style: "failure"
					})
				},
				accept: "application/json"
			});
			a(".opAddNumbers", d).one("click", function(l) {
				l.preventDefault();
				a(this).remove();
				n.show()
			});
			c.html(d);
			c.providerExternals("refresh")
		},
		g = function(c, d) {
			a.extend(c, d || {});
			var b = c.maps,
				f = this,
				j = a(".providerExternals", f),
				n = c.template,
				l = c.url || "/cudatel/gui/gateway/external",
				o = {};
			if(c.bbx_provider_gateway_id) o.bbx_provider_gateway_id = c.bbx_provider_gateway_id;
			else if(c.bbx_tdm_card_port_id) o.bbx_tdm_card_port_id = c.bbx_tdm_card_port_id;
			if(b && b[0]) {
				var q = a(".extNums", n).clone();
				a.each(b, function(v, x) {
					var y = a('<li class="hlButton"></li>');
					y.text(format_information(x.bbx_extension_value));
					y.appendTo(q);
					y.contextMenu([{
						title: "Remove External Number",
						fn: function() {
							var D = {};
							if(x.bbx_provider_gateway_id && x.bbx_extension_id) {
								D.bbx_provider_gateway_id = x.bbx_provider_gateway_id;
								D.bbx_extension_id = x.bbx_extension_id
							} else if(x.bbx_tdm_card_port_id && x.bbx_extension_id) {
								D.bbx_tdm_card_port_id = x.bbx_tdm_card_port_id;
								D.bbx_extension_id = x.bbx_extension_id
							}
							a.deleteREST(l, D, {
								complete: function() {
									a.getREST("/cudatel/gui/gateway/external", o, function(B) {
										f.providerExternals("refresh", {
											maps: B.external
										})
									})
								}
							})
						}
					}], {
						autoSelectFirst: false
					})
				});
				a(".externals", j).html(q)
			} else a(".noExts", n).clone().appendTo(a(".externals", j).empty());
			return this
		};
	a.fn.providerExternals = function(c) {
		var d = this,
			b = {
				refresh: g
			};
		if(b[c]) {
			var f = this.data("providerExternals");
			if(typeof f === "undefined") {
				this.data("providerExternals", {});
				f = this.data("providerExternals")
			}
			return b[c].apply(this, [].concat(f, Array.prototype.slice.call(arguments, 1)))
		} else if(c && typeof c !== "object") {
			console_log("Method does not exist in plugin providerExternals");
			return this
		}
		var j = c || {};
		this.data("providerExternals", j);
		a.getTemplate("/cudatel/ajax-html/providerExternals.html", function(n) {
			d.each(function() {
				var l = a(this),
					o = a(n),
					q = a(".staticBody", o);
				o = a(".template", o);
				j.template = o;
				e(l, q, o, j)
			})
		});
		return this
	}
})(jQuery);
(function(a) {
	var e, g = function(n, l, o, q) {
			var v = "|" + (l.allow || []).join("|") + "|",
				x = n.children("ul");
			a.isArray(o) || (o = [o]);
			a.each(o, function(D, B) {
				var u = a('<li class="sortListNormalRow"></li>').html(a(".row", e).clone()).addClass("new");
				u.data("rowData", B);
				q ? u.appendTo(x) : u.prependTo(x);
				var F;
				F = typeof l.rowData.value === "function" ? l.rowData.value(B) : l.rowData.value ? B[l.rowData.value] : B;
				l.rowData.render === "html" ? a(".content", u).html(F) : a(".content", u).text(F)
			});
			var y = a(">ul > li.new", n);
			if(stringContains("|remove|", v)) {
				a.isFunction(l.remove) && a(">.row", y).bind("sortListRemove", l.remove);
				a(">.row > .operations > .opRemove", y).bind("click", function(D) {
					D.preventDefault();
					var B = a(this).closest(".row").parent("li");
					D = B.data("rowData");
					var u = o,
						F = false;
					a(this).trigger("sortListRemove", {
						row: D,
						rows: u,
						success: function() {
							if(!F) {
								F = true;
								B.remove();
								d(n, l)
							}
						},
						error: function() {
							F || (F = true)
						}
					})
				})
			} else a(">.row > .operations > .opRemove", y).remove();
			y.removeClass("new");
			d(n, l)
		},
		c = function(n, l, o) {
			g(this.closestDesc(".staticBody"), n, l, o);
			return this
		},
		d = function(n, l) {
			if(a(">ul > li:not(.hasNone)", n)[0]) a(">ul > li.hasNone", n).remove();
			else if(!a(">ul > li.hasNone", n)[0]) {
				var o = "The list is empty";
				if(l && l.hasNoneText) o = l.hasNoneText;
				o = a('<li class="hasNone"></li>').text(o);
				a(">ul", n).append(o)
			}
		},
		b = function(n, l) {
			var o = a(this);
			o.is(".staticBody.sortList") || (o = a(">.staticBody.sortList", o));
			var q = false;
			a(">ul > li", o).each(function(v, x) {
				var y = a(x).data("rowData");
				if(y) {
					a.each(l, function(D, B) {
						if(y[D] && y[D] == B) {
							q = a(x);
							return false
						}
					});
					return !q
				}
			});
			return q
		},
		f = function() {
			var n = a(this);
			n.is(".staticBody.sortList") || (n = a(">.staticBody.sortList", n));
			var l = [];
			a(">ul > li", n).each(function(o, q) {
				var v = a(q).data("rowData");
				typeof v !== "undefined" && l.push(v)
			});
			return l
		},
		j = function(n, l, o) {
			var q, v = "|" + (o.allow || []).join("|") + "|";
			q = o.dataRoot ? o.data[dataRoot] : o.data;
			stringContains("|remove|", v) && !o.eventsPropogate && n.bind("sortListRemove", function(D) {
				D.stopPropagation()
			});
			var x = l.children("ul");
			g(l, o, q, true);
			if(stringContains("|reorder|", v)) {
				o.eventsPropogate || n.bind("sortListReorder", function(D) {
					D.stopPropagation()
				});
				x.sortable({
					axis: "y",
					containment: "parent",
					handle: ">.row > .grippy",
					tolerance: "pointer",
					items: ">li:not(.add)",
					update: function(D, B) {
						var u = [],
							F = B.item;
						F = F.closest("ul").children("li:not(.add)").index(F);
						a(this).children("li:not(.add)").each(function(I, C) {
							u.push(a(C).data("rowData"))
						});
						a(this).trigger("sortListReorder", {
							rows: u,
							position: F,
							moved: u[F]
						})
					}
				});
				o.reorder && a(x).bind("sortListReorder", o.reorder)
			} else l.addClass("noReorder");
			if(stringContains("|add|", v)) {
				o.eventsPropogate || n.bind("add", function(D) {
					D.stopPropagation()
				});
				var y;
				if(o.addLink) {
					q = o.addLink.value;
					if(typeof q === "string") {
						y = a('<a href="#"></a>');
						o.addLink.render === "html" ? y.html(q) : y.text(q)
					} else if(q.jquery) {
						y = q.clone();
						if(!a("a[href]", y)[0] && !y.is("a[href]")) y = a('<a href="#" class="ops"></a>').html(q)
					}
				} else y = a('<a href="#" class="ops">Add More</a>');
				q = a(".addLinkRow", e).clone();
				y.appendTo(q);
				o.addLink.position === "last" ? q.appendTo(l) : q.prependTo(l);
				d(l, o);
				q.find("a[href=#],a.addLink").bind("click", function(D) {
					D.preventDefault();
					if(!a(">ul > li.add", l)[0]) {
						D = o.addForm;
						var B = a('<li class="add row"></li>');
						if(D) if(typeof D.value === "string") D.render === "text" ? B.text(D.value) : B.html(D.value);
						else if(D.value.jquery) B.html(D.value.clone());
						else if(typeof D.value === "function") {
							var u = D.value();
							if(!u) return false;
							D.render === "text" ? B.text(u) : B.html(u)
						}
						D.prepare && D.prepare.call(B);
						D.position === "last" ? B.appendTo(a(">ul", l)) : B.prependTo(a(">ul", l));
						d(l, o)
					}
				});
				n.bind("add", function(D, B) {
					var u = B.data,
						F = B.last || false;
					a(">ul > li.add", l).remove();
					g(l, o, u, F)
				});
				n.bind("addCancel", function() {
					a(">ul > li.add", l).remove()
				})
			}
			n.html(l)
		};
	a.fn.sortList = function(n) {
		var l = this,
			o = {
				add: c,
				rowData: f,
				exists: b
			};
		if(o[n]) {
			var q = this.data("sortList");
			if(typeof q === "undefined") q = this.data("sortList", {}).data("sortList");
			return o[n].apply(this, [].concat(q, Array.prototype.slice.call(arguments, 1)))
		} else if(n && typeof n !== "object") {
			console_log("Method does not exist in plugin sortList");
			return this
		}
		var v = a.extend({}, {
			data: [],
			rowDataRoot: null,
			allow: ["add", "remove", "reorder"],
			rowData: {
				value: null,
				render: "text"
			},
			newRow: {
				value: "params.newRow.value not defined",
				render: "text"
			},
			reorder: null,
			remove: null,
			addForm: null,
			add: null,
			eventsPropogate: false
		}, n || {}, true);
		a.getTemplate("/cudatel/ajax-html/sortList.html", function(x) {
			l.each(function() {
				var y = a(this),
					D = a(x),
					B = a(".staticBody", D);
				e = a(".template", D);
				j(y, B, v)
			})
		});
		this.data("sortList", v);
		return this
	}
})(jQuery);
(function(a) {
	var e, g = function(d, b, f, j, n) {
			var l = a(">.routeList", b),
				o = a(">.routeManagerBody", b),
				q = false,
				v = false;
			a.each(j, function(D, B) {
				var u = a('<a href="#"></a>').text(B.bbx_outbound_route_name).data("bbx_outbound_route", B);
				if(n.preselect && n.preselect == B.bbx_outbound_route_id) v = u;
				l.append(a("<li></li>").append(u))
			});
			n.applyAndSelect || a(".opApplySelect", b).remove();
			a(".opNew", b).bind("click", function(D) {
				D.preventDefault();
				q = false;
				a(".routeName", o).text("New Call Type");
				a(".createOnly", o).show();
				a(".editOnly", o).hide();
				a("form", o)[0].reset();
				a("form input:eq(0)", o).focus();
				a("a", l).removeClass("active")
			});
			l.delegate("li > a", "click", function(D) {
				D.preventDefault();
				D = a(this);
				a("a", l).removeClass("active");
				D.addClass("active");
				D.blur()
			}).delegate("li > a:not(.new)", "click", function() {
				var D = a(this).data("bbx_outbound_route");
				q = D;
				a(".createOnly", o).hide();
				a(".ed.addClass(e.classes);
				var n = e.rowDataRoot ? c[e.rowDataRoot] : c;
				e.firstEmpty && j.prepend("<option></option>");
				a.each(n, function(l, o) {
					var q = "",
						v = "";
					if(typeof e.rowData.value === "function") q = e.rowData.value({
						index: l,
						data: n,
						rowData: o
					});
					else if(e.rowData.value) q = o[e.rowData.value];
					if(typeof e.rowData.text === "function") v = e.rowData.text({
						index: l,
						data: n,
						rowData: o
					});
					else if(e.rowData.text) v = o[e.rowData.text];
					j.append(a("<option></option>", {
						value: q
					}).text(v))
				});
				d.push(j[0]);
				f.html(j)
			});
			d = a(d);
			var b = g.data("selectFromInitialValue");
			b !== undefined && d.val(b);
			e.complete && e.complete.apply(d)
		});
		this.data("selectFrom", e);
		return this
	}
})(jQuery);
(function(a) {
	a.fn.localTime = function() {
		var e = this;
		a.getJSON("/cudatel/gui/system/timezone", {}, function(g) {
			Ape.subscribe("meteor_alive");
			e.data("offset", (g.timezone.offset + (new Date).getTimezoneOffset() * 60) * -1);
			e.data("timezone", g.timezone.timezone);
			e.data("time", g.timezone.time);
			a(window).bind("meteor_meteor_alive", function(c, d) {
				e.data("time", d.json.alive)
			});
			a(window).bind("tick", function() {
				e.data("time", parseInt(e.data("time")) + 1);
				var c = new Date;
				c.setTime((e.data("time") - e.data("offset")) * 1E3);
				e.text(c.toString("MMM d, yyyy, HH:mm") + " " + e.data("timezone"))
			});
			a(window).bind("meteor_system_status", function(c, d) {
				if(d.json.action == "time") {
					e.data("offset", (d.json.offset + (new Date).getTimezoneOffset() * 60) * -1);
					e.data("timezone", d.json.zone)
				}
			})
		})
	}
})(jQuery);
(function(a) {
	a.fn.paginate = function(e, g, c, d) {
		e = parseInt(e, 10);
		g = parseInt(g, 10);
		c = parseInt(c, 10);
		if(g > 1) {
			c = a('<ul class="paginator">');
			var b = a('<li class="special prev"></li>').appendTo(c);
			if(e == 1) {
				b.addClass("disabled");
				b.text("Previous")
			} else a('<a href="#">Previous</a>').data("page", e - 1).appendTo(b);
			for(b = 1; b <= g; b++) if(b == e) a('<li class="current">' + b + "</li>").appendTo(c);
			else if(b <= 5 || b > g - 5 || b >= e - 2 && b <= e + 2) a('<li><a href="#">' + b + "</a></li>").appendTo(c).find("a").data("page", b);
			else if(b == 6 && e > 8 || b == e + 5 && e < 6 || b == g - 5 && e > 5 && e < g - 7) a("<li>...</li>").appendTo(c);
			b = a('<li class="special next"></li>').appendTo(c);
			if(e == g) {
				b.addClass("disabled");
				b.text("Next")
			} else a('<a href="#">Next</a>').data("page", e + 1).appendTo(b);
			c.find("a").bind("click", function(f) {
				f.preventDefault();
				a.isFunction(d.changePage) && d.changePage(a(f.target).data("page"))
			});
			a(this).html(c)
		} else a(this).empty()
	}
})(jQuery);
(function(a) {
	var e = {
		init: function(g) {
			g || (g = {});
			var c = this;
			g = a.extend(true, {
				data: {
					primary: 1
				}
			}, g);
			a(this).jsonTable({
				url: "/cudatel/gui/extension/list",
				data: g.data,
				hasNoneText: g.hasNoneText,
				rowDataRoot: "$.list",
				sortby: "bbx_extension_value",
				sortorder: "asc",
				rows: 25,
				searchParam: "search_string",
				paginator: true,
				paginatorToTop: true,
				paginatorToTopAdditional: 200,
				columnData: [{
					header: "",
					render: "html",
					value: function(d) {
						return '<img src="/cudatel/images/typeicons/' + d.rowData.type + '.png" />'
					}
				}, {
					header: "Ext.",
					value: function(d) {
						return format_information(d.rowData.bbx_extension_value, {
							no_extension: true
						})
					},
					sortby: "bbx_extension_value"
				}, {
					header: "Name",
					value: "show_name",
					sortby: "name"
				}]
			}).addClass("clickable");
			g.search && g.search.searchBox().bind("search", function(d, b) {
				a(c).jsonTable("refresh", {
					search: b
				})
			}).bind("enterKeyPress", function() {
				a("td.col1.row1", c).trigger("click")
			});
			this.each(function() {
				a("tr:not(.nonDataRow) > td", this).die("click").live("click", function() {
					var d = a(this).closest("tr").data("row"),
						b = {
							bbx_extension_id: d.bbx_extension_id,
							key: "bbx_" + d.type + "_id",
							close: function() {}
						};
					b["bbx_" + d.type + "_id"] = d["bbx_" + d.type + "_id"];
					showOverlay(d.type, b)
				})
			});
			return this
		},
		refresh: function() {
			a(this).jsonTable("refresh")
		}
	};
	a.fn.extensionList = function(g) {
		if(e[g]) return e[g].apply(this, Array.prototype.slice.call(arguments, 1));
		else if(typeof g === "object" || !g) return e.init.apply(this, arguments);
		else a.error("Method " + g + " does not exist on jQuery.extensionList")
	}
})(jQuery);
(function(a) {
	var e = function(g, c) {
			var d = a(this),
				b = function(j) {
					a(">.staticBody.miniRoute .providerRoutingList", d).sortList({
						data: j,
						allow: [],
						rowData: {
							value: "bbx_outbound_route_name",
							render: "text"
						},
						hasNoneText: "No routes assigned: This gateway/port will not be used for outbound calls"
					})
				};
			if(c) b(c);
			else {
				var f = {};
				if(g.bbx_provider_gateway_id) f.bbx_provider_gateway_id = g.bbx_provider_gateway_id;
				else if(g.bbx_tdm_card_port_id) f.bbx_tdm_card_port_id = g.bbx_tdm_card_port_id;
				a.getREST("/cudatel/gui/route/map", f, function(j) {
					b(j.map)
				})
			}
			return this
		};
	a.fn.miniRoute = function(g) {
		var c = this,
			d = {
				refresh: e
			};
		if(d[g]) {
			var b = this.data("miniRoute");
			if(typeof b === "undefined") {
				this.data("miniRoute", {});
				b = this.data("miniRoute")
			}
			return d[g].apply(this, [].concat([b], Array.prototype.slice.call(arguments, 1)))
		} else if(g && typeof g !== "object") {
			console_log("Method does not exist in plugin miniRoute");
			return this
		}
		var f = g || {};
		a.getTemplate("/cudatel/ajax-html/miniRoute.html", function(j) {
			c.each(function() {
				var n = a(this),
					l = a(j);
				l = a(".staticBody", l);
				a("a.opRoutePopup", l).bind("click", function(o) {
					o.preventDefault();
					showOverlay("routemapmanager").one("close_request", function() {
						n.miniRoute("refresh")
					})
				});
				a(this).html(l)
			});
			e.call(c, f)
		});
		this.data("miniRoute", f);
		return this
	}
})(jQuery);
(function(a) {
	var e, g = {
		common: {
			paginator: true,
			rows: 100,
			paginatorToTopAdditional: 200
		},
		active: {
			url: "/cudatel/gui/freeswitch/registrations/select_active",
			rowDataRoot: "select_active",
			hasNoneText: "No active registrations to show",
			columnData: [{
				header: "Extension",
				sortby: "extension",
				value: "$.extension",
				render: "text"
			}, {
				header: "Name",
				sortby: "name",
				value: "$.name",
				render: "text"
			}, {
				header: "User Agent",
				sortby: "model",
				value: "$.model",
				render: "text"
			}, {
				header: "IP:Port",
				sortby: "network_ip",
				value: function(b) {
					return a('<span class="regIP">' + b.rowData.network_ip + '</span><span>:</span><span class="regPort">' + b.rowData.network_port + "</span>")
				},
				render: "html"
			}, {
				header: "MAC",
				sortby: "mac",
				value: function(b) {
					return b.rowData.mac || "(Generic SIP Device)"
				},
				render: "text"
			}, {
				header: "Expires",
				sortby: "expires",
				value: function(b) {
					return a('<span class="time"></span>').text(a.timeSince(b.rowData.expires))
				},
				render: "html"
			}]
		},
		inactive: {
			url: "/cudatel/gui/freeswitch/registrations/select_inactive",
			type: "GET",
			rowDataRoot: "select_inactive",
			hasNoneText: "No inactive registrations to show",
			columnData: [{
				header: "Extension",
				sortby: "extension",
				value: "$.extension",
				render: "text"
			}, {
				header: "Name",
				sortby: "name",
				value: "$.name",
				render: "text"
			}, {
				header: "User Agent",
				sortby: "model",
				value: "$.model",
				render: "text"
			}, {
				header: "MAC",
				sortby: "mac",
				value: function(b) {
					return b.rowData.mac || "(Generic SIP Device)"
				},
				render: "text"
			}, {
				header: "Last Registered",
				sortby: "last_registered",
				value: function(b) {
					var f = a('<span class="time"></span>');
					b.rowData.last_registered ? f.text(a.timeSince(Date.parse(b.rowData.last_registered.split(".")[0])) + " ago") : f.text("(Never Registered)");
					return f
				},
				render: "html"
			}]
		},
		restricted: {
			url: "/cudatel/gui/freeswitch/registrations/select_jailed",
			rowDataRoot: "select_jailed",
			hasNoneText: "No restricted registrations to show",
			columnData: [{
				header: "Username",
				sortby: "server_user",
				value: "server_user",
				render: "text"
			}, {
				header: "Auth Username",
				sortby: "sip_username",
				value: "sip_username",
				render: "text"
			}, {
				header: "User Agent",
				sortby: "user_agent",
				value: "user_agent",
				render: "text"
			}, {
				header: "IP",
				sortby: "network_ip",
				value: "network_ip",
				render: "text"
			}, {
				header: "Expires",
				sortby: "expires",
				value: function(b) {
					return a('<span class="time"></span>').text(a.timeSince(b.rowData.reg.expires))
				},
				render: "html"
			}]
		}
	},
		c = function(b, f) {
			var j = a("select.show", f);
			j.bind("change", function() {
				a(".regList", f).jsonTable("refreshTable", a.extend(true, {}, g.common, g[j.val()]))
			});
			a(".regList", f).jsonTable(a.extend(true, {}, g.common, g[j.val()]));
			a("a.opRefresh", f).bind("click", function(n) {
				n.preventDefault();
				a(".show", f).triggerHandler("change")
			});
			b.html(f)
		},
		d = function() {
			return this
		};
	a.fn.activeRegScreen = function(b) {
		var f = this,
			j = {
				secondarymethod: d
			};
		if(j[b]) {
			var n = this.data("activeRegScreen");
			if(typeof n === "undefined") {
				this.data("activeRegScreen", {});
				n = this.data("activeRegScreen")
			}
			return j[b].apply(this, [].concat([n], Array.prototype.slice.call(arguments, 1)))
		} else if(b && typeof b !== "object") {
			console_log("Method does not exist in plugin activeRegScreen");
			return this
		}
		var l = b || {};
		a.getTemplate("/cudatel/ajax-html/activeRegScreen.html", function(o) {
			f.each(function() {
				var q = a(this),
					v = a(o),
					x = a(".staticBody", v);
				e = e || a(".template", v);
				c(q, x, e, l)
			})
		});
		this.data("activeRegScreen", l);
		return this
	}
})(jQuery);
(function(a) {
	var e, g = function(d, b, f, j) {
			a(".selRows", b).bind("change", function() {
				c.call(d, j)
			});
			a(".selTime", b).bind("change", function() {
				a(".customDateRange", b).toggle(a(this).val() === "RANGE");
				c.call(d, j)
			});
			a("a.opRefresh", b).bind("click", function(n) {
				n.preventDefault();
				c.call(d, j)
			});
			a("a.opDownload", b).bind("click", function(n) {
				n.preventDefault();
				n = a(".cdrTable", b).jsonTable("getRequestParams");
				delete n.page;
				delete n.rows;
				n = "/cudatel/gui/cdr/csv?" + a.param(n);
				location.href = n
			});
			a(".search", b).searchBox().bind("search", function(n, l) {
				c.call(d, j, {
					search: l
				})
			});
			d.html(b);
			c.call(d, j);
			a(".dateEnd, .dateStart", b).datepicker({
				showAnim: "fadeIn",
				changeMonth: true,
				changeYear: true,
				dateFormat: "MM d, yy",
				onSelect: function() {
					c.call(d, j)
				}
			}).datepicker("setDate", new Date)
		},
		c = function(d, b) {
			d = d || {};
			a.extend(true, d, b || {});
			var f = a(">.staticBody.cdrList", this),
				j = {
					url: "/cudatel/gui/cdr/cdr",
					type: "GET",
					rowDataRoot: "cdr",
					hasNoneText: "No records matching your search",
					rows: a(".selRows", f).val(),
					sortby: "end_timestamp",
					sortorder: "desc",
					searchParam: "search_string",
					columnData: [{
						header: "Call Answered",
						sortby: "answer_timestamp",
						value: "answer_timestamp",
						render: "text"
					}, {
						header: "Call End",
						sortby: "end_timestamp",
						value: "end_timestamp",
						value: function(o) {
							return a("<div></div>").text(o.rowData.end_timestamp || " ").attr("title", o.rowData.hangup_cause || "UNKNOWN")
						},
						render: "html"
					}, {
						header: "Caller Name",
						sortby: "caller_id_name",
						value: "caller_id_name",
						render: "text"
					}, {
						header: "Caller Number",
						sortby: "caller_id_number",
						value: "caller_id_number",
						render: "text"
					}, {
						header: "Destination Name",
						sortby: "destination_name",
						value: "destination_name",
						render: "text"
					}, {
						header: "Destination Number",
						sortby: "destination_number",
						value: function(o) {
							return a("<div></div>").text(o.rowData.destination_number || " ").attr("title", o.rowData.gateway_name || "No Gateway")
						},
						render: "html"
					}, {
						header: "Billable Time (h:m:s)",
						sortby: "billsec",
						value: function(o) {
							return hhmmss(parseInt(o.rowData.billsec, 10) || 0)
						},
						render: "text"
					}, {
						header: "Recorded File/Fax",
						value: function(o) {
							if(o.rowData.bbx_fax_outbound_id || o.rowData.bbx_fax_inbound_id) {
								var q = o.rowData.bbx_fax_outbound_id ? "outbound" : "inbound",
									v = o.rowData.bbx_fax_outbound_id ? o.rowData.bbx_fax_outbound_id : o.rowData.bbx_fax_inbound_id,
									x = "fax_" + q + "_" + v,
									y = "bbx_fax_" + q,
									D = y + "_id",
									B = a("<div></div>"),
									u = a('<a class="cdrFaxView" href="/cudatel/gui/fax/file?format=png&' + D + "=" + v + '&page=1" rel="' + x + '"><img src="/cudatel/images/client/bar/fax.png" width="20" height="20" alt="View Fax" title="View Fax" /></a>');
								o = a('<a href="/cudatel/gui/fax/file?format=pdf&' + D + "=" + v + '"><img src="/cudatel/images/pdficon_small.gif" width="15" height="15" alt="Download Fax" title="View Fax" /></a>');
								u.one("click", function(F) {
									F.preventDefault();
									F = {};
									F[D] = v;
									a.getJSONCached("/cudatel/gui/fax/fax", F, 5E3, function(I) {
										I = I.fax;
										I = I[y + "_pages_sent"];
										if(I > 1) for(var C = 2; C <= I; C++) {
											var M = a('<a class="cdrFaxView cdrFaxViewHidden" style="display: none" href="/cudatel/gui/fax/file?format=png&' + D + "=" + v + "&page=" + C + '" rel="' + x + '"> </a>');
											B.append(M)
										}
										B.find(".cdrFaxView").picbox({
											margins: 60
										}, null, function(Q) {
											return this == Q || this.rel == Q.rel
										});
										u.triggerHandler("click")
									})
								});
								B.append(u);
								B.append(o);
								return B
							} else if(o.rowData.record_file_name) {
								if(o.rowData.record_file_name.match(/\.wav$/i)) return '<div class="cdrTranscoding" title="A recorded file exists, but is being processed. Refresh the listing to play the file.">(File is Processing)</div>';
								B = a("<div></div>");
								o = "/cudatel/gui/cdr/recording?record_file_name=" + escape(o.rowData.record_file_name);
								a("<span></span>").appendTo(B).miniSoundWidget(o + "&disposition=inline");
								a('<a href="' + o + '&disposition=attachment"><img src="/cudatel/images/download.png" /></a>').appendTo(B);
								return B
							} else return ""
						},
						render: "html"
					}]
				},
				n = {
					rows: a(".selRows", f).val(),
					search: d.search || ""
				},
				l = a(".selTime", f).val();
			n.data = l === "RANGE" ? {
				since: "RANGE",
				between: [a(".dateStart", f).val(), a(".dateEnd", f).val()]
			} : {
				since: l
			};
			d.hasRun ? a(".cdrTable", f).jsonTable("refresh", a.extend(true, {
				clear_existing_data: true
			}, n)) : a(".cdrTable", f).jsonTable(a.extend(true, {}, j, n));
			if(!d.hasRun) d.hasRun = true;
			a(this).data("cdrList", d);
			return this
		};
	a.fn.cdrList = function(d) {
		var b = this,
			f = {
				refresh: c
			};
		if(f[d]) {
			var j = this.data("cdrList");
			if(typeof j === "undefined") {
				this.data("cdrList", {});
				j = this.data("cdrList")
			}
			return f[d].apply(this, [].concat([j], Array.prototype.slice.call(arguments, 1)))
		} else if(d && typeof d !== "object") {
			console_log("Method does not exist in plugin cdrList");
			return this
		}
		var n = d || {};
		a.getTemplate("/cudatel/ajax-html/cdr.html", function(l) {
			b.each(function() {
				var o = a(this),
					q = a(l),
					v = a(".staticBody", q);
				e = e || a(".template", q);
				g(o, v, e, n)
			})
		});
		this.data("cdrList", n);
		return this
	}
})(jQuery);
(function(a) {
	a.fn.searchBox = function(e) {
		var g = {};
		if(g[e]) {
			var c = this.data("searchBox");
			if(typeof c === "undefined") {
				this.data("searchBox", {});
				c = this.data("searchBox")
			}
			return g[e].apply(this, [].concat([c], Array.prototype.slice.call(arguments, 1)))
		} else if(e && typeof e !== "object") {
			console_log("Method does not exist in plugin searchBox");
			return this
		}
		g = e || {};
		this.each(function() {
			var d = a(this),
				b = a('<div class="searchBoxWrap inline-block"></div>'),
				f = a('<div style="position: relative; width: 0; height: 0"></div>').appendTo(b);
			f = a('<div style="position: absolute; top: 2px; left: 2px"></div>').appendTo(f);
			var j = a('<img src="/cudatel/images/searchIcon.png" width="20" height="20" alt="" />').appendTo(f),
				n = a('<a href="#"><img src="/cudatel/images/searchXIcon.png" width="20" height="20" alt="" /></a>').appendTo(f),
				l = a('<input type="text" style="padding-left: 20px" />').appendTo(b);
			n.hide();
			var o = function() {
					var q = l.val();
					l.trigger("search", q);
					n.toggle(q !== "");
					j.toggle(q === "")
				};
			l.debounce("keyup", o);
			l.bind("keyup", function(q) {
				if(q.which === a.ui.keyCode.ENTER) l.trigger("enterKeyPress");
				else if(q.which === a.ui.keyCode.ESCAPE) {
					l.trigger("escKeyPress");
					n.trigger("click")
				}
			});
			n.bind("click", function(q) {
				q.preventDefault();
				l.val("");
				o()
			});
			b.appendTo(d.empty())
		});
		this.data("searchBox", g);
		return this
	}
})(jQuery);
(function(a) {
	var e = function(c) {
			var d = function() {
					a(".demoCurrent", c).text("Demo mode is active.");
					a(".activateDemoGo", c).attr("disabled", "disabled");
					a(".activateDemoStop", c).removeAttr("disabled")
				},
				b = function() {
					a(".demoCurrent", c).text("Demo mode is not active.");
					a(".activateDemoStop", c).attr("disabled", "disabled");
					a(".activateDemoGo", c).removeAttr("disabled")
				};
			a(".activateDemoGo", c).bind("click", function() {
				a(this).is(":disabled") || a.postREST("/cudatel/gui/demo/active", {
					active: 1
				}, function(f) {
					if(f.active == "ACTIVE") d();
					else {
						b();
						a(".demoCurrent").text("There was a problem activating demo mode. Please try again.")
					}
				})
			});
			a(".activateDemoStop", c).bind("click", function() {
				a(this).is(":disabled") || a.postREST("/cudatel/gui/demo/active", {
					active: 0
				}, function(f) {
					if(f.active == "INACTIVE") b();
					else {
						d();
						a(".demoCurrent").text("There was a problem stopping demo mode. Please try again.")
					}
				})
			});
			a.getREST("/cudatel/gui/demo/active", {}, function(f) {
				f.active == "ACTIVE" ? d() : b()
			})
		},
		g = function(c) {
			a(".insertDemoGo", c).bind("click", function() {
				a(".insertDemoGo", c).attr("disabled", "disabled");
				a.postREST("/cudatel/gui/demo/data", {}, function(d) {
					var b = a(".result", c);
					d.data == "SUCCESS" ? b.text("Demonstration data created") : b.text("There was an error creating demo data");
					a(".insertDemoGo", c).removeAttr("disabled");
					b.show();
					setTimeout(function() {
						b.fadeOut()
					}, 3E3)
				})
			})
		};
	a.fn.demoModeSettings = function(c, d) {
		var b = this;
		d = d || {};
		a.getTemplate("/cudatel/ajax-html/demo_settings.html", function(f) {
			b.each(function() {
				var j = a(f).replaceAll(this);
				e(j, d)
			})
		})
	};
	a.fn.demoModeSetup = function(c, d) {
		var b = this;
		d = d || {};
		a.getTemplate("/cudatel/ajax-html/demo_setup.html", function(f) {
			b.each(function() {
				var j = a(f).replaceAll(this);
				g(j, d)
			})
		})
	}
})(jQuery);
(function(a) {
	var e, g = {
		init: function(c) {
			c = c || {};
			c = a.extend({}, {
				selected: [],
				inputName: "codec"
			}, c);
			selected = c.selected;
			var d = {};
			a.each(selected, function(b, f) {
				d[f] = true
			});
			this.each(function() {
				elem = a(this);
				var b = a('<div class="staticBody codecPicker"></div>'),
					f = a('<div class="checkDropWrap"></div>').appendTo(b);
				f = a('<div class="checkDrop"></div>').appendTo(f);
				var j = a('<table class="checkDropHidden"><tbody><tr></tr></tbody></table>').appendTo(f),
					n = a("tr", j);
				a.each(e, function(l, o) {
					var q = a("<td></td>").appendTo(n),
						v = a('<div class="codecCategoryTitle"></div>').appendTo(q),
						x = a('<ul class="codecCategory"></ul>').appendTo(q);
					q = o.items;
					v.text(o.set);
					a.each(q, function(y, D) {
						var B = a('<li class="codec"><label><input type="checkbox" class="codecCxbox" /> <span class="codecName"></span></label></li>');
						a(".codecName", B).text(D.printed_name);
						var u = a(".codecCxbox", B).attr("name", c.inputName).val(D.value);
						d[D.value] && u.attr("checked", "checked");
						x.append(B)
					})
				});
				f.checkDrop();
				elem.html(b)
			})
		}
	};
	a.fn.codecPicker = function(c) {
		var d = a(this),
			b = function() {
				if(g[c]) return g[c].apply(d, Array.prototype.slice.call(arguments, 1));
				else if(typeof c === "object" || !c) {
					var f = c || {};
					d.data("codecPicker", f);
					return g.init.call(d, f)
				} else a.error("Method " + c + " does not exist on jQuery.codecPicker")
			};
		e ? b() : a.getJSONCached("/cudatel/gui/system/available_codecs", {}, 1E3, function(f) {
			e = f.available_codecs;
			b()
		})
	}
})(jQuery);
(function(a) {
	var e, g = function(d, b, f, j, n) {
			a(".conferenceMemberList", b).sortList({
				allow: ["add", "remove"],
				data: j,
				rowDataRoot: "member",
				rowData: {
					value: function(l) {
						var o = a(".conferenceMember", f).clone();
						trueish(l.bbx_conference_group_map_moderator) && a(".isModerator", o).attr("checked", "checked");
						a(".memberName", o).text(l.bbx_group_name || "Unknown");
						a(".isModerator", o).bind("click", function() {
							a.putREST("/cudatel/gui/conference2/member", {
								bbx_conference_group_map_id: l.bbx_conference_group_map_id,
								bbx_conference_group_map_moderator: a(this).is(":checked") ? "1" : "0"
							})
						});
						return o
					},
					render: "html"
				},
				remove: function(l, o) {
					a.deleteREST("/cudatel/gui/conference2/member", {
						bbx_conference_group_map_id: o.row.bbx_conference_group_map_id
					}, function() {
						o.success()
					})
				},
				addForm: {
					value: function() {
						var l = a(".conferenceMemberAdd", f).clone();
						a(".memberName", l).extensionPicker({
							searchTypes: ["group"],
							hiddenName: "bbx_group_id",
							hiddenFormat: "{object_id}",
							autoSelectFirst: true
						}).bind("selection", function() {
							a.postREST("/cudatel/gui/conference2/member", l.serialize() + "&bbx_conference_id=" + n.bbx_conference_id, function(o) {
								o.member ? l.trigger("add", {
									data: o.member,
									last: true
								}) : l.trigger("addCancel")
							})
						});
						return l
					},
					position: "last"
				},
				addLink: {
					value: "Add a group",
					render: "text",
					position: "last"
				}
			});
			d.html(b)
		},
		c = function() {
			return this
		};
	a.fn.conferenceMember = function(d) {
		var b = this,
			f = {
				secondarymethod: c
			};
		if(f[d]) {
			var j = this.data("conferenceMember");
			if(typeof j === "undefined") {
				this.data("conferenceMember", {});
				j = this.data("conferenceMember")
			}
			return f[d].apply(this, [].concat([j], Array.prototype.slice.call(arguments, 1)))
		} else if(d && typeof d !== "object") {
			console_log("Method does not exist in plugin conferenceMember");
			return this
		}
		var n = d || {};
		a.getTemplate("/cudatel/ajax-html/conferenceMember.html", function(l) {
			a.getREST("/cudatel/gui/conference2/member", {
				bbx_conference_id: n.bbx_conference_id
			}, function(o) {
				b.each(function() {
					var q = a(this),
						v = a(l),
						x = a(".staticBody", v);
					e = e || a(".template", v);
					g(q, x, e, o.member, n)
				})
			})
		});
		this.data("conferenceMember", n);
		return this
	}
})(jQuery);
(function(a) {
	var e, g = function(c, d, b, f, j) {
			a(".usersGroupsList", d).sortList({
				allow: ["add", "remove"],
				data: f,
				rowDataRoot: "group",
				rowData: {
					value: function(n) {
						var l = a(".usersGroup", b).clone();
						n.bbx_user_id = j.bbx_user_id;
						a(".usersGroupName", l).text(n.bbx_group_name || "Unknown");
						return l
					},
					render: "html"
				},
				remove: function(n, l) {
					a.deleteREST("/cudatel/gui/user2/groups", {
						bbx_group_id: l.row.bbx_group_id,
						bbx_user_id: l.row.bbx_user_id
					}, function() {
						l.success()
					})
				},
				addForm: {
					value: function() {
						var n = a(".usersGroupAdd", b).clone();
						a(".usersGroupName", n).extensionPicker({
							searchTypes: ["group"],
							hiddenName: "bbx_group_id",
							hiddenFormat: "bbx_group_id",
							textFormat: "label",
							autoSelectFirst: true
						}).bind("selection", function() {
							a.postREST("/cudatel/gui/user2/groups", n.serialize() + "&bbx_user_id=" + j.bbx_user_id, {
								error: function() {},
								success: function(l) {
									n.trigger("add", {
										data: l.groups,
										last: true
									})
								}
							})
						});
						return n
					},
					position: "last"
				},
				addLink: {
					value: "Join a Group",
					render: "text",
					position: "last"
				}
			});
			c.html(d)
		};
	a.fn.usersGroups = function(c) {
		var d = this,
			b = {};
		if(b[c]) {
			var f = this.data("usersGroups");
			if(typeof f === "undefined") {
				this.data("usersGroups", {});
				f = this.data("usersGroups")
			}
			return b[c].apply(this, [].concat([f], Array.prototype.slice.call(arguments, 1)))
		} else if(c && typeof c !== "object") {
			console_log("Method does not exist in plugin usersGroups");
			return this
		}
		var j = c || {};
		a.getTemplate("/cudatel/ajax-html/usersGroups.html", function(n) {
			a.getREST("/cudatel/gui/user2/groups", {
				bbx_user_id: j.bbx_user_id
			}, function(l) {
				d.each(function() {
					var o = a(this),
						q = a(n),
						v = a(".staticBody", q);
					e = e || a(".template", q);
					g(o, v, e, l.groups, j)
				})
			})
		});
		this.data("usersGroups", j);
		return this
	}
})(jQuery);
$(window).bind("login", function() {
	validUsername && $.getREST("/cudatel/gui/ha_ip/ha_ip", {}, function(a) {
		a.ha_ip.using_combined_ip === "NO" && trueish(a.ha_ip.ha_active) && showBlanker({
			title: "High Availability Member",
			text: "You are directly accessing a member of a High Availability pair. You may have entered an incorrect address, or the address may have changed.",
			buttons: ["Continue", "Log Out"],
			callbacks: [blankerCancel, logout]
		})
	})
});
(function(a) {
	var e, g = function(d, b, f, j) {
			var n = a(">.table", b);
			n.jsonTable({
				url: "/cudatel/gui/group/members",
				data: {
					bbx_group_id: j.bbx_group_id
				},
				rowDataRoot: "members",
				sortby: "name",
				hasNoneText: "This group is empty",
				columnData: [{
					header: "",
					value: 'static:<img src="/cudatel/images/typeicons/user.png" alt="Group Member" title="Group Member" />',
					render: "html"
				}, {
					header: "Ext.",
					sortby: "bbx_extension_value",
					value: "bbx_extension_value",
					render: "text"
				}, {
					header: "Name",
					sortby: "name",
					value: "show_name",
					render: "text"
				}, {
					header: "",
					value: 'static:<a class="ops opUnmapMembership" href="#">Remove from group</a>',
					metadata: "bbx_user_id",
					render: "html"
				}]
			});
			a(".addGroupMember", b).extensionPicker({
				hidden: false,
				searchTypes: ["user:primary"],
				hiddenFormat: "{object_id}",
				autoSelectFirst: true
			}).bind("selection", function(l, o) {
				var q = a(this);
				a.postREST("/cudatel/gui/group/members", {
					bbx_group_id: j.bbx_group_id,
					bbx_user_id: o.bbx_user_id
				}, function() {
					q.val("");
					n.jsonTable("refresh")
				})
			});
			a(".opUnmapMembership", n[0]).live("click", function(l) {
				l.preventDefault();
				l = a(this).closest("td").data("metadata");
				a.deleteREST("/cudatel/gui/group/members", {
					bbx_group_id: j.bbx_group_id,
					bbx_user_id: l
				}, function() {
					n.jsonTable("refresh")
				})
			});
			a(".col2, .col3", n[0]).live("click", function() {
				var l = a(this).closest("tr").data("row");
				a(window).scrollTop(0);
				showOverlay("user", {
					bbx_extension_id: l.bbx_extension_id,
					key: "bbx_user_id",
					bbx_user_id: l.bbx_user_id,
					close: function() {
						n.jsonTable("refresh")
					}
				})
			});
			d.html(b)
		},
		c = function(d, b) {
			$elems = this;
			a(">.staticBody.yournamhere", $elems);
			a.extend(true, d, b);
			elems.data("groupMembership", d);
			return this
		};
	a.fn.groupMembership = function(d) {
		var b = this,
			f = {
				secondarymethod: c
			};
		if(f[d]) {
			var j = this.data("groupMembership");
			if(typeof j === "undefined") {
				this.data("groupMembership", {});
				j = this.data("groupMembership")
			}
			return f[d].apply(this, [].concat([j], Array.prototype.slice.call(arguments, 1)))
		} else if(d && typeof d !== "object") {
			console_log("Method does not exist in plugin groupMembership");
			return this
		}
		var n = d || {};
		a.getTemplate("/cudatel/ajax-html/groupMembership.html", function(l) {
			b.each(function() {
				var o = a(this),
					q = a(l),
					v = a(".staticBody", q);
				e = e || a(".template", q);
				g(o, v, e, n)
			})
		});
		this.data("groupMembership", n);
		return this
	}
})(jQuery);
(function(a) {
	var e, g, c = function(b, f, j, n, l) {
			f.sortList({
				allow: ["add", "remove"],
				data: n.group_class,
				rowData: {
					value: function(o) {
						var q = a(".view", j).clone();
						a(".groupPermissionClassName", q).text(o.bbx_permission_class_name);
						a(".groupPermissionClassDesc", q).text(o.bbx_permission_class_description);
						return q
					},
					render: "html"
				},
				addForm: {
					value: function() {
						var o = a(".add", j).clone(true),
							q = f.sortList("rowData");
						a.each(q, function(v, x) {
							a("option[value=" + x.bbx_permission_class_id + "]", o).remove()
						});
						if(!a("option", o)[0]) {
							showError("This group has all possible Permission Roles applied");
							return false
						}
						a(".opAddPermission", o).bind("click", function(v) {
							v.preventDefault();
							a(this).remove();
							v = a("select.classes", o).val();
							f.sortList("exists", {
								bbx_permission_class_id: v
							}) || a.postREST("/cudatel/gui/permission_class/group_class", {
								bbx_group_id: l.bbx_group_id,
								bbx_permission_class_id: v
							}, function(x) {
								f.trigger("add", {
									data: x.group_class,
									last: true
								})
							})
						});
						return o
					},
					position: "last"
				},
				addLink: {
					value: '<a href="#" class="ops">Add new permission</a>',
					render: "html",
					position: "last"
				},
				remove: function(o, q) {
					a.deleteREST("/cudatel/gui/permission_class/group_class", {
						bbx_group_id: l.bbx_group_id,
						bbx_permission_class_id: q.row.bbx_permission_class_id
					}, q.success)
				},
				hasNoneText: "This group has no special permissions."
			});
			b.html(f)
		},
		d = function(b, f) {
			$elems = this;
			a(">.staticBody.yournamhere", $elems);
			a.extend(true, b, f);
			elems.data("groupPermissionClass", b);
			return this
		};
	a.fn.groupPermissionClass = function(b) {
		var f = this,
			j = {
				secondarymethod: d
			};
		if(j[b]) {
			var n = this.data("groupPermissionClass");
			if(typeof n === "undefined") {
				this.data("groupPermissionClass", {});
				n = this.data("groupPermissionClass")
			}
			return j[b].apply(this, [].concat([n], Array.prototype.slice.call(arguments, 1)))
		} else if(b && typeof b !== "object") {
			console_log("Method does not exist in plugin groupPermix_group_id,
					bbx_user_id: o.bbx_user_id
				}, function() {
					q.val("");
					n.jsonTable("refresh")
				})
			});
			a(".opUnmapMembership", n[0]).live("click", function(l) {
				l.preventDefault();
				l = a(this).closest("td").data("metadata");
				a.deleteREST("/cudatel/gui/group/members", {
					bbx_group_id: j.bbx_group_id,
					bbx_user_id: l
				}, function() {
					n.jsonTable("refresh")
				})
			});
			a(".col2, .col3", n[0]).live("click", function() {
				var l = a(this).closest("tr").data("row");
				a(window).scrollTop(0);
				showOverlay("user", {
					bbx_extension_id: l.bbx_extension_id,
					key: "bbx_user_id",
					bbx_user_id: l.bbx_user_id,
					close: function() {
						n.jsonTable("refresh")
					}
				})
			});
			d.html(b)
		},
		c = function(d, b) {
			$elems = this;
			a(">.staticBody.yournamhere", $elems);
			a.extend(true, d, b);
			elems.data("groupMembership", d);
			return this
		};
	a.fn.groupMembership = function(d) {
		var b = this,
			f = {
				secondarymethod: c
			};
		if(f[d]) {
			var j = this.data("groupMembership");
			if(typeof j === "undefined") {
				this.data("groupMembership", {});
				j = this.data("groupMembership")
			}
			return f[d].apply(this, [].concat([j], Array.prototype.slice.call(arguments, 1)))
		} else if(d && typeof d !== "object") {
			console_log("Method does not exist in plugin groupMembership");
			return this
		}
		var n = d || {};
		a.getTemplate("/cudatel/ajax-html/groupMembership.html", function(l) {
			b.each(function() {
				var o = a(this),
					q = a(l),
					v = a(".staticBody", q);
				e = e || a(".template", q);
				g(o, v, e, n)
			})
		});
		this.data("groupMembership", n);
		return this
	}
})(jQuery);
(function(a) {
	var e, g, c = function(b, f, j, n, l) {
			f.sortList({
				allow: ["add", "remove"],
				data: n.group_class,
				rowData: {
					value: function(o) {
						var q = a(".view", j).clone();
						a(".groupPermissionClassName", q).text(o.bbx_permission_class_name);
						a(".groupPermissionClassDesc", q).text(o.bbx_permission_class_description);
						return q
					},
					render: "html"
				},
				addForm: {
					value: function() {
						var o = a(".add", j).clone(true),
							q = f.sortList("rowData");
						a.each(q, function(v, x) {
							a("option[value=" + x.bbx_permission_class_id + "]", o).remove()
						});
						if(!a("option", o)[0]) {
							showError("This group has all possible Permission Roles applied");
							return false
						}
						a(".opAddPermission", o).bind("click", function(v) {
							v.preventDefault();
							a(this).remove();
							v = a("select.classes", o).val();
							f.sortList("exists", {
								bbx_permission_class_id: v
							}) || a.postREST("/cudatel/gui/permission_class/group_class", {
								bbx_group_id: l.bbx_group_id,
								bbx_permission_class_id: v
							}, function(x) {
								f.trigger("add", {
									data: x.group_class,
									last: true
								})
							})
						});
						return o
					},
					position: "last"
				},
				addLink: {
					value: '<a href="#" class="ops">Add new permission</a>',
					render: "html",
					position: "last"
				},
				remove: function(o, q) {
					a.deleteREST("/cudatel/gui/permission_class/group_class", {
						bbx_group_id: l.bbx_group_id,
						bbx_permission_class_id: q.row.bbx_permission_class_id
					}, q.success)
				},
				hasNoneText: "This group has no special permissions."
			});
			b.html(f)
		},
		d = function(b, f) {
			$elems = this;
			a(">.staticBody.yournamhere", $elems);
			a.extend(true, b, f);
			elems.data("groupPermissionClass", b);
			return this
		};
	a.fn.groupPermissionClass = function(b) {
		var f = this,
			j = {
				secondarymethod: d
			};
		if(j[b]) {
			var n = this.data("groupPermissionClass");
			if(typeof n === "undefined") {
				this.data("groupPermissionClass", {});
				n = this.data("groupPermissionClass")
			}
			return j[b].apply(this, [].concat([n], Array.prototype.slice.call(arguments, 1)))
		} else if(b && typeof b !== "object") {
			console_log("Method does not exist in plugin groupPermissionClass");
			return this
		}
		var l = b || {},
			o = function(v, x) {
				f.each(function() {
					var y = a(this),
						D = a(x),
						B = a(".staticBody", D);
					e || (e = a(".template", D));
					if(!a("select.classes > option", e)[0]) {
						var u = a(".add select.classes", e);
						a.each(g, function(F, I) {
							var C = a("<option></option>").val(I.bbx_permission_class_id).text(I.bbx_permission_class_name).data("desc", I.bbx_permission_class_description);
							u.append(C);
							u.bind("change keyup", function() {
								var M = a("option:selected", this).data("desc");
								a(this).closest(".add").find(".groupPermissionClassDesc").text(M || "")
							}).triggerHandler("change")
						})
					}
					c(y, B, e, v, l)
				})
			},
			q = function() {
				a.getTemplate("/cudatel/ajax-html/groupPermissionClass.html", function(v) {
					l.data ? o(l.data, v) : a.getREST("/cudatel/gui/permission_class/group_class", {
						bbx_group_id: l.bbx_group_id
					}, function(x) {
						o(x, v)
					})
				})
			};
		g ? q() : a.getREST("/cudatel/gui/permission_class/classes", function(v) {
			g = v.classes;
			q()
		});
		this.data("groupPermissionClass", l);
		return this
	}
})(jQuery);
(function(a) {
	var e, g = false,
		c = {
			OK: "Valid extension selected",
			NO_EBLOCK: "No blocks are available for use",
			NO_EXTERNAL: "No external numbers are available for use",
			EXTRA: "The specified extension is not appropriate for this operation",
			UNKNOWN_REASON: "Internal error validating this extension (No information)",
			LOADING: "One moment...",
			BLOCK_LOCKED: "This extension is in a locked block",
			CONTAINS: "A locked block cannot contain objects",
			INTERNAL_ERROR: "Internal error validating this extension",
			INTERSECTS: "Intersects an existing block boundary",
			INVALID: "Not a valid extension",
			IN_USE: "This extension is already in use",
			NO_EXT: "No extension selected",
			NO_INTERIOR: "This block is inside another block",
			MIXED: "This block contains an existing External Number",
			LOCKED_CONTAINS_OBJECTS: "Extensions already exist within the given range"
		},
		d = function(f, j, n, l) {
			var o = a("select.extType", j),
				q = a(".selector", j),
				v = a(".hiddens", j),
				x = "|" + l.allow.join("|") + "|";
			g ? a(".blocksList", j).text(g.join(", ") || "Please wait...") : a(".blocksList", j).text("Please wait...");
			a.getREST("/cudatel/gui/extension/containers", {}, function(u) {
				u = u.containers;
				if(l.showValid) {
					g = a.map(u, function(F) {
						return F.bbx_extension_value
					});
					a(".blocksList", j).text(g.join(", ") || "(No available extensions)")
				} else a(".blocks", j).remove()
			});
			var y = false,
				D = function(u, F) {
					var I = {
						valid: true
					};
					if(a.isFunction(F.extraValidation)) {
						var C = F.extraValidation(u);
						if(C && C !== true && c[C]) {
							u.result = {
								why: C,
								why_desc: c[C]
							};
							B(u);
							return
						} else if(C && C !== true) {
							u.result = {
								why: "EXTRA",
								why_desc: C || c.EXTRA
							};
							B(u);
							return
						}
					}
					if(u.begin && u.end) {
						a(".beginHidden", v).val(u.begin);
						a(".endHidden", v).val(u.end);
						a(".singleHidden", v).val(u.begin + "-" + u.end);
						I.bbx_extension_block_begin = u.begin;
						I.bbx_extension_block_begin = u.end;
						I.bbx_extension_value = u.begin + "-" + u.end
					}
					if(u.single) {
						a(".singleHidden", v).val(u.single);
						I.bbx_extension_value = u.single
					}
					if(u.id) {
						a(".idHidden", v).val(u.id).enable("novalue");
						I.bbx_extension_id = u.id
					} else a(".idHidden", v).val("").disable("novalue");
					j.trigger("validate", I);
					j.trigger("valid", I);
					j.data("extensionValidatorState", I);
					I = a('<div class="extValid"><img src="/cudatel/images/valid.png" width="15" height="15" alt="Invalid" style="vertical-align: middle; padding-right: 1em;" /><span class="validMessage"></span></div>');
					a(".validMessage", I).text(c.OK);
					a(".validity", j).empty().append(I)
				},
				B = function(u) {
					a(".beginHidden, .endHidden, .singleHidden", j).val("");
					var F = {
						valid: false,
						bbx_extension_value: u.single,
						bbx_extension_block_begin: u.begin,
						bbx_extension_block_end: u.end
					};
					j.trigger("validate", F);
					j.trigger("invalid", F);
					j.data("extensionValidatorState", F);
					F = a('<div class="extInvalid"><img src="/cudatel/images/invalid.png" width="15" height="15" alt="Invalid" style="vertical-align: middle; padding-right: 1em;" /><span class="validMessage"></span></div>');
					u.result = !u.result || !u.result.why ? {
						why: "UNKNOWN_REASON",
						why_desc: c.UNKNOWN_REASON
					} : u.result.why === "EXTRA" ? {
						why: "EXTRA",
						why_desc: u.result.why_desc || c.EXTRA
					} : {
						why: u.result.why,
						why_desc: c[u.result.why] || c.UNKNOWN_REASON
					};
					a(".validMessage", F).text(u.result.why_desc);
					a(".validity", j).empty().append(F)
				};
			a("option", o).each(function(u, F) {
				var I = a(F);
				stringContains("|" + a(F).val() + "|", x) || I.remove()
			});
			a("option", o).length === 1 && o.hide();
			o.bind("change keyup", function() {
				var u = o.val();
				if(u !== y) {
					y = u;
					var F = a(".selector-" + u, n).clone();
					q.empty().append(F);
					v.empty();
					stringContains("|id|", x) && a('<input type="hidden" class="idHidden" />', {
						name: l.hiddens.id
					}).appendTo(v);
					B({
						result: {
							valid: false,
							why: "LOADING"
						}
					});
					var I = {};
					if(l.allowUserSecondaries) {
						I.test = "add_line";
						I.bbx_user_id = l.allowUserSecondaries
					}
					switch(u) {
					case "nextfree":
						if(l.hiddens.nextfree) a('<input type="hidden" />').attr("name", l.hiddens.nextfree).val(l.nextFreeValue || "").appendTo(v);
						D({
							nextfree: true
						}, l);
						break;
					case "single":
						if(l.hiddens.single) a('<input type="hidden" class="singleHidden" />').attr({
							name: l.hiddens.single || "bbx_extension_value"
						}).appendTo(v);
						a("input.single", F).debounce("keyup", function() {
							var Q = a(this).val();
							a.getREST("/cudatel/gui/extension/valid", a.extend({}, I, {
								bbx_extension_value: Q
							}), function(N) {
								N.valid.valid ? D({
									why: N.valid.why,
									block: false,
									begin: Q,
									end: Q,
									single: Q
								}, l) : B({
									begin: Q,
									end: Q,
									single: Q,
									result: N.valid
								})
							})
						}, 300).trigger("keyup");
						break;
					case "block":
						if(l.lockedBlock) {
							u = a(".blockLock > input", F);
							l.lockedBlock !== true && u.attr("name", l.lockedBlock);
							u.bind("change", function() {
								a("input.begin", F).trigger("keyup")
							});
							if(l.alwaysLocked) a(".blockLock", F).replaceWith('<input type="hidden" name="' + (l.lockedBlock === true ? "flag_locked" : l.lockedBlock) + '" value="1" />')
						} else a(".blockLock", F).remove();
						if(l.hiddens.block) {
							a('<input type="hidden" class="beginHidden" />').attr({
								name: l.hiddens.block[0] || "bbx_extension_block_begin"
							}).appendTo(v);
							a('<input type="hidden" class="endHidden" />').attr({
								name: l.hiddens.block[1] || "bbx_extension_block_end"
							}).appendTo(v)
						}
						if(l.hiddens.single) a('<input type="hidden" class="singleHidden" />').attr({
							name: l.hiddens.single || "bbx_extension_value"
						}).appendTo(v);
						a("input.begin, input.end", F).debounce("keyup", function() {
							var Q = a("input.begin", F).val(),
								N = a("input.end", F).val();
							if(parseInt(Q, 10) > parseInt(N, 10)) {
								var X = Q;
								Q = N;
								N = X
							}
							var ma = Q + "-" + N;
							a.getREST("/cudatel/gui/extension/valid", a.extend({}, I, {
								bbx_extension_block_begin: Q,
								bbx_extension_block_end: N,
								flag_locked: a(".blockLock > input:checked").val() || l.alwaysLocked ? 1 : 0
							}), function(pa) {
														result: {
										why: "NO_EXTERNAL"
									}
								})
							} else {
								M.empty();
								if(Q.blocks && Q.blocks.length) {
									var N = Q.singles && Q.singles.length ? a('<optgroup label="Block Numbers"></optgroup>').appendTo(M) : M;
									a.each(Q.blocks, function(ma, pa) {
										var Ma = pa.bbx_extension_id,
											oa = pa.bbx_extension_value,
											Ka = format_information(oa, {
												ndash: true
											});
										a("<option></option>").attr("value", oa).text(Ka).data("extension", {
											block: true,
											begin: pa.bbx_extension_block_begin,
											end: pa.bbx_extension_block_end,
											id: Ma,
											single: oa
										}).appendTo(N)
									})
								}
								if(Q.singles && Q.singles.length) {
									var X = Q.blocks && Q.blocks.length ? a('<optgroup label="Individual Numbers"></optgroup>').appendTo(M) : M;
									a.each(Q.singles, function(ma, pa) {
										var Ma = format_information(pa);
										a("<option></option>").attr("value", pa).text(Ma).data("extension", {
											block: false,
											begin: pa,
											end: pa,
											single: pa
										}).appendTo(X)
									})
								}
								M.bind("change keyup", function() {
									D(a("option:selected", M).data("extension"), l)
								}).triggerHandler("change")
							}
						})
					}
					F.appendTo(a(".selector", j))
				}
			}).triggerHandler("change");
			f.html(j)
		},
		b = function() {
			return a(">.staticBody", this).data("extensionValidatorState")
		};
	a.fn.extensionValidator = function(f) {
		var j = this,
			n = {
				getState: b
			};
		if(n[f]) {
			var l = this.data("extensionValidator");
			if(typeof l === "undefined") {
				this.data("extensionValidator", {});
				l = this.data("extensionValidator")
			}
			return n[f].apply(this, [].concat([l], Array.prototype.slice.call(arguments, 1)))
		} else if(f && typeof f !== "object") {
			console_log("Method does not exist in plugin extensionValidator");
			return this
		}
		var o = f || {};
		o.allow = o.allow || ["nextfree", "single", "block", "existingblock", "external"];
		o = a.extend(true, {
			lockedBlock: "flag_locked",
			hiddens: {
				nextfree: false,
				single: "bbx_extension_value",
				block: ["bbx_extension_block_begin", "bbx_extension_block_end"],
				id: "bbx_extension_id"
			},
			nextFreeValue: "",
			showValid: true
		}, o);
		a.getTemplate("/cudatel/ajax-html/extensionValidator.html", function(q) {
			j.each(function() {
				var v = a(this),
					x = a(q),
					y = a(".staticBody", x);
				e = e || a(".template", x);
				d(v, y, e, o)
			})
		});
		this.data("extensionValidator", o);
		return this
	};
	a.fn.fmExtensionValidator = function(f) {
		return this.extensionValidator(f).bind("valid", function() {
			a("input[type=hidden]", this).trigger("dirty")
		})
	}
})(jQuery);
(function(a) {
	var e, g = {
		bbx_user_id: {
			idColumn: "bbx_user_id",
			get: "/cudatel/gui/user/user",
			rename: {
				field: ["bbx_contact_first_name", "bbx_contact_last_name"],
				action: "/cudatel/gui/user/user"
			},
			"delete": {
				action: "/cudatel/gui/user/user",
				extraText: "This will remove all of the user's Address Book entries, Voice Mail, and Fax files."
			},
			migrate: {
				action: "/cudatel/gui/extension/migrate"
			},
			impersonate: {
				action: "/cudatel/gui/login/impersonate"
			}
		},
		bbx_group_id: {
			idColumn: "bbx_group_id",
			get: "/cudatel/gui/extension/group",
			rename: {
				field: "bbx_group_name",
				action: "/cudatel/gui/extension/group"
			},
			"delete": {
				action: "/cudatel/gui/extension/group"
			},
			migrate: {
				action: "/cudatel/gui/extension/migrate"
			}
		},
		bbx_queue_id: {
			idColumn: "bbx_queue_id",
			get: "/cudatel/gui/queue/queue",
			rename: {
				field: "bbx_queue_name",
				action: "/cudatel/gui/queue2/queue"
			},
			"delete": {
				action: "/cudatel/gui/queue2/queue"
			},
			migrate: {
				action: "/cudatel/gui/extension/migrate"
			}
		},
		bbx_conference_id: {
			idColumn: "bbx_conference_id",
			get: "/cudatel/gui/conference/conference",
			rename: {
				field: "bbx_conference_name",
				action: "/cudatel/gui/conference/conference"
			},
			"delete": {
				action: "/cudatel/gui/conference/conference"
			},
			migrate: {
				action: "/cudatel/gui/extension/migrate"
			}
		},
		bbx_valet_parking_id: {
			idColumn: "bbx_valet_parking_id",
			get: "/cudatel/gui/valet_parking/valet_parking",
			rename: {
				field: "bbx_valet_parking_name",
				action: "/cudatel/gui/valet_parking/valet_parking"
			},
			"delete": {
				action: "/cudatel/gui/valet_parking/valet_parking"
			},
			migrate: {
				action: "/cudatel/gui/extension/migrate"
			}
		},
		bbx_auto_attendant_id: {
			idColumn: "bbx_auto_attendant_id",
			get: "/cudatel/gui/auto_attendant/auto_attendant",
			rename: {
				field: "bbx_auto_attendant_name",
				action: "/cudatel/gui/auto_attendant/auto_attendant"
			},
			"delete": {
				action: "/cudatel/gui/auto_attendant/auto_attendant"
			}
		},
		bbx_router_id: {
			idColumn: "bbx_router_id",
			get: "/cudatel/gui/router/router",
			rename: {
				field: "bbx_router_name",
				action: "/cudatel/gui/router/router"
			},
			"delete": {
				action: "/cudatel/gui/router/router"
			},
			migrate: {
				action: "/cudatel/gui/extension/migrate"
			}
		},
		bbx_phone_id: {
			idColumn: "bbx_phone_id",
			get: "/cudatel/gui/phone/phone",
			rename: {
				field: "bbx_phone_name",
				action: "/cudatel/gui/phone/phone"
			},
			"delete": {
				action: "/cudatel/gui/phone/phone"
			},
			migrate: {
				action: "/cudatel/gui/extension/migrate"
			}
		}
	},
		c = function(d, b, f, j, n) {
			var l = j,
				o = n.get.replace(/^.*\//, "");
			if(l[o] && a.isArray(l[o])) l = l[o];
			if(a.isArray(l) && l[n.idColumn]) l = l[0];
			if(a.isPlainObject(l) && l[n.idColumn]) {
				o = format_information(l.bbx_extension_value, {
					dash: true
				});
				a(".extensionNumber", b).text(o);
				if(!l.show_name) if(n.type === "bbx_user_id") l.show_name = l.bbx_contact_first_name + " " + l.bbx_contact_last_name;
				else if(l[n.type.replace(/_id$/, "_name")]) l.show_name = l[n.type.replace(/_id$/, "_name")];
				a(".extensionName", b).text(l.show_name);
				a.each(["rename", "delete", "impersonate"], function(q, v) {
					n[v] && a("." + v, f).clone().appendTo(a(".edmOps", b))
				});
				n.migrate && l.bbx_extension_block_begin === l.bbx_extension_block_end && a(".migrate", f).clone().appendTo(a(".edmOps", b));
				o = a(".edmOps > a", b);
				o.not(":last").after('<span class="comma">, </span>');
				o.bind("click", function(q) {
					q.preventDefault()
				});
				n.rename && a("a.rename", b).bind("click", function() {
					var q = a(".extensionName", b),
						v, x = function(u) {
							a.isArray(n.rename.field) ? q.text(a.map(n.rename.field, function(F, I) {
								return u[I]
							}).join(" ")) : q.text(u[n.rename.field]);
							u[n.idColumn] = l[n.idColumn];
							a.putREST(n.rename.action || n.get, u, function() {});
							y()
						},
						y = function() {
							v.remove();
							q.show()
						};
					if(a.isArray(n.rename.field) && n.rename.field[1]) {
						v = a('<span class="inlineEditWrap"></span>');
						var D = a();
						q.hide().after(v);
						a.each(n.rename.field, function(u, F) {
							var I = a('<input type="text" class="inlineEdit" name="' + F + '"/>');
							I.val(j[F]).sizedText().appendTo(v);
							D = D.add(I)
						});
						D.bind("blur", function() {
							var u = setTimeout(function() {
								x(D.serializeObject())
							}, 100);
							D.one("focus", function() {
								clearTimeout(u)
							})
						});
						D.bind("keyup", function(u) {
							if(u.which === a.ui.keyCode.ENTER) {
								D.unbind("blur");
								x(D.serializeObject())
							} else if(u.which === a.ui.keyCode.ESCAPE) {
								D.unbind("blur");
								y()
							}
						});
						D[0].focus();
						D[0].select();
						D.trigger("keyup")
					} else {
						var B = a('<input type="text" class="inlineEdit" name="' + n.rename.field + '"/>');
						v = B;
						B.sizedText();
						B.val(l[n.rename.field]);
						q.hide().after(B);
						B.bind("blur", function() {
							x(B.serializeObject())
						});
						B.bind("keyup", function(u) {
							if(u.which === a.ui.keyCode.ENTER) {
								B.unbind("blur");
								x(B.serializeObject())
							} else if(u.which === a.ui.keyCode.ESCAPE) {
								B.unbind("blur");
								y()
							}
						});
						B[0].focus();
						B[0].select();
						B.trigger("keyup")
					}
				});
				n["delete"] && a("a.delete", b).bind("click", function() {
					var q = a(this),
						v = {};
					v[n.idColumn] = l[n.idColumn];
					showBlanker({
						title: "Delete " + entity.ldquo + l.show_name + entity.rdquo + "?",
						text: "This extension, its configuration options, and all secondary extensions bound to it will be removed. " + (n["delete"].extraText ? n["delete"].extraText + " " : "") + "This cannot be undone.",
						buttons: ["Delete", "Cancel"],
						callbacks: [function() {
							var x = a(this).closest(".blankerPanel");
							a("button", x).attr("disabled", "disabled");
							a.deleteREST(n["delete"].action || n.get, v, {
								complete: function() {
									q.trigger("close_request");
									blankerCancel.call(x)
								}
							})
						},
						blankerCancel]
					})
				});
				n.migrate && a("a.migrate", b).bind("click", function() {
					showPopup({
						init: function(q) {
							var v = a(".migratePopup", f).clone(),
								x = a(".migrateForm", v);
							a(".migratePicker", v).extensionValidator({
								allow: ["nextfree", "single"]
							}).bind("invalid", function() {
								a(".migrateForm button", v).disable("valid")
							}).bind("valid", function() {
								a(".migrateForm button", v).enable("valid")
							});
							x.bind("submit", function(y) {
								y.preventDefault();
								y = x.serializeObject();
								y.bbx_extension_id = l.bbx_extension_id;
								a.putREST(n.migrate.action, y, {
									complete: function() {
										q.trigger("close_request")
									},
									success: function(D) {
										a(".extensionNumber", b).text(format_information(D.migrate.bbx_extension_value, {
											dash: true
										}));
										b.trigger("extensionMigrated", D.migrate)
									}
								})
							});
							q.html(v)
						}
					})
				});
				n.impersonate && a("a.impersonate", b).bind("click", function() {
					showBlanker({
						title: "Impersonate " + entity.ldquo + l.show_name + entity.rdquo + "?",
						text: "Are you sure you want to impersonate this user? This action will log off your current user, and log you in as " + entity.ldquo + l.show_name + "." + entity.rdquo + " You will need to logout and log back in as your current user when you are finished.",
						buttons: ["Impersonate", "Cancel"],
						callbacks: [function() {
							blankerCancel.call(this);
							showBlanker({
								title: "Logout in progress",
								text: "Please wait while you are logged out and logged back in as " + entity.ldquo + l.show_name + "." + entity.rdquo,
								icon: false,
								spinner: true,
								buttons: false
							});
							a.post(n.impersonate.action, {
								bbx_user_id: l.bbx_user_id
							}, function() {
								SUPPRESS_ERROR_DISPLAY = true;
								window.location.hash = "";
								window.location.reload()
							})
						},
						blankerCancel]
					})
				});
				d.html(b)
			} else console_log("jquery.detailMasthead.js: Unsupported data structure. Could not unwrap ", j, " to find ", n.idColumn, " in ", o)
		};
	a.fn.detailMasthead = function(d) {
		var b = this,
			f = {};
		if(f[d]) {
			var j = this.data("detailMasthead");
			if(typeof j === "undefined") {
				this.data("detailMasthead", {});
				j = this.data("detailMasthead")
			}
			return f[d].apply(this, [].concat([j], Array.prototype.slice.call(arguments, 1)))
		} else if(d && typeof d !== "object") {
			console_log("Method does not exist in plugin detailMasthead");
			return this
		}
		var n = d || {};
		if(g[n.type]) n = a.extend(true, {}, g[n.type], n);
		if(n.type && !n.idColumn) n.idColumn = n.type;
		if(!n.type) {
			console_log("jquery.detailMasthead.js: No type parameter given");
			return this
		}
		if(!n.get) {
			f = n.type.match(/bbx_(.+)_id/);
			if(f[1]) {
				n.get = "/cudatel/gui/" + f[1] + "/" + f[1];
				console_log('jquery.detailMasthead.js: No get parameter given: assuming "' + n.get + '" from type definition')
			} else console_log("jquery.detailMasthead.js: No get parameter given, and the type is an unknown format")
		}
		var l = function(o, q) {
				b.each(function() {
					var v = a(this),
						x = a(q),
						y = a(".staticBody", x);
					e = e || a(".template", x);
					c(v, y, e, o, n)
				})
			};
		b.html('<div><h2 class="detailMasthead stillLoading">&nbsp;</h2></div>');
		a.getTemplate("/cudatel/ajax-html/detailMasthead.html", function(o) {
			if(n.data) l(n.data, o);
			else {
				gd[n.idColumn] = n.id;
				a.getREST(n.get, {}, function(q) {
					l(q, o)
				})
			}
		});
		this.data("detailMasthead", n);
		return this
	}
})(jQuery);
(function(a) {
	var e, g = function(c, d, b, f) {
			var j = f.status.split(": ");
			switch(j[0]) {
			case "HA Not Available":
				j = j[1].split(",");
				a(".haContent", d).html(a(".haNotAvailable", b).clone());
				a.each(j, function(l, o) {
					a(".haContent", d).append(a(".haNA" + o, b).clone())
				});
				break;
			case "HA Capable":
			case "HA Ready":
				var n = a(".haContent", d).replaceWith(a(".haAvailable", b).clone());
				a(".pairForm", d).bind("submit", function(l) {
					l.preventDefault();
					showBlanker({
						title: "Create High Availability Pair?",
						text: "Creating the High Availability Pair will remove all data on the other (secondary) Communication Server",
						buttons: ["Create Pair", "Cancel"],
						callbacks: [function() {
							waitBlanker = showBlanker({
								title: "High Availability Pairing in progress",
								text: "High Availability Pairing is currently in progress. Please wait.",
								spinner: true,
								icon: "/cudatel/images/ha_peer_icon.png",
								buttons: false
							});
							var o = a(".pairForm").serializeObject();
							a.postREST("/cudatel/gui/ha/pair", o, {
								afterError: function() {
									waitBlanker && waitBlanker.trigger("closeBlanker")
								},
								success: function() {
									SUPPRESS_ERROR_DISPLAY = true;
									APE_ALIVE_TIMEOUT = 99999999;
									setInterval(function() {
										a.getREST("/cudatel/gui/ha/status", {}, function(q) {
											q.status === "HA Active: stable" && setTimeout(function() {
												location.reload()
											}, 15E3)
										})
									}, 5E3)
								}
							});
							blankerCancel.call(this)
						},
						blankerCancel]
					})
				});
				break;
			case "HA Pairing":
				a(".haContent", d).replaceWith(a(".haPairing", b).clone());
				break;
			case "HA Active":
				a(".haContent", d).replaceWith(a(".haActive", b).clone());
				a.getJSONCached("/cudatel/gui/ha_ip/ha_ip", {}, 3E3, function(l) {
					if(l.ha_ip.ha_system_ip) {
						var o = l.ha_ip.ha_system_ip.replace(/[^0-9\.]/g, "");
						a(".haSharedIP", n).text(o).attr("href", "http://" + o)
					}
					if(l.ha_ip.ha_wan_ip) {
						l = l.ha_ip.ha_wan_ip.replace(/[^0-9\.]/g, "");
						a(".haSharedWAN", n).text(l).attr("href", "http://" + l)
					} else a(".haHasWAN", n).remove()
				});
				a(".unpairForm", d).bind("submit", function(l) {
					l.preventDefault();
					showBlanker({
						title: "Unpair High Availability Pair?",
						text: "This will remove High Availability from this pair.",
						buttons: ["Stop High Availability", "Cancel"],
						callbacks: [function() {
							waitBlanker = showBlanker({
								title: "High Availability Unpairing in progress",
								text: "High Availability Unpairing is currently in progress. Please wait.",
								spinner: true,
								icon: false,
								buttons: false
							});
							a.postREST("/cudatel/gui/ha/unpair", {}, {
								afterError: function() {
									waitBlanker && waitBlanker.trigger("closeBlanker")
								},
								success: function() {
									SUPPRESS_ERROR_DISPLAY = true;
									APE_ALIVE_TIMEOUT = 99999999;
									setInterval(function() {
										a.getREST("/cudatel/gui/ha/status", {}, function(o) {
											if(o.status === "HA Capable" || o.status === "HA Ready") setTimeout(function() {
												location.reload()
											}, 15E3)
										})
									}, 5E3)
								}
							});
							blankerCancel.call(this)
						},
						blankerCancel]
					})
				});
				break;
			default:
				showError("Unknown HA status");
				console_log("Unknown HA Status:", f, f.status)
			}
			trueish(f.has_wan) || a(".ifWanIP", d).remove();
			c.html(d);
			a(".pairForm", d).find("input[name=ip], input[name=wan_ip]").ipv4Input()
		};
	a.fn.haSettings = function(c) {
		var d = this,
			b = c || {},
			f = function(j, n) {
				d.each(function() {
					var l = a(this),
						o = a(n),
						q = a(".staticBody", o);
					e = e || a(".template", o);
					g(l, q, e, j, b)
				})
			};
		a.getTemplate("/cudatel/ajax-html/haSettings.html", function(j) {
			b.data ? f(b.data, j) : a.getREST("/cudatel/gui/ha/status", {}, function(n) {
				f(n, j)
			})
		});
		this.data("haSettings", b);
		return this
	}
})(jQuery);
(function(a) {
	var e = {
		build: function() {
			var g = this,
				c = function() {
					a("button.smtpError", g).attr("disabled", "disabled");
					closePopupMessage("last_mail_error");
					a(".lastMailError", g).empty();
					a.postREST("/cudatel/gui/mail/test", {});
					popupMessage("A test message has been sent to the notification E-mail address. It may take some time to determine whether the test was successful.", 0);
					setTimeout("getMessageCache('system_status', 'last_mail_error', true);", 5E3)
				};
			a.getTemplate("/cudatel/ajax-html/settings/smtp.html", function(d) {
				g.html(d);
				var b = a("form", g);
				b.formModule();
				a("button.smtpTest", g).bind("click", function() {
					if(b.hasClass("dirty")) confirm("You have unsaved SMTP settings. Are you sure you want to send a test message with the old settings instead of these unsaved settings?") && c();
					else c()
				});
				a("button.smtpFlush", g).bind("click", function() {
					a.postREST("/cudatel/gui/mail/flush", {})
				});
				a("button.smtpError", g).bind("click", function() {
					a.getREST("/cudatel/gui/jsoncache/cache", {
						channel: "last_mail_error"
					}, function(f) {
						a(".lastMailError", g).html("<pre>" + f.last_mail_error + "</pre>")
					})
				})
			})
		},
		enter: function() {
			var g = this,
				c = getHashParam("showlasterror");
			a.getREST("/cudatel/gui/jsoncache/cache", {
				channel: "last_mail_error"
			}, function(d) {
				if(!d || !d.last_mail_error || d.last_mail_error.length == 0) a("button.smtpError", g).attr("disabled", "disabled");
				else c == 1 && d.last_mail_error.length > 0 && a(".lastMailError", g).html("<pre>" + d.last_mail_error + "</pre>")
			});
			getMessageCache("system_status", "last_mail_error", true)
		}
	};
	a.fn.smtpSettings = function(g) {
		var c = a(this);
		if(e[g]) return e[g].apply(c);
		else a.error("Method " + g + " does not exist on JQuery.smtpSettings")
	}
})(jQuery);
(function(a) {
	a.fn.disable = function(e) {
		if(typeof e === "string") e = {
			key: e
		};
		e = a.extend({
			key: "_unspecified"
		}, e || {});
		this.each(function() {
			var g = a(this),
				c = g.data("disableKeys") || {};
			c[e.key] = true;
			g.data("disableKeys", c).attr("disabled", "disabled").trigger("enable-disable", e.key)
		});
		return this
	};
	a.fn.enable = function(e) {
		if(typeof e === "string") e = {
			key: e
		};
		e = a.extend({
			key: "_unspecified"
		}, e || {});
		this.each(function() {
			var g = a(this),
				c = g.data("disableKeys") || {};
			delete c[e.key];
			a.isEmptyObject(c) && g.removeAttr("disabled").trigger("enable-disable", e.key);
			g.data("disableKeys", c)
		});
		return this
	}
})(jQuery);
$.fn.getCss = function(a) {
	var e = this,
		g = {};
	$.each(a, function(c, d) {
		g[d] = e.css(d)
	});
	return g
};
(function(a) {
	var e, g = function(c, d, b, f) {
			d.sortList({
				allow: ["add", "remove"],
				data: f.block,
				rowData: {
					value: function(j) {
						$row = a(".extBlock", b).clone();
						a(".numbers", $row).text(format_information(j.bbx_extension_value, {
							ndash: true
						}));
						var n = txt("type_name_" + (j.type || "alloc"));
						a(".icon", $row).append('<img src="' + txt("type_icon_" + (j.type || "alloc")) + '" alt="' + n + '" title="' + n + '" />');
						if(j.type) {
							a(".isPrimary", $row).text(trueish(j.flag_primary) ? "Primary" : "Secondary");
							a(".name", $row).text(j.show_name)
						}
						return $row
					},
					render: "html"
				},
				addForm: {
					value: function() {
						var j = a(".newExtBlock", b).clone();
						j.ajaxForm({
							url: "/cudatel/gui/extension/block",
							type: "POST",
							dataType: "json",
							accept: "application/json",
							success: function(n) {
								d.trigger("add", {
									data: n.block,
									last: true
								})
							}
						});
						a(".extPicker", j).extensionValidator({
							lockedBlock: false,
							showValid: false,
							allow: ["block"],
							extraValidation: function(n) {
								return n.why === "SUPER" ? true : "Block is within an existing block"
							}
						}).bind("valid", function() {
							a("button[type=submit]", j).enable("extensionValidator")
						}).bind("invalid", function() {
							a("button[type=submit]", j).disable("extensionValidator")
						}).trigger("invalid");
						return j
					},
					render: "html",
					position: "last"
				},
				addLink: {
					value: "Add an extension block",
					position: "last"
				},
				remove: function(j, n) {
					var l;
					l = {
						title: "Delete Extension Block",
						text: "This will delete the block " + format_information(n.row.bbx_extension_value, {
							ndash: true
						}) + " and all existing extensions and blocks within this range. This action cannot be undone.",
						buttons: ["Delete", "Cancel"],
						callbacks: [function() {
							a.deleteREST("/cudatel/gui/extension/block", {
								bbx_extension_id: n.row.bbx_extension_id
							}, function() {
								n.success();
								c.empty().extensionBlockMgr()
							});
							blankerCancel.call(this)
						},
						blankerCancel]
					};
					if(n.row.type) a.extend(true, l, {
						text: "This will delete the block " + format_information(n.row.bbx_extension_value, {
							ndash: true
						}) + " and all existing extensions and blocks within this range. " + entity.ldquo + n.row.show_name + entity.rdquo + (n.row.flag_primary ? " will also be deleted. " : " will no longer be associated with these extensions. ") + "This action cannot be undone.",
						title: "Delete Extension Block and Associated Object"
					});
					showBlanker(l)
				}
			});
			c.html(d)
		};
	a.fn.extensionBlockMgr = function(c) {
		var d = this,
			b = {};
		if(b[c]) {
			var f = this.data("extensionBlockMgr");
			if(typeof f === "undefined") {
				this.data("extensionBlockMgr", {});
				f = this.data("extensionBlockMgr")
			}
			return b[c].apply(this, [].concat([f], Array.prototype.slice.call(arguments, 1)))
		} else if(c && typeof c !== "object") {
			console_log("Method does not exist in plugin extensionBlockMgr");
			return this
		}
		var j = c || {},
			n = function(l, o) {
				d.each(function() {
					var q = a(this),
						v = a(o),
						x = a(".staticBody", v);
					e = e || a(".template", v);
					g(q, x, e, l, j)
				})
			};
		a.getTemplate("/cudatel/ajax-html/extensionBlockMgr.html", function(l) {
			j.data ? n(j.data, l) : a.getREST("/cudatel/gui/extension/block", {}, function(o) {
				n(o, l)
			})
		});
		this.data("extensionBlockMgr", j);
		return this
	}
})(jQuery);
(function(a) {
	a.alerts = {
		verticalOffset: -75,
		horizontalOffset: 0,
		repositionOnResize: true,
		overlayOpacity: 0.01,
		overlayColor: "#FFF",
		draggable: true,
		okButton: "&nbsp;OK&nbsp;",
		cancelButton: "&nbsp;Cancel&nbsp;",
		dialogClass: null,
		alert: function(e, g, c) {
			if(g == null) g = "Alert";
			a.alerts._show(g, e, null, "alert", function(d) {
				c && c(d)
			})
		},
		confirm: function(e, g, c) {
			if(g == null) g = "Confirm";
			a.alerts._show(g, e, null, "confirm", function(d) {
				c && c(d)
			})
		},
		prompt: function(e, g, c, d) {
			if(c == null) c = "Prompt";
			a.alerts._show(c, e, g, "prompt", function(b) {
				d && d(b)
			})
		},
		_show: function(e, g, c, d, b) {
			a.alerts._hide();
			a.alerts._overlay("show");
			a("BODY").append('<div id="popup_container"><h1 id="popup_title"></h1><div id="popup_content"><div id="popup_message"></div></div></div>');
			a.alerts.dialogClass && a("#popup_container").addClass(a.alerts.dialogClass);
			var f = a.browser.msie && parseInt(a.browser.version) <= 6 ? "absolute" : "fixed";
			a("#popup_container").css({
				position: f,
				zIndex: 99999,
				padding: 0,
				margin: 0
			});
			a("#popup_title").text(e);
			a("#popup_content").addClass(d);
			a("#popup_message").text(g);
			a("#popup_message").html(a("#popup_message").text().replace(/\n/g, "<br />"));
			a("#popup_container").css({
				minWidth: a("#popup_container").outerWidth(),
				maxWidth: a("#popup_container").outerWidth()
			});
			a.alerts._reposition();
			a.alerts._maintainPosition(true);
			switch(d) {
			case "alert":
				a("#popup_message").after('<div id="popup_panel"><input type="button" value="' + a.alerts.okButton + '" id="popup_ok" /></div>');
				a("#popup_ok").click(function() {
					a.alerts._hide();
					b(true)
				});
				a("#popup_ok").focus().keypress(function(n) {
					if(n.keyCode == 13 || n.keyCode == 27) a("#popup_ok").trigger("click")
				});
				break;
			case "confirm":
				a("#popup_message").after('<div id="popup_panel"><input type="button" value="' + a.alerts.okButton + '" id="popup_ok" /> <input type="button" value="' + a.alerts.cancelButton + '" id="popup_cancel" /></div>');
				a("#popup_ok").click(function() {
					a.alerts._hide();
					b && b(true)
				});
				a("#popup_cancel").click(function() {
					a.alerts._hide();
					b && b(false)
				});
				a("#popup_ok").focus();
				a("#popup_ok, #popup_cancel").keypress(function(n) {
					n.keyCode == 13 && a("#popup_ok").trigger("click");
					n.keyCode == 27 && a("#popup_cancel").trigger("click")
				});
				break;
			case "prompt":
				a("#popup_message").append('<br /><input type="text" size="30" id="popup_prompt" />').after('<div id="popup_panel"><input type="button" value="' + a.alerts.okButton + '" id="popup_ok" /> <input type="button" value="' + a.alerts.cancelButton + '" id="popup_cancel" /></div>');
				a("#popup_prompt").width(a("#popup_message").width());
				a("#popup_ok").click(function() {
					var n = a("#popup_prompt").val();
					a.alerts._hide();
					b && b(n)
				});
				a("#popup_cancel").click(function() {
					a.alerts._hide();
					b && b(null)
				});
				a("#popup_prompt, #popup_ok, #popup_cancel").keypress(function(n) {
					n.keyCode == 13 && a("#popup_ok").trigger("click");
					n.keyCode == 27 && a("#popup_cancel").trigger("click")
				});
				c && a("#popup_prompt").val(c);
				a("#popup_prompt").focus().select()
			}
			if(a.alerts.draggable) try {
				a("#popup_container").draggable({
					handle: a("#popup_title")
				});
				a("#popup_title").css({
					cursor: "move"
				})
			} catch(j) {}
		},
		_hide: function() {
			a("#popup_container").remove();
			a.alerts._overlay("hide");
			a.alerts._maintainPosition(false)
		},
		_overlay: function(e) {
			switch(e) {
			case "show":
				a.alerts._overlay("hide");
				a("BODY").append('<div id="popup_overlay"></div>');
				a("#popup_overlay").css({
					position: "absolute",
					zIndex: 99998,
					top: "0px",
					left: "0px",
					width: "100%",
					height: a(document).height(),
					background: a.alerts.overlayColor,
					opacity: a.alerts.overlayOpacity
				});
				break;
			case "hide":
				a("#popup_overlay").remove()
			}
		},
		_reposition: function() {
			var e = a(window).height() / 2 - a("#popup_container").outerHeight() / 2 + a.alerts.verticalOffset,
				g = a(window).width() / 2 - a("#popup_container").outerWidth() / 2 + a.alerts.horizontalOffset;
			if(e < 0) e = 0;
			if(g < 0) g = 0;
			if(a.browser.msie && parseInt(a.browser.version) <= 6) e += a(window).scrollTop();
			a("#popup_container").css({
				top: e + "px",
				left: g + "px"
			});
			a("#popup_overlay").height(a(document).height())
		},
		_maintainPosition: function(e) {
			if(a.alerts.repositionOnResize) switch(e) {
			case true:
				a(window).bind("resize", a.alerts._reposition);
				break;
			case false:
				a(window).unbind("resize", a.alerts._reposition)
			}
		}
	};
	jAlert = function(e, g, c) {
		a.alerts.alert(e, g, c)
	};
	jConfirm = function(e, g, c) {
		a.alerts.confirm(e, g, c)
	};
	jPrompt = function(e, g, c, d) {
		a.alerts.prompt(e, g, c, d)
	}
})(jQuery);
(function(a) {
	var e = {
		LOADING: ["#666", "Unknown", "Waiting for a status update"],
		UNREGED: ["red", "Failed", "Unregistered"],
		REFRESH: ["#666", "Refresh", "Registration is being refreshed"],
		TRYING: ["#666", "Trying", "Registering"],
		REGISTER: ["#666", "Trying", "Registering"],
		REGED: ["", "Registered", "Registered"],
		UNREGISTER: ["#666", "Reset", "Unregistering"],
		FAILED: ["red", "Failed", "Registration Failed"],
		FAIL_WAIT: ["#666", "Trying", "Retrying Registration"],
		EXPIRED: ["red", "Failed", "Registration Expired"],
		NOREG: ["", "Available", "Registration is not required"]
	},
		g = function(d, b) {
			var f = e[d] || ["red", "Unknown", "An unknown state has been reported"];
			b.css("color", f[0]).text(f[1]).attr("title", f[2])
		},
		c = function(d, b, f) {
			var j = f.bbx_provider_gateway_id;
			f = f.bbx_provider_gateway_state || "LOADING";
			Ape.subscribe("provider_status");
			a(window).bind("meteor_provider_status", function(n, l) {
				a.isPlainObject(l.json) && l.json.action == "modify" && l.json.bbx_provider_gateway_id == j && g(l.json.bbx_provider_gateway_state, b)
			});
			g(f, b);
			d.html(b)
		};
	a.fn.gatewayRegState = function(d) {
		d = d || {};
		this.each(function() {
			var b = a(this),
				f = a('<span class="staticBody gatewayRegState"></span>');
			c(b, f, d)
		});
		this.data("gatewayRegState", d);
		return this
	}
})(jQuery);
(function(a) {
	var e = {
		ok: ["OK", "#fff", "#060", "No equipment failure has been reported"],
		missing: ["Hardware Failure: Port Offline", "#fff", "#600", "Due to a hardware failure, the port is offline"],
		red: ["Local Failure", "#fff", "#f00", "A local equipment failure has been reported"],
		yellow: ["Remote Failure", "#000", "#fc0", "A remote equipment failure has been reported"],
		blue: ["Intermediate Equipment Failure", "#fff", "#00c", "A failure has been reported with equipment between your system and the provider"],
		rai: ["Remote Failure", "#d00", "", "The remote side of the connection is reporting a failure (RAI)"],
		ais: ["Provider Repeater Failure", "#d00", "", "An upstream repeater is reporting a failure (AIS)"],
		general: ["General Failure", "#f44", "#000", "A general failure has been reported"]
	},
		g = ["missing", "red", "yellow", "blue", "rai", "ais", "general", "ok"],
		c = function(b, f, j) {
			a(".alarm", j).remove();
			if(f = e[b || "ok"] || false) {
				b = a('<span class="tdmAlarm alarm alarm-' + b + '"></span>').css({
					color: f[1],
					"background-color": f[2] || ""
				}).text(f[0]).attr("title", f[3]);
				j.prepend(b)
			}
		},
		d = function(b, f, j) {
			var n = j.bbx_tdm_card_port_id;
			Ape.subscribe("tdm_status");
			a(window).bind("meteor_tdm_status", function(l, o) {
				a.isPlainObject(o.json) && o.json.bbx_tdm_card_port_id == n && c(o.json.alarm, o.json.alarm_state, f)
			});
			c("ok", true, f);
			a.each(g, function(l, o) {
				trueish(j["bbx_tdm_card_port_alarm_" + o]) && c(o, true, f)
			});
			j.bbx_tdm_card_port_status === "missing" && c("missing", true, f);
			b.html(f)
		};
	a.fn.hardwareState = function(b) {
		b = b || {};
		this.each(function() {
			var f = a(this),
				j = a('<span class="staticBody hardwareState"></span>');
			d(f, j, b)
		});
		this.data("hardwareState", b);
		return this
	}
})(jQuery);
(function(a) {
	a.fn.tagOriginalValues = function() {
		this.find(":input").each(function(e, g) {
			var c = a(g),
				d = c.filter(":checkbox[name],:radio[name]");
			c = c.filter("input[name][type!=checkbox], select[name]", g);
			if(d[0]) {
				d.filter(":checked").data("wasChecked", true);
				d.filter(":not(:checked)").data("wasChecked", false)
			}
			c.each(function(b, f) {
				$elm = a(f);
				$elm.data("originalValue", $elm.val())
			})
		});
		return this
	}
})(jQuery);
(function(a) {
	a.fn.sizedText = function() {
		this.filter("input[type=text],input[type=password],input:not([type])").bind("keyup sizedTextboxInit", function() {
			$input = a(this);
			this.value = this.value;
			var e = $input.getCss(["font-family", "font-face", "font-weight", "font-size", "font-style"]),
				g = a("<div></div>");
			e = g.text($input.val() + "W").css(a.extend({}, e, {
				position: "absolute",
				left: "-999em",
				"white-space": "nowrap"
			})).appendTo("body").width();
			$input.css("width", e + "px");
			g.remove()
		}).triggerHandler("sizedTextboxInit");
		return this
	}
})(jQuery);
(function(a) {
	a.fn.gatewayStatus = function() {
		Ape.subscribe(["provider_status"]);
		this.jsonTable({
			url: "/cudatel/gui/gateway/combined",
			type: "GET",
			rowDataRoot: "combined",
			columnData: [{
				header: "",
				value: function(e) {
					var g = "";
					if(e.rowData.bbx_tdm_card_port_type === "ANALOG") g = "hwanalog";
					else if(e.rowData.bbx_tdm_card_port_type === "DIGITAL") g = "hwdigital";
					else if(e.rowData.bbx_provider_gateway_id) g = "provider";
					return a('<img src="/cudatel/images/typeicons/' + g + '.png" width="20" height="20" />')
				},
				render: "html"
			}, {
				header: "Name",
				value: function(e) {
					return e.rowData.bbx_provider_gateway_name || e.rowData.bbx_tdm_card_port_name || ""
				}
			}, {
				header: "Status",
				value: function(e) {
					e = e.rowData;
					return e.bbx_provider_gateway_id ? a("<span></span>").gatewayRegState({
						bbx_provider_gateway_id: e.bbx_provider_gateway_id,
						bbx_provider_gateway_state: e.bbx_provider_gateway_state
					}) : a("<div />").hardwareState(e)
				},
				render: "html"
			}]
		});
		return this
	}
})(jQuery);
(function(a) {
	var e = function(g, c, d, b) {
			var f = {},
				j = 0,
				n = false,
				l = false;
			b.wallboard ? a(".removeIfWallboard", c).hide() : a(".popGroupActivity", c).bind("click", function(v) {
				v.preventDefault();
				v = a(".groupSelected", c).val();
				var x = a(".filterSelector", c).val();
				windowOpen({
					preset: "fullscreen",
					url: "/cudatel/ajax-html/wallboard/liveGroupActivity.shtml#" + (v ? "bbx_group_id=" + v : "") + ";filters=" + x
				})
			});
			Ape.subscribe("channel_hangup");
			Ape.subscribe("call_event");
			a(window).bind("debug_dirty_lga", function() {
				n = true
			});
			a(window).bind("meteor_channel_hangup", function(v, x) {
				var y = x.json.uuid;
				if(f[y] && a(".uid-" + f[y], c)[0]) {
					delete f[y];
					n = true
				}
			});
			a(window).bind("meteor_call_event", function(v, x) {
				var y = x.json;
				f[y.uuid] = y.bbx_user_id
			});
			var o = function(v) {
					v = v || {};
					var x = v.bbx_group_id || a(".groupSelected", c).val();
					v = v.filters || a(".filterSelector", c).val();
					if(x) {
						a(".groupSelected", c).val(x);
						a(".filterSelector", c).val(v);
						v = v.split(",");
						var y = {
							sortorder: v[0],
							sortby: "total",
							rows: v[1],
							bbx_group_id: x,
							since: "same day"
						};
						if(j != x) {
							a.getREST("/cudatel/gui/group/basic", {
								bbx_group_id: x
							}, function(B) {
								a(".groupTitle", c).text("Statistics For: " + B.basic[0].bbx_group_name)
							});
							j = x
						}
						a(".filterDisplay").text(" / " + a(".filterSelector :selected", c).text() + " Today");
						if(y.sortorder == "both") {
							y.sortorder = "desc";
							var D = a();
							a.getREST("/cudatel/gui/group_report/member_status", y, function(B) {
								D = D.add(q(B, true, true).addClass("highest").addClass("double").addClass("rows" + y.rows));
								y.sortorder = "asc";
								a.getREST("/cudatel/gui/group_report/member_status", y, function(u) {
									D = D.add(q(u, false, true).addClass("lowest").addClass("double").addClass("rows" + y.rows));
									a(".lgaTablesWrap", c).html(D)
								})
							})
						} else a.getREST("/cudatel/gui/group_report/member_status", y, function(B) {
							q(B, true).addClass(y.sortorder == "asc" ? "lowest" : "highest").addClass("single").addClass("rows" + y.rows)
						})
					}
				},
				q = function(v, x, y) {
					var D = v.member_status,
						B = a();
					v = a(".lgaTable", d).clone();
					var u = a("tbody", v);
					a.each(D, function(F, I) {
						var C = a(".row", d).clone();
						a.each(I.calls, function() {
							f[trueish(I.i_am_caller) ? I.uuid : I.other_uuid] = I.bbx_user_id
						});
						C.addClass("uid-" + I.bbx_user_id);
						a(".name", C).text(I.show_name);
						a(".extensionValue", C).text(format_information(I.bbx_extension_value));
						a(".outCalls", C).text(I.n_out || "0");
						a(".outTime", C).text(a.formatInterval(I.total_out_secs || 0, {
							format: "medium"
						}));
						a(".totalCalls", C).text(I.n || "0");
						a(".totalTime", C).text(a.formatInterval(I.total_secs || 0, {
							format: "medium"
						}));
						B = B.add(C)
					});
					u.empty().append(B);
					if(!y) {
						y = a(".lgaTablesWrap", c);
						x ? y.html(v) : y.append(v)
					}
					return v
				};
			b.bbx_group_id && o(b);
			setInterval(function() {
				if(n) {
					n = false;
					if(l) {
						clearTimeout(l);
						l = setTimeout(function() {
							n = true
						}, 3E4)
					}
					o()
				}
			}, 5E3);
			a(".groupSelector", c).extensionPicker({
				searchTypes: ["group"],
				hidden: a(".groupSelected", c),
				hiddenFormat: "object_id",
				autoSelectFirst: true,
				textFormat: "label"
			}).bind("selection", function() {
				a(this).blur();
				o()
			}).bind("focus", function() {
				a(this).css({
					position: "static",
					left: ""
				});
				a(".groupSelectorValue", c).hide()
			}).bind("blur", function() {
				a(this).css({
					position: "absolute",
					left: "-999em"
				});
				a(".groupSelectorValue", c).text(a(".groupSelector", c).val() || "(No Group Selected)").show()
			}).triggerHandler("blur");
			a(".groupSelectorValue", c).bind("click", function() {
				a(".groupSelector", c).focus()
			});
			a(".filterSelector", c).bind("blur", function() {
				a(this).css({
					position: "absolute",
					left: "-999em"
				});
				a(".filterSelectorValue", c).text(a(":selected", this).text()).show()
			}).bind("focus", function() {
				a(this).css({
					position: "static",
					left: ""
				});
				a(".filterSelectorValue", c).hide()
			}).triggerHandler("blur");
			a(".filterSelectorValue", c).text(a(".filterSelector :selected", c).text()).bind("click", function() {
				a(".filterSelector", c).focus()
			});
			a(".filterSelector", c).bind("change", function() {
				o()
			})
		};
	a.fn.liveGroupActivity = function(g) {
		var c = this;
		g = g || {};
		a.getTemplate("/cudatel/ajax-html/liveGroupActivity.html", function(d) {
			var b = a(d);
			d = a(".template", b);
			b = a(".staticBody", b).appendTo(c.empty());
			e(c, b, d, g)
		})
	}
})(jQuery);
(function(a) {
	var e, g = function(f, j) {
			f.html(j);
			a("form", j).ajaxForm({
				beforeSubmit: function() {
					a(".mustSubmitWarning", f).slideUp()
				},
				complete: function() {
					f.ipAcl("refresh")
				}
			});
			a(".resetChanges", j).bind("click", function() {
				a(".mustSubmitWarning", f).slideUp();
				f.ipAcl("refresh")
			});
			j.delegate(":input", "change", function() {
				f.ipAcl("requireSubmit")
			});
			f.ipAcl("refresh")
		},
		c = function() {
			var f = a(">.staticBody", this);
			a(".mustSubmitWarning", f).slideDown()
		},
		d = function(f) {
			f.which === 13 && f.preventDefault()
		},
		b = function() {
			var f = this,
				j = a("> .staticBody", f);
			a.getREST("/cudatel/gui/system/ip_acl", {}, function(n) {
				a(".ipAclList", j).empty().sortList({
					allow: ["add", "remove", "reorder"],
					addLink: {
						value: "Add a Rule",
						position: "last"
					},
					data: n.ip_acl,
					rowData: {
						value: function(l) {
							var o = a(".row", e).clone();
							o.unserializeObject(l);
							a(".ipv4", o).ipv4Input();
							a(":input", o).bind("keydown", d);
							return o
						},
						render: "html"
					},
					addForm: {
						position: "last",
						value: function() {
							var l = false,
								o = function() {
									l && clearTimeout(l)
								},
								q = a('<div class="addRow"></div>').append(a(".row", e).clone());
							q.append(a('<a href="#">Cancel</a>').bind("click", function(v) {
								v.preventDefault();
								o();
								q.trigger("addCancel")
							}));
							a(".ipv4", q).ipv4Input();
							a(":input", q).bind("keydown", d);
							a("input,a", q).bind("blur", function() {
								l = setTimeout(function() {
									q.trigger("add", {
										last: true,
										data: a(":input", q).serializeObject()
									});
									f.ipAcl("requireSubmit")
								}, 200)
							});
							a("input,a", q).bind("focus", o);
							return q
						},
						render: "html"
					},
					remove: function(l, o) {
						f.ipAcl("requireSubmit");
						o.success()
					},
					reorder: function() {
						f.ipAcl("requireSubmit")
					}
				})
			});
			return this
		};
	a.fn.ipAcl = function(f) {
		var j = this,
			n = {
				refresh: b,
				requireSubmit: c
			};
		if(n[f]) {
			var l = this.data("ipAcl");
			if(typeof l === "undefined") {
				this.data("ipAcl", {});
				l = this.data("ipAcl")
			}
			return n[f].apply(this, [].concat([l], Array.prototype.slice.call(arguments, 1)))
		} else if(f && typeof f !== "object") {
			console_log("Method does not exist in plugin ipAcl");
			return this
		}
		var o = f || {};
		a.getTemplate("/cudatel/ajax-html/ip_acl.html", function(q) {
			j.each(function() {
				var v = a(this),
					x = a(q),
					y = a(".staticBody", x);
				e = e || a(".template", x);
				g(v, y, e, o)
			})
		});
		this.data("ipAcl", o);
		return this
	}
})(jQuery);
(function(a) {
	var e = function(g, c) {
			var d = 1,
				b = g;
			if(g) for(var f = 0; f < c.length; f++) if(!(g % c[f].multiplier)) {
				d = c[f].multiplier;
				b = g / d;
				break
			}
			return {
				multiplier: d,
				value: b
			}
		};
	a.fn.multipliedInput = function(g) {
		g = g || {};
		g.multipliers = g.multipliers || [{
			text: "Minutes",
			multiplier: "60"
		}, {
			text: "Seconds",
			multiplier: "1"
		}];
		if(this.is("input[name]") && !g.name) {
			g.name = this.attr("name");
			g.value = this.attr("value") || g.value || "";
			g.from_input = true
		} else g.value = g.value || 0;
		var c = a('<span class="multipliedInputWrap"><input type="hidden" class="multipliedInputHidden" /><input type="text" size="3" class="multipliedInputText" />&nbsp;<select class="multipliedInputSelect"></select></span>'),
			d = a(".multipliedInputHidden", c);
		a(".multipliedInputText", c);
		var b = a(".multipliedInputSelect", c);
		g.name ? d.attr("name", g.name) : console_log("jquery.multipliedInput.js: No name specified for the control", g, this);
		for(d = 0; d < g.multipliers.length; d++) b.append(a("<option />").val(g.multipliers[d].multiplier).text(g.multipliers[d].text));
		var f = e(parseInt(g.value || 0, 10), g.multipliers),
			j;
		this.each(function() {
			var n = a(this),
				l = c.clone();
			if(g.from_input) {
				n.replaceWith(l);
				j = j ? j.add(n) : a().add(n)
			} else n.empty().html(l);
			if(g.value || !g.zero_blank) l.find(".multipliedInputSelect").val(f.multiplier);
			a(".multipliedInputText", n).mask("?99999999", {
				placeholder: ""
			});
			if(!g.value && g.zero_blank) {
				n.find(".multipliedInputText").val("");
				n.find(".multipliedInputHidden").val("")
			} else {
				n.find(".multipliedInputText").val(f.value);
				n.find(".multipliedInputHidden").val(g.value)
			}
		});
		a(".multipliedInputText, .multipliedInputSelect", this).bind("change", function() {
			var n = a(this).closest(".multipliedInputWrap"),
				l = n.find(".multipliedInputText"),
				o = n.find(".multipliedInputHidden");
			n = n.find(".multipliedInputSelect");
			g.zero_blank && !l.val() ? o.val("") : o.val(parseInt(l.val(), 10) * parseInt(n.val(), 10));
			o.trigger("change")
		});
		return j || this
	}
})(jQuery);
(function(a) {
	var e = function(g) {
			g.preventDefault()
		};
	a.widget("cui2.userPhones", a.extend(true, {}, CUI.liveTableBase, {
		options: {
			bbx_user_id: false,
			live_table: "bbx_phone"
		},
		_create: function() {
			var g = this,
				c = this.element;
			if(g.options.bbx_user_id) {
				a.extend(true, g.options.user_info, {
					search: {
						bbx_user_id: "^" + g.options.bbx_user_id + "$"
					}
				});
				g._live_table_base_create();
				var d = a('<div class="phoneItems"><div class="newPhoneItem"><a href="javascript:void(0)"><span class="phoneImageWrap"><img class="phoneImage" src="/cudatel/images/icons/phone_new.png" /></span><span class="phoneItemCaption">Add a Phone</span></span></a></div></div>');
				d.delegate(".editPhoneItem", "click", function(b) {
					g._phoneItem_click(b, this)
				}).delegate(".newPhoneItem", "click", function() {
					showPopup("phone_add", {
						bbx_user_id: g.options.bbx_user_id
					})
				});
				c.empty().append(d)
			} else console_log("jquery.userPhones.js: No bbx_user_id parameter set.")
		},
		_process_row_data: function(g, c) {
			var d = this.options.processed_data[c];
			return d && d.bbx_phone_id === g.bbx_phone_id ? a.extend({}, this.options.processed_data[c], g) : g
		},
		_insert_row: function(g, c) {
			var d = this.element,
				b = this._create_$row(g);
			g._$row = b;
			if(c < this.options.processed_data.length - 2) d.find(".phoneItems > .phoneItem").eq(c).before(b);
			else c ? d.find("> .phoneItems").append(b) : d.find(".newPhoneItem").after(b)
		},
		_update_row: function(g, c) {
			var d = this._create_$row(c);
			c._$row.replaceWith(d);
			c._$row = d
		},
		_before_delete_row: function(g) {
			g._$row.remove()
		},
		_clear: function() {
			for(var g = this.options.processed_data.length; g--;) this.options.processed_data[g]._$row.remove();
			this.options.processed_data = []
		},
		_create_$row: function(g) {
			var c = a('<div class="phoneItem editPhoneItem"><a href="javascript:void(0)"><span class="phoneImageWrap"><img class="phoneImage" src="/cudatel/images/icons/phone_generic.png" /></span><span class="phoneItemCaption" /></span></a></div>');
			c.data("bbx_phone_id", g.bbx_phone_id);
			c.find(".phoneItemCaption").text(g.bbx_phone_desc || "(Unknown Phone)");
			c.find("> a").bind("click", e);
			switch(g.phone_state) {
			case "UNREG":
				var d = a('<img class="phoneStatus phoneStatusNE" src="/cudatel/images/icons/phone_notfound.png" alt="Offline" />');
				c.find("> a > .phoneImageWrap").append(d);
				break;
			case "INUSE":
				d = a('<img class="phoneStatus phoneStatusNW" src="/cudatel/images/icons/phone_inuse.png" alt="In Use" />');
				c.find("> a > .phoneImageWrap").append(d)
			}
			g.bbx_phone_mac === null && c.find("> a > .phoneImageWrap").append('<img class="phoneStatus phoneStatusSE" src="/cudatel/images/icons/phone_genericsip.png" alt="Generic SIP device" />');
			return c
		},
		_phoneItem_click: function(g, c) {
			var d = this,
				b = this.element,
				f = a(c).data("bbx_phone_id");
			showOverlay("phone_edit", {
				bbx_phone_id: f
			}).one("close_request", function() {
				a.postREST("/cudatel/gui/phone/reboot", {
					bbx_phone_id: f,
					if_scheduled: 1
				});
				d.destroy();
				b.trigger("refreshUsers")
			})
		}
	}))
})(jQuery);
(function(a) {
	var e, g;
	a.getTemplate("/cudatel/ajax-html/settings/sites_templates.html", function(c) {
		e = a(c)
	});
	a.fn.sitesTable = function(c) {
		var d = this;
		a.getJSONCached("/cudatel/gui/ha_ip/ha_ip", {}, 1E4, function(b) {
			g = [b.ha_ip.definitive_system_ip, b.ha_ip.definitive_external_ip]
		});
		if(!e) {
			setTimeout(function() {
				d.sitesTable(c)
			}, 100);
			return d
		}
		a.getREST("/cudatel/gui/site/site", {}, function(b) {
			d.sortList({
				data: b.site,
				allow: ["add", "remove"],
				rowData: {
					render: "html",
					value: function(f) {
						var j = a(".sitesRow", e).clone(),
							n = "unknown";
						a.each(["bbx_provider_gateway_id", "bbx_tdm_card_port_id", "bbx_acl_id", "bbx_phone_registration_id"], function(y, D) {
							if(f[D]) {
								n = D;
								return false
							}
						});
						a(".siteName > .name", j).text(f.bbx_site_name);
						a(".siteName > .opRename", j).bind("click", function(y) {
							y.preventDefault();
							if(!a(".siteNameEdit", j)[0]) {
								var D = a(".siteNameEdit", e).clone();
								a("input[name=bbx_site_id]", D).val(f.bbx_site_id);
								a("input[name=bbx_site_name]", D).val(a(".siteName > .name", j).text());
								D.insertAfter(a(".siteName > .name", j).hide());
								D.data("accept", "application/json");
								D.bind("jsAutoSubmitSuccess", function() {
									a(".siteName > .name", j).text(a("input[name=bbx_site_name]", D).val())
								}).bind("jsAutoSubmitComplete", function() {
									D.remove();
									a(".siteName > .name", j).show()
								})
							}
						});
						var l = {
							bbx_acl_id: "IP Addresses",
							bbx_tdm_card_port_id: "Provider/Port",
							bbx_provider_gateway_id: "Provider/Port",
							bbx_phone_registration_id: "Inbound Authorization",
							unknown: "Invalid Site"
						};
						a(".siteSourceType", j).text(l[n] || l.unknown);
						var o;
						if(f.bbx_acl_id) {
							o = a('<div><div class="authForm"></div><div class="list"></div></div>');
							l = a(".siteACLAuthForm", e).clone().appendTo(a(".authForm", o));
							l.unserializeObject(f);
							l.checks();
							a(".list", o).sortList({
								data: f.bbx_acl_ips,
								allow: ["add", "remove"],
								rowData: {
									value: function(y) {
										return y.bbx_acl_ip_ip + " / " + y.bbx_acl_ip_mask
									},
									render: "text"
								},
								addLink: {
									value: "Add a range",
									position: "last"
								},
								addForm: {
									value: function() {
										var y = e.find(".newAclRow").clone();
										a(".ipv4", y).ipv4Input();
										y.ajaxForm({
											data: {
												bbx_acl_id: f.bbx_acl_id
											},
											accept: "application/json",
											dataType: "json",
											success: function(D) {
												y.trigger("add", {
													data: D.ip,
													last: true
												})
											},
											error: function(D) {
												var B = false;
												try {
													var u = JSON.parse(D.responseText);
													u.error && a.each(u.error, function(I, C) {
														var M = a("[name=" + I + "]", y);
														if(M[0]) {
															B = true;
															if(C === "INVALID") C = "Not a valid value";
															if(M.eq(0).is(":hidden") && M.eq(0).closest(".IPv4Input")[0]) M = M.eq(0).closest(".IPv4Input");
															M.qtipMessage({
																style: "failure",
																message: C
															})
														}
													})
												} catch(F) {}
												B || showError("There was an error adding the IP range. Please check your settings.")
											},
											afterError: function() {
												y.trigger("addCancel")
											}
										});
										a(".opAddAclIP", y).bind("click", function(D) {
											D.preventDefault();
											y.trigger("submit")
										});
										return y
									},
									render: "html",
									position: "last"
								},
								hasNoneText: "No IP ranges",
								remove: function(y, D) {
									a.deleteREST("/cudatel/gui/acl/ip", {
										bbx_acl_ip_id: D.row.bbx_acl_ip_id
									}, function() {
										D.success()
									})
								}
							})
						} else if(f.bbx_tdm_card_port_id || f.bbx_provider_gateway_id) {
							o = a("<div />");
							o.selectFrom({
								url: "/cudatel/gui/gateway/combined",
								name: "bbx_provider_gateway_id",
								rowDataRoot: "combined",
								val: n + ":" + f[n],
								rowData: {
									value: function(y) {
										if(y.rowData.bbx_provider_gateway_id) return "bbx_provider_gateway_id:" + y.rowData.bbx_provider_gateway_id;
										else if(y.rowData.bbx_tdm_card_port_id) return "bbx_tdm_card_port_id:" + y.rowData.bbx_tdm_card_port_id
									},
									text: function(y) {
										if(y.rowData.bbx_provider_gateway_id) return y.rowData.bbx_provider_gateway_name;
										else if(y.rowData.bbx_tdm_card_port_type === "ANALOG") return "Analog port " + y.rowData.bbx_tdm_card_port_number;
										else if(y.rowData.bbx_tdm_card_port_type === "DIGITAL") return "Digital port " + y.rowData.bbx_tdm_card_port_number
									}
								}
							}).delegate("select", "change", function() {
								var y = a(this),
									D = a(this).val();
								D.indexOf("gateway") > -1 ? a.putREST("/cudatel/gui/site/site", {
									bbx_provider_gateway_id: D.match(/\d+$/)[0],
									bbx_site_id: f.bbx_site_id
								}, function() {
									y.qtipMessage({
										style: "success",
										message: "Setting applied"
									})
								}) : a.putREST("/cudatel/gui/site/site", {
									bbx_tdm_card_port_id: D.match(/\d+$/)[0],
									bbx_site_id: f.bbx_site_id
								}, function() {
									y.qtipMessage({
										style: "success",
										message: "Setting applied"
									})
								})
							})
						} else if(f.bbx_phone_registration_id) {
							o = a(".registrationDetail", e).clone();
							var q = 1E3,
								v = function(y) {
									if(--q) if(g) {
										a(".localIP", y).val(g[0]);
										a(".externalIP", y).val(g[1])
									} else setTimeout(function() {
										v(y)
									}, 150)
								};
							v(o);
							a(".username", o).val(f.bbx_registration_username);
							a(".pass", o).val(f.bbx_registration_password)
						}
						a(".siteSource", j).html(o);
						o = a('<form class="jsAutoSubmit" action="/cudatel/gui/site/site" method="PUT"></form>');
						o.data("extraFormData", {
							bbx_site_id: f.bbx_site_id
						});
						var x = a('<select name="bbx_site_timezone"></select>').appendTo(o);
						x.hide();
						a.getJSONCached("/cudatel/gui/system/timezones", {}, 6E4, function(y) {
							x.append(a('<option value=""></option>').text("Default (" + y.timezone_lookup[y.timezone] + ")"));
							a.each(y.timezones, function(D, B) {
								var u = a("<option />").val(B.value).text(B.name);
								f.bbx_site_timezone === B.value && u.attr("selected", "selected");
								u.appendTo(x)
							});
							x.show()
						});
						a(".siteTimeZone", j).html(o);
						return j
					}
				},
				addForm: {
					value: function() {
						var f = a(".newSiteRow", e).clone();
						a(".siteType", f).bind("change", function() {
							var j = a(this),
								n = a(".newSiteSource-" + j.val(), e).clone().appendTo(a(".newSiteSourceSettings", f).empty());
							a(".newSiteSourceSettings", f).empty().html(n);
							switch(j.val()) {
							case "gateway":
								a(".gatewaySelect", n).selectFrom({
									url: "/cudatel/gui/gateway/combined",
									classes: "gatewayOrPortSelect",
									rowDataRoot: "combined",
									rowData: {
										value: function(l) {
											if(l.rowData.bbx_provider_gateway_id) return "bbx_provider_gateway_id:" + l.rowData.bbx_provider_gateway_id;
											else if(l.rowData.bbx_tdm_card_port_id) return "bbx_tdm_card_port_id:" + l.rowData.bbx_tdm_card_port_id
										},
										text: function(l) {
											if(l.rowData.bbx_provider_gateway_id) return l.rowData.bbx_provider_gateway_name;
											else if(l.rowData.bbx_tdm_card_port_type === "ANALOG") return "Analog port " + l.rowData.bbx_tdm_card_port_number;
											else if(l.rowData.bbx_tdm_card_port_type === "DIGITAL") return "Digital port " + l.rowData.bbx_tdm_card_port_number
										}
									},
									complete: function() {
										a(this).bind("change", function() {
											var l = a(this).val().split(":");
											a("input[type=hidden]", n).remove();
											a('<input type="hidden" />').attr("name", l[0]).val(l[1] || "").insertAfter(a(".gatewaySelect", n))
										}).triggerHandler("change")
									}
								})
							}
						}).trigger("change");
						f.ajaxForm({
							data: {},
							accept: "application/json",
							dataType: "json",
							beforeSubmit: function() {
								var j = a("[name=bbx_site_name]", f);
								if(!j.val()) {
									j.qtipMessage({
										style: "failure",
										message: "No name was specified"
									});
									return false
								}
							},
							success: function(j) {
								f.trigger("add", {
									data: j.site,
									last: true
								})
							},
							afterError: function() {
								f.trigger("addCancel")
							}
						});
						a(".opSubmit", f).bind("click", function(j) {
							f.trigger("submit");
							j.preventDefault()
						});
						return f
					},
					position: "last"
				},
				addLink: {
					value: a('<a class="ops" href="#">Add a Site</a>'),
					render: "html",
					position: "last"
				},
				remove: function(f, j) {
					a.deleteREST("/cudatel/gui/site/site", {
						bbx_site_id: j.row.bbx_site_id
					}, function() {
						j.success()
					})
				}
			})
		});
		return this
	}
})(jQuery);
(function(a) {
	var e = {
		options: {
			list: "/cudatel/gui/fax/inbound",
			root: "inbound",
			prefix: "bbx_fax_inbound",
			number: "bbx_fax_inbound_fax_from",
			number_header: "From",
			unit: "page/pages"
		},
		_create: function() {
			var g = this,
				c = this.element;
			g.options.widget_id = getUnique("faxList");
			var d = g.options.prefix === "bbx_fax_inbound" ? "bbx_fax_inbound_timestamp_completed" : "bbx_fax_outbound_timestamp_last_attempt",
				b = [{
					header: g.options.number_header || "Number",
					sortby: g.options.number,
					value: function(f) {
						return format_information(f.rowData[g.options.number])
					},
					render: "text"
				}, {
					header: "Length",
					sortby: g.options.prefix + "_pages_total",
					value: function(f) {
						f = f.rowData[g.options.prefix + "_pages_total"];
						var j = g.options.unit.split(/\//);
						f += " " + j[f == 1 ? 0 : 1];
						return f
					}
				}, {
					header: "Sent Time",
					"class": "sentTime",
					sortby: d,
					value: function(f) {
						if(g.options.prefix === "bbx_fax_inbound") return g._parseSentTime(f.rowData.bbx_fax_inbound_timestamp_completed);
						else {
							var j = g._parseSentTime(f.rowData.bbx_fax_outbound_timestamp_last_attempt);
							if(f.rowData.bbx_fax_outbound_timestamp_last_attempt) {
								if(trueish(f.rowData.bbx_fax_outbound_error_string) && !f.rowData.bbx_fax_outbound_success) j = "<i>" + j + " (failed)</i>"
							} else j = "<i>(Not sent yet)</i>";
							return j
						}
					},
					render: "html"
				}];
			g.options.prefix === "bbx_fax_outbound" && b.push({
				header: "Status",
				value: function(f) {
					f = f.rowData;
					var j = a('<div class="status"></div>');
					if(trueish(f.bbx_fax_outbound_success)) j.text("Success");
					else trueish(f.bbx_fax_outbound_error_string) ? j.text("Failed: " + f.bbx_fax_outbound_error_string) : j.text("Queued");
					return j
				},
				render: "html"
			});
			b = b.concat([{
				header: "Actions",
				"class": "actionsColumn",
				value: function(f) {
					var j = f.rowData,
						n = f.$row;
					f = a('<div class="ops"><a href="#" class="opView faxPreview">View</a> | <a href="#" target="_blank" class="opDownload">Download</a> | <a href="#" class="opForward">Forward</a> | <span class="ifMarkRead"><a href="#" class="opMark">Mark</a> | </span><a href="#" class="opDelete">Delete</a><div style="display: none" class="faxPictureHolder"></div></div>');
					var l = j[g.options.prefix + "_pages_total"];
					if(l) {
						if(l > 1) for(var o = a(".faxPictureHolder", f), q = 2; q <= l; q++) {
							var v = "/cudatel/gui/fax/file?" + g.options.prefix + "_id=" + j[g.options.prefix + "_id"] + "&page=" + q + "&format=png";
							o.append(a('<a rel="faximg' + j[g.options.prefix + "_id"] + '" class="faxPreview thickbox"></a>').attr("href", v))
						}
						a(".opView", f).attr("href", "/cudatel/gui/fax/file?" + g.options.prefix + "_id=" + j[g.options.prefix + "_id"] + "&page=1&format=png").attr("rel", "faximg" + j[g.options.prefix + "_id"]);
						a("a.faxPreview", f).picbox({
							margins: 60
						}, null, function(x) {
							return this == x || this.rel == x.rel
						});
						a(".opView", f).one("click", function() {
							g._setReadState(n, true)
						});
						a(".opDownload", f).attr("href", "/cudatel/gui/fax/file?" + g.options.prefix + "_id=" + j[g.options.prefix + "_id"] + "&format=pdf").one("click", function() {
							g._setReadState(n, true)
						})
					} else a(".opView, .opDownload", f).each(function(x, y) {
						$el = a(y);
						$el.replaceWith(a("<span />").text($el.text()).addClass($el.attr("class") + " disabled"))
					});
					a(".opForward", f).bind("click", function(x) {
						x.preventDefault();
						x = {};
						x[g.options.prefix + "_id"] = j[g.options.prefix + "_id"];
						showPopup("forward", x)
					});
					g.options.allow_mark_read ? a(".opMark", f).bind("click", function(x) {
						x.preventDefault();
						g._flipReadState(n, j)
					}) : a(".ifMarkRead", f).remove();
					a(".opDelete", f).bind("click", function(x) {
						x.preventDefault();
						showBlanker({
							title: "Delete this fax?",
							text: "Are you sure you want to remove this fax? This operation cannot be undone.",
							buttons: ["Delete", "Cancel"],
							callbacks: [function() {
								var y = {};
								y[g.options.prefix + "_id"] = j[g.options.prefix + "_id"];
								a.deleteREST("/cudatel/gui/fax/fax", y, function() {
									c.jsonTable("refresh")
								});
								blankerCancel.call(this)
							},
							blankerCancel]
						})
					});
					g._updateReadState(f, !! j[g.options.prefix + "_read_time"]);
					return f
				},
				render: "html"
			}]);
			c.jsonTable("destroy").jsonTable({
				url: g.options.list,
				type: "GET",
				rowDataRoot: g.options.root,
				sortby: d,
				sortorder: "desc",
				columnData: b
			});
			Ape.subscribe("user_" + validUsername);
			a(window).bind("meteor_user_" + validUsername + "." + g.options.widget_id, function(f, j) {
				var n = j.json;
				if(n.fax_action) if(!(n.direction === "inbound" && g.options.prefix === "bbx_fax_inbound")) if(n.direction === "outbound" && g.options.prefix === "bbx_fax_outbound") switch(n.fax_action) {
				case "create":
					g._handle_fax_create(n);
					break;
				case "delete":
					g._handle_fax_delete(n);
					break;
				case "update":
					g._handle_fax_update(n)
				} else console_log("jquery.faxList.js: Recieved a fax event without a proper direction:", n, " -- ", c)
			})
		},
		_handle_fax_update: function() {},
		_handle_fax_delete: function() {
			this.element.jsonTable("refresh")
		},
		_handle_fax_create: function() {
			this.element.jsonTable("refresh")
		},
		_parseSentTime: function(g) {
			if(g) {
				g = g.split(/[- :]/);
				return(new Date(g[0], g[1] - 1, g[2], g[3], g[4], g[5])).toLocaleString()
			} else return ""
		},
		_updateReadState: function(g, c) {
			if(this.options.allow_mark_read) {
				if(c) {
					a(".opMark", g).text("Mark Unread");
					g.removeClass("unread")
				} else {
					a(".opMark", g).text("Mark Read");
					g.addClass("read")
				}
				g.data("readState", c)
			}
		},
		_setReadState: function(g, c) {
			var d = this;
			if(d.options.allow_mark_read) {
				var b = {};
				b[d.options.prefix + "_id"] = g.data("row")[d.options.prefix + "_id"];
				b[d.options.prefix + "_read_time"] = c ? 1 : 0;
				a.putREST("/cudatel/gui/fax/fax", b, function(f) {
					d._updateReadState(g, !! f.fax[d.options.prefix + "_read_time"])
				});
				d._updateReadState(g, c)
			}
		},
		_flipReadState: function(g) {
			if(this.options.allow_mark_read) {
				var c = !(g.data("readState") || false);
				this._setReadState(g, c)
			}
		},
		_destroy: function() {
			a("window").unbind("meteor_user_" + validUsername + "." + self.options.widget_id)
		}
	};
	a.widget("cuiv2.faxInList", a.extend(true, {}, e, {
		options: {
			list: "/cudatel/gui/fax/inbound",
			root: "inbound",
			prefix: "bbx_fax_inbound",
			number: "bbx_fax_inbound_fax_from",
			number_header: "From",
			allow_mark_read: true
		},
		_handle_fax_update: function(g) {
			var c = a(">.jsDataTable > tbody > tr", $self).filter(function() {
				return a(this).data("row").bbx_fax_inbound_id == g.bbx_fax_inbound_id
			}),
				d = c.find(".status");
			c = c.find(".sentTime");
			if(g.bbx_fax_inbound_success) {
				d.text("Success");
				c.text(self._parseSentTime(g[self.options.prefix + "_timestamp_completed"]))
			} else g.bbx_fax_inbound_error_string ? d.text("Failed: " + g.bbx_fax_inbound_error_string) : d.text("In Progress")
		}
	}));
	a.widget("cuiv2.faxOutList", a.extend(true, {}, e, {
		options: {
			list: "/cudatel/gui/fax/outbound",
			root: "outbound",
			prefix: "bbx_fax_outbound",
			number: "bbx_fax_outbound_fax_to",
			number_header: "To",
			allow_mark_read: false
		},
		_handle_fax_update: function(g) {
			var c = a(">.jsDataTable > tbody > tr", $self).filter(function() {
				return a(this).data("row").bbx_fax_outbound_id == g.bbx_fax_outbound_id
			}),
				d = c.find(".status");
			c = c.find(".sentTime");
			if(g.bbx_fax_outbound_success) {
				d.text("Success");
				c.text(self._parseSentTime(g[self.options.prefix + "_timestamp_completed"]))
			} else g.bbx_fax_outbound_error_string ? d.text("Failed: " + g.bbx_fax_outbound_error_string) : d.text("Queued")
		}
	}))
})(jQuery);
(function(a) {
	a.widget("cuiv2.faxSendForm", {
		options: {
			template: "/cudatel/ajax-html/fax_send_form.html"
		},
		_create: function() {
			var e = this;
			console_log("MARK 1");
			a.getTemplate(e.options.template, function(g) {
				e.options.$staticBody = a(g);
				e._afterTemplateLoad()
			})
		},
		_afterTemplateLoad: function() {
			var e = this.element;
			console_log("MARK 2");
			var g = this.options.$staticBody;
			a(".txtFromFaxNumber", g).mask("?9999999999999999999999999999999999999999", {
				placeholder: ""
			});
			a(".txtToFaxNumber", g).mask("?9999999999999999999999999999999999999999", {
				placeholder: ""
			});
			a(".sendAnotherLink", g).attr("href", a(".sendAnotherLink", g).attr("href") + getUnique(";refresh="));
			g.ajaxForm({
				iframe: true,
				beforeSubmit: function() {
					uploadBlanker = showUploadBlanker()
				},
				complete: function() {
					uploadBlanker.trigger("closeBlanker")
				},
				success: function(c) {
					try {
						c = c.match(/\{.*\}/)[0];
						var d = a.parseJSON(c);
						if(d.error) showError(d.error);
						else window.location.href = "#screen=userfaxout"
					} catch(b) {
						a(".body", g).show();
						showError("The Fax upload handler returned a result in an unexpected format. Fax upload may have failed.")
					}
				},
				error: function(c, d, b) {
					b == "timeout" ? showError("Fax upload timed out.") : showError("Fax upload failed.")
				}
			});
			a(".chkUseCover", g).bind("click change", function() {
				var c = a(this).closest("table").find("input,textarea").not(this);
				this.checked ? c.enable("nocover") : c.disable("nocover")
			}).trigger("change");
			a.getREST("/cudatel/gui/user2/full_name", {}, function(c) {
				a(".txtCSFromName", g).val(c.full_name || "")
			});
			e.html(g)
		},
		_destroy: {}
	})
})(jQuery);
(function(a) {
	var e, g = function(c, d, b, f) {
			b = f.valet_parking;
			a(".mastheadContainer", d).extensionDetailMasthead({
				name: b.bbx_valet_parking_name,
				number: b.bbx_extension_value,
				prefix: "bbx_valet_parking",
				bbx_valet_parking_id: b.bbx_valet_parking_id,
				bbx_extension_id: b.bbx_extension_id,
				restURL: "/cudatel/gui/extension/valet_parking",
				buttons: ["rename", "delete"]
			});
			a(".startExt", d).text(b.bbx_extension_block_begin);
			a(".nextStartExt", d).text(parseInt(b.bbx_extension_block_begin, 10) + 1);
			a(".lastExt", d).text(b.bbx_extension_block_end);
			a(".nextLastExt", d).text(parseInt(b.bbx_extension_block_end, 10) - 1);
			a("form.valetForm", d).unserializeObject(b).data("extraFormData", {
				bbx_valet_parking_id: b.bbx_valet_parking_id
			});
			a(".parkingMohPicker", d).mohPicker({
				name: "bbx_moh_id",
				bbx_moh_id: b.bbx_moh_id
			});
			a(".parkingHoldTime", d).multipliedInput({
				name: "bbx_valet_parking_timeout",
				value: b.bbx_valet_parking_timeout,
				zero_blank: true
			});
			a(".parkingOrbitExten", d).extensionPicker({
				searchTypes: ["all"],
				directory: true,
				hidden: false,
				textFormat: "number",
				emptyTriggersSelection: true
			});
			c.html(d);
			c.data("widgetReady", true);
			c.one("widgetReady", function(j) {
				j.stopPropagation()
			}).trigger("widgetReady")
		};
	a.fn.valetParking = function(c) {
		var d = this,
			b = {};
		if(b[c]) {
			var f = this.data("valetParking");
			if(typeof f === "undefined") {
				this.data("valetParking", {});
				f = this.data("valetParking")
			}
			return b[c].apply(this, [].concat([f], Array.prototype.slice.call(arguments, 1)))
		} else if(c && typeof c !== "object") {
			console_log("Method does not exist in plugin valetParking");
			return this
		}
		var j = c || {},
			n = function(l, o) {
				d.each(function() {
					var q = a(this),
						v = a(o),
						x = a(".staticBody", v);
					e = e || a(".template", v);
					g(q, x, e, l, j)
				})
			};
		a.getTemplate("/cudatel/ajax-html/valetParking.html", function(l) {
			j.data ? n(j.data, l) : a.getREST("/cudatel/gui/extension/valet_parking", {
				bbx_valet_parking_id: j.bbx_valet_parking_id
			}, function(o) {
				n(o, l)
			})
		});
		this.data("valetParking", j);
		return this
	}
})(jQuery);
(function(a) {
	var e, g = function(c, d) {
			a(".parkingMohPicker", d).mohPicker({
				name: "bbx_moh_id"
			});
			a(".parkingExtensionValidator", d).extensionValidator({
				allow: ["block"],
				alwaysLocked: true,
				extraValidation: function(b) {
					return Math.abs(b.end - b.begin) > 4 ? true : "Parking blocks must have at least 5 extensions"
				}
			}).bind("valid", function() {
				a(".submit", d).enable("badext")
			}).bind("invalid", function() {
				a(".submit", d).disable("badext")
			});
			a(".parkingHoldTime", d).multipliedInput({
				name: "bbx_valet_parking_timeout",
				zero_blank: true
			});
			a(".parkingOrbitExten", d).extensionPicker({
				searchTypes: ["all"],
				directory: true,
				hidden: false,
				textFormat: "number",
				emptyTriggersSelection: true
			});
			d.ajaxForm({
				accept: "application/json",
				beforeSubmit: function() {
					a(".submit", d).disable("inprogress")
				},
				complete: function() {
					a(".submit", d).enable("inprogress")
				},
				success: function() {
					d.trigger("close_request", {
						refresh: true
					})
				}
			});
			c.html(d);
			c.data("widgetReady", true);
			c.one("widgetReady", function(b) {
				b.stopPropagation()
			}).trigger("widgetReady")
		};
	a.fn.valetParkingCreate = function(c) {
		var d = this,
			b = {};
		if(b[c]) {
			var f = this.data("valetParkingCreate");
			if(typeof f === "undefined") {
				this.data("valetParkingCreate", {});
				f = this.data("valetParkingCreate")
			}
			return b[c].apply(this, [].concat([f], Array.prototype.slice.call(arguments, 1)))
		} else if(c && typeof c !== "object") return this;
		var j = c || {},
			n = function(l) {
				d.each(function() {
					var o = a(this),
						q = a(l),
						v = a(".staticBody", q);
					e = e || a(".template", q);
					g(o, v, e, j)
				})
			};
		a.getTemplate("/cudatel/ajax-html/valetParkingCreate.html", function(l) {
			n(l)
		});
		this.data("valetParkingCreate", j);
		return this
	}
})(jQuery);
(function(a) {
	var e = function(g, c) {
			var d = c.closest("tr"),
				b = d.find("a.opMarkRead")[0] ? d : c;
			if(g) {
				b.find("a.opMarkRead").hide().siblings("a.opMarkUnread").show();
				d.addClass("read").removeClass("unread")
			} else {
				b.find("a.opMarkUnread").hide().siblings("a.opMarkRead").show();
				d.addClass("unread").removeClass("read")
			}
		};
	a.fn.voicemailList = function() {
		var g = this;
		g.jsonTable("destroy").jsonTable({
			url: "/cudatel/gui/voicemail/list",
			type: "GET",
			rowDataRoot: "voicemail",
			paginator: true,
			paginatorToTop: true,
			rows: 30,
			page: 1,
			sortby: "created_epoch",
			sortorder: "desc",
			columnData: [{
				header: "Caller Name",
				value: "cid_name",
				render: "text"
			}, {
				header: "Caller Number",
				value: function(d) {
					return format_information(d.rowData.cid_number)
				},
				render: "text"
			}, {
				header: "Time",
				value: function(d) {
					return format_age(unixTime((new Date).getTime()) - d.rowData.created_epoch)
				},
				render: "text"
			}, {
				header: "Listen",
				value: function(d) {
					var b = a('<div class="voicemailPlayerWrap"></div>');
					b.css("min-width", "200px");
					var f = d.rowData;
					b.soundWidget("/cudatel/gui/voicemail/file?voicemail_msgs_id=" + f.voicemail_msgs_id);
					b.bind("soundWidgetPlay", function() {
						a.putREST("/cudatel/gui/voicemail/voicemail", {
							voicemail_msgs_id: f.voicemail_msgs_id,
							read_epoch: 1
						}, function(j) {
							e(trueish(j.voicemail.read_epoch), b)
						})
					});
					return b
				},
				render: "html"
			}, {
				header: "Actions",
				value: function(d) {
					var b = a('<div><span class="voicemailMark"><a href="#" class="opMarkRead">Mark Read</a><a href="#" class="opMarkUnread">Mark Unread</a></span> | <a class="opForward" href="#">Forward</a> | <a class="opDelete" href="#">Delete</a></div>'),
						f = d.$row,
						j = d.rowData;
					j.read_epoch ? f.addClass("read") : f.addClass("unread");
					f = b.find(".voicemailMark");
					f.find("a").hide().bind("click", function(n) {
						n.preventDefault()
					});
					f.find("a.opMarkRead").bind("click", function() {
						a(this).hide().siblings("a").show();
						a.putREST("/cudatel/gui/voicemail/voicemail", {
							voicemail_msgs_id: j.voicemail_msgs_id,
							read_epoch: 1
						}, function(n) {
							e(trueish(n.voicemail.read_epoch), b)
						})
					});
					f.find("a.opMarkUnread").bind("click", function() {
						a(this).hide().siblings("a").show();
						a.putREST("/cudatel/gui/voicemail/voicemail", {
							voicemail_msgs_id: j.voicemail_msgs_id,
							read_epoch: ""
						}, function(n) {
							e(trueish(n.voicemail.read_epoch), b)
						})
					});
					e(d.rowData.read_epoch, b);
					b.find("a.opForward").bind("click", function(n) {
						n.preventDefault();
						showPopup("forward", {
							voicemail_msgs_id: d.rowData.voicemail_msgs_id
						})
					});
					b.find("a.opDelete").bind("click", function(n) {
						n.preventDefault();
						jConfirm("This action will delete the voicemail from the system. This action cannot be undone.", "Delete This Voicemail?", function(l) {
							l && a.deleteREST("/cudatel/gui/voicemail/voicemail", {
								voicemail_msgs_id: j.voicemail_msgs_id
							}, function() {
								g.jsonTable("refresh")
							})
						})
					});
					return b
				},
				render: "html"
			}]
		});
		var c = "user_" + validUsername;
		Ape.subscribe(c);
		a(window).bind("meteor_" + c, function(d, b) {
			b.json["event-subclass"] === "vm::maintenance" && b.json["vm-action"] !== "mwi-update" && g.jsonTable("refresh")
		})
	}
})(jQuery);
(function(a) {
	for(var e = [{
		text: "Nothing",
		value: "blank"
	}, {
		text: "Line",
		value: "line"
	}, {
		text: "Repeat Line",
		value: "repeat",
		require: "button_type_repeat"
	}, {
		text: "BLF/Line Monitor",
		value: "blf",
		param: "Extension to Monitor",
		picker: {
			searchTypes: ["user", "phone", "conference", "valet_parking", "queue"]
		},
		require: "button_type_blf"
	}, {
		text: "Parking",
		value: "park",
		param: "Parking Extension",
		picker: {
			searchTypes: "valet_parking",
			mustValidate: true,
			autoSelectFirst: true,
			forcePickFirst: true
		},
		require: "button_type_park"
	}, {
		text: "Speed Dial",
		value: "speed_dial",
		param: "Extension or Number",
		picker: {
			searchTypes: "all"
		},
		require: "button_type_speeddial"
	}, {
		text: "Transfer",
		value: "transfer",
		param: "Extension or Number",
		picker: {
			searchTypes: "all"
		},
		require: "button_type_transfer"
	}], g = {}, c = e.length; c--;) g[e[c].value] = e[c];
	var d = function(f, j) {
			switch(f.bbx_phone_button_type) {
			case "":
			case "blank":
				return j ? "" : "blank";
			case "line":
			case "repeat":
				return "line";
			default:
				return "util"
			}
		},
		b = function(f) {
			var j = {
				na: {
					text: " ",
					bgcolor: "#ccc",
					fgcolor: "#000"
				},
				UNREG: {
					text: "Offline",
					bgcolor: "#800",
					fgcolor: "#fff"
				},
				IDLE: {
					text: "Idle",
					bgcolor: "#080",
					fgcolor: "#0f0"
				},
				HELD: {
					text: "On Hold",
					bgcolor: "#060",
					fgcolor: "#0f0"
				},
				INUSE: {
					text: "On Call",
					bgcolor: "#060",
					fgcolor: "#0f0"
				}
			};
			f = j[f] || j.na;
			j = a('<span class="phoneLineButtonState" />');
			j.text(f.text || "???").css({
				color: f.fgcolor,
				"background-color": f.bgcolor
			});
			return j
		};
	a.widget("cui2.phoneEdit", a.extend(true, {}, {
		options: {},
		_setup_sidecars: function(f) {
			var j = this,
				n = j.options.$staticBody;
			if(f.sidecar_types) {
				var l = n.find("select[name=sidecar_type]"),
					o = n.find("select[name=installed_sidecars]");
				if(f.sidecar_types > 1) {
					for(var q = 1; q <= f.sidecar_types; q++) l.append(a("<option />").text(f["sidecar" + q + "_name"]).val(q));
					l.val(f.sidecar_type || "");
					l.bind("change", function() {
						j.options.sidecar_changed = true
					})
				} else n.find(".sidecarTypeTR").remove();
				if(f.max_sidecars) {
					for(q = 0; q <= f.max_sidecars; q++) o.append(a("<option />").text(q || "None").val(q || ""));
					o.val(f.installed_sidecars);
					o.bind("change", function() {
						j.options.sidecar_changed = true;
						o.val() ? l.enable("no_sc") : l.disable("no_sc")
					});
					o.val() || l.disable("no_sc")
				} else n.find(".sidecarNumTR").remove()
			} else n.find("tr.sidecarTR").remove()
		},
		_setup_dect: function(f) {
			var j = this.options.$staticBody;
			trueish(f.allow_radio_id) || j.find("tr.dectTR").remove()
		},
		_setup_fax_method: function(f) {
			var j = this.options.$staticBody;
			f.fax_method || j.find("tr.faxmethodTR").remove()
		},
		_setup_generic: function(f) {
			var j = this,
				n = j.options.$staticBody;
			trueish(f.generic_device) ? n.find("[name=generic_lines]").bind("change", function() {
				var l = a(this),
					o = l.val();
				o = o.replace(/[^0-9]/g, "");
				if(!o.match(/^[0-9]+$/) || o == 0) o = 1;
				l.val(o);
				j.options.phone.max_lines = o;
				j.options.sidecar_changed = true
			}) : n.find("tr.genericTR").remove()
		},
		_fill_basic_info: function(f) {
			var j = this,
				n = this.element,
				l = j.options.$staticBody;
			j.options.phone = f;
			j.options.sidecar_changed = false;
			l.find(".phoneEditedWarning").phoneButtonMonitor({
				bbx_phone_id: j.options.phone.bbx_phone_id,
				$jsdt: l.find(".phoneEditButtonList")
			});
			l.find(".opRemovePhone").bind("click", function(o) {
				o.preventDefault();
				showBlanker({
					title: "Remove Phone?",
					text: "The phone will no longer be associated with this user. All line and button settings for this phone will be deleted." + (f.bbx_phone_mac ? "" : " If the phone is currently connected, it will reboot be assigned a new extension as an Unassigned Phone."),
					buttons: ["Remove Phone", "Cancel"],
					callbacks: [function() {
						a.deleteREST("/cudatel/gui/phone/phone", {
							bbx_phone_id: j.options.bbx_phone_id
						});
						blankerCancel.call(this);
						n.trigger("close_request")
					},
					blankerCancel]
				})
			});
			l.find(".phoneInfoName").text(f.bbx_phone_desc);
			l.find(".phoneInfoModel").text((f.bbx_phone_manufacturer_name || "") + " " + (f.bbx_phone_model_name || ""));
			l.find(".phoneInfoMAC").text(f.bbx_phone_mac ? f.bbx_phone_mac.replace(/^([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i, "$1:$2:$3:$4:$5:$6") : "Generic SIP Device");
			l.find(".phoneInfoLastReg").text(f.bbx_phone_last_registered);
			l.find(".phoneInfoLastIP").text(f.bbx_phone_last_ip)
		},
		_create_button_list: function() {
			var f = this,
				j = f.options.$staticBody.find(".phoneEditButtonList"),
				n = {
					url: "/cudatel/gui/phone/phone",
					type: "GET",
					rowDataRoot: "$.phone.buttons",
					data: {
						bbx_phone_id: f.options.bbx_phone_id
					},
					sortby: "bbx_phone_button_position",
					sortorder: "asc",
					drop: function(q, v, x, y, D) {
						v = [];
						for(var B = 0; B < y.length; B++) v[B] = d(y[B], true);
						y = v.splice(q.bbx_phone_button_position, 1);
						v.splice(x, 0, y);
						var u, F;
						B = x;
						for(y = d(q, true); !F && B--;) if(v[B]) F = v[B];
						for(B = x; !u && ++B <= v.length;) if(v[B]) u = v[B];
						if(F && u && y) {
							if(F === u && F !== y) return false
						} else if(F && y === "line") return false;
						else if(u && y === "util") return false;
						if(y === "line" && x > f.options.phone.max_lines) return false;
						a.putREST("/cudatel/gui/phone/button", {
							bbx_phone_button_id: q.bbx_phone_button_id,
							bbx_phone_button_position: x + 1
						}, function() {
							D.refresh()
						});
						return true
					},
					items: "tr:not(.lineone)",
					user_info: {
						sort_by: "bbx_phone_button_position",
						order_by: "bbx_phone_button_position",
						search: {
							bbx_phone_id: f.options.bbx_phone_id
						}
					},
					columnData: [{
						header: "Key",
						value: function(q) {
							q.rowData.bbx_phone_button_position == 1 && q.$row.addClass("lineone");
							switch(q.rowData.bbx_phone_button_type) {
							case "line":
							case "repeat":
								q.$row.addClass("line");
								break;
							case "":
							case "blank":
								q.$row.addClass("emptyButton");
								break;
							default:
								q.$row.addClass("utility")
							}
							return '<span class="buttonNum">' + q.rowData.bbx_phone_button_position + "</span>"
						},
						render: "html",
						sortby: false
					}, {
						header: "Status",
						value: function(q) {
							return q.rowData.bbx_phone_button_type === "line" ? b(q.rowData.line_state) : b("na")
						},
						render: "html"
					}, {
						header: "Label",
						"class": "labelCol",
						value: function(q) {
							$row = a('<form action="/cudatel/gui/phone/button" method="PUT" accept="application/json" class="jsAutoSubmit"><input type="text" class="buttonEditLabel" name="bbx_phone_button_label" /></form>');
							$row.data("extraFormData", {
								bbx_phone_button_id: q.rowData.bbx_phone_button_id
							});
							$row.find(".buttonEditLabel").val(q.rowData.bbx_phone_button_label);
							switch(q.rowData.bbx_phone_button_type) {
							case "repeat":
								$row.find(".buttonEditLabel").disable();
								break;
							default:
								$row.find(".buttonEditLabel").enable()
							}
							return $row
						},
						render: "html"
					}, {
						header: "Function and Extension",
						"class": "typeCol",
						value: function(q) {
							var v = a('<form action="/cudatel/gui/phone/button" method="PUT" accept="application/json" class="reassignForm"><select class="buttonEditType" name="bbx_phone_button_type" /> <span class="buttonEditView" /><span class="buttonEditEdit" /></form>'),
								x = v.find("select.buttonEditType");
							v.find("button");
							var y = v.find(".buttonEditView"),
								D = v.find(".buttonEditEdit");
							f._render_button_view(q.rowData, q.rowData.bbx_phone_button_type, y).appendTo(y);
							if(q.rowData.bbx_phone_button_position === 1) {
								x.removeAttr("name");
								x.disable("is_primary")
							}
							for(var B = 0; B < e.length; B++) if(trueish(f.options.phone[e[B].require]) || !e[B].require)(e[B].value === "line" || e[B].value === "repeat") && q.rowData.bbx_phone_button_position > f.options.phone.max_lines || x.append(a("<option />").text(e[B].text).val(e[B].value));
							x.val(q.rowData.bbx_phone_button_type);
							x.bind("change", function() {
								if(x.val() === q.rowData.bbx_phone_button_type) {
									D.empty().hide();
									y.show();
									q.rowData.bbx_phone_button_type === "repeat" ? v.closest("tr").find(".buttonEditLabel").disable().val(v.closest("tr").prevAll(1).find(".buttonEditLabel").val()) : v.closest("tr").find(".buttonEditLabel").show()
								} else {
									y.hide();
									f._render_button_edit(q.rowData, x.val(), v).appendTo(D.empty());
									D.show()
								}
							});
							v.delegate("a.doEdit", "click", function(u) {
								u.preventDefault();
								y.hide();
								f._render_button_edit(q.rowData, x.val(), v).appendTo(D.empty());
								D.show()
							});
							v.delegate("button.cancel", "click", function() {
								D.empty().hide();
								x.val(q.rowData.bbx_phone_button_type);
								y.show()
							});
							v.bind("form_cancel", function() {
								x.val(q.rowData.bbx_phone_button_type).trigger("change")
							});
							v.ajaxForm({
								data: {
									bbx_phone_button_id: q.rowData.bbx_phone_button_id
								},
								accept: "application/json",
								beforeSubmit: function() {
									v.find("button").disable()
								},
								success: function() {
									j.sortableJSONTable("refresh")
								}
							});
							return v
						},
						render: "html"
					}, {
						header: "Line Aliases",
						"class": "buttonForwards",
						value: function(q) {
							var v = a('<a href="#" />');
							if(q.rowData.forwarded && q.rowData.forwarded[0]) {
								for(var x = q.rowData.forwarded.concat([]).sort(function(D, B) {
									return cmp(Number(D.bbx_extension_value), Number(B.bbx_extension_value))
								}), y = x.length; y--;) x[y] = format_information(x[y].bbx_extension_value);
								v.text(x.join(", "))
							} else if(q.rowData.bbx_phone_button_type === "line") v.text("(No Aliases)");
							else return "";
							v.bind("click", function(D) {
								D.preventDefault();
								showPopup("line_forwards", {
									bbx_phone_button_id: q.rowData.bbx_phone_button_id,
									forwarded: q.rowData.forwarded,
									bbx_extension_id: q.rowData.bbx_extension_id
								}).one("close_request", function() {
									j.sortableJSONTable("refresh")
								})
							});
							return v
						},
						render: "html"
					}, {
						header: "Shared Line",
						"class": "sla",
						value: function(q) {
							var v, x = q.rowData;
							if(x.bbx_phone_button_type !== "line") return "";
							v = a('<select><option value="off">SLA Off</option><option value="sla">SLA On</option></select>');
							trueish(f.options.phone.allow_sla_barge) && a('<option value="slab">SLA+Barge</option>').appendTo(v);
							if(x.shared_line_appearance) x.shared_line_appearance_barge ? v.val("slab") : v.val("sla");
							else v.val("off");
							v.bind("change", function() {
								var y = {
									bbx_phone_button_id: x.bbx_phone_button_id
								};
								switch(v.val()) {
								case "off":
									a.extend(y, {
										shared_line_appearance: "",
										shared_line_appearance_barge: ""
									});
									break;
								case "sla":
									a.extend(y, {
										shared_line_appearance: "1",
										shared_line_appearance_barge: ""
									});
									break;
								case "slab":
									a.extend(y, {
										shared_line_appearance: "1",
										shared_line_appearance_barge: "1"
									})
								}
								a.putREST("/cudatel/gui/phone/button", y)
							});
							return v
						},
						render: "html"
					}, {
						header: "Utilities",
						"class": "utilsCol",
						value: function(q) {
							if(q.rowData.bbx_phone_button_type !== "line") return "";
							$row = a("<span />");
							if(f.options.phone.bbx_phone_softphone) {
								$sip_info = a('<a href="#">Reg. Info</a>').appendTo($row);
								$sip_info.bind("click", function(v) {
									v.preventDefault();
									showPopup("line_reg_info", {
										bbx_phone_button_id: q.rowData.bbx_phone_button_id
									})
								});
								a(document.createTextNode(" ")).insertAfter($sip_info)
							}
							$echo_test = a('<a href="#">Echo Test</a>').appendTo($row);
							$echo_test.bind("click", function(v) {
								v.preventDefault();
								showBlanker({
									title: "Calling...",
									text: "The system is calling the selected line to make an echo test.",
									buttons: ["OK"],
									callbacks: [blankerCancel]
								});
								a.post("/cudatel/gui/phone/line/echo_test", {
									bbx_phone_id: f.options.phone.bbx_phone_id,
									line: q.rowData.bbx_phone_button_position
								})
							});
							return $row
						},
						render: "html"
					}]
				};
			if(!trueish(f.options.phone.allow_sla)) for(var l = false, o = n.columnData.length; o-- && !l;) if(n.columnData[o]["class"] === "sla") {
				n.columnData.splice(o, 1);
				l = true
			}
			j.sortableJSONTable(n)
		},
		_render_button_view: function(f, j, n) {
			var l = a('<span class="buttonEditView" />');
			switch(j) {
			case "repeat":
				n.closest("tr").find(".buttonEditLabel").disable();
				l.html("This button repeats the line above.");
				break;
			case "":
				n.closest("tr").find(".buttonEditLabel").enable();
				break;
			case "line":
				n.closest("tr").find(".buttonEditLabel").enable();
				j = a(f.bbx_phone_button_position == 1 ? "<span />" : '<a class="doEdit" href="#"></a>');
				j.html('<span class="lineExt" /> <span class="lineDesc" />');
				j.find(".lineExt").text(format_information(f.bbx_extension_value || "(unknown extension)"));
				f.clone_line_number && j.find(".lineDesc").text("(Shared from " + entity.ldquo + f.clone_phone_name + entity.rdquo + ")");
				j.appendTo(l);
				break;
			case "park":
			case "blf":
			case "transfer":
			case "speed_dial":
				n.closest("tr").find(".buttonEditLabel").enable();
				j = a('<a href="#" class="doEdit" />');
				f = format_information(f.bbx_phone_button_value);
				j.text(f);
				j.appendTo(l)
			}
			return l.contents()
		},
		_render_button_edit: function(f, j, n) {
			var l = this,
				o = this.element,
				q = a("<span />");
			switch(j) {
			case "repeat":
				n.closest("tr").find(".buttonEditLabel").disable().val(n.closest("tr").prevAll(1).find(".buttonEditLabel").val());
				q.html('<button type="submit">Apply</button> <button type="button" class="cancel">Cancel</button>');
				break;
			case "":
			case "blank":
				n.closest("tr").find(".buttonEditLabel").enable().val();
				q.html('<button type="submit">Apply</button> <button type="button" class="cancel">Cancel</button>');
				break;
			case "line":
				n.closest("tr").find(".buttonEditLabel").enable();
				j = showPopup("button_line_edit", {
					bbx_phone_button_id: f.bbx_phone_button_id,
					bbx_user_id: l.options.phone.bbx_user_id
				});
				j.one("submit_form", function(y, D) {
					a.putREST("/cudatel/gui/phone/button", a.extend({
						bbx_phone_button_type: "line",
						bbx_phone_button_id: f.bbx_phone_button_id
					}, D), function() {
						o.find(".phoneEditButtonList").sortableJSONTable("refresh")
					})
				});
				j.one("close_request", function(y) {
					y.has_data || q.trigger("form_cancel")
				});
				break;
			case "park":
			case "blf":
			case "transfer":
			case "speed_dial":
				n.closest("tr").find(".buttonEditLabel").enable();
				q.html('<span class="buttonEditCaption" /><input class="buttonEditExtPicker" type="text" name="bbx_phone_button_value" size="8" /> <button type="submit">Apply</button> <button type="button" class="cancel">Cancel</button>');
				n = j in g ? g[j] : {
					value: "(Unknown)",
					param: "Extension?"
				};
				var v = q.find(".buttonEditExtPicker"),
					x = q.find("button[type=submit]");
				j === "blf" && v.bind("keyup selection", function() {
					x.disable("not_blf");
					if(l.options._blf_xhr) {
						l.options._blf_xhr.abort();
						delete l.options._blf_xhr
					}
					l.options._blf_xhr = a.getREST("/cudatel/gui/extension/valid_blf", {
						bbx_extension_value: v.val()
					}, function(y) {
						trueish(y.valid_blf) && x.enable("not_blf")
					})
				});
				q.find(".buttonEditCaption").text(n.param + ": ");
				v.extensionPicker(a.extend({
					hidden: false
				}, n.picker));
				if(n.picker.mustValidate) {
					v.bind("selection", function() {
						q.find("button[type=submit]").enable("noext")
					});
					v.bind("noselection", function() {
						q.find("button[type=submit]").disable("noext")
					});
					q.find("button[type=submit]").disable("noext")
				} else v.bind("keyup selection", function() {
					v.val().search(/^[0-9]+$/) === -1 ? q.find("button[type=submit]").disable("nonnumeric") : q.find("button[type=submit]").enable("nonnumeric")
				}).triggerHandler("keyup")
			}
			return q
		},
		_create: function() {
			var f = this,
				j = this.element;
			a.getTemplate("/cudatel/ajax-html/phone_edit.html", function(n) {
				var l = a(n).children(".staticBody");
				f.options.$staticBody = l;
				a.getREST("/cudatel/gui/phone/phone", {
					bbx_phone_id: f.options.bbx_phone_id
				}, function(o) {
					f._setup_sidecars(o.phone);
					f._setup_dect(o.phone);
					f._setup_generic(o.phone);
					f._setup_fax_method(o.phone);
					f._fill_basic_info(o.phone);
					l.appendTo(j);
					f._create_button_list()
				});
				l.find(".phoneEditBasicForm").formModule({
					formData: {
						bbx_phone_id: f.options.bbx_phone_id
					},
					success: function() {
						if(f.options.sidecar_changed) {
							f.options.sidecar_changed = false;
							l.find(".phoneEditButtonList").sortableJSONTable("refresh")
						}
						a.getREST("/cudatel/gui/phone/phone", {
							bbx_phone_id: f.options.bbx_phone_id
						}, function(o) {
							f._fill_basic_info(o.phone)
						})
					}
				});
				l.find(".phoneEditRebootButton").bind("click", function(o) {
					o.preventDefault();
					showBlanker({
						title: "Reboot Phone?",
						text: "The phone will not be usable during the reboot process, which usually lasts about 1" + entity.ndash + "3 minutes. If a call is currently active, the phone may reboot after the active call is complete.",
						buttons: ["Reboot Phone", "Cancel"],
						callbacks: [function() {
							a.postREST("/cudatel/gui/phone/reboot", {
								bbx_phone_id: f.options.bbx_phone_id
							});
							blankerCancel.call(this)
						},
						blankerCancel]
					})
				})
			})
		}
	}));
	a.widget("cui2.buttonLineEdit", a.extend(true, {}, {
		options: {},
		_create: function() {
			var f = this,
				j = this.element;
			a.getTemplate("/cudatel/ajax-html/phone_edit_line.html", function(n) {
				var l = a(n).find(".staticBody"),
					o, q = l.find("select.lineType");
				l.find(".newLineExtSelector").extensionValidator({
					allow: ["nextfree", "single", "block", "external"],
					hiddens: {
						nextfree: "extension_next_free"
					},
					nextFreeValue: 1
				}).bind("valid", function() {
					o === "new" && l.find("button[type=submit]").enable("invalid_new")
				}).bind("invalid", function() {
					o === "new" && l.find("button[type=submit]").disable("invalid_new")
				});
				l.find(".cloneLineExtSelector").extensionPicker({
					searchTypes: ["user"],
					hiddenName: "clone_extension_id",
					hiddenFormat: "{bbx_extension_id}",
					textFormat: "number",
					autoSelectFirst: true,
					requirePhone: true
				}).bind("selection", function() {
					o === "clone" && l.find("button[type=submit]").enable("invalid_clone")
				}).bind("noselection", function() {
					o === "clone" && l.find("button[type=submit]").disable("invalid_clone")
				});
				var v = false;
				a.getREST("/cudatel/gui/extension/user/secondaries", {
					bbx_user_id: f.options.bbx_user_id
				}, function(x) {
					var y = l.find(".secondarySelector");
					x = x.secondaries;
					if(x.length) for(var D = 0; D < x.length; D++) {
						var B = x[D];
						y.append(a("<option />").val(B.bbx_extension_id).text(format_information(B.bbx_extension_value)))
					} else {
						y.disable("none");
						v = true
					}
				});
				q.bind("change", function() {
					l.find("button[type=submit]").enable("invalid_new").enable("invalid_clone").enable("invalid_sec");
					l.find(".lineTypeTR").hide();
					switch(q.val()) {
					case "new":
						o = "new";
						l.find(".newLineTR").show();
						l.find(".newLineExtSelector").extensionValidator("getState").valid ? l.find("button[type=submit]").enable("invalid_new") : l.find("button[type=submit]").disable("invalid_new");
						break;
					case "sec":
						o = "sec";
						l.find(".secondaryLineTR").show();
						v && l.find("button[type=submit]").disable("invalid_sec");
						break;
					case "clone":
						o = "clone";
						l.find(".cloneLineTR").show();
						l.find("button[type=submit]").disable("invalid_clone")
					}
				}).trigger("change");
				l.children("form").bind("submit", function(x) {
					x.preventDefault();
					if(a(this).find("button[type=submit]:enabled")[0]) {
						x = l.find("form").serializeObject();
						var y = {};
						switch(o) {
						case "new":
							delete x.clone_extension_id;
							delete x.secondary_extension_id;
							y = x;
							break;
						case "sec":
							y = {
								bbx_extension_id: x.secondary_extension_id
							};
							break;
						case "clone":
							y = {
								bbx_extension_id: x.clone_extension_id
							}
						}
						j.trigger("submit_form", y);
						j.trigger("close_request", {
							has_data: true
						})
					}
				});
				j.append(l)
			})
		}
	}));
	a.widget("cui2.buttonLineForwards", a.extend(true, {}, {
		options: {},
		_create: function() {
			var f = this,
				j = this.element;
			a.getTemplate("/cudatel/ajax-html/phone_edit_line_forwards.html", function(n) {
				n = a(n).find(".staticBody");
				n.find(".lineSorter").sortList({
					data: f.options.forwarded,
					rowDataRoot: null,
					allow: ["add", "remove"],
					rowData: {
						value: function(l) {
							return format_information(l.bbx_extension_value)
						},
						render: "text"
					},
					addForm: {
						value: function() {
							$form = a('<form action="/cudatel/gui/phone/line/alias" method="POST"><div class="validator" /><br /><button type="submit">Add Alias Extension</button></form>');
							$form.find(".validator").extensionValidator({
								allow: ["nextfree", "single", "block", "external"],
								allowUserSecondaries: f.options.bbx_user_id
							}).bind("valid", function() {
								$form.find("button[type=submit]").enable("invalid")
							}).bind("invalid", function() {
								$form.find("button[type=submit]").disable("invalid")
							});
							$form.ajaxForm({
								data: {
									bbx_phone_button_id: f.options.bbx_phone_button_id
								},
								accept: "application/json",
								success: function(l) {
									var o = {};
									try {
										o = JSON.parse(l)
									} catch(q) {}
									$form.trigger("add", {
										data: o.alias,
										last: true
									})
								}
							});
							return $form
						},
						render: "html",
						position: "last"
					},
					addLink: {
						value: "Add an Alias Extension",
						render: "text",
						position: "last"
					},
					remove: function(l, o) {
						a.deleteREST("/cudatel/gui/phone/line/alias", {
							bbx_extension_id: o.row.bbx_extension_id,
							bbx_phone_button_id: f.options.bbx_phone_button_id
						}, function() {
							o.success()
						})
					},
					hasNoneText: "No Alias Extensions configured"
				});
				n.appendTo(j)
			})
		}
	}));
	a.widget("cui2.buttonLineRegInfo", a.extend(true, {}, {
		options: {},
		_create: function() {
			var f = this,
				j = this.element;
			a.getTemplate("/cudatel/ajax-html/phone_edit_reg_info.html", function(n) {
				a.getREST("/cudatel/gui/phone/button", {
					bbx_phone_button_id: f.options.bbx_phone_button_id
				}, function(l) {
					var o = a(n).find(".staticBody");
					o.find(".username").text(l.button.bbx_extension_value);
					o.find(".password").text(l.button.bbx_registration_password);
					o.find(".authUsername").text(l.button.bbx_registration_username);
					a.getREST("/cudatel/gui/ha_ip/ha_ip", function(q) {
						o.find(".intDomain").text(q.ha_ip.definitive_system_ip);
						o.find(".extDomain").text(q.ha_ip.definitive_external_ip)
					});
					o.appendTo(j)
				})
			})
		}
	}));
	a.widget("cui2.phoneButtonMonitor", a.extend(true, {}, CUI.dataTableClass, CUI.liveTableBase, {
		options: {
			live_table: "bbx_phone_button",
			stash: []
		},
		_create: function() {
			this.options.user_info = {
				search: {
					bbx_phone_id: this.options.bbx_phone_id
				}
			};
			this._live_table_base_create()
		},
		_beforeLABootstrap: function() {
			this.options.in_bootstrap = true
		},
		_afterLABootstrap: function() {
			this.options.in_bootstrap = false
		},
		_insert_row: function() {
			this.options.in_bootstrap || this._throw_change_warning()
		},
		_before_delete_row: function() {
			this._throw_change_warning()
		},
		_update_row: function(f, j) {
			this.options.$jsdt.find("> .jsDataTable").find("> tbody > tr").each(function() {
				var n = a(this),
					l = n.data("row");
				l && l.bbx_phone_button_id === j.bbx_phone_button_id && n.find(".phoneLineButtonState").replaceWith(b(j.line_state))
			})
		},
		_throw_change_warning: function() {}
	}))
})(jQuery);
(function(a) {
	a.widget("cui2.phoneAdd", a.extend(true, {}, {
		options: {},
		_fill_basic_info: function() {},
		_create: function() {
			var e = this,
				g = this.element;
			a.getTemplate("/cudatel/ajax-html/phone_add.html", function(c) {
				$staticBody = a(c).children(".staticBody");
				var d = $staticBody.find("form.assignForm"),
					b = d.find(".txtMacManual"),
					f = false;
				$staticBody.find(".phoneAddTypeRadios input[type=radio]").bind("click change", function() {
					a(this).is(".rdoMacManual:checked") ? b.enable("radio_select") : b.disable("radio_select");
					if(a(this).is(".rdoSelectExisting:checked")) {
						$staticBody.find(".selectPhone").show();
						f = true
					} else if(f) {
						$staticBody.find("input[name=bbx_phone_id]:radio:checked").removeAttr("checked");
						$staticBody.find(".selectPhone").hide();
						f = false
					}
				}).filter(":checked").triggerHandler("change");
				b.bind("keyup change", function() {
					d.find(".rdoMacManual").val(this.value)
				});
				d.ajaxForm({
					data: {
						bbx_user_id: e.options.bbx_user_id
					},
					accept: "application/json",
					beforeSerialize: function(n) {
						var l = d.find(".rdoMacManual");
						if(l.is(":checked")) {
							var o = b.val();
							o = o.replace(/[^0-9a-f]/ig, "");
							if(o.length === 12) {
								l.val(o);
								b.val(o)
							} else {
								alert("The manually-entered MAC address is not valid.");
								return false
							}
						}
						if(n.find("input[name=bbx_phone_id]:checked")[0]) n.find("input[name=bbx_phone_mac]").disable("no_mac_and_id");
						else if(n.find("input.rdoSelectExisting:checked")[0]) {
							alert("No phone was selected.");
							return false
						}
					},
					beforeSubmit: function() {
						d.find("input[name=bbx_phone_mac]").enable("no_mac_and_id")
					},
					success: function() {
						g.trigger("close_request")
					}
				});
				$staticBody.appendTo(g);
				var j = g.find(".phoneAddUnassigned").jsonTable({
					url: "/cudatel/gui/extension/list",
					data: {
						type: "phone"
					},
					hasNoneText: "No unassigned phones are available for use. To use an assigned phone, remove it from the assigned user and try again.",
					rowDataRoot: "$.list",
					sortby: "bbx_extension_value",
					sortorder: "asc",
					rows: 10,
					searchParam: "search_string",
					paginator: true,
					paginatorToTop: true,
					paginatorToTopAdditional: 200,
					columnData: [{
						header: "",
						render: "html",
						value: function(n) {
							return a('<input type="radio" name="bbx_phone_id" />').val(n.rowData.bbx_phone_id)
						}
					}, {
						header: "Ext.",
						value: function(n) {
							return format_information(n.rowData.bbx_extension_value, {
								no_extension: true
							})
						},
						sortby: "bbx_extension_value"
					}, {
						header: "Name",
						value: "show_name",
						sortby: "name"
					}]
				});
				j.delegate("td:not(.col1)", "click", function() {
					a(this).closest("tr").find(":radio").attr("checked", "checked")
				}).addClass("clickable");
				$staticBody.find(".phoneSearch").searchBox().bind("search", function(n, l) {
					j.jsonTable("refresh", {
						search: l
					})
				})
			})
		}
	}))
})(jQuery);
(function(a) {
	a.widget("cui2.phoneDetail", a.extend(true, {}, {
		options: {},
		_init: function() {
			var e = this,
				g = this.element;
			a.getTemplate("/cudatel/ajax-html/phone_detail.html", function(c) {
				e.options.$staticBody = a(c).find(".staticBody");
				var d = e.options.$staticBody;
				a.getREST("/cudatel/gui/phone/phone", {
					bbx_phone_id: e.options.bbx_phone_id
				}, function(b) {
					try {
						b.phone.bbx_extension_id = b.phone.buttons[0].bbx_extension_id;
						b.phone.bbx_extension_value = b.phone.buttons[0].bbx_extension_value;
						b.phone.bbx_extension_block_begin = b.phone.buttons[0].bbx_extension_block_begin;
						b.phone.bbx_extension_block_end = b.phone.buttons[0].bbx_extension_block_end
					} catch(f) {
						console_log("screens/jquery.phoneDetail.js: Could not find the first line's extension information. ", f)
					}
					var j = {
						name: b.phone.bbx_phone_desc,
						name_param: "bbx_phone_desc",
						number: b.phone.bbx_extension_value,
						prefix: "bbx_phone",
						bbx_phone_id: b.phone.bbx_phone_id,
						bbx_extension_id: b.phone.bbx_extension_id,
						restURL: "/cudatel/gui/phone/phone",
						buttons: ["migrate", "delete", "rename"]
					};
					d.find(".masthead").extensionDetailMasthead(j);
					d.find(".phoneInfoModel").text((b.phone.bbx_phone_manufacturer_name || "") + " " + (b.phone.bbx_phone_model_name || ""));
					d.find(".phoneInfoMfgr").text(b.phone.bbx_phone_manufacturer_name || "");
					d.find(".phoneInfoMAC").text(b.phone.bbx_phone_mac ? b.phone.bbx_phone_mac.replace(/^([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i, "$1:$2:$3:$4:$5:$6") : "Generic SIP Device");
					d.find(".phoneInfoLastReg").text(b.phone.bbx_phone_last_registered);
					d.find(".phoneInfoLastIP").text(b.phone.bbx_phone_last_ip);
					g.html(d)
				})
			});
			g.one("refreshDetail", function() {
				g.phoneDetail()
			})
		}
	}))
})(jQuery);