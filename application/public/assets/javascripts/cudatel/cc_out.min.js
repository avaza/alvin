var my_calls = false;
(function () {
    var a = {
        type_name_user: "Person",
        type_name_group: "Group",
        type_name_queue: "Queue",
        type_name_conference: "Conference",
        type_name_valet_parking: "Parking",
        type_name_auto_attendant: "Automated Attendant",
        type_name_router: "Advanced Call Router",
        type_name_phone: "Unassigned Phone",
        type_name_alloc: "Allocation Block",
        type_icon_user: "/images/typeicons/user.png",
        type_icon_group: "/images/typeicons/group.png",
        type_icon_queue: "/images/typeicons/queue.png",
        type_icon_conference: "/images/typeicons/conference.png",
        type_icon_valet_parking: "/images/typeicons/valet_parking.png",
        type_icon_auto_attendant: "/images/typeicons/auto_attendant.png",
        type_icon_router: "/images/typeicons/router.png",
        type_icon_phone: "/images/typeicons/phone.png",
        type_icon_extension: "/images/typeicons/extension.png",
        type_icon_alloc: "/images/typeicons/extension.png"
    };
    txt = function (e) {
        return a[e] || e
    }
})();
this.JSON || (JSON = {});
(function () {
    function a(n) {
        return n < 10 ? "0" + n : n
    }

    function e(n) {
        g.lastIndex = 0;
        return g.test(n) ? '"' + n.replace(g, function (q) {
            var u = l[q];
            return typeof u === "string" ? u : "\\u" + ("0000" + q.charCodeAt(0).toString(16)).slice(-4)
        }) + '"' : '"' + n + '"'
    }

    function f(n, q) {
        var u, v, x, z, B = c,
            C, w = q[n];
        if (w && typeof w === "object" && typeof w.toJSON === "function") w = w.toJSON(n);
        if (typeof o === "function") w = o.call(q, n, w);
        switch (typeof w) {
        case "string":
            return e(w);
        case "number":
            return isFinite(w) ? String(w) : "null";
        case "boolean":
        case "null":
            return String(w);
        case "object":
            if (!w) return "null";
            c += b;
            C = [];
            if (Object.prototype.toString.apply(w) === "[object Array]") {
                z = w.length;
                for (u = 0; u < z; u += 1) C[u] = f(u, w) || "null";
                x = C.length === 0 ? "[]" : c ? "[\n" + c + C.join(",\n" + c) + "\n" + B + "]" : "[" + C.join(",") + "]";
                c = B;
                return x
            }
            if (o && typeof o === "object") {
                z = o.length;
                for (u = 0; u < z; u += 1) {
                    v = o[u];
                    if (typeof v === "string")
                        if (x = f(v, w)) C.push(e(v) + (c ? ": " : ":") + x)
                }
            } else
                for (v in w)
                    if (Object.hasOwnProperty.call(w, v))
                        if (x = f(v, w)) C.push(e(v) + (c ? ": " : ":") + x); x = C.length === 0 ? "{}" : c ? "{\n" + c + C.join(",\n" + c) + "\n" + B + "}" : "{" + C.join(",") + "}";
            c = B;
            return x
        }
    }
    if (typeof Date.prototype.toJSON !== "function") {
        Date.prototype.toJSON = function () {
            return this.getUTCFullYear() + "-" + a(this.getUTCMonth() + 1) + "-" + a(this.getUTCDate()) + "T" + a(this.getUTCHours()) + ":" + a(this.getUTCMinutes()) + ":" + a(this.getUTCSeconds()) + "Z"
        };
        String.prototype.toJSON = Number.prototype.toJSON = Boolean.prototype.toJSON = function () {
            return this.valueOf()
        }
    }
    var j = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
        g = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
        c, b, l = {
            "\u0008": "\\b",
            "\t": "\\t",
            "\n": "\\n",
            "\u000c": "\\f",
            "\r": "\\r",
            '"': '\\"',
            "\\": "\\\\"
        }, o;
    if (typeof JSON.stringify !== "function") JSON.stringify = function (n, q, u) {
        var v;
        b = c = "";
        if (typeof u === "number")
            for (v = 0; v < u; v += 1) b += " ";
        else if (typeof u === "string") b = u;
        if ((o = q) && typeof q !== "function" && (typeof q !== "object" || typeof q.length !== "number")) throw Error("JSON.stringify");
        return f("", {
            "": n
        })
    };
    if (typeof JSON.parse !== "function") JSON.parse = function (n, q) {
        function u(x, z) {
            var B, C, w = x[z];
            if (w && typeof w === "object")
                for (B in w)
                    if (Object.hasOwnProperty.call(w,
                        B)) {
                        C = u(w, B);
                        if (C !== undefined) w[B] = C;
                        else delete w[B]
                    }
            return q.call(x, z, w)
        }
        var v;
        j.lastIndex = 0;
        if (j.test(n)) n = n.replace(j, function (x) {
            return "\\u" + ("0000" + x.charCodeAt(0).toString(16)).slice(-4)
        });
        if (/^[\],:{}\s]*$/.test(n.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]").replace(/(?:^|:|,)(?:\s*\[)+/g, ""))) {
            v = eval("(" + n + ")");
            return typeof q === "function" ? u({
                "": v
            }, "") : v
        }
        throw new SyntaxError("JSON.parse");
    }
})();
(function (a, e) {
    function f(A, D, I) {
        if (I === e && A.nodeType === 1) {
            I = A.getAttribute("data-" + D);
            if (typeof I === "string") {
                try {
                    I = I === "true" ? true : I === "false" ? false : I === "null" ? null : !w.isNaN(I) ? parseFloat(I) : J.test(I) ? w.parseJSON(I) : I
                } catch (Q) {}
                w.data(A, D, I)
            } else I = e
        }
        return I
    }

    function j() {
        return false
    }

    function g() {
        return true
    }

    function c(A, D, I) {
        I[0].type = A;
        return w.event.handle.apply(D, I)
    }

    function b(A) {
        var D, I, Q, U, X, la, ka, xa, Wa, Ha, Za, ib = [];
        U = [];
        X = w.data(this, this.nodeType ? "events" : "__events__");
        if (typeof X === "function") X =
            X.events;
        if (!(A.liveFired === this || !X || !X.live || A.button && A.type === "click")) {
            if (A.namespace) Za = RegExp("(^|\\.)" + A.namespace.split(".").join("\\.(?:.*\\.)?") + "(\\.|$)");
            A.liveFired = this;
            var ub = X.live.slice(0);
            for (ka = 0; ka < ub.length; ka++) {
                X = ub[ka];
                X.origType.replace(pa, "") === A.type ? U.push(X.selector) : ub.splice(ka--, 1)
            }
            U = w(A.target).closest(U, A.currentTarget);
            xa = 0;
            for (Wa = U.length; xa < Wa; xa++) {
                Ha = U[xa];
                for (ka = 0; ka < ub.length; ka++) {
                    X = ub[ka];
                    if (Ha.selector === X.selector && (!Za || Za.test(X.namespace))) {
                        la = Ha.elem;
                        Q = null;
                        if (X.preType === "mouseenter" || X.preType === "mouseleave") {
                            A.type = X.preType;
                            Q = w(A.relatedTarget).closest(X.selector)[0]
                        }
                        if (!Q || Q !== la) ib.push({
                            elem: la,
                            handleObj: X,
                            level: Ha.level
                        })
                    }
                }
            }
            xa = 0;
            for (Wa = ib.length; xa < Wa; xa++) {
                U = ib[xa];
                if (I && U.level > I) break;
                A.currentTarget = U.elem;
                A.data = U.handleObj.data;
                A.handleObj = U.handleObj;
                Za = U.handleObj.origHandler.apply(U.elem, arguments);
                if (Za === false || A.isPropagationStopped()) {
                    I = U.level;
                    if (Za === false) D = false;
                    if (A.isImmediatePropagationStopped()) break
                }
            }
            return D
        }
    }

    function l(A,
        D) {
        return (A && A !== "*" ? A + "." : "") + D.replace($a, "`").replace(fb, "&")
    }

    function o(A, D, I) {
        if (w.isFunction(D)) return w.grep(A, function (U, X) {
            return !!D.call(U, X, U) === I
        });
        else if (D.nodeType) return w.grep(A, function (U) {
            return U === D === I
        });
        else if (typeof D === "string") {
            var Q = w.grep(A, function (U) {
                return U.nodeType === 1
            });
            if (W.test(D)) return w.filter(D, Q, !I);
            else D = w.filter(D, Q)
        }
        return w.grep(A, function (U) {
            return w.inArray(U, D) >= 0 === I
        })
    }

    function n(A, D) {
        var I = 0;
        D.each(function () {
            if (this.nodeName === (A[I] && A[I].nodeName)) {
                var Q =
                    w.data(A[I++]),
                    U = w.data(this, Q);
                if (Q = Q && Q.events) {
                    delete U.handle;
                    U.events = {};
                    for (var X in Q)
                        for (var la in Q[X]) w.event.add(this, X, Q[X][la], Q[X][la].data)
                }
            }
        })
    }

    function q(A, D) {
        D.src ? w.ajax({
            url: D.src,
            async: false,
            dataType: "script"
        }) : w.globalEval(D.text || D.textContent || D.innerHTML || "");
        D.parentNode && D.parentNode.removeChild(D)
    }

    function u(A, D, I) {
        var Q = D === "width" ? A.offsetWidth : A.offsetHeight;
        if (I === "border") return Q;
        w.each(D === "width" ? ea : ca, function () {
            I || (Q -= parseFloat(w.css(A, "padding" + this)) || 0);
            if (I ===
                "margin") Q += parseFloat(w.css(A, "margin" + this)) || 0;
            else Q -= parseFloat(w.css(A, "border" + this + "Width")) || 0
        });
        return Q
    }

    function v(A, D, I, Q) {
        if (w.isArray(D) && D.length) w.each(D, function (U, X) {
            I || y.test(A) ? Q(A, X) : v(A + "[" + (typeof X === "object" || w.isArray(X) ? U : "") + "]", X, I, Q)
        });
        else if (!I && D != null && typeof D === "object") w.isEmptyObject(D) ? Q(A, "") : w.each(D, function (U, X) {
            v(A + "[" + U + "]", X, I, Q)
        });
        else Q(A, D)
    }

    function x(A, D) {
        var I = {};
        w.each(yb.concat.apply([], yb.slice(0, D)), function () {
            I[this] = A
        });
        return I
    }

    function z(A) {
        if (!Ba[A]) {
            var D =
                w("<" + A + ">").appendTo("body"),
                I = D.css("display");
            D.remove();
            if (I === "none" || I === "") I = "block";
            Ba[A] = I
        }
        return Ba[A]
    }

    function B(A) {
        return w.isWindow(A) ? A : A.nodeType === 9 ? A.defaultView || A.parentWindow : false
    }
    var C = a.document,
        w = function () {
            function A() {
                if (!D.isReady) {
                    try {
                        C.documentElement.doScroll("left")
                    } catch (ja) {
                        setTimeout(A, 1);
                        return
                    }
                    D.ready()
                }
            }
            var D = function (ja, Ia) {
                return new D.fn.init(ja, Ia)
            }, I = a.jQuery,
                Q = a.$,
                U, X = /^(?:[^<]*(<[\w\W]+>)[^>]*$|#([\w\-]+)$)/,
                la = /\S/,
                ka = /^\s+/,
                xa = /\s+$/,
                Wa = /\W/,
                Ha = /\d/,
                Za =
                    /^<(\w+)\s*\/?>(?:<\/\1>)?$/,
                ib = /^[\],:{}\s]*$/,
                ub = /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,
                Ua = /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,
                tb = /(?:^|:|,)(?:\s*\[)+/g,
                Bb = /(webkit)[ \/]([\w.]+)/,
                V = /(opera)(?:.*version)?[ \/]([\w.]+)/,
                ia = /(msie) ([\w.]+)/,
                wa = /(mozilla)(?:.*? rv:([\w.]+))?/,
                ua = navigator.userAgent,
                Ca = false,
                Da = [],
                Ra, Xa = Object.prototype.toString,
                nb = Object.prototype.hasOwnProperty,
                Cb = Array.prototype.push,
                Db = Array.prototype.slice,
                Eb = String.prototype.trim,
                kb = Array.prototype.indexOf,
                Ib = {};
            D.fn = D.prototype = {
                init: function (ja, Ia) {
                    var Sa, Ya, sb;
                    if (!ja) return this;
                    if (ja.nodeType) {
                        this.context = this[0] = ja;
                        this.length = 1;
                        return this
                    }
                    if (ja === "body" && !Ia && C.body) {
                        this.context = C;
                        this[0] = C.body;
                        this.selector = "body";
                        this.length = 1;
                        return this
                    }
                    if (typeof ja === "string")
                        if ((Sa = X.exec(ja)) && (Sa[1] || !Ia))
                            if (Sa[1]) {
                                sb = Ia ? Ia.ownerDocument || Ia : C;
                                if (Ya = Za.exec(ja))
                                    if (D.isPlainObject(Ia)) {
                                        ja = [C.createElement(Ya[1])];
                                        D.fn.attr.call(ja, Ia, true)
                                    } else ja = [sb.createElement(Ya[1])];
                                    else {
                                        Ya = D.buildFragment([Sa[1]], [sb]);
                                        ja = (Ya.cacheable ? Ya.fragment.cloneNode(true) : Ya.fragment).childNodes
                                    }
                                return D.merge(this, ja)
                            } else {
                                if ((Ya = C.getElementById(Sa[2])) && Ya.parentNode) {
                                    if (Ya.id !== Sa[2]) return U.find(ja);
                                    this.length = 1;
                                    this[0] = Ya
                                }
                                this.context = C;
                                this.selector = ja;
                                return this
                            } else if (!Ia && !Wa.test(ja)) {
                        this.selector = ja;
                        this.context = C;
                        ja = C.getElementsByTagName(ja);
                        return D.merge(this, ja)
                    } else return !Ia || Ia.jquery ? (Ia || U).find(ja) : D(Ia).find(ja);
                    else if (D.isFunction(ja)) return U.ready(ja);
                    if (ja.selector !== e) {
                        this.selector =
                            ja.selector;
                        this.context = ja.context
                    }
                    return D.makeArray(ja, this)
                },
                selector: "",
                jquery: "1.4.4",
                length: 0,
                size: function () {
                    return this.length
                },
                toArray: function () {
                    return Db.call(this, 0)
                },
                get: function (ja) {
                    return ja == null ? this.toArray() : ja < 0 ? this.slice(ja)[0] : this[ja]
                },
                pushStack: function (ja, Ia, Sa) {
                    var Ya = D();
                    D.isArray(ja) ? Cb.apply(Ya, ja) : D.merge(Ya, ja);
                    Ya.prevObject = this;
                    Ya.context = this.context;
                    if (Ia === "find") Ya.selector = this.selector + (this.selector ? " " : "") + Sa;
                    else if (Ia) Ya.selector = this.selector + "." + Ia + "(" +
                        Sa + ")";
                    return Ya
                },
                each: function (ja, Ia) {
                    return D.each(this, ja, Ia)
                },
                ready: function (ja) {
                    D.bindReady();
                    if (D.isReady) ja.call(C, D);
                    else Da && Da.push(ja);
                    return this
                },
                eq: function (ja) {
                    return ja === -1 ? this.slice(ja) : this.slice(ja, +ja + 1)
                },
                first: function () {
                    return this.eq(0)
                },
                last: function () {
                    return this.eq(-1)
                },
                slice: function () {
                    return this.pushStack(Db.apply(this, arguments), "slice", Db.call(arguments).join(","))
                },
                map: function (ja) {
                    return this.pushStack(D.map(this, function (Ia, Sa) {
                        return ja.call(Ia, Sa, Ia)
                    }))
                },
                end: function () {
                    return this.prevObject ||
                        D(null)
                },
                push: Cb,
                sort: [].sort,
                splice: [].splice
            };
            D.fn.init.prototype = D.fn;
            D.extend = D.fn.extend = function () {
                var ja, Ia, Sa, Ya, sb, qb = arguments[0] || {}, zb = 1,
                    Fb = arguments.length,
                    Jb = false;
                if (typeof qb === "boolean") {
                    Jb = qb;
                    qb = arguments[1] || {};
                    zb = 2
                }
                if (typeof qb !== "object" && !D.isFunction(qb)) qb = {};
                if (Fb === zb) {
                    qb = this;
                    --zb
                }
                for (; zb < Fb; zb++)
                    if ((ja = arguments[zb]) != null)
                        for (Ia in ja) {
                            Sa = qb[Ia];
                            Ya = ja[Ia];
                            if (qb !== Ya)
                                if (Jb && Ya && (D.isPlainObject(Ya) || (sb = D.isArray(Ya)))) {
                                    if (sb) {
                                        sb = false;
                                        Sa = Sa && D.isArray(Sa) ? Sa : []
                                    } else Sa =
                                        Sa && D.isPlainObject(Sa) ? Sa : {};
                                    qb[Ia] = D.extend(Jb, Sa, Ya)
                                } else if (Ya !== e) qb[Ia] = Ya
                        }
                    return qb
            };
            D.extend({
                noConflict: function (ja) {
                    a.$ = Q;
                    if (ja) a.jQuery = I;
                    return D
                },
                isReady: false,
                readyWait: 1,
                ready: function (ja) {
                    ja === true && D.readyWait--;
                    if (!D.readyWait || ja !== true && !D.isReady) {
                        if (!C.body) return setTimeout(D.ready, 1);
                        D.isReady = true;
                        if (!(ja !== true && --D.readyWait > 0))
                            if (Da) {
                                var Ia = 0,
                                    Sa = Da;
                                for (Da = null; ja = Sa[Ia++];) ja.call(C, D);
                                D.fn.trigger && D(C).trigger("ready").unbind("ready")
                            }
                    }
                },
                bindReady: function () {
                    if (!Ca) {
                        Ca =
                            true;
                        if (C.readyState === "complete") return setTimeout(D.ready, 1);
                        if (C.addEventListener) {
                            C.addEventListener("DOMContentLoaded", Ra, false);
                            a.addEventListener("load", D.ready, false)
                        } else if (C.attachEvent) {
                            C.attachEvent("onreadystatechange", Ra);
                            a.attachEvent("onload", D.ready);
                            var ja = false;
                            try {
                                ja = a.frameElement == null
                            } catch (Ia) {}
                            C.documentElement.doScroll && ja && A()
                        }
                    }
                },
                isFunction: function (ja) {
                    return D.type(ja) === "function"
                },
                isArray: Array.isArray || function (ja) {
                    return D.type(ja) === "array"
                },
                isWindow: function (ja) {
                    return ja &&
                        typeof ja === "object" && "setInterval" in ja
                },
                isNaN: function (ja) {
                    return ja == null || !Ha.test(ja) || isNaN(ja)
                },
                type: function (ja) {
                    return ja == null ? String(ja) : Ib[Xa.call(ja)] || "object"
                },
                isPlainObject: function (ja) {
                    if (!ja || D.type(ja) !== "object" || ja.nodeType || D.isWindow(ja)) return false;
                    if (ja.constructor && !nb.call(ja, "constructor") && !nb.call(ja.constructor.prototype, "isPrototypeOf")) return false;
                    for (var Ia in ja);
                    return Ia === e || nb.call(ja, Ia)
                },
                isEmptyObject: function (ja) {
                    for (var Ia in ja) return false;
                    return true
                },
                error: function (ja) {
                    throw ja;
                },
                parseJSON: function (ja) {
                    if (typeof ja !== "string" || !ja) return null;
                    ja = D.trim(ja);
                    if (ib.test(ja.replace(ub, "@").replace(Ua, "]").replace(tb, ""))) return a.JSON && a.JSON.parse ? a.JSON.parse(ja) : (new Function("return " + ja))();
                    else D.error("Invalid JSON: " + ja)
                },
                noop: function () {},
                globalEval: function (ja) {
                    if (ja && la.test(ja)) {
                        var Ia = C.getElementsByTagName("head")[0] || C.documentElement,
                            Sa = C.createElement("script");
                        Sa.type = "text/javascript";
                        if (D.support.scriptEval) Sa.appendChild(C.createTextNode(ja));
                        else Sa.text = ja;
                        Ia.insertBefore(Sa, Ia.firstChild);
                        Ia.removeChild(Sa)
                    }
                },
                nodeName: function (ja, Ia) {
                    return ja.nodeName && ja.nodeName.toUpperCase() === Ia.toUpperCase()
                },
                each: function (ja, Ia, Sa) {
                    var Ya, sb = 0,
                        qb = ja.length,
                        zb = qb === e || D.isFunction(ja);
                    if (Sa)
                        if (zb)
                            for (Ya in ja) {
                                if (Ia.apply(ja[Ya], Sa) === false) break
                            } else
                                for (; sb < qb;) {
                                    if (Ia.apply(ja[sb++], Sa) === false) break
                                } else if (zb)
                                    for (Ya in ja) {
                                        if (Ia.call(ja[Ya], Ya, ja[Ya]) === false) break
                                    } else
                                        for (Sa = ja[0]; sb < qb && Ia.call(Sa, sb, Sa) !== false; Sa = ja[++sb]);
                    return ja
                },
                trim: Eb ? function (ja) {
                    return ja == null ? "" : Eb.call(ja)
                } : function (ja) {
                    return ja == null ? "" : ja.toString().replace(ka, "").replace(xa, "")
                },
                makeArray: function (ja, Ia) {
                    var Sa = Ia || [];
                    if (ja != null) {
                        var Ya = D.type(ja);
                        ja.length == null || Ya === "string" || Ya === "function" || Ya === "regexp" || D.isWindow(ja) ? Cb.call(Sa, ja) : D.merge(Sa, ja)
                    }
                    return Sa
                },
                inArray: function (ja, Ia) {
                    if (Ia.indexOf) return Ia.indexOf(ja);
                    for (var Sa = 0, Ya = Ia.length; Sa < Ya; Sa++)
                        if (Ia[Sa] === ja) return Sa;
                    return -1
                },
                merge: function (ja, Ia) {
                    var Sa = ja.length,
                        Ya = 0;
                    if (typeof Ia.length ===
                        "number")
                        for (var sb = Ia.length; Ya < sb; Ya++) ja[Sa++] = Ia[Ya];
                    else
                        for (; Ia[Ya] !== e;) ja[Sa++] = Ia[Ya++];
                    ja.length = Sa;
                    return ja
                },
                grep: function (ja, Ia, Sa) {
                    var Ya = [],
                        sb;
                    Sa = !! Sa;
                    for (var qb = 0, zb = ja.length; qb < zb; qb++) {
                        sb = !! Ia(ja[qb], qb);
                        Sa !== sb && Ya.push(ja[qb])
                    }
                    return Ya
                },
                map: function (ja, Ia, Sa) {
                    for (var Ya = [], sb, qb = 0, zb = ja.length; qb < zb; qb++) {
                        sb = Ia(ja[qb], qb, Sa);
                        if (sb != null) Ya[Ya.length] = sb
                    }
                    return Ya.concat.apply([], Ya)
                },
                guid: 1,
                proxy: function (ja, Ia, Sa) {
                    if (arguments.length === 2)
                        if (typeof Ia === "string") {
                            Sa = ja;
                            ja = Sa[Ia];
                            Ia = e
                        } else if (Ia && !D.isFunction(Ia)) {
                        Sa = Ia;
                        Ia = e
                    }
                    if (!Ia && ja) Ia = function () {
                        return ja.apply(Sa || this, arguments)
                    };
                    if (ja) Ia.guid = ja.guid = ja.guid || Ia.guid || D.guid++;
                    return Ia
                },
                access: function (ja, Ia, Sa, Ya, sb, qb) {
                    var zb = ja.length;
                    if (typeof Ia === "object") {
                        for (var Fb in Ia) D.access(ja, Fb, Ia[Fb], Ya, sb, Sa);
                        return ja
                    }
                    if (Sa !== e) {
                        Ya = !qb && Ya && D.isFunction(Sa);
                        for (Fb = 0; Fb < zb; Fb++) sb(ja[Fb], Ia, Ya ? Sa.call(ja[Fb], Fb, sb(ja[Fb], Ia)) : Sa, qb);
                        return ja
                    }
                    return zb ? sb(ja[0], Ia) : e
                },
             , Sa) === false) break
                            } else
                                for (; sb < qb;) {
                                    if (Ia.apply(ja[sb++], Sa) === false) break
                                } else if (zb)
                                    for (Ya in ja) {
                                        if (Ia.call(ja[Ya], Ya, ja[Ya]) === false) break
                                    } else
                                        for (Sa = ja[0]; sb < qb && Ia.call(Sa, sb, Sa) !== false; Sa = ja[++sb]);
                    return ja
                },
                trim: Eb ? function (ja) {
                    return ja == null ? "" : Eb.call(ja)
                } : function (ja) {
                    return ja == null ? "" : ja.toString().replace(ka, "").replace(xa, "")
                },
                makeArray: function (ja, Ia) {
                    var Sa = Ia || [];
                    if (ja != null) {
                        var Ya = D.type(ja);
                        ja.length == null || Ya === "string" || Ya === "function" || Ya === "regexp" || D.isWindow(ja) ? Cb.call(Sa, ja) : D.merge(Sa, ja)
                    }
                    return Sa
                },
                inArray: function (ja, Ia) {
                    if (Ia.indexOf) return Ia.indexOf(ja);
                    for (var Sa = 0, Ya = Ia.length; Sa < Ya; Sa++)
                        if (Ia[Sa] === ja) return Sa;
                    return -1
                },
                merge: function (ja, Ia) {
                    var Sa = ja.length,
                        Ya = 0;
                    if (typeof Ia.length ===
                        "number")
                        for (var sb = Ia.length; Ya < sb; Ya++) ja[Sa++] = Ia[Ya];
                    else
                        for (; Ia[Ya] !== e;) ja[Sa++] = Ia[Ya++];
                    ja.length = Sa;
                    return ja
                },
                grep: function (ja, Ia, Sa) {
                    var Ya = [],
                        sb;
                    Sa = !! Sa;
                    for (var qb = 0, zb = ja.length; qb < zb; qb++) {
                        sb = !! Ia(ja[qb], qb);
                        Sa !== sb && Ya.push(ja[qb])
                    }
                    return Ya
                },
                map: function (ja, Ia, Sa) {
                    for (var Ya = [], sb, qb = 0, zb = ja.length; qb < zb; qb++) {
                        sb = Ia(ja[qb], qb, Sa);
                        if (sb != null) Ya[Ya.length] = sb
                    }
                    return Ya.concat.apply([], Ya)
                },
                guid: 1,
                proxy: function (ja, Ia, Sa) {
                    if (arguments.length === 2)
                        if (typeof Ia === "string") {
                            Sa = ja;
                            ja = Sa[Ia];
                            Ia = e
                        } else if (Ia && !D.isFunction(Ia)) {
                        Sa = Ia;
                        Ia = e
                    }
                    if (!Ia && ja) Ia = function () {
                        return ja.apply(Sa || this, arguments)
                    };
                    if (ja) Ia.guid = ja.guid = ja.guid || Ia.guid || D.guid++;
                    return Ia
                },
                access: function (ja, Ia, Sa, Ya, sb, qb) {
                    var zb = ja.length;
                    if (typeof Ia === "object") {
                        for (var Fb in Ia) D.access(ja, Fb, Ia[Fb], Ya, sb, Sa);
                        return ja
                    }
                    if (Sa !== e) {
                        Ya = !qb && Ya && D.isFunction(Sa);
                        for (Fb = 0; Fb < zb; Fb++) sb(ja[Fb], Ia, Ya ? Sa.call(ja[Fb], Fb, sb(ja[Fb], Ia)) : Sa, qb);
                        return ja
                    }
                    return zb ? sb(ja[0], Ia) : e
                },
                now: function () {
                    return (new Date).getTime()
                },
                uaMatch: function (ja) {
                    ja =
                        ja.toLowerCase();
                    ja = Bb.exec(ja) || V.exec(ja) || ia.exec(ja) || ja.indexOf("compatible") < 0 && wa.exec(ja) || [];
                    return {
                        browser: ja[1] || "",
                        version: ja[2] || "0"
                    }
                },
                browser: {}
            });
            D.each("Boolean Number String Function Array Date RegExp Object".split(" "), function (ja, Ia) {
                Ib["[object " + Ia + "]"] = Ia.toLowerCase()
            });
            ua = D.uaMatch(ua);
            if (ua.browser) {
                D.browser[ua.browser] = true;
                D.browser.version = ua.version
            }
            if (D.browser.webkit) D.browser.safari = true;
            if (kb) D.inArray = function (ja, Ia) {
                return kb.call(Ia, ja)
            };
            if (!/\s/.test("\u00a0")) {
                ka =
                    /^[\s\xA0]+/;
                xa = /[\s\xA0]+$/
            }
            U = D(C);
            if (C.addEventListener) Ra = function () {
                C.removeEventListener("DOMContentLoaded", Ra, false);
                D.ready()
            };
            else if (C.attachEvent) Ra = function () {
                if (C.readyState === "complete") {
                    C.detachEvent("onreadystatechange", Ra);
                    D.ready()
                }
            };
            return a.jQuery = a.$ = D
        }();
    (function () {
        w.support = {};
        var A = C.documentElement,
            D = C.createElement("script"),
            I = C.createElement("div"),
            Q = "script" + w.now();
        I.style.display = "none";
        I.innerHTML = "   <link/><table></table><a href='/a' style='color:red;float:left;opacity:.55;'>a</a><input type='checkbox'/>";
        var U = I.getElementsByTagName("*"),
            X = I.getElementsByTagName("a")[0],
            la = C.createElement("select"),
            ka = la.appendChild(C.createElement("option"));
        if (!(!U || !U.length || !X)) {
            w.support = {
                leadingWhitespace: I.firstChild.nodeType === 3,
                tbody: !I.getElementsByTagName("tbody").length,
                htmlSerialize: !! I.getElementsByTagName("link").length,
                style: /red/.test(X.getAttribute("style")),
                hrefNormalized: X.getAttribute("href") === "/a",
                opacity: /^0.55$/.test(X.style.opacity),
                cssFloat: !! X.style.cssFloat,
                checkOn: I.getElementsByTagName("input")[0].value === "on",
                optSelected: ka.selected,
                deleteExpando: true,
                optDisabled: false,
                checkClone: false,
                scriptEval: false,
                noCloneEvent: true,
                boxModel: null,
                inlineBlockNeedsLayout: false,
                shrinkWrapBlocks: false,
                reliableHiddenOffsets: true
            };
            la.disabled = true;
            w.support.optDisabled = !ka.disabled;
            D.type = "text/javascript";
            try {
                D.appendChild(C.createTextNode("window." + Q + "=1;"))
            } catch (xa) {}
            A.insertBefore(D, A.firstChild);
            if (a[Q]) {
                w.support.scriptEval = true;
                delete a[Q]
            }
            try {
                delete D.test
            } catch (Wa) {
                w.support.deleteExpando = false
            }
            A.removeChild(D);
            if (I.attachEvent && I.fireEvent) {
                I.attachEvent("onclick", function Ha() {
                    w.support.noCloneEvent = false;
                    I.detachEvent("onclick", Ha)
                });
                I.cloneNode(true).fireEvent("onclick")
            }
            I = C.createElement("div");
            I.innerHTML = "<input type='radio' name='radiotest' checked='checked'/>";
            A = C.createDocumentFragment();
            A.appendChild(I.firstChild);
            w.support.checkClone = A.cloneNode(true).cloneNode(true).lastChild.checked;
            w(function () {
                var Ha = C.createElement("div");
                Ha.style.width = Ha.style.paddingLeft = "1px";
                C.body.appendChild(Ha);
                w.boxModel = w.support.boxModel = Ha.offsetWidth === 2;
                if ("zoom" in Ha.style) {
                    Ha.style.display = "inline";
                    Ha.style.zoom = 1;
                    w.support.inlineBlockNeedsLayout = Ha.offsetWidth === 2;
                    Ha.style.display = "";
                    Ha.innerHTML = "<div style='width:4px;'></div>";
                    w.support.shrinkWrapBlocks = Ha.offsetWidth !== 2
                }
                Ha.innerHTML = "<table><tr><td style='padding:0;display:none'></td><td>t</td></tr></table>";
                var Za = Ha.getElementsByTagName("td");
                w.support.reliableHiddenOffsets = Za[0].offsetHeight === 0;
                Za[0].style.display = "";
                Za[1].style.display =
                    "none";
                w.support.reliableHiddenOffsets = w.support.reliableHiddenOffsets && Za[0].offsetHeight === 0;
                Ha.innerHTML = "";
                C.body.removeChild(Ha).style.display = "none"
            });
            A = function (Ha) {
                var Za = C.createElement("div");
                Ha = "on" + Ha;
                var ib = Ha in Za;
                if (!ib) {
                    Za.setAttribute(Ha, "return;");
                    ib = typeof Za[Ha] === "function"
                }
                return ib
            };
            w.support.submitBubbles = A("submit");
            w.support.changeBubbles = A("change");
            A = D = I = U = X = null
        }
    })();
    var G = {}, J = /^(?:\{.*\}|\[.*\])$/;
    w.extend({
        cache: {},
        uuid: 0,
        expando: "jQuery" + w.now(),
        noData: {
            embed: true,
            object: "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",
            applet: true
        },
        data: function (A, D, I) {
            if (w.acceptData(A)) {
                A = A == a ? G : A;
                var Q = A.nodeType,
                    U = Q ? A[w.expando] : null,
                    X = w.cache;
                if (!(Q && !U && typeof D === "string" && I === e)) {
                    if (Q) U || (A[w.expando] = U = ++w.uuid);
                    else X = A; if (typeof D === "object")
                        if (Q) X[U] = w.extend(X[U], D);
                        else w.extend(X, D);
                        else if (Q && !X[U]) X[U] = {};
                    A = Q ? X[U] : X;
                    if (I !== e) A[D] = I;
                    return typeof D === "string" ? A[D] : A
                }
            }
        },
        removeData: function (A, D) {
            if (w.acceptData(A)) {
                A = A == a ? G : A;
                var I = A.nodeType,
                    Q = I ? A[w.expando] : A,
                    U =
                        w.cache,
                    X = I ? U[Q] : Q;
                if (D) {
                    if (X) {
                        delete X[D];
                        I && w.isEmptyObject(X) && w.removeData(A)
                    }
                } else if (I && w.support.deleteExpando) delete A[w.expando];
                else if (A.removeAttribute) A.removeAttribute(w.expando);
                else if (I) delete U[Q];
                else
                    for (var la in A) delete A[la]
            }
        },
        acceptData: function (A) {
            if (A.nodeName) {
                var D = w.noData[A.nodeName.toLowerCase()];
          frameborder: "frameBorder"
    };
    w.fn.extend({
        attr: function (A, D) {
            return w.access(this, A, D, true, w.attr)
        },
        removeAttr: function (A) {
            return this.each(function () {
                w.attr(this, A, "");
                this.nodeType ===
                    1 && this.removeAttribute(A)
            })
        },
        addClass: function (A) {
            if (w.isFunction(A)) return this.each(function (Wa) {
                var Ha = w(this);
                Ha.addClass(A.call(this, Wa, Ha.attr("class")))
            });
            if (A && typeof A === "string")
                for (var D = (A || "").split(M), I = 0, Q = this.length; I < Q; I++) {
                    var U = this[I];
                    if (U.nodeType === 1)
                        if (U.className) {
                            for (var X = " " + U.className + " ", la = U.className, ka = 0, xa = D.length; ka < xa; ka++)
                                if (X.indexOf(" " + D[ka] + " ") < 0) la += " " + D[ka];
                            U.className = w.trim(la)
                        } else U.className = A
                }
            return this
        },
        removeClass: function (A) {
            if (w.isFunction(A)) return this.each(function (xa) {
                var Wa =
                    w(this);
                Wa.removeClass(A.call(this, xa, Wa.attr("class")))
            });
            if (A && typeof A === "string" || A === e)
                for (var D = (A || "").split(M), I = 0, Q = this.length; I < Q; I++) {
                    var U = this[I];
                    if (U.nodeType === 1 && U.className)
                        if (A) {
                            for (var X = (" " + U.className + " ").replace(E, " "), la = 0, ka = D.length; la < ka; la++) X = X.replace(" " + D[la] + " ", " ");
                            U.className = w.trim(X)
                        } else U.className = ""
                }
            return this
        },
        toggleClass: function (A, D) {
            var I = typeof A,
                Q = typeof D === "boolean";
            if (w.isFunction(A)) return this.each(function (U) {
                var X = w(this);
                X.toggleClass(A.call(this,
                    U, X.attr("class"), D), D)
            });
            return this.each(function () {
                if (I === "string")
                    for (var U, X = 0, la = w(this), ka = D, xa = A.split(M); U = xa[X++];) {
                        ka = Q ? ka : !la.hasClass(U);
                        la[ka ? "addClass" : "removeClass"](U)
                    } else if (I === "undefined" || I === "boolean") {
                        this.className && w.data(this, "__className__", this.className);
                        this.className = this.className || A === false ? "" : w.data(this, "__className__") || ""
                    }
            })
        },
        hasClass: function (A) {
            A = " " + A + " ";
            for (var D = 0, I = this.length; D < I; D++)
                if ((" " + this[D].className + " ").replace(E, " ").indexOf(A) > -1) return true;
            return false
        },
        val: function (A) {
            if (!arguments.length) {
                var D = this[0];
                if (D) {
                    if (w.nodeName(D, "option")) {
                        var I = D.attributes.value;
                        return !I || I.specified ? D.value : D.text
                    }
                    if (w.nodeName(D, "select")) {
                        var Q = D.selectedIndex;
                        I = [];
                        var U = D.options;
                        D = D.type === "select-one";
                        if (Q < 0) return null;
                        var X = D ? Q : 0;
                        for (Q = D ? Q + 1 : U.length; X < Q; X++) {
                            var la = U[X];
                            if (la.selected && (w.support.optDisabled ? !la.disabled : la.getAttribute("disabled") === null) && (!la.parentNode.disabled || !w.nodeName(la.parentNode, "optgroup"))) {
                                A = w(la).val();
                                if (D) return A;
                                I.push(A)
                            }
                        }
                        return I
                    }
                    if (Na.test(D.type) && !w.support.checkOn) return D.getAttribute("value") === null ? "on" : D.value;
                    return (D.value || "").replace(R, "")
                }
                return e
            }
            var ka = w.isFunction(A);
            return this.each(function (xa) {
                var Wa = w(this),
                    Ha = A;
                if (this.nodeType === 1) {
                    if (ka) Ha = A.call(this, xa, Wa.val());
                    if (Ha == null) Ha = "";
                    else if (typeof Ha === "number") Ha += "";
                    else if (w.isArray(Ha)) Ha = w.map(Ha, function (ib) {
                        return ib == null ? "" : ib + ""
                    });
                    if (w.isArray(Ha) && Na.test(this.type)) this.checked = w.inArray(Wa.val(), Ha) >= 0;
                    else if (w.nodeName(this,
                        "select")) {
                        var Za = w.makeArray(Ha);
                        w("option", this).each(function () {
                            this.selected = w.inArray(w(this).val(), Za) >= 0
                        });
                        if (!Za.length) this.selectedIndex = -1
                    } else this.value = Ha
                }
            })
        }
    });
    w.extend({
        attrFn: {
            val: true,
            css: true,
            html: true,
            text: true,
            data: true,
            width: true,
            height: true,
            offset: true
        },
        attr: function (A, D, I, Q) {
            if (!A || A.nodeType === 3 || A.nodeType === 8) return e;
            if (Q && D in w.attrFn) return w(A)[D](I);
            Q = A.nodeType !== 1 || !w.isXMLDoc(A);
            var U = I !== e;
            D = Q && w.props[D] || D;
            var X = O.test(D);
            if ((D in A || A[D] !== e) && Q && !X) {
                if (U) {
                    D ===
                        "type" && Y.test(A.nodeName) && A.parentNode && w.error("type property can't be changed");
                    if (I === null) A.nodeType === 1 && A.removeAttribute(D);
                    else A[D] = I
                }
                if (w.nodeName(A, "form") && A.getAttributeNode(D)) return A.getAttributeNode(D).nodeValue;
                if (D === "tabIndex") return (D = A.getAttributeNode("tabIndex")) && D.specified ? D.value : na.test(A.nodeName) || qa.test(A.nodeName) && A.href ? 0 : e;
                return A[D]
            }
            if (!w.support.style && Q && D === "style") {
                if (U) A.style.cssText = "" + I;
                return A.style.cssText
            }
            U && A.setAttribute(D, "" + I);
            if (!A.attributes[D] &&
                A.hasAttribute && !A.hasAttribute(D)) return e;
            A = !w.support.hrefNormalized && Q && X ? A.getAttribute(D, 2) : A.getAttribute(D);
            return A === null ? e : A
        }
    });
    var pa = /\.(.*)$/,
        La = /^(?:textarea|input|select)$/i,
        $a = /\./g,
        fb = / /g,
        jb = /[^\w\s.|`]/g,
        Fa = function (A) {
            return A.replace(jb, "\\$&")
        }, db = {
            focusin: 0,
            focusout: 0
        };
    w.event = {
        add: function (A, D, I, Q) {
            if (!(A.nodeType === 3 || A.nodeType === 8)) {
                if (w.isWindow(A) && A !== a && !A.frameElement) A = a;
                if (I === false) I = j;
                else if (!I) return;
                var U, X;
                if (I.handler) {
                    U = I;
                    I = U.handler
                }
                if (!I.guid) I.guid = w.guid++;
                if (X = w.data(A)) {
                    var la = A.nodeType ? "events" : "__events__",
                        ka = X[la],
                        xa = X.handle;
                    if (typeof ka === "function") {
                        xa = ka.handle;
                        ka = ka.events
                    } else if (!ka) {
                        A.nodeType || (X[la] = X = function () {});
                        X.events = ka = {}
                    }
                    if (!xa) X.handle = xa = function () {
                        return typeof w !== "undefined" && !w.event.triggered ? w.event.handle.apply(xa.elem, arguments) : e
                    };
                    xa.elem = A;
                    D = D.split(" ");
                    for (var Wa = 0, Ha; la = D[Wa++];) {
                        X = U ? w.extend({}, U) : {
                            handler: I,
                            data: Q
                        };
                        if (la.indexOf(".") > -1) {
                            Ha = la.split(".");
                            la = Ha.shift();
                            X.namespace = Ha.slice(0).sort().join(".")
                        } else {
                            Ha = [];
                            X.namespace = ""
                        }
                        X.type = la;
                        if (!X.guid) X.guid = I.guid;
                        var Za = ka[la],
                            ib = w.event.special[la] || {};
                        if (!Za) {
                            Za = ka[la] = [];
                            if (!ib.setup || ib.setup.call(A, Q, Ha, xa) === false)
                                if (A.addEventListener) A.addEventListener(la, xa, false);
                                else A.attachEvent && A.attachEvent("on" + la, xa)
                        }
                        if (ib.add) {
                            ib.add.call(A, X);
                            if (!X.handler.guid) X.handler.guid = I.guid
                        }
                        Za.push(X);
                        w.event.global[la] = true
                    }
                    A = null
                }
            }
        },
        global: {},
        remove: function (A, D, I, Q) {
            if (!(A.nodeType === 3 || A.nodeType === 8)) {
                if (I === false) I = j;
                var U, X, la = 0,
                    ka, xa, Wa, Ha, Za, ib, ub = A.nodeType ?
                        "events" : "__events__",
                    Ua = w.data(A),
                    tb = Ua && Ua[ub];
                if (Ua && tb) {
                    if (typeof tb === "function") {
                        Ua = tb;
                        tb = tb.events
                    }
                    if (D && D.type) {
                        I = D.handler;
                        D = D.type
                    }
                    if (!D || typeof D === "string" && D.charAt(0) === ".") {
                        D = D || "";
                        for (U in tb) w.event.remove(A, U + D)
                    } else {
                        for (D = D.split(" "); U = D[la++];) {
                            Ha = U;
                            ka = U.indexOf(".") < 0;
                            xa = [];
                            if (!ka) {
                                xa = U.split(".");
                                U = xa.shift();
                                Wa = RegExp("(^|\\.)" + w.map(xa.slice(0).sort(), Fa).join("\\.(?:.*\\.)?") + "(\\.|$)")
                            }
                            if (Za = tb[U])
                                if (I) {
                                    Ha = w.event.special[U] || {};
                                    for (X = Q || 0; X < Za.length; X++) {
                                        ib = Za[X];
                                        if (I.guid ===
                                            ib.guid) {
                                            if (ka || Wa.test(ib.namespace)) {
                                                Q == null && Za.splice(X--, 1);
                                                Ha.remove && Ha.remove.call(A, ib)
                                            }
                                            if (Q != null) break
                                        }
                                    }
                                    if (Za.length === 0 || Q != null && Za.length === 1) {
                                        if (!Ha.teardown || Ha.teardown.call(A, xa) === false) w.removeEvent(A, U, Ua.handle);
                                        delete tb[U]
                                    }
                                } else
                                    for (X = 0; X < Za.length; X++) {
                                        ib = Za[X];
                                        if (ka || Wa.test(ib.namespace)) {
                                            w.event.remove(A, Ha, ib.handler, X);
                                            Za.splice(X--, 1)
                                        }
                                    }
                        }
                        if (w.isEmptyObject(tb)) {
                            if (D = Ua.handle) D.elem = null;
                            delete Ua.events;
                            delete Ua.handle;
                            if (typeof Ua === "function") w.removeData(A, ub);
                            else w.isEmptyObject(Ua) &&
                                w.removeData(A)
                        }
                    }
                }
            }
        },
        trigger: function (A, D, I, Q) {
            var U = A.type || A;
            if (!Q) {
                A = typeof A === "object" ? A[w.expando] ? A : w.extend(w.Event(U), A) : w.Event(U);
                if (U.indexOf("!") >= 0) {
                    A.type = U = U.slice(0, -1);
                    A.exclusive = true
                }
                if (!I) {
                    A.stopPropagation();
                    w.event.global[U] && w.each(w.cache, function () {
                        this.events && this.events[U] && w.event.trigger(A, D, this.handle.elem)
                    })
                }
                if (!I || I.nodeType === 3 || I.nodeType === 8) return e;
                A.result = e;
                A.target = I;
                D = w.makeArray(D);
                D.unshift(A)
            }
            A.currentTarget = I;
            (Q = I.nodeType ? w.data(I, "handle") : (w.data(I,
                "__events__") || {}).handle) && Q.apply(I, D);
            Q = I.parentNode || I.ownerDocument;
            try {
                if (!(I && I.nodeName && w.noData[I.nodeName.toLowerCase()]))
                    if (I["on" + U] && I["on" + U].apply(I, D) === false) {
                        A.result = false;
                        A.preventDefault()
                    }
            } catch (X) {}
            if (!A.isPropagationStopped() && Q) w.event.trigger(A, D, Q, true);
            else if (!A.isDefaultPrevented()) {
                var la;
                Q = A.target;
                var ka = U.replace(pa, ""),
                    xa = w.nodeName(Q, "a") && ka === "click",
                    Wa = w.event.special[ka] || {};
                if ((!Wa._default || Wa._default.call(I, A) === false) && !xa && !(Q && Q.nodeName && w.noData[Q.nodeName.toLowerCase()])) {
                    try {
                        if (Q[ka]) {
                            if (la =
                                Q["on" + ka]) Q["on" + ka] = null;
                            w.event.triggered = true;
                            Q[ka]()
                        }
                    } catch (Ha) {}
                    if (la) Q["on" + ka] = la;
                    w.event.triggered = false
                }
            }
        },
        handle: function (A) {
            var D, I, Q, U;
            I = [];
            var X = w.makeArray(arguments);
            A = X[0] = w.event.fix(A || a.event);
            A.currentTarget = this;
            D = A.type.indexOf(".") < 0 && !A.exclusive;
            if (!D) {
                Q = A.type.split(".");
                A.type = Q.shift();
                I = Q.slice(0).sort();
                Q = RegExp("(^|\\.)" + I.join("\\.(?:.*\\.)?") + "(\\.|$)")
            }
            A.namespace = A.namespace || I.join(".");
            U = w.data(this, this.nodeType ? "events" : "__events__");
            if (typeof U === "function") U =
                U.events;
            I = (U || {})[A.type];
            if (U && I) {
                I = I.slice(0);
                U = 0;
                for (var la = I.length; U < la; U++) {
                    var ka = I[U];
                    if (D || Q.test(ka.namespace)) {
                        A.handler = ka.handler;
                        A.data = ka.data;
                        A.handleObj = ka;
                        ka = ka.handler.apply(this, X);
                        if (ka !== e) {
                            A.result = ka;
                            if (ka === false) {
                                A.preventDefault();
                                A.stopPropagation()
                            }
                        }
                        if (A.isImmediatePropagationStopped()) break
                    }
                }
            }
            return A.result
        },
        props: "altKey attrChange attrName bubbles button cancelable charCode clientX clientY ctrlKey currentTarget data detail eventPhase fromElement handler keyCode metaKey newValue offsetX offsetY pageX pageY prevValue relatedNode relatedTarget screenX screenY shiftKey srcElement target toElement view wheelDelta which".split(" "),
        fix: function (A) {
            if (A[w.expando]) return A;
            var D = A;
            A = w.Event(D);
            for (var I = this.props.length, Q; I;) {
                Q = this.props[--I];
                A[Q] = D[Q]
            }
            if (!A.target) A.target = A.srcElement || C;
            if (A.target.nodeType === 3) A.target = A.target.parentNode;
            if (!A.relatedTarget && A.fromElement) A.relatedTarget = A.fromElement === A.target ? A.toElement : A.fromElement;
            if (A.pageX == null && A.clientX != null) {
                D = C.documentElement;
                I = C.body;
                A.pageX = A.clientX + (D && D.scrollLeft || I && I.scrollLeft || 0) - (D && D.clientLeft || I && I.clientLeft || 0);
                A.pageY = A.clientY + (D && D.scrollTop ||
                    I && I.scrollTop || 0) - (D && D.clientTop || I && I.clientTop || 0)
            }
            if (A.which == null && (A.charCode != null || A.keyCode != null)) A.which = A.charCode != null ? A.charCode : A.keyCode;
            if (!A.metaKey && A.ctrlKey) A.metaKey = A.ctrlKey;
            if (!A.which && A.button !== e) A.which = A.button & 1 ? 1 : A.button & 2 ? 3 : A.button & 4 ? 2 : 0;
            return A
        },
        guid: 1E8,
        proxy: w.proxy,
        special: {
            ready: {
                setup: w.bindReady,
                teardown: w.noop
            },
            live: {
                add: function (A) {
                    w.event.add(this, l(A.origType, A.selector), w.extend({}, A, {
                        handler: b,
                        guid: A.handler.guid
                    }))
                },
                remove: function (A) {
                    w.event.remove(this,
                        l(A.origType, A.selector), A)
                }
            },
            beforeunload: {
                setup: function (A, D, I) {
                    if (w.isWindow(this)) this.onbeforeunload = I
                },
                teardown: function (A, D) {
                    if (this.onbeforeunload === D) this.onbeforeunload = null
                }
            }
        }
    };
    w.removeEvent = C.removeEventListener ? function (A, D, I) {
        A.removeEventListener && A.removeEventListener(D, I, false)
    } : function (A, D, I) {
        A.detachEvent && A.detachEvent("on" + D, I)
    };
    w.Event = function (A) {
        if (!this.preventDefault) return new w.Event(A);
        if (A && A.type) {
            this.originalEvent = A;
            this.type = A.type
        } else this.type = A;
        this.timeStamp =
            w.now();
        this[w.expando] = true
    };
    w.Event.prototype = {
        preventDefault: function () {
            this.isDefaultPrevented = g;
            var A = this.originalEvent;
            if (A)
                if (A.preventDefault) A.preventDefault();
                else A.returnValue = false
        },
        stopPropagation: function () {
            this.isPropagationStopped = g;
            var A = this.originalEvent;
            if (A) {
                A.stopPropagation && A.stopPropagation();
                A.cancelBubble = true
            }
        },
        stopImmediatePropagation: function () {
            this.isImmediatePropagationStopped = g;
            this.stopPropagation()
        },
        isDefaultPrevented: j,
        isPropagationStopped: j,
        isImmediatePropagationStopped: j
    };
    var eb = function (A) {
        var D = A.relatedTarget;
        try {
            for (; D && D !== this;) D = D.parentNode;
            if (D !== this) {
                A.type = A.data;
                w.event.handle.apply(this, arguments)
            }
        } catch (I) {}
    }, ab = function (A) {
            A.type = A.data;
            w.event.handle.apply(this, arguments)
        };
    w.each({
        mouseenter: "mouseover",
        mouseleave: "mouseout"
    }, function (A, D) {
        w.event.special[A] = {
            setup: function (I) {
                w.event.add(this, D, I && I.selector ? ab : eb, A)
            },
            teardown: function (I) {
                w.event.remove(this, D, I && I.selector ? ab : eb)
            }
        }
    });
    if (!w.support.submitBubbles) w.event.special.submit = {
        setup: function () {
            if (this.nodeName.toLowerCase() !==
                "form") {
                w.event.add(this, "click.specialSubmit", function (A) {
                    var D = A.target,
                        I = D.type;
                    if ((I === "submit" || I === "image") && w(D).closest("form").length) {
                        A.liveFired = e;
                        return c("submit", this, arguments)
                    }
                });
                w.event.add(this, "keypress.specialSubmit", function (A) {
                    var D = A.target,
                        I = D.type;
                    if ((I === "text" || I === "password") && w(D).closest("form").length && A.keyCode === 13) {
                        A.liveFired = e;
                        return c("submit", this, arguments)
                    }
                })
            } else return false
        },
        teardown: function () {
            w.event.remove(this, ".specialSubmit")
        }
    };
    if (!w.support.changeBubbles) {
        var rb,
            xb = function (A) {
                var D = A.type,
                    I = A.value;
                if (D === "radio" || D === "checkbox") I = A.checked;
                else if (D === "select-multiple") I = A.selectedIndex > -1 ? w.map(A.options, function (Q) {
                    return Q.selected
                }).join("-") : "";
                else if (A.nodeName.toLowerCase() === "select") I = A.selectedIndex;
                return I
            }, Pa = function (A, D) {
                var I = A.target,
                    Q, U;
                if (!(!La.test(I.nodeName) || I.readOnly)) {
                    Q = w.data(I, "_change_data");
                    U = xb(I);
                    if (A.type !== "focusout" || I.type !== "radio") w.data(I, "_change_data", U);
                    if (!(Q === e || U === Q))
                        if (Q != null || U) {
                            A.type = "change";
                            A.liveFired =
                                e;
                            return w.event.trigger(A, D, I)
                        }
                }
            };
        w.event.special.change = {
            filters: {
                focusout: Pa,
                beforedeactivate: Pa,
                click: function (A) {
                    var D = A.target,
                        I = D.type;
                    if (I === "radio" || I === "checkbox" || D.nodeName.toLowerCase() === "select") return Pa.call(this, A)
                },
                keydown: function (A) {
                    var D = A.target,
                        I = D.type;
                    if (A.keyCode === 13 && D.nodeName.toLowerCase() !== "textarea" || A.keyCode === 32 && (I === "checkbox" || I === "radio") || I === "select-multiple") return Pa.call(this, A)
                },
                beforeactivate: function (A) {
                    A = A.target;
                    w.data(A, "_change_data", xb(A))
                }
            },
            setup: function () {
                if (this.type ===
                    "file") return false;
                for (var A in rb) w.event.add(this, A + ".specialChange", rb[A]);
                return La.test(this.nodeName)
            },
            teardown: function () {
                w.event.remove(this, ".specialChange");
                return La.test(this.nodeName)
            }
        };
        rb = w.event.special.change.filters;
        rb.focus = rb.beforeactivate
    }
    C.addEventListener && w.each({
        focus: "focusin",
        blur: "focusout"
    }, function (A, D) {
        function I(Q) {
            Q = w.event.fix(Q);
            Q.type = D;
            return w.event.trigger(Q, null, Q.target)
        }
        w.event.special[D] = {
            setup: function () {
                db[D]++ === 0 && C.addEventListener(A, I, true)
            },
            teardown: function () {
                --db[D] ===
                    0 && C.removeEventListener(A, I, true)
            }
        }
    });
    w.each(["bind", "one"], function (A, D) {
        w.fn[D] = function (I, Q, U) {
            if (typeof I === "object") {
                for (var X in I) this[D](X, Q, I[X], U);
                return this
            }
            if (w.isFunction(Q) || Q === false) {
                U = Q;
                Q = e
            }
            var la = D === "one" ? w.proxy(U, function (xa) {
                w(this).unbind(xa, la);
                return U.apply(this, arguments)
            }) : U;
            if (I === "unload" && D !== "one") this.one(I, Q, U);
            else {
                X = 0;
                for (var ka = this.length; X < ka; X++) w.event.add(this[X], I, la, Q)
            }
            return this
        }
    });
    w.fn.extend({
        unbind: function (A, D) {
            if (typeof A === "object" && !A.preventDefault)
                for (var I in A) this.unbind(I,
                    A[I]);
            else {
                I = 0;
                for (var Q = this.length; I < Q; I++) w.event.remove(this[I], A, D)
            }
            return this
        },
        delegate: function (A, D, I, Q) {
            return this.live(D, I, Q, A)
        },
        undelegate: function (A, D, I) {
            return arguments.length === 0 ? this.unbind("live") : this.die(D, null, I, A)
        },
        trigger: function (A, D) {
            return this.each(function () {
                w.event.trigger(A, D, this)
            })
        },
        triggerHandler: function (A, D) {
            if (this[0]) {
                var I = w.Event(A);
                I.preventDefault();
                I.stopPropagation();
                w.event.trigger(I, D, this[0]);
                return I.result
            }
        },
        toggle: function (A) {
            for (var D = arguments, I =
                    1; I < D.length;) w.proxy(A, D[I++]);
            return this.click(w.proxy(A, function (Q) {
                var U = (w.data(this, "lastToggle" + A.guid) || 0) % I;
                w.data(this, "lastToggle" + A.guid, U + 1);
                Q.preventDefault();
                return D[U].apply(this, arguments) || false
            }))
        },
        hover: function (A, D) {
            return this.mouseenter(A).mouseleave(D || A)
        }
    });
    var P = {
        focus: "focusin",
        blur: "focusout",
        mouseenter: "mouseover",
        mouseleave: "mouseout"
    };
    w.each(["live", "die"], function (A, D) {
        w.fn[D] = function (I, Q, U, X) {
            var la, ka = 0,
                xa, Wa, Ha = X || this.selector;
            X = X ? this : w(this.context);
            if (typeof I ===
                "object" && !I.preventDefault) {
                for (la in I) X[D](la, Q, I[la], Ha);
                return this
            }
            if (w.isFunction(Q)) {
                U = Q;
                Q = e
            }
            for (I = (I || "").split(" ");
                (la = I[ka++]) != null;) {
                xa = pa.exec(la);
                Wa = "";
                if (xa) {
                    Wa = xa[0];
                    la = la.replace(pa, "")
                }
                if (la === "hover") I.push("mouseenter" + Wa, "mouseleave" + Wa);
                else {
                    xa = la;
                    if (la === "focus" || la === "blur") {
                        I.push(P[la] + Wa);
                        la += Wa
                    } else la = (P[la] || la) + Wa; if (D === "live") {
                        Wa = 0;
                        for (var Za = X.length; Wa < Za; Wa++) w.event.add(X[Wa], "live." + l(la, Ha), {
                            data: Q,
                            selector: Ha,
                            handler: U,
                            origType: la,
                            origHandler: U,
                            preType: xa
                        })
                    } else X.unbind("live." +
                        l(la, Ha), U)
                }
            }
            return this
        }
    });
    w.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error".split(" "), function (A, D) {
        w.fn[D] = function (I, Q) {
            if (Q == null) {
                Q = I;
                I = null
            }
            return arguments.length > 0 ? this.bind(D, I, Q) : this.trigger(D)
        };
        if (w.attrFn) w.attrFn[D] = true
    });
    a.attachEvent && !a.addEventListener && w(a).bind("unload", function () {
        for (var A in w.cache)
            if (w.cache[A].handle) try {
                w.event.remove(w.cache[A].handle.elem)
            } catch (D) {}
    });
    (function () {
        function A(V, ia, wa, ua, Ca, Da) {
            Ca = 0;
            for (var Ra = ua.length; Ca < Ra; Ca++) {
                var Xa = ua[Ca];
                if (Xa) {
                    var nb = false;
                    for (Xa = Xa[V]; Xa;) {
                        if (Xa.sizcache === wa) {
                            nb = ua[Xa.sizset];
                            break
                        }
                        if (Xa.nodeType === 1 && !Da) {
                            Xa.sizcache = wa;
                            Xa.siz         w.event.trigger(A, D, this)
            })
        },
        triggerHandler: function (A, D) {
            if (this[0]) {
                var I = w.Event(A);
                I.preventDefault();
                I.stopPropagation();
                w.event.trigger(I, D, this[0]);
                return I.result
            }
        },
        toggle: function (A) {
            for (var D = arguments, I =
                    1; I < D.length;) w.proxy(A, D[I++]);
            return this.click(w.proxy(A, function (Q) {
                var U = (w.data(this, "lastToggle" + A.guid) || 0) % I;
                w.data(this, "lastToggle" + A.guid, U + 1);
                Q.preventDefault();
                return D[U].apply(this, arguments) || false
            }))
        },
        hover: function (A, D) {
            return this.mouseenter(A).mouseleave(D || A)
        }
    });
    var P = {
        focus: "focusin",
        blur: "focusout",
        mouseenter: "mouseover",
        mouseleave: "mouseout"
    };
    w.each(["live", "die"], function (A, D) {
        w.fn[D] = function (I, Q, U, X) {
            var la, ka = 0,
                xa, Wa, Ha = X || this.selector;
            X = X ? this : w(this.context);
            if (typeof I ===
                "object" && !I.preventDefault) {
                for (la in I) X[D](la, Q, I[la], Ha);
                return this
            }
            if (w.isFunction(Q)) {
                U = Q;
                Q = e
            }
            for (I = (I || "").split(" ");
                (la = I[ka++]) != null;) {
                xa = pa.exec(la);
                Wa = "";
                if (xa) {
                    Wa = xa[0];
                    la = la.replace(pa, "")
                }
                if (la === "hover") I.push("mouseenter" + Wa, "mouseleave" + Wa);
                else {
                    xa = la;
                    if (la === "focus" || la === "blur") {
                        I.push(P[la] + Wa);
                        la += Wa
                    } else la = (P[la] || la) + Wa; if (D === "live") {
                        Wa = 0;
                        for (var Za = X.length; Wa < Za; Wa++) w.event.add(X[Wa], "live." + l(la, Ha), {
                            data: Q,
                            selector: Ha,
                            handler: U,
                            origType: la,
                            origHandler: U,
                            preType: xa
                        })
                    } else X.unbind("live." +
                        l(la, Ha), U)
                }
            }
            return this
        }
    });
    w.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error".split(" "), function (A, D) {
        w.fn[D] = function (I, Q) {
            if (Q == null) {
                Q = I;
                I = null
            }
            return arguments.length > 0 ? this.bind(D, I, Q) : this.trigger(D)
        };
        if (w.attrFn) w.attrFn[D] = true
    });
    a.attachEvent && !a.addEventListener && w(a).bind("unload", function () {
        for (var A in w.cache)
            if (w.cache[A].handle) try {
                w.event.remove(w.cache[A].handle.elem)
            } catch (D) {}
    });
    (function () {
        function A(V, ia, wa, ua, Ca, Da) {
            Ca = 0;
            for (var Ra = ua.length; Ca < Ra; Ca++) {
                var Xa = ua[Ca];
                if (Xa) {
                    var nb = false;
                    for (Xa = Xa[V]; Xa;) {
                        if (Xa.sizcache === wa) {
                            nb = ua[Xa.sizset];
                            break
                        }
                        if (Xa.nodeType === 1 && !Da) {
                            Xa.sizcache = wa;
                            Xa.sizset = Ca
                        }
                        if (Xa.nodeName.toLowerCase() === ia) {
                            nb = Xa;
                            break
                        }
                        Xa = Xa[V]
                    }
                    ua[Ca] = nb
                }
            }
        }

        function D(V, ia, wa, ua, Ca, Da) {
            Ca = 0;
            for (var Ra = ua.length; Ca < Ra; Ca++) {
                var Xa = ua[Ca];
                if (Xa) {
                    var nb = false;
                    for (Xa = Xa[V]; Xa;) {
                        if (Xa.sizcache === wa) {
                            nb = ua[Xa.sizset];
                            break
                        }
                        if (Xa.nodeType === 1) {
                            if (!Da) {
                                Xa.sizcache = wa;
                                Xa.sizset = Ca
                            }
                            if (typeof ia !== "string") {
                                if (Xa === ia) {
                                    nb = true;
                                    break
                                }
                            } else if (ka.filter(ia, [Xa]).length > 0) {
                                nb = Xa;
                                break
                            }
                        }
                        Xa = Xa[V]
                    }
                    ua[Ca] = nb
                }
            }
        }
        var I = /((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,
            Q = 0,
            U = Object.prototype.toString,
            X = false,
            la = true;
        [0, 0].sort(function () {
                la = false;
                return 0
            });
        var ka = function (V, ia, wa, ua) {
            wa = wa || [];
            var Ca = ia = ia || C;
            if (ia.nodeType !== 1 && ia.nodeType !== 9) return [];
            if (!V || typeof V !== "string") return wa;
            var Da, Ra, Xa, nb, Cb, Db = true,
                Eb = ka.isXML(ia),
                kb = [],
                Ib = V;
            do {
                I.exec("");
                if (Da = I.exec(Ib)) {
                    Ib = Da[3];
                    kb.push(Da[1]);
                    if (Da[2]) {
                        nb = Da[3];
                        break
                    }
                }
            } while (Da);
            if (kb.length > 1 && Wa.exec(V))
                if (kb.length === 2 && xa.relative[kb[0]]) Ra = Bb(kb[0] + kb[1], ia);
                else
                    for (Ra = xa.relative[kb[0]] ? [ia] : ka(kb.shift(), ia); kb.length;) {
                        V = kb.shift();
                        if (xa.relative[V]) V += kb.shift();
                        Ra = Bb(V, Ra)
                    } else {
                        if (!ua && kb.length > 1 && ia.nodeType === 9 && !Eb && xa.match.ID.test(kb[0]) && !xa.match.ID.test(kb[kb.length - 1])) {
                            Da = ka.find(kb.shift(), ia, Eb);
                            ia = Da.expr ?
                                ka.filter(Da.expr, Da.set)[0] : Da.set[0]
                        }
                        if (ia) {
                            Da = ua ? {
                                expr: kb.pop(),
                                set: ib(ua)
                            } : ka.find(kb.pop(), kb.length === 1 && (kb[0] === "~" || kb[0] === "+") && ia.parentNode ? ia.parentNode : ia, Eb);
                            Ra = Da.expr ? ka.filter(Da.expr, Da.set) : Da.set;
                            if (kb.length > 0) Xa = ib(Ra);
                            else Db = false;
                            for (; kb.length;) {
                                Da = Cb = kb.pop();
                                if (xa.relative[Cb]) Da = kb.pop();
                                else Cb = ""; if (Da == null) Da = ia;
                                xa.relative[Cb](Xa, Da, Eb)
                            }
                        } else Xa = []
                    }
                Xa || (Xa = Ra);
            Xa || ka.error(Cb || V);
            if (U.call(Xa) === "[object Array]")
                if (Db)
                    if (ia && ia.nodeType === 1)
                        for (V = 0; Xa[V] != null; V++) {
                            if (Xa[V] &&
                                (Xa[V] === true || Xa[V].nodeType === 1 && ka.contains(ia, Xa[V]))) wa.push(Ra[V])
                        } else
                            for (V = 0; Xa[V] != null; V++) Xa[V] && Xa[V].nodeType === 1 && wa.push(Ra[V]);
                    else wa.push.apply(wa, Xa);
                    else ib(Xa, wa);
            if (nb) {
                ka(nb, Ca, wa, ua);
                ka.uniqueSort(wa)
            }
            return wa
        };
        ka.uniqueSort = function (V) {
            if (Ua) {
                X = la;
                V.sort(Ua);
                if (X)
                    for (var ia = 1; ia < V.length; ia++) V[ia] === V[ia - 1] && V.splice(ia--, 1)
            }
            return V
        };
        ka.matches = function (V, ia) {
            return ka(V, null, null, ia)
        };
        ka.matchesSelector = function (V, ia) {
            return ka(ia, null, null, [V]).length > 0
        };
        ka.find = function (V,
            ia, wa) {
            var ua;
            if (!V) return [];
            for (var Ca = 0, Da = xa.order.length; Ca < Da; Ca++) {
                var Ra, Xa = xa.order[Ca];
                if (Ra = xa.leftMatch[Xa].exec(V)) {
                    var nb = Ra[1];
                    Ra.splice(1, 1);
                    if (nb.substr(nb.length - 1) !== "\\") {
                        Ra[1] = (Ra[1] || "").replace(/\\/g, "");
                        ua = xa.find[Xa](Ra, ia, wa);
                        if (ua != null) {
                            V = V.replace(xa.match[Xa], "");
                            break
                        }
                    }
                }
            }
            ua || (ua = ia.getElementsByTagName("*"));
            return {
                set: ua,
                expr: V
            }
        };
        ka.filter = function (V, ia, wa, ua) {
            for (var Ca, Da, Ra = V, Xa = [], nb = ia, Cb = ia && ia[0] && ka.isXML(ia[0]); V && ia.length;) {
                for (var Db in xa.filter)
                    if ((Ca =
                        xa.leftMatch[Db].exec(V)) != null && Ca[2]) {
                        var Eb, kb, Ib = xa.filter[Db];
                        kb = Ca[1];
                        Da = false;
                        Ca.splice(1, 1);
                        if (kb.substr(kb.length - 1) !== "\\") {
                            if (nb === Xa) Xa = [];
                            if (xa.preFilter[Db])
                                if (Ca = xa.preFilter[Db](Ca, nb, wa, Xa, ua, Cb)) {
                                    if (Ca === true) continue
                                } else Da = Eb = true;
                            if (Ca)
                                for (var ja = 0;
                                    (kb = nb[ja]) != null; ja++)
                                    if (kb) {
                                        Eb = Ib(kb, Ca, ja, nb);
                                        var Ia = ua ^ !! Eb;
                                        if (wa && Eb != null)
                                            if (Ia) Da = true;
                                            else nb[ja] = false;
                                            else if (Ia) {
                                            Xa.push(kb);
                                            Da = true
                                        }
                                    }
                            if (Eb != !== "undefined" && !wa) return (V = ia.getElementById(V[1])) && V.parentNode ? [V] : []
                },
                NAME: function (V, ia) {
                    if (typeof ia.getElementsByName !== "undefined") {
                        for (var wa = [], ua = ia.getElementsByName(V[1]), Ca = 0, Da = ua.length; Ca < Da; Ca++) ua[Ca].getAttribute("name") === V[1] && wa.push(ua[Ca]);
                        return wa.length === 0 ? null : wa
                    }
                },
                TAG: function (V, ia) {
                    return ia.getElementsByTagName(V[1])
                }
            },
            preFilter: {
                CLASS: function (V, ia, wa, ua, Ca, Da) {
                    V = " " + V[1].replace(/\\/g, "") + " ";
                    if (Da) return V;
                    Da = 0;
                    for (var Ra;
                        (Ra = ia[Da]) != null; Da++)
                        if (Ra)
                            if (Ca ^ (Ra.className && (" " + Ra.className + " ").replace(/[\t\n]/g, " ").indexOf(V) >= 0)) wa || ua.push(Ra);
                            else if (wa) ia[Da] = false;
                    return false
                },
                ID: function (V) {
                    return V[1].replace(/\\/g, "")
                },
                TAG: function (V) {
                    return V[1].toLowerCase()
                },
                CHILD: function (V) {
                    if (V[1] === "nth") {
                        var ia = /(-?)(\d*)n((?:\+|-)?\d*)/.exec(V[2] === "even" && "2n" || V[2] === "odd" && "2n+1" || !/\D/.test(V[2]) && "0n+" +
                            V[2] || V[2]);
                        V[2] = ia[1] + (ia[2] || 1) - 0;
                        V[3] = ia[3] - 0
                    }
                    V[0] = Q++;
                    return V
                },
                ATTR: function (V, ia, wa, ua, Ca, Da) {
                    ia = V[1].replace(/\\/g, "");
                    if (!Da && xa.attrMap[ia]) V[1] = xa.attrMap[ia];
                    if (V[2] === "~=") V[4] = " " + V[4] + " ";
                    return V
                },
                PSEUDO: function (V, ia, wa, ua, Ca) {
                    if (V[1] === "not")
                        if ((I.exec(V[3]) || "").length > 1 || /^\w/.test(V[3])) V[3] = ka(V[3], null, null, ia);
                        else {
                            V = ka.filter(V[3], ia, wa, true ^ Ca);
                            wa || ua.push.apply(ua, V);
                            return false
                        } else if (xa.match.POS.test(V[0]) || xa.match.CHILD.test(V[0])) return true;
                    return V
                },
                POS: function (V) {
                    V.unshift(true);
                    return V
                }
            },
            filters: {
                enabled: function (V) {
                    return V.disabled === false && V.type !== "hidden"
                },
                disabled: function (V) {
                    return V.disabled === true
                },
                checked: function (V) {
                    return V.checked === true
                },
                selected: function (V) {
                    return V.selected === true
                },
                parent: function (V) {
                    return !!V.firstChild
                },
                empty: function (V) {
                    return !V.firstChild
                },
                has: function (V, ia, wa) {
                    return !!ka(wa[3], V).length
                },
                header: function (V) {
                    return /h\d/i.test(V.nodeName)
                },
                text: function (V) {
                    return "text" === V.type
                },
                radio: function (V) {
                    return "radio" === V.type
                },
                checkbox: function (V) {
                    return "checkbox" ===
                        V.type
                },
                file: function (V) {
                    return "file" === V.type
                },
                password: function (V) {
                    return "password" === V.type
                },
                submit: function (V) {
                    return "submit" === V.type
                },
                image: function (V) {
                    return "image" === V.type
                },
                reset: function (V) {
                    return "reset" === V.type
                },
                button: function (V) {
                    return "button" === V.type || V.nodeName.toLowerCase() === "button"
                },
                input: function (V) {
                    return /input|select|textarea|button/i.test(V.nodeName)
                }
            },
            setFilters: {
                first: function (V, ia) {
                    return ia === 0
                },
                last: function (V, ia, wa, ua) {
                    return ia === ua.length - 1
                },
                even: function (V, ia) {
                    return ia %
                        2 === 0
                },
                odd: function (V, ia) {
                    return ia % 2 === 1
                },
                lt: function (V, ia, wa) {
                    return ia < wa[3] - 0
                },
                gt: function (V, ia, wa) {
                    return ia > wa[3] - 0
                },
                nth: function (V, ia, wa) {
                    return wa[3] - 0 === ia
                },
                eq: function (V, ia, wa) {
                    return wa[3] - 0 === ia
                }
            },
            filter: {
                PSEUDO: function (V, ia, wa, ua) {
                    var Ca = ia[1],
                        Da = xa.filters[Ca];
                    if (Da) return Da(V, wa, ia, ua);
                    else if (Ca === "contains") return (V.textContent || V.innerText || ka.getText([V]) || "").indexOf(ia[3]) >= 0;
                    else if (Ca === "not") {
                        ia = ia[3];
                        wa = 0;
                        for (ua = ia.length; wa < ua; wa++)
                            if (ia[wa] === V) return false;
                        return true
                    } else ka.error("Syntax error, unrecognized expression: " +
                        Ca)
                },
                CHILD: function (V, ia) {
                    var wa = ia[1],
                        ua = V;
                    switch (wa) {
                    case "only":
                    case "first":
                        for (; ua = ua.previousSibling;)
                            if (ua.nodeType === 1) return false;
                        if (wa === "first") return true;
                        ua = V;
                    case "last":
                        for (; ua = ua.nextSibling;)
                            if (ua.nodeType === 1) return false;
                        return true;
                    case "nth":
                        wa = ia[2];
                        var Ca = ia[3];
                        if (wa === 1 && Ca === 0) return true;
                        var Da = ia[0],
                            Ra = V.parentNode;
                        if (Ra && (Ra.sizcache !== Da || !V.nodeIndex)) {
                            var Xa = 0;
                            for (ua = Ra.firstChild; ua; ua = ua.nextSibling)
                                if (ua.nodeType === 1) ua.nodeIndex = ++Xa;
                            Ra.sizcache = Da
                        }
                        ua = V.nodeIndex -
                            Ca;
                        return wa === 0 ? ua === 0 : ua % wa === 0 && ua / wa >= 0
                    }
                },
                ID: function (V, ia) {
                    return V.nodeType === 1 && V.getAttribute("id") === ia
                },
                TAG: function (V, ia) {
                    return ia === "*" && V.nodeType === 1 || V.nodeName.toLowerCase() === ia
                },
                CLASS: function (V, ia) {
                    return (" " + (V.className || V.getAttribute("class")) + " ").indexOf(ia) > -1
                },
                ATTR: function (V, ia) {
                    var wa = ia[1];
                    wa = xa.attrHandle[wa] ? xa.attrHandle[wa](V) : V[wa] != null ? V[wa] : V.getAttribute(wa);
                    var ua = wa + "",
                        Ca = ia[2],
                        Da = ia[4];
                    return wa == null ? Ca === "!=" : Ca === "=" ? ua === Da : Ca === "*=" ? ua.indexOf(Da) >=
                        0 : Ca === "~=" ? (" " + ua + " ").indexOf(Da) >= 0 : !Da ? ua && wa !== false : Ca === "!=" ? ua !== Da : Ca === "^=" ? ua.indexOf(Da) === 0 : Ca === "$=" ? ua.substr(ua.length - Da.length) === Da : Ca === "|=" ? ua === Da || ua.substr(0, Da.length + 1) === Da + "-" : false
                },
                POS: function (V, ia, wa, ua) {
                    var Ca = xa.setFilters[ia[2]];
                    if (Ca) return Ca(V, wa, ia, ua)
                }
            }
        }, Wa = xa.match.POS,
            Ha = function (V, ia) {
                return "\\" + (ia - 0 + 1)
            }, Za;
        for (Za in xa.match) {
            xa.match[Za] = RegExp(xa.match[Za].source + /(?![^\[]*\])(?![^\(]*\))/.source);
            xa.leftMatch[Za] = RegExp(/(^(?:.|\r|\n)*?)/.source + xa.match[Za].source.replace(/\\(\d+)/g,
                Ha))
        }
        var ib = function (V, ia) {
            V = Array.prototype.slice.call(V, 0);
            if (ia) {
                ia.push.apply(ia, V);
                return ia
            }
            return V
        };
        try {
            Array.prototype.slice.call(C.documentElement.childNodes, 0)
        } catch (ub) {
            ib = function (V, ia) {
                var wa = 0,
                    ua = ia || [];
                if (U.call(V) === "[object Array]") Array.prototype.push.apply(ua, V);
                else if (typeof V.length === "number")
                    for (var Ca = V.length; wa < Ca; wa++) ua.push(V[wa]);
                else
                    for (; V[wa]; wa++) ua.push(V[wa]);
                return ua
            }
        }
        var Ua, tb;
        if (C.documentElement.compareDocumentPosition) Ua = function (V, ia) {
            if (V === ia) {
                X = true;
                return 0
            }
            if (!V.compareDocumentPosition || !ia.compareDocumentPosition) return V.compareDocumentPosition ? -1 : 1;
            return V.compareDocumentPosition(ia) & 4 ? -1 : 1
        };
        else {
            Ua = function (V, ia) {
                var wa, ua, Ca = [],
                    Da = [];
                wa = V.parentNode;
                ua = ia.parentNode;
                var Ra = wa;
                if (V === ia) {
                    X = true;
                    return 0
                } else if (wa === ua) return tb(V, ia);
                else if (wa) {
                    if (!ua) return 1
                } else return -1;
                for (; Ra;) {
                    Ca.unshift(Ra);
                    Ra = Ra.parentNode
                }
                for (Ra = ua; Ra;) {
                    Da.unshift(Ra);
                    Ra = Ra.parentNode
                }
                wa = Ca.length;
                ua = Da.length;
                for (Ra = 0; Ra < wa && Ra < ua; Ra++)
                    if (Ca[Ra] !== Da[Ra]) return tb(Ca[Ra],
                        Da[Ra]);
                return Ra === wa ? tb(V, Da[Ra], -1) : tb(Ca[Ra], ia, 1)
            };
            tb = function (V, ia, wa) {
                if (V === ia) return wa;
                for (V = V.nextSibling; V;) {
                    if (V === ia) return -1;
                    V = V.nextSibling
                }
                return 1
            }
        }
        ka.getText = function (V) {
            for (var ia = "", wa, ua = 0; V[ua]; ua++) {
                wa = V[ua];
                if (wa.nodeType === 3 || wa.nodeType === 4) ia += wa.nodeValue;
                else if (wa.nodeType !== 8) ia += ka.getText(wa.childNodes)
            }
            return ia
        };
        (function () {
            var V = C.createElement("div"),
                ia = "script" + (new Date).getTime(),
                wa = C.documentElement;
            V.innerHTML = "<a name='" + ia + "'/>";
            wa.insertBefore(V, wa.firstChild);
            if (C.getElementById(ia)) {
                xa.find.ID = function (ua, Ca, Da) {
                    if (typeof Ca.getElementById !== "undefined" && !Da) return (Ca = Ca.getElementById(ua[1])) ? Ca.id === ua[1] || typeof Ca.getAttributeNode !== "undefined" && Ca.getAttributeNode("id").nodeValue === ua[1] ? [Ca] : e : []
                };
                xa.filter.ID = function (ua, Ca) {
                    var Da = typeof ua.getAttributeNode !== "undefined" && ua.getAttributeNode("id");
                    return ua.nodeType === 1 && Da && Da.nodeValue === Ca
                }
            }
            wa.removeChild(V);
            wa = V = null
        })();
        (function () {
            var V = C.createElement("div");
            V.appendChild(C.createComment(""));
            if (V.getElementsByTagName("*").length > 0) xa.find.TAG = function (ia, wa) {
                var ua = wa.getElementsByTagName(ia[1]);
                if (ia[1] === "*") {
                    for (var Ca = [], Da = 0; ua[Da]; Da++) ua[Da].nodeType === 1 && Ca.push(ua[Da]);
                    ua = Ca
                }
                return ua
            };
            V.innerHTML = "<a href='#'></a>";
            if (V.firstChild && typeof V.firstChild.getAttribute !== "undefined" && V.firstChild.getAttribute("href") !== "#") xa.attrHandle.href = function (ia) {
                return ia.getAttribute("href", 2)
            };
            V = null
        })();
        C.querySelectorAll && function () {
            var V = ka,
                ia = C.createElement("div");
            ia.innerHTML = "<p class='TEST'></p>";
            if (!(ia.querySelectorAll && ia.querySelectorAll(".TEST").length === 0)) {
                ka = function (ua, Ca, Da, Ra) {
                    Ca = Ca || C;
                    ua = ua.replace(/\=\s*([^'"\]]*)\s*\]/g, "='$1']");
                    if (!Ra && !ka.isXML(Ca))
                        if (Ca.nodeType === 9) try {
                            return ib(Ca.querySelectorAll(ua), Da)
                        } catch (Xa) {} else if (Ca.nodeType === 1 && Ca.nodeName.toLowerCase() !== "object") {
                            var nb = Ca.getAttribute("id"),
                                Cb = nb || "__sizzle__";
                            nb || Ca.setAttribute("id", Cb);
                            try {
                                return ib(Ca.querySelectorAll("#" + Cb + " " + ua), Da)
                            } catch (Db) {} finally {
                                nb || Ca.removeAttribute("id")
                            }
                        }
                    return V(ua, Ca,
                        Da, Ra)
                };
                for (var wa in V) ka[wa] = V[wa];
                ia = null
            }
        }();
        (function () {
            var V = C.documentElement,
                ia = V.matchesSelector || V.mozMatchesSelector || V.webkitMatchesSelector || V.msMatchesSelector,
                wa = false;
            try {
                ia.call(C.documentElement, "[test!='']:sizzle")
            } catch (ua) {
                wa = true
            }
            if (ia) ka.matchesSelector = function (Ca, Da) {
                Da = Da.replace(/\=\s*([^'"\]]*)\s*\]/g, "='$1']");
                if (!ka.isXML(Ca)) try {
                    if (wa || !xa.match.PSEUDO.test(Da) && !/!=/.test(Da)) return ia.call(Ca, Da)
                } catch (Ra) {}
                return ka(Da, null, null, [Ca]).length > 0
            }
        })();
        (function () {
            var V =
                C.createElement("div");
            V.innerHTML = "<div class='test e'></div><div class='test'></div>";
            if (!(!V.getElementsByClassName || V.getElementsByClassName("e").length === 0)) {
                V.lastChild.className = "e";
                if (V.getElementsByClassName("e").length !== 1) {
                    xa.order.splice(1, 0, "CLASS");
                    xa.find.CLASS = function (ia, wa, ua) {
                        if (typeof wa.getElementsByClassName !== "undefined" && !ua) return wa.getElementsByClassName(ia[1])
                    };
                    V = null
                }
            }
        })();
        ka.contains = C.documentElement.contains ? function (V, ia) {
            return V !== ia && (V.contains ? V.contains(ia) :
                true)
        } : C.documentElement.compareDocumentPosition ? function (V, ia) {
            return !!(V.compareDocumentPosition(ia) & 16)
        } : function () {
            return false
        };
        ka.isXML = function (V) {
            return (V = (V ? V.ownerDocument || V : 0).documentElement) ? V.nodeName !== "HTML" : false
        };
        var Bb = function (V, ia) {
            for (var wa, ua = [], Ca = "", Da = ia.nodeType ? [ia] : ia; wa = xa.match.PSEUDO.exec(V);) {
                Ca += wa[0];
                V = V.replace(xa.match.PSEUDO, "")
            }
            V = xa.relative[V] ? V + "*" : V;
            wa = 0;
            for (var Ra = Da.length; wa < Ra; wa++) ka(V, Da[wa], ua);
            return ka.filter(Ca, ua)
        };
        w.find = ka;
        w.expr = ka.selectors;
        w.expr[":"] = w.expr.filters;
        w.unique = ka.uniqueSort;
        w.text = ka.getText;
        w.isXMLDoc = ka.isXML;
        w.contains = ka.contains
    })();
    var T = /Until$/,
        ba = /^(?:parents|prevUntil|prevAll)/,
        ga = /,/,
        W = /^.[^:#\[\.,]*$/,
        Ea = Array.prototype.slice,
        za = w.expr.match.POS;
    w.fn.extend({
        find: function (A) {
            for (var D = this.pushStack("", "find", A), I = 0, Q = 0, U = this.length; Q < U; Q++) {
                I = D.length;
                w.find(A, this[Q], D);
                if (Q > 0)
                    for (var X = I; X < D.length; X++)
                        for (var la = 0; la < I; la++)
                            if (D[la] === D[X]) {
                                D.splice(X--, 1);
                                break
                            }
            }
            return D
        },
        has: function (A) {
            var D = w(A);
            return this.filter(function () {
                for (var I = 0, Q = D.length; I < Q; I++)
                    if (w.contains(this, D[I])) return true
            })
        },
        not: function (A) {
            return this.pushStack(o(this, A, false), "not", A)
        },
        filter: function (A) {
            return this.pushStack(o(this, A, true), "filter", A)
        },
        is: function (A) {
            return !!A && w.filter(A, this).length > 0
        },
        closest: function (A, D) {
            var I = [],
                Q, U, X = this[0];
            if (w.isArray(A)) {
                var la, ka = {}, xa = 1;
                if (X && A.length) {
                    Q = 0;
                    for (U = A.length; Q < U; Q++) {
                        la = A[Q];
                        ka[la] || (ka[la] = w.expr.match.POS.test(la) ? w(la, D || this.context) : la)
                    }
                    for (; X && X.ownerDocument &&
                        X !== D;) {
                        for (la in ka) {
                            Q = ka[la];
                            if (Q.jquery ? Q.index(X) > -1 : w(X).is(Q)) I.push({
                                selector: la,
                                elem: X,
                                level: xa
                            })
                        }
                        X = X.parentNode;
                        xa++
                    }
                }
                return I
            }
            la = za.test(A) ? w(A, D || this.context) : null;
            Q = 0;
            for (U = this.length; Q < U; Q++)
                for (X = this[Q]; X;)
                    if (la ? la.index(X) > -1 : w.find.matchesSelector(X, A)) {
                        I.push(X);
                        break
                    } else {
                        X = X.parentNode;
                        if (!X || !X.ownerDocument || X === D) break
                    }
            I = I.length > 1 ? w.unique(I) : I;
            return this.pushStack(I, "closest", A)
        },
        index: function (A) {
            if (!A || typeof A === "string") return w.inArray(this[0], A ? w(A) : this.parent().children());
            return w.inArray(A.jquery ? A[0] : A, this)
        },
        add: function (A, D) {
            var I = typeof A === "string" ? w(A, D || this.context) : w.makeArray(A),
                Q = w.merge(this.get(), I);
            return this.pushStack(!I[0] || !I[0].parentNode || I[0].parentNode.nodeType === 11 || !Q[0] || !Q[0].parentNode || Q[0].parentNode.nodeType === 11 ? Q : w.unique(Q))
        },
        andSelf: function () {
            return this.add(this.prevObject)
        }
    });
    w.each({
        parent: function (A) {
            return (A = A.parentNode) && A.nodeType !== 11 ? A : null
        },
        parents: function (A) {
            return w.dir(A, "parentNode")
        },
        parentsUntil: function (A, D, I) {
            return w.dir(A,
                "parentNode", I)
        },
        next: function (A) {
            return w.nth(A, 2, "nextSibling")
        },
        prev: function (A) {
            return w.nth(A, 2, "previousSibling")
        },
        nextAll: function (A) {
            return w.dir(A, "nextSibling")
        },
        prevAll: function (A) {
            return w.dir(A, "previousSibling")
        },
        nextUntil: function (A, D, I) {
            return w.dir(A, "nextSibling", I)
        },
        prevUntil: function (A, D, I) {
            return w.dir(A, "previousSibling", I)
        },
        siblings: function (A) {
            return w.sibling(A.parentNode.firstChild, A)
        },
        children: function (A) {
            return w.sibling(A.firstChild)
        },
        contents: function (A) {
            return w.nodeName(A,
                "iframe") ? A.contentDocument || A.contentWindow.document : w.makeArray(A.childNodes)
        }
    }, function (A, D) {
        w.fn[A] = function (I, Q) {
            var U = w.map(this, D, I);
            T.test(A) || (Q = I);
            if (Q && typeof Q === "string") U = w.filter(Q, U);
            U = this.length > 1 ? w.unique(U) : U;
            if ((this.length > 1 || ga.test(Q)) && ba.test(A)) U = U.reverse();
            return this.pushStack(U, A, Ea.call(arguments).join(","))
        }
    });
    w.extend({
        filter: function (A, D, I) {
            if (I) A = ":not(" + A + ")";
            return D.length === 1 ? w.find.matchesSelector(D[0], A) ? [D[0]] : [] : w.find.matches(A, D)
        },
        dir: function (A, D, I) {
            var Q = [];
            for (A = A[D]; A && A.nodeType !== 9 && (I === e || A.nodeType !== 1 || !w(A).is(I));) {
                A.nodeType === 1 && Q.push(A);
                A = A[D]
            }
            return Q
        },
        nth: function (A, D, I) {
            D = D || 1;
            for (var Q = 0; A; A = A[I])
                if (A.nodeType === 1 && ++Q === D) break;
            return A
        },
        sibling: function (A, D) {
            for (var I = []; A; A = A.nextSibling) A.nodeType === 1 && A !== D && I.push(A);
            return I
        }
    });
    var Ka = / jQuery\d+="(?:\d+|null)"/g,
        sa = /^\s+/,
        Oa = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig,
        Va = /<([\w:]+)/,
        gb = /<tbody/i,
        Ga = /<|&#?\w+;/,
        Qa = /<(?:script|object|embed|option|style)/i,
        ob = /checked\s*(?:[^=]|=\s*.checked.)/i,
        lb = /\=([^="'>\s]+\/)>/g,
        pb = {
            option: [1, "<select multiple='multiple'>", "</select>"],
            legend: [1, "<fieldset>", "</fieldset>"],
            thead: [1, "<table>", "</table>"],
            tr: [2, "<table><tbody>", "</tbody></table>"],
            td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
            col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"],
            area: [1, "<map>", "</map>"],
            _default: [0, "", ""]
        };
    pb.optgroup = pb.option;
    pb.tbody = pb.tfoot = pb.colgroup = pb.caption = pb.thead;
    pb.th = pb.td;
    if (!w.support.htmlSerialize) pb._default = [1, "div<div>", "</div>"];
    w.fn.extend({
        text: function (A) {
            if (w.isFunction(A)) return this.each(function (D) {
                var I = w(this);
                I.text(A.call(this, D, I.text()))
            });
            if (typeof A !== "object" && A !== e) return this.empty().append((this[0] && this[0].ownerDocument || C).createTextNode(A));
            return w.text(this)
        },
        wrapAll: function (A) {
            if (w.isFunction(A)) return this.each(function (I) {
                w(this).wrapAll(A.call(this, I))
            });
            if (this[0]) {
                var D = w(A, this[0].ownerDocument).eq(0).clone(true);
                this[0].parentNode && D.insertBefore(this[0]);
                D.map(function () {
                    for (var I =
                        this; I.firstChild && I.firstChild.nodeType === 1;) I = I.firstChild;
                    return I
                }).append(this)
            }
            return this
        },
        wrapInner: function (A) {
            if (w.isFunction(A)) return this.each(function (D) {
                w(this).wrapInner(A.call(this, D))
            });
            return this.each(function () {
                var D = w(this),
                    I = D.contents();
                I.length ? I.wrapAll(A) : D.append(A)
            })
        },
        wrap: function (A) {
            return this.each(function () {
                w(this).wrapAll(A)
            })
        },
        unwrap: function () {
            return this.parent().each(function () {
                w.nodeName(this, "body") || w(this).replaceWith(this.childNodes)
            }).end()
        },
        append: function () {
            return this.domManip(arguments,
                true, function (A) {
                    this.nodeType === 1 && this.appendChild(A)
                })
        },
        prepend: function () {
            return this.domManip(arguments, true, function (A) {
                this.nodeType === 1 && this.insertBefore(A, this.firstChild)
            })
        },
        before: function () {
            if (this[0] && this[0].parentNode) return this.domManip(arguments, false, function (D) {
                this.parentNode.insertBefore(D, this)
            });
            else if (arguments.length) {
                var A = w(arguments[0]);
                A.push.apply(A, this.toArray());
                return this.pushStack(A, "before", arguments)
            }
        },
        after: function () {
            if (this[0] && this[0].parentNode) return this.domManip(arguments,
                false, function (D) {
                    this.parentNode.insertBefore(D, this.nextSibling)
                });
            else if (arguments.length) {
                var A = this.pushStack(this, "after", arguments);
                A.push.apply(A, w(arguments[0]).toArray());
                return A
            }
        },
        remove: function (A, D) {
            for (var I = 0, Q;
                (Q = this[I]) != null; I++)
                if (!A || w.filter(A, [Q]).length) {
                    if (!D && Q.nodeType === 1) {
                        w.cleanData(Q.getElementsByTagName("*"));
                        w.cleanData([Q])
                    }
                    Q.parentNode && Q.parentNode.removeChild(Q)
                }
            return this
        },
        empty: function () {
            for (var A = 0, D;
                (D = this[A]) != null; A++)
                for (D.nodeType === 1 && w.cleanData(D.getElementsByTagName("*")); D.firstChild;) D.removeChild(D.firstChild);
            return this
        },
        clone: function (A) {
            var D = this.map(function () {
                if (!w.support.noCloneEvent && !w.isXMLDoc(this)) {
                    var I = this.outerHTML,
                        Q = this.ownerDocument;
                    if (!I) {
                        I = Q.createElement("div");
                        I.appendChild(this.cloneNode(true));
                        I = I.innerHTML
                    }
                    return w.clean([I.replace(Ka, "").replace(lb, '="$1">').replace(sa, "")], Q)[0]
                } else return this.cloneNode(true)
            });
            if (A === true) {
                n(this, D);
                n(this.find("*"), D.find("*"))
            }
            return D
        },
        html: function (A) {
            if (A === e) return this[0] && this[0].nodeType === 1 ? this[0].innerHTML.replace(Ka, "") : null;
            else if (typeof A === "string" && !Qa.test(A) && (w.support.leadingWhitespace || !sa.test(A)) && !pb[(Va.exec(A) || ["", ""])[1].toLowerCase()]) {
                A = A.replace(Oa, "<$1></$2>");
                try {
                    for (var D = 0, I = this.length; D < I; D++)
                        if (this[D].nodeType === 1) {
                            w.cleanData(this[D].getElementsByTagName("*"));
                            this[D].innerHTML = A
                        }
                } catch (Q) {
                    this.empty().append(A)
                }
            } else w.isFunction(A) ? this.each(function (U) {
                var X = w(this);
                X.html(A.call(this, U, X.html()))
            }) : this.empty().append(A);
            return this
        },
        replaceWith: function (A) {
            if (this[0] && this[0].parentNode) {
                if (w.isFunction(A)) return this.each(function (D) {
                    var I =
                        w(this),
                        Q = I.html();
                    I.replaceWith(A.call(this, D, Q))
                });
                if (typeof A !== "string") A = w(A).detach();
                return this.each(function () {
                    var D = this.nextSibling,
                        I = this.parentNode;
                    w(this).remove();
                    D ? w(D).before(A) : w(I).append(A)
                })
            } else return this.pushStack(w(w.isFunction(A) ? A() : A), "replaceWith", A)
        },
        detach: function (A) {
            return this.remove(A, true)
        },
        domManip: function (A, D, I) {
            var Q, U, X, la = A[0],
                ka = [];
            if (!w.support.checkClone && arguments.length === 3 && typeof la === "string" && ob.test(la)) return this.each(function () {
                w(this).domManip(A,
                    D, I, true)
            });
            if (w.isFunction(la)) return this.each(function (Wa) {
                var Ha = w(this);
                A[0] = la.call(this, Wa, D ? Ha.html() : e);
                Ha.domManip(A, D, I)
            });
            if (this[0]nts.length) {
                var A = this.pushStack(this, "after", arguments);
                A.push.apply(A, w(arguments[0]).toArray());
                return A
            }
        },
        remove: function (A, D) {
            for (var I = 0, Q;
                (Q = this[I]) != null; I++)
                if (!A || w.filter(A, [Q]).length) {
                    if (!D && Q.nodeType === 1) {
                        w.cleanData(Q.getElementsByTagName("*"));
                        w.cleanData([Q])
                    }
                    Q.parentNode && Q.parentNode.removeChild(Q)
                }
            return this
        },
        empty: function () {
            for (var A = 0, D;
                (D = this[A]) != null; A++)
                for (D.nodeType === 1 && w.cleanData(D.getElementsByTagName("*")); D.firstChild;) D.removeChild(D.firstChild);
            return this
        },
        clone: function (A) {
            var D = this.map(function () {
                if (!w.support.noCloneEvent && !w.isXMLDoc(this)) {
                    var I = this.outerHTML,
                        Q = this.ownerDocument;
                    if (!I) {
                        I = Q.createElement("div");
                        I.appendChild(this.cloneNode(true));
                        I = I.innerHTML
                    }
                    return w.clean([I.replace(Ka, "").replace(lb, '="$1">').replace(sa, "")], Q)[0]
                } else return this.cloneNode(true)
            });
            if (A === true) {
                n(this, D);
                n(this.find("*"), D.find("*"))
            }
            return D
        },
        html: function (A) {
            if (A === e) return this[0] && this[0].nodeType === 1 ? this[0].innerHTML.replace(Ka, "") : null;
            else if (typeof A === "string" && !Qa.test(A) && (w.support.leadingWhitespace || !sa.test(A)) && !pb[(Va.exec(A) || ["", ""])[1].toLowerCase()]) {
                A = A.replace(Oa, "<$1></$2>");
                try {
                    for (var D = 0, I = this.length; D < I; D++)
                        if (this[D].nodeType === 1) {
                            w.cleanData(this[D].getElementsByTagName("*"));
                            this[D].innerHTML = A
                        }
                } catch (Q) {
                    this.empty().append(A)
                }
            } else w.isFunction(A) ? this.each(function (U) {
                var X = w(this);
                X.html(A.call(this, U, X.html()))
            }) : this.empty().append(A);
            return this
        },
        replaceWith: function (A) {
            if (this[0] && this[0].parentNode) {
                if (w.isFunction(A)) return this.each(function (D) {
                    var I =
                        w(this),
                        Q = I.html();
                    I.replaceWith(A.call(this, D, Q))
                });
                if (typeof A !== "string") A = w(A).detach();
                return this.each(function () {
                    var D = this.nextSibling,
                        I = this.parentNode;
                    w(this).remove();
                    D ? w(D).before(A) : w(I).append(A)
                })
            } else return this.pushStack(w(w.isFunction(A) ? A() : A), "replaceWith", A)
        },
        detach: function (A) {
            return this.remove(A, true)
        },
        domManip: function (A, D, I) {
            var Q, U, X, la = A[0],
                ka = [];
            if (!w.support.checkClone && arguments.length === 3 && typeof la === "string" && ob.test(la)) return this.each(function () {
                w(this).domManip(A,
                    D, I, true)
            });
            if (w.isFunction(la)) return this.each(function (Wa) {
                var Ha = w(this);
                A[0] = la.call(this, Wa, D ? Ha.html() : e);
                Ha.domManip(A, D, I)
            });
            if (this[0]) {
                Q = la && la.parentNode;
                Q = w.support.parentNode && Q && Q.nodeType === 11 && Q.childNodes.length === this.length ? {
                    fragment: Q
                } : w.buildFragment(A, this, ka);
                X = Q.fragment;
                if (U = X.childNodes.length === 1 ? X = X.firstChild : X.firstChild) {
                    D = D && w.nodeName(U, "tr");
                    U = 0;
                    for (var xa = this.length; U < xa; U++) I.call(D ? w.nodeName(this[U], "table") ? this[U].getElementsByTagName("tbody")[0] || this[U].appendChild(this[U].ownerDocument.createElement("tbody")) :
                        this[U] : this[U], U > 0 || Q.cacheable || this.length > 1 ? X.cloneNode(true) : X)
                }
                ka.length && w.each(ka, q)
            }
            return this
        }
    });
    w.buildFragment = function (A, D, I) {
        var Q, U, X;
        D = D && D[0] ? D[0].ownerDocument || D[0] : C;
        if (A.length === 1 && typeof A[0] === "string" && A[0].length < 512 && D === C && !Qa.test(A[0]) && (w.support.checkClone || !ob.test(A[0]))) {
            U = true;
            if (X = w.fragments[A[0]])
                if (X !== 1) Q = X
        }
        if (!Q) {
            Q = D.createDocumentFragment();
            w.clean(A, D, Q, I)
        }
        if (U) w.fragments[A[0]] = X ? Q : 1;
        return {
            fragment: Q,
            cacheable: U
        }
    };
    w.fragments = {};
    w.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
    }, function (A, D) {
        w.fn[A] = function (I) {
            var Q = [];
            I = w(I);
            var U = this.length === 1 && this[0].parentNode;
            if (U && U.nodeType === 11 && U.childNodes.length === 1 && I.length === 1) {
                I[D](this[0]);
                return this
            } else {
                U = 0;
                for (var X = I.length; U < X; U++) {
                    var la = (U > 0 ? this.clone(true) : this).get();
                    w(I[U])[D](la);
                    Q = Q.concat(la)
                }
                return this.pushStack(Q, A, I.selector)
            }
        }
    });
    w.extend({
        clean: function (A, D, I, Q) {
            D = D || C;
            if (typeof D.createElement === "undefined") D =
                D.ownerDocument || D[0] && D[0].ownerDocument || C;
            for (var U = [], X = 0, la;
                (la = A[X]) != null; X++) {
                if (typeof la === "number") la += "";
                if (la) {
                    if (typeof la === "string" && !Ga.test(la)) la = D.createTextNode(la);
                    else if (typeof la === "string") {
                        la = la.replace(Oa, "<$1></$2>");
                        var ka = (Va.exec(la) || ["", ""])[1].toLowerCase(),
                            xa = pb[ka] || pb._default,
                            Wa = xa[0],
                            Ha = D.createElement("div");
                        for (Ha.innerHTML = xa[1] + la + xa[2]; Wa--;) Ha = Ha.lastChild;
                        if (!w.support.tbody) {
                            Wa = gb.test(la);
                            ka = ka === "table" && !Wa ? Ha.firstChild && Ha.firstChild.childNodes :
                                xa[1] === "<table>" && !Wa ? Ha.childNodes : [];
                            for (xa = ka.length - 1; xa >= 0; --xa) w.nodeName(ka[xa], "tbody") && !ka[xa].childNodes.length && ka[xa].parentNode.removeChild(ka[xa])
                        }!w.support.leadingWhitespace && sa.test(la) && Ha.insertBefore(D.createTextNode(sa.exec(la)[0]), Ha.firstChild);
                        la = Ha.childNodes
                    }
                    if (la.nodeType) U.push(la);
                    else U = w.merge(U, la)
                }
            }
          SS = w.css;
    w.each(["height", "width"], function (A, D) {
        w.cssHooks[D] = {
            get: function (I, Q, U) {
                var X;
                if (Q) {
                    if (I.offsetWidth !== 0) X = u(I, D, U);
                    else w.swap(I, Z, function () {
                        X = u(I, D, U)
                    }); if (X <= 0) {
                        X = ma(I, D, D);
                        if (X === "0px" && ya) X = ya(I, D, D);
                        if (X != null) return X === "" || X === "auto" ? "0px" : X
                    }
                    if (X < 0 || X == null) {
                        X = I.style[D];
                        return X === "" || X === "auto" ? "0px" : X
                    }
                    return typeof X === "string" ? X : X + "px"
                }
            },
            set: function (I, Q) {
                if (S.test(Q)) {
                    Q = parseFloat(Q);
                    if (Q >= 0) return Q + "px"
                } else return Q
            }
        }
    });
    if (!w.support.opacity) w.cssHooks.opacity = {
        get: function (A, D) {
            return mb.test((D && A.currentStyle ? A.currentStyle.filter : A.style.filter) || "") ? parseFloat(RegExp.$1) /
                100 + "" : D ? "1" : ""
        },
        set: function (A, D) {
            var I = A.style;
            I.zoom = 1;
            var Q = w.isNaN(D) ? "" : "alpha(opacity=" + D * 100 + ")",
                U = I.filter || "";
            I.filter = wb.test(U) ? U.replace(wb, Q) : I.filter + " " + Q
        }
    };
    if (C.defaultView && C.defaultView.getComputedStyle) oa = function (A, D, I) {
        var Q;
        I = I.replace(Hb, "-$1").toLowerCase();
        if (!(D = A.ownerDocument.defaultView)) return e;
        if (D = D.getComputedStyle(A, null)) {
            Q = D.getPropertyValue(I);
            if (Q === "" && !w.contains(A.ownerDocument.documentElement, A)) Q = w.style(A, I)
        }
        return Q
    };
    if (C.documentElement.currentStyle) ya =
        function (A, D) {
            var I, Q, U = A.currentStyle && A.currentStyle[D],
                X = A.style;
            if (!S.test(U) && da.test(U)) {
                I = X.left;
                Q = A.runtimeStyle.left;
                A.runtimeStyle.left = A.currentStyle.left;
                X.left = D === "fontSize" ? "1em" : U || 0;
                U = X.pixelLeft + "px";
                X.left = I;
                A.runtimeStyle.left = Q
            }
            return U === "" ? "auto" : U
    };
    ma = oa || ya;
    if (w.expr && w.expr.filters) {
        w.expr.filters.hidden = function (A) {
            var D = A.offsetHeight;
            return A.offsetWidth === 0 && D === 0 || !w.support.reliableHiddenOffsets && (A.style.display || w.css(A, "display")) === "none"
        };
        w.expr.filters.visible =
            function (A) {
                return !w.expr.filters.hidden(A)
        }
    }
    var Aa = w.now(),
        va = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,
        ra = /^(?:select|textarea)/i,
        Ma = /^(?:color|date|datetime|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,
        Ta = /^(?:GET|HEAD)$/,
        y = /\[\]$/,
        F = /\=\?(&|$)/,
        H = /\?/,
        K = /([?&])_=[^&]*/,
        N = /^(\w+:)?\/\/([^\/?#]+)/,
        L = /%20/g,
        fa = /#.*$/,
        ha = w.fn.load;
    w.fn.extend({
        load: function (A, D, I) {
            if (typeof A !== "string" && ha) return ha.apply(this, arguments);
            else if (!this.length) return this;
            var Q = A.indexOf(" ");
            if (Q >= 0) {
                var U = A.slice(Q, A.length);
                A = A.slice(0, Q)
            }
            Q = "GET";
            if (D)
                if (w.isFunction(D)) {
                    I = D;
                    D = null
                } else if (typeof D === "object") {
                D = w.param(D, w.ajaxSettings.traditional);
                Q = "POST"
            }
            var X = this;
            w.ajax({
                url: A,
                type: Q,
                dataType: "html",
                data: D,
                complete: function (la, ka) {
                    if (ka === "success" || ka === "notmodified") X.html(U ? w("<div>").append(la.responseText.replace(va, "")).find(U) : la.responseText);
                    I && X.each(I, [la.responseText, ka, la])
                }
            });
            return this
        },
        serialize: function () {
            return w.param(this.serializeArray())
        },
        serializeArray: function () {
            return this.map(function () {
                return this.elements ? w.makeArray(this.elements) : this
            }).filter(function () {
                return this.name && !this.disabled && (this.checked || ra.test(this.nodeName) || Ma.test(this.type))
            }).map(function (A, D) {
                var I = w(this).val();
                return I == null ? null : w.isArray(I) ? w.map(I, function (Q) {
                    return {
                        name: D.name,
                        value: Q
                    }
                }) : {
                    name: D.name,
                    value: I
                }
            }).get()
        }
    });
    w.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "), function (A, D) {
        w.fn[D] = function (I) {
            return this.bind(D,
                I)
        }
    });
    w.extend({
        get: function (A, D, I, Q) {
            if (w.isFunction(D)) {
                Q = Q || I;
                I = D;
                D = null
            }
            return w.ajax({
                type: "GET",
                url: A,
                data: D,
                success: I,
                dataType: Q
            })
        },
        getScript: function (A, D) {
            return w.get(A, null, D, "script")
        },
        getJSON: function (A, D, I) {
            return w.get(A, D, I, "json")
        },
        post: function (A, D, I, Q) {
            if (w.isFunction(D)) {
                Q = Q || I;
                I = D;
                D = {}
            }
            return w.ajax({
                type: "POST",
                url: A,
                data: D,
                success: I,
                dataType: Q
            })
        },
        ajaxSetup: function (A) {
            w.extend(w.ajaxSettings, A)
        },
        ajaxSettings: {
            url: location.href,
            global: true,
            type: "GET",
            contentType: "application/x-www-form-urlencoded",
            processData: true,
            async: true,
            xhr: function () {
                return new a.XMLHttpRequest
            },
            accepts: {
                xml: "application/xml, text/xml",
                html: "text/html",
                script: "text/javascript, application/javascript",
                json: "application/json, text/javascript",
                text: "text/plain",
                _default: "*/*"
            }
        },
        ajax: function (A) {
            var D = w.extend(true, {}, w.ajaxSettings, A),
                I, Q, U, X = D.type.toUpperCase(),
                la = Ta.test(X);
            D.url = D.url.replace(fa, "");
            D.context = A && A.context != null ? A.context : D;
            if (D.data && D.processData && typeof D.data !== "string") D.data = w.param(D.data, D.traditional);
            if (D.dataType === "jsonp") {
                if (X === "GET") F.test(D.url) || (D.url += (H.test(D.url) ? "&" : "?") + (D.jsonp || "callback") + "=?");
                else if (!D.data || !F.test(D.data)) D.data = (D.data ? D.data + "&" : "") + (D.jsonp || "callback") + "=?";
                D.dataType = "json"
            }
            if (D.dataType === "json" && (D.data && F.test(D.data) || F.test(D.url))) {
                I = D.jsonpCallback || "jsonp" + Aa++;
                if (D.data) D.data = (D.data + "").replace(F, "=" + I + "$1");
                D.url = D.url.replace(F, "=" + I + "$1");
                D.dataType = "script";
                var ka = a[I];
                a[I] = function (ua) {
                    if (w.isFunction(ka)) ka(ua);
                    else {
                        a[I] = e;
                        try {
                            delete a[I]
                        } catch (Ca) {}
                    }
                    U =
                        ua;
                    w.handleSuccess(D, Ua, Q, U);
                    w.handleComplete(D, Ua, Q, U);
                    Ha && Ha.removeChild(Za)
                }
            }
            if (D.dataType === "script" && D.cache === null) D.cache = false;
            if (D.cache === false && la) {
                var xa = w.now(),
                    Wa = D.url.replace(K, "$1_=" + xa);
                D.url = Wa + (Wa === D.url ? (H.test(D.url) ? "&" : "?") + "_=" + xa : "")
            }
            if (D.data && la) D.url += (H.test(D.url) ? "&" : "?") + D.data;
            D.global && w.active++ === 0 && w.event.trigger("ajaxStart");
            xa = (xa = N.exec(D.url)) && (xa[1] && xa[1].toLowerCase() !== location.protocol || xa[2].toLowerCase() !== location.host);
            if (D.dataType === "script" &&
                X === "GET" && xa) {
                var Ha = C.getElementsByTagName("head")[0] || C.documentElement,
                    Za = C.createElement("script");
                if (D.scriptCharset) Za.charset = D.scriptCharset;
                Za.src = D.url;
                if (!I) {
                    var ib = false;
                    Za.onload = Za.onreadystatechange = function () {
                        if (!ib && (!this.readyState || this.readyState === "loaded" || this.readyState === "complete")) {
                            ib = true;
                            w.handleSuccess(D, Ua, Q, U);
                            w.handleComplete(D, Ua, Q, U);
                            Za.onload = Za.onreadystatechange = null;
                            Ha && Za.parentNode && Ha.removeChild(Za)
                        }
                    }
                }
                Ha.insertBefore(Za, Ha.firstChild);
                return e
            }
            var ub = false,
                Ua = D.xhr();
            if (Ua) {
                D.username ? Ua.open(X, D.url, D.async, D.username, D.password) : Ua.open(X, D.url, D.async);
                try {
                    if (D.data != null && !la || A && A.contentType) Ua.setRequestHeader("Content-Type", D.contentType);
                    if (D.ifModified) {
                        w.lastModified[D.url] && Ua.setRequestHeader("If-Modified-Since", w.lastModified[D.url]);
                        w.etag[D.url] && Ua.setRequestHeader("If-None-Match", w.etag[D.url])
                    }
                    xa || Ua.setRequestHeader("X-Requested-With", "XMLHttpRequest");
                    Ua.setRequestHeader("Accept", D.dataType && D.accepts[D.dataType] ? D.accepts[D.dataType] +
                        ", */*; q=0.01" : D.accepts._default)
                } catch (tb) {}
                if (D.beforeSend && D.beforeSend.call(D.context, Ua, D) === false) {
                    D.global && w.active-- === 1 && w.event.trigger("ajaxStop");
                    Ua.abort();
                    return false
                }
                D.global && w.triggerGlobal(D, "ajaxSend", [Ua, D]);
                var Bb = Ua.onreadystatechange = function (ua) {
                    if (!Ua || Ua.readyState === 0 || ua === "abort") {
                        ub || w.handleComplete(D, Ua, Q, U);
                        ub = true;
                        if (Ua) Ua.onreadystatechange = w.noop
                    } els}
            if (D.dataType === "json" && (D.data && F.test(D.data) || F.test(D.url))) {
                I = D.jsonpCallback || "jsonp" + Aa++;
                if (D.data) D.data = (D.data + "").replace(F, "=" + I + "$1");
                D.url = D.url.replace(F, "=" + I + "$1");
                D.dataType = "script";
                var ka = a[I];
                a[I] = function (ua) {
                    if (w.isFunction(ka)) ka(ua);
                    else {
                        a[I] = e;
                        try {
                            delete a[I]
                        } catch (Ca) {}
                    }
                    U =
                        ua;
                    w.handleSuccess(D, Ua, Q, U);
                    w.handleComplete(D, Ua, Q, U);
                    Ha && Ha.removeChild(Za)
                }
            }
            if (D.dataType === "script" && D.cache === null) D.cache = false;
            if (D.cache === false && la) {
                var xa = w.now(),
                    Wa = D.url.replace(K, "$1_=" + xa);
                D.url = Wa + (Wa === D.url ? (H.test(D.url) ? "&" : "?") + "_=" + xa : "")
            }
            if (D.data && la) D.url += (H.test(D.url) ? "&" : "?") + D.data;
            D.global && w.active++ === 0 && w.event.trigger("ajaxStart");
            xa = (xa = N.exec(D.url)) && (xa[1] && xa[1].toLowerCase() !== location.protocol || xa[2].toLowerCase() !== location.host);
            if (D.dataType === "script" &&
                X === "GET" && xa) {
                var Ha = C.getElementsByTagName("head")[0] || C.documentElement,
                    Za = C.createElement("script");
                if (D.scriptCharset) Za.charset = D.scriptCharset;
                Za.src = D.url;
                if (!I) {
                    var ib = false;
                    Za.onload = Za.onreadystatechange = function () {
                        if (!ib && (!this.readyState || this.readyState === "loaded" || this.readyState === "complete")) {
                            ib = true;
                            w.handleSuccess(D, Ua, Q, U);
                            w.handleComplete(D, Ua, Q, U);
                            Za.onload = Za.onreadystatechange = null;
                            Ha && Za.parentNode && Ha.removeChild(Za)
                        }
                    }
                }
                Ha.insertBefore(Za, Ha.firstChild);
                return e
            }
            var ub = false,
                Ua = D.xhr();
            if (Ua) {
                D.username ? Ua.open(X, D.url, D.async, D.username, D.password) : Ua.open(X, D.url, D.async);
                try {
                    if (D.data != null && !la || A && A.contentType) Ua.setRequestHeader("Content-Type", D.contentType);
                    if (D.ifModified) {
                        w.lastModified[D.url] && Ua.setRequestHeader("If-Modified-Since", w.lastModified[D.url]);
                        w.etag[D.url] && Ua.setRequestHeader("If-None-Match", w.etag[D.url])
                    }
                    xa || Ua.setRequestHeader("X-Requested-With", "XMLHttpRequest");
                    Ua.setRequestHeader("Accept", D.dataType && D.accepts[D.dataType] ? D.accepts[D.dataType] +
                        ", */*; q=0.01" : D.accepts._default)
                } catch (tb) {}
                if (D.beforeSend && D.beforeSend.call(D.context, Ua, D) === false) {
                    D.global && w.active-- === 1 && w.event.trigger("ajaxStop");
                    Ua.abort();
                    return false
                }
                D.global && w.triggerGlobal(D, "ajaxSend", [Ua, D]);
                var Bb = Ua.onreadystatechange = function (ua) {
                    if (!Ua || Ua.readyState === 0 || ua === "abort") {
                        ub || w.handleComplete(D, Ua, Q, U);
                        ub = true;
                        if (Ua) Ua.onreadystatechange = w.noop
                    } else if (!ub && Ua && (Ua.readyState === 4 || ua === "timeout")) {
                        ub = true;
                        Ua.onreadystatechange = w.noop;
                        Q = ua === "timeout" ? "timeout" : !w.httpSuccess(Ua) ? "error" : D.ifModified && w.httpNotModified(Ua, D.url) ? "notmodified" : "success";
                        var Ca;
                        if (Q === "success") try {
                            U = w.httpData(Ua, D.dataType, D)
                        } catch (Da) {
                            Q = "parsererror";
                            Ca = Da
                        }
                        if (Q === "success" || Q === "notmodified") I || w.handleSuccess(D, Ua, Q, U);
                        else w.handleError(D, Ua, Q, Ca);
                        I || w.handleComplete(D, Ua, Q, U);
                        ua === "timeout" && Ua.abort();
                        if (D.async) Ua = null
                    }
                };
                try {
                    var V = Ua.abort;
                    Ua.abort = function () {
                        Ua && Function.prototype.call.call(V, Ua);
                        Bb("abort")
                    }
                } catch (ia) {}
                D.async && D.timeout > 0 && setTimeout(function () {
                    Ua && !ub && Bb("timeout")
                }, D.timeout);
                try {
                    Ua.send(la || D.data == null ? null : D.data)
                } catch (wa) {
                    w.handleError(D, Ua, null, wa);
                    w.handleComplete(D, Ua, Q, U)
                }
                D.async || Bb();
                return Ua
            }
        },
        param: function (A, D) {
            var I = [],
                Q = function (X, la) {
                    la = w.isFunction(la) ? la() : la;
                    I[I.length] = encodeURIComponent(X) + "=" + encodeURIComponent(la)
                };
            if (D === e) D = w.ajaxSettings.traditional;
            if (w.isArray(A) || A.jquery) w.each(A, function () {
                Q(this.name, this.value)
            });
            else
                for (var U in A) v(U, A[U], D, Q);
            return I.join("&").replace(L, "+")
        }
    });
    w.extend({
        active: 0,
        lastModified: {},
        etag: {},
        handleError: function (A, D, I, Q) {
            A.error && A.error.call(A.context, D, I, Q);
            A.global && w.triggerGlobal(A, "ajaxError", [D, A, Q])
        },
        handleSuccess: function (A, D, I, Q) {
            A.success && A.success.call(A.context, Q, I, D);
            A.global && w.triggerGlobal(A, "ajaxSuccess", [D, A])
        },
        handleComplete: function (A, D, I) {
            A.complete && A.complete.call(A.context, D, I);
            A.global && w.triggerGlobal(A, "ajaxComplete", [D, A]);
            A.global && w.active-- === 1 && w.event.trigger("ajaxStop")
        },
        triggerGlobal: function (A, D, I) {
            (A.context && A.context.url == null ? w(A.context) :
                w.event).trigger(D, I)
        },
        httpSuccess: function (A) {
            try {
                return !A.status && location.protocol === "file:" || A.status >= 200 && A.status < 300 || A.status === 304 || A.status === 1223
            } catch (D) {}
            return false
        },
        httpNotModified: function (A, D) {
            var I = A.getResponseHeader("Last-Modified"),
                Q = A.getResponseHeader("Etag");
            if (I) w.lastModified[D] = I;
            if (Q) w.etag[D] = Q;
            return A.status === 304
        },
        httpData: function (A, D, I) {
            var Q = A.getResponseHeader("content-type") || "",
                U = D === "xml" || !D && Q.indexOf("xml") >= 0;
            A = U ? A.responseXML : A.responseText;
            U && A.documentElement.nodeName ===
                "parsererror" && w.error("parsererror");
            if (I && I.dataFilter) A = I.dataFilter(A, D);
            if (typeof A === "string")
                if (D === "json" || !D && Q.indexOf("json") >= 0) A = w.parseJSON(A);
                else if (D === "script" || !D && Q.indexOf("javascript") >= 0) w.globalEval(A);
            return A
        }
    });
    if (a.ActiveXObject) w.ajaxSettings.xhr = function () {
        if (a.location.protocol !== "file:") try {
            return new a.XMLHttpRequest
        } catch (A) {}
        try {
            return new a.ActiveXObject("Microsoft.XMLHTTP")
        } catch (D) {}
    };
    w.support.ajax = !! w.ajaxSettings.xhr();
    var Ba = {}, Ja = /^(?:toggle|show|hide)$/,
        cb = /^([+\-]=)?([\d+.\-]+)(.*)$/,
        hb, yb = [
            ["height", "marginTop", "marginBottom", "paddingTop", "paddingBottom"],
            ["width", "marginLeft", "marginRight", "paddingLeft", "paddingRight"],
            ["opacity"]
        ];
    w.fn.extend({
        show: function (A, D, I) {
            if (A || A === 0) return this.animate(x("show", 3), A, D, I);
            else {
                I = 0;
                for (var Q = this.length; I < Q; I++) {
                    A = this[I];
                    D = A.style.display;
                    if (!w.data(A, "olddisplay") && D === "none") D = A.style.display = "";
                    D === "" && w.css(A, "display") === "none" && w.data(A, "olddisplay", z(A.nodeName))
                }
                for (I = 0; I < Q; I++) {
                    A = this[I];
                    D =
                        A.style.display;
                    if (D === "" || D === "none") A.style.display = w.data(A, "olddisplay") || ""
                }
                return this
            }
        },
        hide: function (A, D, I) {
            if (A || A === 0) return this.animate(x("hide", 3), A, D, I);
            else {
                A = 0;
                for (D = this.length; A < D; A++) {
                    I = w.css(this[A], "display");
                    I !== "none" && w.data(this[A], "olddisplay", I)
                }
                for (A = 0; A < D; A++) this[A].style.display = "none";
                return this
            }
        },
        _toggle: w.fn.toggle,
        toggle: function (A, D, I) {
            var Q = typeof A === "boolean";
            if (w.isFunction(A) && w.isFunction(D)) this._toggle.apply(this, arguments);
            else A == null || Q ? this.each(function () {
                var U =
                    Q ? A : w(this).is(":hidden");
                w(this)[U ? "show" : "hide"]()
            }) : this.animate(x("toggle", 3), A, D, I);
            return this
        },
        fadeTo: function (A, D, I, Q) {
            return this.filter(":hidden").css("opacity", 0).show().end().animate({
                opacity: D
            }, A, I, Q)
        },
        animate: function (A, D, I, Q) {
            var U = w.speed(D, I, Q);
            if (w.isEmptyObject(A)) return this.each(U.complete);
            return this[U.queue === false ? "each" : "queue"](function () {
                var X = w.extend({}, U),
                    la, ka = this.nodeType === 1,
                    xa = ka && w(this).is(":hidden"),
                    Wa = this;
                for (la in A) {
                    var Ha = w.camelCase(la);
                    if (la !== Ha) {
                        A[Ha] =
                            A[la];
                        delete A[la];
                        la = Ha
                    }
                    if (A[la] === "hide" && xa || A[la] === "show" && !xa) return X.complete.call(this);
                    if (ka && (la === "height" || la === "width")) {
                        X.overflow = [this.style.overflow, this.style.overflowX, this.style.overflowY];
                        if (w.css(this, "display") === "inline" && w.css(this, "float") === "none")
                            if (w.support.inlineBlockNeedsLayout)m.style[this.prop] == null)) return this.elem[this.prop];
            var A = parseFloat(w.css(this.elem, this.prop));
            return A && A > -1E4 ? A : 0
        },
        custom: function (A, D, I) {
            function Q(la) {
                return U.step(la)
            }
            var U = this,
                X = w.fx;
            this.startTime = w.now();
            this.start = A;
            this.end = D;
            this.unit = I || this.unit || "px";
            this.now = this.start;
            this.pos = this.state = 0;
            Q.elem = this.elem;
            if (Q() && w.timers.push(Q) && !hb) hb = setInterval(X.tick, X.interval)
        },
        show: function () {
            this.options.orig[this.prop] = w.style(this.elem, this.prop);
            this.options.show = true;
            this.custom(this.prop === "width" || this.prop === "height" ? 1 : 0, this.cur());
            w(this.elem).show()
        },
        hide: function () {
            this.options.orig[this.prop] = w.style(this.elem, this.prop);
            this.options.hide = true;
            this.custom(this.cur(), 0)
        },
        step: function (A) {
            var D = w.now(),
                I = true;
            if (A || D >= this.options.duration +
                this.startTime) {
                this.now = this.end;
                this.pos = this.state = 1;
                this.update();
                this.options.curAnim[this.prop] = true;
                for (var Q in this.options.curAnim)
                    if (this.options.curAnim[Q] !== true) I = false;
                if (I) {
                    if (this.options.overflow != null && !w.support.shrinkWrapBlocks) {
                        var U = this.elem,
                            X = this.options;
                        w.each(["", "X", "Y"], function (ka, xa) {
                            U.style["overflow" + xa] = X.overflow[ka]
                        })
                    }
                    this.options.hide && w(this.elem).hide();
                    if (this.options.hide || this.options.show)
                        for (var la in this.options.curAnim) w.style(this.elem, la, this.options.orig[la]);
                    this.options.complete.call(this.elem)
                }
                return false
            } else {
                A = D - this.startTime;
                this.state = A / this.options.duration;
                D = this.options.easing || (w.easing.swing ? "swing" : "linear");
                this.pos = w.easing[this.options.specialEasing && this.options.specialEasing[this.prop] || D](this.state, A, 0, 1, this.options.duration);
                this.now = this.start + (this.end - this.start) * this.pos;
                this.update()
            }
            return true
        }
    };
    w.extend(w.fx, {
        tick: function () {
            for (var A = w.timers, D = 0; D < A.length; D++) A[D]() || A.splice(D--, 1);
            A.length || w.fx.stop()
        },
        interval: 13,
        stop: function () {
            clearInterval(hb);
            hb = null
        },
        speeds: {
            slow: 600,
            fast: 200,
            _default: 400
        },
        step: {
            opacity: function (A) {
                w.style(A.elem, "opacity", A.now)
            },
            _default: function (A) {
                if (A.elem.style && A.elem.style[A.prop] != null) {
                    if (isNaN(A.now)) A.now = 0;
                    A.elem.style[A.prop] = (A.prop === "width" || A.prop === "height" ? Math.max(0, A.now) : A.now) + A.unit
                } else A.elem[A.prop] = A.now
            }
        }
    });
    if (w.expr && w.expr.filters) w.expr.filters.animated = function (A) {
        return w.grep(w.timers, function (D) {
            return A === D.elem
        }).length
    };
    var Gb = /^t(?:able|d|h)$/i,
        vb = /^(?:body|html)$/i;
    w.fn.offset = "getBoundingClientRect" in C.documentElement ? function (A) {
        var D = this[0],
            I;
        if (A) return this.each(function (la) {
            w.offset.setOffset(this, A, la)
        });
        if (!D || !D.ownerDocument) return null;
        if (D === D.ownerDocument.body) return w.offset.bodyOffset(D);
        try {
            I = D.getBoundingClientRect()
        } catch (Q) {}
        var U = D.ownerDocument,
            X = U.documentElement;
        if (!I || !w.contains(X, D)) return I || {
            top: 0,
            left: 0
        };
        D = U.body;
        U = B(U);
        return {
            top: I.top + (U.pageYOffset || w.support.boxModel && X.scrollTop || D.scrollTop) - (X.clientTop ||
                D.clientTop || 0),
            left: I.left + (U.pageXOffset || w.support.boxModel && X.scrollLeft || D.scrollLeft) - (X.clientLeft || D.clientLeft || 0)
        }
    } : function (A) {
        var D = this[0];
        if (A) return this.each(function (Wa) {
            w.offset.setOffset(this, A, Wa)
        });
        if (!D || !D.ownerDocument) return null;
        if (D === D.ownerDocument.body) return w.offset.bodyOffset(D);
        w.offset.initialize();
        var I, Q = D.offsetParent,
            U = D.ownerDocument,
            X = U.documentElement,
            la = U.body;
        I = (U = U.defaultView) ? U.getComputedStyle(D, null) : D.currentStyle;
        for (var ka = D.offsetTop, xa = D.offsetLeft;
            (D =
                D.parentNode) && D !== la && D !== X;) {
            if (w.offset.supportsFixedPosition && I.position === "fixed") break;
            I = U ? U.getComputedStyle(D, null) : D.currentStyle;
            ka -= D.scrollTop;
            xa -= D.scrollLeft;
            if (D === Q) {
                ka += D.offsetTop;
                xa += D.offsetLeft;
                if (w.offset.doesNotAddBorder && !(w.offset.doesAddBorderForTableAndCells && Gb.test(D.nodeName))) {
                    ka += parseFloat(I.borderTopWidth) || 0;
                    xa += parseFloat(I.borderLeftWidth) || 0
                }
                Q = D.offsetParent
            }
            if (w.offset.subtractsBorderForOverflowNotVisible && I.overflow !== "visible") {
                ka += parseFloat(I.borderTopWidth) ||
                    0;
                xa += parseFloat(I.borderLeftWidth) || 0
            }
            I = I
        }
        if (I.position === "relative" || I.position === "static") {
            ka += la.offsetTop;
            xa += la.offsetLeft
        }
        if (w.offset.supportsFixedPosition && I.position === "fixed") {
            ka += Math.max(X.scrollTop, la.scrollTop);
            xa += Math.max(X.scrollLeft, la.scrollLeft)
        }
        return {
            top: ka,
            left: xa
        }
    };
    w.offset = {
        initialize: function () {
            var A = C.body,
                D = C.createElement("div"),
                I, Q, U, X = parseFloat(w.css(A, "marginTop")) || 0;
            w.extend(D.style, {
                position: "absolute",
                top: 0,
                left: 0,
                margin: 0,
                border: 0,
                width: "1px",
                height: "1px",
                visibility: "hidden"
            });
            D.innerHTML = "<div style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;'><div></div></div><table style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;' cellpadding='0' cellspacing='0'><tr><td></td></tr></table>";
            A.insertBefore(D, A.firstChild);
            I = D.firstChild;
            Q = I.firstChild;
            U = I.nextSibling.firstChild.firstChild;
            this.doesNotAddBorder = Q.offsetTop !== 5;
            this.doesAddBorderForTableAndCells = U.offsetTop === 5;
            Q.style.position =
                "fixed";
            Q.style.topentRect" in C.documentElement ? function (A) {
        var D = this[0],
            I;
        if (A) return this.each(function (la) {
            w.offset.setOffset(this, A, la)
        });
        if (!D || !D.ownerDocument) return null;
        if (D === D.ownerDocument.body) return w.offset.bodyOffset(D);
        try {
            I = D.getBoundingClientRect()
        } catch (Q) {}
        var U = D.ownerDocument,
            X = U.documentElement;
        if (!I || !w.contains(X, D)) return I || {
            top: 0,
            left: 0
        };
        D = U.body;
        U = B(U);
        return {
            top: I.top + (U.pageYOffset || w.support.boxModel && X.scrollTop || D.scrollTop) - (X.clientTop ||
                D.clientTop || 0),
            left: I.left + (U.pageXOffset || w.support.boxModel && X.scrollLeft || D.scrollLeft) - (X.clientLeft || D.clientLeft || 0)
        }
    } : function (A) {
        var D = this[0];
        if (A) return this.each(function (Wa) {
            w.offset.setOffset(this, A, Wa)
        });
        if (!D || !D.ownerDocument) return null;
        if (D === D.ownerDocument.body) return w.offset.bodyOffset(D);
        w.offset.initialize();
        var I, Q = D.offsetParent,
            U = D.ownerDocument,
            X = U.documentElement,
            la = U.body;
        I = (U = U.defaultView) ? U.getComputedStyle(D, null) : D.currentStyle;
        for (var ka = D.offsetTop, xa = D.offsetLeft;
            (D =
                D.parentNode) && D !== la && D !== X;) {
            if (w.offset.supportsFixedPosition && I.position === "fixed") break;
            I = U ? U.getComputedStyle(D, null) : D.currentStyle;
            ka -= D.scrollTop;
            xa -= D.scrollLeft;
            if (D === Q) {
                ka += D.offsetTop;
                xa += D.offsetLeft;
                if (w.offset.doesNotAddBorder && !(w.offset.doesAddBorderForTableAndCells && Gb.test(D.nodeName))) {
                    ka += parseFloat(I.borderTopWidth) || 0;
                    xa += parseFloat(I.borderLeftWidth) || 0
                }
                Q = D.offsetParent
            }
            if (w.offset.subtractsBorderForOverflowNotVisible && I.overflow !== "visible") {
                ka += parseFloat(I.borderTopWidth) ||
                    0;
                xa += parseFloat(I.borderLeftWidth) || 0
            }
            I = I
        }
        if (I.position === "relative" || I.position === "static") {
            ka += la.offsetTop;
            xa += la.offsetLeft
        }
        if (w.offset.supportsFixedPosition && I.position === "fixed") {
            ka += Math.max(X.scrollTop, la.scrollTop);
            xa += Math.max(X.scrollLeft, la.scrollLeft)
        }
        return {
            top: ka,
            left: xa
        }
    };
    w.offset = {
        initialize: function () {
            var A = C.body,
                D = C.createElement("div"),
                I, Q, U, X = parseFloat(w.css(A, "marginTop")) || 0;
            w.extend(D.style, {
                position: "absolute",
                top: 0,
                left: 0,
                margin: 0,
                border: 0,
                width: "1px",
                height: "1px",
                visibility: "hidden"
            });
            D.innerHTML = "<div style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;'><div></div></div><table style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;' cellpadding='0' cellspacing='0'><tr><td></td></tr></table>";
            A.insertBefore(D, A.firstChild);
            I = D.firstChild;
            Q = I.firstChild;
            U = I.nextSibling.firstChild.firstChild;
            this.doesNotAddBorder = Q.offsetTop !== 5;
            this.doesAddBorderForTableAndCells = U.offsetTop === 5;
            Q.style.position =
                "fixed";
            Q.style.top = "20px";
            this.supportsFixedPosition = Q.offsetTop === 20 || Q.offsetTop === 15;
            Q.style.position = Q.style.top = "";
            I.style.overflow = "hidden";
            I.style.position = "relative";
            this.subtractsBorderForOverflowNotVisible = Q.offsetTop === -5;
            this.doesNotIncludeMarginInBodyOffset = A.offsetTop !== X;
            A.removeChild(D);
            w.offset.initialize = w.noop
        },
        bodyOffset: function (A) {
            var D = A.offsetTop,
                I = A.offsetLeft;
            w.offset.initialize();
            if (w.offset.doesNotIncludeMarginInBodyOffset) {
                D += parseFloat(w.css(A, "marginTop")) || 0;
                I += parseFloat(w.css(A,
                    "marginLeft")) || 0
            }
            return {
                top: D,
                left: I
            }
        },
        setOffset: function (A, D, I) {
            var Q = w.css(A, "position");
            if (Q === "static") A.style.position = "relative";
            var U = w(A),
                X = U.offset(),
                la = w.css(A, "top"),
                ka = w.css(A, "left"),
                xa = Q === "absolute" && w.inArray("auto", [la, ka]) > -1;
            Q = {};
            var Wa = {};
            if (xa) Wa = U.position();
            la = xa ? Wa.top : parseInt(la, 10) || 0;
            ka = xa ? Wa.left : parseInt(ka, 10) || 0;
            if (w.isFunction(D)) D = D.call(A, I, X);
            if (D.top != null) Q.top = D.top - X.top + la;
            if (D.left != null) Q.left = D.left - X.left + ka;
            "using" in D ? D.using.call(A, Q) : U.css(Q)
        }
    };
    w.fn.extend({
        position: function () {
            if (!this[0]) return null;
            var A = this[0],
                D = this.offsetParent(),
                I = this.offset(),
                Q = vb.test(D[0].nodeName) ? {
                    top: 0,
                    left: 0
                } : D.offset();
            I.top -= parseFloat(w.css(A, "marginTop")) || 0;
            I.left -= parseFloat(w.css(A, "marginLeft")) || 0;
            Q.top += parseFloat(w.css(D[0], "borderTopWidth")) || 0;
            Q.left += parseFloat(w.css(D[0], "borderLeftWidth")) || 0;
            return {
                top: I.top - Q.top,
                left: I.left - Q.left
            }
        },
        offsetParent: function () {
            return this.map(function () {
                for (var A = this.offsetParent || C.body; A && !vb.test(A.nodeName) && w.css(A, "position") === "static";) A = A.offsetParent;
                return A
            })
        }
    });
    w.each(["Left", "Top"], function (A, D) {
        var I = "scroll" + D;
        w.fn[I] = function (Q) {
            var U = this[0],
                X;
            if (!U) return null;
            if (Q !== e) return this.each(function () {
                if (X = B(this)) X.scrollTo(!A ? Q : w(X).scrollLeft(), A ? Q : w(X).scrollTop());
                else this[I] = Q
            });
            else return (X = B(U)) ? "pageXOffset" in X ? X[A ? "pageYOffset" : "pageXOffset"] : w.support.boxModel && X.document.documentElement[I] || X.document.body[I] : U[I]
        }
    });
    w.each(["Height", "Width"], function (A, D) {
        var I = D.toLowerCase();
        w.fn["inner" + D] = function () {
            return this[0] ? parseFloat(w.css(this[0],
                I, "padding")) : null
        };
        w.fn["outer" + D] = function (Q) {
            return this[0] ? parseFloat(w.css(this[0], I, Q ? "margin" : "border")) : null
        };
        w.fn[I] = function (Q) {
            var U = this[0];
            if (!U) return Q == null ? null : this;
            if (w.isFunction(Q)) return this.each(function (la) {
                var ka = w(this);
                ka[I](Q.call(this, la, ka[I]()))
            });
            if (w.isWindow(U)) return U.document.compatMode === "CSS1Compat" && U.document.documentElement["client" + D] || U.document.body["client" + D];
            else if (U.nodeType === 9) return Math.max(U.documentElement["client" + D], U.body["scroll" + D], U.documentElement["scroll" +
                D], U.body["offset" + D], U.documentElement["offset" + D]);
            else if (Q === e) {
                U = w.css(U, I);
                var X = parseFloat(U);
                return w.isNaN(X) ? U : X
            } else return this.css(I, typeof Q === "string" ? Q : Q + "px")
        }
    })
})(window);
var loginData = {};
SUPPRESS_ERROR_DISPLAY = false;
XSRF_URL_MATCH = /(\/gui|gui\/|\/modules|cgi)/;
jQuery.ajaxSettings.traditional = true;
$.ajaxSetup({
    cache: false,
    type: "POST",
    dataType: "text",
    timeout: 6E4
});

function printData(a) {
    return a ? typeof a == "string" ? a : $.param(a) : ""
}
_defaultAJAXErrorHandler = function (a, e, f, j) {
    j || (j = {});
    var g = {
        login: "Your login session has expired: Please wait",
        permission: "You do not have the proper permission to complete the operations",
        notfound: "There was an internal error processing your request (Resource Not Found)",
        dynamic: "There was an internal error processing your request (Dynamic Module Error)",
        controller: "There was an internal error processing your request (Contorller Error)",
        timeout: "There was no response from the server",
        other: "There was an internal error processing your request"
    },
        c = function (q) {
            SUPPRESS_ERROR_DISPLAY ? console_log("Error suppressed: ", q) : showError(q)
        }, b = false;
    if (a.readyState === 4) try {
        b = true;
        if (a.responseText !== undefined) b = false
    } catch (l) {
        b = true
    }
    if (!b) {
        if (e == "timeout") c("Server timed out while executing this request");
        else if (a.status == 401)
            if (a.getResponseHeader("X-Reason") == "Role Failed")
                if (loginData.devbox && j.url) c(g.permission + " url: " + j.url + " data: " + printData(j.data));
                else loginData.demo || c(g.permission);
                else {
                    c(g.login);
                    location.reload()
                } else if (a.status ==
            404) loginData.devbox && j.url ? c(g.notfound + " url: " + j.url + " data: " + printData(j.data)) : c(g.notfound);
        else if (a.getResponseHeader("X-Reason") == "Role Failed")
            if (!loginData.demo && loginData.devbox && j.url) c(g.permission + " url: " + j.url + " data: " + printData(j.data));
            else loginData.demo || c(g.permission);
            else if (a.getResponseHeader("X-Error-Source") == "catalyst") {
            b = $.parseJSON(a.responseText);
            if (b.errors)
                for (var o in b.errors) c(b.errors[o]);
            else if (b.error && $.isPlainObject(b.error))
                for (var n in b.error) typeof b.error[n] ===
                    "string" && c(errorTextConvert(b.error[n]));
            else if (b.error) c(b.error);
            else loginData.devbox && j.url ? c(g.controller + " url: " + j.url + " data: " + printData(j.data)) : c(g.controller)
        } else if (a.getResponseHeader("X-Error-Source") == "dynamic") {
            b = $.parseJSON(a.responseText);
            if (b.errors)
                for (o in b.errors) loginData.devbox ? c(b.errors[o].text + " " + b.errors[o].verbose) : c(b.errors[o].text);
            else loginData.devbox && j.url ? c(g.dynamic + " url: " + j.url + " data: " + printData(j.data)) : c(g.dynamic)
        } else a.status == 0 || !a || (loginData.devbox &&
            j.url ? c(g.other + " url: " + j.url + " data: " + printData(j.data)) : c(g.other));
        j.afterError && j.afterError(a, e, f)
    }
};
$.ajax_orig = $.ajax;
$.ajax = function (a) {
    if (!a.error) a.error = function (e, f, j) {
        _defaultAJAXErrorHandler(e, f, j, a)
    };
    if ((!a.data  l = [],
            o;
        for (o in a) a[o].process != null && l.push(a[o]);
        a = l
    }, g = function (l) {
            for (var o in a)
                if (l == a[o].pid) {
                    clearInterval(a[o].processHandler);
                    a[o].processHandler = "";
                    a[o].process = null;
                    j();
                    return true
                }
            return false
        };
    this.deQueueProcess = g;
    this.deQueueAll = function () {
        for (var l in a) {
            clearInterval(a[l].processHandler);
            a[l].processHandler = "";
            a[l].process = null
        }
        j();
        internalLister()
    };
    this.killProcess = function (l) {
        for (var o in a)
            if (l == a[o].pid) {
                clearInterval(a[o].processHandler);
                a[o].processHandler = "";
                return true
            }
        return false
    };
    this.killAll = function () {
        for (var l in a)
            if (a[l].processHander != "") {
                clearInterval(a[l].processHandler);
                a[l].processHandler = ""
            }
    };
    this.startProcess = function (l) {
        for (var o in a)
            if (l == a[o].pid && a[o].processHandler == "") {
                a[o].processHandler = b(a[o]);
                return true
            }
        return false
    };
    this.spawnProcesses = function () {
        for (var l in a)
            if (a[l].processHandler == "") a[l].processHandler = b(a[l])
    };
    var c = function (l, o) {
        this.pid = l;
        this.handler = o
    };
    this.getProcessHandler = function (l) {
        var o = [],
            n;
        for (n in a) l == a[n].process.prototype.constructor.name &&
            o.push(new c(a[n].pid, a[n].processHandler));
        return o.length > 1 ? o : o[0]
    };
    this.stopSpawnedProcess = function (l) {
        var o = false,
            n;
        for (n in a)
            if (l == a[n].process.prototype.constructor.name) {
                clearInterval(a[n].processHandler);
                a[n].processHandler = "";
                o = true
            }
        return o
    };
    var b = function (l) {
        var o = false,
            n, q = 0;
        if (typeof l.priority == "number") n = l.priority;
        else {
            n = 100;
            q = 1
        }
        return setInterval(function () {
            var u = [],
                v;
            for (v in l.args) typeof l.args[v] == "function" ? u.push(l.args[v]()) : u.push(l.args[v]);
            if (!o) {
                o = true;
                l.process.apply(null,
                    u);
                l.cleanup && typeof l.cleanup == "function" && l.cleanup(l.cleanupArgs);
                q && g(l.pid);
                o = false
            }
        }, n)
    }
}

function jSoffGlobal() {
    var a = new AsyncSequencer;
    this.windowMan = new function () {
        this.entity = function () {}
    };
    var e = new function () {
            function c(v) {
                return o.lastCC[v] || 0
            }

            function b(v) {
                var x = 0;
                if (o.bindings[v] && "count" in o.bindings[v]) x += o.bindings[v].count;
                if (o.contextBindings[v] && "length" in o.contextBindings[v]) x += o.contextBindings[v].length;
                if (o.bindings[v])
                    for (var z in o.bindings[v])
                        if (z != "count") x += o.bindings[v][z].length;
                z = c(v);
                o.lastCC[v] = x;
                u(v, x, z)
            }

            function l(v, x) {
                var z = false;
                if (!v) return false;
                var B = [],
                    C;
                for (C in v)
                    if (v[C] != x) B.push(v[C]);
                    else z = true;
                return z ? B : undefined
            }
            var o = {
                lastCC: {},
                bindings: {},
                globalBindings: [],
                contextBindings: {}
            }, n = "none",
                q = 0,
                u = function () {};
            this.contextUseCount = c;
            this.lastError = function () {
                return n
            };
            this.onContextChange = function (v) {
                if (typeof v != "function") {
                    n = "INVALID FUNCTION!";
                    return false
                }
                u = v;
                return true
            };
            this.unBind = function (v) {
                if (typeof v == "object" && "length" in v) {
                    var x = false,
                        z;
                    for (z in v)
                        if (this.unBind(v[z])) x = true;
                    return x
                }
                z = undefined;
                if (x = o.globalBindings)
                    if (z = l(x,
                        v)) {
                        delete o.globalBindings;
                        o.globalBindings = z;
                        return true
                    }
                if (!z)
                    if (x = o.contextBindings[v.context])
                        if (z = l(x, v)) {
                            delete o.contextBindings[v.context];
                            o.contextBindings[v.context] = z;
                            b(v.context);
                            return true
                        }
                if (!z && o.bindings[v.context])
                    if (x = o.bindings[v.context][v.name])
                        if (z = l(x, v)) {
                            delete o.bindings[v.context][v.name];
                            o.bindings[v.context][v.name] = z;
                            b(v.context)
                        }
                return z ? true : false
            };
            this.reserveContext = function (v) {
                if (!v || typeof v != "string") {
                    n = "Missing context or invalid type";
                    return false
                }
                o.bindings[v] ||
                    (o.bindings[v] = {
                    count: 0
                });
                o.bindings[v].count++;
                b(v);
                return true
            };
            this.unReserveContext = function (v) {
                if (!v || typeof v != "string") {
                    n = "Missing context or invalid type";
                    return false
                }
                if (!o.bindings[v]) {
                    n = "Non-existant context";
                    return false
                }
                o.bindings[v].count--;
                if (o.bindings[v].count < 0) o.bindings[v].count = 0;
                b(v)
            };
            this.bindGlobal = function (v, x) {
                if (!v || typeof v != "function") n = "Missing callBack or invalid type";
                else {
                    var z = {
                        name: "ALL",
                        context: "ALL",
                        callBack: v,
                        userData: x,
                        nodeID: ++q
                    };
                    o.globalBindings.push(z);
                    return z
                }
            };
            this.bindContext = function (v, x, z) {
                if (typeof v == "object") {
                    var B = [],
                        C;
                    for (C in v) {
                        B.push(this.bindContext(v[C], x, z));
                        b(v[C])
                    }
                    return B
                }
                if (!v || typeof v != "string") n = "Missing context or invalid type " + typeof v;
                else if (!x || typeof x != "function") n = "Missing callBack or invalid type";
                else {
                    x = {
                        name: "ALL",
                        context: v,
                        callBack: x,
                        userData: z,
                        nodeID: ++q
                    };
                    o.contextBindings[v] || (o.contextBindings[v] = []);
                    o.contextBindings[v].push(x);
                    b(v);
                    return x
                }
            };
            this.bind = function (v, x, z, B) {
                if (!v || typeof v != "string") n = "Missing context or invalid type";
                else {
                    if (typeof x == "object") {
                        var C = [],
                            w;
                        for (w in x) {
                            C.push(this.bind(v, x[w], z, B));
                            b(v)
                        }
                        return C
                    }
                    if (!x || typeof x != "string") n = "Missing name or invaild type";
                    else if (!z || typeof z != "function") n = "Missing callBack or invalid type";
                    else {
                        o.bindings[v] || (o.bindings[v] = {
                            count: 0
                        });
                        o.bindings[v][x] || (o.bindings[v][x] = []);
                        z = {
                            name: x,
                            context: v,
                            callBack: z,
                            userData: B,
                            nodeID: ++q
                        };
                        o.bindings[v][x].push(z);
                        b(z.context);
                        return z
                    }
                }
            };
            this.event = function (v, x) {
                function z(B, C) {
                    for (var w = B.length, G = 0, J = 0; J < w; J++) {
                        B[J].callBack(C,
                            B[J].userData);
                        G++
                    }
                    G && a.spawnProcesses();
                    return G
                }
                if (!v || typeof v != "string") {
                    n = "Missing context or invalid type";
                    return false
                }
                if (!x || typeof x != "string") {
                    n = "Missing name or invaild type";
                    return false
                }
                this.name = x;
                this.context = v;
                this.destroy = function () {
                    delete this.body;
                    delete this.name;
                    delete this.context;
                    delete this.fire;
                    this.error = "This event has already been fired."
                };
                this.fire = function () {
                    var B, C = 0;
                    if (this.error) return false;
                    if (B = o.globalBindings) C += z(B, this);
                    if (B = o.contextBindings[this.context]) C +=
                        z(B, this);
                    if (o.bindings[this.context])
                        if (B = o.bindings[this.context][this.name]) C += z(B, this);
                    return C
                };
                if (o.globalBindings.length == 0 && (!o.contextBindings[this.context] || o.contextBindings[this.context].length == 0))
                    if (!o.bindings[this.context] || !o.bindings[this.context][this.name] && !o.bindings[this.context]._ALL) {
                        this.error = n = "no binding exists for this context/name " + this.context + "/" + this.name;
                        return false
                    }
                return true
            }
        };
    this.eventSys = e;
    var f = function () {
        var c = {}, b = [];
        this.reorder = function (l) {
            b = l;
            l = c;
            c = {};
            for (var o = b.length, n = 0; n < o; n++) {
                var q = b[n];
                if (l[q]) {
                    c[q] = l[q];
                    delete l[q]
                }
            }
        };
        this.clear = function () {
            b = c = undefined;
            c = {};
            b = []
        };
        this.add = function (l, o, n) {
            if (!c[l])
                if (n < 0 || n >= b.length) b.push(l);
                else {
                    for (var q = 0, u = [], v = b.length, x = 0; x < v; x++) {
                        q++ == n && u.push(l);
                        u.push(b[x])
                    }
                    b = undefined;
                    b = u
                }
            c[l] = o
        };
        this.del = function (l) {
            if (c[l]) {
                for (var o = b, n = [], q = o.length, u = 0; u < q; u++) o[u] != l && n.push(o[u]);
                b = n;
                delete c[l]
            }
        };
        this.get = function (l) {
            return c[l]
        };
        this.order = function () {
            return b
        };
        this.hash = function () {
            return c
        };
        this.indexOf = function (l) {
            for (var o = b.length, n = 0; n < o; n++)
                if (b[n] == l) return n
        };
        this.arrayLen = function () {
            return b.length
        };
        this.asArray = function () {
            for (var l = [], o = b.length, n = 0; n < o; n++) l.push(c[b[n]]);
            return l
        };
        this.each = function (l) {
            for (var o = b.length, n = 0; n < o; n++) l(b[n], c[b[n]])
        };
        this.dump = function (l) {
            var o = new String;
            this.each(function (n, q) {
                o += "name: " + n + " val: " + JSON.stringify(q) + (l ? "<br>" : "\n")
            });
            return o
        }
    }, j = function (c, b) {
            var l = c.json;
            switch (l.action) {
            case "init":
                b.init(l.wireSerno, l.data, l.hashKey,
                    parseInt(l.arrIndex));
                break;
            case "add":
                b.add(l.wireSerno, l.data, l.hashKey, parseInt(l.arrIndex));
                break;
            case "modify":
                b.modify(l.wireSerno, l.data, l.hashKey, parseInt(l.arrIndex));
                break;
            case "del":
                b.del(l.wireSerno, l.hashKey, parseInt(l.arrIndex));
                break;
            case "clear":
                b.clear();
                break;
            case "reorder":
                b.reorder(l.wireSerno, l.order);
                break;
            default:
                b.checkSerno(l.wireSerno) && b.onChange && b.onChange(b, {
                    serno: l.wireSerno,
                    action: l.action,
                    data: l.data
                })
            }
        }, g = function (c, b, l) {
            var o = 0,
                n = null;
            f.call(this);
            this._add = this.add;
            this._del = this.del;
            this._reorder = this.reorder;
            this._clear = this.clear;
            this.context = c;
            this.name = b;
            this.user_obj = l;
            this.clear = function () {
                this._clear();
                o = 0;
                this.onChange && this.onChange(this, {
                    action: "clear"
                })
            };
            this.checkSerno = function (q) {
                if (q < 0) return true;
                if (o > 0 && q != o + 1) {
                    this.onErr && this.onErr(this, {
                        lastSerno: o,
                        serno: q
                    });
                    this.bootstrap(this.user_obj);
                    return false
                } else {
                    o = q;
                    return true
                }
            };
            this.reorder = function (q, u) {
                if (this.checkSerno(q)) {
                    this._reorder(u);
                    this.onChange && this.onChange(this, {
                        serno: q,
                        action: "reorder"
                    })
                }
            };
            this.init = function (q, u, v, x) {
                if (v === null || v === undefined) v = q;
                this.checkSerno(q) && this.onChange && this.onChange(this, {
                    serno: q,
                    action: "init",
                    index: x,
                    key: v,
                    data: u
                })
            };
            this.add = function (q, u, v, x) {
                if (v === null || v === undefined) v = q;
                if (this.checkSerno(q)) {
                    this._add(v, u, x);
                    this.onChange && this.onChange(this, {
                        serno: q,
                        action: "add",
                        index: x,
                        key: v,
                        data: u
                    })
                }
            };
            this.modify = function (q, u, v, x) {
                if (v === null || v === undefined) v = q;
                if (this.checkSerno(q)) {
                    this._add(v, u, x);
                    this.onChange && this.onChange(this, {
                        serno: q,
                        action: "modify",
                        key: v,
                        data: u,
                        index: x
                    })
                }
            };
            this.del = function (q, u, v) {
                if (u === null || u === undefined) u = q;
                if (this.checkSerno(q)) {
                    if (v === null || v < 0 || v === undefined) v = this.indexOf(u);
                    this._del(u);
                    this.onChange && this.onChange(this, {
                        serno: q,
                        action: "del",
                        key: u,
                        index: v
                    })
                }
            };
            if (c) n = b ? e.bind(c, b, j, this) : e.bindContext(c, j, this);
            this.destroy = function () {
                this._clear();
                e.unBind(n);
                clearTimeout(this.hb_pid)
            };
            this.bootstrap = function (q) {
                var u = this;
                u.clear();
                Ape.broadcast({
                    liveArray: {
                        command: "bootstrap",
                        context: u.context,
                        name: u.name,
                        obj: q
                    }
                });
                u.hb_pid =
                    setTimeout(function () {
                        u.heartbeat.call(u, q)
                    }, 3E4)
            };
            this.changepage = function (q) {
                this.clear();
                Ape.broadcast({
                    liveArray: {
                        command: "changepage",
                        context: this.context,
                        name: this.name,
                        obj: q
                    }
                })
            };
            this.heartbeat = function (q) {
                var u = this;
                Ape.broadcast({
                    liveArray: {
                        command: "heartbeat",
                        context: u.context,
                        name: u.name,
                        obj: q
                    }
                });
                u.hb_pid = setTimeout(function () {
                    u.heartbeat.call(u, q)
                }, 3E4)
            };
            this.bootstrap(this.user_obj)
        };
    this.liveArray = g;
    this.liveTable = function (c, b, l, o) {
        var n = undefined;
        l = l;
        o = o;
        var q = new g(c, b);
        this.liveArray =
            q;
        this.dataTable = n;
        this.destroy = function () {
            n && n.fnDestroy();
            q && q.destroy();
            delete n;
            delete q;
            q = n = null
        };
        q.onErr = function (u, v) {
            console_log("Error: ", u, v)
        };
        q.onChange = function (u, v) {
            var x;
            if (!n) {
                if (!o.aoColumns) {
                    if (v.action != "init") return;
                    o.aoColumns = [];
                    for (var z in v.data) o.aoColumns.push({
                        sTitle: v.data[z]
                    })
                }
                n = l.dataTable(o)
            }
            if (n && (v.action == "del" || v.action == "modify")) {
                x = v.index;
                if (x == undefined && v.key) x = q.indexOf(v.key)
            }
            try {
                switch (v.action) {
                case "add":
                    if (!v.data) return;
                    if (v.pos > -1) {
                        n.fnClearTable();
                        n.fnAddData(u.asArray())
                    } else n.fnAddData(v.data);
                    break;
                case "modify":
                    if (!v.data) return;
                    n.fnUpdate(v.data, x);
                    break;
                case "del":
                    n.fnDeleteRow(x);
                    break;
                case "clear":
                    n.fnClearTable();
                    break;
                case "reorder":
                    n.fnClearTable();
                    n.fnAddData(u.asArray());
                    break;
                case "hide":
                    l.hide();
                    break;
                case "show":
                    l.show()
                }
            } catch (B) {
                u.bootstrap(u.user_obj);
                console_log("ERROR: " + B)
            }
            o.onChange && o.onChange(u, v)
        }
    };
    this.liveComplete = function (c, b, l) {
        var o;
        e.bind(c, b, function (n) {
            o(n.json.matches)
        });
        l.autocomplete({
            source: function (n,
                q) {
                o = q;
                Ape.broadcast({
                    Complete: {
                        command: "complete",
                        text: n.term,
                        context: c,
                        name: b
                    }
                })
            }
        })
    }
}
jSoff = new jSoffGlobal;
ERROR_KEY_TO_VALUE = {
    en_US: {
        PHONE_ALREADY_ASSIGNED: "This phone already exists on the system, and cannot be added again"
    }
};

function errorTextConvert(a, e) {
    return ERROR_KEY_TO_VALUE[e || "en_US"][a] || a
};
var swfobject = function () {
    function a() {
        if (!db) {
            try {
                var P = O.getElementsByTagName("body")[0].appendChild(O.createElement("span"));
                P.parentNode.removeChild(P)
            } catch (T) {
                return
            }
            db = true;
            P = qa.length;
            for (var ba = 0; ba < P; ba++) qa[ba]()
        }
    }

    function e(P) {
        if (db) P();
        else qa[qa.length] = P
    }

    function f(P) {
        if (typeof R.addEventListener != G) R.addEventListener("load", P, false);
        else if (typeof O.addEventListener != G) O.addEventListener("load", P, false);
        else if (typeof R.attachEvent != G) x(R, "onload", P);
        else if (typeof R.onload == "function") {
            var T =
                R.onload;
            R.onload = function () {
                T();
                P()
            }
        } else R.onload = P
    }

    function j() {
        var P = O.getElementsByTagName("body")[0],
            T = O.createElement(J);
        T.setAttribute("type", E);
        var ba = P.appendChild(T);
        if (ba) {
            var ga = 0;
            (function () {
                if (typeof ba.GetVariable != G) {
                    var W = ba.GetVariable("$version");
                    if (W) {
                        W = W.split(" ")[1].split(",");
                        Pa.pv = [parseInt(W[0], 10), parseInt(W[1], 10), parseInt(W[2], 10)]
                    }
                } else if (ga < 10) {
                    ga++;
                    setTimeout(arguments.callee, 10);
                    return
                }
                P.removeChild(T);
                ba = null;
                g()
            })()
        } else g()
    }

    function g() {
        var P = Na.length;
        if (P > 0)
            for (var T =
                0; T < P; T++) {
                var ba = Na[T].id,
                    ga = Na[T].callbackFn,
                    W = {
                        success: false,
                        id: ba
                    };
                if (Pa.pv[0] > 0) {
                    var Ea = v(ba);
                    if (Ea)
                        if (z(Na[T].swfVersion) && !(Pa.wk && Pa.wk < 312)) {
                            C(ba, true);
                            if (ga) {
                                W.success = true;
                                W.ref = c(ba);
                                ga(W)
                            }
                        } else if (Na[T].expressInstall && b()) {
                        W = {};
                        W.data = Na[T].expressInstall;
                        W.width = Ea.getAttribute("width") || "0";
                        W.height = Ea.getAttribute("height") || "0";
                        if (Ea.getAttribute("class")) W.styleclass = Ea.getAttribute("class");
                        if (Ea.getAttribute("align")) W.align = Ea.getAttribute("align");
                        var za = {};
                        Ea = Ea.getElementsByTagName("param");
                        for (var Ka = Ea.length, sa = 0; sa < Ka; sa++)
                            if (Ea[sa].getAttribute("name").toLowerCase() != "movie") za[Ea[sa].getAttribute("name")] = Ea[sa].getAttribute("value");
                        l(W, za, ba, ga)
                    } else {
                        o(Ea);
                        ga && ga(W)
                    }
                } else {
                    C(ba, true);
                    if (ga) {
                        if ((ba = c(ba)) && typeof ba.SetVariable != G) {
                            W.success = true;
                            W.ref = ba
                        }
                        ga(W)
                    }
                }
            }
    }

    function c(P) {
        var T = null;
        if ((P = v(P)) && P.nodeName == "OBJECT")
            if (typeof P.SetVariable != G) T = P;
            else if (P = P.getElementsByTagName(J)[0]) T = P;
        return T
    }

    function b() {
        return !eb && z("6.0.65") && (Pa.win || Pa.mac) && !(Pa.wk && Pa.wk < 312)
    }

    function l(P, T, ba, ga) {
        eb = true;
        jb = ga || null;
        Fa = {
            success: false,
            id: ba
        };
        var W = v(ba);
        if (W) {
            if (W.nodeName == "OBJECT") {
                $a = n(W);
                fb = null
            } else {
                $a = W;
                fb = ba
            }
            P.id = M;
            if (typeof P.width == G || !/%$/.test(P.width) && parseInt(P.width, 10) < 310) P.width = "310";
            if (typeof P.height == G || !/%$/.test(P.height) && parseInt(P.height, 10) < 137) P.height = "137";
            O.title = O.title.slice(0, 47) + " - Flash Player Installation";
            ga = Pa.ie && Pa.win ? "ActiveX" : "PlugIn";
            ga = "MMredirectURL=" + R.location.toString().replace(/&/g, "%26") + "&MMplayerType=" + ga + "&MMdoctitle=" +
                O.title;
            if (typeof T.flashvars != G) T.flashvars += "&" + ga;
            else T.flashvars = ga; if (Pa.ie && Pa.win && W.readyState != 4) {
                ga = O.createElement("div");
                ba += "SWFObjectNew";
                ga.setAttribute("id", ba);
                W.parentNode.insertBefore(ga, W);
                W.style.display = "none";
                (function () {
                    W.readyState == 4 ? W.parentNode.removeChild(W) : setTimeout(arguments.callee, 10)
                })()
            }
            q(P, T, ba)
        }
    }

    function o(P) {
        if (Pa.ie && Pa.win && P.readyState != 4) {
            var T = O.createElement("div");
            P.parentNode.insertBefore(T, P);
            T.parentNode.replaceChild(n(P), T);
            P.style.display = "none";
            (function () {
                P.readyState == 4 ? P.parentNode.removeChild(P) : setTimeout(arguments.callee, 10)
            })()
        } else P.parentNode.replaceChild(n(P), P)
    }

    function n(P) {
        var T = O.createElement("div");
        if (Pa.win && Pa.ie) T.innerHTML = P.innerHTML;
        else if (P = P.getElementsByTagName(J)[0])
            if (P = P.childNodes)
                for (var ba = P.length, ga = 0; ga < ba; ga++)!(P[ga].nodeType == 1 && P[ga].nodeName == "PARAM") && P[ga].nodeType != 8 && T.appendChild(P[ga].cloneNode(true));
        return T
    }

    function q(P, T, ba) {
        var ga, W = v(ba);
        if (Pa.wk && Pa.wk < 312) return ga;
        if (W) {
            if (typeof P.id ==
                G) P.id = ba;
            if (Pa.ie && Pa.win) {
                var Ea = "",
                    za;
                for (za in P)
                    if (P[za] != Object.prototype[za])
                        if (za.toLowerCase() == "data") T.movie = P[za];
                        else if (za.toLowerCase() == "styleclass") Ea += ' class="' + P[za] + '"';
                else if (za.toLowerCase() != "classid") Ea += " " + za + '="' + P[za] + '"';
                za = "";
                for (var Ka in T)
                    if (T[Ka] != Object.prototype[Ka]) za += '<param name="' + Ka + '" value="' + T[Ka] + '" />';
                W.outerHTML = '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"' + Ea + ">" + za + "</object>";
                pa[pa.length] = P.id;
                ga = v(P.id)
            } else {
                Ka = O.createElement(J);
                Ka.setAttribute("type", E);
                for (var sa in P)
                    if (P[sa] != Object.prototype[sa])
                        if (sa.toLowerCase() == "styleclass") Ka.setAttribute("class", P[sa]);
                        else sa.toLowerCase() != "classid" && Ka.setAttribute(sa, P[sa]);
                for (Ea in T)
                    if (T[Ea] != Object.prototype[Ea] && Ea.toLowerCase() != "movie") {
                        P = Ka;
                        za = Ea;
                        sa = T[Ea];
                        ba = O.createElement("param");
                        ba.setAttribute("name", za);
                        ba.setAttribute("value", sa);
                        P.appendChild(ba)
                    }
                W.parentNode.replaceChild(Ka, W);
                ga = Ka
            }
        }
        return ga
    }

    function u(P) {
        var T = v(P);
        if (T && T.nodeName == "OBJECT")
            if (Pa.ie &&
                Pa.win) {
                T.style.display = "none";
                (function () {
                    if (T.readyState == 4) {
                        var ba = v(P);
                        if (ba) {
                            for (var ga in ba)
                                if (typeof ba[ga] == "function") ba[ga] = null;
                            ba.parentNode.removeChild(ba)
                        }
                    } else setTimeout(arguments.callee, 10)
                })()
            } else T.parentNode.removeChild(T)
    }

    function= G) T.flashvars += "&" + ga;
            else T.flashvars = ga; if (Pa.ie && Pa.win && W.readyState != 4) {
                ga = O.createElement("div");
                ba += "SWFObjectNew";
                ga.setAttribute("id", ba);
                W.parentNode.insertBefore(ga, W);
                W.style.display = "none";
                (function () {
                    W.readyState == 4 ? W.parentNode.removeChild(W) : setTimeout(arguments.callee, 10)
                })()
            }
            q(P, T, ba)
        }
    }

    function o(P) {
        if (Pa.ie && Pa.win && P.readyState != 4) {
            var T = O.createElement("div");
            P.parentNode.insertBefore(T, P);
            T.parentNode.replaceChild(n(P), T);
            P.style.display = "none";
            (function () {
                P.readyState == 4 ? P.parentNode.removeChild(P) : setTimeout(arguments.callee, 10)
            })()
        } else P.parentNode.replaceChild(n(P), P)
    }

    function n(P) {
        var T = O.createElement("div");
        if (Pa.win && Pa.ie) T.innerHTML = P.innerHTML;
        else if (P = P.getElementsByTagName(J)[0])
            if (P = P.childNodes)
                for (var ba = P.length, ga = 0; ga < ba; ga++)!(P[ga].nodeType == 1 && P[ga].nodeName == "PARAM") && P[ga].nodeType != 8 && T.appendChild(P[ga].cloneNode(true));
        return T
    }

    function q(P, T, ba) {
        var ga, W = v(ba);
        if (Pa.wk && Pa.wk < 312) return ga;
        if (W) {
            if (typeof P.id ==
                G) P.id = ba;
            if (Pa.ie && Pa.win) {
                var Ea = "",
                    za;
                for (za in P)
                    if (P[za] != Object.prototype[za])
                        if (za.toLowerCase() == "data") T.movie = P[za];
                        else if (za.toLowerCase() == "styleclass") Ea += ' class="' + P[za] + '"';
                else if (za.toLowerCase() != "classid") Ea += " " + za + '="' + P[za] + '"';
                za = "";
                for (var Ka in T)
                    if (T[Ka] != Object.prototype[Ka]) za += '<param name="' + Ka + '" value="' + T[Ka] + '" />';
                W.outerHTML = '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"' + Ea + ">" + za + "</object>";
                pa[pa.length] = P.id;
                ga = v(P.id)
            } else {
                Ka = O.createElement(J);
                Ka.setAttribute("type", E);
                for (var sa in P)
                    if (P[sa] != Object.prototype[sa])
                        if (sa.toLowerCase() == "styleclass") Ka.setAttribute("class", P[sa]);
                        else sa.toLowerCase() != "classid" && Ka.setAttribute(sa, P[sa]);
                for (Ea in T)
                    if (T[Ea] != Object.prototype[Ea] && Ea.toLowerCase() != "movie") {
                        P = Ka;
                        za = Ea;
                        sa = T[Ea];
                        ba = O.createElement("param");
                        ba.setAttribute("name", za);
                        ba.setAttribute("value", sa);
                        P.appendChild(ba)
                    }
                W.parentNode.replaceChild(Ka, W);
                ga = Ka
            }
        }
        return ga
    }

    function u(P) {
        var T = v(P);
        if (T && T.nodeName == "OBJECT")
            if (Pa.ie &&
                Pa.win) {
                T.style.display = "none";
                (function () {
                    if (T.readyState == 4) {
                        var ba = v(P);
                        if (ba) {
                            for (var ga in ba)
                                if (typeof ba[ga] == "function") ba[ga] = null;
                            ba.parentNode.removeChild(ba)
                        }
                    } else setTimeout(arguments.callee, 10)
                })()
            } else T.parentNode.removeChild(T)
    }

    function v(P) {
        var T = null;
        try {
            T = O.getElementById(P)
        } catch (ba) {}
        return T
    }

    function x(P, T, ba) {
        P.attachEvent(T, ba);
        La[La.length] = [P, T, ba]
    }

    function z(P) {
        var T = Pa.pv;
        P = P.split(".");
        P[0] = parseInt(P[0], 10);
        P[1] = parseInt(P[1], 10) || 0;
        P[2] = parseInt(P[2], 10) || 0;
        return T[0] >
            P[0] || T[0] == P[0] && T[1] > P[1] || T[0] == P[0] && T[1] == P[1] && T[2] >= P[2] ? true : false
    }

    function B(P, T, ba, ga) {
        if (!(Pa.ie && Pa.mac)) {
            var W = O.getElementsByTagName("head")[0];
            if (W) {
                ba = ba && typeof ba == "string" ? ba : "screen";
                if (ga) rb = ab = null;
                if (!ab || rb != ba) {
                    ga = O.createElement("style");
                    ga.setAttribute("type", "text/css");
                    ga.setAttribute("media", ba);
                    ab = W.appendChild(ga);
                    if (Pa.ie && Pa.win && typeof O.styleSheets != G && O.styleSheets.length > 0) ab = O.styleSheets[O.styleSheets.length - 1];
                    rb = ba
                }
                if (Pa.ie && Pa.win) ab && typeof ab.addRule ==
                    J && ab.addRule(P, T);
                else ab && typeof O.createTextNode != G && ab.appendChild(O.createTextNode(P + " {" + T + "}"))
            }
        }
    }

    function C(P, T) {
        if (xb) {
            var ba = T ? "visible" : "hidden";
            if (db && v(P)) v(P).style.visibility = ba;
            else B("#" + P, "visibility:" + ba)
        }
    }

    function w(P) {
        return /[\\\"<>\.;]/.exec(P) != null && typeof encodeURIComponent != G ? encodeURIComponent(P) : P
    }
    var G = "undefined",
        J = "object",
        E = "application/x-shockwave-flash",
        M = "SWFObjectExprInst",
        R = window,
        O = document,
        Y = navigator,
        na = false,
        qa = [
            function () {
                na ? j() : g()
            }
        ],
        Na = [],
        pa = [],
        La = [],
        $a,
        fb, jb, Fa, db = false,
        eb = false,
        ab, rb, xb = true,
        Pa = function () {
            var P = typeof O.getElementById != G && typeof O.getElementsByTagName != G && typeof O.createElement != G,
                T = Y.userAgent.toLowerCase(),
                ba = Y.platform.toLowerCase(),
                ga = ba ? /win/.test(ba) : /win/.test(T);
            ba = ba ? /mac/.test(ba) : /mac/.test(T);
            T = /webkit/.test(T) ? parseFloat(T.replace(/^.*webkit\/(\d+(\.\d+)?).*$/, "$1")) : false;
            var W = !+"\u000b1",
                Ea = [0, 0, 0],
                za = null;
            if (typeof Y.plugins != G && typeof Y.plugins["Shockwave Flash"] == J) {
                if ((za = Y.plugins["Shockwave Flash"].description) && !(typeof Y.mimeTypes != G && Y.mimeTypes[E] && !Y.mimeTypes[E].enabledPlugin)) {
                    na = true;
                    W = false;
                    za = za.replace(/^.*\s+(\S+\s+\S+$)/, "$1");
                    Ea[0] = parseInt(za.replace(/^(.*)\..*$/, "$1"), 10);
                    Ea[1] = parseInt(za.replace(/^.*\.(.*)\s.*$/, "$1"), 10);
                    Ea[2] = /[a-zA-Z]/.test(za) ? parseInt(za.replace(/^.*[a-zA-Z]+(.*)$/, "$1"), 10) : 0
                }
            } else if (typeof R.ActiveXObject != G) try {
                var Ka = new ActiveXObject("ShockwaveFlash.ShockwaveFlash");
                if (Ka)
                    if (za = Ka.GetVariable("$version")) {
                        W = true;
                        za = za.split(" ")[1].split(",");
                        Ea = [parseInt(za[0],
                            10), parseInt(za[1], 10), parseInt(za[2], 10)]
                    }
            } catch (sa) {}
            return {
                w3: P,
                pv: Ea,
                wk: T,
                ie: W,
                win: ga,
                mac: ba
            }
        }();
    (function () {
        if (Pa.w3) {
            if (typeof O.readyState != G && O.readyState == "complete" || typeof O.readyState == G && (O.getElementsByTagName("body")[0] || O.body)) a();
            if (!db) {
                typeof O.addEventListener != G && O.addEventListener("DOMContentLoaded", a, false);
                if (Pa.ie && Pa.win) {
                    O.attachEvent("onreadystatechange", function () {
                        if (O.readyState == "complete") {
                            O.detachEvent("onreadystatechange", arguments.callee);
                            a()
                        }
                    });
                    R == top && function () {
                        if (!db) {
                            try {
                                O.documentElement.doScroll("left")
                            } catch (P) {
                                setTimeout(arguments.callee,
                                    0);
                                return
                            }
                            a()
                        }
                    }()
                }
                Pa.wk && function () {
                    db || (/loaded|complete/.test(O.readyState) ? a() : setTimeout(arguments.callee, 0))
                }();
                f(a)
            }
        }
    })();
    (function () {
        Pa.ie && Pa.win && window.attachEvent("onunload", function () {
            for (var P = La.length, T = 0; T < P; T++) La[T][0].detachEvent(La[T][1], La[T][2]);
            P = pa.length;
            for (T = 0; T < P; T++) u(pa[T]);
            for (var ba in Pa) Pa[ba] = null;
            Pa = null;
            for (var ga in swfobject) swfobject[ga] = null;
            swfobject = null
        })
    })();
    return {
        registerObject: function (P, T, ba, ga) {
            if (Pa.w3 && P && T) {
                var W = {};
                W.id = P;
                W.swfVersion = T;
                W.expressInstall =
                    ba;
                W.callbackFn = ga;
                Na[Na.length] = W;
                C(P, false)
            } else ga && ga({
                success: false,
                id: P
            })
        },
        getObjectById: function (P) {
            if (Pa.w3) return c(P)
        },
        embedSWF: function (P, T, ba, ga, W, Ea, za, Ka, sa, Oa) {
            var Va = {
                success: false,
                id: T
            };
            if (Pa.w3 && !(Pa.wk && Pa.wk < 312) && P && T && ba && ga && W) {
                C(T, false);
                e(function () {
                    ba += "";
                    ga += "";
                    var gb = {};
                    if (sa && typeof sa === J)
                        for (var Ga in sa) gb[Ga] = sa[Ga];
                    gb.data = P;
                    gb.width = ba;
                    gb.height = ga;
                    Ga = {};
                    if (Ka && typeof Ka === J)
                        for (var Qa in Ka) Ga[Qa] = Ka[Qa];
                    if (za && typeof za === J)
                        for (var ob in za)
                            if (typeof Ga.flashvars !=
                                G) Ga.flashvars += "&" + ob + "=" + za[ob];
                            else Ga.flashvars = ob + "=" + za[ob];
                    if (z(W)) {
                        Qa = q(gb, Ga, T);
                        gb.id == T && C(T, true);
                        Va.success = true;
                        Va.ref = Qa
                    } else if (Ea && b()) {
                        gb.data = Ea;
                        l(gb, Ga, T, Oa);
                        return
                    } else C(T, true);
                    Oa && Oa(Va)
                })
            } else Oa && Oa(Va)
   odeType == 1 && q.tagName.toLowerCase() == "param" && q.name.toLowerCase() == "flashvars" && q.value.indexOf(g) >= 0) {
                        FABridge.attachBridge(j[l], a);
                        b = true;
                        break
                    }
                }
                if (b) break
            }
        if (!b && f > 1)
            for (j = 0; j < f; j++)
                if (e[j].attributes.getNamedItem("flashVars").nodeValue.indexOf(g) >= 0) {
                    FABridge.attachBridge(e[j], a);
                    break
                }
    }
    return true
}
FABridge.nextBridgeID = 0;
FABridge.instances = {};
FABridge.idMap = {};
FABridge.refCount = 0;
FABridge.extractBridgeFromID = function (a) {
    return FABridge.idMap[a >> 16]
};
FABridge.attachBridge = function (a, e) {
    var f = new FABridge(a, e);
    FABridge[e] = f;
    var j = FABridge.initCallbacks[e];
    if (j != null) {
        for (var g = 0; g < j.length; g++) j[g].call(f);
        delete FABridge.initCallbacks[e]
    }
};
FABridge.blockedMethods = {
    toString: true,
    get: true,
    set: true,
    call: true
};
FABridge.prototype = {
    root: function () {
        return this.deserialize(this.target.getRoot())
    },
    releaseASObjects: function () {
        return this.target.releaseASObjects()
    },
    releaseNamedASObject: function (a) {
        return typeof a != "object" ? false : this.target.releaseNamedASObject(a.fb_instance_id)
    },
    create: function (a) {
        return this.deserialize(this.target.create(a))
    },
    makeID: function (a) {
        return (this.bridgeID << 16) + a
    },
    getPropertyFromAS: function (a, e) {
        if (FABridge.refCount > 0) throw Error("You are trying to call recursively into the Flash Player which is not allowed. In most cases the JavaScript setTimeout function, can be used as a workaround.");
        else {
            FABridge.refCount++;
            retVal = this.target.getPropFromAS(a, e);
            retVal = this.handleError(retVal);
            FABridge.refCount--;
            return retVal
        }
    },
    setPropertyInAS: function (a, e, f) {
        if (FABridge.refCount > 0) throw Error("You are trying to call recursively into the Flash Player which is not allowed. In most cases the JavaScript setTimeout function, can be used as a workaround.");
        else {
            FABridge.refCount++;
            retVal = this.target.setPropInAS(a, e, this.serialize(f));
            retVal = this.handleError(retVal);
            FABridge.refCount--;
            return retVal
        }
    },
    callASFunction: function (a, e) {
        if (FABridge.refCount > 0) throw Error("You are trying to call recursively into the Flash Player which is not allowed. In most cases the JavaScript setTimeout function, can be used as a workaround.");
        else {
            FABridge.refCount++;
            retVal = this.target.invokeASFunction(a, this.serialize(e));
            retVal = this.handleError(retVal);
            FABridge.refCount--;
            return retVal
        }
    },
    callASMethod: function (a, e, f) {
        if (FABridge.refCount > 0) throw Error("You are trying to call recursively into the Flash Player which is not allowed. In most cases the JavaScript setTimeout function, can be used as a workaround.");
        else {
            FABridge.refCount++;
            f = this.serialize(f);
            retVal = this.target.invokeASMethod(a, e, f);
            retVal = this.handleError(retVal);
            FABridge.refCount--;
            return retVal
        }
    },
    invokeLocalFunction: function (a, e) {
        var f, j = this.localFunctionCache[a];
        if (j != undefined) f = this.serialize(j.apply(null, this.deserialize(e)));
        return f
    },
    getTypeFromName: function (a) {
        return this.remoteTypeCache[a]
    },
    createProxy: function (a, e) {
        var f = this.getTypeFromName(e);
        instanceFactory.prototype = f;
        f = new instanceFactory(a);
        return this.remoteInstanceCache[a] =
            f
    },
    getProxy: function (a) {
        return this.remoteInstanceCache[a]
    },
    addTypeDataToCache: function (a) {
        for (var e = new ASProxy(this, a.name), f = a.accessors, j = 0; j < f.length; j++) this.addPropertyToType(e, f[j]);
        a = a.methods;
        for (j = 0; j < a.length; j++) FABridge.blockedMethods[a[j]] == undefined && this.addMethodToType(e, a[j]);
        return this.remoteTypeCache[e.typeName] = e
    },
    addPropertyToType: function (a, e) {
        var f = e.charAt(0),
            j;
        if (f >= "a" && f <= "z") {
            j = "get" + f.toUpperCase() + e.substr(1);
            f = "set" + f.toUpperCase() + e.substr(1)
        } else {
            j = "get" + e;
            f = "set" +
                e
        }
        a[f] = function (g) {
            this.bridge.setPropertyInAS(this.fb_instance_id, e, g)
        };
        a[j] = function () {
            return this.bridge.deserialize(this.bridge.getPropertyFromAS(this.fb_instance_id, e))
        }
    },
    addMethodToType: function (a, e) {
        a[e] = function () {
            return this.bridge.deserialize(this.bridge.callASMethod(this.fb_instance_id, e, FABridge.argsToArray(arguments)))
        }
    },
    getFunctionProxy: function (a) {
        var e = this;
        if (this.remoteFunctionCache[a] == null) this.remoteFunctionCache[a] = function () {
            e.callASFunction(a, FABridge.argsToArray(arguments))
        };
        return this.remoteFunctionCache[a]
    },
    getFunctionID: function (a) {
        if (a.__bridge_id__ == undefined) {
            a.__bridge_id__ = this.makeID(this.nextLocalFuncID++);
            this.localFunctionCache[a.__bridge_id__] = a
        }
        return a.__bridge_id__
    },
    serialize: function (a) {
        var e = {}, f = typeof a;
        if (f == "number" || f == "string" || f == "boolean" || f == null || f == undefined) e = a;
        else if (a instanceof Array) {
            e = [];
            for (f = 0; f < a.length; f++) e[f] = this.serialize(a[f])
        } else if (f == "function") {
            e.type = FABridge.TYPE_JSFUNCTION;
            e.value = this.getFunctionID(a)
        } else if (a instanceof ASProxy) {
            e.type = FABridge.TYPE_ASINSTANCE;
            e.value = a.fb_instance_id
        } else {
            e.type = FABridge.TYPE_ANONYMOUS;
            e.value = a
        }
        return e
    },
    deserialize: function (a) {
        var e, f = typeof a;
        if (f == "number" || f == "string" || f == "boolean" || a == null || a == undefined) e = this.handleError(a);
        else if (a instanceof Array) {
            e = [];
            for (f = 0; f < a.length; f++) e[f] = this.deserialize(a[f])
        } else if (f == "object") {
            for (f = 0; f < a.newTypes.length; f++) this.addTypeDataToCache(a.newTypes[f]);
            for (var j in a.newRefs) this.createProxy(j, a.newRefs[j]);
            if (a.type == FABridge.TYPE_PRIMITIVE) e =
                a.value;
            else if (a.type == FABridge.TYPE_ASFUNCTION) e = this.getFunctionProxy(a.value);
            else if (a.type == FABridge.TYPE_ASINSTANCE) e = this.getProxy(a.value);
            else if (a.type == FABridge.TYPE_ANONYMOUS) e = a.value
        }
        return e
    },
    addRef: function (a) {
        this.target.incRef(a.fb_instance_id)
    },
    release: function (a) {
        this.target.releaseRef(a.fb_instance_id)
    },
    handleError: function (a) {
        if (typeof a == "string" && a.indexOf("__FLASHERROR") == 0) {
            a = a.split("||");
            FABridge.refCount > 0 && FABridge.refCount--;
            throw Error(a[1]);
        }
        return a
    }
};
ASProxy = function (a, e) {
    this.bridge = a;
    this.typeName = e;
    return this
};
ASProxy.prototype = {
    get: function (a) {
        return this.bridge.deserialize(this.bridge.getPropertyFromAS(this.fb_instance_id, a))
    },
    set: function (a, e) {
        this.bridge.setPropertyInAS(this.fb_instance_id, a, e)
    },
    call: function (a, e) {
        this.bridge.callASMethod(this.fb_instance_id, a, e)
    },
    addRef: function () {
        this.bridge.addRef(this)
    },
    release: function () {
        this.bridge.release(this)
    }
};
(function () {
    function a() {}
    if (!window.WebSocket) {
        var e = window.console;
        if (!e || !e.log || !e.error) e = {
            log: function () {},
            error: function () {}
        };
        if (swfobject.hasFlashPlayerVersion("9.0.0")) {
            location.protocol == "file:" && e.error("WARNING: web-socket-js doesn't work in file:///... URL unless you set Flash Security Settings properly. Open the page via Web server i.e. http://...");
            WebSocket = function (f, j, g, c, b) {
                var l = this;
                l.readyState = WebSocket.CONNECTING;
                l.bufferedAmount = 0;
                setTimeout(function () {
                    WebSocket.__addTask(function () {
                        l.__createFlash(f,
                            j, g, c, b)
                    })
                }, 0)
            };
            WebSocket.prototype.__createFlash = function (f, j, g, c, b) {
                var l = this;
                l.__flash = WebSocket.__flash.create(f, j, g || null, c || 0, b || null);
                l.__flash.addEventListener("event", function () {
                    setTimeout(function () {
                        l.__handleEvents()
                    }, 0)
                })
            };
            WebSocket.prototype.send = function (f) {
                if (!this.__flash || this.readyState == WebSocket.CONNECTING) throw "INVALID_STATE_ERR: Web Socket connection has not been established";
                f = this.__flash.send(encodeURIComponent(f));
                if (f < 0) return true;
                else {
                    this.bufferedAmount += f;
                    return false
                }
            };
            WebSocket.prototype.close = function () {
                if (this.__flash)
                    if (!(this.readyState == WebSocket.CLOSED || this.readyState == WebSocket.CLOSING)) {
                        this.__flash.close();
                        this.readyState = WebSocket.CLOSED;
                        this.__timer && clearInterval(this.__timer);
                        this.onclose && setTimeout(this.onclose, 0)
                    }
            };
            WebSocket.prototype.addEventListener = function (f, j) {
                if (!("__events" in this)) this.__events = {};
                if (!(f in this.__events)) {
                    this.__events[f] = [];
                    if ("function" == typeof this["on" + f]) {
                        this.__events[f].defaultHandler = this["on" + f];
                        this["on" + f] =
                            this.__createEventHandler(this, f)
                    }
                }
                this.__events[f].push(j)
            };
            WebSocket.prototype.removeEventListener = function (f, j) {
                if (!("__events" in this)) this.__events = {};
                if (f in this.__events)
                    for (var g = this.__events.length; g > -1; --g)
                        if (j === this.__events[f][g]) {
                            this.__events[f].splice(g, 1);
                            break
                        }
            };
            WebSocket.prototype.dispatchEvent = function (f) {
                if (!("__events" in this)) throw "UNSPECIFIED_EVENT_TYPE_ERR";
                if (!(f.type in this.__events)) throw "UNSPECIFIED_EVENT_TYPE_ERR";
                for (var j = 0, g = this.__events[f.type].length; j < g; ++j) {
                    this.__events[f.type][j](f);
                    if (f.cancelBubble) break
                }
                false !== f.returnValue && "function" == typeof this.__events[f.type].defaultHandler && this.__events[f.type].defaultHandler(f)
            };
            WebSocket.prototype.__handleEvents = function () {
                for (var f = this.__flash.receiveEvents(), j = 0; j < f.length; j++) try {
                    var g = f[j];
                    if ("readyState" in g) this.readyState = g.readyState;
                    if (g.type == "open") {
                        this.__timer && clearInterval(this.__timer);
                        if (window.opera) this.__timer = setInterval(function () {
                            this.__handleEvents()
                        }, 500);
                        this.onopen && this.onopen()
                    } else if (g.type == "close") {
                        this.__timer &&
                            clearInterval(this.__timer);
                        this.onclose && this.onclose()
                    } else if (g.type == "message") {
                        if (this.onmessage) {
                            var c = decodeURIComponent(g.data),
                                b;
                            if (window.MessageEvent && !window.opera) {
                                b = document.createEvent("MessageEvent");
                                b.initMessageEvent("message", false, false, c, null, null, window, null)
                            } else b = {
                                data: c
                            };
                            this.onmessage(b)
                        }
                    } else if (g.type == "error") {
                        this.__timer && clearInterval(this.__timer);
                        this.onerror && this.onerror()
                    } else throw "unknown event type: " + g.type;
                } catch (l) {
                    if (typeof e === "object") {
                        e.log && console_log("web_socket.js error:",
                            l);
                        e.error && e.error(l.toString())
                    }
                }
            };
            WebSocket.prototype.__createEventHandler = function (f, j) {
                return function (g) {
                    var c = new a;
                    c.initEvent(j, true, true);
                    c.target = c.currentTarget = f;
                    for (var b in g) c[b] = g[b];
                    f.dispatchEvent(c, arguments)
                }
            };
            a.prototype.cancelable = true;
            a.prototype.cancelBubble = false;
            a.prototype.preventDefault = function () {
                if (this.cancelable) this.returnValue = false
            };
            a.prototype.stopPropagation = function () {
                this.cancelBubble = true
            };
            a.prototype.initEvent = function (f, j, g) {
                this.type = f;
                this.cancelable = g;
                this.timeStamp = new Date
            };
            WebSocket.CONNECTING = 0;
            WebSocket.OPEN = 1;
            WebSocket.CLOSING = 2;
            WebSocket.CLOSED = 3;
            WebSocket.__tasks = [];
            WebSocket.loadFlashPolicyFile = function (f) {
                WebSocket.__addTask(function () {
                    WebSocket.__flash.loadManualPolicyFile(f)
                })
            };
            WebSocket.__initialize = function () {
                if (WebSocket.__swfLocation) window.WEB_SOCKET_SWF_LOCATION = WebSocket.__swfLocation;
                if (window.WEB_SOCKET_SWF_LOCATION) {
                    var f = document.createElement("div");
                    f.id = "webSocketContainer";
                    f.style.position = "absolute";
                    if (WebSocket.__isFlashLite()) {
                        f.style.left =
                            "0px";
                        f.style.top = "0px"
                    } else {
       ancelBubble) break
                }
                false !== f.returnValue && "function" == typeof this.__events[f.type].defaultHandler && this.__events[f.type].defaultHandler(f)
            };
            WebSocket.prototype.__handleEvents = function () {
                for (var f = this.__flash.receiveEvents(), j = 0; j < f.length; j++) try {
                    var g = f[j];
                    if ("readyState" in g) this.readyState = g.readyState;
                    if (g.type == "open") {
                        this.__timer && clearInterval(this.__timer);
                        if (window.opera) this.__timer = setInterval(function () {
                            this.__handleEvents()
                        }, 500);
                        this.onopen && this.onopen()
                    } else if (g.type == "close") {
                        this.__timer &&
                            clearInterval(this.__timer);
                        this.onclose && this.onclose()
                    } else if (g.type == "message") {
                        if (this.onmessage) {
                            var c = decodeURIComponent(g.data),
                                b;
                            if (window.MessageEvent && !window.opera) {
                                b = document.createEvent("MessageEvent");
                                b.initMessageEvent("message", false, false, c, null, null, window, null)
                            } else b = {
                                data: c
                            };
                            this.onmessage(b)
                        }
                    } else if (g.type == "error") {
                        this.__timer && clearInterval(this.__timer);
                        this.onerror && this.onerror()
                    } else throw "unknown event type: " + g.type;
                } catch (l) {
                    if (typeof e === "object") {
                        e.log && console_log("web_socket.js error:",
                            l);
                        e.error && e.error(l.toString())
                    }
                }
            };
            WebSocket.prototype.__createEventHandler = function (f, j) {
                return function (g) {
                    var c = new a;
                    c.initEvent(j, true, true);
                    c.target = c.currentTarget = f;
                    for (var b in g) c[b] = g[b];
                    f.dispatchEvent(c, arguments)
                }
            };
            a.prototype.cancelable = true;
            a.prototype.cancelBubble = false;
            a.prototype.preventDefault = function () {
                if (this.cancelable) this.returnValue = false
            };
            a.prototype.stopPropagation = function () {
                this.cancelBubble = true
            };
            a.prototype.initEvent = function (f, j, g) {
                this.type = f;
                this.cancelable = g;
                this.timeStamp = new Date
            };
            WebSocket.CONNECTING = 0;
            WebSocket.OPEN = 1;
            WebSocket.CLOSING = 2;
            WebSocket.CLOSED = 3;
            WebSocket.__tasks = [];
            WebSocket.loadFlashPolicyFile = function (f) {
                WebSocket.__addTask(function () {
                    WebSocket.__flash.loadManualPolicyFile(f)
                })
            };
            WebSocket.__initialize = function () {
                if (WebSocket.__swfLocation) window.WEB_SOCKET_SWF_LOCATION = WebSocket.__swfLocation;
                if (window.WEB_SOCKET_SWF_LOCATION) {
                    var f = document.createElement("div");
                    f.id = "webSocketContainer";
                    f.style.position = "absolute";
                    if (WebSocket.__isFlashLite()) {
                        f.style.left =
                            "0px";
                        f.style.top = "0px"
                    } else {
       o) {
        c =
            o
    }
    if (c || !this.ws || !("send" in this.ws)) a.connect_failed(c ? c : "");
    else {
        var n = false,
            q = this,
            u = this;
        g = setTimeout(function () {
            q.disconnect();
            a.connect_failed()
        }, 5500);
        this.subscribe = function (v) {
            $.isArray(v) || (v = [v]);
            var x = function () {
                var z = JSON.stringify([{
                    cmd: "JOIN",
                    sessid: f,
                    chl: e++,
                    params: {
                        channels: v
                    }
                }]);
                u.ws.send(z);
                $(window).trigger("join_" + f)
            };
            u.connected ? x() : $(window).one("ape_connect", x)
        };
        this.unsubscribe = function (v, x) {
            x || (x = {});
            var z = function () {
                var B = JSON.stringify([{
                    cmd: "LEFT",
                    sessid: f,
                    chl: e++,
                    params: {
                        data: x,
                        channel: v
                    }
                }]);
                u.ws.send(B)
            };
            u.connected ? z() : $(window).one("ape_connect", z)
        };
        this.broadcast = function (v) {
            var x = this,
                z = function () {
                    var B = JSON.stringify([{
                        cmd: "BROADCAST",
                        sessid: f,
                        chl: e++,
                        params: {
                            data: v
                        }
                    }]);
                    x.ws.send(B)
                };
            u.connected ? z() : $(window).one("ape_connect", z)
        };
        this.login = function (v) {
            v || (v = {});
            this.ws.send(JSON.stringify([{
                cmd: "CONNECT",
                chl: e++,
                params: v
            }]))
        };
        this.disconnect = function () {
            u.connected = false;
            this.ws.onclose = function () {};
            this.ws.onopen = function () {};
            this.ws.close();
            $(window).trigger("ape_disconnect")
        };
        this.ws.onopen = function () {
            n = true;
            a.open()
        };
        this.ws.onclose = function () {
            clearTimeout(g);
            clearInterval(j);
            j = null;
            if (n) a.disconnected();
            else {
                $(window).trigger("ape_disconnect");
                a.connect_failed()
            }
        };
        this.ws.onerror = function () {
            console_log("error", arguments)
        };
        this.id = function () {
            return f
        };
        this._getKeepAliveRef = function (v) {
            return function () {
                q.ws.send(JSON.stringify([{
                    cmd: "CHECK",
                    sessid: v,
                    chl: e++,
                    params: {}
                }]))
            }
        };
        this.ws.onmessage = function (v) {
            v = $.parseJSON(v.data);
            for (var x in v) {
                if (!j && v[x].raw == "LOGIN") {
                    clearTimeout(g);
                    console_log("A live data connection was successfully established.");
                    u.connected = true;
                    $(window).trigger("ape_connect");
                    f = v[x].data.sessid;
                    j = setInterval(q._getKeepAliveRef(f), 3E4);
                    APE_READY = 1;
                    a.onConnect && a.onConnect(a)
                }
                a.message(v[x])
            }
            delete v
        }
    }
}

function ApeConnectionLP(a) {
    var e = location.protocol + "//" + location.host + "/event/",
        f = 0,
        j = null,
        g = false;
    if (APE_FAILURES > MAX_APE_FAILURES) APE_FAILURES = 0;
    console_log("Establishing a live data connection: Attempt #" + (APE_FAILURES + 1) + " via long-poll to " + e);
    $.ajax({
        url: e,
        success: function () {
            a.open()
        },
        error: function () {
            a.connect_failed()
        }
    });
    var c = function () {
        var b = arguments.callee,
            l, o = $.ajax({
                url: e + "?" + escape(JSON.stringify([{
                    cmd: "CHECK",
                    sessid: j,
                    chl: f++,
                    params: {}
                }])),
                cache: true,
                success: function (n) {
                    clearTimeout(l);
                    n = $.parseJSON(n);
                    for (var q in n) a.message(n[q]);
                    g || b()
                },
                error: function () {
                    console_log("poll failure");
                    a.disconnected()
                }
            });
        l = setTimeout(function () {
            o.abort()
        }, 3E4)
    };
    this.id = function () {
        return j
    };
    this.login = function (b) {
        b || (b = {});
        $.ajax({
            url: e + "?" + escape(JSON.stringify([{
                cmd: "CONNECT",
                chl: f++,
                params: b
            }])),
            cache: true,
            success: function (l) {
                l = $.parseJSON(l);
                for (var o in l) {
                    if (l[o].raw == "LOGIN") {
                        j = l[o].data.sessid;
                        APE_READY = 1;
                        a.onConnect && a.onConnect(a)
                    }
                    a.message(l[o])
                }
                setTimeout(c, 1E3)
            },
            error: function () {
                a.disconnected()
            }
        })
    };
    this.subscribe = function (b) {
        $.isArray(b) || (b = [b]);
        $.ajax({
            url: e + "?" + escape(JSON.stringify([{
                cmd: "JOIN",
                sessid: j,
                chl: f++,
                params: {
                    channels: b
                }
            }])),
            cache: true,
            success: function (l) {
                l = $.parseJSON(l);
                for (var o in l) a.message(l[o])
            }
        })
    };
    this.unsubscribe = function (b, l) {
        l || (l = {});
        $.ajax({
            url: e + "?" + escape(JSON.stringify([{
                cmd: "LEFT",
                sessid: j,
                chl: f++,
                params: {
                    channel: b,
                    data: l
                }
            }])),
            cache: true,
            success: function (o) {
                o = $.parseJSON(o);
                for (var n in o) a.message(o[n])
            }
        })
    };
    this.broadcast = function (b) {
        $.ajax({
            url: e + "?" + escape(JSON.stringify([{
                cmd: "BROADCAST",
                sessid: j,
                chl: f++,
                params: {
                    data: b
                }
            }])),
            cache: true,
            success: function (l) {
                l = $.parseJSON(l);
                for (var o in l) a.message(l[o])
            }
        })
    };
    this.disconnect = function () {
        g = true
    }
}

function ApeConnection(a, e) {
    var f, j = 0;
    this.connected = false;
    var g = ["meteor_alive"],
        c = undefined;
    this.debug = false;
    var b = this,
        l, o, n = false;
    this.onConnect = a;
    this.userData = e;
    var q = function () {
        var v = new jSoff.eventSys.event("noEventConnection", "NO_NAME");
        v.json = {
            error: "true"
        };
        v.fire();
        $(document).trigger("noEventConnection")
    }, u = function () {
            console_log("did not receive periodic alive event");
            q();
            n = true;
            APE_FAILURES = 0;
            b.disconnected()
        };
    o = setTimeout(q, APE_INITIAL_TIMEOUT);
    this.open = function () {
        var v = (new Date).getTime(),
            x;
        x = location.search.search(/uncompiled_js/) ? 6E8 : 6E5;
        if (this.userData) x = this.userData.reloadAfter;
        if (!c || v - c < x && !n) {
            clearTimeout(o);
            j = 0;
            f.login({
                session: $.cookie("bps_session")
            })
        } else {
            console_log("disconnected for ", (new Date).getTime() - c);
            setTimeout(function () {
                location.reload()
            }, Math.floor(Math.random() * 2E4))
        }
    };
    this.subscribe = function (v) {
        if ($.isArray(v))
            for (var x in v) $.inArray(v[x], g) == -1 && g.push(v[x]);
        else $.inArray(v, g) == -1 && g.push(v); if (this.connected) {
            b.debug && console_log("subscribing to", v);
            f.subscribe(v)
        }
    };
    this.unsubscribe = function (v, x) {
        var z;
        if ((z = $.inArray(v, g)) != -1) g.splice(z, 1);
        if (this.connected) {
            b.debug && console_log("unsubscribing from " + v);
            f.unsubscribe(v, x)
        }
    };
    this.id = function () {
        return f.id()
    };
    this.broadcast = function (v) {
        return f.broadcast(v)
    };
    this.disconnected = function (v) {
        this.connected = false;
        clearTimeout(l);
        if (!n) {
            clearTimeout(o);
            o = setTimeout(q, APE_RECONNECT_TIMEOUT)
        }
        v || (c = (new Date).getTime());
        f && "disconnect" in f && f.disconnect();
        var x = this;
        v && APE_FAILURES++;
        if (APE_FAILURES >
            MAX_APE_FAILURES) APE_FAILURES = 0;
        setTimeout(function () {
            f = typeof WebSocket != "undefined" && APE_FAILURES < MAX_APE_FAILURES_WS ? new ApeConnectionWS(x, APE_FAILURES) : new ApeConnectionLP(x, APE_FAILURES);
            j++
        }, 500 * j)
    };
    this.connect_failed = function (v) {
        console_log("connect failed: " + (v ? v : ""));
        this.disconnected(true)
    };
    this.bindContext = function (v, x, z) {
        var B = {};
        if (!b.context_bindings) {
            b.context_bindings = {};
            b.context_bind_id = 0
        }
        B.callback = x;
        B.userdata = z;
        B.orig_context = v;
        B.context = v.toLowerCase();
        B.node_id = b.context_bind_id;
        B.joined = false;
        if (!b.context_subs) b.context_subs = {};
        if (b.context_subs[B.context]) b.context_subs[B.context]++;
        else b.context_subs[B.context] = 1;
        b.context_bindings[B.context] || (b.context_bindings[B.context] = {});
        b.context_bindings[B.context][b.context_bind_id] = B;
        b.context_bind_id++;
        if (b.context_subs[B.context] == 1) b.subscribe(B.orig_context);
        else B.joined = true;
        return B
    };
    this.unBind = function (v, x) {
        var z = false;
        if (!b.context_subs) b.context_subs = {};
        if (b.context_subs[v.context]) {
            b.context_subs[v.context]--;
            if (b.context_subs[v.context] == 0) z = true
        }
        if (b.context_bindings[v.context])
            if (b.context_bindings[v.context][v.node_id]) {
                z && b.unsubscribe(v.orig_context, x);
                delete b.context_bindings[v.context][v.node_id]
            }
    };
    this.message = function (v) {
        b.debug && console_log(v.data.channel, v);
        switch (v.raw) {
        case "LOGIN":
            this.connected = true;
            if (g.length > 0) {
                b.debug && console_log("resubscribing to", g);
                f.subscribe(g)
            }
            l = setTimeout(u, APE_ALIVE_TIMEOUT);
            break;
        case "MSG":
            if (!v.data.data) v.data.data = {};
            if (!v.data.data.name) v.data.data.name =
                "NO_NAME";
            var x = v.data.channel;
            x = x.toLowerCase();
            if (/^user_/.test(x)) x = "user_notify";
            if (b.context_bindings && b.context_bindings[x])
                for (var z in b.context_bindings[x]) {
                    var B = b.context_bindings[x][z];
                    B.callback.call(B.userdata, {
                        channel: x,
                        msgTime: v.time,
                        json: v.data.data
                    })
                }
            x = new jSoff.eventSys.event(v.data.channel, v.data.data.name);
            if (!x.error) {
                x.channel = v.data.channel;
                x.msgTime = v.time;
                x.json = v.data.data;
                x.fire()
            }
            $(window).trigger("meteor_" + v.data.channel, {
                channel: v.data.channel,
                json: v.data.data,
                msgTime: v.time
            }).trigger("meteor_all", {
                channel: v.data.channel,
                json: v.data.data,
                msgTime: v.time
            });
            if (v.data.channel == "meteor_alive") {
                clearTimeout(l);
                l = setTimeout(u, APE_ALIVE_TIMEOUT)
            }
            break;
        case "ERR":
            switch (v.data.value) {
            case "ALREADY_ON_CHANNEL":
            case "UNKNOWN_CHANNEL":
            case "NOT_IN_CHANNEL":
                break;
            case "BAD_CHANNEL_PERMISSION":
                console_log("unable to join channel ", v.data.channel);
                break;
            case "CANT_JOIN_CHANNEL":
                console_log("cant join channel ", v.data.channel);
                break;
            default:
                console_log("error: ", v.data.value, v);
                this.disconnected()
            }
        }
    };
    this.subscriptions =
        function () {
            return g
    };
    this.connectionType = function () {
        if (f instanceof ApeConnectionLP) return "long polling";
        else if (f instanceof ApeConnectionWS) return f.ws.__flash ? "flash websocket" : "native websocket";
        return "not connected"
    };
    f = typeof WebSocket != "undefined" && !document.domain.match("support.barracudanetworks.com") ? new ApeConnectionWS(this) : new ApeConnectionLP(this);
    this.ready = function () {
        return APE_READY
    }
};
(function (a, e) {
    function f(j) {
        return !a(j).parents().andSelf().filter(function () {
            return a.curCSS(this, "visibility") === "hidden" || a.expr.filters.hidden(this)
        }).length
    }
    a.ui = a.ui || {};
    if (!a.ui.version) {
        a.extend(a.ui, {
            version: "1.8.11",
            keyCode: {
                ALT: 18,
                BACKSPACE: 8,
                CAPS_LOCK: 20,
                COMMA: 188,
                COMMAND: 91,
                COMMAND_LEFT: 91,
                COMMAND_RIGHT: 93,
                CONTROL: 17,
                DELETE: 46,
                DOWN: 40,
                END: 35,
                ENTER: 13,
                ESCAPE: 27,
                HOME: 36,
                INSERT: 45,
                LEFT: 37,
                MENU: 93,
                NUMPAD_ADD: 107,
                NUMPAD_DECIMAL: 110,
                NUMPAD_DIVIDE: 111,
                NUMPAD_ENTER: 108,
                NUMPAD_MULTIPLY: 106,
                NUMPAD_SUBTRACT: 109,
                PAGE_DOWN: 34,
                PAGE_UP: 33,
                PERIOD: 190,
                RIGHT: 39,
                SHIFT: 16,
                SPACE: 32,
                TAB: 9,
                UP: 38,
                WINDOWS: 91
            }
        });
        a.fn.extend({
            _focus: a.fn.focus,
            focus: function (j, g) {
                return typeof j === "number" ? this.each(function () {
                    var c = this;
                    setTimeout(function () {
                        a(c).focus();
                        g && g.call(c)
                    }, j)
                }) : this._focus.apply(this, arguments)
            },
            scrollParent: function () {
                var j;
                j = a.browser.msie && /(static|relative)/.test(this.css("position")) || /absolute/.test(this.css("position")) ? this.parents().filter(function () {
                    return /(relative|absolute|fixed)/.test(a.curCSS(this,
                        "position", 1)) && /(auto|scroll)/.test(a.curCSS(this, "overflow", 1) + a.curCSS(this, "overflow-y", 1) + a.curCSS(this, "overflow-x", 1))
                }).eq(0) : this.parents().filter(function () {
                    return /(auto|scroll)/.test(a.curCSS(this, "overflow", 1) + a.curCSS(this, "overflow-y", 1) + a.curCSS(this, "overflow-x", 1))
                }).eq(0);
                return /fixed/.test(this.css("position")) || !j.length ? a(document) : j
            },
            zIndex: function (j) {
                if (j !== e) return this.css("zIndex", j);
                if (this.length) {
                    j = a(this[0]);
                    for (var g; j.length && j[0] !== document;) {
                        g = j.css("position");
                        if (g === "absolute" || g === "relative" || g === "fixed") {
                            g = parseInt(j.css("zIndex"), 10);
                            if (!isNaN(g) && g !== 0) return g
                        }
                        j = j.parent()
                    }
                }
                return 0
            },
            disableSelection: function () {
                return this.bind((a.support.selectstart ? "selectstart" : "mousedown") + ".ui-disableSelection", function (j) {
                    j.preventDefault()
                })
            },
            enableSelection: function () {
                return this.unbind(".ui-disableSelection")
            }
        });
        a.each(["Width", "Height"], function (j, g) {
            function c(n, q, u, v) {
                a.each(b, function () {
                    q -= parseFloat(a.curCSS(n, "padding" + this, true)) || 0;
                    if (u) q -= parseFloat(a.curCSS(n,
                        "border" + this + "Width", true)) || 0;
                    if (v) q -= parseFloat(a.curCSS(n, "margin" + this, true)) || 0
                });
                return q
            }
            var b = g === "Width" ? ["Left", "Right"] : ["Top", "Bottom"],
                l = g.toLowerCase(),
                o = {
                    innerWidth: a.fn.innerWidth,
                    innerHeight: a.fn.innerHeight,
                    outerWidth: a.fn.outerWidth,
                    outerHeight: a.fn.outerHeight
                };
            a.fn["inner" + g] = function (n) {
                if (n === e) return o["inner" + g].call(this);
                return this.each(function () {
                    a(this).css(l, c(this, n) + "px")
                })
            };
            a.fn["outer" + g] = function (n, q) {
                if (typeof n !== "number") return o["outer" + g].call(this, n);
                return this.each(function () {
                    a(this).css(l,
                        c(this, n, true, q) + "px")
                })
            }
        });
        a.extend(a.expr[":"], {
            data: function (j, g, c) {
                return !!a.data(j, c[3])
            },
            focusable: function (j) {
                var g = j.nodeName.toLowerCase(),
                    c = a.attr(j, "tabindex");
                if ("area" === g) {
                    g = j.parentNode;
                    c = g.name;
                    if (!j.href || !c || g.nodeName.toLowerCase() !== "map") return false;
                    j = a("img[usemap=#" + c + "]")[0];
                    return !!j && f(j)
                }
                return (/input|select|textarea|button|object/.test(g) ? !j.disabled : "a" == g ? j.href || !isNaN(c) : !isNaN(c)) && f(j)
            },
            tabbable: function (j) {
                var g = a.attr(j, "tabindex");
                return (isNaN(g) || g >= 0) && a(j).is(":focusable")
            }
        });
        a(function () {
            var j = document.body,
                g = j.appendChild(g = document.createElement("div"));
            a.extend(g.style, {
                minHeight: "100px",
                height: "auto",
                padding: 0,
                borderWidth: 0
            });
            a.support.minHeight = g.offsetHeight === 100;
            a.support.selectstart = "onselectstart" in g;
            j.removeChild(g).style.display = "none"
        });
        a.extend(a.ui, {
            plugin: {
                add: function (j, g, c) {
                    j = a.ui[j].prototype;
                    for (var b in c) {
                        j.plugins[b] = j.plugins[b] || [];
                        j.plugins[b].push([g, c[b]])
                    }
                },
                call: function (j, g, c) {
                    if ((g = j.plugins[g]) && j.element[0].parentNode)
                        for (var b = 0; b < g.length; b++) j.options[g[b][0]] &&
                            g[b][1].apply(j.element, c)
                }
            },
            contains: function (j, g) {
                return document.compareDocumentPosition ? j.compareDocumentPosition(g) & 16 : j !== g && j.contains(g)
            },
            hasScroll: function (j, g) {
                if (a(j).css("overflow") === "hidden") return false;
                g = g && g === "left" ? "scrollLeft" : "scrollTop";
                var c = false;
                if (j[g] > 0) return true;
                j[g] = 1;
                c = j[g] > 0;
                j[g] = 0;
                return c
            },
            isOverAxis: function (j, g, c) {
                return j > g && j < g + c
            },
            isOver: function (j, g, c, b, l, o) {
                return a.ui.isOverAxis(j, c, l) && a.ui.isOverAxis(g, b, o)
            }
        })
    }
})(jQuery);
(function (a, e) {
    if (a.cleanData) {
        var f = a.cleanData;
        a.cleanData = function (g) {
            for (var c = 0, b;
                (b = g[c]) != null; c++) a(b).triggerHandler("remove");
            f(g)
        }
    } else {
        var j = a.fn.remove;
        a.fn.remove = function (g, c) {
            return this.each(function () {
                if (!c)
                    if (!g || a.filter(g, [this]).length) a("*", this).add([this]).each(function () {
                        a(this).triggerHandler("remove")
                    });
                return j.call(a(this), g, c)
            })
        }
    }
    a.widget = function (g, c, b) {
        var l = g.split(".")[0],
            o;
        g = g.split(".")[1];
        o = l + "-" + g;
        if (!b) {
            b = c;
            c = a.Widget
        }
        a.expr[":"][o] = function (n) {
            return !!a.data(n,
                g)
        };
        a[l] = a[l] || {};
        a[l][g] = function (n, q) {
            arguments.length && this._createWidget(n, q)
        };
        c = new c;
        c.options = a.extend(true, {}, c.options);
        a[l][g].prototype = a.extend(true, c, {
            namespace: l,
            widgetName: g,
            widgetEventPrefix: a[l][g].prototype.widgetEventPrefix || g,
            widgetBaseClass: o
        }, b);
        a.widget.bridge(g, a[l][g])
    };
    a.widget.bridge = function (g, c) {
        a.fn[g] = function (b) {
            var l = typeof b === "string",
                o = Array.prototype.slice.call(arguments, 1),
                n = this;
            b = !l && o.length ? a.extend.apply(null, [true, b].concat(o)) : b;
            if (l && b.charAt(0) === "_") return n;
            l ? this.each(function () {
                var q = a.data(this, g),
                    u = q && a.isFunction(q[b]) ? q[b].apply(q, o) : q;
                if (u !== q && u !== e) {
                    n = u;
                    return false
                }
            }) : this.each(function () {
                var q = a.data(this, g);
                q ? q.option(b || {})._init() : a.data(this, g, new c(b, this))
            });
            return n
        }
    };
    a.Widget = function (g, c) {
        arguments.length && this._createWidget(g, c)
    };
    a.Widget.prototype = {
        widgetName: "widget",
        widgetEventPrefix: "",
        options: {
            disabled: false
        },
        _createWidget: function (g, c) {
            a.data(c, this.widgetName, this);
            this.element = a(c);
            this.options = a.extend(true, {}, this.options,
                this._getCreateOptions(), g);
            var b = this;
            this.element.bind("remove." + this.widgetName, function () {
                b.destroy()
            });
            this._create();
            this._trigger("create");
            this._init()
        },
        _getCreateOptions: function () {
            return a.metadata && a.metadata.get(this.element[0])[this.widgetName]
        },
        _create: function () {},
        _init: function () {},
        destroy: function () {
            this.element.unbind("." + this.widgetName).removeData(this.widgetName);
            this.widget().unbind("." + this.widgetName).removeAttr("aria-disabled").removeClass(this.widgetBaseClass + "-disabled ui-state-disabled")
        },
        widget: function () {
            return this.element
        },
        option: function (g, c) {
            var b = g;
            if (arguments.length === 0) return a.extend({}, this.options);
            if (typeof g === "string") {
                if (c === e) return this.options[g];
                b = {};
                b[g] = c
            }
            this._setOptions(b);
            return this
        },
        _setOptions: function (g) {
            var c = this;
            a.each(g, function (b, l) {
                c._setOption(b, l)
            });
            return this
        },
        _setOption: function (g, c) {
            this.options[g] = c;
            if (g === "disabled") this.widget()[c ? "addClass" : "removeClass"](this.widgetBaseClass + "-disabled ui-state-disabled").attr("aria-disabled", c);
            return this
        },
        enable: function () {
            return this._setOption("disabled", false)
        },
        disable: function () {
            return this._setOption("disabled", true)
        },
        _trigger: function (g, c, b) {
            var l = this.options[g];
            c = a.Event(c);
            c.type = (g === this.widgetEventPrefix ? g : this.widgetEventPrefix + g).toLowerCase();
            b = b || {};
            if (c.originalEvent) {
                g = a.event.props.length;
                for (var o; g;) {
                    o = a.event.props[--g];
                    c[o] = c.originalEvent[o]
                }
            }
            this.element.trigger(c, b);
            return !(a.isFunction(l) && l.call(this.element[0], c, b) === false || c.isDefaultPrevented())
        }
    }
})(jQuery);
(function (a) {
    a.widget("ui.mouse", {
        options: {
            cancel: ":input,option",
            distance: 1,
            delay: 0
        },
        _mouseInit: function () {
            var e = this;
            this.element.bind("mousedown." + this.widgetName, function (f) {
                return e._mouseDown(f)
            }).bind("click." + this.widgetName, function (f) {
                if (true === a.data(f.target, e.widgetName + ".preventClickEvent")) {
                    a.removeData(f.target, e.widgetName + ".preventClickEvent");
                    f.stopImmediatePropagation();
                    return false
                }
            });
            this.started = false
        },
        _mouseDestroy: function () {
            this.element.unbind("." + this.widgetName)
        },
        _mouseDown: function (e) {
            e.originalEvent =
                e.originalEvent || {};
            if (!e.originalEvent.mouseHandled) {
                this._mouseStarted && this._mouseUp(e);
                this._mouseDownEvent = e;
                var f = this,
                    j = e.which == 1,
                    g = typeof this.options.cancel == "string" ? a(e.target).parents().add(e.target).filter(this.options.cancel).length : false;
                if (!j || g || !this._mouseCapture(e)) return true;
                this.mouseDelayMet = !this.options.delay;
                if (!this.mouseDelayMet) this._mouseDelayTimer = setTimeout(function () {
                    f.mouseDelayMet = true
                }, this.options.delay);
                if (this._mouseDistanceMet(e) && this._mouseDelayMet(e)) {
                    this._mouseStarted =
                        this._mouseStart(e) !== false;
                    if (!this._mouseStarted) {
                        e.preventDefault();
                        return true
                    }
                }
                true === a.data(e.target, this.widgetName + ".preventClickEvent") && a.removeData(e.target, this.widgetName + ".preventClickEvent");
                this._mouseMoveDelegate = function (c) {
                    return f._mouseMove(c)
                };
                this._mouseUpDelegate = function (c) {
                    return f._mouseUp(c)
                };
                a(document).bind("mousemove." + this.widgetName, this._mouseMoveDelegate).bind("mouseup." + this.widgetName, this._mouseUpDelegate);
                e.preventDefault();
                return e.originalEvent.mouseHandled =
                    true
            }
        },
        _mouseMove: function (e) {
            if (a.browser.msie && !(document.documentMode >= 9) && !e.button) return this._mouseUp(e);
            if (this._mouseStarted) {
                this._mouseDrag(e);
                return e.preventDefault()
            }
            if (this._mouseDistanceMet(e) && this._mouseDelayMet(e))(this._mouseStarted = this._mouseStart(this._mouseDownEvent, e) !== false) ? this._mouseDrag(e) : this._mouseUp(e);
            return !this._mouseStarted
        },
        _mouseUp: function (e) {
            a(document).unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate);
            if (this._mouseStarted) {
                this._mouseStarted = false;
                e.target == this._mouseDownEvent.target && a.data(e.target, this.widgetName + ".preventClickEvent", true);
                this._mouseStop(e)
            }
            return false
        },
        _mouseDistanceMet: function (e) {
            return Math.max(Math.abs(this._mouseDownEvent.pageX - e.pageX), Math.abs(this._mouseDownEvent.pageY - e.pageY)) >= this.options.distance
        },
        _mouseDelayMet: function () {
            return this.mouseDelayMet
        },
        _mouseStart: function () {},
        _mouseDrag: function () {},
        _mouseStop: function () {},
        _mouseCapture: function () {
            return true
        }
    })
})(jQuery);
(function (a) {
    a.ui = a.ui || {};
    var e = /left|center|right/,
        f = /top|center|bottom/,
        j = a.fn.position,
        g = a.fn.offset;
    a.fn.position = function (c) {
        if (!c || !c.of) return j.apply(this, arguments);
        c = a.extend({}, c);
        var b = a(c.of),
            l = b[0],
            o = (c.collision || "flip").split(" "),
            n = c.offset ? c.offset.split(" ") : [0, 0               a.removeData(f.target, e.widgetName + ".preventClickEvent");
                    f.stopImmediatePropagation();
                    return false
                }
            });
            this.started = false
        },
        _mouseDestroy: function () {
            this.element.unbind("." + this.widgetName)
        },
        _mouseDown: function (e) {
            e.originalEvent =
                e.originalEvent || {};
            if (!e.originalEvent.mouseHandled) {
                this._mouseStarted && this._mouseUp(e);
                this._mouseDownEvent = e;
                var f = this,
                    j = e.which == 1,
                    g = typeof this.options.cancel == "string" ? a(e.target).parents().add(e.target).filter(this.options.cancel).length : false;
                if (!j || g || !this._mouseCapture(e)) return true;
                this.mouseDelayMet = !this.options.delay;
                if (!this.mouseDelayMet) this._mouseDelayTimer = setTimeout(function () {
                    f.mouseDelayMet = true
                }, this.options.delay);
                if (this._mouseDistanceMet(e) && this._mouseDelayMet(e)) {
                    this._mouseStarted =
                        this._mouseStart(e) !== false;
                    if (!this._mouseStarted) {
                        e.preventDefault();
                        return true
                    }
                }
                true === a.data(e.target, this.widgetName + ".preventClickEvent") && a.removeData(e.target, this.widgetName + ".preventClickEvent");
                this._mouseMoveDelegate = function (c) {
                    return f._mouseMove(c)
                };
                this._mouseUpDelegate = function (c) {
                    return f._mouseUp(c)
                };
                a(document).bind("mousemove." + this.widgetName, this._mouseMoveDelegate).bind("mouseup." + this.widgetName, this._mouseUpDelegate);
                e.preventDefault();
                return e.originalEvent.mouseHandled =
                    true
            }
        },
        _mouseMove: function (e) {
            if (a.browser.msie && !(document.documentMode >= 9) && !e.button) return this._mouseUp(e);
            if (this._mouseStarted) {
                this._mouseDrag(e);
                return e.preventDefault()
            }
            if (this._mouseDistanceMet(e) && this._mouseDelayMet(e))(this._mouseStarted = this._mouseStart(this._mouseDownEvent, e) !== false) ? this._mouseDrag(e) : this._mouseUp(e);
            return !this._mouseStarted
        },
        _mouseUp: function (e) {
            a(document).unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate);
            if (this._mouseStarted) {
                this._mouseStarted = false;
                e.target == this._mouseDownEvent.target && a.data(e.target, this.widgetName + ".preventClickEvent", true);
                this._mouseStop(e)
            }
            return false
        },
        _mouseDistanceMet: function (e) {
            return Math.max(Math.abs(this._mouseDownEvent.pageX - e.pageX), Math.abs(this._mouseDownEvent.pageY - e.pageY)) >= this.options.distance
        },
        _mouseDelayMet: function () {
            return this.mouseDelayMet
        },
        _mouseStart: function () {},
        _mouseDrag: function () {},
        _mouseStop: function () {},
        _mouseCapture: function () {
            return true
        }
    })
})(jQuery);
(function (a) {
    a.ui = a.ui || {};
    var e = /left|center|right/,
        f = /top|center|bottom/,
        j = a.fn.position,
        g = a.fn.offset;
    a.fn.position = function (c) {
        if (!c || !c.of) return j.apply(this, arguments);
        c = a.extend({}, c);
        var b = a(c.of),
            l = b[0],
            o = (c.collision || "flip").split(" "),
            n = c.offset ? c.offset.split(" ") : [0, 0],
            q, u, v;
        if (l.nodeType === 9) {
            q = b.width();
            u = b.height();
            v = {
                top: 0,
                left: 0
            }
        } else if (l.setTimeout) {
            q = b.width();
            u = b.height();
            v = {
                top: b.scrollTop(),
                left: b.scrollLeft()
            }
        } else if (l.preventDefault) {
            c.at = "left top";
            q = u = 0;
            v = {
                top: c.of.pageY,
                left: c.of.pageX
            }
        } else {
            q = b.outerWidth();
            u = b.outerHeight();
            v = b.offset()
        }
        a.each(["my", "at"], function () {
            var x = (c[this] || "").split(" ");
            if (x.length === 1) x = e.test(x[0]) ? x.concat(["center"]) : f.test(x[0]) ? ["center"].concat(x) : ["center", "center"];
            x[0] = e.test(x[0]) ? x[0] : "center";
            x[1] = f.test(x[1]) ? x[1] : "center";
            c[this] = x
        });
        if (o.length === 1) o[1] = o[0];
        n[0] = parseInt(n[0], 10) || 0;
        if (n.length === 1) n[1] = n[0];
        n[1] = parseInt(n[1], 10) || 0;
        if (c.at[0] === "right") v.left += q;
        else if (c.at[0] === "center") v.left += q / 2;
        if (c.at[1] === "bottom") v.top +=
            u;
        else if (c.at[1] === "center") v.top += u / 2;
        v.left += n[0];
        v.top += n[1];
        return this.each(function () {
            var x = a(this),
                z = x.outerWidth(),
                B = x.outerHeight(),
                C = parseInt(a.curCSS(this, "marginLeft", true)) || 0,
                w = parseInt(a.curCSS(this, "marginTop", true)) || 0,
                G = z + C + (parseInt(a.curCSS(this, "marginRight", true)) || 0),
                J = B + w + (parseInt(a.curCSS(this, "marginBottom", true)) || 0),
                E = a.extend({}, v),
                M;
            if (c.my[0] === "right") E.left -= z;
            else if (c.my[0] === "center") E.left -= z / 2;
            if (c.my[1] === "bottom") E.top -= B;
            else if (c.my[1] === "center") E.top -=
                B / 2;
            E.left = Math.round(E.left);
            E.top = Math.round(E.top);
            M = {
                left: E.left - C,
                top: E.top - w
            };
            a.each(["left", "top"], function (R, O) {
                a.ui.position[o[R]] && a.ui.position[o[R]][O](E, {
                    targetWidth: q,
                    targetHeight: u,
                    elemWidth: z,
                    elemHeight: B,
                    collisionPosition: M,
                    collisionWidth: G,
                    collisionHeight: J,
                    offset: n,
                    my: c.my,
                    at: c.at
                })
            });
            a.fn.bgiframe && x.bgiframe();
            x.offset(a.extend(E, {
                using: c.using
            }))
        })
    };
    a.ui.position = {
        fit: {
            left: function (c, b) {
                var l = a(window);
                l = b.collisionPosition.left + b.collisionWidth - l.width() - l.scrollLeft();
                c.left =
                    l > 0 ? c.left - l : Math.max(c.left - b.collisionPosition.left, c.left)
            },
            top: function (c, b) {
                var l = a(window);
                l = b.collisionPosition.top + b.collisionHeight - l.height() - l.scrollTop();
                c.top = l > 0 ? c.top - l : Math.max(c.top - b.collisionPosition.top, c.top)
            }
        },
        flip: {
            left: function (c, b) {
                if (b.at[0] !== "center") {
                    var l = a(window);
                    l = b.collisionPosition.left + b.collisionWidth - l.width() - l.scrollLeft();
                    var o = b.my[0] === "left" ? -b.elemWidth : b.my[0] === "right" ? b.elemWidth : 0,
                        n = b.at[0] === "left" ? b.targetWidth : -b.targetWidth,
                        q = -2 * b.offset[0];
                    c.left +=
                        b.collisionPosition.left < 0 ? o + n + q : l > 0 ? o + n + q : 0
                }
            },
            top: function (c, b) {
                if (b.at[1] !== "center") {
                    var l = a(window);
                    l = b.collisionPosition.top + b.collisionHeight - l.height() - l.scrollTop();
                    var o = b.my[1] === "top" ? -b.elemHeight : b.my[1] === "bottom" ? b.elemHeight : 0,
                        n = b.at[1] === "top" ? b.targetHeight : -b.targetHeight,
                        q = -2 * b.offset[1];
                    c.top += b.collisionPosition.top < 0 ? o + n + q : l > 0 ? o + n + q : 0
                }
            }
        }
    };
    if (!a.offset.setOffset) {
        a.offset.setOffset = function (c, b) {
            if (/static/.test(a.curCSS(c, "position"))) c.style.position = "relative";
            var l = a(c),
                o = l.offset(),
                n = parseInt(a.curCSS(c, "top", true), 10) || 0,
                q = parseInt(a.curCSS(c, "left", true), 10) || 0;
            o = {
                top: b.top - o.top + n,
                left: b.left - o.left + q
            };
            "using" in b ? b.using.call(c, o) : l.css(o)
        };
        a.fn.offset = function (c) {
            var b = this[0];
            if (!b || !b.ownerDocument) return null;
            if (c) return this.each(function () {
                a.offset.setOffset(this, c)
            });
            return g.call(this)
        }
    }
})(jQuery);
(function (a) {
    a.widget("ui.draggable", a.ui.mouse, {
        widgetEventPrefix: "drag",
        options: {
            addClasses: true,
            appendTo: "parent",
            axis: false,
            connectToSortable: false,
            containment: false,
            cursor: "auto",
            cursorAt: false,
            grid: false,
            handle: false,
            helper: "original",
            iframeFix: false,
            opacity: false,
            refreshPositions: false,
            revert: false,
            revertDuration: 500,
            scope: "default",
            scroll: true,
            scrollSensitivity: 20,
            scrollSpeed: 20,
            snap: false,
            snapMode: "both",
            snapTolerance: 20,
            stack: false,
            zIndex: false
        },
        _create: function () {
            if (this.options.helper ==
                "original" && !/^(?:r|a|f)/.test(this.element.css("position"))) this.element[0].style.position = "relative";
            this.options.addClasses && this.element.addClass("ui-draggable");
            this.options.disabled && this.element.addClass("ui-draggable-disabled");
            this._mouseInit()
        },
        destroy: function () {
            if (this.element.data("draggable")) {
                this.element.removeData("draggable").unbind(".draggable").removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled");
                this._mouseDestroy();
                return this
            }
        },
        _mouseCapture: function (e) {
            var f =
                this.options;
            if (this.helper || f.disabled || a(e.target).is(".ui-resizable-handle")) return false;
            this.handle = this._getHandle(e);
            if (!this.handle) return false;
            return true
        },
        _mouseStart: function (e) {
            var f = this.options;
            this.helper = this._createHelper(e);
            this._cacheHelperProportions();
            if (a.ui.ddmanager) a.ui.ddmanager.current = this;
            this._cacheMargins();
            this.cssPosition = this.helper.css("position");
            this.scrollParent = this.helper.scrollParent();
            this.offset = this.positionAy(e)) e = {
                left: +e[0],
                top: +e[1] || 0
            };
            if ("left" in e) this.offset.click.left = e.left + this.margins.left;
            if ("right" in e) this.offset.click.left = this.helperProportions.width - e.right + this.margins.left;
            if ("top" in e) this.offset.click.top = e.top + this.margins.top;
            if ("bottom" in e) this.offset.click.top = this.helperProportions.height - e.bottom + this.margins.top
        },
        _getParentOffset: function () {
            this.offsetParent = this.helper.offsetParent();
            var e = this.offsetParent.offset();
            if (this.cssPosition == "absolute" && this.scrollParent[0] != document && a.ui.contains(this.scrollParent[0],
                this.offsetParent[0])) {
                e.left += this.scrollParent.scrollLeft();
                e.top += this.scrollParent.scrollTop()
            }
            if (this.offsetParent[0] == document.body || this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() == "html" && a.browser.msie) e = {
                top: 0,
                left: 0
            };
            return {
                top: e.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
                left: e.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
            }
        },
        _getRelativeOffset: function () {
            if (this.cssPosition == "relative") {
                var e = this.element.position();
                return {
                    top: e.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(),
                    left: e.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()
                }
            } else return {
                top: 0,
                left: 0
            }
        },
        _cacheMargins: function () {
            this.margins = {
                left: parseInt(this.element.css("marginLeft"), 10) || 0,
                top: parseInt(this.element.css("marginTop"), 10) || 0,
                right: parseInt(this.element.css("marginRight"), 10) || 0,
                bottom: parseInt(this.element.css("marginBottom"), 10) || 0
            }
        },
        _cacheHelperProportions: function () {
            this.helperProportions = {
                width: this.helper.outerWidth(),
                height: this.helper.outerHeight()
            }
        },
        _setContainment: function () {
            var e = this.options;
            if (e.containment == "parent") e.containment = this.helper[0].parentNode;
            if (e.containment == "document" || e.containment == "window") this.containment = [(e.containment == "document" ? 0 : a(window).scrollLeft()) - this.offset.relative.left - this.offset.parent.left, (e.containment == "document" ? 0 : a(window).scrollTop()) - this.offset.relative.top - this.offset.parent.top, (e.containment == "document" ? 0 : a(window).scrollLeft()) + a(e.containment == "document" ?
                document : window).width() - this.helperProportions.width - this.margins.left, (e.containment == "document" ? 0 : a(window).scrollTop()) + (a(e.containment == "document" ? document : window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top];
            if (!/^(document|window|parent)$/.test(e.containment) && e.containment.constructor != Array) {
                var f = a(e.containment)[0];
                if (f) {
                    e = a(e.containment).offset();
                    var j = a(f).css("overflow") != "hidden";
                    this.containment = [e.left + (parseInt(a(f).css("borderLeftWidth"),
                        10) || 0) + (parseInt(a(f).css("paddingLeft"), 10) || 0), e.top + (parseInt(a(f).css("borderTopWidth"), 10) || 0) + (parseInt(a(f).css("paddingTop"), 10) || 0), e.left + (j ? Math.max(f.scrollWidth, f.offsetWidth) : f.offsetWidth) - (parseInt(a(f).css("borderLeftWidth"), 10) || 0) - (parseInt(a(f).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left - this.margins.right, e.top + (j ? Math.max(f.scrollHeight, f.offsetHeight) : f.offsetHeight) - (parseInt(a(f).css("borderTopWidth"), 10) || 0) - (parseInt(a(f).css("paddingBottom"),
                        10) || 0) - this.helperProportions.height - this.margins.top - this.margins.bottom]
                }
            } else if (e.containment.constructor == Array) this.containment = e.containment
        },
        _convertPositionTo: function (e, f) {
            if (!f) f = this.position;
            e = e == "absolute" ? 1 : -1;
            var j = this.cssPosition == "absolute" && !(this.scrollParent[0] != document && a.ui.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent,
                g = /(html|body)/i.test(j[0].tagName);
            return {
                top: f.top + this.offset.relative.top * e + this.offset.parent.top * e - (a.browser.safari &&
                    a.browser.version < 526 && this.cssPosition == "fixed" ? 0 : (this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : g ? 0 : j.scrollTop()) * e),
                left: f.left + this.offset.relative.left * e + this.offset.parent.left * e - (a.browser.safari && a.browser.version < 526 && this.cssPosition == "fixed" ? 0 : (this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : g ? 0 : j.scrollLeft()) * e)
            }
        },
        _generatePosition: function (e) {
            var f = this.options,
                j = this.cssPosition == "absolute" && !(this.scrollParent[0] != document && a.ui.contains(this.scrollParent[0],
                    this.offsetParent[0])) ? this.offsetParent : this.scrollParent,
                g = /(html|body)/i.test(j[0].tagName),
                c = e.pageX,
                b = e.pageY;
            if (this.originalPosition) {
                if (this.containment) {
                    if (e.pageX - this.offset.click.left < this.containment[0]) c = this.containment[0] + this.offset.click.left;
                    if (e.pageY - this.offset.click.top < this.containment[1]) b = this.containment[1] + this.offset.click.top;
                    if (e.pageX - this.offset.click.left > this.containment[2]) c = this.containment[2] + this.offset.click.left;
                    if (e.pageY - this.offset.click.top > this.containment[3]) b =
                        this.containment[3] + this.offset.click.top
                }
                if (f.grid) {
                    b = this.originalPageY + Math.round((b - this.originalPageY) / f.grid[1]) * f.grid[1];
                    b = this.containment ? !(b - this.offset.click.top < this.containment[1] || b - this.offset.click.top > this.containment[3]) ? b : !(b - this.offset.click.top < this.containment[1]) ? b - f.grid[1] : b + f.grid[1] : b;
                    c = this.originalPageX + Math.round((c - this.originalPageX) / f.grid[0]) * f.grid[0];
                    c = this.containment ? !(c - this.offset.click.left < this.containment[0] || c - this.offset.click.left > this.containment[2]) ?
                        c : !(c - this.offset.click.left < this.containment[0]) ? c - f.grid[0] : c + f.grid[0] : c
                }
            }
            return {
                top: b - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + (a.browser.safari && a.browser.version < 526 && this.cssPosition == "fixed" ? 0 : this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : g ? 0 : j.scrollTop()),
                left: c - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + (a.browser.safari && a.browser.version < 526 && this.cssPosition == "fixed" ? 0 : this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() :
                    g ? 0 : j.scrollLeft())
            }
        },
        _clear: function () {
            this.helper.removeClass("ui-draggable-dragging");
            this.helper[0] != this.element[0] && !this.cancelHelperRemoval && this.helper.remove();
            this.helper = null;
            this.cancelHelperRemoval = false
        },
        _trigger: function (e, f, j) {
            j = j || this._uiHash();
            a.ui.plugin.call(this, e, [f, j]);
            if (e == "drag") this.positionAbs = this._convertPositionTo("absolute");
            return a.Widget.prototype._trigger.call(this, e, f, j)
        },
        plugins: {},
        _uiHash: function () {
            return {
                helper: this.helper,
                position: this.position,
                originalPosition: this.originalPosition,
                offset: this.positionAbs
            }
        }
    });
    a.extend(a.ui.draggable, {
        version: "1.8.11"
    });
    a.ui.plugin.add("draggable", "connectToSortable", {
        start: function (e, f) {
            var j = a(this).data("draggable"),
                g = j.options,
                c = a.extend({}, f, {
                    item: j.element
                });
            j.sortables = [];
            a(g.connectToSortable).each(function () {
                var b = a.data(this, "sortable");
                if (b && !b.options.disabled) {
                    j.sortables.push({
                        instance: b,
                        shouldRevert: b.options.revert
                    });
                    b.refreshPositions();
                    b._trigger("activate", e, c)
                }
            })
        },
        stop: function (e, f) {
            var j = a(this).data("draggable"),
                g = a.extend({},
                    f, {
                        item: j.element
                    });
            a.each(j.sortables, function () {
                if (this.instance.isOver) {
                    this.instance.isOver = 0;
                    j.cancelHelperRemoval = true;
                    this.instance.cancelHelperRemoval = false;
                    if (this.shouldRevert) this.instance.options.revert = true;
                    this.instance._mouseStop(e);
                    this.instance.options.helper = this.instance.options._helper;
                    j.options.helper == "original" && this.instance.currentItem.css({
                        top: "auto",
                        left: "auto"
                    })
                } else {
                    this.instance.cancelHelperRemoval = false;
                    this.instance._trigger("deactivate", e, g)
                }
            })
        },
        drag: function (e, f) {
            var j =
                a(this).data("draggable"),
                g = this;
            a.each(j.sortables, function () {
                this.instance.positionAbs = j.positionAbs;
                this.instance.helperProportions = j.helperProportions;
                this.instance.offset.click = j.offset.click;
                if (this.instance._intersectsWith(this.instance.containerCache)) {
                    if (!this.instance.isOver) {
                        this.instance.isOver = 1;
                        this.instance.currentItem = a(g).clone().appendTo(this.instance.element).data("sortable-item", true);
                        this.instance.options._helper = this.instance.options.helper;
                        this.instance.options.helper = function () {
                            return f.helper[0]
                        };
                        e.target = this.instance.currentItem[0];
                        this.instance._mouseCapture(e, true);
                        this.instance._mouseStart(e, true, true);
                        this.instance.offset.click.top = j.offset.click.top;
                        this.instance.offset.click.left = j.offset.click.left;
                        this.instance.offset.parent.left -= j.offset.parent.left - this.instance.offset.parent.left;
                        this.instance.offset.parent.top -= j.offset.parent.top - this.instance.offset.parent.top;
                        j._trigger("toSortable", e);
                        j.dropped = this.instance.element;
                        j.currentItem = j.element;
                        this.instance.fromOutside = j
                    }
                    this.instance.currentItem &&
                        this.instance._mouseDrag(e)
                } else if (this.instance.isOver) {
                    this.instance.isOver = 0;
                    this.instance.cancelHelperRemoval = true;
                    this.instance.options.revert = false;
                    this.instance._trigger("out", e, this.instance._uiHash(this.instance));
                    this.instance._mouseStop(e, true);
                    this.instance.options.helper = this.instance.options._helper;
                    this.instance.currentItem.remove();
                    this.instance.placeholder && this.instance.placeholder.remove();
                    j._trigger("fromSortable", e);
                    j.dropped = false
                }
            })
        }
    });
    a.ui.plugin.add("draggable", "cursor", {
        start: function () {
            var e = a("body"),
                f = a(this).data("draggable").options;
            if (e.css("cursor")) f._cursor = e.css("cursor");
            e.css("cursor", f.cursor)
        },
        stop: function () {
            var e = a(this).data("draggable").options;
            e._cursor && a("body").css("cursor", e._cursor)
        }
    });
    a.ui.plugin.add("draggable", "iframeFix", {
        start: function () {
            var e = a(this).data("draggable").options;
            a(e.iframeFix === true ? "iframe" : e.iframeFix).each(function () {
                a('<div class="ui-draggable-iframeFix" style="background: #fff;"></div>').css({
                    width: this.offsetWidth + "px",
                    height: this.offsetHeight + "px",
                    position: "absolute",
                    opacity: "0.001",
                    zIndex: 1E3
                }).css(a(this).offset()).appendTo("body")
            })
        },
        stop: function () {
            a("div.ui-draggable-iframeFix").each(function () {
                this.parentNode.removeChild(this)
            })
        }
    });
    a.ui.plugin.add("draggable", "opacity", {
        start: function (e, f) {
            e = a(f.helper);
            f = a(this).data("draggable").options;
            if (e.css("opacity")) f._opacity = e.css("opacity");
            e.css("opacity", f.opacity)
        },
        stop: function (e, f) {
            e = a(this).data("draggable").options;
            e._opacity && a(f.helper).css("opacity",
                e._opacity)
        }
    });
    a.ui.plugin.add("draggable", "scroll", {
        start: function () {
            var e = a(this).data("draggable");
            if (e.scrollParent[0] != document && e.scrollParent[0].tagName != "HTML") e.overflowOffset = e.scrollParent.offset()
        },
        drag: function (e) {
            var f = a(this).data("draggable"),
                j = f.options,
                g = false;
            if (f.scrollParent[0] != document && f.scrollParent[0].tagName != "HTML") {
                if (!j.axis || j.axis != "x")
                    if (f.overflowOffset.top + f.scrollParent[0].offsetHeight - e.pageY < j.scrollSensitivity) f.scrollParent[0].scrollTop = g = f.scrollParent[0].scrollTop +
                        j.scrollSpeed;
                    else if (e.pageY - f.overflowOffset.top < j.scrollSensitivity) f.scrollParent[0].scrollTop = g = f.scrollParent[0].scrollTop - j.scrollSpeed;
                if (!j.axis || j.axis != "y")
                    if (f.overflowOffset.left + f.scrollParent[0].offsetWidth - e.pageX < j.scrollSensitivity) f.scrollParent[0].scrollLeft = g = f.scrollParent[0].scrollLeft + j.scrollSpeed;
                    else if (e.pageX - f.overflowOffset.left < j.scrollSensitivity) f.scrollParent[0].scrollLeft = g = f.scrollParent[0].scrollLeft - j.scrollSpeed
            } else {
                if (!j.axis || j.axis != "x")
                    if (e.pageY - a(document).scrollTop() <
                        j.scrollSensitivity) g = a(document).scrollTop(a(document).scrollTop() - j.scrollSpeed);
                    else if (a(window).height() - (e.pageY - a(document).scrollTop()) < j.scrollSensitivity) g = a(document).scrollTop(a(document).scrollTop() + j.scrollSpeed);
                if (!j.axis || j.axis != "y")
                    if (e.pageX - a(document).scrollLeft() < j.scrollSensitivity) g = a(document).scrollLeft(a(document).scrollLeft() - j.scrollSpeed);
                    else if (a(window).width() - (e.pageX - a(document).scrollLeft()) < j.scrollSensitivity) g = a(document).scrollLeft(a(document).scrollLeft() +
                    j.scrollSpeed)
            }
            g !== false && a.ui.ddmanager && !j.dropBehaviour && a.ui.ddmanager.prepareOffsets(f, e)
        }
    });
    a.ui.plugin.add("draggable", "snap", {
        start: function () {
            var e = a(this).data("draggable"),
                f = e.options;
            e.snapElements = [];
            a(f.snap.constructor != String ? f.snap.items || ":data(draggable)" : f.snap).each(function () {
                var j = a(this),
                    g = j.offset();
                this != e.element[0] && e.snapElements.push({
                    item: this,
                    width: j.outerWidth(),
                    height: j.outerHeight(),
                    top: g.top,
                    left: g.left
                })
            })
        },
        drag: function (e, f) {
            for (var j = a(this).data("draggable"),
                    g = j.options, c = g.snapTolerance, b = f.offset.left, l = b + j.helperProportions.width, o = f.offset.top, n = o + j.helperProportions.height, q = j.snapElements.length - 1; q >= 0; q--) {
                var u = j.snapElements[q].left,
                    v = u + j.snapElements[q].width,
                    x = j.snapElements[q].top,
                    z = x + j.snapElements[q].height;
                if (u - c < b && b < v + c && x - c < o && o < z + c || u - c < b && b < v + c && x - c < n && n < z + c || u - c < l && l < v + c && x - c < o && o < z + c || u - c < l && l < v + c && x - c < n && n < z + c) {
                    if (g.snapMode != "inner") {
                        var B = Math.abs(x - n) <= c,
                            C = Math.abs(z - o) <= c,
                            w = Math.abs(u - l) <= c,
                            G = Math.abs(v - b) <= c;
                        if (B) f.position.top =
                            j._convertPositionTo("relative", {
                                top: x - j.helperProportions.height,
                                left: 0
                            }).top - j.margins.top;
                        if (C) f.position.top = j._convertPositionTo("relative", {
                            top: z,
                            left: 0
                        }).top - j.margins.top;
                        if (w) f.position.left = j._convertPositionTo("relative", {
                            top: 0,
                            left: u - j.helperProportions.width
                        }).left - j.margins.left;
                        if (G) f.position.left = j._convertPositionTo("relative", {
                            top: 0,
                            left: v
                        }).left - j.margins.left
                    }
                    var J = B || C || w || G;
                    if (g.snapMode != "outer") {
                        B = Math.abs(x - o) <= c;
                        C = Math.abs(z - n) <= c;
                        w = Math.abs(u - b) <= c;
                        G = Math.abs(v - l) <= c;
                        if (B) f.position.top =
                            j._convertPositionTo("relative", {
                                top: x,
                                left: 0
                            }).top - j.margins.top;
                        if (C) f.position.top = j._convertPositionTo("relative", {
                            top: z - j.helperProportions.height,
                            left: 0
                        }).top - j.margins.top;
                        if (w) f.position.left = j._convertPositionTo("relative", {
                            top: 0,
                            left: u
                        }).left - j.margins.left;
                        if (G) f.position.left = j._convertPositionTo("relative", {
                            top: 0,
                            left: v - j.helperProportions.width
                        }).left - j.margins.left
                    }
                    if (!j.snapElements[q].snapping && (B || C || w || G || J)) j.options.snap.snap && j.options.snap.snap.call(j.element, e, a.extend(j._uiHash(), {
                        snapItem: j.snapElements[q].item
                    }));
                    j.snapElements[q].snapping = B || C || w || G || J
                } else {
                    j.snapElements[q].snapping && j.options.snap.release && j.options.snap.release.call(j.element, e, a.extend(j._uiHash(), {
                        snapItem: j.snapElements[q].item
                    }));
                    j.snapElements[q].snapping = false
                }
            }
        }
    });
    a.ui.plugin.add("draggable", "stack", {
        start: function () {
            var e = a(this).data("draggable").options;
            e = a.makeArray(a(e.stack)).sort(function (j, g) {
                return (parseInt(a(j).css("zIndex"), 10) || 0) - (parseInt(a(g).css("zIndex"), 10) || 0)
            });
            if (e.length) {
                var f =
                    parseInt(e[0].style.zIndex) || 0;
                a(e).each(function (j) {
                    this.style.zIndex = f + j
                });
                this[0].style.zIndex = f + e.length
            }
        }
    });
    a.ui.plugin.add("draggable", "zIndex", {
        start: function (e, f) {
            e = a(f.helper);
            f = a(this).data("draggable").options;
            if (e.css("zIndex")) f._zIndex = e.css("zIndex");
            e.css("zIndex", f.zIndex)
        },
        stop: function (e, f) {
            e = a(this).data("draggable").options;
            e._zIndex && a(f.helper).css("zIndex", e._zIndex)
        }
    })
})(jQuery);
(function (a) {
    a.widget("ui.droppable", {
        widgetEventPrefix: "drop",
        options: {
            accept: "*",
            activeClass: false,
            addClasses: true,
            greedy: false,
            hoverClass: false,
            scope: "default",
            tolerance: "intersect"
        },
        _create: function () {
            var e = this.options,
                f = e.accept;
            this.isover = 0;
            this.isout = 1;
            this.accept = a.isFunction(f) ? f : function (j) {
                return j.is(f)
            };
            this.proportions = {
                width: this.element[0].offsetWidth,
                height: this.element[0].offsetHeight
            };
            a.ui.ddmanager.droppables[e.scope] = a.ui.ddmanager.droppables[e.scope] || [];
            a.ui.ddmanager.droppables[e.scope].push(this);
            e.addClasses && this.element.addClass("ui-droppable")
        },
        destroy: function () {
            for (var e = a.ui.ddmanager.droppables[this.options.scope], f = 0; f < e.length; f++) e[f] == this && e.splice(f, 1);
            this.element.removeClass("ui-droppable ui-droppable-disabled").removeData("droppable").unbind(".droppable");
            return this
        },
        _setOption: function (e, f) {
            if (e == "accept") this.accept = a.isFunction(f) ? f : function (j) {
                return j.is(f)
            };
            a.Widget.prototype._setOption.apply(this, arguments)
        },
        _activate: function (e) {
            var f = a.ui.ddmanager.current;
            this.options.activeClass &&
                this.element.addClass(this.options.activeClass);
            f && this._trigger("activate", e, this.ui(f))
        },
        _deactivate: function (e) {
            var f = a.ui.ddmanager.current;
            this.options.activeClass && this.element.removeClass(this.options.activeClass);
            f && this._trigger("deactivate", e, this.ui(f))
        },
        _over: function (e) {
            var f = a.ui.ddmanager.current;
            if (!(!f || (f.currentItem || f.element)[0] == this.element[0]))
                if (this.accept.call(this.element[0], f.currentItem || f.element)) {
                    this.options.hoverClass && this.element.addClass(this.options.hoverClass);
                    this._trigger("over", e, this.ui(f))
                }
        },
        _out: function (e) {
            var f = a.ui.ddmanager.current;
            if (!(!f || (f.currentItem || f.element)[0] == this.element[0]))
                if (this.accept.call(this.element[0], f.currentItem || f.element)) {
                    this.options.hoverClass && this.element.removeClass(this.options.hoverClass);
                    this._trigger("out", e, this.ui(f))
                }
        },
        _drop: function (e, f) {
            var j = f || a.ui.ddmanager.current;
            if (!j || (j.currentItem || j.element)[0] == this.element[0]) return false;
            var g = false;
            this.element.find(":data(droppable)").not(".ui-draggable-dragging").each(function () {
                var c =
                    a.data(this, "droppable");
                if (c.options.greedy && !c.options.disabled && c.options.scope == j.options.scope && c.accept.call(c.element[0], j.currentItem || j.element) && a.ui.intersect(j, a.extend(c, {
                    offset: c.element.offset()
                }), c.options.tolerance)) {
                    g = true;
                    return false
                }
            });
            if (g) return false;
            if (this.accept.call(this.element[0], j.currentItem || j.element)) {
                this.options.activeClass && this.element.removeClass(this.options.activeClass);
                this.options.hoverClass && this.element.removeClass(this.options.hoverClass);
                this._trigger("drop",
                    e, this.ui(j));
                return this.element
            }
            return false
        },
        ui: function (e) {
            return {
                draggable: e.currentItem || e.element,
                helper: e.helper,
                position: e.position,
                offset: e.positionAbs
            }
        }
    });
    a.extend(a.ui.droppable, {
        version: "1.8.11"
    });
    a.ui.intersect = function (e, f, j) {
        if (!f.offset) return false;
        var g = (e.positionAbs || e.position.absolute).left,
            c = g + e.helperProportions.width,
            b = (e.positionAbs || e.position.absolute).top,
            l = b + e.helperProportions.height,
            o = f.offset.left,
            n = o + f.proportions.width,
            q = f.offset.top,
            u = q + f.proportions.height;
        switch (j) {
        case "fit":
            return o <=
                g && c <= n && q <= b && l <= u;
        case "intersect":
            return o < g + e.helperProportions.width / 2 && c - e.helperProportions.width / 2 < n && q < b + e.helperProportions.height / 2 && l - e.helperProportions.height / 2 < u;
        case "pointer":
            return a.ui.isOver((e.positionAbs || e.position.absolute).top + (e.clickOffset || e.offset.click).top, (e.positionAbs || e.position.absolute).left + (e.clickOffset || e.offset.click).left, q, o, f.proportions.height, f.proportions.width);
        case "touch":
            return (b >= q && b <= u || l >= q && l <= u || b < q && l > u) && (g >= o && g <= n || c >= o && c <= n || g < o && c > n);
        default:
            return false
        }
    };
    a.ui.ddmanager = {
        current: null,
        droppables: {
            "default": []
        },
        prepareOffsets: function (e, f) {
            var j = a.ui.ddmanager.droppables[e.options.scope] || [],
                g = f ? f.type : null,
                c = (e.currentItem || e.element).find(":data(droppable)").andSelf(),
                b = 0;
            a: for (; b < j.length; b++)
                if (!(j[b].options.disabled || e && !j[b].accept.call(j[b].element[0], e.currentItem || e.element))) {
                    for (var l = 0; l < c.length; l++)
                        if (c[l] == j[b].element[0]) {
                            j[b].proportions.height = 0;
                            continue a
                        }
                    j[b].visible = j[b].element.css("display") != "none";
                    if (j[b].visible) {
                        g ==
                            "mousedown" && j[b]._activate.call(j[b], f);
                        j[b].offset = j[b].element.offset();
                        j[b].proportions = {
                            width: j[b].element[0].offsetWidth,
                            height: j[b].element[0].offsetHeight
                        }
                    }
                }
        },
        drop: function (e, f) {
            var j = false;
            a.each(a.ui.ddmanager.droppables[e.options.scope] || [], function () {
                if (this.options) {
                    if (!this.options.disabled && this.visible && a.ui.intersect(e, this, this.options.tolerance)) j = j || this._drop.call(this, f);
                    if (!this.options.disabled && this.visible && this.accept.call(this.element[0], e.currentItem || e.element)) {
                        this.isout =
                            1;
                        this.isover = 0;
                        this._deactivate.call(this, f)
                    }
                }
            });
            return j
        },
        drag: function (e, f) {
            e.options.refreshPositions && a.ui.ddmanager.prepareOffsets(e, f);
            a.each(a.ui.ddmanager.droppables[e.options.scope] || [], function () {
                if (!(this.options.disabled || this.greedyChild || !this.visible)) {
                    var j = a.ui.intersect(e, this, this.options.tolerance);
                    if (j = !j && this.isover == 1 ? "isout" : j && this.isover == 0 ? "isover" : null) {
                        var g;
                        if (this.options.greedy) {
                            var c = this.element.parents(":data(droppable):eq(0)");
                            if (c.length) {
                                g = a.data(c[0], "droppable");
                                g.greedyChild = j == "isover" ? 1 : 0
                            }
                        }
                        if (g && j == "isover") {
                            g.isover = 0;
                            g.isout = 1;
                            g._out.call(g, f)
                        }
                        this[j] = 1;
                        this[j == "isout" ? "isover" : "isout"] = 0;
                        this[j == "isover" ? "_over" : "_out"].call(this, f);
                        if (g && j == "isout") {
                            g.isout = 0;
                            g.isover = 1;
                            g._over.call(g, f)
                        }
                    }
                }
            })
        }
    }
})(jQuery);
(function (a) {
    a.widget("ui.resizable", a.ui.mouse, {
        widgetEventPrefix: "resize",
        options: {
            alsoResize: false,
            animate: false,
            animateDuration: "slow",
            animateEasing: "swing",
            aspectRatio: false,
            autoHide: false,
            containment: false,
            ghost: false,
            grid: false,
            handles: "e,s,se",
            helper: false,
            maxHeight: null,
            maxWidth: null,
            minHeight: 10,
            minWidth: 10,
            zIndex: 1E3
        },
        _create: function () {
            var j = this,
                g = this.options;
            this.element.addClass("ui-resizable");
            a.extend(this, {
                _aspectRatio: !! g.aspectRatio,
                aspectRatio: g.aspectRatio,
                originalElement: this.element,
                _proportionallyResizeElements: [],
                _helper: g.helper || g.ghost || g.animate ? g.helper || "ui-resizable-helper" : null
            });
            if (this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i)) {
                /relative/.test(this.element.css("position")) && a.browser.opera && this.element.css({
                    position: "relative",
                    top: "auto",
                    left: "auto"
                });
                this.element.wrap(a('<div class="ui-wrapper" style="overflow: hidden;"></div>').css({
                    position: this.element.css("position"),
                    width: this.element.outerWidth(),
                    height: this.element.outerHeight(),
                    top: this.element.css("top"),
                    left: this.element.css("left")
                }));
                this.element = this.element.parent().data("resizable", this.element.data("resizable"));
                this.elementIsWrapper = true;
                this.element.css({
                    marginLeft: this.originalElement.css("marginLeft"),
                    marginTop: this.originalElement.css("marginTop"),
                    marginRight: this.originalElement.css("marginRight"),
                    marginBottom: this.originalElement.css("marginBottom")
                });
                this.originalElement.css({
                    marginLeft: 0,
                    marginTop: 0,
                    marginRight: 0,
                    marginBottom: 0
                });
                this.originalResizeStyle =
                    this.originalElement.css("resize");
                this.originalElement.css("resize", "none");
                this._proportionallyResizeElements.push(this.originalElement.css({
                    position: "static",
                    zoom: 1,
                    display: "block"
                }));
                this.originalElement.css({
                    margin: this.originalElement.css("margin")
                });
                this._proportionallyResize()
            }
            this.handles = g.handles || (!a(".ui-resizable-handle", this.element).length ? "e,s,se" : {
                n: ".ui-resizable-n",
                e: ".ui-resizable-e",
                s: ".ui-resizable-s",
                w: ".ui-resizable-w",
                se: ".ui-resizable-se",
                sw: ".ui-resizable-sw",
                ne: ".ui-resizable-ne",
                nw: ".ui-resizable-nw"
            });
            if (this.handles.constructor == String) {
                if (this.handles == "all") this.handles = "n,e,s,w,se,sw,ne,nw";
                var c = this.handles.split(",");
                this.handles = {};
                for (var b = 0; b < c.length; b++) {
                    var l = a.trim(c[b]),
                        o = a('<div class="ui-resizable-handle ' + ("ui-resizable-" + l) + '"></div>');
                    /sw|se|ne|nw/.test(l) && o.css({
                        zIndex: ++g.zIndex
                    });
                    "se" == l && o.addClass("ui-icon ui-icon-gripsmall-diagonal-se");
                    this.handles[l] = ".ui-resizable-" + l;
                    this.element.append(o)
                }
            }
            this._renderAxis = function (n) {
                n = n || this.element;
                for (var q in this.handles) {
                    if (this.handles[q].constructor ==
                        String) this.handles[q] = a(this.handles[q], this.element).show();
                    if (this.elementIsWrapper && this.originalElement[0].nodeName.match(/textarea|input|select|button/i)) {
                        var u = a(this.handles[q], this.element),
                            v = 0;
                        v = /sw|ne|nw|se|n|s/.test(q) ? u.outerHeight() : u.outerWidth();
                        u = ["padding", /ne|nw|n/.test(q) ? "Top" : /se|sw|s/.test(q) ? "Bottom" : /^e$/.test(q) ? "Right" : "Left"].join("");
                        n.css(u, v);
                        this._proportionallyResize()
                    }
                    a(this.handles[q])
                }
            };
            this._renderAxis(this.element);
            this._handles = a(".ui-resizable-handle", this.element).disableSelection();
            this._handles.mouseover(function () {
                if (!j.resizing) {
                    if (this.className) var n = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i);
                    j.axis = n && n[1] ? n[1] : "se"
                }
            });
            if (g.autoHide) {
                this._handles.hide();
                a(this.element).addClass("ui-resizable-autohide").hover(function () {
                    a(this).removeClass("ui-resizable-autohide");
                    j._handles.show()
                }, function () {
                    if (!j.resizing) {
                        a(this).addClass("ui-resizable-autohide");
                        j._handles.hide()
                    }
                })
            }
            this._mouseInit()
        },
        destroy: function () {
            this._mouseDestroy();
            var j = function (c) {
                a(c).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").unbind(".resizable").find(".ui-resizable-handle").remove()
            };
            if (this.elementIsWrapper) {
                j(this.element);
                var g = this.element;
                g.after(this.originalElement.css({
                    position: g.css("position"),
                    width: g.outerWidth(),
                    height: g.outerHeight(),
                    top: g.css("top"),
                    left: g.css("left")
                })).remove()
            }
            this.originalElement.css("resize", this.originalResizeStyle);
            j(this.originalElement);
            return this
        },
        _mouseCapture: function (j) {
            var g = false,
                c;
            for (c in this.handles)
                if (a(this.handles[c])[0] == j.target) g = true;
            return !this.options.disabled && g
        },
        _mouseStart: function (j) {
            var g = this.options,
                c = this.element.position(),
                b = this.element;
            this.resizing = true;
            this.documentScroll = {
                top: a(document).scrollTop(),
                left: a(document).scrollLeft()
            };
            if (b.is(".ui-draggable") || /absolute/.test(b.css("position"))) b.css({
                position: "absolute",
                top: c.top,
                left: c.left
            });
            a.browser.opera && /relative/.test(b.css("position")) && b.css({
                position: "relative",
                top: "auto",
                left: "auto"
            });
            this._renderProxy();
            c = e(this.helper.css("left"));
            var l = e(this.helper.css("top"));
            if (g.containment) {
                c += a(g.containment).scrollLeft() || 0;
                l += a(g.containment).scrollTop() || 0
            }
            this.offset =
                this.helper.offset();
            this.position = {
                left: c,
                top: l
            };
            this.size = this._helper ? {
                width: b.outerWidth(),
                height: b.outerHeight()
            } : {
                width: b.width(),
                height: b.height()
            };
            this.originalSize = this._helper ? {
                width: b.outerWidth(),
                height: b.outerHeight()
            } : {
                width: b.width(),
                height: b.height()
            };
            this.originalPosition = {
                left: c,
                top: l
            };
            this.sizeDiff = {
                width: b.outerWidth() - b.width(),
                height: b.outerHeight() - b.height()
            };
            this.originalMousePosition = {
                left: j.pageX,
                top: j.pageY
            };
            this.aspectRatio = typeof g.aspectRatio == "number" ? g.aspectRatio :
                this.originalSize.width / this.originalSize.height || 1;
            g = a(".ui-resizable-" + this.axis).css("cursor");
            a("body").css("cursor", g == "auto" ? this.axis + "-resize" : g);
            b.addClass("ui-resizable-resizing");
            this._propagate("start", j);
            return true
        },
        _mouseDrag: function (j) {
            var g = this.helper,
                c = this.originalMousePosition,
                b = this._change[this.axis];
            if (!b) return false;
            c = b.apply(this, [j, j.pageX - c.left || 0, j.pageY - c.top || 0]);
            if (this._aspectRatio || j.shiftKey) c = this._updateRatio(c, j);
            c = this._respectSize(c, j);
            this._propagate("resize",
                j);
            g.css({
                top: this.position.top + "px",
                left: this.position.left + "px",
                width: this.size.width + "px",
                height: this.size.height + "px"
            });
            !this._helper && this._proportionallyResizeElements.length && this._proportionallyResize();
            this._updateCache(c);
            this._trigger("resize", j, this.ui());
            return false
        },
        _mouseStop: function (j) {
            this.resizing = false;
            var g = this.options;
            if (this._helper) {
                var c = this._proportionallyResizeElements,
                    b = c.length && /textarea/i.test(c[0].nodeName);
                c = b && a.ui.hasScroll(c[0], "left") ? 0 : this.sizeDiff.height;
                b = b ? 0 : this.sizeDiff.width;
                b = {
                    width: this.helper.width() - b,
                    height: this.helper.height() - c
                };
                c = parseInt(this.element.css("left"), 10) + (this.position.left - this.originalPosition.left) || null;
                var l = parseInt(this.element.css("top"), 10) + (this.position.top - this.originalPosition.top) || null;
                g.animate || this.element.css(a.extend(b, {
                    top: l,
                    left: c
                }));
                this.helper.height(this.size.height);
                this.helper.width(this.size.width);
                this._helper && !g.animate && this._proportionallyResize()
            }
            a("body").css("cursor", "auto");
            this.element.removeClass("ui-resizable-resizing");
            this._propagate("stop", j);
            this._helper && this.helper.remove();
            return false
        },
        _updateCache: function (j) {
            this.offset = this.helper.offset();
            if (f(j.left)) this.position.left = j.left;
            if (f(j.top)) this.position.top = j.top;
            if (f(j.height)) this.size.height = j.height;
            if (f(j.width)) this.size.width = j.width
        },
        _updateRatio: function (j) {
            var g = this.position,
                c = this.size,
                b = this.axis;
            if (j.height) j.width = c.height * this.aspectRatio;
            else if (j.width) j.height = c.width / this.aspectRatio;
            if (b == "sw") {
                j.left = g.left + (c.width - j.width);
                j.top =
                    null
            }
            if (b == "nw") {
                j.top = g.top + (c.height - j.height);
                j.left = g.left + (c.width - j.width)
            }
            return j
        },
        _respectSize: function (j) {
            var g = this.options,
                c = this.axis,
                b = f(j.width) && g.maxWidth && g.maxWidth < j.width,
                l = f(j.height) && g.maxHeight && g.maxHeight < j.height,
                o = f(j.width) && g.minWidth && g.minWidth > j.width,
                n = f(j.height) && g.minHeight && g.minHeight > j.height;
            if (o) j.width = g.minWidth;
            if (n) j.height = g.minHeight;
            if (b) j.width = g.maxWidth;
            if (l) j.height = g.maxHeight;
            var q = this.originalPosition.left + this.originalSize.width,
                u = this.position.top +
                    this.size.height,
                v = /sw|nw|w/.test(c);
            c = /nw|ne|n/.test(c);
            if (o && v) j.left = q - g.minWidth;
            if (b && v) j.left = q - g.maxWidth;
            if (n && c) j.top = u - g.minHeight;
            if (l && c) j.top = u - g.maxHeight;
            if ((g = !j.width && !j.height) && !j.left && j.top) j.top = null;
            else if (g && !j.top && j.left) j.left = null;
            return j
        },
        _proportionallyResize: function () {
            if (this._proportionallyResizeElements.length)
                for (var j = this.helper || this.element, g = 0; g < this._proportionallyResizeElements.length; g++) {
                    var c = this._proportionallyResizeElements[g];
                    if (!this.borderDif) {
                        var b = [c.css("borderTopWidth"), c.css("borderRightWidth"), c.css("borderBottomWidth"), c.css("borderLeftWidth")],
                            l = [c.css("paddingTop"), c.css("paddingRight"), c.css("paddingBottom"), c.css("paddingLeft")];
                        this.borderDif = a.map(b, function (o, n) {
                            o = parseInt(o, 10) || 0;
                            n = parseInt(l[n], 10) || 0;
                            return o + n
                        })
                    }
                    a.browser.msie && (a(j).is(":hidden") || a(j).parents(":hidden").length) || c.css({
                        height: j.height() - this.borderDif[0] - this.borderDif[2] || 0,
                        width: j.width() - this.borderDif[1] - this.borderDif[3] || 0
                    })
                }
        },
        _renderProxy: function () {
            var j =
                this.options;
            this.elementOffset = this.element.offset();
            if (this._helper) {
                this.helper = this.helper || a('<div style="overflow:hidden;"></div>');
                var g = a.browser.msie && a.browser.version < 7,
                    c = g ? 1 : 0;
                g = g ? 2 : -1;
                this.helper.addClass(this._helper).css({
                    width: this.element.outerWidth() + g,
                    height: this.element.outerHeight() + g,
                    position: "absolute",
                    left: this.elementOffset.left - c + "px",
                    top: this.elementOffset.top - c + "px",
                    zIndex: ++j.zIndex
                });
                this.helper.appendTo("body").disableSelection()
            } else this.helper = this.element
        },
        _change: {
            e: function (j,
                g) {
                return {
                    width: this.originalSize.width + g
                }
            },
            w: function (j, g) {
                return {
                    left: this.originalPosition.left + g,
                    width: this.originalSize.width - g
                }
            },
            n: function (j, g, c) {
                return {
                    top: this.originalPosition.top + c,
                    height: this.originalSize.height - c
                }
            },
            s: function (j, g, c) {
                return {
                    height: this.originalSize.height + c
                }
            },
            se: function (j, g, c) {
                return a.extend(this._change.s.apply(this, arguments), this._change.e.apply(this, [j, g, c]))
            },
            sw: function (j, g, c) {
                return a.extend(this._change.s.apply(this, arguments), this._change.w.apply(this, [j, g,
                    c
                ]))
            },
            ne: function (j, g, c) {
                return a.extend(this._change.n.apply(this, arguments), this._change.e.apply(this, [j, g, c]))
            },
            nw: function (j, g, c) {
                return a.extend(this._change.n.apply(this, arguments), this._change.w.apply(this, [j, g, c]))
            }
        },
        _propagate: function (j, g) {
            a.ui.plugin.call(this, j, [g, this.ui()]);
            j != "resize" && this._trigger(j, g, this.ui())
        },
        plugins: {},
        ui: function () {
            return {
                originalElement: this.originalElement,
                element: this.element,
                helper: this.helper,
                position: this.position,
                size: this.size,
                originalSize: this.originalSize,
                originalPosition: this.originalPosition
            }
        }
    });
    a.extend(a.ui.resizable, {
        version: "1.8.11"
    });
    a.ui.plugin.add("resizable", "alsoResize", {
        start: function () {
            var j = a(this).data("resizable").options,
                g = function (c) {
                    a(c).each(function () {
                        var b = a(this);
                        b.data("resizable-alsoresize", {
                            width: parseInt(b.width(), 10),
                            height: parseInt(b.height(), 10),
                            left: parseInt(b.css("left"), 10),
                            top: parseInt(b.css("top"), 10),
                            position: b.css("position")
                        })
                    })
                };
            if (typeof j.alsoResize == "object" && !j.alsoResize.parentNode)
                if (j.alsoResize.length) {
                    j.alsoResize =
                        j.alsoResize[0];
                    g(j.alsoResize)
                } else a.each(j.alsoResize, function (c) {
                    g(c)
                });
                else g(j.alsoResize)
        },
        resize: function (j, g) {
            var c = a(this).data("resizable");
            j = c.options;
            var b = c.originalSize,
                l = c.originalPosition,
                o = {
                    height: c.size.height - b.height || 0,
                    width: c.size.width - b.width || 0,
                    top: c.position.top - l.top || 0,
                    left: c.position.left - l.left || 0
                }, n = function (q, u) {
                    a(q).each(function () {
                        var v = a(this),
                            x = a(this).data("resizable-alsoresize"),
                            z = {}, B = u && u.length ? u : v.parents(g.originalElement[0]).length ? ["width", "height"] : ["width",
                                "height", "top", "left"
                            ];
                        a.each(B, function (C, w) {
                            if ((C = (x[w] || 0) + (o[w] || 0)) && C >= 0) z[w] = C || null
                        });
                        if (a.browser.opera && /relative/.test(v.css("position"))) {
                            c._revertToRelativePosition = true;
                            v.css({
                                position: "absolute",
                                top: "auto",
                                left: "auto"
                            })
                        }
                        v.css(z)
                    })
                };
            typeof j.alsoResize == "object" && !j.alsoResize.nodeType ? a.each(j.alsoResize, function (q, u) {
                n(q, u)
            }) : n(j.alsoResize)
        },
        stop: function () {
            var j = a(this).data("resizable"),
                g = j.options,
                c = function (b) {
                    a(b).each(function () {
                        var l = a(this);
                        l.css({
                            position: l.data("resizable-alsoresize").position
                        })
                    })
                };
            if (j._revertToRelativePosition) {
                j._revertToRelativePosition = false;
                typeof g.alsoResize == "object" && !g.alsoResize.nodeType ? a.each(g.alsoResize, function (b) {
                    c(b)
                }) : c(g.alsoResize)
            }
            a(this).removeData("resizable-alsoresize")
        }
    });
    a.ui.plugin.add("resizable", "animate", {
        stop: function (j) {
            var g = a(this).data("resizable"),
                c = g.options,
                b = g._proportionallyResizeElements,
                l = b.length && /textarea/i.test(b[0].nodeName),
                o = l && a.ui.hasScroll(b[0], "left") ? 0 : g.sizeDiff.height;
            l = {
                width: g.size.width - (l ? 0 : g.sizeDiff.width),
                height: g.size.height - o
            };
            o = parseInt(g.element.css("left"), 10) + (g.position.left - g.originalPosition.left) || null;
            var n = parseInt(g.element.css("top"), 10) + (g.position.top - g.originalPosition.top) || null;
            g.element.animate(a.extend(l, n && o ? {
                top: n,
                left: o
            } : {}), {
                duration: c.animateDuration,
                easing: c.animateEasing,
                step: function () {
                    var q = {
                        width: parseInt(g.element.css("width"), 10),
                        height: parseInt(g.element.css("height"), 10),
                        top: parseInt(g.element.css("top"), 10),
                        left: parseInt(g.element.css("left"), 10)
                    };
                    b && b.length && a(b[0]).css({
                        width: q.width,
                        height: q.height
                    });
                    g._updateCache(q);
                    g._propagate("resize", j)
                }
            })
        }
    });
    a.ui.plugin.add("resizable", "containment", {
        start: function () {
            var j = a(this).data("resizable"),
                g = j.element,
                c = j.options.containment;
            if (g = c instanceof a ? c.get(0) : /parent/.test(c) ? g.parent().get(0) : c) {
                j.containerElement = a(g);
                if (/document/.test(c) || c == document) {
                    j.containerOffset = {
                        left: 0,
                        top: 0
                    };
                    j.containerPosition = {
                        left: 0,
                        top: 0
                    };
                    j.parentData = {
                        element: a(document),
                        left: 0,
                        top: 0,
                        width: a(document).width(),
                        height: a(document).height() || document.body.parentNode.scrollHeight
                    }
                } else {
                    var b =
                        a(g),
                        l = [];
                    a(["Top", "Right", "Left", "Bottom"]).each(function (q, u) {
                        l[q] = e(b.css("padding" + u))
                    });
                    j.containerOffset = b.offset();
                    j.containerPosition = b.position();
                    j.containerSize = {
                        height: b.innerHeight() - l[3],
                        width: b.innerWidth() - l[1]
                    };
                    c = j.containerOffset;
                    var o = j.containerSize.height,
                        n = j.containerSize.width;
                    n = a.ui.hasScroll(g, "left") ? g.scrollWidth : n;
                    o = a.ui.hasScroll(g) ? g.scrollHeight : o;
                    j.parentData = {
                        element: g,
                        left: c.left,
                        top: c.top,
                        width: n,
                        height: o
                    }
                }
            }
        },
        resize: function (j) {
            var g = a(this).data("resizable"),
                c = g.options,
                b = g.containerOffset,
                l = g.position;
            j = g._aspectRatio || j.shiftKey;
            var o = {
                top: 0,
                left: 0
            }, n = g.containerElement;
            if (n[0] != document && /static/.test(n.css("position"))) o = b;
            if (l.left < (g._helper ? b.left : 0)) {
                g.size.width += g._helper ? g.position.left - b.left : g.position.left - o.left;
                if (j) g.size.height = g.size.width / c.aspectRatio;
                g.position.left = c.helper ? b.left : 0
            }
            if (l.top < (g._helper ? b.top : 0)) {
                g.size.height += g._helper ? g.position.top - b.top : g.position.top;
                if (j) g.size.width = g.size.height * c.aspectRatio;
                g.position.top = g._helper ?
                    b.top : 0
            }
            g.offset.left = g.parentData.left + g.position.left;
            g.offset.top = g.parentData.top + g.position.top;
            c = Math.abs((g._helper ? g.offset.left - o.left : g.offset.left - o.left) + g.sizeDiff.width);
            b = Math.abs((g._helper ? g.offset.top - o.top : g.offset.top - b.top) + g.sizeDiff.height);
            l = g.containerElement.get(0) == g.element.parent().get(0);
            o = /relative|absolute/.test(g.containerElement.css("position"));
            if (l && o) c -= g.parentData.left;
            if (c + g.size.width >= g.parentData.width) {
                g.size.width = g.parentData.width - c;
                if (j) g.size.height =
                    g.size.width / g.aspectRatio
            }
            if (b + g.size.height >= g.parentData.height) {
                g.size.height = g.parentData.height - b;
                if (j) g.size.width = g.size.height * g.aspectRatio
            }
        },
        stop: function () {
            var j = a(this).data("resizable"),
                g = j.options,
                c = j.containerOffset,
                b = j.containerPosition,
                l = j.containerElement,
                o = a(j.helper),
                n = o.offset(),
                q = o.outerWidth() - j.sizeDiff.width;
            o = o.outerHeight() - j.sizeDiff.height;
            j._helper && !g.animate && /relative/.test(l.css("position")) && a(this).css({
                left: n.left - b.left - c.left,
                width: q,
                height: o
            });
            j._helper && !g.animate &&
                /static/.test(l.css("position")) && a(this).css({
                    left: n.left - b.left - c.left,
                    width: q,
                    height: o
                })
        }
    });
    a.ui.plugin.add("resizable", "ghost", {
        start: function () {
            var j = a(this).data("resizable"),
                g = j.options,
                c = j.size;
            j.ghost = j.originalElement.clone();
            j.ghost.css({
                opacity: 0.25,
                display: "block",
                position: "relative",
                height: c.height,
                width: c.width,
                margin: 0,
                left: 0,
                top: 0
            }).addClass("ui-resizable-ghost").addClass(typeof g.ghost == "string" ? g.ghost : "");
            j.ghost.appendTo(j.helper)
        },
        resize: function () {
            var j = a(this).data("resizable");
            j.ghost && j.ghost.css({
                position: "relative",
                height: j.size.height,
                width: j.size.width
            })
        },
        stop: function () {
            var j = a(this).data("resizable");
            j.ghost && j.helper && j.helper.get(0).removeChild(j.ghost.get(0))
        }
    });
    a.ui.plugin.add("resizable", "grid", {
        resize: function () {
            var j = a(this).data("resizable"),
                g = j.options,
                c = j.size,
                b = j.originalSize,
                l = j.originalPosition,
                o = j.axis;
            g.grid = typeof g.grid == "number" ? [g.grid, g.grid] : g.grid;
            var n = Math.round((c.width - b.width) / (g.grid[0] || 1)) * (g.grid[0] || 1);
            g = Math.round((c.height - b.height) /
                (g.grid[1] || 1)) * (g.grid[1] || 1);
            if (/^(se|s|e)$/.test(o)) {
                j.size.width = b.width + n;
                j.size.height = b.height + g
            } else if (/^(ne)$/.test(o)) {
                j.size.width = b.width + n;
                j.size.height = b.height + g;
                j.position.top = l.top - g
            } else {
                if (/^(sw)$/.test(o)) {
                    j.size.width = b.width + n;
                    j.size.height = b.height + g
                } else {
                    j.size.width = b.width + n;
                    j.size.height = b.height + g;
                    j.position.top = l.top - g
                }
                j.position.left = l.left - n
            }
        }
    });
    var e = function (j) {
        return parseInt(j, 10) || 0
    }, f = function (j) {
            return !isNaN(parseInt(j, 10))
        }
})(jQuery);
(function (a) {
    a.widget("ui.selectable", a.ui.mouse, {
        options: {
            appendTo: "body",
            autoRefresh: true,
            distance: 0,
            filter: "*",
            tolerance: "touch"
        },
        _create: function () {
            var e = this;
            this.element.addClass("ui-selectable");
            this.dragged = false;
            var f;
            this.refresh = function () {
                f = a(e.options.filter, e.element[0]);
                f.each(function () {
                    var j = a(this),
                        g = j.offset();
                    a.data(this, "selectable-item", {
                        element: this,
                        $element: j,
                        left: g.left,
                        top: g.top,
                        right: g.left + j.outerWidth(),
                        bottom: g.top + j.outerHeight(),
                        startselected: false,
                        selected: j.hasClass("ui-selected"),
                        selecting: j.hasClass("ui-selecting"),
                        unselecting: j.hasClass("ui-unselecting")
                    })
                })
            };
            this.refresh();
            this.selectees = f.addClass("ui-selectee");
            this._mouseInit();
            this.helper = a("<div class='ui-selectable-helper'></div>")
        },
        destroy: function () {
            this.selectees.removeClass("ui-selectee").removeData("selectable-item");
            this.element.removeClass("ui-selectable ui-selectable-disabled").removeData("selectable").unbind(".selectable");
            this._mouseDestroy();
            return this
        },
        _mouseStart: function (e) {
            var f = this;
            this.opos = [e.pageX,
                e.pageY
            ];
            if (!this.options.disabled) {
                var j = this.options;
                this.selectees = a(j.filter, this.element[0]);
                this._trigger("start", e);
                a(j.appendTo).append(this.helper);
                this.helper.css({
                    left: e.clientX,
                    top: e.clientY,
                    width: 0,
                    height: 0
                });
                j.autoRefresh && this.refresh();
                this.selectees.filter(".ui-selected").each(function () {
                    var g = a.data(this, "selectable-item");
                    g.startselected = true;
                    if (!e.metaKey) {
                        g.$element.removeClass("ui-selected");
                        g.selected = false;
                        g.$element.addClass("ui-unselecting");
                        g.unselecting = true;
                        f._trigger("unselecting",
                            e, {
                                unselecting: g.element
                            })
                    }
                });
                a(e.target).parents().andSelf().each(function () {
                    var g = a.data(this, "selectable-item");
                    if (g) {
                        var c = !e.metaKey || !g.$element.hasClass("ui-selected");
                        g.$element.removeClass(c ? "ui-unselecting" : "ui-selected").addClass(c ? "ui-selecting" : "ui-unselecting");
                        g.unselecting = !c;
                        g.selecting = c;
                        (g.selected = c) ? f._trigger("selecting", e, {
                            selecting: g.element
                        }) : f._trigger("unselecting", e, {
                            unselecting: g.element
                        });
                        return false
                    }
                })
            }
        },
        _mouseDrag: function (e) {
            var f = this;
            this.dragged = true;
            if (!this.options.disabled) {
                var j =
                    this.options,
                    g = this.opos[0],
                    c = this.opos[1],
                    b = e.pageX,
                    l = e.pageY;
                if (g > b) {
                    var o = b;
                    b = g;
                    g = o
                }
                if (c > l) {
                    o = l;
                    l = c;
                    c = o
                }
                this.helper.css({
                    left: g,
                    top: c,
                    width: b - g,
                    height: l - c
                });
                this.selectees.each(function () {
                    var n = a.data(this, "selectable-item");
                    if (!(!n || n.element == f.element[0])) {
                        var q = false;
                        if (j.tolerance == "touch") q = !(n.left > b || n.right < g || n.top > l || n.bottom < c);
                        else if (j.tolerance == "fit") q = n.left > g && n.right < b && n.top > c && n.bottom < l;
                        if (q) {
                            if (n.selected) {
                                n.$element.removeClass("ui-selected");
                                n.selected = false
                            }
                            if (n.unselecting) {
                                n.$element.removeClass("ui-unselecting");
                                n.unselecting = false
                            }
                            if (!n.selecting) {
                                n.$element.addClass("ui-selecting");
                                n.selecting = true;
                                f._trigger("selecting", e, {
                                    selecting: n.element
                                })
                            }
                        } else {
                            if (n.selecting)
                                if (e.metaKey && n.startselected) {
                                    n.$element.removeClass("ui-selecting");
                                    n.selecting = false;
                                    n.$element.addClass("ui-selected");
                                    n.selected = true
                                } else {
                                    n.$element.removeClass("ui-selecting");
                                    n.selecting = false;
                                    if (n.startselected) {
                                        n.$element.addClass("ui-unselecting");
                                        n.unselecting = true
                                    }
                                    f._trigger("unselecting", e, {
                                        unselecting: n.element
                                    })
                                }
                            if (n.selected)
                                if (!e.metaKey && !n.startselected) {
                                    n.$element.removeClass("ui-selected");
                                    n.selected = false;
                                    n.$element.addClass("ui-unselecting");
                                    n.unselecting = true;
                                    f._trigger("unselecting", e, {
                                        unselecting: n.element
                                    })
                                }
                        }
                    }
                });
                return false
            }
        },
        _mouseStop: function (e) {
            var f = this;
            this.dragged = false;
            a(".ui-unselecting", this.element[0]).each(function () {
                var j = a.data(this, "selectable-item");
                j.$element.removeClass("ui-unselecting");
                j.unselecting = false;
                j.startselected = false;
                f._trigger("unselected", e, {
                    unselected: j.element
                })
            });
            a(".ui-selecting", this.element[0]).each(function () {
                var j =
                    a.data(this, "selectable-item");
                j.$element.removeClass("ui-selecting").addClass("ui-selected");
                j.selecting = false;
                j.selected = true;
                j.startselected = true;
                f._trigger("selected", e, {
                    selected: j.element
                })
            });
            this._trigger("stop", e);
            this.helper.remove();
            return false
        }
    });
    a.extend(a.ui.selectable, {
        version: "1.8.11"
    })
})(jQuery);
(function (a) {
    a.widget("ui.sortable", a.ui.mouse, {
        widgetEventPrefix: "sort",
        options: {
            appendTo: "parent",
            axis: false,
            connectWith: false,
            containment: false,
            cursor: "auto",
            cursorAt: false,
            dropOnEmpty: true,
            forcePlaceholderSize: false,
            forceHelperSize: false,
            grid: false,
            handle: false,
            helper: "original",
            items: "> *",
            opacity: false,
            placeholder: false,
            revert: false,
            scroll: true,
            scrollSensitivity: 20,
            scrollSpeed: 20,
            scope: "default",
            tolerance: "intersect",
            zIndex: 1E3
        },
        _create: function () {
            this.containerCache = {};
            this.element.addClass("ui-sortable");
            this.refresh();
            this.floating = this.items.length ? /left|right/.test(this.items[0].item.css("float")) || /inline|table-cell/.test(this.items[0].item.css("display")) : false;
            this.offset = this.element.offset();
            this._mouseInit()
        },
        destroy: function () {
            this.element.removeClass("ui-sortable ui-sortable-disabled").removeData("sortable").unbind(".sortable");
            this._mouseDestroy();
            for (var e = this.items.length - 1; e >= 0; e--) this.items[e].item.removeData("sortable-item");
            return this
        },
        _setOption: function (e, f) {
            if (e === "disabled") {
                this.options[e] =
                    f;
                this.widget()[f ? "addClass" : "removeClass"]("ui-sortable-disabled")
            } else a.Widget.prototype._setOption.apply(this, arguments)
        },
        _mouseCapture: function (e, f) {
            if (this.reverting) return false;
            if (this.options.disabled || this.options.type == "static") return false;
            this._refreshItems(e);
            var j = null,
                g = this;
            a(e.target).parents().each(function () {
                if (a.data(this, "sortable-item") == g) {
                    j = a(this);
                    return false
                }
            });
            if (a.data(e.target, "sortable-item") == g) j = a(e.target);
            if (!j) return false;
            if (this.options.handle && !f) {
                var c = false;
                a(this.options.handle, j).find("*").andSelf().each(function () {
                    if (this == e.target) c = true
                });
                if (!c) return false
            }
            this.currentItem = j;
            this._removeCurrentsFromItems();
            return true
        },
        _mouseStart: function (e, f, j) {
            f = this.options;
            this.currentContainer = this;
            this.refreshPositions();
            this.helper = this._createHelper(e);
            this._cacheHelperProportions();
            this._cacheMargins();
            this.scrollParent = this.helper.scrollParent();
            this.offset = this.currentItem.offset();
            this.offset = {
                top: this.offset.top - this.margins.top,
                left: this.offset.left - this.margins.left
            };
            this.helper.css("position", "absolute");
            this.cssPosition = this.helper.css("position");
            a.extend(this.offset, {
                click: {
                    left: e.pageX - this.offset.left,
                    top: e.pageY - this.offset.top
                },
                parent: this._getParentOffset(),
                relative: this._getRelativeOffset()
            });
            this.originalPosition = this._generatePosition(e);
            this.originalPageX = e.pageX;
            this.originalPageY = e.pageY;
            f.cursorAt && this._adjustOffsetFromHelper(f.cursorAt);
            this.domPosition = {
                prev: this.currentItem.prev()[0],
                parent: this.currentItem.parent()[0]
            };
            this.helper[0] != this.currentItem[0] && this.currentItem.hide();
            this._createPlaceholder();
            f.containment && this._setContainment();
            if (f.cursor) {
                if (a("body").css("cursor")) this._storedCursor = a("body").css("cursor");
                a("body").css("cursor", f.cursor)
            }
            if (f.opacity) {
                if (this.helper.css("opacity")) this._storedOpacity = this.helper.css("opacity");
                this.helper.css("opacity", f.opacity)
            }
            if (f.zIndex) {
                if (this.helper.css("zIndex")) this._storedZIndex = this.helper.css("zIndex");
                this.helper.css("zIndex", f.zIndex)
            }
            if (this.scrollParent[0] !=
                document && this.scrollParent[0].tagName != "HTML") this.overflowOffset = this.scrollParent.offset();
            this._trigger("start", e, this._uiHash());
            this._preserveHelperProportions || this._cacheHelperProportions();
            if (!j)
                for (j = this.containers.length - 1; j >= 0; j--) this.containers[j]._trigger("activate", e, this._uiHash(this));
            if (a.ui.ddmanager) a.ui.ddmanager.current = this;
            a.ui.ddmanager && !f.dropBehaviour && a.ui.ddmanager.prepareOffsets(this, e);
            this.dragging = true;
            this.helper.addClass("ui-sortable-helper");
            this._mouseDrag(e);
            return true
        },
        _mouseDrag: function (e) {
            this.position = this._generatePosition(e);
            this.positionAbs = this._convertPositionTo("absolute");
            if (!this.lastPositionAbs) this.lastPositionAbs = this.positionAbs;
            if (this.options.scroll) {
                var f = this.options,
                    j = false;
                if (this.scrollParent[0] != document && this.scrollParent[0].tagName != "HTML") {
                    if (this.overflowOffset.top + this.scrollParent[0].offsetHeight - e.pageY < f.scrollSensitivity) this.scrollParent[0].scrollTop = j = this.scrollParent[0].scrollTop + f.scrollSpeed;
                    else if (e.pageY - this.overflowOffset.top <
                        f.scrollSensitivity) this.scrollParent[0].scrollTop = j = this.scrollParent[0].scrollTop - f.scrollSpeed;
                    if (this.overflowOffset.left + this.scrollParent[0].offsetWidth - e.pageX < f.scrollSensitivity) this.scrollParent[0].scrollLeft = j = this.scrollParent[0].scrollLeft + f.scrollSpeed;
                    else if (e.pageX - this.overflowOffset.left < f.scrollSensitivity) this.scrollParent[0].scrollLeft = j = this.scrollParent[0].scrollLeft - f.scrollSpeed
                } else {
                    if (e.pageY - a(document).scrollTop() < f.scrollSensitivity) j = a(document).scrollTop(a(document).scrollTop() -
                        f.scrollSpeed);
                    else if (a(window).height() - (e.pageY - a(document).scrollTop()) < f.scrollSensitivity) j = a(document).scrollTop(a(document).scrollTop() + f.scrollSpeed);
                    if (e.pageX - a(document).scrollLeft() < f.scrollSensitivity) j = a(document).scrollLeft(a(document).scrollLeft() - f.scrollSpeed);
                    else if (a(window).width() - (e.pageX - a(document).scrollLeft()) < f.scrollSensitivity) j = a(document).scrollLeft(a(document).scrollLeft() + f.scrollSpeed)
                }
                j !== false && a.ui.ddmanager && !f.dropBehaviour && a.ui.ddmanager.prepareOffsets(this,
                    e)
            }
            this.positionAbs = this._convertPositionTo("absolute");
            if (!this.options.axis || this.options.axis != "y") this.helper[0].style.left = this.position.left + "px";
            if (!this.options.axis || this.options.axis != "x") this.helper[0].style.top = this.position.top + "px";
            for (f = this.items.length - 1; f >= 0; f--) {
                j = this.items[f];
                var g = j.item[0],
                    c = this._intersectsWithPointer(j);
                if (c)
                    if (g != this.currentItem[0] && this.placeholder[c == 1 ? "next" : "prev"]()[0] != g && !a.ui.contains(this.placeholder[0], g) && (this.options.type == "semi-dynamic" ? !a.ui.contains(this.element[0],
                        g) : true)) {
                        this.direction = c == 1 ? "down" : "up";
                        if (this.options.tolerance == "pointer" || this._intersectsWithSides(j)) this._rearrange(e, j);
                        else break;
                        this._trigger("change", e, this._uiHash());
                        break
                    }
            }
            this._contactContainers(e);
            a.ui.ddmanager && a.ui.ddmanager.drag(this, e);
            this._trigger("sort", e, this._uiHash());
            this.lastPositionAbs = this.positionAbs;
            return false
        },
        _mouseStop: function (e, f) {
            if (e) {
                a.ui.ddmanager && !this.options.dropBehaviour && a.ui.ddmanager.drop(this, e);
                if (this.options.revert) {
                    var j = this;
                    f = j.placeholder.offset();
                    j.reverting = true;
                    a(this.helper).animate({
                        left: f.left - this.offset.parent.left - j.margins.left + (this.offsetParent[0] == document.body ? 0 : this.offsetParent[0].scrollLeft),
                        top: f.top - this.offset.parent.top - j.margins.top + (this.offsetParent[0] == document.body ? 0 : this.offsetParent[0].scrollTop)
                    }, parseInt(this.options.revert, 10) || 500, function () {
                        j._clear(e)
                    })
                } else this._clear(e, f);
                return false
            }
        },
        cancel: function () {
            if (this.dragging) {
                this._mouseUp({
                    target: null
                });
                this.options.helper == "original" ? this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper") :
                    this.currentItem.show();
                for (var e = this.containers.length - 1; e >= 0; e--) {
                    this.containers[e]._trigger("deactivate", null, this._uiHash(this));
                    if (this.containers[e].containerCache.over) {
                        this.containers[e]._trigger("out", null, this._uiHash(this));
                        this.containers[e].containerCache.over = 0
                    }
                }
            }
            if (this.placeholder) {
                this.placeholder[0].parentNode && this.placeholder[0].parentNode.removeChild(this.placeholder[0]);
                this.options.helper != "original" && this.helper && this.helper[0].parentNode && this.helper.remove();
                a.extend(this, {
                    helper: null,
                    dragging: false,
                    reverting: false,
                    _noFinalSort: null
                });
                this.domPosition.prev ? a(this.domPosition.prev).after(this.currentItem) : a(this.domPosition.parent).prepend(this.currentItem)
            }
            return this
        },
        serialize: function (e) {
            var f = this._getItemsAsjQuery(e && e.connected),
                j = [];
            e = e || {};
            a(f).each(function () {
                var g = (a(e.item || this).attr(e.attribute || "id") || "").match(e.expression || /(.+)[-=_](.+)/);
                if (g) j.push((e.key || g[1] + "[]") + "=" + (e.key && e.expression ? g[1] : g[2]))
            });
            !j.length && e.key && j.push(e.key + "=");
            return j.join("&")
        },
        toArray: function (e) {
            var f = this._getItemsAsjQuery(e && e.connected),
                j = [];
            e = e || {};
            f.each(function () {
                j.push(a(e.item || this).attr(e.attribute || "id") || "")
            });
            return j
        },
        _intersectsWith: function (e) {
            var f = this.positionAbs.left,
                j = f + this.helperProportions.width,
                g = this.positionAbs.top,
                c = g + this.helperProportions.height,
                b = e.left,
                l = b + e.width,
                o = e.top,
                n = o + e.height,
                q = this.offset.click.top,
                u = this.offset.click.left;
            q = g + q > o && g + q < n && f + u > b && f + u < l;
            return this.options.tolerance == "pointer" || this.options.forcePointerForContainers ||
                this.options.tolerance != "pointer" && this.helperProportions[this.floating ? "width" : "height"] > e[this.floating ? "width" : "height"] ? q : b < f + this.helperProportions.width / 2 && j - this.helperProportions.width / 2 < l && o < g + this.helperProportions.height / 2 && c - this.helperProportions.height / 2 < n
        },
        _intersectsWithPointer: function (e) {
            var f = a.ui.isOverAxis(this.positionAbs.top + this.offset.click.top, e.top, e.height);
            e = a.ui.isOverAxis(this.positionAbs.left + this.offset.click.left, e.left, e.width);
            f = f && e;
            e = this._getDragVerticalDirection();
            var j = this._getDragHorizontalDirection();
            if (!f) return false;
            return this.floating ? j && j == "right" || e == "down" ? 2 : 1 : e && (e == "down" ? 2 : 1)
        },
        _intersectsWithSides: function (e) {
            var f = a.ui.isOverAxis(this.positionAbs.top + this.offset.click.top, e.top + e.height / 2, e.height);
            e = a.ui.isOverAxis(this.positionAbs.left + this.offset.click.left, e.left + e.width / 2, e.width);
            var j = this._getDragVerticalDirection(),
                g = this._getDragHorizontalDirection();
            return this.floating && g ? g == "right" && e || g == "left" && !e : j && (j == "down" && f || j == "up" && !f)
        },
        _getDragVerticalDirection: function () {
            var e = this.positionAbs.top - this.lastPositionAbs.top;
            return e != 0 && (e > 0 ? "down" : "up")
        },
        _getDragHorizontalDirection: function () {
            var e = this.positionAbs.left - this.lastPositionAbs.left;
            return e != 0 && (e > 0 ? "right" : "left")
        },
        refresh: function (e) {
            this._refreshItems(e);
            this.refreshPositions();
            return this
        },
        _connectWith: function () {
            var e = this.options;
            return e.connectWith.constructor == String ? [e.connectWith] : e.connectWith
        },
        _getItemsAsjQuery: function (e) {
            var f = [],
                j = [],
                g = this._connectWith();
            if (g && e)
                for (e = g.length - 1; e >= 0; e--)
                    for (var c = a(g[e]), b = c.length - 1; b >= 0; b--) {
                        var l = a.data(c[b], "sortable");
                        if (l && l != this && !l.options.disabled) j.push([a.isFunction(l.options.items) ? l.options.items.call(l.element) : a(l.options.items, l.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), l])
                    }
            j.push([a.isFunction(this.options.items) ? this.options.items.call(this.element, null, {
                    options: this.options,
                    item: this.currentItem
                }) : a(this.options.items, this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),
                this
            ]);
            for (e = j.length - 1; e >= 0; e--) j[e][0].each(function () {
                f.push(this)
            });
            return a(f)
        },
        _removeCurrentsFromItems: function () {
            for (var e = this.currentItem.find(":data(sortable-item)"), f = 0; f < this.items.length; f++)
                for (var j = 0; j < e.length; j++) e[j] == this.items[f].item[0] && this.items.splice(f, 1)
        },
        _refreshItems: function (e) {
            this.items = [];
            this.containers = [this];
            var f = this.items,
                j = [
                    [a.isFunction(this.options.items) ? this.options.items.call(this.element[0], e, {
                            item: this.currentItem
                        }) : a(this.options.items, this.element),
                        this
                    ]
                ],
                g = this._connectWith();
            if (g)
                for (var c = g.length - 1; c >= 0; c--)
                    for (var b = a(g[c]), l = b.length - 1; l >= 0; l--) {
                        var o = a.data(b[l], "sortable");
                        if (o && o != this && !o.options.disabled) {
                            j.push([a.isFunction(o.options.items) ? o.options.items.call(o.element[0], e, {
                                item: this.currentItem
                            }) : a(o.options.items, o.element), o]);
                            this.containers.push(o)
                        }
                    }
            for (c = j.length - 1; c >= 0; c--) {
                e = j[c][1];
                g = j[c][0];
                l = 0;
                for (b = g.length; l < b; l++) {
                    o = a(g[l]);
                    o.data("sortable-item", e);
                    f.push({
                        item: o,
                        instance: e,
                        width: 0,
                        height: 0,
                        left: 0,
                        top: 0
                    })
                }
            }
        },
        refreshPositions: function (e) {
            if (this.offsetParent &&
                this.helper) this.offset.parent = this._getParentOffset();
            for (var f = this.items.length - 1; f >= 0; f--) {
                var j = this.items[f],
                    g = this.options.toleranceElement ? a(this.options.toleranceElement, j.item) : j.item;
                if (!e) {
                    j.width = g.outerWidth();
                    j.height = g.outerHeight()
                }
                g = g.offset();
                j.left = g.left;
                j.top = g.top
            }
            if (this.options.custom && this.options.custom.refreshContainers) this.options.custom.refreshContainers.call(this);
            else
                for (f = this.containers.length - 1; f >= 0; f--) {
                    g = this.containers[f].element.offset();
                    this.containers[f].containerCache.left =
                        g.left;
                    this.containers[f].containerCache.top = g.top;
                    this.containers[f].containerCache.width = this.containers[f].element.outerWidth();
                    this.containers[f].containerCache.height = this.containers[f].element.outerHeight()
                }
            return this
        },
        _createPlaceholder: function (e) {
            var f = e || this,
                j = f.options;
            if (!j.placeholder || j.placeholder.constructor == String) {
                var g = j.placeholder;
                j.placeholder = {
                    element: function () {
                        var c = a(document.createElement(f.currentItem[0].nodeName)).addClass(g || f.currentItem[0].className + " ui-sortable-placeholder").removeClass("ui-sortable-helper")[0];
                        if (!g) c.style.visibility = "hidden";
                        return c
                    },
                    update: function (c, b) {
                        if (!(g && !j.forcePlaceholderSize)) {
                            b.height() || b.height(f.currentItem.innerHeight() - parseInt(f.currentItem.css("paddingTop") || 0, 10) - parseInt(f.currentItem.css("paddingBottom") || 0, 10));
                            b.width() || b.width(f.currentItem.innerWidth() - parseInt(f.currentItem.css("paddingLeft") || 0, 10) - parseInt(f.currentItem.css("paddingRight") || 0, 10))
                        }
                    }
                }
            }
            f.placeholder = a(j.placeholder.element.call(f.element, f.currentItem));
            f.currentItem.after(f.placeholder);
            j.placeholder.update(f, f.placeholder)
        },
        _contactContainers: function (e) {
            for (var f = null, j = null, g = this.containers.length - 1; g >= 0; g--)
                if (!a.ui.contains(this.currentItem[0], this.containers[g].element[0]))
                    if (this._intersectsWith(this.containers[g].containerCache)) {
                        if (!(f && a.ui.contains(this.containers[g].element[0], f.element[0]))) {
                            f = this.containers[g];
                            j = g
                        }
                    } else if (this.containers[g].containerCache.over) {
                this.containers[g]._trigger("out", e, this._uiHash(this));
                this.containers[g].containerCache.over = 0
            }
            if (f)
                if (this.containers.length ===
                    1) {
                    this.containers[j]._trigger("over", e, this._uiHash(this));
                    this.containers[j].containerCache.over = 1
                } else if (this.currentContainer != this.containers[j]) {
                f = 1E4;
                g = null;
                for (var c = this.positionAbs[this.containers[j].floating ? "left" : "top"], b = this.items.length - 1; b >= 0; b--)
                    if (a.ui.contains(this.containers[j].element[0], this.items[b].item[0])) {
                        var l = this.items[b][this.containers[j].floating ? "left" : "top"];
                        if (Math.abs(l - c) < f) {
                            f = Math.abs(l - c);
                            g = this.items[b]
                        }
                    }
                if (g || this.options.dropOnEmpty) {
                    this.currentContainer =
                        this.containers[j];
                    g ? this._rearrange(e, g, null, true) : this._rearrange(e, null, this.containers[j].element, true);
                    this._trigger("change", e, this._uiHash());
                    this.containers[j]._trigger("change", e, this._uiHash(this));
                    this.options.placeholder.update(this.currentContainer, this.placeholder);
                    this.containers[j]._trigger("over", e, this._uiHash(this));
                    this.containers[j].containerCache.over = 1
                }
            }
        },
        _createHelper: function (e) {
            var f = this.options;
            e = a.isFunction(f.helper) ? a(f.helper.apply(this.element[0], [e, this.currentItem])) :
                f.helper == "clone" ? this.currentItem.clone() : this.currentItem;
            e.parents("body").length || a(f.appendTo != "parent" ? f.appendTo : this.currentItem[0].parentNode)[0].appendChild(e[0]);
            if (e[0] == this.currentItem[0]) this._storedCSS = {
                width: this.currentItem[0].style.width,
                height: this.currentItem[0].style.height,
                position: this.currentItem.css("position"),
                top: this.currentItem.css("top"),
                left: this.currentItem.css("left")
            };
            if (e[0].style.width == "" || f.forceHelperSize) e.width(this.currentItem.width());
            if (e[0].style.height ==
                "" || f.forceHelperSize) e.height(this.currentItem.height());
            return e
        },
        _adjustOffsetFromHelper: function (e) {
            if (typeof e == "string") e = e.split(" ");
            if (a.isArray(e)) e = {
                left: +e[0],
                top: +e[1] || 0
            };
            if ("left" in e) this.offset.click.left = e.left + this.margins.left;
            if ("right" in e) this.offset.click.left = this.helperProportions.width - e.right + this.margins.left;
            if ("top" in e) this.offset.click.top = e.top + this.margins.top;
            if ("bottom" in e) this.offset.click.top = this.helperProportions.height - e.bottom + this.margins.top
        },
        _getParentOffset: function () {
            this.offsetParent =
                this.helper.offsetParent();
            var e = this.offsetParent.offset();
            if (this.cssPosition == "absolute" && this.scrollParent[0] != document && a.ui.contains(this.scrollParent[0], this.offsetParent[0])) {
                e.left += this.scrollParent.scrollLeft();
                e.top += this.scrollParent.scrollTop()
            }
            if (this.offsetParent[0] == document.body || this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() == "html" && a.browser.msie) e = {
                top: 0,
                left: 0
            };
            return {
                top: e.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
                left: e.left + (parseInt(this.offsetParent.css("borderLeftWidth"),
                    10) || 0)
            }
        },
        _getRelativeOffset: function () {
            if (this.cssPosition == "relative") {
                var e = this.currentItem.position();
                return {
                    top: e.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(),
                    left: e.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()
                }
            } else return {
                top: 0,
                left: 0
            }
        },
        _cacheMargins: function () {
            this.margins = {
                left: parseInt(this.currentItem.css("marginLeft"), 10) || 0,
                top: parseInt(this.currentItem.css("marginTop"), 10) || 0
            }
        },
        _cacheHelperProportions: function () {
            this.helperProportions = {
                width: this.helper.outerWidth(),
                height: this.helper.outerHeight()
            }
        },
        _setContainment: function () {
            var e = this.options;
            if (e.containment == "parent") e.containment = this.helper[0].parentNode;
            if (e.containment == "document" || e.containment == "window") this.containment = [0 - this.offset.relative.left - this.offset.parent.left, 0 - this.offset.relative.top - this.offset.parent.top, a(e.containment == "document" ? document : window).width() - this.helperProportions.width - this.margins.left, (a(e.containment == "document" ? document : window).height() ||
                document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top];
            if (!/^(document|window|parent)$/.test(e.containment)) {
                var f = a(e.containment)[0];
                e = a(e.containment).offset();
                var j = a(f).css("overflow") != "hidden";
                this.containment = [e.left + (parseInt(a(f).css("borderLeftWidth"), 10) || 0) + (parseInt(a(f).css("paddingLeft"), 10) || 0) - this.margins.left, e.top + (parseInt(a(f).css("borderTopWidth"), 10) || 0) + (parseInt(a(f).css("paddingTop"), 10) || 0) - this.margins.top, e.left + (j ? Math.max(f.scrollWidth,
                    f.offsetWidth) : f.offsetWidth) - (parseInt(a(f).css("borderLeftWidth"), 10) || 0) - (parseInt(a(f).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left, e.top + (j ? Math.max(f.scrollHeight, f.offsetHeight) : f.offsetHeight) - (parseInt(a(f).css("borderTopWidth"), 10) || 0) - (parseInt(a(f).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top]
            }
        },
        _convertPositionTo: function (e, f) {
            if (!f) f = this.position;
            e = e == "absolute" ? 1 : -1;
            var j = this.cssPosition == "absolute" && !(this.scrollParent[0] !=
                document && a.ui.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent,
                g = /(html|body)/i.test(j[0].tagName);
            return {
                top: f.top + this.offset.relative.top * e + this.offset.parent.top * e - (a.browser.safari && this.cssPosition == "fixed" ? 0 : (this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : g ? 0 : j.scrollTop()) * e),
                left: f.left + this.offset.relative.left * e + this.offset.parent.left * e - (a.browser.safari && this.cssPosition == "fixed" ? 0 : (this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() :
                    g ? 0 : j.scrollLeft()) * e)
            }
        },
        _generatePosition: function (e) {
            var f = this.options,
                j = this.cssPosition == "absolute" && !(this.scrollParent[0] != document && a.ui.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent,
                g = /(html|body)/i.test(j[0].tagName);
            if (this.cssPosition == "relative" && !(this.scrollParent[0] != document && this.scrollParent[0] != this.offsetParent[0])) this.offset.relative = this._getRelativeOffset();
            var c = e.pageX,
                b = e.pageY;
            if (this.originalPosition) {
                if (this.containment) {
                    if (e.pageX -
                        this.offset.click.left < this.containment[0]) c = this.containment[0] + this.offset.click.left;
                    if (e.pageY - this.offset.click.top < this.containment[1]) b = this.containment[1] + this.offset.click.top;
                    if (e.pageX - this.offset.click.left > this.containment[2]) c = this.containment[2] + this.offset.click.left;
                    if (e.pageY - this.offset.click.top > this.containment[3]) b = this.containment[3] + this.offset.click.top
                }
                if (f.grid) {
                    b = this.originalPageY + Math.round((b - this.originalPageY) / f.grid[1]) * f.grid[1];
                    b = this.containment ? !(b - this.offset.click.top <
                        this.containment[1] || b - this.offset.click.top > this.containment[3]) ? b : !(b - this.offset.click.top < this.containment[1]) ? b - f.grid[1] : b + f.grid[1] : b;
                    c = this.originalPageX + Math.round((c - this.originalPageX) / f.grid[0]) * f.grid[0];
                    c = this.containment ? !(c - this.offset.click.left < this.containment[0] || c - this.offset.click.left > this.containment[2]) ? c : !(c - this.offset.click.left < this.containment[0]) ? c - f.grid[0] : c + f.grid[0] : c
                }
            }
            return {
                top: b - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + (a.browser.safari &&
                    this.cssPosition == "fixed" ? 0 : this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : g ? 0 : j.scrollTop()),
                left: c - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + (a.browser.safari && this.cssPosition == "fixed" ? 0 : this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : g ? 0 : j.scrollLeft())
            }
        },
        _rearrange: function (e, f, j, g) {
            j ? j[0].appendChild(this.placeholder[0]) : f.item[0].parentNode.insertBefore(this.placeholder[0], this.direction == "down" ? f.item[0] : f.item[0].nextSibling);
            this.counter =
                this.counter ? ++this.counter : 1;
            var c = this,
                b = this.counter;
            window.setTimeout(function () {
                b == c.counter && c.refreshPositions(!g)
            }, 0)
        },
        _clear: function (e, f) {
            this.reverting = false;
            var j = [];
            !this._noFinalSort && this.currentItem[0].parentNode && this.placeholder.before(this.currentItem);
            this._noFinalSort = null;
            if (this.helper[0] == this.currentItem[0]) {
                for (var g in this._storedCSS)
                    if (this._storedCSS[g] == "auto" || this._storedCSS[g] == "static") this._storedCSS[g] = "";
                this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper")
            } else this.currentItem.show();
            this.fromOutside && !f && j.push(function (c) {
                this._trigger("receive", c, this._uiHash(this.fromOutside))
            });
            if ((this.fromOutside || this.domPosition.prev != this.currentItem.prev().not(".ui-sortable-helper")[0] || this.domPosition.parent != this.currentItem.parent()[0]) && !f) j.push(function (c) {
                this._trigger("update", c, this._uiHash())
            });
            if (!a.ui.contains(this.element[0], this.currentItem[0])) {
                f || j.push(function (c) {
                    this._trigger("remove", c, this._uiHash())
                });
                for (g = this.containers.length - 1; g >= 0; g--)
                    if (a.ui.contains(this.containers[g].element[0],
                        this.currentItem[0]) && !f) {
                        j.push(function (c) {
                            return function (b) {
                                c._trigger("receive", b, this._uiHash(this))
                            }
                        }.call(this, this.containers[g]));
                        j.push(function (c) {
                            return function (b) {
                                c._trigger("update", b, this._uiHash(this))
                            }
                        }.call(this, this.containers[g]))
                    }
            }
            for (g = this.containers.length - 1; g >= 0; g--) {
                f || j.push(function (c) {
                    return function (b) {
                        c._trigger("deactivate", b, this._uiHash(this))
                    }
                }.call(this, this.containers[g]));
                if (this.containers[g].containerCache.over) {
                    j.push(function (c) {
                        return function (b) {
                            c._trigger("out",
                                b, this._uiHash(this))
                        }
                    }.call(this, this.containers[g]));
                    this.containers[g].containerCache.over = 0
                }
            }
            this._storedCursor && a("body").css("cursor", this._storedCursor);
            this._storedOpacity && this.helper.css("opacity", this._storedOpacity);
            if (this._storedZIndex) this.helper.css("zIndex", this._storedZIndex == "auto" ? "" : this._storedZIndex);
            this.dragging = false;
            if (this.cancelHelperRemoval) {
                if (!f) {
                    this._trigger("beforeStop", e, this._uiHash());
                    for (g = 0; g < j.length; g++) j[g].call(this, e);
                    this._trigger("stop", e, this._uiHash())
                }
                return false
            }
            f ||
                this._trigger("beforeStop", e, this._uiHash());
            this.placeholder[0].parentNode.removeChild(this.placeholder[0]);
            this.helper[0] != this.currentItem[0] && this.helper.remove();
            this.helper = null;
            if (!f) {
                for (g = 0; g < j.length; g++) j[g].call(this, e);
                this._trigger("stop", e, this._uiHash())
            }
            this.fromOutside = false;
            return true
        },
        _trigger: function () {
            a.Widget.prototype._trigger.apply(this, arguments) === false && this.cancel()
        },
        _uiHash: function (e) {
            var f = e || this;
            return {
                helper: f.helper,
                placeholder: f.placeholder || a([]),
                position: f.position,
                originalPosition: f.originalPosition,
                offset: f.positionAbs,
                item: f.currentItem,
                sender: e ? e.element : null
            }
        }
    });
    a.extend(a.ui.sortable, {
        version: "1.8.11"
    })
})(jQuery);
(function (a) {
    a.widget("ui.accordion", {
        options: {
            active: 0,
            animated: "slide",
            autoHeight: true,
            clearStyle: false,
            collapsible: false,
            event: "click",
            fillSpace: false,
            header: "> li > :first-child,> :not(li):even",
            icons: {
                header: "ui-icon-triangle-1-e",
                headerSelected: "ui-icon-triangle-1-s"
            },
            navigation: false,
            navigationFilter: function () {
                return this.href.toLowerCase() === location.href.toLowerCase()
            }
        },
        _create: function () {
            var e = this,
                f = e.options;
            e.running = 0;
            e.element.addClass("ui-accordion ui-widget ui-helper-reset").children("li").addClass("ui-accordion-li-fix");
            e.headers = e.element.find(f.header).addClass("ui-accordion-header ui-helper-reset ui-state-default ui-corner-all").bind("mouseenter.accordion", function () {
                f.disabled || a(this).addClass("ui-state-hover")
            }).bind("mouseleave.accordion", function () {
                f.disabled || a(this).removeClass("ui-state-hover")
            }).bind("focus.accordion", function () {
                f.disabled || a(this).addClass("ui-state-focus")
            }).bind("blur.accordion", function () {
                f.disabled || a(this).removeClass("ui-state-focus")
            });
            e.headers.next().addClass("ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom");
            if (f.navigation) {
                var j = e.element.find("a").filter(f.navigationFilter).eq(0);
                if (j.length) {
                    var g = j.closest(".ui-accordion-header");
                    e.active = g.length ? g : j.closest(".ui-accordion-content").prev()
                }
            }
            e.active = e._findActive(e.active || f.active).addClass("ui-state-default ui-state-active").toggleClass("ui-corner-all").toggleClass("ui-corner-top");
            e.active.next().addClass("ui-accordion-content-active");
            e._createIcons();
            e.resize();
            e.element.attr("role", "tablist");
            e.headers.attr("role", "tab").bind("keydown.accordion",
                function (c) {
                    return e._keydown(c)
                }).next().attr("role", "tabpanel");
            e.headers.not(e.active || "").attr({
                "aria-expanded": "false",
                "aria-selected": "false",
                tabIndex: -1
            }).next().hide();
            e.active.length ? e.active.attr({
                "aria-expanded": "true",
                "aria-selected": "true",
                tabIndex: 0
            }) : e.headers.eq(0).attr("tabIndex", 0);
            a.browser.safari || e.headers.find("a").attr("tabIndex", -1);
            f.event && e.headers.bind(f.event.split(" ").join(".accordion ") + ".accordion", function (c) {
                e._clickHandler.call(e, c, this);
                c.preventDefault()
            })
        },
        _createIcons: function () {
            var e =
                this.options;
            if (e.icons) {
                a("<span></span>").addClass("ui-icon " + e.icons.header).prependTo(this.headers);
                this.active.children(".ui-icon").toggleClass(e.icons.header).toggleClass(e.icons.headerSelected);
                this.element.addClass("ui-accordion-icons")
            }
        },
        _destroyIcons: function () {
            this.headers.children(".ui-icon").remove();
            this.element.removeClass("ui-accordion-icons")
        },
        destroy: function () {
            var e = this.options;
            this.element.removeClass("ui-accordion ui-widget ui-helper-reset").removeAttr("role");
            this.headers.unbind(".accordion").removeClass("ui-accordion-header ui-accordion-disabled ui-helper-reset ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top").removeAttr("role").removeAttr("aria-expanded").removeAttr("aria-selected").removeAttr("tabIndex");
            this.headers.find("a").removeAttr("tabIndex");
            this._destroyIcons();
            var f = this.headers.next().css("display", "").removeAttr("role").removeClass("ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-accordion-disabled ui-state-disabled");
            if (e.autoHeight || e.fillHeight) f.css("height", "");
            return a.Widget.prototype.destroy.call(this)
        },
        _setOption: function (e, f) {
            a.Widget.prototype._setOption.apply(this, arguments);
            e == "active" && this.activate(f);
            if (e == "icons") {
                this._destroyIcons();
                f && this._createIcons()
            }
            if (e == "disabled") this.headers.add(this.headers.next())[f ? "addClass" : "removeClass"]("ui-accordion-disabled ui-state-disabled")
        },
        _keydown: function (e) {
            if (!(this.options.disabled || e.altKey || e.ctrlKey)) {
                var f = a.ui.keyCode,
                    j = this.headers.length,
                    g = this.headers.index(e.target),
                    c = false;
                switch (e.keyCode) {
                case f.RIGHT:
                case f.DOWN:
                    c = this.headers[(g + 1) % j];
                    break;
                case f.LEFT:
                case f.UP:
                    c = this.headers[(g - 1 + j) % j];
                    break;
                case f.SPACE:
                case f.ENTER:
                    this._clickHandler({
                        target: e.target
                    }, e.target);
                    e.preventDefault()
                }
                if (c) {
                    a(e.target).attr("tabIndex", -1);
                    a(c).attr("tabIndex", 0);
                    c.focus();
                    return false
                }
                return true
            }
        },
        resize: function () {
            var e = this.options,
                f;
            if (e.fillSpace) {
                if (a.browser.msie) {
                    var j = this.element.parent().css("overflow");
                    this.element.parent().css("overflow", "hidden")
                }
                f = this.element.parent().height();
                a.browser.msie && this.element.parent().css("overflow", j);
                this.headers.each(function () {
                    f -= a(this).outerHeight(true)
                });
                this.headers.next().each(function () {
                    a(this).height(Math.max(0, f - a(this).innerHeight() +
                        a(this).height()))
                }).css("overflow", "auto")
            } else if (e.autoHeight) {
                f = 0;
                this.headers.next().each(function () {
                    f = Math.max(f, a(this).height("").height())
                }).height(f)
            }
            return this
        },
        activate: function (e) {
            this.options.active = e;
            e = this._findActive(e)[0];
            this._clickHandler({
                target: e
            }, e);
            return this
        },
        _findActive: function (e) {
            return e ? typeof e === "number" ? this.headers.filter(":eq(" + e + ")") : this.headers.not(this.headers.not(e)) : e === false ? a([]) : this.headers.filter(":eq(0)")
        },
        _clickHandler: function (e, f) {
            var j = this.options;
            if (!j.disabled)
                if (e.target) {
                    e = a(e.currentTarget || f);
                    f = e[0] === this.active[0];
                    j.active = j.collapsible && f ? false : this.headers.index(e);
                    if (!(this.running || !j.collapsible && f)) {
                        var g = this.active;
                        o = e.next();
                        b = this.active.next();
                        l = {
                            options: j,
                            newHeader: f && j.collapsible ? a([]) : e,
                            oldHeader: this.active,
                            newContent: f && j.collapsible ? a([]) : o,
                            oldContent: b
                        };
                        var c = this.headers.index(this.active[0]) > this.headers.index(e[0]);
                        this.active = f ? a([]) : e;
                        this._toggle(o, b, l, f, c);
                        g.removeClass("ui-state-active ui-corner-top").addClass("ui-state-default ui-corner-all").children(".ui-icon").removeClass(j.icons.headerSelected).addClass(j.icons.header);
                        if (!f) {
            }
            if (e == "disabled") this.headers.add(this.headers.next())[f ? "addClass" : "removeClass"]("ui-accordion-disabled ui-state-disabled")
        },
        _keydown: function (e) {
            if (!(this.options.disabled || e.altKey || e.ctrlKey)) {
                var f = a.ui.keyCode,
                    j = this.headers.length,
                    g = this.headers.index(e.target),
                    c = false;
                switch (e.keyCode) {
                case f.RIGHT:
                case f.DOWN:
                    c = this.headers[(g + 1) % j];
                    break;
                case f.LEFT:
                case f.UP:
                    c = this.headers[(g - 1 + j) % j];
                    break;
                case f.SPACE:
                case f.ENTER:
                    this._clickHandler({
                        target: e.target
                    }, e.target);
                    e.preventDefault()
                }
                if (c) {
                    a(e.target).attr("tabIndex", -1);
                    a(c).attr("tabIndex", 0);
                    c.focus();
                    return false
                }
                return true
            }
        },
        resize: function () {
            var e = this.options,
                f;
            if (e.fillSpace) {
                if (a.browser.msie) {
                    var j = this.element.parent().css("overflow");
                    this.element.parent().css("overflow", "hidden")
                }
                f = this.element.parent().height();
                a.browser.msie && this.element.parent().css("overflow", j);
                this.headers.each(function () {
                    f -= a(this).outerHeight(true)
                });
                this.headers.next().each(function () {
                    a(this).height(Math.max(0, f - a(this).innerHeight() +
                        a(this).height()))
                }).css("overflow", "auto")
            } else if (e.autoHeight) {
                f = 0;
                this.headers.next().each(function () {
                    f = Math.max(f, a(this).height("").height())
                }).height(f)
            }
            return this
        },
        activate: function (e) {
            this.options.active = e;
            e = this._findActive(e)[0];
            this._clickHandler({
                target: e
            }, e);
            return this
        },
        _findActive: function (e) {
            return e ? typeof e === "number" ? this.headers.filter(":eq(" + e + ")") : this.headers.not(this.headers.not(e)) : e === false ? a([]) : this.headers.filter(":eq(0)")
        },
        _clickHandler: function (e, f) {
            var j = this.options;
            if (!j.disabled)
                if (e.target) {
                    e = a(e.currentTarget || f);
                    f = e[0] === this.active[0];
                    j.active = j.collapsible && f ? false : this.headers.index(e);
                    if (!(this.running || !j.collapsible && f)) {
                        var g = this.active;
                        o = e.next();
                        b = this.active.next();
                        l = {
                            options: j,
                            newHeader: f && j.collapsible ? a([]) : e,
                            oldHeader: this.active,
                            newContent: f && j.collapsible ? a([]) : o,
                            oldContent: b
                        };
                        var c = this.headers.index(this.active[0]) > this.headers.index(e[0]);
                        this.active = f ? a([]) : e;
                        this._toggle(o, b, l, f, c);
                        g.removeClass("ui-state-active ui-corner-top").addClass("ui-state-default ui-corner-all").children(".ui-icon").removeClass(j.icons.headerSelected).addClass(j.icons.header);
                        if (!f) {
                            e.removeClass("ui-state-default ui-corner-all").addClass("ui-state-active ui-corner-top").children(".ui-icon").removeClass(j.icons.header).addClass(j.icons.headerSelected);
                            e.next().addClass("ui-accordion-content-active")
                        }
                    }
                } else if (j.collapsible) {
                this.active.removeClass("ui-state-active ui-corner-top").addClass("ui-state-default ui-corner-all").children(".ui-icon").removeClass(j.icons.headerSelected).addClass(j.icons.header);
                this.active.next().addClass("ui-accordion-content-active");
                var b = this.active.next(),
                    l = {
                        options: j,
                        newHeader: a([]),
                        oldHeader: j.active,
                        newContent: a([]),
                        oldContent: b
                    }, o = this.active = a([]);
                this._toggle(o, b, l)
            }
        },
        _toggle: function (e, f, j, g, c) {
            var b = this,
                l = b.options;
            b.toShow = e;
            b.toHide = f;
            b.data = j;
            var o = function () {
                if (b) return b._completed.apply(b, arguments)
            };
            b._trigger("changestart", null, b.data);
            b.running = f.size() === 0 ? e.size() : f.size();
            if (l.animated) {
                j = {};
                j = l.collapsible && g ? {
                    toShow: a([]),
                    toHide: f,
                    complete: o,
                    down: c,
                    autoHeight: l.autoHeight || l.fillSpace
                } : {
                    toShow: e,
                    toHide: f,
                    complete: o,
                    down: c,
                    autoHeight: l.autoHeight || l.fillSpace
                };
                if (!l.proxied) l.proxied = l.animated;
                if (!l.proxiedDuration) l.proxiedDuration = l.duration;
                l.animated = a.isFunction(l.proxied) ? l.proxied(j) : l.proxied;
                l.duration = a.isFunction(l.proxiedDuration) ? l.proxiedDuration(j) : l.proxiedDuration;
                g = a.ui.accordion.animations;
                var n = l.duration,
                    q = l.animated;
                if (q && !g[q] && !a.easing[q]) q = "slide";
                g[q] || (g[q] = function (u) {
                    this.slide(u, {
                        easing: q,
                        duration: n || 700
                    })
                });
                g[q](j)
            } else {
                if (l.collapsible && g) e.toggle();
                else {
                    f.hide();
                    e.show()
                }
                o(true)
            }
            f.prev().attr({
                "aria-expanded": "false",
                "aria-selected": "false",
                tabIndex: -1
            }).blur();
            e.prev().attr({
                "aria-expanded": "true",
                "aria-selected": "true",
                tabIndex: 0
            }).focus()
        },
        _completed: function (e) {
            this.running = e ? 0 : --this.running;
            if (!this.running) {
                this.options.clearStyle && this.toShow.add(this.toHide).css({
                    height: "",
                    overflow: ""
                });
                this.toHide.removeClass("ui-accordion-content-active");
                if (this.toHide.length) this.toHide.parent()[0].className = this.toHide.parent()[0].className;
                this._trigger("change", null, this.data)
            }
        }
    });
    a.extend(a.ui.accordion, {
        version: "1.8.11",
        animations: {
            slide: function (e, f) {
                e = a.extend({
                    easing: "swing",
                    duration: 300
                }, e, f);
                if (e.toHide.size())
                    if (e.toShow.size()) {
                        var j = e.toShow.css("overflow"),
                            g = 0,
                            c = {}, b = {}, l;
                        f = e.toShow;
                        l = f[0].style.width;
                        f.width(parseInt(f.parent().width(), 10) - parseInt(f.css("paddingLeft"), 10) - parseInt(f.css("paddingRight"), 10) - (parseInt(f.css("borderLeftWidth"), 10) || 0) - (parseInt(f.css("borderRightWidth"), 10) || 0));
                        a.each(["height", "paddingTop", "paddingBottom"], function (o, n) {
                            b[n] = "hide";
                            o = ("" + a.css(e.toShow[0], n)).match(/^([\d+-.]+)(.*)$/);
                            c[n] = {
                                value: o[1],
                                unit: o[2] || "px"
                            }
                        });
                        e.toShow.css({
                            height: 0,
                            overflow: "hidden"
                        }).show();
                        e.toHide.filter(":hidden").each(e.complete).end().filter(":visible").animate(b, {
                            step: function (o, n) {
                                if (n.prop == "height") g = n.end - n.start === 0 ? 0 : (n.now - n.start) / (n.end - n.start);
                                e.toShow[0].style[n.prop] = g * c[n.prop].value + c[n.prop].unit
                            },
                            duration: e.duration,
                            easing: e.easing,
                            complete: function () {
                                e.autoHeight || e.toShow.css("height", "");
                                e.toShow.css({
                                    width: l,
                                    overflow: j
                                });
                                e.complete()
                            }
                        })
                    } else e.toHide.animate({
                        height: "hide",
                        paddingTop: "hide",
                        paddingBottom: "hide"
                    }, e);
                    else e.toShow.animate({
                        height: "show",
                        paddingTop: "show",
                        paddingBottom: "show"
                    }, e)
            },
            bounceslide: function (e) {
                this.slide(e, {
                    easing: e.down ? "easeOutBounce" : "swing",
                    duration: e.down ? 1E3 : 200
                })
            }
        }
    })
})(jQuery);
(function (a) {
    var e = 0;
    a.widget("ui.autocomplete", {
        options: {
            appendTo: "body",
            autoFocus: false,
            delay: 300,
            minLength: 1,
            position: {
                my: "left top",
                at: "left bottom",
                collision: "none"
            },
            source: null
        },
        pending: 0,
        _create: function () {
            var f = this,
                j = this.element[0].ownerDocument,
                g;
            this.element.addClass("ui-autocomplete-input").attr("autocomplete", "off").attr({
                role: "textbox",
                "aria-autocomplete": "list",
                "aria-haspopup": "true"
            }).bind("keydown.autocomplete", function (c) {
                if (!(f.options.disabled || f.element.attr("readonly"))) {
                    g =
                        false;
                    var b = a.ui.keyCode;
                    switch (c.keyCode) {
                    case b.PAGE_UP:
                        f._move("previousPage", c);
                        break;
                    case b.PAGE_DOWN:
                        f._move("nextPage", c);
                        break;
                    case b.UP:
                                           f.menu.element.is(":visible") && f.element.val() !== f.term && f.element.val(f.term)
                    }
                }).zIndex(this.element.zIndex() + 1).css({
                    top: 0,
                    left: 0
                }).hide().data("menu");
            a.fn.bgiframe && this.menu.element.bgiframe()
        },
        destroy: function () {
            this.element.removeClass("ui-autocomplete-input").removeAttr("autocomplete").removeAttr("role").removeAttr("aria-autocomplete").removeAttr("aria-haspopup");
            this.menu.element.remove();
            a.Widget.prototype.destroy.call(this)
        },
        _setOption: function (f, j) {
            a.Widget.prototype._setOption.apply(this, arguments);
            f === "source" && this._initSource();
            if (f === "appendTo") this.menu.element.appendTo(a(j || "body", this.element[0].ownerDocument)[0]);
            f === "disabled" &&
                j && this.xhr && this.xhr.abort()
        },
        _initSource: function () {
            var f = this,
                j, g;
            if (a.isArray(this.options.source)) {
                j = this.options.source;
                this.source = function (c, b) {
                    b(a.ui.autocomplete.filter(j, c.term))
                }
            } else if (typeof this.options.source === "string") {
                g = this.options.source;
                this.source = function (c, b) {
                    f.xhr && f.xhr.abort();
                    f.xhr = a.ajax({
                        url: g,
                        data: c,
                        dataType: "json",
                        autocompleteRequest: ++e,
                        success: function (l) {
                            this.autocompleteRequest === e && b(l)
                        },
                        error: function () {
                            this.autocompleteRequest === e && b([])
                        }
                    })
                }
            } else this.source =
                this.options.source
        },
        search: function (f, j) {
            f = f != null ? f : this.element.val();
            this.term = this.element.val();
            if (f.length < this.options.minLength) return this.close(j);
            clearTimeout(this.closing);
            if (this._trigger("search", j) !== false) return this._search(f)
        },
        _search: function (f) {
            this.pending++;
            this.element.addClass("ui-autocomplete-loading");
            this.source({
                term: f
            }, this.response)
        },
        _response: function (f) {
            if (!this.options.disabled && f && f.length) {
                f = this._normalize(f);
                this._suggest(f);
                this._trigger("open")
            } else this.close();
            this.pending--;
            this.pending || this.element.removeClass("ui-autocomplete-loading")
        },
        close: function (f) {
            clearTimeout(this.closing);
            if (this.menu.element.is(":visible")) {
                this.menu.element.hide();
                this.menu.deactivate();
                this._trigger("close", f)
            }
        },
        _change: function (f) {
            this.previous !== this.element.val() && this._trigger("change", f, {
                item: this.selectedItem
            })
        },
        _normalize: function (f) {
            if (f.length && f[0].label && f[0].value) return f;
            return a.map(f, function (j) {
                if (typeof j === "string") return {
                    label: j,
                    value: j
                };
                return a.extend({
                    label: j.label || j.value,
                    value: j.value || j.label
                }, j)
            })
        },
        _suggest: function (f) {
            var j = this.menu.element.empty().zIndex(this.element.zIndex() + 1);
            this._renderMenu(j, f);
            this.menu.deactivate();
            this.menu.refresh();
            j.show();
            this._resizeMenu();
            j.position(a.extend({
                of: this.element
            }, this.options.position));
            this.options.autoFocus && this.menu.next(new a.Event("mouseover"))
        },
        _resizeMenu: function () {
            var f = this.menu.element;
            f.outerWidth(Math.max(f.width("").outerWidth(), this.element.outerWidth()))
        },
        _renderMenu: function (f, j) {
            var g = this;
            a.each(j, function (c, b) {
                g._renderItem(f, b)
            })
        },
        _renderItem: function (f, j) {
            return a("<li></li>").data("item.autocomplete", j).append(a("<a></a>").text(j.label)).appendTo(f)
        },
        _move: function (f, j) {
            if (this.menu.element.is(":visible"))
                if (this.menu.first() && /^previous/.test(f) || this.menu.last() && /^next/.test(f)) {
                    this.element.val(this.term);
                    this.menu.deactivate()
                } else this.menu[f](j);
                else this.search(null, j)
        },
        widget: function () {
            return this.menu.element
        }
    });
    a.extend(a.ui.autocomplete, {
        escapeRegex: function (f) {
            return f.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,
                "\\$&")
        },
        filter: function (f, j) {
            var g = RegExp(a.ui.autocomplete.escapeRegex(j), "i");
            return a.grep(f, function (c) {
                return g.test(c.label || c.value || c)
            })
        }
    })
})(jQuery);
(function (a) {
    a.widget("ui.menu", {
        _create: function () {
            var e = this;
            this.element.addClass("ui-menu ui-widget ui-widget-content ui-corner-all").attr({
                role: "listbox",
                "aria-activedescendant": "ui-active-menuitem"
            }).click(function (f) {
                if (a(f.target).closest(".ui-menu-item a").length) {
                    f.preventDefault();
                    e.select(f)
                }
            });
            this.refresh()
        },
        refresh: function () {
            var e = this;
            this.element.children("li:not(.ui-menu-item):has(a)").addClass("ui-menu-item").attr("role", "menuitem").children("a").addClass("ui-corner-all").attr("tabindex", -1).mouseenter(function (f) {
                e.activate(f, a(this).parent())
            }).mouseleave(function () {
                e.deactivate()
            })
        },
        activate: function (e, f) {
            this.deactivate();
            if (this.hasScroll()) {
                var j = f.offset().top - this.element.offset().top,
                    g = this.element.attr("scrollTop"),
                    c = this.element.height();
                if (j < 0) this.element.attr("scrollTop", g + j);
                else j >= c && this.element.attr("scrollTop", g + j - c + f.height())
            }
            this.active = f.eq(0).children("a").addClass("ui-state-hover").attr("id", "ui-active-menuitem").end();
            this._trigger("focus", e, {
                item: f
            })
        },
        deactivate: function () {
            if (this.active) {
                this.active.children("a").removeClass("ui-state-hover").removeAttr("id");
                this._trigger("blur");
                this.active = null
            }
        },
        next: function (e) {
            this.move("next", ".ui-menu-item:first", e)
        },
        previous: function (e) {
            this.move("prev", ".ui-menu-item:last", e)
        },
        first: function () {
            return this.active && !this.active.prevAll(".ui-menu-item").length
        },
        last: function () {
            return this.active && !this.active.nextAll(".ui-menu-item").length
        },
        move: function (e, f, j) {
            if (this.active) {
                e = this.active[e + "All"](".ui-menu-item").eq(0);
                e.length ? this.activate(j, e) : this.activate(j, this.element.children(f))
            } else this.activate(j, this.element.children(f))
        },
        nextPage: function (e) {
            if (this.hasScroll())
                if (!this.active || this.last()) this.activate(e, this.element.children(".ui-menu-item:first"));
                else {
                    var f = this.active.offset().top,
                        j = this.element.height(),
                        g = this.element.children(".ui-menu-item").filter(function () {
                            var c = a(this).offset().top - f - j + a(this).height();
                            return c < 10 && c > -10
                        });
                    g.length || (g = this.element.children(".ui-menu-item:last"));
                    this.activate(e,
                        g)
                } else this.activate(e, this.element.children(".ui-menu-item").filter(!this.active || this.last() ? ":first" : ":last"))
        },
        previousPage: function (e) {
            if (this.hasScroll())
                if (!this.active || this.first()) this.activate(e, this.element.children(".ui-menu-item:last"));
                else {
                    var f = this.active.offset().top,
                        j = this.element.height();
                    result = this.element.children(".ui-menu-item").filter(function () {
                        var g = a(this).offset().top - f + j - a(this).height();
                        return g < 10 && g > -10
                    });
                    result.length || (result = this.element.children(".ui-menu-item:first"));
                    this.activate(e, result)
                } else this.activate(e, this.element.children(".ui-menu-item").filter(!this.active || this.first() ? ":last" : ":first"))
        },
        hasScroll: function () {
            return this.element.height() < this.element.attr("scrollHeight")
        },
        select: function (e) {
            this._trigger("selected", e, {
                item: this.active
            })
        }
    })
})(jQuery);
(function (a) {
    var e, f = function (g) {
            a(":ui-button", g.target.form).each(function () {
                var c = a(this).data("button");
                setTimeout(function () {
                    c.refresh()
                }, 1)
            })
        }, j = function (g) {
            var c = g.name,
                b = g.form,
                l = a([]);
            if (c) l = b ? a(b).find("[name='" + c + "']") : a("[name='" + c + "']", g.ownerDocument).filter(function () {
                return !this.form
            });
            return l
        };
    a.widget("ui.button", {
        options: {
            disabled: null,
            text: true,
            label: null,
            icons: {
                primary: null,
                secondary: null
            }
        },
        _create: function () {
            this.element.closest("form").unbind("reset.button").bind("reset.button",
                f);
            if (typeof this.options.disabled !== "boolean") this.options.disabled = this.element.attr("disabled");
            this._determineButtonType();
            this.hasTitle = !! this.buttonElement.attr("title");
            var g = this,
                c = this.options,
                b = this.type === "checkbox" || this.type === "radio",
                l = "ui-state-hover" + (!b ? " ui-state-active" : "");
            if (c.label === null) c.label = this.buttonElement.html();
            if (this.element.is(":disabled")) c.disabled = true;
            this.buttonElement.addClass("ui-button ui-widget ui-state-default ui-corner-all").attr("role", "button").bind("mouseenter.button",
                function () {
                    if (!c.disabled) {
                        a(this).addClass("ui-state-hover");
                        this === e && a(this).addClass("ui-state-active")
                    }
                }).bind("mouseleave.button", function () {
                c.disabled || a(this).removeClass(l)
            }).bind("focus.button", function () {
                a(this).addClass("ui-state-focus")
            }).bind("blur.button", function () {
                a(this).removeClass("ui-state-focus")
            });
            b && this.element.bind("change.button", function () {
                g.refresh()
            });
            if (this.type === "checkbox") this.buttonElement.bind("click.button", function () {
                if (c.disabled) return false;
                a(this).toggleClass("ui-state-active");
                g.buttonElement.attr("aria-pressed", g.element[0].checked)
            });
            else if (this.type === "radio") this.buttonElement.bind("click.button", function () {
                if (c.disabled) return false;
                a(this).addClass("ui-state-active");
                g.buttonElement.attr("aria-pressed", true);
                var o = g.element[0];
                j(o).not(o).map(function () {
                    return a(this).button("widget")[0]
                }).removeClass("ui-state-active").attr("aria-pressed", false)
            });
            else {
                this.buttonElement.bind("mousedown.button", function () {
                    if (c.disabled) return false;
                    a(this).addClass("ui-state-active");
                    e = this;
                    a(document).one("mouseup", function () {
                        e = null
                    })
                }).bind("mouseup.button", function () {
                    if (c.disabled) return false;
                    a(this).removeClass("ui-state-active")
                }).bind("keydown.button", function (o) {
                    if (c.disabled) return false;
                    if (o.keyCode == a.ui.keyCode.SPACE || o.keyCode == a.ui.keyCode.ENTER) a(this).addClass("ui-state-active")
                }).bind("keyup.button", function () {
                    a(this).removeClass("ui-state-active")
                });
                this.buttonElement.is("a") && this.buttonElement.keyup(function (o) {
                    o.keyCode === a.ui.keyCode.SPACE && a(this).click()
                })
            }
            this._setOption("disabled",
                c.disabled)
        },
        _determineButtonType: function () {
            this.type = this.element.is(":checkbox") ? "checkbox" : this.element.is(":radio") ? "radio" : this.element.is("input") ? "input" : "button";
            if (this.type === "checkbox" || this.type === "radio") {
                var g = this.element.parents().filter(":last"),
                    c = "label[for=" + this.element.attr("id") + "]";
                this.buttonElement = g.find(c);
                if (!this.buttonElement.length) {
                    g = g.length ? g.siblings() : this.element.siblings();
                    this.buttonElement = g.filter(c);
                    if (!this.buttonElement.length) this.buttonElement = g.find(c)
                }
                this.element.addClass("ui-helper-hidden-accessible");
                (g = this.element.is(":checked")) && this.buttonElement.addClass("ui-state-active");
                this.buttonElement.attr("aria-pressed", g)
            } else this.buttonElement = this.element
        },
        widget: function () {
            return this.buttonElement
        },
        destroy: function () {
            this.element.removeClass("ui-helper-hidden-accessible");
            this.buttonElement.removeClass("ui-button ui-widget ui-state-default ui-corner-all ui-state-hover ui-state-active  ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only").removeAttr("role").removeAttr("aria-pressed").html(this.buttonElement.find(".ui-button-text").html());
            this.hasTitle || this.buttonElement.removeAttr("title");
            a.Widget.prototype.destroy.call(this)
        },
        _setOption: function (g, c) {
            a.Widget.prototype._setOption.apply(this, arguments);
            if (g === "disabled") c ? this.element.attr("disabled", true) : this.element.removeAttr("disabled");
            this._resetButton()
        },
        refresh: function () {
            var g = this.element.is(":disabled");
            g !== this.options.disabled && this._setOption("disabled", g);
            if (this.type === "radio") j(this.element[0]).each(function () {
                a(this).is(":checked") ? a(this).button("widget").addClass("ui-state-active").attr("aria-pressed",
                    true) : a(this).button("widget").removeClass("ui-state-active").attr("aria-pressed", false)
            });
            else if (this.type === "checkbox") this.element.is(":checked") ? this.buttonElement.addClass("ui-state-active").attr("aria-pressed", true) : this.buttonElement.removeClass("ui-state-active").attr("aria-pressed", false)
        },
        _resetButton: function () {
            if (this.type === "input") this.options.label && this.element.val(this.options.label);
            else {
                var g = this.buttonElement.removeClass("ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only"),
                    c = a("<span></span>").addClass("ui-button-text").html(this.options.label).appendTo(g.empty()).text(),
                    b = this.options.icons,
                    l = b.primary && b.secondary,
                    o = [];
                if (b.primary || b.secondary) {
                    if (this.options.text) o.push("ui-button-text-icon" + (l ? "s" : b.primary ? "-primary" : "-secondary"));
                    b.primary && g.prepend("<span class='ui-button-icon-primary ui-icon " + b.primary + "'></span>");
                    b.secondary && g.append("<span class='ui-button-icon-secondary ui-icon " + b.secondary + "'></span>");
                    if (!this.options.text) {
                        o.push(l ? "ui-button-icons-only" :
                            "ui-button-icon-only");
                        this.hasTitle || g.attr("title", c)
                    }
                } else o.push("ui-button-text-only");
                g.addClass(o.join(" "))
            }
        }
    });
    a.widget("ui.buttonset", {
        options: {
            items: ":button, :submit, :reset, :checkbox, :radio, a, :data(button)"
        },
        _create: function () {
            this.element.addClass("ui-buttonset")
        },
        _init: function () {
            this.refresh()
        },
        _setOption: function (g, c) {
            g === "disabled" && this.buttons.button("option", g, c);
            a.Widget.prototype._setOption.apply(this, arguments)
        },
        refresh: function () {
            this.buttons = this.element.find(this.options.items).filter(":ui-button").button("refresh").end().not(":ui-button").button().end().map(function () {
                return a(this).button("widget")[0]
            }).removeClass("ui-corner-all ui-corner-left ui-corner-right").filter(":first").addClass("ui-corner-left").end().filter(":last").addClass("ui-corner-right").end().end()
        },
        destroy: function () {
            this.element.removeClass("ui-buttonset");
            this.buttons.map(function () {
                return a(this).button("widget")[0]
            }).removeClass("ui-corner-left ui-corner-right").end().button("destroy");
            a.Widget.prototype.destroy.call(this)
        }
    })
})(jQuery);
(function (a, e) {
    var f = {
        buttons: true,
        height: true,
        maxHeight: true,
        maxWidth: true,
        minHeight: true,
        minWidth: true,
        width: true
    }, j = {
            maxHeight: true,
            maxWidth: true,
            minHeight: true,
            minWidth: true
        };
    a.widget("ui.dialog", {
        options: {
            autoOpen: true,
            buttons: {},
            closeOnEscape: true,
            closeText: "close",
            dialogClass: "",
            draggable: true,
            hide: null,
            height: "auto",
            maxHeight: false,
            maxWidth: false,
            minHeight: 150,
            minWidth: 150,
            modal: false,
            position: {
                my: "center",
                at: "center",
                collision: "fit",
                using: function (g) {
                    var c = a(this).css(g).offset().top;
                    c < 0 &&
                        a(this).css("top", g.top - c)
                }
            },
            resizable: true,
            show: null,
            stack: true,
            title: "",
            width: 300,
            zIndex: 1E3
        },
        _create: function () {
            this.originalTitle = this.element.attr("title");
            if (typeof this.originalTitle !== "string") this.originalTitle = "";
            this.options.title = this.options.title || this.originalTitle;
            var g = this,
                c = g.options,
                b = c.title || "&#160;",
                l = a.ui.dialog.getTitleId(g.element),
                o = (g.uiDialog = a("<div></div>")).appendTo(document.body).hide().addClass("ui-dialog ui-widget ui-widget-content ui-corner-all " + c.dialogClass).css({
                    zIndex: c.zIndex
                }).attr("tabIndex", -1).css("outline", 0).keydown(function (u) {
                    if (c.closeOnEscape && u.keyCode && u.keyCode === a.ui.keyCode.ESCAPE) {
                        g.close(u);
                        u.preventDefault()
                    }
                }).attr({
                    role: "dialog",
                    "aria-labelledby": l
                }).mousedown(function (u) {
                    g.moveToTop(false, u)
                });
            g.element.show().removeAttr("title").addClass("ui-dialog-content ui-widget-content").appendTo(o);
            var n = (g.uiDialogTitlebar = a("<div></div>")).addClass("ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix").prependTo(o),
                q = a('<a href="#"></a>').addClass("ui-dialog-titlebar-close ui-corner-all").attr("role",
                    "button").hover(function () {
                    q.addClass("ui-state-hover")
                }, function () {
                    q.removeClass("ui-state-hover")
                }).focus(function () {
                    q.addClass("ui-state-focus")
                }).blur(function () {
                    q.removeClass("ui-state-focus")
                }).click(function (u) {
                    g.close(u);
                    return false
                }).appendTo(n);
            (g.uiDialogTitlebarCloseText = a("<span></span>")).addClass("ui-icon ui-icon-closethick").text(c.closeText).appendTo(q);
            a("<span></span>").addClass("ui-dialog-title").attr("id", l).html(b).prependTo(n);
            if (a.isFunction(c.beforeclose) && !a.isFunction(c.beforeClose)) c.beforeClose =
                c.beforeclose;
            n.find("*").add(n).disableSelection();
            c.draggable && a.fn.draggable && g._makeDraggable();
            c.resizable && a.fn.resizable && g._makeResizable();
            g._createButtons(c.buttons);
            g._isOpen = false;
            a.fn.bgiframe && o.bgiframe()
        },
        _init: function () {
            this.options.autoOpen && this.open()
        },
        destroy: function () {
            this.overlay && this.overlay.destroy();
            this.uiDialog.hide();
            this.element.unbind(".dialog").removeData("dialog").removeClass("ui-dialog-content ui-widget-content").hide().appendTo("body");
            this.uiDialog.remove();
            this.originalTitle && this.element.attr("title", this.originalTitle);
            return this
        },
        widget: function () {
            return this.uiDialog
        },
        close: function (g) {
            var c = this,
                b, l;
            if (false !== c._trigger("beforeClose", g)) {
                c.overlay && c.overlay.destroy();
                c.uiDialog.unbind("keypress.ui-dialog");
                c._isOpen = false;
                if (c.options.hide) c.uiDialog.hide(c.options.hide, function () {
                    c._trigger("close", g)
                });
                else {
                    c.uiDialog.hide();
                    c._trigger("close", g)
                }
                a.ui.dialog.overlay.resize();
                if (c.options.modal) {
                    b = 0;
                    a(".ui-dialog").each(function () {
                        if (this !==
                            c.uiDialog[0]) {
                            l = a(this).css("z-index");
                            isNaN(l) || (b = Math.max(b, l))
                        }
                    });
                    a.ui.dialog.maxZ = b
                }
                return c
            }
        },
        isOpen: function () {
            return this._isOpen
        },
        moveToTop: function (g, c) {
            var b = this.options;
            if (b.modal && !g || !b.stack && !b.modal) return this._trigger("focus", c);
            if (b.zIndex > a.ui.dialog.maxZ) a.ui.dialog.maxZ = b.zIndex;
            if (this.overlay) {
                a.ui.dialog.maxZ += 1;
                this.overlay.$el.css("z-index", a.ui.dialog.overlay.maxZ = a.ui.dialog.maxZ)
            }
            g = {
                scrollTop: this.element.attr("scrollTop"),
                scrollLeft: this.element.attr("scrollLeft")
            };
            a.ui.dialog.maxZ += 1;
            this.uiDialog.css("z-index", a.ui.dialog.maxZ);
            this.element.attr(g);
            this._trigger("focus", c);
            return this
        },
        open: function () {
            if (!this._isOpen) {
                var g = this.options,
                    c = this.uiDialog;
                this.overlay = g.modal ? new a.ui.dialog.overlay(this) : null;
                this._size();
                this._position(g.position);
                c.show(g.show);
                this.moveToTop(true);
                g.modal && c.bind("keypress.ui-dialog", function (b) {
                    if (b.keyCode === a.ui.keyCode.TAB) {
                        var l = a(":tabbable", this),
                            o = l.filter(":first");
                        l = l.filter(":last");
                        if (b.target === l[0] && !b.shiftKey) {
                            o.focus(1);
                            return false
                        } else if (b.target === o[0] && b.shiftKey) {
                            l.focus(1);
                            return false
                        }
                    }
                });
                a(this.element.find(":tabbable").get().concat(c.find(".ui-dialog-buttonpane :tabbable").get().concat(c.get()))).eq(0).focus();
                this._isOpen = true;
                this._trigger("open");
                return this
            }
        },
        _createButtons: function (g) {
            var c = this,
                b = false,
                l = a("<div></div>").addClass("ui-dialog-buttonpane ui-widget-content ui-helper-clearfix"),
                o = a("<div></div>").addClass("ui-dialog-buttonset").appendTo(l);
            c.uiDialog.find(".ui-dialog-buttonpane").remove();
            typeof g === "object" && g !== null && a.each(g, function () {
                return !(b = true)
            });
            if (b) {
                a.each(g, function (n, q) {
                    q = a.isFunction(q) ? {
                        click: q,
                        text: n
                    } : q;
                    n = a('<button type="button"></button>').attr(q, true).unbind("click").click(function () {
                        q.click.apply(c.element[0], arguments)
                    }).appendTo(o);
                    a.fn.button && n.button()
                });
                l.appendTo(c.uiDialog)
            }
        },
        _makeDraggable: function () {
            function g(n) {
                return {
                    position: n.position,
                    offset: n.offset
                }
            }
            var c = this,
                b = c.options,
                l = a(document),
                o;
            c.uiDialog.draggable({
                cancel: ".ui-dialog-content, .ui-dialog-titlebar-close",
                handle: ".ui-dialog-titlebar",
                containment: "document",
                start: function (n, q) {
                    o = b.height === "auto" ? "auto" : a(this).height();
                    a(this).height(a(this).height()).addClass("ui-dialog-dragging");
                    c._trigger("dragStart", n, g(q))
                },
                drag: function (n, q) {
                    c._trigger("drag", n, g(q))
                },
                stop: function (n, q) {
                    b.position = [q.position.left - l.scrollLeft(), q.position.top - l.scrollTop()];
                    a(this).removeClass("ui-dialog-dragging").height(o);
                    c._trigger("dragStop", n, g(q));
                    a.ui.dialog.overlay.resize()
                }
            })
        },
        _makeResizable: function (g) {
            function c(n) {
                return {
                    originalPosition: n.originalPosition,
                    originalSize: n.originalSize,
                    position: n.position,
                    size: n.size
                }
            }
            g = g === e ? this.options.resizable : g;
            var b = this,
                l = b.options,
                o = b.uiDialog.css("position");
            g = typeof g === "string" ? g : "n,e,s,w,se,sw,ne,nw";
            b.uiDialog.resizable({
                cancel: ".ui-dialog-content",
                containment: "document",
                alsoResize: b.element,
                maxWidth: l.maxWidth,
                maxHeight: l.maxHeight,
                minWidth: l.minWidth,
                minHeight: b._minHeight(),
                handles: g,
                start: function (n, q) {
                    a(this).addClass("ui-dialog-resizing");
                    b._trigger("resizeStart", n, c(q))
                },
                resize: function (n, q) {
                    b._trigger("resize",
                        n, c(q))
                },
                stop: function (n, q) {
                    a(this).removeClass("ui-dialog-resizing");
                    l.height = a(this).height();
                    l.width = a(this).width();
                    b._trigger("resizeStop", n, c(q));
                    a.ui.dialog.overlay.resize()
                }
            }).css("position", o).find(".ui-resizable-se").addClass("ui-icon ui-icon-grip-diagonal-se")
        },
        _minHeight: function () {
            var g = this.options;
            return g.height === "auto" ? g.minHeight : Math.min(g.minHeight, g.height)
        },
        _position: function (g) {
            var c = [],
                b = [0, 0],
                l;
            if (g) {
                if (typeof g === "string" || typeof g === "object" && "0" in g) {
                    c = g.split ? g.split(" ") : [g[0], g[1]];
                    if (c.length === 1) c[1] = c[0];
                    a.each(["left", "top"], function (o, n) {
                        if (+c[o] === c[o]) {
                            b[o] = c[o];
                            c[o] = n
                        }
                    });
                    g = {
                        my: c.join(" "),
                        at: c.join(" "),
                        offset: b.join(" ")
                    }
                }
                g = a.extend({}, a.ui.dialog.prototype.options.position, g)
            } else g = a.ui.dialog.prototype.options.position;
            (l = this.uiDialog.is(":visible")) || this.uiDialog.show();
            this.uiDialog.css({
                top: 0,
                left: 0
            }).position(a.extend({
                of: window
            }, g));
            l || this.uiDialog.hide()
        },
        _setOptions: function (g) {
            var c = this,
                b = {}, l = false;
            a.each(g, function (o, n) {
                c._setOption(o, n);
                if (o in f) l = true;
                if (o in j) b[o] = n
            });
            l && this._size();
            this.uiDialog.is(":data(resizable)") && this.uiDialog.resizable("option", b)
        },
        _setOption: function (g, c) {
            var b = this.uiDialog;
            switch (g) {
            case "beforeclose":
                g = "beforeClose";
                break;
            case "buttons":
                this._createButtons(c);
                break;
            case "closeText":
                this.uiDialogTitlebarCloseText.text("" + c);
                break;
            case "dialogClass":
                b.removeClass(this.options.dialogClass).addClass("ui-dialog ui-widget ui-widget-content ui-corner-all " + c);
                break;
            case "disabled":
                c ? b.addClass("ui-dialog-disabled") :
                    b.removeClass("ui-dialog-disabled");
                break;
            case "draggable":
                var l = b.is(":data(draggable)");
                l && !c && b.draggable("destroy");
                !l && c && this._makeDraggable();
                break;
            case "position":
                this._position(c);
                break;
            case "resizable":
                (l = b.is(":data(resizable)")) && !c && b.resizable("destroy");
                l && typeof c === "string" && b.resizable("option", "handles", c);
                !l && c !== false && this._makeResizable(c);
                break;
            case "title":
                a(".ui-dialog-title", this.uiDialogTitlebar).html("" + (c || "&#160;"))
            }
            a.Widget.prototype._setOption.apply(this, arguments)
        },
        _size: function () {
            var g = this.options,
                c, b, l = this.uiDialog.is(":visible");
            this.element.show().css({
                width: "auto",
                minHeight: 0,
                height: 0
            });
            if (g.minWidth > g.width) g.width = g.minWidth;
            c = this.uiDialog.css({
                height: "auto",
                width: g.width
            }).height();
            b = Math.max(0, g.minHeight - c);
            if (g.height === "auto")
                if (a.support.minHeight) this.element.css({
                    minHeight: b,
                    height: "auto"
                });
                else {
                    this.uiDialog.show();
                    g = this.element.css("height", "auto").height();
                    l || this.uiDialog.hide();
                    this.element.height(Math.max(g, b))
                } else this.element.height(Math.max(g.height -
                    c, 0));
            this.uiDialog.is(":data(resizable)") && this.uiDialog.resizable("option", "minHeight", this._minHeight())
        }
    });
    a.extend(a.ui.dialog, {
        version: "1.8.11",
        uuid: 0,
        maxZ: 0,
        getTitleId: function (g) {
            g = g.attr("id");
            if (!g) {
                this.uuid += 1;
                g = this.uuid
            }
            return "ui-dialog-title-" + g
        },
        overlay: function (g) {
            this.$el = a.ui.dialog.overlay.create(g)
        }
    });
    a.extend(a.ui.dialog.overlay, {
        instances: [],
        oldInstances: [],
        maxZ: 0,
        events: a.map("focus,mousedown,mouseup,keydown,keypress,click".split(","), function (g) {
            return g + ".dialog-overlay"
        }).join(" "),
        create: function (g) {
            if (this.instances.length === 0) {
                setTimeout(function () {
                    a.ui.dialog.overlay.instances.length && a(document).bind(a.ui.dialog.overlay.events, function (b) {
                        if (a(b.target).zIndex() < a.ui.dialog.overlay.maxZ) return false
                    })
                }, 1);
                a(document).bind("keydown.dialog-overlay", function (b) {
                    if (g.options.closeOnEscape && b.keyCode && b.keyCode === a.ui.keyCode.ESCAPE) {
                        g.close(b);
                        b.preventDefault()
                    }
                });
                a(window).bind("resize.dialog-overlay", a.ui.dialog.overlay.resize)
            }
            var c = (this.oldInstances.pop() || a("<div></div>").addClass("ui-widget-overlay")).appendTo(document.body).css({
                width: this.width(),
                height: this.height()
            });
            a.fn.bgiframe && c.bgiframe();
            this.instances.push(c);
            return c
        },
        destroy: function (g) {
            var c = a.inArray(g, this.instances);
            c != -1 && this.oldInstances.push(this.instances.splice(c, 1)[0]);
            this.instances.length === 0 && a([document, window]).unbind(".dialog-overlay");
            g.remove();
            var b = 0;
            a.each(this.instances, function () {
                b = Math.max(b, this.css("z-index"))
            });
            this.maxZ = b
        },
        height: function () {
            var g, c;
            if (a.browser.msie && a.browser.version < 7) {
                g = Math.max(document.documentElement.scrollHeight, document.body.scrollHeight);
                c = Math.max(document.documentElement.offsetHeight, document.body.offsetHeight);
                return g < c ? a(window).height() + "px" : g + "px"
            } else return a(document).height() + "px"
        },
        width: function () {
            var g, c;
            if (a.browser.msie && a.browser.version < 7) {
                g = Math.max(document.documentElement.scrollWidth, document.body.scrollWidth);
                c = Math.max(document.documentElement.offsetWidth, document.body.offsetWidth);
                return g < c ? a(window).width() + "px" : g + "px"
            } else return a(document).width() + "px"
        },
        resize: function () {
            var g = a([]);
            a.each(a.ui.dialog.overlay.instances,
                function () {
                    g = g.add(this)
                });
            g.css({
                width: 0,
                height: 0
            }).css({
                width: a.ui.dialog.overlay.width(),
                height: a.ui.dialog.overlay.height()
            })
        }
    });
    a.extend(a.ui.dialog.overlay.prototype, {
        destroy: function () {
            a.ui.dialog.overlay.destroy(this.$el)
        }
    })
})(jQuery);
(function (a, e) {
    var f = 0,
        j = 0;
    a.widget("ui.tabs", {
        options: {
            add: null,
            ajaxOptions: null,
            cache: false,
            cookie: null,
            collapsible: false,
            disable: null,
            disabled: [],
            enable: null,
            event: "click",
            fx: null,
            idPrefix: "ui-tabs-",
            load: null,
            panelTemplate: "<div></div>",
            remove: null,
            select: null,
            show: null,
            spinner: "<em>Loading&#8230;</em>",
            tabTemplate: "<li><a href='#{href}'><span>#{label}</span></a></li>"
        },
        _create: function () {
            this._tabify(true)
        },
        _setOption: function (g, c) {
            if (g == "selected") this.options.collapsible && c == this.options.selected ||
                this.select(c);
            else {
                this.options[g] = c;
                this._tabify()
            }
        },
        _tabId: function (g) {
            return g.title && g.title.replace(/\s/g, "_").replace(/[^\w\u00c0-\uFFFF-]/g, "") || this.options.idPrefix + ++f
        },
        _sanitizeSelector: function (g) {
            return g.replace(/:/g, "\\:")
        },
        _cookie: function () {
            var g = this.cookie || (this.cookie = this.options.cookie.name || "ui-tabs-" + ++j);
            return a.cookie.apply(null, [g].concat(a.makeArray(arguments)))
        },
        _ui: function (g, c) {
            return {
                tab: g,
                panel: c,
                index: this.anchors.index(g)
            }
        },
        _cleanup: function () {
            this.lis.filter(".ui-state-processing").removeClass("ui-state-processing").find("span:data(label.tabs)").each(function () {
                var g =
                    a(this);
                g.html(g.data("label.tabs")).removeData("label.tabs")
            })
        },
        _tabify: function (g) {
            function c(B, C) {
                B.css("display", "");
                !a.support.opacity && C.opacity && B[0].style.removeAttribute("filter")
            }
            var b = this,
                l = this.options,
                o = /^#.+/;
            this.list = this.element.find("ol,ul").eq(0);
            this.lis = a(" > li:has(a[href])", this.list);
            this.anchors = this.lis.map(function () {
                return a("a", this)[0]
            });
            this.panels = a([]);
            this.anchors.each(function (B, C) {
                var w = a(C).attr("href"),
                    G = w.split("#")[0],
                    J;
                if (G && (G === location.toString().split("#")[0] ||
                    (J = a("base")[0]) && G === J.href)) {
                    w = C.hash;
                    C.href = w
                }
                if (o.test(w)) b.panels = b.panels.add(b.element.find(b._sanitizeSelector(w)));
                else if (w && w !== "#") {
                    a.data(C, "href.tabs", w);
                    a.data(C, "load.tabs", w.replace(/#.*$/, ""));
                    w = b._tabId(C);
                    C.href = "#" + w;
                    C = b.element.find("#" + w);
                    if (!C.length) {
                        C = a(l.panelTemplate).attr("id", w).addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").insertAfter(b.panels[B - 1] || b.list);
                        C.data("destroy.tabs", true)
                    }
                    b.panels = b.panels.add(C)
                } else l.disabled.push(B)
            });
            if (g) {
                this.element.addClass("ui-tabs ui-widget ui-widget-content ui-corner-all");
                this.list.addClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all");
                this.lis.addClass("ui-state-default ui-corner-top");
                this.panels.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom");
                if (l.selected === e) {
                    location.hash && this.anchors.each(function (B, C) {
                        if (C.hash == location.hash) {
                            l.selected = B;
                            return false
                        }
                    });
                    if (typeof l.selected !== "number" && l.cookie) l.selected = parseInt(b._cookie(), 10);
                    if (typeof l.selected !== "number" && this.lis.filter(".ui-tabs-selected").length) l.selected =
                        this.lis.index(this.lis.filter(".ui-tabs-selected"));
                    l.selected = l.selected || (this.lis.length ? 0 : -1)
                } else if (l.selected === null) l.selected = -1;
                l.selected = l.selected >= 0 && this.anchors[l.selected] || l.selected < 0 ? l.selected : 0;
                l.disabled = a.unique(l.disabled.concat(a.map(this.lis.filter(".ui-state-disabled"), function (B) {
                    return b.lis.index(B)
                }))).sort();
                a.inArray(l.selected, l.disabled) != -1 && l.disabled.splice(a.inArray(l.selected, l.disabled), 1);
                this.panels.addClass("ui-tabs-hide");
                this.lis.removeClass("ui-tabs-selected ui-state-active");
                if (l.selected >= 0 && this.anchors.length) {
                    b.element.find(b._sanitizeSelector(b.anchors[l.selected].hash)).removeClass("ui-tabs-hide");
                    this.lis.eq(l.selected).addClass("ui-tabs-selected ui-state-active");
                    b.element.queue("tabs", function () {
                        b._trigger("show", null, b._ui(b.anchors[l.selected], b.element.find(b._sanitizeSelector(b.anchors[l.selected].hash))[0]))
                    });
                    this.load(l.selected)
                }
                a(window).bind("unload", function () {
                    b.lis.add(b.anchors).unbind(".tabs");
                    b.lis = b.anchors = b.panels = null
                })
            } else l.selected = this.lis.index(this.lis.filter(".ui-tabs-selected"));
            this.element[l.collapsible ? "addClass" : "removeClass"]("ui-tabs-collapsible");
            l.cookie && this._cookie(l.selected, l.cookie);
            g = 0;
            for (var n; n = this.lis[g]; g++) a(n)[a.inArray(g, l.disabled) != -1 && !a(n).hasClass("ui-tabs-selected") ? "addClass" : "removeClass"]("ui-state-disabled");
            l.cache === false && this.anchors.removeData("cache.tabs");
            this.lis.add(this.anchors).unbind(".tabs");
            if (l.event !== "mouseover") {
                var q = function (B, C) {
                    C.is(":not(.ui-state-disabled)") && C.addClass("ui-state-" + B)
                };
                this.lis.bind("mouseover.tabs",
                    function () {
                        q("hover", a(this))
                    });
                this.lis.bind("mouseout.tabs", function () {
                    a(this).removeClass("ui-state-hover")
                });
                this.anchors.bind("focus.tabs", function () {
                    q("focus", a(this).closest("li"))
                });
                this.anchors.bind("blur.tabs", function () {
                    a(this).closest("li").removeClass("ui-state-focus")
                })
            }
            var u, v;
            if (l.fx)
                if (a.isArray(l.fx)) {
                    u = l.fx[0];
                    v = l.fx[1]
                } else u = v = l.fx;
            var x = v ? function (B, C) {
                    a(B).closest("li").addClass("ui-tabs-selected ui-state-active");
                    C.hide().removeClass("ui-tabs-hide").animate(v, v.duration || "normal",
                        function () {
                            c(C, v);
                            b._trigger("show", null, b._ui(B, C[0]))
                        })
                } : function (B, C) {
                    a(B).closest("li").addClass("ui-tabs-selected ui-state-active");
                    C.removeClass("ui-tabs-hide");
                    b._trigger("show", null, b._ui(B, C[0]))
                }, z = u ? function (B, C) {
                    C.animate(u, u.duration || "normal", function () {
                        b.lis.removeClass("ui-tabs-selected ui-state-active");
                        C.addClass("ui-tabs-hide");
                        c(C, u);
                        b.element.dequeue("tabs")
                    })
                } : function (B, C) {
                    b.lis.removeClass("ui-tabs-selected ui-state-active");
                    C.addClass("ui-tabs-hide");
                    b.element.dequeue("tabs")
                };
            this.anchors.bind(l.event + ".tabs", function () {
                var B = this,
                    C = a(B).closest("li"),
                    w = b.panels.filter(":not(.ui-tabs-hide)"),
                    G = b.element.find(b._sanitizeSelector(B.hash));
                if (C.hasClass("ui-tabs-selected") && !l.collapsible || C.hasClass("ui-state-disabled") || C.hasClass("ui-state-processing") || b.panels.filter(":animated").length || b._trigger("select", null, b._ui(this, G[0])) === false) {
                    this.blur();
                    return false
                }
                l.selected = b.anchors.index(this);
                b.abort();
                if (l.collapsible)
                    if (C.hasClass("ui-tabs-selected")) {
                        l.selected = -1;
                        l.cookie && b._cookie(l.selected, l.cookie);
                        b.element.queue("tabs", function () {
                            z(B, w)
                        }).dequeue("tabs");
                        this.blur();
                        return false
                    } else if (!w.length) {
                    l.cookie && b._cookie(l.selected, l.cookie);
                    b.element.queue("tabs", function () {
                        x(B, G)
                    });
                    b.load(b.anchors.index(this));
                    this.blur();
                    return false
                }
                l.cookie && b._cookie(l.selected, l.cookie);
                if (G.length) {
                    w.length && b.element.queue("tabs", function () {
                        z(B, w)
                    });
                    b.element.queue("tabs", function () {
                        x(B, G)
                    });
                    b.load(b.anchors.index(this))
                } else throw "jQuery UI Tabs: Mismatching fragment identifier.";
                a.browser.msie && this.blur()
            });
            this.anchors.bind("click.tabs", function () {
                return false
            })
        },
        _getIndex: function (g) {
            if (typeof g == "string") g = this.anchors.index(this.anchors.filter("[href$=" + g + "]"));
            return g
        },
        destroy: function () {
            var g = this.options;
            this.abort();
            this.element.unbind(".tabs").removeClass("ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible").removeData("tabs");
            this.list.removeClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all");
            this.anchors.each(function () {
                var c =
                    a.data(this, "href.tabs");
                if (c) this.href = c;
                var b = a(this).unbind(".tabs");
                a.each(["href", "load", "cache"], function (l, o) {
                    b.removeData(o + ".tabs")
                })
            });
            this.lis.unbind(".tabs").add(this.panels).each(function () {
                a.data(this, "destroy.tabs") ? a(this).remove() : a(this).removeClass("ui-state-default ui-corner-top ui-tabs-selected ui-state-active ui-state-hover ui-state-focus ui-state-disabled ui-tabs-panel ui-widget-content ui-corner-bottom ui-tabs-hide")
            });
            g.cookie && this._cookie(null, g.cookie);
            return this
        },
        add: function (g,
            c, b) {
            if (b === e) b = this.anchors.length;
            var l = this,
                o = this.options;
            c = a(o.tabTemplate.replace(/#\{href\}/g, g).replace(/#\{label\}/g, c));
            g = !g.indexOf("#") ? g.replace("#", "") : this._tabId(a("a", c)[0]);
            c.addClass("ui-state-default ui-corner-top").data("destroy.tabs", true);
            var n = l.element.find("#" removeClass("ui-tabs-selected ui-state-active");
                    C.addClass("ui-tabs-hide");
                    b.element.dequeue("tabs")
                };
            this.anchors.bind(l.event + ".tabs", function () {
                var B = this,
                    C = a(B).closest("li"),
                    w = b.panels.filter(":not(.ui-tabs-hide)"),
                    G = b.element.find(b._sanitizeSelector(B.hash));
                if (C.hasClass("ui-tabs-selected") && !l.collapsible || C.hasClass("ui-state-disabled") || C.hasClass("ui-state-processing") || b.panels.filter(":animated").length || b._trigger("select", null, b._ui(this, G[0])) === false) {
                    this.blur();
                    return false
                }
                l.selected = b.anchors.index(this);
                b.abort();
                if (l.collapsible)
                    if (C.hasClass("ui-tabs-selected")) {
                        l.selected = -1;
                        l.cookie && b._cookie(l.selected, l.cookie);
                        b.element.queue("tabs", function () {
                            z(B, w)
                        }).dequeue("tabs");
                        this.blur();
                        return false
                    } else if (!w.length) {
                    l.cookie && b._cookie(l.selected, l.cookie);
                    b.element.queue("tabs", function () {
                        x(B, G)
                    });
                    b.load(b.anchors.index(this));
                    this.blur();
                    return false
                }
                l.cookie && b._cookie(l.selected, l.cookie);
                if (G.length) {
                    w.length && b.element.queue("tabs", function () {
                        z(B, w)
                    });
                    b.element.queue("tabs", function () {
                        x(B, G)
                    });
                    b.load(b.anchors.index(this))
                } else throw "jQuery UI Tabs: Mismatching fragment identifier.";
                a.browser.msie && this.blur()
            });
            this.anchors.bind("click.tabs", function () {
                return false
            })
        },
        _getIndex: function (g) {
            if (typeof g == "string") g = this.anchors.index(this.anchors.filter("[href$=" + g + "]"));
            return g
        },
        destroy: function () {
            var g = this.options;
            this.abort();
            this.element.unbind(".tabs").removeClass("ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible").removeData("tabs");
            this.list.removeClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all");
            this.anchors.each(function () {
                var c =
                    a.data(this, "href.tabs");
                if (c) this.href = c;
                var b = a(this).unbind(".tabs");
                a.each(["href", "load", "cache"], function (l, o) {
                    b.removeData(o + ".tabs")
                })
            });
            this.lis.unbind(".tabs").add(this.panels).each(function () {
                a.data(this, "destroy.tabs") ? a(this).remove() : a(this).removeClass("ui-state-default ui-corner-top ui-tabs-selected ui-state-active ui-state-hover ui-state-focus ui-state-disabled ui-tabs-panel ui-widget-content ui-corner-bottom ui-tabs-hide")
            });
            g.cookie && this._cookie(null, g.cookie);
            return this
        },
        add: function (g,
            c, b) {
            if (b === e) b = this.anchors.length;
            var l = this,
                o = this.options;
            c = a(o.tabTemplate.replace(/#\{href\}/g, g).replace(/#\{label\}/g, c));
            g = !g.indexOf("#") ? g.replace("#", "") : this._tabId(a("a", c)[0]);
            c.addClass("ui-state-default ui-corner-top").data("destroy.tabs", true);
            var n = l.element.find("#" + g);
            n.length || (n = a(o.panelTemplate).attr("id", g).data("destroy.tabs", true));
            n.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom ui-tabs-hide");
            if (b >= this.lis.length) {
                c.appendTo(this.list);
                n.appendTo(this.list[0].parentNode)
            } else {
                c.insertBefore(this.lis[b]);
                n.insertBefore(this.panels[b])
            }
            o.disabled = a.map(o.disabled, function (q) {
                return q >= b ? ++q : q
            });
            this._tabify();
            if (this.anchors.length == 1) {
                o.selected = 0;
                c.addClass("ui-tabs-selected ui-state-active");
                n.removeClass("ui-tabs-hide");
                this.element.queue("tabs", function () {
                    l._trigger("show", null, l._ui(l.anchors[0], l.panels[0]))
                });
                this.load(0)
            }
            this._trigger("add", null, this._ui(this.anchors[b], this.panels[b]));
            return this
        },
        remove: function (g) {
            g = this._getIndex(g);
            var c = this.options,
                b = this.lis.eq(g).remove(),
                l = this.panels.eq(g).remove();
            if (b.hasClass("ui-tabs-selected") && this.anchors.length > 1) this.select(g + (g + 1 < this.anchors.length ? 1 : -1));
            c.disabled = a.map(a.grep(c.disabled, function (o) {
                return o != g
            }), function (o) {
                return o >= g ? --o : o
            });
            this._tabify();
            this._trigger("remove", null, this._ui(b.find("a")[0], l[0]));
            return this
        },
        enable: function (g) {
            g = this._getIndex(g);
            var c = this.options;
            if (a.inArray(g, c.disabled) != -1) {
                this.lis.eq(g).removeClass("ui-state-disabled");
                c.disabled = a.grep(c.disabled, function (b) {
                    return b != g
                });
                this._trigger("enable", null,
                    this._ui(this.anchors[g], this.panels[g]));
                return this
            }
        },
        disable: function (g) {
            g = this._getIndex(g);
            var c = this.options;
            if (g != c.selected) {
                this.lis.eq(g).addClass("ui-state-disabled");
                c.disabled.push(g);
                c.disabled.sort();
                this._trigger("disable", null, this._ui(this.anchors[g], this.panels[g]))
            }
            return this
        },
        select: function (g) {
            g = this._getIndex(g);
            if (g == -1)
                if (this.options.collapsible && this.options.selected != -1) g = this.options.selected;
                else return this;
            this.anchors.eq(g).trigger(this.options.event + ".tabs");
            return this
        },
        load: function (g) {
            g = this._getIndex(g);
            var c = this,
                b = this.options,
                l = this.anchors.eq(g)[0],
                o = a.data(l, "load.tabs");
            this.abort();
            if (!o || this.element.queue("tabs").length !== 0 && a.data(l, "cache.tabs")) this.element.dequeue("tabs");
            else {
                this.lis.eq(g).addClass("ui-state-processing");
                if (b.spinner) {
                    var n = a("span", l);
                    n.data("label.tabs", n.html()).html(b.spinner)
                }
                this.xhr = a.ajax(a.extend({}, b.ajaxOptions, {
                    url: o,
                    success: function (q, u) {
                        c.element.find(c._sanitizeSelector(l.hash)).html(q);
                        c._cleanup();
                        b.cache && a.data(l,
                            "cache.tabs", true);
                        c._trigger("load", null, c._ui(c.anchors[g], c.panels[g]));
                        try {
                            b.ajaxOptions.success(q, u)
                        } catch (v) {}
                    },
                    error: function (q, u) {
                        c._cleanup();
                        c._trigger("load", null, c._ui(c.anchors[g], c.panels[g]));
                        try {
                            b.ajaxOptions.error(q, u, g, l)
                        } catch (v) {}
                    }
                }));
                c.element.dequeue("tabs");
                return this
            }
        },
        abort: function () {
            this.element.queue([]);
            this.panels.stop(false, true);
            this.element.queue("tabs", this.element.queue("tabs").splice(-2, 2));
            if (this.xhr) {
                this.xhr.abort();
                delete this.xhr
            }
            this._cleanup();
            return this
        },
        url: function (g, c) {
            this.anchors.eq(g).removeData("cache.tabs").data("load.tabs", c);
            return this
        },
        length: function () {
            return this.anchors.length
        }
    });
    a.extend(a.ui.tabs, {
        version: "1.8.11"
    });
    a.extend(a.ui.tabs.prototype, {
        rotation: null,
        rotate: function (g, c) {
            var b = this,
                l = this.options,
                o = b._rotate || (b._rotate = function (n) {
                    clearTimeout(b.rotation);
                    b.rotation = setTimeout(function () {
                        var q = l.selected;
                        b.select(++q < b.anchors.length ? q : 0)
                    }, g);
                    n && n.stopPropagation()
                });
            c = b._unrotate || (b._unrotate = !c ? function (n) {
                n.clientX &&
                    b.rotate(null)
            } : function () {
                t = l.selected;
                o()
            });
            if (g) {
                this.element.bind("tabsshow", o);
                this.anchors.bind(l.event + ".tabs", c);
                o()
            } else {
                clearTimeout(b.rotation);
                this.element.unbind("tabsshow", o);
                this.anchors.unbind(l.event + ".tabs", c);
                delete this._rotate;
                delete this._unrotate
            }
            return this
        }
    })
})(jQuery);
(function (a, e) {
    function f() {
        this.debug = false;
        this._curInst = null;
        this._keyEvent = false;
        this._disabledInputs = [];
        this._inDialog = this._datepickerShowing = false;
        this._mainDivId = "ui-datepicker-div";
        this._inlineClass = "ui-datepicker-inline";
        this._appendClass = "ui-datepicker-append";
        this._triggerClass = "ui-datepicker-trigger";
        this._dialogClass = "ui-datepicker-dialog";
        this._disableClass = "ui-datepicker-disabled";
        this._unselectableClass = "ui-datepicker-unselectable";
        this._currentClass = "ui-datepicker-current-day";
        this._dayOverClass =
            "ui-datepicker-days-cell-over";
        this.regional = [];
        this.regional[""] = {
            closeText: "Done",
            prevText: "Prev",
            nextText: "Next",
            currentText: "Today",
            monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
            monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
            dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
            dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
            dayNamesMin: ["Su",
                "Mo", "Tu", "We", "Th", "Fr", "Sa"
            ],
            weekHeader: "Wk",
            dateFormat: "mm/dd/yy",
            firstDay:       }).bind("getData.datepicker", function (o, n) {
                    return this._get(b, n)
                });
                this._autoSize(b);
                a.data(c, "datepicker", b)
            }
        },
        _attachments: function (c, b) {
            var l = this._get(b, "appendText"),
                o = this._get(b, "isRTL");
            b.append &&
                b.append.remove();
            if (l) {
                b.append = a('<span class="' + this._appendClass + '">' + l + "</span>");
                c[o ? "before" : "after"](b.append)
            }
            c.unbind("focus", this._showDatepicker);
            b.trigger && b.trigger.remove();
            l = this._get(b, "showOn");
            if (l == "focus" || l == "both") c.focus(this._showDatepicker);
            if (l == "button" || l == "both") {
                l = this._get(b, "buttonText");
                var n = this._get(b, "buttonImage");
                b.trigger = a(this._get(b, "buttonImageOnly") ? a("<img/>").addClass(this._triggerClass).attr({
                    src: n,
                    alt: l,
                    title: l
                }) : a('<button type="button"></button>').addClass(this._triggerClass).html(n ==
                    "" ? l : a("<img/>").attr({
                        src: n,
                        alt: l,
                        title: l
                    })));
                c[o ? "before" : "after"](b.trigger);
                b.trigger.click(function () {
                    a.datepicker._datepickerShowing && a.datepicker._lastInput == c[0] ? a.datepicker._hideDatepicker() : a.datepicker._showDatepicker(c[0]);
                    return false
                })
            }
        },
        _autoSize: function (c) {
            if (this._get(c, "autoSize") && !c.inline) {
                var b = new Date(2009, 11, 20),
                    l = this._get(c, "dateFormat");
                if (l.match(/[DM]/)) {
                    var o = function (n) {
                        for (var q = 0, u = 0, v = 0; v < n.length; v++)
                            if (n[v].length > q) {
                                q = n[v].length;
                                u = v
                            }
                        return u
                    };
                    b.setMonth(o(this._get(c,
                        l.match(/MM/) ? "monthNames" : "monthNamesShort")));
                    b.setDate(o(this._get(c, l.match(/DD/) ? "dayNames" : "dayNamesShort")) + 20 - b.getDay())
                }
                c.input.attr("size", this._formatDate(c, b).length)
            }
        },
        _inlineDatepicker: function (c, b) {
            var l = a(c);
            if (!l.hasClass(this.markerClassName)) {
                l.addClass(this.markerClassName).append(b.dpDiv).bind("setData.datepicker", function (o, n, q) {
                    b.settings[n] = q
                }).bind("getData.datepicker", function (o, n) {
                    return this._get(b, n)
                });
                a.data(c, "datepicker", b);
                this._setDate(b, this._getDefaultDate(b),
                    true);
                this._updateDatepicker(b);
                this._updateAlternate(b);
                b.dpDiv.show()
            }
        },
        _dialogDatepicker: function (c, b, l, o, n) {
            c = this._dialogInst;
            if (!c) {
                this.uuid += 1;
                this._dialogInput = a('<input type="text" id="' + ("dp" + this.uuid) + '" style="position: absolute; top: -100px; width: 0px; z-index: -10;"/>');
                this._dialogInput.keydown(this._doKeyDown);
                a("body").append(this._dialogInput);
                c = this._dialogInst = this._newInst(this._dialogInput, false);
                c.settings = {};
                a.data(this._dialogInput[0], "datepicker", c)
            }
            j(c.settings, o || {});
            b = b && b.constructor == Date ? this._formatDate(c, b) : b;
            this._dialogInput.val(b);
            this._pos = n ? n.length ? n : [n.pageX, n.pageY] : null;
            if (!this._pos) this._pos = [document.documentElement.clientWidth / 2 - 100 + (document.documentElement.scrollLeft || document.body.scrollLeft), document.documentElement.clientHeight / 2 - 150 + (document.documentElement.scrollTop || document.body.scrollTop)];
            this._dialogInput.css("left", this._pos[0] + 20 + "px").css("top", this._pos[1] + "px");
            c.settings.onSelect = l;
            this._inDialog = true;
            this.dpDiv.addClass(this._dialogClass);
            this._showDatepicker(this._dialogInput[0]);
            a.blockUI && a.blockUI(this.dpDiv);
            a.data(this._dialogInput[0], "datepicker", c);
            return this
        },
        _destroyDatepicker: function (c) {
            var b = a(c),
                l = a.data(c, "datepicker");
            if (b.hasClass(this.markerClassName)) {
                var o = c.nodeName.toLowerCase();
                a.removeData(c, "datepicker");
                if (o == "input") {
                    l.append.remove();
                    l.trigger.remove();
                    b.removeClass(this.markerClassName).unbind("focus", this._showDatepicker).unbind("keydown", this._doKeyDown).unbind("keypress", this._doKeyPress).unbind("keyup",
                        this._doKeyUp)
                } else if (o == "div" || o == "span") b.removeClass(this.markerClassName).empty()
            }
        },
        _enableDatepicker: function (c) {
            var b = a(c),
                l = a.data(c, "datepicker");
            if (b.hasClass(this.markerClassName)) {
                var o = c.nodeName.toLowerCase();
                if (o == "input") {
                    c.disabled = false;
                    l.trigger.filter("button").each(function () {
                        this.disabled = false
                    }).end().filter("img").css({
                        opacity: "1.0",
                        cursor: ""
                    })
                } else if (o == "div" || o == "span") b.children("." + this._inlineClass).children().removeClass("ui-state-disabled");
                this._disabledInputs = a.map(this._disabledInputs,
                    function (n) {
                        return n == c ? null : n
                    })
            }
        },
        _disableDatepicker: function (c) {
            var b = a(c),
                l = a.data(c, "datepicker");
            if (b.hasClass(this.markerClassName)) {
                var o = c.nodeName.toLowerCase();
                if (o == "input") {
                    c.disabled = true;
                    l.trigger.filter("button").each(function () {
                        this.disabled = true
                    }).end().filter("img").css({
                        opacity: "0.5",
                        cursor: "default"
                    })
                } else if (o == "div" || o == "span") b.children("." + this._inlineClass).children().addClass("ui-state-disabled");
                this._disabledInputs = a.map(this._disabledInputs, function (n) {
                    return n == c ? null :
                        n
                });
                this._disabledInputs[this._disabledInputs.length] = c
            }
        },
        _isDisabledDatepicker: function (c) {
            if (!c) return false;
            for (var b = 0; b < this._disabledInputs.length; b++)
                if (this._disabledInputs[b] == c) return true;
            return false
        },
        _getInst: function (c) {
            try {
                return a.data(c, "datepicker")
            } catch (b) {
                throw "Missing instance data for this datepicker";
            }
        },
        _optionDatepicker: function (c, b, l) {
            var o = this._getInst(c);
            if (arguments.length == 2 && typeof b == "string") return b == "defaults" ? a.extend({}, a.datepicker._defaults) : o ? b == "all" ? a.extend({},
                o.settings) : this._get(o, b) : null;
            var n = b || {};
            if (typeof b == "string") {
                n = {};
                n[b] = l
            }
            if (o) {
                this._curInst == o && this._hideDatepicker();
                var q = this._getDateDatepicker(c, true),
                    u = this._getMinMaxDate(o, "min"),
                    v = this._getMinMaxDate(o, "max");
                j(o.settings, n);
                if (u !== null && n.dateFormat !== e && n.minDate === e) o.settings.minDate = this._formatDate(o, u);
                if (v !== null && n.dateFormat !== e && n.maxDate === e) o.settings.maxDate = this._formatDate(o, v);
                this._attachments(a(c), o);
                this._autoSize(o);
                this._setDateDatepicker(c, q);
                this._updateDatepicker(o)
            }
        },
        _changeDatepicker: function (c, b, l) {
            this._optionDatepicker(c, b, l)
        },
        _refreshDatepicker: function (c) {
            (c = this._getInst(c)) && this._updateDatepicker(c)
        },
        _setDateDatepicker: function (c, b) {
            if (c = this._getInst(c)) {
                this._setDate(c, b);
                this._updateDatepicker(c);
                this._updateAlternate(c)
            }
        },
        _getDateDatepicker: function (c, b) {
            (c = this._getInst(c)) && !c.inline && this._setDateFromField(c, b);
            return c ? this._getDate(c) : null
        },
        _doKeyDown: function (c) {
            var b = a.datepicker._getInst(c.target),
                l = true,
                o = b.dpDiv.is(".ui-datepicker-rtl");
            b._keyEvent = true;
            if (a.datepicker._datepickerShowing) switch (c.keyCode) {
            case 9:
                a.datepicker._hideDatepicker();
                l = false;
                break;
            case 13:
                l = a("td." + a.datepicker._dayOverClass + ":not(." + a.datepicker._currentClass + ")", b.dpDiv);
                l[0] ? a.datepicker._selectDay(c.target, b.selectedMonth, b.selectedYear, l[0]) : a.datepicker._hideDatepicker();
                return false;
            case 27:
                a.datepicker._hideDatepicker();
                break;
            case 33:
                a.datepicker._adjustDate(c.target, c.ctrlKey ? -a.datepicker._get(b, "stepBigMonths") : -a.datepicker._get(b, "stepMonths"),
                    "M");
                break;
            case 34:
                a.datepicker._adjustDate(c.target, c.ctrlKey ? +a.datepicker._get(b, "stepBigMonths") : +a.datepicker._get(b, "stepMonths"), "M");
                break;
            case 35:
                if (c.ctrlKey || c.metaKey) a.datepicker._clearDate(c.target);
                l = c.ctrlKey || c.metaKey;
                break;
            case 36:
                if (c.ctrlKey || c.metaKey) a.datepicker._gotoToday(c.target);
                l = c.ctrlKey || c.metaKey;
                break;
            case 37:
                if (c.ctrlKey || c.metaKey) a.datepicker._adjustDate(c.target, o ? +1 : -1, "D");
                l = c.ctrlKey || c.metaKey;
                if (c.originalEvent.altKey) a.datepicker._adjustDate(c.target, c.ctrlKey ? -a.datepicker._get(b, "stepBigMonths") : -a.datepicker._get(b, "stepMonths"), "M");
                break;
            case 38:
                if (c.ctrlKey || c.metaKey) a.datepicker._adjustDate(c.target, -7, "D");
                l = c.ctrlKey || c.metaKey;
                break;
            case 39:
                if (c.ctrlKey || c.metaKey) a.datepicker._adjustDate(c.target, o ? -1 : +1, "D");
                l = c.ctrlKey || c.metaKey;
                if (c.originalEvent.altKey) a.datepicker._adjustDate(c.target, c.ctrlKey ? +a.datepicker._get(b, "stepBigMonths") : +a.datepicker._get(b, "stepMonths"), "M");
                break;
            case 40:
                if (c.ctrlKey || c.metaKey) a.datepicker._adjustDate(c.target, +7, "D");
                l = c.ctrlKey || c.metaKey;
                break;
            default:
                l = false
            } else if (c.keyCode == 36 && c.ctrlKey) a.datepicker._showDatepicker(this);
            else l = false;
            if (l) {
                c.preventDefault();
                c.stopPropagation()
            }
        },
        _doKeyPress: function (c) {
            var b = a.datepicker._getInst(c.target);
            if (a.datepicker._get(b, "constrainInput")) {
                b = a.datepicker._possibleChars(a.datepicker._get(b, "dateFormat"));
                var l = String.fromCharCode(c.charCode == e ? c.keyCode : c.charCode);
                return c.ctrlKey || c.metaKey || l < " " || !b || b.indexOf(l) > -1
            }
        },
        _doKeyUp: function (c) {
            c = a.datepicker._getInst(c.target);
            if (c.input.val() != c.lastVal) try {
                if (a.datepicker.parseDate(a.datepicker._get(c, "dateFormat"), c.input ? c.input.val() : null, a.datepicker._getFormatConfig(c))) {
                    a.datepicker._setDateFromField(c);
                    a.datepicker._updateAlternate(c);
                    a.datepicker._updateDatepicker(c)
                }
            } catch (b) {
                a.datepicker.log(b)
            }
            return true
        },
        _showDatepicker: function (c) {
            c = c.target || c;
            if (c.nodeName.toLowerCase() != "input") c = a("input", c.parentNode)[0];
            if (!(a.datepicker._isDisabledDatepicker(c) || a.datepicker._lastInput == c)) {
                var b = a.datepicker._getInst(c);
                a.datepicker._curInst && a.datepicker._curInst != b && a.datepicker._curInst.dpDiv.stop(true, true);
                var l = a.datepicker._get(b, "beforeShow");
                j(b.settings, l ? l.apply(c, [c, b]) : {});
                b.lastVal = null;
                a.datepicker._lastInput = c;
                a.datepicker._setDateFromField(b);
                if (a.datepicker._inDialog) c.value = "";
                if (!a.datepicker._pos) {
                    a.datepicker._pos = a.datepicker._findPos(c);
                    a.datepicker._pos[1] += c.offsetHeight
                }
                var o = false;
                a(c).parents().each(function () {
                    o |= a(this).css("position") == "fixed";
                    return !o
                });
                if (o && a.browser.opera) {
                    a.datepicker._pos[0] -=
                        document.documentElement.scrollLeft;
                    a.datepicker._pos[1] -= document.documentElement.scrollTop
                }
                l = {
                    left: a.datepicker._pos[0],
                    top: a.datepicker._pos[1]
                };
                a.datepicker._pos = null;
                b.dpDiv.empty();
                b.dpDiv.css({
                    position: "absolute",
                    display: "block",
                    top: "-1000px"
                });
                a.datepicker._updateDatepicker(b);
                l = a.datepicker._checkOffset(b, l, o);
                b.dpDiv.css({
                    position: a.datepicker._inDialog && a.blockUI ? "static" : o ? "fixed" : "absolute",
                    display: "none",
                    left: l.left + "px",
                    top: l.top + "px"
                });
                if (!b.inline) {
                    l = a.datepicker._get(b, "showAnim");
                    var n = a.datepicker._get(b, "duration"),
                        q = function () {
                            a.datepicker._datepickerShowing = true;
                            var u = b.dpDiv.find("iframe.ui-datepicker-cover");
                            if (u.length) {
                                var v = a.datepicker._getBorders(b.dpDiv);
                                u.css({
                                    left: -v[0],
                                    top: -v[1],
                                    width: b.dpDiv.outerWidth(),
                                    height: b.dpDiv.outerHeight()
                                })
                            }
                        };
                    b.dpDiv.zIndex(a(c).zIndex() + 1);
                    a.effects && a.effects[l] ? b.dpDiv.show(l, a.datepicker._get(b, "showOptions"), n, q) : b.dpDiv[l || "show"](l ? n : null, q);
                    if (!l || !n) q();
                    b.input.is(":visible") && !b.input.is(":disabled") && b.input.focus();
                    a.datepicker._curInst =
                        b
                }
            }
        },
        _updateDatepicker: function (c) {
            var b = this,
                l = a.datepicker._getBorders(c.dpDiv);
            c.dpDiv.empty().append(this._generateHTML(c));
            var o = c.dpDiv.find("iframe.ui-datepicker-cover");
            o.length && o.css({
                left: -l[0],
                top: -l[1],
                width: c.dpDiv.outerWidth(),
                height: c.dpDiv.outerHeight()
            });
            c.dpDiv.find("button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a").bind("mouseout", function () {
                a(this).removeClass("ui-state-hover");
                this.className.indexOf("ui-datepicker-prev") != -1 && a(this).removeClass("ui-datepicker-prev-hover");
                this.className.indexOf("ui-datepicker-next") != -1 && a(this).removeClass("ui-datepicker-next-hover")
            }).bind("mouseover", function () {
                if (!b._isDisabledDatepicker(c.inline ? c.dpDiv.parent()[0] : c.input[0])) {
                    a(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover");
                    a(this).addClass("ui-state-hover");
                    this.className.indexOf("ui-datepicker-prev") != -1 && a(this).addClass("ui-datepicker-prev-hover");
                    this.className.indexOf("ui-datepicker-next") != -1 && a(this).addClass("ui-datepicker-next-hover")
                }
            }).end().find("." +
                this._dayOverClass + " a").trigger("mouseover").end();
            l = this._getNumberOfMonths(c);
            o = l[1];
            o > 1 ? c.dpDiv.addClass("ui-datepicker-multi-" + o).css("width", 17 * o + "em") : c.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width("");
            c.dpDiv[(l[0] != 1 || l[1] != 1 ? "add" : "remove") + "Class"]("ui-datepicker-multi");
            c.dpDiv[(this._get(c, "isRTL") ? "add" : "remove") + "Class"]("ui-datepicker-rtl");
            c == a.datepicker._curInst && a.datepicker._datepickerShowing && c.input && c.input.is(":visible") && !c.input.is(":disabled") &&
                c.input[0] != document.activeElement && c.input.focus();
            if (c.yearshtml) {
                var n = c.yearshtml;
                setTimeout(function () {
                    n === c.yearshtml && c.dpDiv.find("select.ui-datepicker-year:first").replaceWith(c.yearshtml);
                    n = c.yearshtml = null
                }, 0)
            }
        },
        _getBorders: function (c) {
            var b = function (l) {
                return {
                    thin: 1,
                    medium: 2,
                    thick: 3
                }[l] || l
            };
            return [parseFloat(b(c.css("border-left-width"))), parseFloat(b(c.css("border-top-width")))]
        },
        _checkOffset: function (c, b, l) {
            var o = c.dpDiv.outerWidth(),
                n = c.dpDiv.outerHeight(),
                q = c.input ? c.input.outerWidth() :
                    0,
                u = c.input ? c.input.outerHeight() : 0,
                v = document.documentElement.clientWidth + a(document).scrollLeft(),
                x = document.documentElement.clientHeight + a(document).scrollTop();
            b.left -= this._get(c, "isRTL") ? o - q : 0;
            b.left -= l && b.left == c.input.offset().left ? a(document).scrollLeft() : 0;
            b.top -= l && b.top == c.input.offset().top + u ? a(document).scrollTop() : 0;
            b.left -= Math.min(b.left, b.left + o > v && v > o ? Math.abs(b.left + o - v) : 0);
            b.top -= Math.min(b.top, b.top + n > x && x > n ? Math.abs(n + u) : 0);
            return b
        },
        _findPos: function (c) {
            for (var b = this._get(this._getInst(c),
                "isRTL"); c && (c.type == "hidden" || c.nodeType != 1 || a.expr.filters.hidden(c));) c = c[b ? "previousSibling" : "nextSibling"];
            c = a(c).offset();
            return [c.left, c.top]
        },
        _hideDatepicker: function (c) {
            var b = this._curInst;
            if (!(!b || c && b != a.data(c, "datepicker")))
                if (this._datepickerShowing) {
                    c = this._get(b, "showAnim");
                    var l = this._get(b, "duration"),
                        o = function () {
                            a.datepicker._tidyDialog(b);
                            this._curInst = null
                        };
                    a.effects && a.effects[c] ? b.dpDiv.hide(c, a.datepicker._get(b, "showOptions"), l, o) : b.dpDiv[c == "slideDown" ? "slideUp" : c == "fadeIn" ?
                        "fadeOut" : "hide"](c ? l : null, o);
                    c || o();
                    if (c = this._get(b, "onClose")) c.apply(b.input ? b.input[0] : null, [b.input ? b.input.val() : "", b]);
                    this._datepickerShowing = false;
                    this._lastInput = null;
                    if (this._inDialog) {
                        this._dialogInput.css({
                            position: "absolute",
                            left: "0",
                            top: "-100px"
                        });
                        if (a.blockUI) {
                            a.unblockUI();
                            a("body").append(this.dpDiv)
                        }
                    }
                    this._inDialog = false
                }
        },
        _tidyDialog: function (c) {
            c.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")
        },
        _checkExternalClick: function (c) {
            if (a.datepicker._curInst) {
                c =
                    a(c.target);
                c[0].id != a.datepicker._mainDivId && c.parents("#" + a.datepicker._mainDivId).length == 0 && !c.hasClass(a.datepicker.markerClassName) && !c.hasClass(a.datepicker._triggerClass) && a.datepicker._datepickerShowing && !(a.datepicker._inDialog && a.blockUI) && a.datepicker._hideDatepicker()
            }
        },
        _adjustDate: function (c, b, l) {
            c = a(c);
            var o = this._getInst(c[0]);
            if (!this._isDisabledDatepicker(c[0])) {
                this._adjustInstDate(o, b + (l == "M" ? this._get(o, "showCurrentAtPos") : 0), l);
                this._updateDatepicker(o)
            }
        },
        _gotoToday: function (c) {
            c =
                a(c);
            var b = this._getInst(c[0]);
            if (this._get(b, "gotoCurrent") && b.currentDay) {
                b.selectedDay = b.currentDay;
                b.drawMonth = b.selectedMonth = b.currentMonth;
                b.drawYear = b.selectedYear = b.currentYear
            } else {
                var l = new Date;
                b.selectedDay = l.getDate();
                b.drawMonth = b.selectedMonth = l.getMonth();
                b.drawYear = b.selectedYear = l.getFullYear()
            }
            this._notifyChange(b);
            this._adjustDate(c)
        },
        _selectMonthYear: function (c, b, l) {
            c = a(c);
            var o = this._getInst(c[0]);
            o._selectingMonthYear = false;
            o["selected" + (l == "M" ? "Month" : "Year")] = o["draw" + (l ==
                "M" ? "Month" : "Year")] = parseInt(b.options[b.selectedIndex].value, 10);
            this._notifyChange(o);
            this._adjustDate(c)
        },
        _clickMonthYear: function (c) {
            var b = this._getInst(a(c)[0]);
            b.input && b._selectingMonthYear && setTimeout(function () {
                b.input.focus()
            }, 0);
            b._selectingMonthYear = !b._selectingMonthYear
        },
        _selectDay: function (c, b, l, o) {
            var n = a(c);
            if (!(a(o).hasClass(this._unselectableClass) || this._isDisabledDatepicker(n[0]))) {
                n = this._getInst(n[0]);
                n.selectedDay = n.currentDay = a("a", o).html();
                n.selectedMonth = n.currentMonth =
                    b;
                n.selectedYear = n.currentYear = l;
                this._selectDate(c, this._formatDate(n, n.currentDay, n.currentMonth, n.currentYear))
            }
        },
        _clearDate: function (c) {
            c = a(c);
            this._getInst(c[0]);
            this._selectDate(c, "")
        },
        _selectDate: function (c, b) {
            c = this._getInst(a(c)[0]);
            b = b != null ? b : this._formatDate(c);
            c.input && c.input.val(b);
            this._updateAlternate(c);
            var l = this._get(c, "onSelect");
            if (l) l.apply(c.input ? c.input[0] : null, [b, c]);
            else c.input && c.input.trigger("change"); if (c.inline) this._updateDatepicker(c);
            else {
                this._hideDatepicker();
                this._lastInput = c.input[0];
                typeof c.input[0] != "object" && c.input.focus();
                this._lastInput = null
            }
        },
        _updateAlternate: function (c) {
            var b = this._get(c, "altField");
            if (b) {
                var l = this._get(c, "altFormat") || this._get(c, "dateFormat"),
                    o = this._getDate(c),
                    n = this.formatDate(l, o, this._getFormatConfig(c));
                a(b).each(function () {
                    a(this).val(n)
                })
            }
        },
        noWeekends: function (c) {
            c = c.getDay();
            return [c > 0 && c < 6, ""]
        },
        iso8601Week: function (c) {
            c = new Date(c.getTime());
            c.setDate(c.getDate() + 4 - (c.getDay() || 7));
            var b = c.getTime();
            c.setMonth(0);
            c.setDate(1);
            return Math.floor(Math.round((b - c) / 864E5) / 7) + 1
        },
        parseDate: function (c, b, l) {
            if (c == null || b == null) throw "Invalid arguments";
            b = typeof b == "object" ? b.toString() : b + "";
            if (b == "") return null;
            var o = (l ? l.shortYearCutoff : null) || this._defaults.shortYearCutoff;
            o = typeof o != "string" ? o : (new Date).getFullYear() % 100 + parseInt(o, 10);
            for (var n = (l ? l.dayNamesShort : null) || this._defaults.dayNamesShort, q = (l ? l.dayNames : null) || this._defaults.dayNames, u = (l ? l.monthNamesShort : null) || this._defaults.monthNamesShort, v = (l ?
                    l.monthNames : null) || this._defaults.monthNames, x = l = -1, z = -1, B = -1, C = false, w = function (Y) {
                    (Y = R + 1 < c.length && c.charAt(R + 1) == Y) && R++;
                    return Y
                }, G = function (Y) {
                    var na = w(Y);
                    Y = RegExp("^\\d{1," + (Y == "@" ? 14 : Y == "!" ? 20 : Y == "y" && na ? 4 : Y == "o" ? 3 : 2) + "}");
                    Y = b.substring(M).match(Y);
                    if (!Y) throw "Missing number at position " + M;
                    M += Y[0].length;
                    return parseInt(Y[0], 10)
                }, J = function (Y, na, qa) {
                    Y = w(Y) ? qa : na;
                    for (na = 0; na < Y.length; na++)
                        if (b.substr(M, Y[na].length).toLowerCase() == Y[na].toLowerCase()) {
                            M += Y[na].length;
                            return na + 1
                        }
                    throw "Unknown name at position " +
                        M;
                }, E = function () {
                    if (b.charAt(M) != c.charAt(R)) throw "Unexpected literal at position " + M;
                    M++
                }, M = 0, R = 0; R < c.length; R++)
                if (C)
                    if (c.charAt(R) == "'" && !w("'")) C = false;
                    else E();
                    else switch (c.charAt(R)) {
                    case "d":
                        z = G("d");
                        break;
                    case "D":
                        J("D", n, q);
                        break;
                    case "o":
                        B = G("o");
                        break;
                    case "m":
                        x = G("m");
                        break;
                    case "M":
                        x = J("M", u, v);
                        break;
                    case "y":
                        l = G("y");
                        break;
                    case "@":
                        var O = new Date(G("@"));
                        l = O.getFullYear();
                        x = O.getMonth() + 1;
                        z = O.getDate();
                        break;
                    case "!":
                        O = new Date((G("!") - this._ticksTo1970) / 1E4);
                        l = O.getFullYear();
                        x = O.getMonth() +
                            1;
                        z = O.getDate();
                        break;
                    case "'":
                        if (w("'")) E();
                        else C = true;
                        break;
                    default:
                        E()
                    }
                    if (l == -1) l = (new Date).getFullYear();
                    else if (l < 100) l += (new Date).getFullYear() - (new Date).getFullYear() % 100 + (l <= o ? 0 : -100);
            if (B > -1) {
                x = 1;
                z = B;
                do {
                    o = this._getDaysInMonth(l, x - 1);
                    if (z <= o) break;
                    x++;
                    z -= o
                } while (1)
            }
            O = this._daylightSavingAdjust(new Date(l, x - 1, z));
            if (O.getFullYear() != l || O.getMonth() + 1 != x || O.getDate() != z) throw "Invalid date";
            return O
        },
        ATOM: "yy-mm-dd",
        COOKIE: "D, dd M yy",
        ISO_8601: "yy-mm-dd",
        RFC_822: "D, d M y",
        RFC_850: "DD, dd-M-y",
        RFC_1036: "D, d M y",
        RFC_1123: "D, d M yy",
        RFC_2822: "D, d M yy",
        RSS: "D, d M y",
        TICKS: "!",
        TIMESTAMP: "@",
        W3C: "yy-mm-dd",
        _ticksTo1970: (718685 + Math.floor(492.5) - Math.floor(19.7) + Math.floor(4.925)) * 24 * 60 * 60 * 1E7,
        formatDate: function (c, b, l) {
            if (!b) return "";
            var o = (l ? l.dayNamesShort : null) || this._defaults.dayNamesShort,
                n = (l ? l.dayNames : null) || this._defaults.dayNames,
                q = (l ? l.monthNamesShort : null) || this._defaults.monthNamesShort;
            l = (l ? l.monthNames : null) || this._defaults.monthNames;
            var u = function (w) {
                (w = C + 1 < c.length &&
                    c.charAt(C + 1) == w) && C++;
                return w
            }, v = function (w, G, J) {
                    G = "" + G;
                    if (u(w))
                        for (; G.length < J;) G = "0" + G;
                    return G
                }, x = function (w, G, J, E) {
                    return u(w) ? E[G] : J[G]
                }, z = "",
                B = false;
            if (b)
                for (var C = 0; C < c.length; C++)
                    if (B)
                        if (c.charAt(C) == "'" && !u("'")) B = false;
                        else z += c.charAt(C);
                        else switch (c.charAt(C)) {
                        case "d":
                            z += v("d", b.getDate(), 2);
                            break;
                        case "D":
                            z += x("D", b.getDay(), o, n);
                            break;
                        case "o":
                            z += v("o", (b.getTime() - (new Date(b.getFullYear(), 0, 0)).getTime()) / 864E5, 3);
                            break;
                        case "m":
                            z += v("m", b.getMonth() + 1, 2);
                            break;
                        case "M":
                            z += x("M",
                                b.getMonth(), q, l);
                            break;
                        case "y":
                            z += u("y") ? b.getFullYear() : (b.getYear() % 100 < 10 ? "0" : "") + b.getYear() % 100;
                            break;
                        case "@":
                            z += b.getTime();
                            break;
                        case "!":
                            z += b.getTime() * 1E4 + this._ticksTo1970;
                            break;
                        case "'":
                            if (u("'")) z += "'";
                            else B = true;
                            break;
                        default:
                            z += c.charAt(C)
                        }
                        return z
        },
        _possibleChars: function (c) {
            for (var b = "", l = false, o = function (q) {
                    (q = n + 1 < c.length && c.charAt(n + 1) == q) && n++;
                    return q
                }, n = 0; n < c.length; n++)
                if (l)
                    if (c.charAt(n) == "'" && !o("'")) l = false;
                    else b += c.charAt(n);
                    else switch (c.charAt(n)) {
                    case "d":
                    case "m":
                    case "y":
                    case "@":
                        b +=
                            "0123456789";
                        break;
                    case "D":
                    case "M":
                        return null;
                    case "'":
                        if (o("'")) b += "'";
                        else l = true;
                        break;
                    default:
                        b += c.charAt(n)
                    }
                    return b
        },
        _get: function (c, b) {
            return c.settings[b] !== e ? c.settings[b] : this._defaults[b]
        },
        _setDateFromField: function (c, b) {
            if (c.input.val() != c.lastVal) {
                var l = this._get(c, "dateFormat"),
                    o = c.lastVal = c.input ? c.input.val() : null,
                    n, q;
                n = q = this._getDefaultDate(c);
                var u = this._getFormatConfig(c);
                try {
                    n = this.parseDate(l, o, u) || q
                } catch (v) {
                    this.log(v);
                    o = b ? "" : o
                }
                c.selectedDay = n.getDate();
                c.drawMonth = c.selectedMonth =
                    n.getMonth();
                c.drawYear = c.selectedYear = n.getFullYear();
                c.currentDay = o ? n.getDate() : 0;
                c.currentMonth = o ? n.getMonth() : 0;
                c.currentYear = o ? n.getFullYear() : 0;
                this._adjustInstDate(c)
            }
        },
        _getDefaultDate: function (c) {
            return this._restrictMinMax(c, this._determineDate(c, this._get(c, "defaultDate"), new Date))
        },
        _determineDate: function (c, b, l) {
            var o = function (q) {
                var u = new Date;
                u.setDate(u.getDate() + q);
                return u
            }, n = function (q) {
                    try {
                        return a.datepicker.parseDate(a.datepicker._get(c, "dateFormat"), q, a.datepicker._getFormatConfig(c))
                    } catch (u) {}
                    var v =
                        (q.toLowerCase().match(/^c/) ? a.datepicker._getDate(c) : null) || new Date,
                        x = v.getFullYear(),
                        z = v.getMonth();
                    v = v.getDate();
                    for (var B = /([+-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g, C = B.exec(q); C;) {
                        switch (C[2] || "d") {
                        case "d":
                        case "D":
                            v += parseInt(C[1], 10);
                            break;
                        case "w":
                        case "W":
                            v += parseInt(C[1], 10) * 7;
                            break;
                        case "m":
                        case "M":
                            z += parseInt(C[1], 10);
                            v = Math.min(v, a.datepicker._getDaysInMonth(x, z));
                            break;
                        case "y":
                        case "Y":
                            x += parseInt(C[1], 10);
                            v = Math.min(v, a.datepicker._getDaysInMonth(x, z))
                        }
                        C = B.exec(q)
                    }
                    return new Date(x,
                        z, v)
                };
            if (b = (b = b == null || b === "" ? l : typeof b == "string" ? n(b) : typeof b == "number" ? isNaN(b) ? l : o(b) : new Date(b.getTime())) && b.toString() == "Invalid Date" ? l : b) {
                b.setHours(0);
                b.setMinutes(0);
                b.setSeconds(0);
                b.setMilliseconds(0)
            }
            return this._daylightSavingAdjust(b)
        },
        _daylightSavingAdjust: function (c) {
            if (!c) return null;
            c.setHours(c.getHours() > 12 ? c.getHours() + 2 : 0);
            return c
        },
        _setDate: function (c, b, l) {
            var o = !b,
                n = c.selectedMonth,
                q = c.selectedYear;
            b = this._restrictMinMax(c, this._determineDate(c, b, new Date));
            c.selectedDay =
                c.currentDay = b.getDate();
            c.drawMonth = c.selectedMonth = c.currentMonth = b.getMonth();
            c.drawYear = c.selectedYear = c.currentYear = b.getFullYear();
            if ((n != c.selectedMonth || q != c.selectedYear) && !l) this._notifyChange(c);
            this._adjustInstDate(c);
            if (c.input) c.input.val(o ? "" : this._formatDate(c))
        },
        _getDate: function (c) {
            return !c.currentYear || c.input && c.input.val() == "" ? null : this._daylightSavingAdjust(new Date(c.currentYear, c.currentMonth, c.currentDay))
        },
        _generateHTML: function (c) {
            var b = new Date;
            b = this._daylightSavingAdjust(new Date(b.getFullYear(),
                b.getMonth(), b.getDate()));
            var l = this._get(c, "isRTL"),
                o = this._get(c, "showButtonPanel"),
                n = this._get(c, "hideIfNoPrevNext"),
                q = this._get(c, "navigationAsDateFormat"),
                u = this._getNumberOfMonths(c),
                v = this._get(c, "showCurrentAtPos"),
                x = this._get(c, "stepMonths"),
                z = u[0] != 1 || u[1] != 1,
                B = this._daylightSavingAdjust(!c.currentDay ? new Date(9999, 9, 9) : new Date(c.currentYear, c.currentMonth, c.currentDay)),
                C = this._getMinMaxDate(c, "min"),
                w = this._getMinMaxDate(c, "max");
            v = c.drawMonth - v;
            var G = c.drawYear;
            if (v < 0) {
                v += 12;
                G--
            }
            if (w) {
                var J =
                    this._daylightSavingAdjust(new Date(w.getFullYear(), w.getMonth() - u[0] * u[1] + 1, w.getDate()));
                for (J = C && J < C ? C : J; this._daylightSavingAdjust(new Date(G, v, 1)) > J;) {
                    v--;
                    if (v < 0) {
                        v = 11;
                        G--
                    }
                }
            }
            c.drawMonth = v;
            c.drawYear = G;
            J = this._get(c, "prevText");
            J = !q ? J : this.formatDate(J, this._daylightSavingAdjust(new Date(G, v - x, 1)), this._getFormatConfig(c));
            J = this._canAdjustMonth(c, -1, G, v) ? '<a class="ui-datepicker-prev ui-corner-all" onclick="DP_jQuery_' + g + ".datepicker._adjustDate('#" + c.id + "', -" + x + ", 'M');\" title=\"" + J + '"><span class="ui-icon ui-icon-circle-triangle-' +
                (l ? "e" : "w") + '">' + J + "</span></a>" : n ? "" : '<a class="ui-datepicker-prev ui-corner-all ui-state-disabled" title="' + J + '"><span class="ui-icon ui-icon-circle-triangle-' + (l ? "e" : "w") + '">' + J + "</span></a>";
            var E = this._get(c, "nextText");
            E = !q ? E : this.formatDate(E, this._daylightSavingAdjust(new Date(G, v + x, 1)), this._getFormatConfig(c));
            n = this._canAdjustMonth(c, +1, G, v) ? '<a class="ui-datepicker-next ui-corner-all" onclick="DP_jQuery_' + g + ".datepicker._adjustDate('#" + c.id + "', +" + x + ", 'M');\" title=\"" + E + '"><span class="ui-icon ui-icon-circle-triangle-' +
                (l ? "w" : "e") + '">' + E + "</span></a>" : n ? "" : '<a class="ui-datepicker-next ui-corner-all ui-state-disabled" title="' + E + '"><span class="ui-icon ui-icon-circle-triangle-' + (l ? "w" : "e") + '">' + E + "</span></a>";
            x = this._get(c, "currentText");
            E = this._get(c, "gotoCurrent") && c.currentDay ? B : b;
            x = !q ? x : this.formatDate(x, E, this._getFormatConfig(c));
            q = !c.inline ? '<button type="button" class="ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all" onclick="DP_jQuery_' + g + '.datepicker._hideDatepicker();">' + this._get(c,
                "closeText") + "</button>" : "";
            o = o ? '<div class="ui-datepicker-buttonpane ui-widget-content">' + (l ? q : "") + (this._isInRange(c, E) ? '<button type="button" class="ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all" onclick="DP_jQuery_' + g + ".datepicker._gotoToday('#" + c.id + "');\">" + x + "</button>" : "") + (l ? "" : q) + "</div>" : "";
            q = parseInt(this._get(c, "firstDay"), 10);
            q = isNaN(q) ? 0 : q;
            x = this._get(c, "showWeek");
            E = this._get(c, "dayNames");
            this._get(c, "dayNamesShort");
            var M = this._get(c, "dayNamesMin"),
                R =
                    this._get(c, "monthNames"),
                O = this._get(c, "monthNamesShort"),
                Y = this._get(c, "beforeShowDay"),
                na = this._get(c, "showOtherMonths"),
                qa = this._get(c, "selectOtherMonths");
            this._get(c, "calculateWeek");
            for (var Na = this._getDefaultDate(c), pa = "", La = 0; La < u[0]; La++) {
                for (var $a = "", fb = 0; fb < u[1]; fb++) {
                    var jb = this._daylightSavingAdjust(new Date(G, v, c.selectedDay)),
                        Fa = " ui-corner-all",
                        db = "";
                    if (z) {
                        db += '<div class="ui-datepicker-group';
                        if (u[1] > 1) switch (fb) {
                        case 0:
                            db += " ui-datepicker-group-first";
                            Fa = " ui-corner-" + (l ? "right" :
                                "left");
                            break;
                        case u[1] - 1:
                            db += " ui-datepicker-group-last";
                            Fa = " ui-corner-" + (l ? "left" : "right");
                            break;
                        default:
                            db += " ui-datepicker-group-middle";
                            Fa = ""
                        }
                        db += '">'
                    }
                    db += '<div class="ui-datepicker-header ui-widget-header ui-helper-clearfix' + Fa + '">' + (/all|left/.test(Fa) && La == 0 ? l ? n : J : "") + (/all|right/.test(Fa) && La == 0 ? l ? J : n : "") + this._generateMonthYearHeader(c, v, G, C, w, La > 0 || fb > 0, R, O) + '</div><table class="ui-datepicker-calendar"><thead><tr>';
                    var eb = x ? '<th class="ui-datepicker-week-col">' + this._get(c, "weekHeader") +
                        "</th>" : "";
                    for (Fa = 0; Fa < 7; Fa++) {
                        var ab = (Fa + q) % 7;
                        eb += "<th" + ((Fa + q + 6) % 7 >= 5 ? ' class="ui-datepicker-week-end"' : "") + '><span title="' + E[ab] + '">' + M[ab] + "</span></th>"
                    }
                    db += eb + "</tr></thead><tbody>";
                    eb = this._getDaysInMonth(G, v);
                    if (G == c.selectedYear && v == c.selectedMonth) c.selectedDay = Math.min(c.selectedDay, eb);
                    Fa = (this._getFirstDayOfMonth(G, v) - q + 7) % 7;
                    eb = z ? 6 : Math.ceil((Fa + eb) / 7);
                    ab = this._daylightSavingAdjust(new Date(G, v, 1 - Fa));
                    for (var rb = 0; rb < eb; rb++) {
                        db += "<tr>";
                        var xb = !x ? "" : '<td class="ui-datepicker-week-col">' +
                            this._get(c, "calculateWeek")(ab) + "</td>";
                        for (Fa = 0; Fa < 7; Fa++) {
                            var Pa = Y ? Y.apply(c.input ? c.input[0] : null, [ab]) : [true, ""],
                                P = ab.getMonth() != v,
                                T = P && !qa || !Pa[0] || C && ab < C || w && ab > w;
                            xb += '<td class="' + ((Fa + q + 6) % 7 >= 5 ? " ui-datepicker-week-end" : "") + (P ? " ui-datepicker-other-month" : "") + (ab.getTime() == jb.getTime() && v == c.selectedMonth && c._keyEvent || Na.getTime() == ab.getTime() && Na.getTime() == jb.getTime() ? " " + this._dayOverClass : "") + (T ? " " + this._unselectableClass + " ui-state-disabled" : "") + (P && !na ? "" : " " + Pa[1] + (ab.getTime() ==
                                B.getTime() ? " " + this._currentClass : "") + (ab.getTime() == b.getTime() ? " ui-datepicker-today" : "")) + '"' + ((!P || na) && Pa[2] ? ' title="' + Pa[2] + '"' : "") + (T ? "" : ' onclick="DP_jQuery_' + g + ".datepicker._selectDay('#" + c.id + "'," + ab.getMonth() + "," + ab.getFullYear() + ', this);return false;"') + ">" + (P && !na ? "&#xa0;" : T ? '<span class="ui-state-default">' + ab.getDate() + "</span>" : '<a class="ui-state-default' + (ab.getTime() == b.getTime() ? " ui-state-highlight" : "") + (ab.getTime() == B.getTime() ? " ui-state-active" : "") + (P ? " ui-priority-secondary" :
                                "") + '" href="#">' + ab.getDate() + "</a>") + "</td>";
                            ab.setDate(ab.getDate() + 1);
                            ab = this._daylightSavingAdjust(ab)
                        }
                        db += xb + "</tr>"
                    }
                    v++;
                    if (v > 11) {
                        v = 0;
                        G++
                    }
                    db += "</tbody></table>" + (z ? "</div>" + (u[0] > 0 && fb == u[1] - 1 ? '<div class="ui-datepicker-row-break"></div>' : "") : "");
                    $a += db
                }
                pa += $a
            }
            pa += o + (a.browser.msie && parseInt(a.browser.version, 10) < 7 && !c.inline ? '<iframe src="javascript:false;" class="ui-datepicker-cover" frameborder="0"></iframe>' : "");
            c._keyEvent = false;
            return pa
        },
        _generateMonthYearHeader: function (c, b, l, o, n, q,
            u, v) {
            var x = this._get(c, "changeMonth"),
                z = this._get(c, "changeYear"),
                B = this._get(c, "showMonthAfterYear"),
                C = '<div class="ui-datepicker-title">',
                w = "";
            if (q || !x) w += '<span class="ui-datepicker-month">' + u[b] + "</span>";
            else {
                u = o && o.getFullYear() == l;
                var G = n && n.getFullYear() == l;
                w += '<select class="ui-datepicker-month" onchange="DP_jQuery_' + g + ".datepicker._selectMonthYear('#" + c.id + "', this, 'M');\" onclick=\"DP_jQuery_" + g + ".datepicker._clickMonthYear('#" + c.id + "');\">";
                for (var J = 0; J < 12; J++)
                    if ((!u || J >= o.getMonth()) &&
                        (!G || J <= n.getMonth())) w += '<option value="' + J + '"' + (J == b ? ' selected="selected"' : "") + ">" + v[J] + "</option>";
                w += "</select>"
            }
            B || (C += w + (q || !(x && z) ? "&#xa0;" : ""));
            c.yearshtml = "";
            if (q || !z) C += '<span class="ui-datepicker-year">' + l + "</span>";
            else {
                v = this._get(c, "yearRange").split(":");
                var E = (new Date).getFullYear();
                u = function (M) {
                    M = M.match(/c[+-].*/) ? l + parseInt(M.substring(1), 10) : M.match(/[+-].*/) ? E + parseInt(M, 10) : parseInt(M, 10);
                    return isNaN(M) ? E : M
                };
                b = u(v[0]);
                v = Math.max(b, u(v[1] || ""));
                b = o ? Math.max(b, o.getFullYear()) :
                    b;
                v = n ? Math.min(v, n.getFullYear()) : v;
                for (c.yearshtml += '<select class="ui-datepicker-year" onchange="DP_jQuery_' + g + ".datepicker._selectMonthYear('#" + c.id + "', this, 'Y');\" onclick=\"DP_jQuery_" + g + ".datepicker._clickMonthYear('#" + c.id + "');\">"; b <= v; b++) c.yearshtml += '<option value="' + b + '"' + (b == l ? ' selected="selected"' : "") + ">" + b + "</option>";
                c.yearshtml += "</select>";
                if (a.browser.mozilla) C += '<select class="ui-datepicker-year"><option value="' + l + '" selected="selected">' + l + "</option></select>";
                else {
                    C += c.yearshtml;
                    c.yearshtml = null
                }
            }
            C += this._get(c, "yearSuffix");
            if (B) C += (q || !(x && z) ? "&#xa0;" : "") + w;
            C += "</div>";
            return C
        },
        _adjustInstDate: function (c, b, l) {
            var o = c.drawYear + (l == "Y" ? b : 0),
                n = c.drawMonth + (l == "M" ? b : 0);
            b = Math.min(c.selectedDay, this._getDaysInMonth(o, n)) + (l == "D" ? b : 0);
            o = this._restrictMinMax(c, this._daylightSavingAdjust(new Date(o, n, b)));
            c.selectedDay = o.getDate();
            c.drawMonth = c.selectedMonth = o.getMonth();
            c.drawYear = c.selectedYear = o.getFullYear();
            if (l == "M" || l == "Y") this._notifyChange(c)
        },
        _restrictMinMax: function (c,
            b) {
            var l = this._getMinMaxDate(c, "min");
            c = this._getMinMaxDate(c, "max");
            b = l && b < l ? l : b;
            return c && b > c ? c : b
        },
        _notifyChange: function (c) {
            var b = this._get(c, "onChangeMonthYear");
            if (b) b.apply(c.input ? c.input[0] : null, [c.selectedYear, c.selectedMonth + 1, c])
        },
        _getNumberOfMonths: function (c) {
            c = this._get(c, "numberOfMonths");
            return c == null ? [1, 1] : typeof c == "number" ? parseInt(a.browser.version, 10) < 7 && !c.inline ? '<iframe src="javascript:false;" class="ui-datepicker-cover" frameborder="0"></iframe>' : "");
            c._keyEvent = false;
            return pa
        },
        _generateMonthYearHeader: function (c, b, l, o, n, q,
            u, v) {
            var x = this._get(c, "changeMonth"),
                z = this._get(c, "changeYear"),
                B = this._get(c, "showMonthAfterYear"),
                C = '<div class="ui-datepicker-title">',
                w = "";
            if (q || !x) w += '<span class="ui-datepicker-month">' + u[b] + "</span>";
            else {
                u = o && o.getFullYear() == l;
                var G = n && n.getFullYear() == l;
                w += '<select class="ui-datepicker-month" onchange="DP_jQuery_' + g + ".datepicker._selectMonthYear('#" + c.id + "', this, 'M');\" onclick=\"DP_jQuery_" + g + ".datepicker._clickMonthYear('#" + c.id + "');\">";
                for (var J = 0; J < 12; J++)
                    if ((!u || J >= o.getMonth()) &&
                        (!G || J <= n.getMonth())) w += '<option value="' + J + '"' + (J == b ? ' selected="selected"' : "") + ">" + v[J] + "</option>";
                w += "</select>"
            }
            B || (C += w + (q || !(x && z) ? "&#xa0;" : ""));
            c.yearshtml = "";
            if (q || !z) C += '<span class="ui-datepicker-year">' + l + "</span>";
            else {
                v = this._get(c, "yearRange").split(":");
                var E = (new Date).getFullYear();
                u = function (M) {
                    M = M.match(/c[+-].*/) ? l + parseInt(M.substring(1), 10) : M.match(/[+-].*/) ? E + parseInt(M, 10) : parseInt(M, 10);
                    return isNaN(M) ? E : M
                };
                b = u(v[0]);
                v = Math.max(b, u(v[1] || ""));
                b = o ? Math.max(b, o.getFullYear()) :
                    b;
                v = n ? Math.min(v, n.getFullYear()) : v;
                for (c.yearshtml += '<select class="ui-datepicker-year" onchange="DP_jQuery_' + g + ".datepicker._selectMonthYear('#" + c.id + "', this, 'Y');\" onclick=\"DP_jQuery_" + g + ".datepicker._clickMonthYear('#" + c.id + "');\">"; b <= v; b++) c.yearshtml += '<option value="' + b + '"' + (b == l ? ' selected="selected"' : "") + ">" + b + "</option>";
                c.yearshtml += "</select>";
                if (a.browser.mozilla) C += '<select class="ui-datepicker-year"><option value="' + l + '" selected="selected">' + l + "</option></select>";
                else {
                    C += c.yearshtml;
                    c.yearshtml = null
                }
            }
            C += this._get(c, "yearSuffix");
            if (B) C += (q || !(x && z) ? "&#xa0;" : "") + w;
            C += "</div>";
            return C
        },
        _adjustInstDate: function (c, b, l) {
            var o = c.drawYear + (l == "Y" ? b : 0),
                n = c.drawMonth + (l == "M" ? b : 0);
            b = Math.min(c.selectedDay, this._getDaysInMonth(o, n)) + (l == "D" ? b : 0);
            o = this._restrictMinMax(c, this._daylightSavingAdjust(new Date(o, n, b)));
            c.selectedDay = o.getDate();
            c.drawMonth = c.selectedMonth = o.getMonth();
            c.drawYear = c.selectedYear = o.getFullYear();
            if (l == "M" || l == "Y") this._notifyChange(c)
        },
        _restrictMinMax: function (c,
            b) {
            var l = this._getMinMaxDate(c, "min");
            c = this._getMinMaxDate(c, "max");
            b = l && b < l ? l : b;
            return c && b > c ? c : b
        },
        _notifyChange: function (c) {
            var b = this._get(c, "onChangeMonthYear");
            if (b) b.apply(c.input ? c.input[0] : null, [c.selectedYear, c.selectedMonth + 1, c])
        },
        _getNumberOfMonths: function (c) {
            c = this._get(c, "numberOfMonths");
            return c == null ? [1, 1] : typeof c == "number" ? [1, c] : c
        },
        _getMinMaxDate: function (c, b) {
            return this._determineDate(c, this._get(c, b + "Date"), null)
        },
        _getDaysInMonth: function (c, b) {
            return 32 - this._daylightSavingAdjust(new Date(c,
                b, 32)).getDate()
        },
        _getFirstDayOfMonth: function (c, b) {
            return (new Date(c, b, 1)).getDay()
        },
        _canAdjustMonth: function (c, b, l, o) {
            var n = this._getNumberOfMonths(c);
            l = this._daylightSavingAdjust(new Date(l, o + (b < 0 ? b : n[0] * n[1]), 1));
            b < 0 && l.setDate(this._getDaysInMonth(l.getFullYear(), l.getMonth()));
            return this._isInRange(c, l)
        },
        _isInRange: function (c, b) {
            var l = this._getMinMaxDate(c, "min");
            c = this._getMinMaxDate(c, "max");
            return (!l || b.getTime() >= l.getTime()) && (!c || b.getTime() <= c.getTime())
        },
        _getFormatConfig: function (c) {
            var b =
                this._get(c, "shortYearCutoff");
            b = typeof b != "string" ? b : (new Date).getFullYear() % 100 + parseInt(b, 10);
            return {
                shortYearCutoff: b,
                dayNamesShort: this._get(c, "dayNamesShort"),
                dayNames: this._get(c, "dayNames"),
                monthNamesShort: this._get(c, "monthNamesShort"),
                monthNames: this._get(c, "monthNames")
            }
        },
        _formatDate: function (c, b, l, o) {
            if (!b) {
                c.currentDay = c.selectedDay;
                c.currentMonth = c.selectedMonth;
                c.currentYear = c.selectedYear
            }
            b = b ? typeof b == "object" ? b : this._daylightSavingAdjust(new Date(o, l, b)) : this._daylightSavingAdjust(new Date(c.currentYear,
                c.currentMonth, c.currentDay));
            return this.formatDate(this._get(c, "dateFormat"), b, this._getFormatConfig(c))
        }
    });
    a.fn.datepicker = function (c) {
        if (!this.length) return this;
        if (!a.datepicker.initialized) {
            a(document).mousedown(a.datepicker._checkExternalClick).find("body").append(a.datepicker.dpDiv);
            a.datepicker.initialized = true
        }
        var b = Array.prototype.slice.call(arguments, 1);
        if (typeof c == "string" && (c == "isDisabled" || c == "getDate" || c == "widget")) return a.datepicker["_" + c + "Datepicker"].apply(a.datepicker, [this[0]].concat(b));
        if (c == "option" && arguments.length == 2 && typeof arguments[1] == "string") return a.datepicker["_" + c + "Datepicker"].apply(a.datepicker, [this[0]].concat(b));
        return this.each(function () {
            typeof c == "string" ? a.datepicker["_" + c + "Datepicker"].apply(a.datepicker, [this].concat(b)) : a.datepicker._attachDatepicker(this, c)
        })
    };
    a.datepicker = new f;
    a.datepicker.initialized = false;
    a.datepicker.uuid = (new Date).getTime();
    a.datepicker.version = "1.8.11";
    window["DP_jQuery_" + g] = a
})(jQuery);
(function (a, e) {
    a.widget("ui.progressbar", {
        options: {
            value: 0,
            max: 100
        },
        min: 0,
        _create: function () {
            this.element.addClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").attr({
                role: "progressbar",
                "aria-valuemin": this.min,
                "aria-valuemax": this.options.max,
                "aria-valuenow": this._value()
            });
            this.valueDiv = a("<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>").appendTo(this.element);
            this.oldValue = this._value();
            this._refreshValue()
        },
        destroy: function () {
            this.element.removeClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow");
            this.valueDiv.remove();
            a.Widget.prototype.destroy.apply(this, arguments)
        },
        value: function (f) {
            if (f === e) return this._value();
            this._setOption("value", f);
            return this
        },
        _setOption: function (f, j) {
            if (f === "value") {
                this.options.value = j;
                this._refreshValue();
                this._value() === this.options.max && this._trigger("complete")
            }
            a.Widget.prototype._setOption.apply(this, arguments)
        },
        _value: function () {
            var f = this.options.value;
            if (typeof f !== "number") f = 0;
            return Math.min(this.options.max, Math.max(this.min, f))
        },
        _percentage: function () {
            return 100 *
                this._value() / this.options.max
        },
        _refreshValue: function () {
            var f = this.value(),
                j = this._percentage();
            if (this.oldValue !== f) {
                this.oldValue = f;
                this._trigger("change")
            }
            this.valueDiv.toggleClass("ui-corner-right", f === this.options.max).width(j.toFixed(0) + "%");
            this.element.attr("aria-valuenow", f)
        }
    });
    a.extend(a.ui.progressbar, {
        version: "1.8.11"
    })
})(jQuery);
jQuery.effects || function (a, e) {
    function f(u) {
        var v;
        if (u && u.constructor == Array && u.length == 3) return u;
        if (v = /rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec(u)) return [parseInt(v[1], 10), parseInt(v[2], 10), parseInt(v[3], 10)];
        if (v = /rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/.exec(u)) return [parseFloat(v[1]) * 2.55, parseFloat(v[2]) * 2.55, parseFloat(v[3]) * 2.55];
        if (v = /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(u)) return [parseInt(v[1],
            16), parseInt(v[2], 16), parseInt(v[3], 16)];
        if (v = /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(u)) return [parseInt(v[1] + v[1], 16), parseInt(v[2] + v[2], 16), parseInt(v[3] + v[3], 16)];
        if (/rgba\(0, 0, 0, 0\)/.exec(u)) return o.transparent;
        return o[a.trim(u).toLowerCase()]
    }

    function j() {
        var u = document.defaultView ? document.defaultView.getComputedStyle(this, null) : this.currentStyle,
            v = {}, x, z;
        if (u && u.length && u[0] && u[u[0]])
            for (var B = u.length; B--;) {
                x = u[B];
                if (typeof u[x] == "string") {
                    z = x.replace(/\-(\w)/g, function (C, w) {
                        return w.toUpperCase()
                    });
                    v[z] = u[x]
                }
            } else
                for (x in u)
                    if (typeof u[x] === "string") v[x] = u[x];
        return v
    }

    function g(u) {
        var v, x;
        for (v in u) {
            x = u[v];
            if (x == null || a.isFunction(x) || v in q || /scrollbar/.test(v) || !/color/i.test(v) && isNaN(parseFloat(x))) delete u[v]
        }
        return u
    }

    function c(u, v) {
        var x = {
            _: 0
        }, z;
        for (z in v)
            if (u[z] != v[z]) x[z] = v[z];
        return x
    }

    function b(u, v, x, z) {
        if (typeof u == "object") {
            z = v;
            x = null;
            v = u;
            u = v.effect
        }
        if (a.isFunction(v)) {
            z = v;
            x = null;
            v = {}
        }
        if (typeof v == "number" || a.fx.speeds[v]) {
            z = x;
            x = v;
            v = {}
        }
        if (a.isFunction(x)) {
            z = x;
            x = null
        }
        v = v || {};
        x = x || v.duration;
        x = a.fx.off ? 0 : typeof x == "number" ? x : x in a.fx.speeds ? a.fx.speed              } else B.attr("style", C);
                z && z.apply(this, arguments)
            });
            w = a.queue(this);
            G = w.splice(w.length - 1, 1)[0];
            w.splice(1, 0, G);
            a.dequeue(this)
        })
    };
    a.fn.extend({
        _addClass: a.fn.addClass,
        addClass: function (u, v, x, z) {
            return v ? a.effects.animateClass.apply(this, [{
                    add: u
                },
                v, x, z
            ]) : this._addClass(u)
        },
        _removeClass: a.fn.removeClass,
        removeClass: function (u, v, x, z) {
            return v ? a.effects.animateClass.apply(this, [{
                    remove: u
                },
                v, x, z
            ]) : this._removeClass(u)
        },
        _toggleClass: a.fn.toggleClass,
        toggleClass: function (u, v, x, z, B) {
            return typeof v == "boolean" || v === e ? x ? a.effects.animateClass.apply(this, [v ? {
                    add: u
                } : {
                    remove: u
                },
                x, z, B
            ]) : this._toggleClass(u,
                v) : a.effects.animateClass.apply(this, [{
                    toggle: u
                },
                v, x, z
            ])
        },
        switchClass: function (u, v, x, z, B) {
            return a.effects.animateClass.apply(this, [{
                    add: v,
                    remove: u
                },
                x, z, B
            ])
        }
    });
    a.extend(a.effects, {
        version: "1.8.11",
        save: function (u, v) {
            for (var x = 0; x < v.length; x++) v[x] !== null && u.data("ec.storage." + v[x], u[0].style[v[x]])
        },
        restore: function (u, v) {
            for (var x = 0; x < v.length; x++) v[x] !== null && u.css(v[x], u.data("ec.storage." + v[x]))
        },
        setMode: function (u, v) {
            if (v == "toggle") v = u.is(":hidden") ? "show" : "hide";
            return v
        },
        getBaseline: function (u,
            v) {
            var x;
            switch (u[0]) {
            case "top":
                x = 0;
                break;
            case "middle":
                x = 0.5;
                break;
            case "bottom":
                x = 1;
                break;
            default:
                x = u[0] / v.height
            }
            switch (u[1]) {
            case "left":
                u = 0;
                break;
            case "center":
                u = 0.5;
                break;
            case "right":
                u = 1;
                break;
            default:
                u = u[1] / v.width
            }
            return {
                x: u,
                y: x
            }
        },
        createWrapper: function (u) {
            if (u.parent().is(".ui-effects-wrapper")) return u.parent();
            var v = {
                width: u.outerWidth(true),
                height: u.outerHeight(true),
                "float": u.css("float")
            }, x = a("<div></div>").addClass("ui-effects-wrapper").css({
                    fontSize: "100%",
                    background: "transparent",
                    border: "none",
                    margin: 0,
                    padding: 0
                });
            u.wrap(x);
            x = u.parent();
            if (u.css("position") == "static") {
                x.css({
                    position: "relative"
                });
                u.css({
                    position: "relative"
                })
            } else {
                a.extend(v, {
                    position: u.css("position"),
                    zIndex: u.css("z-index")
                });
                a.each(["top", "left", "bottom", "right"], function (z, B) {
                    v[B] = u.css(B);
                    if (isNaN(parseInt(v[B], 10))) v[B] = "auto"
                });
                u.css({
                    position: "relative",
                    top: 0,
                    left: 0,
                    right: "auto",
                    bottom: "auto"
                })
            }
            return x.css(v).show()
        },
        removeWrapper: function (u) {
            if (u.parent().is(".ui-effects-wrapper")) return u.parent().replaceWith(u);
            return u
        },
        setTransition: function (u, v, x, z) {
            z = z || {};
            a.each(v, function (B, C) {
                unit = u.cssUnit(C);
                if (unit[0] > 0) z[C] = unit[0] * x + unit[1]
            });
            return z
        }
    });
    a.fn.extend({
        effect: function (u) {
            var v = b.apply(this, arguments),
                x = {
                    options: v[1],
                    duration: v[2],
                    callback: v[3]
                };
            v = x.options.mode;
            var z = a.effects[u];
            if (a.fx.off || !z) return v ? this[v](x.duration, x.callback) : this.each(function () {
                x.callback && x.callback.call(this)
            });
            return z.call(this, x)
        },
        _show: a.fn.show,
        show: function (u) {
            if (l(u)) return this._show.apply(this, arguments);
            else {
                var v = b.apply(this, arguments);
                v[1].mode = "show";
                return this.effect.apply(this, v)
            }
        },
        _hide: a.fn.hide,
        hide: function (u) {
            if (l(u)) return this._hide.apply(this, arguments);
            else {
                var v = b.apply(this, arguments);
                v[1].mode = "hide";
                return this.effect.apply(this, v)
            }
        },
        __toggle: a.fn.toggle,
        toggle: function (u) {
            if (l(u) || typeof u === "boolean" || a.isFunction(u)) return this.__toggle.apply(this, arguments);
            else {
                var v = b.apply(this, arguments);
                v[1].mode = "toggle";
                return this.effect.apply(this, v)
            }
        },
        cssUnit: function (u) {
            var v = this.css(u),
                x = [];
            a.each(["em", "px", "%", "pt"], function (z, B) {
                if (v.indexOf(B) > 0) x = [parseFloat(v), B]
            });
            return x
        }
    });
    a.easing.jswing = a.easing.swing;
    a.extend(a.easing, {
        def: "easeOutQuad",
        swing: function (u, v, x, z, B) {
            return a.easing[a.easing.def](u, v, x, z, B)
        },
        easeInQuad: function (u, v, x, z, B) {
            return z * (v /= B) * v + x
        },
        easeOutQuad: function (u, v, x, z, B) {
            return -z * (v /= B) * (v - 2) + x
        },
        easeInOutQuad: function (u, v, x, z, B) {
            if ((v /= B / 2) < 1) return z / 2 * v * v + x;
            return -z / 2 * (--v * (v - 2) - 1) + x
        },
        easeInCubic: function (u, v, x, z, B) {
            return z * (v /= B) * v * v + x
        },
        easeOutCubic: function (u,
            v, x, z, B) {
            return z * ((v = v / B - 1) * v * v + 1) + x
        },
        easeInOutCubic: function (u, v, x, z, B) {
            if ((v /= B / 2) < 1) return z / 2 * v * v * v + x;
            return z / 2 * ((v -= 2) * v * v + 2) + x
        },
        easeInQuart: function (u, v, x, z, B) {
            return z * (v /= B) * v * v * v + x
        },
        easeOutQuart: function (u, v, x, z, B) {
            return -z * ((v = v / B - 1) * v * v * v - 1) + x
        },
        easeInOutQuart: function (u, v, x, z, B) {
            if ((v /= B / 2) < 1) return z / 2 * v * v * v * v + x;
            return -z / 2 * ((v -= 2) * v * v * v - 2) + x
        },
        easeInQuint: function (u, v, x, z, B) {
            return z * (v /= B) * v * v * v * v + x
      "auto"
                });
                u.css({
                    position: "relative",
                    top: 0,
                    left: 0,
                    right: "auto",
                    bottom: "auto"
                })
            }
            return x.css(v).show()
        },
        removeWrapper: function (u) {
            if (u.parent().is(".ui-effects-wrapper")) return u.parent().replaceWith(u);
            return u
        },
        setTransition: function (u, v, x, z) {
            z = z || {};
            a.each(v, function (B, C) {
                unit = u.cssUnit(C);
                if (unit[0] > 0) z[C] = unit[0] * x + unit[1]
            });
            return z
        }
    });
    a.fn.extend({
        effect: function (u) {
            var v = b.apply(this, arguments),
                x = {
                    options: v[1],
                    duration: v[2],
                    callback: v[3]
                };
            v = x.options.mode;
            var z = a.effects[u];
            if (a.fx.off || !z) return v ? this[v](x.duration, x.callback) : this.each(function () {
                x.callback && x.callback.call(this)
            });
            return z.call(this, x)
        },
        _show: a.fn.show,
        show: function (u) {
            if (l(u)) return this._show.apply(this, arguments);
            else {
                var v = b.apply(this, arguments);
                v[1].mode = "show";
                return this.effect.apply(this, v)
            }
        },
        _hide: a.fn.hide,
        hide: function (u) {
            if (l(u)) return this._hide.apply(this, arguments);
            else {
                var v = b.apply(this, arguments);
                v[1].mode = "hide";
                return this.effect.apply(this, v)
            }
        },
        __toggle: a.fn.toggle,
        toggle: function (u) {
            if (l(u) || typeof u === "boolean" || a.isFunction(u)) return this.__toggle.apply(this, arguments);
            else {
                var v = b.apply(this, arguments);
                v[1].mode = "toggle";
                return this.effect.apply(this, v)
            }
        },
        cssUnit: function (u) {
            var v = this.css(u),
                x = [];
            a.each(["em", "px", "%", "pt"], function (z, B) {
                if (v.indexOf(B) > 0) x = [parseFloat(v), B]
            });
            return x
        }
    });
    a.easing.jswing = a.easing.swing;
    a.extend(a.easing, {
        def: "easeOutQuad",
        swing: function (u, v, x, z, B) {
            return a.easing[a.easing.def](u, v, x, z, B)
        },
        easeInQuad: function (u, v, x, z, B) {
            return z * (v /= B) * v + x
        },
        easeOutQuad: function (u, v, x, z, B) {
            return -z * (v /= B) * (v - 2) + x
        },
        easeInOutQuad: function (u, v, x, z, B) {
            if ((v /= B / 2) < 1) return z / 2 * v * v + x;
            return -z / 2 * (--v * (v - 2) - 1) + x
        },
        easeInCubic: function (u, v, x, z, B) {
            return z * (v /= B) * v * v + x
        },
        easeOutCubic: function (u,
            v, x, z, B) {
            return z * ((v = v / B - 1) * v * v + 1) + x
        },
        easeInOutCubic: function (u, v, x, z, B) {
            if ((v /= B / 2) < 1) return z / 2 * v * v * v + x;
            return z / 2 * ((v -= 2) * v * v + 2) + x
        },
        easeInQuart: function (u, v, x, z, B) {
            return z * (v /= B) * v * v * v + x
        },
        easeOutQuart: function (u, v, x, z, B) {
            return -z * ((v = v / B - 1) * v * v * v - 1) + x
        },
        easeInOutQuart: function (u, v, x, z, B) {
            if ((v /= B / 2) < 1) return z / 2 * v * v * v * v + x;
            return -z / 2 * ((v -= 2) * v * v * v - 2) + x
        },
        easeInQuint: function (u, v, x, z, B) {
            return z * (v /= B) * v * v * v * v + x
        },
        easeOutQuint: function (u, v, x, z, B) {
            return z * ((v = v / B - 1) * v * v * v * v + 1) + x
        },
        easeInOutQuint: function (u,
            v, x, z, B) {
            if ((v /= B / 2) < 1) return z / 2 * v * v * v * v * v + x;
            return z / 2 * ((v -= 2) * v * v * v * v + 2) + x
        },
        easeInSine: function (u, v, x, z, B) {
            return -z * Math.cos(v / B * (Math.PI / 2)) + z + x
        },
        easeOutSine: function (u, v, x, z, B) {
            return z * Math.sin(v / B * (Math.PI / 2)) + x
        },
        easeInOutSine: function (u, v, x, z, B) {
            return -z / 2 * (Math.cos(Math.PI * v / B) - 1) + x
        },
        easeInExpo: function (u, v, x, z, B) {
            return v == 0 ? x : z * Math.pow(2, 10 * (v / B - 1)) + x
        },
        easeOutExpo: function (u, v, x, z, B) {
            return v == B ? x + z : z * (-Math.pow(2, -10 * v / B) + 1) + x
        },
        easeInOutExpo: function (u, v, x, z, B) {
            if (v == 0) return x;
            if (v ==
                B) return x + z;
            if ((v /= B / 2) < 1) return z / 2 * Math.pow(2, 10 * (v - 1)) + x;
            return z / 2 * (-Math.pow(2, -10 * --v) + 2) + x
        },
        easeInCirc: function (u, v, x, z, B) {
            return -z * (Math.sqrt(1 - (v /= B) * v) - 1) + x
        },
        easeOutCirc: function (u, v, x, z, B) {
            return z * Math.sqrt(1 - (v = v / B - 1) * v) + x
        },
        easeInOutCirc: function (u, v, x, z, B) {
            if ((v /= B / 2) < 1) return -z / 2 * (Math.sqrt(1 - v * v) - 1) + x;
            return z / 2 * (Math.sqrt(1 - (v -= 2) * v) + 1) + x
        },
        easeInElastic: function (u, v, x, z, B) {
            var C = 0,
                w = z;
            if (v == 0) return x;
            if ((v /= B) == 1) return x + z;
            C || (C = B * 0.3);
            if (w < Math.abs(z)) {
                w = z;
                u = C / 4
            } else u = C / (2 * Math.PI) *
                Math.asin(z / w);
            return -(w * Math.pow(2, 10 * (v -= 1)) * Math.sin((v * B - u) * 2 * Math.PI / C)) + x
        },
        easeOutElastic: function (u, v, x, z, B) {
            var C = 0,
                w = z;
            if (v == 0) return x;
            if ((v /= B) == 1) return x + z;
            C || (C = B * 0.3);
            if (w < Math.abs(z)) {
                w = z;
                u = C / 4
            } else u = C / (2 * Math.PI) * Math.asin(z / w);
            return w * Math.pow(2, -10 * v) * Math.sin((v * B - u) * 2 * Math.PI / C) + z + x
        },
        easeInOutElastic: function (u, v, x, z, B) {
            var C = 0,
                w = z;
            if (v == 0) return x;
            if ((v /= B / 2) == 2) return x + z;
            C || (C = B * 0.3 * 1.5);
            if (w < Math.abs(z)) {
                w = z;
                u = C / 4
            } else u = C / (2 * Math.PI) * Math.asin(z / w); if (v < 1) return -0.5 * w *
                Math.pow(2, 10 * (v -= 1)) * Math.sin((v * B - u) * 2 * Math.PI / C) + x;
            return w * Math.pow(2, -10 * (v -= 1)) * Math.sin((v * B - u) * 2 * Math.PI / C) * 0.5 + z + x
        },
        easeInBack: function (u, v, x, z, B, C) {
            if (C == e) C = 1.70158;
            return z * (v /= B) * v * ((C + 1) * v - C) + x
        },
        easeOutBack: function (u, v, x, z, B, C) {
            if (C == e) C = 1.70158;
            return z * ((v = v / B - 1) * v * ((C + 1) * v + C) + 1) + x
        },
        easeInOutBack: function (u, v, x, z, B, C) {
            if (C == e) C = 1.70158;
            if ((v /= B / 2) < 1) return z / 2 * v * v * (((C *= 1.525) + 1) * v - C) + x;
            return z / 2 * ((v -= 2) * v * (((C *= 1.525) + 1) * v + C) + 2) + x
        },
        easeInBounce: function (u, v, x, z, B) {
            return z - a.easing.easeOutBounce(u,
                B - v, 0, z, B) + x
        },
        easeOutBounce: function (u, v, x, z, B) {
            return (v /= B) < 1 / 2.75 ? z * 7.5625 * v * v + x : v < 2 / 2.75 ? z * (7.5625 * (v -= 1.5 / 2.75) * v + 0.75) + x : v < 2.5 / 2.75 ? z * (7.5625 * (v -= 2.25 / 2.75) * v + 0.9375) + x : z * (7.5625 * (v -= 2.625 / 2.75) * v + 0.984375) + x
        },
        easeInOutBounce: function (u, v, x, z, B) {
            if (v < B / 2) return a.easing.easeInBounce(u, v * 2, 0, z, B) * 0.5 + x;
            return a.easing.easeOutBounce(u, v * 2 - B, 0, z, B) * 0.5 + z * 0.5 + x
        }
    })
}(jQuery);
(function (a) {
    a.effects.blind = function (e) {
        return this.queue(function () {
            var f = a(this),
                j = ["position", "top", "bottom", "left", "right"],
                g = a.effects.setMode(f, e.options.mode || "hide"),
                c = e.options.direction || "vertical";
            a.effects.save(f, j);
            f.show();
            var b = a.effects.createWrapper(f).css({
                overflow: "hidden"
            }),
                l = c == "vertical" ? "height" : "width";
            c = c == "vertical" ? b.height() : b.width();
            g == "show" && b.css(l, 0);
            var o = {};
            o[l] = g == "show" ? c : 0;
            b.animate(o, e.duration, e.options.easing, function () {
                g == "hide" && f.hide();
                a.effects.restore(f,
                    j);
                a.effects.removeWrapper(f);
                e.callback && e.callback.apply(f[0], arguments);
                f.dequeue()
            })
        })
    }
})(jQuery);
(function (a) {
    a.effects.bounce = function (e) {
        return this.queue(function () {
            var f = a(this),
                j = ["position", "top", "bottom", "left", "right"],
                g = a.effects.setMode(f, e.options.mode || "effect"),
                c = e.options.direction || "up",
                b = e.options.distance || 20,
                l = e.options.times || 5,
                o = e.duration || 250;
            /show|hide/.test(g) && j.push("opacity");
            a.effects.save(f, j);
            f.show();
            a.effects.createWrapper(f);
            var n = c == "up" || c == "down" ? "top" : "left";
            c = c == "up" || c == "left" ? "pos" : "neg";
            b = e.options.distance || (n == "top" ? f.outerHeight({
                    margin: true
                }) / 3 : f.outerWidth({
                    margin: true
                }) /
                3);
            if (g == "show") f.css("opacity", 0).css(n, c == "pos" ? -b : b);
            if (g == "hide") b /= l * 2;
            g != "hide" && l--;
            if (g == "show") {
                var q = {
                    opacity: 1
                };
                q[n] = (c == "pos" ? "+=" : "-=") + b;
                f.animate(q, o / 2, e.options.easing);
                b /= 2;
                l--
            }
            for (q = 0; q < l; q++) {
                var u = {}, v = {};
                u[n] = (c == "pos" ? "-=" : "+=") + b;
                v[n] = (c == "pos" ? "+=" : "-=") + b;
                f.animate(u, o / 2, e.options.easing).animate(v, o / 2, e.options.easing);
                b = g == "hide" ? b * 2 : b / 2
            }
            if (g == "hide") {
                q = {
                    opacity: 0
                };
                q[n] = (c == "pos" ? "-=" : "+=") + b;
                f.animate(q, o / 2, e.options.easing, function () {
                    f.hide();
                    a.effects.restore(f, j);
                    a.effects.removeWrapper(f);
                    e.callback && e.callback.apply(this, arguments)
                })
            } else {
                u = {};
                v = {};
                u[n] = (c == "pos" ? "-=" : "+=") + b;
                v[n] = (c == "pos" ? "+=" : "-=") + b;
                f.animate(u, o / 2, e.options.easing).animate(v, o / 2, e.options.easing, functio n =
                    0; n < j; n++) g.clone().appendTo("body").wrap("<div></div>").css({
                    position: "absolute",
                    visibility: "visible",
                    left: -n * (b / j),
                    top: -o * (l / f)
                }).parent().addClass("ui-effects-explode").css({
                    position: "absolute",
                    overflow: "hidden",
                    width: b / j,
                    height: l / f,
                    left: c.left + n * (b / j) + (e.options.mode == "show" ? (n - Math.floor(j / 2)) * (b / j) : 0),
                    top: c.top + o * (l / f) + (e.options.mode == "show" ? (o - Math.floor(f / 2)) * (l / f) : 0),
                    opacity: e.options.mode == "show" ? 0 : 1
                }).animate({
                    left: c.left + n * (b / j) + (e.options.mode == "show" ? 0 : (n - Math.floor(j / 2)) * (b / j)),
                    top: c.top + o * (l / f) + (e.options.mode == "show" ? 0 : (o - Math.floor(f / 2)) * (l / f)),
                    opacity: e.options.mode == "show" ? 1 : 0
                }, e.duration || 500);
            setTimeout(function () {
                e.options.mode == "show" ? g.css({
                    visibility: "visible"
                }) : g.css({
                    visibility: "visible"
                }).hide();
                e.callback && e.callback.apply(g[0]);
                g.dequeue();
                a("div.ui-effects-explode").remove()
            }, e.duration || 500)
        })
    }
})(jQuery);
(function (a) {
    a.effects.fade = function (e) {
        return this.queue(function () {
            var f = a(this),
                j = a.effects.setMode(f, e.options.mode || "hide");
            f.animate({
                opacity: j
            }, {
                queue: false,
                duration: e.duration,
                easing: e.options.easing,
                complete: function () {
                    e.callback && e.callback.apply(this, arguments);
                    f.dequeue()
                }
            })
        })
    }
})(jQuery);
(function (a) {
    a.effects.fold = function (e) {
        return this.queue(function () {
            var f = a(this),
                j = ["position", "top", "bottom", "left", "right"],
                g = a.effects.setMode(f, e.options.mode || "hide"),
                c = e.options.size || 15,
                b = !! e.options.horizFirst,
                l = e.duration ? e.duration / 2 : a.fx.speeds._default / 2;
            a.effects.save(f, j);
            f.show();
            var o = a.effects.createWrapper(f).css({
                overflow: "hidden"
            }),
                n = g == "show" != b,
                q = n ? ["width", "height"] : ["height", "width"];
            n = n ? [o.width(), o.height()] : [o.height(), o.width()];
            var u = /([0-9]+)%/.exec(c);
            if (u) c = parseInt(u[1],
                10) / 100 * n[g == "hide" ? 0 : 1];
            if (g == "show") o.css(b ? {
                height: 0,
                width: c
            } : {
                height: c,
                width: 0
            });
            b = {};
            u = {};
            b[q[0]] = g == "show" ? n[0] : c;
            u[q[1]] = g == "show" ? n[1] : 0;
            o.animate(b, l, e.options.easing).animate(u, l, e.options.easing, function () {
                g == "hide" && f.hide();
                a.effects.restore(f, j);
                a.effects.removeWrapper(f);
                e.callback && e.callback.apply(f[0], arguments);
                f.dequeue()
            })
        })
    }
})(jQuery);
(function (a) {
    a.effects.highlight = function (e) {
        return this.queue(function () {
            var f = a(this),
                j = ["backgroundImage", "backgroundColor", "opacity"],
                g = a.effects.setMode(f, e.options.mode || "show"),
                c = {
                    backgroundColor: f.css("backgroundColor")
                };
            if (g == "hide") c.opacity = 0;
            a.effects.save(f, j);
            f.show().css({
                backgroundImage: "none",
                backgroundColor: e.options.color || "#ffff99"
            }).animate(c, {
                queue: false,
                duration: e.duration,
                easing: e.options.easing,
                complete: function () {
                    g == "hide" && f.hide();
                    a.effects.restore(f, j);
                    g == "show" && !a.support.opacity &&
                        this.style.removeAttribute("filter");
                    e.callback && e.callback.apply(this, arguments);
                    f.dequeue()
                }
            })
        })
    }
})(jQuery);
(function (a) {
    a.effects.pulsate = function (e) {
        return this.queue(function () {
            var f = a(this),
                j = a.effects.setMode(f, e.options.mode || "show");
            times = (e.options.times || 5) * 2 - 1;
            duration = e.duration ? e.duration / 2 : a.fx.speeds._default / 2;
            isVisible = f.is(":visible");
            animateTo = 0;
            if (!isVisible) {
                f.css("opacity", 0).show();
                animateTo = 1
            }
            if (j == "hide" && isVisible || j == "show" && !isVisible) times--;
            for (j = 0; j < times; j++) {
                f.animate({
                    opacity: animateTo
                }, duration, e.options.easing);
                animateTo = (animateTo + 1) % 2
            }
            f.animate({
                    opacity: animateTo
                }, duration,
                e.options.easing, function () {
                    animateTo == 0 && f.hide();
                    e.callback && e.callback.apply(this, arguments)
                });
            f.queue("fx", function () {
                f.dequeue()
            }).dequeue()
        })
    }
})(jQuery);
(function (a) {
    a.effects.puff = function (e) {
        return this.queue(function () {
            var f = a(this),
                j = a.effects.setMode(f, e.options.mode || "hide"),
                g = parseInt(e.options.percent, 10) || 150,
                c = g / 100,
                b = {
                    height: f.height(),
                    width: f.width()
                };
            a.extend(e.options, {
                fade: true,
                mode: j,
                percent: j == "hide" ? g : 100,
                from: j == "hide" ? b : {
                    height: b.height * c,
                    width: b.width * c
                }
            });
            f.effect("scale", e.options, e.duration, e.callback);
            f.dequeue()
        })
    };
    a.effects.scale = function (e) {
        return this.queue(function () {
            var f = a(this),
                j = a.extend(true, {}, e.options),
                g = a.effects.setMode(f,
                    e.options.mode || "effect"),
                c = parseInt(e.options.percent, 10) || (parseInt(e.options.percent, 10) == 0 ? 0 : g == "hide" ? 0 : 100),
                b = e.options.direction || "both",
                l = e.options.origin;
            if (g != "effect") {
                j.origin = l || ["middle", "center"];
                j.restore = true
            }
            l = {
                height: f.height(),
                width: f.width()
            };
            f.from = e.options.from || (g == "show" ? {
                height: 0,
                width: 0
            } : l);
            c = {
                y: b != "horizontal" ? c / 100 : 1,
                x: b != "vertical" ? c / 100 : 1
            };
            f.to = {
                height: l.height * c.y,
                width: l.width * c.x
            };
            if (e.options.fade) {
                if (g == "show") {
                    f.from.opacity = 0;
                    f.to.opacity = 1
                }
                if (g == "hide") {
                    f.from.opacity =
                        1;
                    f.to.opacity = 0
                }
            }
            j.from = f.from;
            j.to = f.to;
            j.mode = g;
            f.effect("size", j, e.duration, e.callback);
            f.dequeue()
        })
    };
    a.effects.size = function (e) {
        return this.queue(function () {
            var f = a(this),
                j = ["position", "top", "bottom", "left", "right", "width", "height", "overflow", "opacity"],
                g = ["position", "top", "bottom", "left", "right", "overflow", "opacity"],
                c = ["width", "height", "overflow"],
                b = ["fontSize"],
                l = ["borderTopWidth", "borderBottomWidth", "paddingTop", "paddingBottom"],
                o = ["borderLeftWidth", "borderRightWidth", "paddingLeft", "paddingRight"],
                n = a.effects.setMode(f, e.options.mode || "effect"),
                q = e.options.restore || false,
                u = e.options.scale || "both",
                v = e.options.origin,
                x = {
                    height: f.height(),
                    width: f.width()
                };
            f.from = e.options.from || x;
            f.to = e.options.to || x;
            if (v) {
                v = a.effects.getBaseline(v, x);
                f.from.top = (x.height - f.from.height) * v.y;
                f.from.left = (x.width - f.from.width) * v.x;
                f.to.top = (x.height - f.to.height) * v.y;
                f.to.left = (x.width - f.to.width) * v.x
            }
            var z = {
                from: {
                    y: f.from.height / x.height,
                    x: f.from.width / x.width
                },
                to: {
                    y: f.to.height / x.height,
                    x: f.to.width / x.width
                }
            };
            if (u == "box" || u == "both") {
                if (z.from.y != z.to.y) {
                    j = j.concat(l);
                    f.from = a.effects.setTransition(f, l, z.from.y, f.from);
                    f.to = a.effects.setTransition(f, l, z.to.y, f.to)
                }
                if (z.from.x != z.to.x) {
                    j = j.concat(o);
                    f.from = a.effects.setTransition(f, o, z.from.x, f.from);
                    f.to = a.effects.setTransition(f, o, z.to.x, f.to)
                }
            }
            if (u == "content" || u == "both")
                if (z.from.y != z.to.y) {
                    j = j.concat(b);
                    f.from = a.effects.setTransition(f, b, z.from.y, f.from);
                    f.to = a.effects.setTransition(f, b, z.to.y, f.to)
                }
            a.effects.save(f, q ? j : g);
            f.show();
            a.effects.createWrapper(f);
            f.css("overflow", "hidden").css(f.from);
            if (u == "content" || u == "both") {
                l = l.concat(["marginTop", "marginBottom"]).concat(b);
                o = o.concat(["marginLeft", "marginRight"]);
                c = j.concat(l).concat(o);
                f.find("*[width]").each(function () {
                    child = a(this);
                    q && a.effects.save(child, c);
                    var B = {
                        height: child.height(),
                        width: child.width()
                    };
                    child.from = {
                        height: B.height * z.from.y,
                        width: B.width * z.from.x
                    };
                    child.to = {
                        height: B.height * z.to.y,
                        width: B.width * z.to.x
                    };
                    if (z.from.y != z.to.y) {
                        child.from = a.effects.setTransition(child, l, z.from.y, child.from);
                        child.to = a.effects.setTransition(child, l, z.to.y, child.to)
                    }
                    if (z.from.x != z.to.x) {
                        child.from = a.effects.setTransition(child, o, z.from.x, child.from);
                        child.to = a.effects.setTransition(child, o, z.to.x, child.to)
                    }
                    child.css(child.from);
                    child.animate(child.to, e.duration, e.options.easing, function () {
                        q && a.effects.restore(child, c)
                    })
                })
            }
            f.animate(f.to, {
                queue: false,
                duration: e.duration,
                easing: e.options.easing,
                complete: function () {
                    f.to.opacity === 0 && f.css("opacity", f.from.opacity);
                    n == "hide" && f.hide();
                    a.effects.restore(f,
                        q ? j : g);
                    a.effects.removeWrapper(f);
                    e.callback && e.callback.apply(this, arguments);
                    f.dequeue()
                }
            })
        })
    }
})(jQuery);
(function (a) {
    a.effects.shake = function (e) {
        return this.queue(function () {
            var f = a(this),
                j = ["position", "top", "bottom", "left", "right"];
            a.effects.setMode(f, e.options.mode || "effect");
            var g = e.options.direction || "left",
                c = e.options.distance || 20,
                b = e.options.times || 3,
                l = e.duration || e.options.duration || 140;
            a.effects.save(f, j);
            f.show();
            a.effects.createWrapper(f);
            var o = g == "up" || g == "down" ? "top" : "left",
                n = g == "up" || g == "left" ? "pos" : "neg";
            g = {};
            var q = {}, u = {};
            g[o] = (n == "pos" ? "-=" : "+=") + c;
            q[o] = (n == "pos" ? "+=" : "-=") + c * 2;
            u[o] =
                (n == "pos" ? "-=" : "+=") + c * 2;
            f.animate(g, l, e.options.easing);
            for (c = 1; c < b; c++) f.animate(q, l, e.options.easing).animate(u, l, e.options.easing);
            f.animate(q, l, e.options.easing).animate(g, l / 2, e.options.easing, function () {
                a.effects.restore(f, j);
                a.effects.removeWrapper(f);
                e.callback && e.callback.apply(this, arguments)
            });
            f.queue("fx", function () {
                f.dequeue()
            });
            f.dequeue()
        })
    }
})(jQuery);
(function (a) {
    a.effects.slide = function (e) {
        return this.queue(function () {
            var f = a(this),
                j = ["position", "top", "bottom", "left", "right"],
                g = a.effects.setMode(f, e.options.mode || "show"),
                c = e.options.direction || "left";
            a.effects.save(f, j);
            f.show();
            a.effects.createWrapper(f).css({
                overflow: "hidden"
            });
            var b = c == "up" || c == "down" ? "top" : "left";
            c = c == "up" || c == "left" ? "pos" : "neg";
            var l = e.options.distance || (b == "top" ? f.outerHeight({
                margin: true
            }) : f.outerWidth({
                margin: true
            }));
            if (g == "show") f.css(b, c == "pos" ? isNaN(l) ? "-" + l : -l : l);
            var o = {};
            o[b] = (g == "show" ? c == "pos" ? "+=" : "-=" : c == "pos" ? "-=" : "+=") + l;
            f.animate(o, {
                queue: false,
                duration: e.duration,
                easing: e.options.easing,
                complete: function () {
                    g == "hide" && f.hide();
                    a.effects.restore(f, j);
                    a.effects.removeWrapper(f);
                    e.callback && e.callback.apply(this, arguments);
                    f.dequeue()
                }
            })
        })
    }
})(jQuery);
(function (a) {
    a.effects.transfer = function (e) {
        return this.queue(function () {
            var f = a(this),
                j = a(e.options.to),
                g = j.offset();
            j = {
                top: g.top,
                left: g.left,
                height: j.innerHeight(),
                width: j.innerWidth()
            };
            g = f.offset();
            var c = a('<div class="ui-effects-transfer"></div>').appendTo(document.body).addClass(e.options.className).css({
                top: g.top,
                left: g.left,
                height: f.innerHeight(),
                width: f.innerWidth(),
                position: "absolute"
            }).animate(j, e.duration, e.options.easing, function () {
                c.remove();
                e.callback && e.callback.apply(f[0], arguments);
                f.dequeue()
            })
        })
    }
})(jQuery);
(function (a) {
    a.widget("ui.slider", a.ui.mouse, {
        widgetEventPrefix: "slide",
        options: {
            animate: false,
            distance: 0,
            max: 100,
            min: 0,
            orientation: "horizontal",
            range: false,
            step: 1,
            value: 0,
            values: null,
            wraparound: false
        },
        _create: function () {
            var e = this,
                f = this.options;
            this._mouseSliding = this._keySliding = false;
            this._animateOff = true;
            this._handleIndex = null;
            this._detectOrientation();
            this._mouseInit();
            this.element.addClass("ui-slider ui-slider-" + this.orientation + " ui-widget ui-widget-content ui-corner-all");
            f.disabled && this.element.addClass("ui-slider-disabled ui-disabled");
            this.range = a([]);
            if (f.range) {
                if (f.range === true) {
                    this.range = a("<div></div>");
                    if (!f.values) f.values = [this._valueMin(), this._valueMin()];
                    if (f.values.length && f.values.length !== 2) f.values = [f.values[0], f.values[0]]
                } else this.range = a("<div></div>");
                this.range.appendTo(this.element).addClass("ui-slider-range");
                if (f.range === "min" || f.range === "max") this.range.addClass("ui-slider-range-" + f.range);
                this.range.addClass("ui-widget-header")
            }
            a(".ui-slider-handle", this.element).length === 0 && a("<a href='#'></a>").appendTo(this.element).addClass("ui-slider-handle");
            if (f.values && f.values.length)
                for (; a(".ui-slider-handle", this.element).length < f.values.length;) a("<a href='#'></a>").appendTo(this.element).addClass("ui-slider-handle");
            this.handles = a(".ui-slider-handle", this.element).addClass("ui-state-default ui-corner-all");
            this.handle = this.handles.eq(0);
            this.handles.add(this.range).filter("a").click(function (j) {
                j.preventDefault()
            }).hover(function () {
                f.disabled || a(this).addClass("ui-state-hover")
            }, function () {
                a(this).removeClass("ui-state-hover")
            }).focus(function () {
                if (f.disabled) a(this).blur();
                else {
                    a(".ui-slider .ui-state-focus").removeClass("ui-state-focus");
                    a(this).addClass("ui-state-focus")
                }
            }).blur(function () {
                a(this).removeClass("ui-state-focus")
            });
            this.handles.each(function (j) {
                a(this).data("index.ui-slider-handle", j)
            });
            this.handles.keydown(function (j) {
                var g = true,
                    c = a(this).data("index.ui-slider-handle"),
                    b, l, o;
                if (!e.options.disabled) {
                    switch (j.keyCode) {
                    case a.ui.keyCode.HOME:
                    case a.ui.keyCode.END:
                    case a.ui.keyCode.PAGE_UP:
                    case a.ui.keyCode.PAGE_DOWN:
                    case a.ui.keyCode.UP:
                    case a.ui.keyCode.RIGHT:
                    case a.ui.keyCode.DOWN:
                    case a.ui.keyCode.LEFT:
                        g =
                            false;
                        if (!e._keySliding) {
                            e._keySliding = true;
                            a(this).addClass("ui-state-active");
                            b = e._start(j, c);
                            if (b === false) return
                        }
                    }
                    o = e.options.step;
                    b = e.options.values && e.options.values.length ? l = e.values(c) : l = e.value();
                    switch (j.keyCode) {
                    case a.ui.keyCode.HOME:
                        l = e._valueMin();
                        break;
                    case a.ui.keyCode.END:
                        l = e._valueMax();
                        break;
                    case a.ui.keyCode.PAGE_UP:
                        l = e._trimAlignValue(b + (e._valueMax() - e._valueMin()) / 5);
                        break;
                    case a.ui.keyCode.PAGE_DOWN:
                        l = e._trimAlignValue(b - (e._valueMax() - e._valueMin()) / 5);
                        break;
                    case a.ui.keyCode.UP:
                    case a.ui.keyCode.RIGHT:
                        if (b ===
                            e._valueMax()) return;
                        l = e._trimAlignValue(b + o);
                        break;
                    case a.ui.keyCode.DOWN:
                    case a.ui.keyCode.LEFT:
                        if (b === e._valueMin()) return;
                        l = e._trimAlignValue(b - o)
                    }
                    e._slide(j, c, l);
                    return g
                }
            }).keyup(function (j) {
                var g = a(this).data("index.ui-slider-handle");
                if (e._keySliding) {
                    e._keySliding = false;
                    e._stop(j, g);
                    e._change(j, g);
                    a(this).removeClass("ui-state-active")
                }
            });
            this._refreshValue();
            this._animateOff = false
        },
        destroy: function () {
            this.handles.remove();
            this.range.remove();
            this.element.removeClass("ui-slider ui-slider-horizontal ui-slider-vertical ui-slider-disabled ui-widget ui-widget-content ui-corner-all").removeData("slider").unbind(".slider");
            this._mouseDestroy();
            return this
        },
        _mouseCapture: function (e) {
            var f = this.options,
                j, g, c, b, l;
            if (f.disabled) return false;
            this.elementSize = {
                width: this.element.outerWidth(),
                height: this.element.outerHeight()
            };
            this.elementOffset = this.element.offset();
            j = this._normValueFromMouse({
                x: e.pageX,
                y: e.pageY
            });
            g = this._valueMax() - this._valueMin() + 1;
            b = this;
            this.handles.each(function (o) {
                var n = Math.abs(j - b.values(o));
                if (g > n) {
                    g = n;
                    c = a(this);
                    l = o
                }
            });
            c || (c = this.handles.eq(0));
            if (f.range === true && this.values(1) === f.min && this.values(0) ===
                f.min) {
                l += 1;
                c = a(this.handles[l])
            }
            if (this._start(e, l) === false) return false;
            this._mouseSliding = true;
            b._handleIndex = l;
            c.addClass("ui-state-active").focus();
            f = c.offset();
            this._clickOffset = !a(e.target).parents().andSelf().is(".ui-slider-handle") ? {
                left: 0,
                top: 0
            } : {
                left: e.pageX - f.left - c.width() / 2,
                top: e.pageY - f.top - c.height() / 2 - (parseInt(c.css("borderTopWidth"), 10) || 0) - (parseInt(c.css("borderBottomWidth"), 10) || 0) + (parseInt(c.css("marginTop"), 10) || 0)
            };
            this._slide(e, l, j);
            return this._animateOff = true
        },
        _mouseStart: function () {
            return true
        },
        _mouseDrag: function (e) {
            var f = this._normValueFromMouse({
                x: e.pageX,
                y: e.pageY
            });
            this._slide(e, this._handleIndex, f);
            return false
        },
        _mouseStop: function (e) {
            this.handles.removeClass("ui-state-active");
            this._mouseSliding = false;
            this._stop(e, this._handleIndex);
            this._change(e, this._handleIndex);
            this._clickOffset = this._handleIndex = null;
            return this._animateOff = false
        },
        _detectOrientation: function () {
            this.orientation = this.options.orientation === "vertical" ? "vertical" : "horizontal"
        },
        _normValueFromMouse: function (e) {
            var f;
            if (this.orientation === "horizontal") {
                f = this.elementSize.width;
                e = e.x - this.elementOffset.left - (this._clickOffset ? this._clickOffset.left : 0)
            } else {
                f = this.elementSize.height;
                e = e.y - this.elementOffset.top - (this._clickOffset ? this._clickOffset.top : 0)
            }
            f = e / f;
            if (f > 1) f = 1;
            if (f < 0) f = 0;
            if (this.orientation === "vertical") f = 1 - f;
            e = this._valueMax() - this._valueMin();
            return this._trimAlignValue(this._valueMin() + f * e)
        },
        _start: function (e, f) {
            var j = {
                handle: this.handles[f],
                value: this.value()
            };
            if (this.options.values && this.options.values.length) {
                j.value =
                    this.values(f);
                j.values = this.values()
            }
            return this._trigger("start", e, j)
        },
        _slide: function (e, f, j) {
            var g;
            if (this.options.values && this.options.values.length) {
                g = this.values(f ? 0 : 1);
                if (!this.options.wraparound && this.options.values.length === 2 && this.options.range === true && (f === 0 && j > g || f === 1 && j < g)) j = g;
                if (j !== this.values(f)) {
                    g = this.values();
                    g[f] = j;
                    e = this._trigger("slide", e, {
                        handle: this.handles[f],
                        value: j,
                        values: g
                    });
                    this.values(f ? 0 : 1);
                    e !== false && this.values(f, j, true)
                }
            } else if (j !== this.value()) {
                e = this._trigger("slide",
                    e, {
                        handle: this.handles[f],
                        value: j
                    });
                e !== false && this.value(j)
            }
        },
        _stop: function (e, f) {
            var j = {
                handle: this.handles[f],
                value: this.value()
            };
            if (this.options.values && this.options.values.length) {
                j.value = this.values(f);
                j.values = this.values()
            }
            this._trigger("stop", e, j)
        },
        _change: function (e, f) {
            if (!this._keySliding && !this._mouseSliding) {
                var j = {
                    handle: this.handles[f],
                    value: this.value()
                };
                if (this.options.values && this.options.values.length) {
                    j.value = this.values(f);
                    j.values = this.values()
                }
                this._trigger("change", e, j)
            }
        },
        value: function (e) {
            if (arguments.length) {
                this.options.value = this._trimAlignValue(e);
                this._refreshValue();
                this._change(null, 0)
            }
            return this._value()
        },
        values: function (e, f) {
            var j, g, c;
            if (arguments.length > 1) {
                this.options.values[e] = this._trimAlignValue(f);
                this._refreshValue();
                this._change(null, e)
            }
            if (arguments.length)
                if (a.isArray(arguments[0])) {
                    j = this.options.values;
                    g = arguments[0];
                    for (c = 0; c < j.length; c += 1) {
                        j[c] = this._trimAlignValue(g[c]);
                        this._change(null, c)
                    }
                    this._refreshValue()
                } else return this.options.values &&
                    this.options.values.length ? this._values(e) : this.value();
                else return this._values()
        },
        _setOption: function (e, f) {
            var j, g = 0;
            if (a.isArray(this.options.values)) g = this.options.values.length;
            a.Widget.prototype._setOption.apply(this, arguments);
            switch (e) {
            case "disabled":
                if (f) {
                    this.handles.filter(".ui-state-focus").blur();
                    this.handles.removeClass("ui-state-hover");
                    this.handles.attr("disabled", "disabled");
                    this.element.addClass("ui-disabled")
                } else {
                    this.handles.removeAttr("disabled");
                    this.element.removeClass("ui-disabled")
                }
                break;
            case "orientation":
                this._detectOrientation();
                this.element.removeClass("ui-slider-horizontal ui-slider-vertical").addClass("ui-slider-" + this.orientation);
                this._refreshValue();
                break;
            case "value":
                this._animateOff = true;
                this._refreshValue();
                this._change(null, 0);
                this._animateOff = false;
                break;
            case "values":
                this._animateOff = true;
                this._refreshValue();
                for (j = 0; j < g; j += 1) this._change(null, j);
                this._animateOff = false
            }
        },
        _value: function () {
            var e = this.options.value;
            return e = this._trimAlignValue(e)
        },
        _values: function (e) {
            var f,
                j;
            if (arguments.length) {
                f = this.options.values[e];
                return f = this._trimAlignValue(f)
            } else {
                f = this.options.values.slice();
                for (j = 0; j < f.length; j += 1) f[j] = this._trimAlignValue(f[j]);
                return f
            }
        },
        _trimAlignValue: function (e) {
            if (e < this._valueMin()) return this._valueMin();
            if (e > this._valueMax()) return this._valueMax();
            var f = this.options.step > 0 ? this.options.step : 1,
                j = e % f;
            e = e - j;
            if (Math.abs(j) * 2 >= f) e += j > 0 ? f : -f;
            return parseFloat(e.toFixed(5))
        },
        _valueMin: function () {
            return this.options.min
        },
        _valueMax: function () {
 ._keySliding && !this._mouseSliding) {
                var j = {
                    handle: this.handles[f],
                    value: this.value()
                };
                if (this.options.values && this.options.values.length) {
                    j.value = this.values(f);
                    j.values = this.values()
                }
                this._trigger("change", e, j)
            }
        },
        value: function (e) {
            if (arguments.length) {
                this.options.value = this._trimAlignValue(e);
                this._refreshValue();
                this._change(null, 0)
            }
            return this._value()
        },
        values: function (e, f) {
            var j, g, c;
            if (arguments.length > 1) {
                this.options.values[e] = this._trimAlignValue(f);
                this._refreshValue();
                this._change(null, e)
            }
            if (arguments.length)
                if (a.isArray(arguments[0])) {
                    j = this.options.values;
                    g = arguments[0];
                    for (c = 0; c < j.length; c += 1) {
                        j[c] = this._trimAlignValue(g[c]);
                        this._change(null, c)
                    }
                    this._refreshValue()
                } else return this.options.values &&
                    this.options.values.length ? this._values(e) : this.value();
                else return this._values()
        },
        _setOption: function (e, f) {
            var j, g = 0;
            if (a.isArray(this.options.values)) g = this.options.values.length;
            a.Widget.prototype._setOption.apply(this, arguments);
            switch (e) {
            case "disabled":
                if (f) {
                    this.handles.filter(".ui-state-focus").blur();
                    this.handles.removeClass("ui-state-hover");
                    this.handles.attr("disabled", "disabled");
                    this.element.addClass("ui-disabled")
                } else {
                    this.handles.removeAttr("disabled");
                    this.element.removeClass("ui-disabled")
                }
                break;
            case "orientation":
                this._detectOrientation();
                this.element.removeClass("ui-slider-horizontal ui-slider-vertical").addClass("ui-slider-" + this.orientation);
                this._refreshValue();
                break;
            case "value":
                this._animateOff = true;
                this._refreshValue();
                this._change(null, 0);
                this._animateOff = false;
                break;
            case "values":
                this._animateOff = true;
                this._refreshValue();
                for (j = 0; j < g; j += 1) this._change(null, j);
                this._animateOff = false
            }
        },
        _value: function () {
            var e = this.options.value;
            return e = this._trimAlignValue(e)
        },
        _values: function (e) {
            var f,
                j;
            if (arguments.length) {
                f = this.options.values[e];
                return f = this._trimAlignValue(f)
            } else {
                f = this.options.values.slice();
                for (j = 0; j < f.length; j += 1) f[j] = this._trimAlignValue(f[j]);
                return f
            }
        },
        _trimAlignValue: function (e) {
            if (e < this._valueMin()) return this._valueMin();
            if (e > this._valueMax()) return this._valueMax();
            var f = this.options.step > 0 ? this.options.step : 1,
                j = e % f;
            e = e - j;
            if (Math.abs(j) * 2 >= f) e += j > 0 ? f : -f;
            return parseFloat(e.toFixed(5))
        },
        _valueMin: function () {
            return this.options.min
        },
        _valueMax: function () {
            return this.options.max
        },
        _refreshValue: function () {
            var e = this.options.range,
                f = this.options,
                j = this,
                g = !this._animateOff ? f.animate : false,
                c, b = {}, l, o, n, q, u = false;
            if (this.options.values && this.options.values.length) {
                if (this.options.wraparound && this.options.range === true && j.values(0) > j.values(1)) {
                    if (j.range.hasClass("ui-widget-header")) {
                        j.range.removeClass("ui-widget-header").addClass("ui-widget-content");
                        j.element.removeClass("ui-widget-content").addClass("ui-widget-header")
                    }
                    u = true
                } else if (this.options.wraparound && j.range.hasClass("ui-widget-content")) {
                    j.range.removeClass("ui-widget-content").addClass("ui-widget-header");
                    j.element.removeClass("ui-widget-header").addClass("ui-widget-content")
                }
                this.handles.each(function (v) {
                    c = (j.values(v) - j._valueMin()) / (j._valueMax() - j._valueMin()) * 100;
                    b[j.orientation === "horizontal" ? "left" : "bottom"] = c + "%";
                    a(this).stop(1, 1)[g ? "animate" : "css"](b, f.animate);
                    if (j.options.range === true)
                        if (j.orientation === "horizontal") {
                            if (v === 0 && !u) j.range.stop(1, 1)[g ? "animate" : "css"]({
                                left: c + "%"
                            }, f.animate);
                            if (v === 1 && u) {
                                j.range.stop(1, 1)[g ? "animate" : "css"]({
                                    left: c + "%"
                                }, f.animate);
                                j.range[g ? "animate" : "css"]({
                                    width: l - c + "%"
                                }, {
                                    queue: false,
                                    duration: f.animate
                                })
                            } else if (v === 1) j.range[g ? "animate" : "css"]({
                                width: c - l + "%"
                            }, {
                                queue: false,
                                duration: f.animate
                            })
                        } else {
                            if (v === 0 && !u) j.range.stop(1, 1)[g ? "animate" : "css"]({
                                bottom: c + "%"
                            }, f.animate);
                            if (v === 1 && u) {
                                j.range.stop(1, 1)[g ? "animate" : "css"]({
                                    bottom: c + "%"
                                }, f.animate);
                                j.range[g ? "animate" : "css"]({
                                    height: l - c + "%"
                                }, {
                                    queue: false,
                                    duration: f.animate
                                })
                            } else if (v === 1) j.range[g ? "animate" : "css"]({
                                height: c - l + "%"
                            }, {
                                queue: false,
                                duration: f.animate
                            })
                        }
                    l = c
                })
            } else {
                o = this.value();
                n = this._valueMin();
                q = this._valueMax();
                c = q !== n ? (o - n) / (q - n) * 100 : 0;
                b[j.orientation === "horizontal" ? "left" : "bottom"] = c + "%";
                this.handle.stop(1, 1)[g ? "animate" : "css"](b, f.animate);
                if (e === "min" && this.orientation === "horizontal") this.range.stop(1, 1)[g ? "animate" : "css"]({
                    width: c + "%"
                }, f.animate);
                if (e === "max" && this.orientation === "horizontal") this.range[g ? "animate" : "css"]({
                    width: 100 - c + "%"
                }, {
                    queue: false,
                    duration: f.animate
                });
                if (e === "min" && this.orientation === "vertical") this.range.stop(1, 1)[g ? "animate" : "css"]({
                    height: c + "%"
                }, f.animate);
                if (e === "max" && this.orientation === "vertical") this.range[g ? "animate" : "css"]({
                    height: 100 - c + "%"
                }, {
                    queue: false,
                    duration: f.animate
                })
            }
        }
    });
    a.extend(a.ui.slider, {
        version: "1.8.6"
    })
})(jQuery);
(function (a) {
    var e = a.fn.empty;
    a.fn.empty = function () {
        return this.each(function () {
            a("*", this).each(function () {
                a(this).triggerHandler("remove")
            });
            return e.call(a(this))
        })
    };
    var f = a.fn.html;
    a.fn.html = function (c) {
        return c ? this.each(function () {
            a("*", this).each(function () {
                a(this).triggerHandler("remove")
            });
            return f.call(a(this), c)
        }) : f.call(a(this))
    };
    var j = a.fn.text;
    a.fn.text = function (c) {
        return c ? this.each(function () {
            a("*", this).each(function () {
                a(this).triggerHandler("remove")
            });
            return j.call(a(this), c)
        }) :
            j.call(a(this))
    };
    var g = a.fn.replaceWith;
    a.fn.replaceWith = function (c) {
        return this.each(function () {
            a("*", this).each(function () {
                a(this).triggerHandler("remove")
            });
            return g.call(a(this), c)
        })
    }
})(jQuery);
(function (a) {
    a.fn.closestDesc = function (e) {
        var f = this.filter(e);
        return f[0] ? f : this.find(e).eq(0)
    }
})(jQuery);
(function (a) {
    var e = a.fn.attr;
    a.fn.attr = function (f) {
        var j = e.apply(this, arguments);
        f === "checked" && a(this).filter(":checkbox").each(function () {
            a(this).triggerHandler("change")
        });
        return j
    };
    a.fn.checks = function (f) {
        var j = this;
        f = f || {};
        this.is("input:checkbox") || (j = this.find("input:checkbox"));
        j.bind("change", function () {
            var g = a(this),
                c = g.data("linkedHidden");
            if (g.is(":checked")) {
                if (c) {
                    c.remove();
                    g.removeData("linkedHidden")
                }
            } else {
                c = a("<input />", {
                    type: "hidden",
                    name: g.attr("name"),
                    value: f.offValue || ""
                });
                g.data("linkedHidden",
                    c);
                g.after(c)
            }
        }).triggerHandler("change");
        return this
    }
})(jQuery);

function jsonPath(a, e, f) {
    var j = {
        resultType: f && f.resultType || "VALUE",
        result: [],
        normalize: function (c) {
            var b = [];
            return c.replace(/[\['](\??\(.*?\))[\]']/g, function (l, o) {
                return "[#" + (b.push(o) - 1) + "]"
            }).replace(/'?\.'?|\['?/g, ";").replace(/;;;|;;/g, ";..;").replace(/;$|'?\]|'$/g, "").replace(/#([0-9]+)/g, function (l, o) {
                return b[o]
            })
        },
        asPath: function (c) {
            c = c.split(";");
            for (var b = "$", l = 1, o = c.length; l < o; l++) b += /^[0-9*]+$/.test(c[l]) ? "[" + c[l] + "]" : "['" + c[l] + "']";
            return b
        },
        store: = this;
        a.getPageSize() || a.setPageSize(10);
        a.options.adding_rows =
            a.options.adding_rows || {};
        a.options.editing_rows = a.options.editing_rows || {};
        a.options.heartbeat_closure = function () {
            a._heartbeat.call(a, a.options.lt.user_obj)
        };
        a.options.destroy_callback = function () {
            Ape.unBind(a.options.binding, a.options.lt.user_obj)
        }
    };
    this._liveDataTableSubscribe = function (a, e, f) {
        var j = this,
            g = this.element;
        if (!j.options.data) j.options.data = {};
        j.options.lt = {};
        j.options.lt.user_obj = f ? f : {};
        j.options.lt.user_obj.ident = j.options.live_ident ? j.options.live_ident : j.options.live_unique_ident ?
            "ldt_" + j.options.widget_id : "default";
        j.options.lt.last_serno = 0;
        j.options.lt.context = a;
        j.options.lt.name = e;
        if (a) {
            f = CUI.FunctionFactory.build(j._liveEventHandler, j, {
                context: "argument"
            });
            j.options.binding = e ? jSoff.eventSys.bind(a, e, f, j) : Ape.bindContext(a, f, j);
            j.options.joined = j.options.binding.joined || false;
            j._addDestroyCallback(j.options.destroy_callback)
        }
        if (j.options.joined) j.bootstrap(j.options.lt.user_obj);
        else j._one ? j._one(g, "joined_channel", function () {
            j.bootstrap(j.options.lt.user_obj);
        }) : g.one("joined_channel",
            function () {
                j.bootstrap(j.options.lt.user_obj);
            })
        my_calls = j.options
    };
    this.bootstrap = function (a) {
        var e = this,
            f = function () {
                e.options.lt.last_serno = -1;
                e.options.search && $.extend(a.search, e.options.search);
                Ape.broadcast({
                    liveArray: {
                        command: "bootstrap",
                        context: e.options.lt.context,
                        name: e.options.lt.name,
                        obj: a
                    }
                });
                e.options.lt.hb_pid && e._clearTimeout(e.options.lt.hb_pid);
                e.options.lt.hb_pid = e._setTimeout(e.options.heartbeat_closure, e.hb_interval)
            };
        e.options.search_parent_field && !e.options.search ? e._one(this.element, "fillDataParent",
            f) : f()
    };
    this.changepage = function (a) {
        this._clear();
        Ape.broadcast({
            liveArray: {
                command: "changepage",
                context: this.options.lt.context,
                name: this.options.lt.name,
                obj: a
            }
        })
    };
    this._heartbeat = function (a) {
        if (this.hb_id) this.hb_id++;
        else this.hb_id = 1;
        a.hb_id = this.hb_id;
        Ape.broadcast({
            liveArray: {
                command: "heartbeat",
                context: this.options.lt.context,
                name: this.options.lt.name,
                obj: a
            }
        });
        this.options.lt.hb_pid = this._setTimeout(this.options.heartbeat_closure, this.hb_interval)
    };
    this._liveEventHandler = function (a) {
        var e =
            this.element;
        a = a.json;
        if (!this.options.destroyed)
            if (!(this.options.lt.user_obj.ident && a.ident && this.options.lt.user_obj.ident != a.ident))
                if (a.action.toLowerCase() === "join_channel") {
                    this.options.joined = true;
                    e.triggerHandler("joined_channel")
                } else if (a.action === "permission_denied") debugLog('cui.dataTableClass.js: A "permission_denied" packet was received from the live data source. The data source cannot be used. ', a, " -- ", this.element || this);
        else {
            e = false;
            if (a.wireSerno !== undefined && a.wireSerno !== null) e =
                this._checkSerno(parseInt(a.wireSerno));
            else debugLog("dataTableClass Error: Failed packet integrity check, missing wireSerno: ", a);
            e && this._laOnChange(this.options.lt.user_obj, a)
        }
    };
    this._checkSerno = function (a) {
        if (!this.options.lt) this.options.lt = {};
        if (a <= 0) {
            this.options.lt.last_serno = a;
            return true
        }
        if (this.options.lt.last_serno >= 0 && a != this.options.lt.last_serno + 1) {
            debugLog("Serial number out of order (", this.options.lt.last_serno, "->", a, "). Going to bootstrap.");
            return false
        } else {
            this.options.lt.last_serno =
                a;
            return true
        }
    };
    this._clear = function () {
        delete this.options.data.live;
        this.clearRowCount();
        this.options.data.live = {}
    };
    this.addingRows = function () {
        var a = this.element;
        if (CUI.hasKeys(this.options.adding_rows)) return true;
        if (a.find(".new_row").length) return true;
        return false
    };
    this.isBeingAdded = function (a) {
        return !!this.options.adding_rows[a]
    };
    this._setBeingAdded = function (a, e) {
        if (e) this.options.adding_rows[a] = true;
        else delete this.options.adding_rows[a]
    };
    this.isBeingEdited = function (a) {
        return !!this.options.editing_rows[a]
    };
    this._setBeingEdited = function (a, e) {
        if (e) this.options.editing_rows[a] = true;
        else delete this.options.editing_rows[a]
    };
    this.clearRowCount = function () {
        this.options.row_count = 0
    };
    this._beforeSetupDataSource = function () {};
    this._setupDataSource = function () {
        if (!this.options.rest) return false;
        this._beforeSetupDataSource();
        if (!this.options.data_source || this.options.data_source && this.options.auto_data_source) {
            this.options.data_source = this.options.rest.split("/").pop();
            this.options.auto_data_source = true
        }
        var a = this._afterSetupDataSource(this.options.data_source,
            this.options.rest);
        if (a) this.options.data_source = a;
        return this.options.data_source
    };
    this._afterSetupDataSource = function () {};
    this._beforeSetupPagination = function () {};
    this._setupPagination = function () {
        if (!this.options.paginate) return false;
        this._beforeSetupPagination();
        if (this.options.page_size && this.options.rest) {
            if (!this.options.rest_params) this.options.rest_params = {};
            this.options.rest_params.rows = this.options.page_size;
            this.options.rest_params.page = 1
        }
        this._afterSetupPagination();
        return true
    };
    this._afterSetupPagination =
        function () {};
    this._beforeBuildColumnIndexMap = function () {};
    this._buildColumnIndexMap = function () {
        if (!this.options.columns) this.options.columns = [];
        this._beforeBuildColumnIndexMap();
        this.options.column_index_map = {};
        for (var a = 0, e = this.options.columns.length; a < e; ++a)
            if (this.options.data_source == "ROW_SOURCE") this.options.column_index_map[this.options.columns[a].row_source] = a;
            else this.options.column_index_map[this.options.columns[a].column] = a;
        if (a = this._afterBuildColumnIndexMap(this.options.column_index_map)) this.options.column_index_map =
            a;
        return true
    };
    this._afterBuildColumnIndexMap = function () {};
    this._beforeSetInitialData = function () {};
    this.setInitialData = function (a) {
        var e = this._beforeSetInitialData(a);
        if (e) a = e;
        this.options.row_count = 0;
        for (var f in a) this.options.data[f] = a[f];
        a.rows && this.setPageSize(a.rows);
        if (a.count) {
            e = this.getPageSize();
            f = a.count % e;
            this.setPageCount((a.count - f) / e + (f > 0 ? 1 : 0))
        }
        a.page && this.setPage(a.page);
        this._afterSetInitialData(this.options.data);
        return true
    };
    this._afterSetInitialData = function () {};
    this._beforeClearInitialData =
        function () {};
    this.clearInitialData = function () {
        this._beforeClearInitialData();
        this.options.data = {};
        this._afterClearInitialData();
        return true
    };
    this._afterClearInitialData = function () {};
    this._beforeSetOriginalData = function () {};
    this.setOriginalData = function (a) {
        var e = this._beforeSetOriginalData(a);
        if (e) a = e;
        if (!this.options.original_data) this.options.original_data = {};
        this.options.original_row_count = 0;
        for (var f in a)
            if (typeof a[f] === "object" && a[f] != null) {
                this.options.original_row_count = a[f].length;
                this.options.original_data[f] =
                    $.extend(true, {}, a[f])
            } else {
                this.options.original_data[f] = a[f];
                this.options.original_row_count++
            }
        this._afterSetOriginalData(this.options.original_data);
        return true
    };
    this._afterSetOriginalData = function () {};
    this._beforeClearOriginalData = function () {};
    this.clearOriginalData = function () {
        this._beforeClearOriginalData();
        this.options.original_data = {};
        this._afterClearOriginalData()
    };
    this._afterClearOriginalData = function () {};
    this._beforeLAOnChange = function () {};
    this._beforeLAInit = function () {};
    this._afterLAInit =
        function () {};
    this._beforeLADelete = function () {};
    this._afterLADelete = function () {};
    this._beforeLAModify = function () {};
    this._afterLAModify = function () {};
    this._beforeLABootstrap = function () {};
    this._afterLABootstrap = function () {};
    this._beforeLAAdd = function () {};
    this._afterLAAdd = function () {};
    this._beforeLAClear = function () {};
    this._afterLAClear = function () {};
    this._beforeLAReorder = function () {};
    this._afterLAReorder = function () {};
    this._beforeLAHide = function () {};
    this._afterLAHide = function () {};
    this._beforeLAShow = function () {};
    this._afterLAShow = function () {};
    this._laOnChange = function (a, e) {
        var f = this.element || $(this);
        if (!this.options.destroyed) {
            var j = parseInt(e.arrIndex);
            this._beforeLAOnChange(a, e, j);
            switch (e.action) {
            case "startup":
                location.reload();
                break;
            case "init":
                this._beforeLAInit(a, e);
                this.options.last_serno = 0;
                delete this.options.data.live;
                this.clearRowCount();
                this.options.data.live = [];
                this.options.data_source = "live";
                this.options.data.columns = e.data;
                this._afterLAInit(a, e);
                f.triggerHandler("liveInit");
                break;
            case "del":
                this._beforeLADelete(a,
                    e, j);
                var g = this.getRowData(j);
                this._LTRemoveRow(j);
                this._afterLADelete(a, e, j, g);
                f.triggerHandler("liveDel");
                break;
            case "modify":
                if (!this.options.data.columns) return;
                this._beforeLAModify(a, e, j);
                g = {};
                for (var c = $.extend({}, this.getRowWidgetData(j)), b = 0, l = e.data.length; b < l; ++b) g[this.options.data.columns[b]] = e.data[b];
                this.setOriginalRowData(j, g, false, undefined, undefined, e);
                this._afterLAModify(a, e, j, g, c);
                f.triggerHandler("liveModify");
                break;
            case "bootstrap_data":
                this._beforeLABootstrap(a, e);
                if (!this.options.columns) {
                    this.options.columns = [];
                    g = 0;
                    for (b = this.options.data.columns.length; g < b; ++g) this.options.columns.push({
                        column: this.options.data.columns[g]
                    });
                    this._buildColumnIndexMap()
                }
                c = 0;
                for (var o = e.data.length; c < o; ++c) {
                    g = e.data[c];
                    var n = {};
                    b = 0;
                    for (l = g.length; b < l; ++b) n[this.options.data.columns[b]] = g[b];
                    g.length && this.addRow(n)
                }
                this._afterLABootstrap(a, e);
                f.triggerHandler("liveBootstrapData");
                break;
            case "add":
                this._beforeLAAdd(a, e, j);
                if (!this.options.columns) {
                    this.options.columns = [];
                    $.isArray(this.options.data.columns) || debugLog("Invalid datatable definition for ",
                        this.element, this.options.data);
                    g = 0;
                    for (b = this.options.data.columns.length; g < b; ++g) this.options.columns.push({
                        column: this.options.data.columns[g]
                    });
                    this._buildColumnIndexMap()
                }
                n = {};
                b = 0;
                for (l = e.data.length; b < l; ++b) n[this.options.data.columns[b]] = e.data[b];
                this.addRow(n);
                this._afterLAAdd(a, e, j, n);
                f.triggerHandler("liveAdd");
                break;
            case "clear":
                this._beforeLAClear(a, e);
                this._clear();
                this._afterLAClear(a, e);
                f.triggerHandler("liveClear");
                break;
            case "reorder":
                this._beforeLAReorder(a, e);
                this._afterLAReorder(a,
                    e);
                break;
            case "hide":
                this._beforeLAHide(a, e, j);
                this._afterLAHide(a, e, j);
                break;
            case "show":
                this._beforeLAShow(a, e, j);
                this._afterLAShow(a, e, j)
            }
            f.triggerHandler("liveEvent");
            this._afterLAOnChange(a, e, j)
        }
    };
    this._afterLAOnChange = function () {};
    this.validRowNum = function (a) {
        if (typeof a != "number" || a < 0 || a >= this.getRowCount()) return false;
        return true
    };
    this.validColNum = function (a) {
        if (typeof a != "number" || a < 0 || a >= this.options.columns.length) return false;
        return true
    };
    this._beforeSetPageSize = function () {};
    this.setPageSize =
        function (a) {
            var e = this._beforeSetPageSize(a);
            if (e) a = e;
            if (!this.options.rest_params) this.options.rest_params = {};
            this.options.rest_params.rows = a;
            this._afterSetPageSize(this.options.rest_params.rows);
            return a
    };
    this._afterSetPageSize = function () {};
    this._beforeSetPage = function () {};
    this.setPage = function (a) {
        var e = this._beforeSetPage(a);
        if (e) a = e;
        if (!this.options.rest_params) this.options.rest_params = {};
        this.options.rest_params.page = a;
        this._afterSetPage(this.options.rest_params.page);
        return a
    };
    this._afterSetPage =
        function () {};
    this._beforeGetPageSize = function () {};
    this.getPageSize = function () {
        this._beforeGetPageSize();
        var a = 0;
        if (this.options.rest_params && this.options.rest_params.rows) a = this.options.rest_params.rows;
        this._afterGetPageSize(a);
        return a
    };
    this._afterGetPageSize = function () {};
    this._beforeGetPage = function () {};
    this.getPage = function () {
        this._beforeGetPage();
        var a = 0;
        if (this.options.rest_params && this.options.rest_params.page) a = this.options.rest_params.page;
        this._afterGetPage(a);
        return a
    };
    this._afterGetPage =
        function () {};
    this._beforeGetPageCount = function () {};
    this.getPageCount = function () {
        this._beforeGetPageCount();
        var a = this.options.page_count,
            e = this._afterGetPageCount(a);
        if (e) a = e;
        return a
    };
    this._afterGetPageCount = function () {};
    this._beforeSetPageCount = function () {};
    this.setPageCount = function (a) {
        var e = this._beforeSetPageCount();
        if (e) a = e;
        this.options.page_count = a;
        this._afterGetPageCount(a);
        return a
    };
    this._afterSetPageCount = function () {};
    this._beforeGetRowCount = function () {};
    this.getRowCount = function () {
        this._beforeGetRowCount();
        if (!this.options.row_count)
            if (this.options.data)
                if (this.options.data_source == "ROW_SOURCE")
                    if (!this.options.data[this.options.columns[0].row_source] || !(this.options.data[this.options.columns[0].row_source] instanceof Array)) this.options.row_count = 0;
                    else {
                        for (var a = 0, e = this.options.columns.length; a < e; ++a)
                            if (this.options.columns[a].row_source) {
                                var f = this.options.data[this.options.columns[a].row_source];
                                if (f instanceof Array && f.length) {
                                    this.options.row_count = f.length;
                                    break
                                }
                            }
                        if (!this.options.row_count) this.options.row_count =
                            0
                    } else this.options.row_count = !this.options.data[this.options.data_source] || !(this.options.data[this.options.data_source] instanceof Array) ? 0 : this.options.data[this.options.data_source].length;
                    else this.options.row_count = 0;
        this._afterGetRowCount();
        return this.options.row_count
    };
    this._afterGetRowCount = function () {};
    this._beforeGetOriginalRowCount = function () {};
    this.getOriginalRowCount = function () {
        this._beforeGetOriginalRowCount();
        if (!this.options.original_row_count)
            if (this.options.data)
                if (this.options.data_source ==
                    "ROW_SOURCE") this.options.row_count = !this.options.original_data[this.options.columns[0].row_source] || !(this.options.original_data[this.options.columns[0].row_source] instanceof Array) ? 0 : this.options.original_data[this.options.columns[0].row_source].length;
                else if (!this.options.original_data[this.options.data_source] || !(this.options.original_data[this.options.data_source] instanceof Array)) this.options.original_row_count = 0;
        else this.options.originial_row_count = this.options.original_data[this.options.data_source].length;
        else this.options.original_row_count = 0;
        this._afterGetOriginalRowCount();
        return this.options.original_row_count
    };
    this._afterGetOriginalRowCount = function () {};
    this._beforeGetOriginalCellData = function () {};
    this.getOriginalCellData = function (a, e) {
        if (this.validRowNum(a))
            if (this.validColNum(e)) {
                this._beforeGetOriginalCellData(a, e);
                var f = this._getCellData("original_data", a, e),
                    j = this._afterGetOriginalCellData(a, e, f);
                if (j) f = j;
                return f
            } else debugLog('cui.dataTableClass.js: Attempted to get cell data for column index "' +
                e + '" which is out of range or invalid in getOriginalCellData().', true);
            else debugLog('cui.dataTableClass.js: Attempted to get cell data for row index "' + a + '" which is out of range or invalid in getOriginalCellData().', true)
    };
    this._afterGetOriginalCellData = function () {};
    this._beforeGetOriginalRowData = function () {};
    this.getOriginalRowData = function (a) {
        if (!this.validRowNum(a)) {
            debugLog('dataTable Error: Attempted to get data for row index "' + a + '" which is out of range or invalid in getOriginalRowData().',
                true);
            return false
        }
        this._beforeGetOriginalRowData(a);
        var e = this._getRowData("original_data", a);
        if (a = this._afterGetOriginalRowData(a, e)) e = a;
        return e
    };
    this._afterGetOriginalRowData = function () {};
    this.isCellDirty = function (a, e) {
        if (this.validRowNum(a))
            if (this.validColNum(e)) {
                if (a >= this.getOriginalRowCount()) return true;
                if (this.getCellData(a, e) != this.getOriginalCellData(a, e)) return true;
                return false
            } else debugLog('dataTable Error: Attempted to test cell data for column index "' + e + '" which is out of range or invalid in isCellDirty().',
                true);
            else debugLog('dataTable Error: Attempted to test cell data for row index "' + a + '" which is out of range or invalid in isCellDirty().', true)
    };
    this.isExtraRowDataDirty = function (a, e) {
        if (this.validRowNum(a)) {
            if (a > this.getOriginalRowCount()) return true;
            if (this.getExtraCellData(a, e) != this.getOriginalExtraCellData(a, e)) return true;
            return false
        } else debugLog('dataTable Error: Attempted to test cell data for row index "' + a + '" which is out of range or invalid in isCellDirty().', true)
    };
    this._beforeGetCellData =
        function () {};
    this.getCellData = function (a, e) {
        if (this.validRowNum(a))
            if (this.validColNum(e)) {
                this._beforeGetCellData(a, e);
                var f = this._getCellData("data", a, e);
                this._afterGetCellData(a, e, f);
                return f
            } else debugLog('dataTable Error: Attempted to get cell data for column index "' + e + '" which is out of range or invalid in getCellData().', true);
            else debugLog('dataTable Error: Attempted to get cell data for row index "' + a + '" which is out of range or invalid in getCellData().', true)
    };
    this._getCellData = function (a,
        e, f) {
        if (this.options[a] && this.options.columns[f]) {
            if (this.options.data_source == "ROW_SOURCE") {
                if (!this.options.columns[f].row_source || !(this.options.columns[f].row_source in this.options[a])) return;
                a = this.options[a][this.options.columns[f].row_source][e]
            } else {
                if (!this.options.columns[f].column || !this.options[a][this.options.data_source] || !this.options[a][this.options.data_source][e] || !(this.options.columns[f].column in this.options[a][this.options.data_source][e])) return;
                a = this.options[a][this.options.data_source][e][this.options.columns[f].column]
            }
            return a
        }
    };
    this._afterGetCellData = function () {};
    this._beforeGetExtraCellData = function () {};
    this.getExtraCellData = function (a, e) {
        if (this.validRowNum(a)) {
            this._beforeGetExtraCellData(a, e);
            var f = this._getExtraCellData("data", a, e);
            this._afterGetExtraCellData(a, e, f);
            return f
        } else debugLog('dataTable Error: Attempted to get cell data for row index "' + a + '" which is out of range or invalid in getExtraCellData().', true)
    };
    this.getOriginalExtraCellData = function (a, e) {
        if (this.validRowNum(a)) {
            this._beforeGetExtraCellData(a,
                e);
            var f = this._getExtraCellData("original_data", a, e);
            this._afterGetExtraCellData(a, e, f);
            return f
        } else debugLog('dataTable Error: Attempted to get cell data for row index "' + a + '" which is out of range or invalid in getExtraCellData().', true)
    };
    this._getExtraCellData = function (a, e, f) {
        if (this.options[a]) return this.options.data_source == "ROW_SOURCE" ? this.options[a][f][e] : this.options[a][this.options.data_source][e][f]
    };
    this._afterGetExtraCellData = function () {};
    this._beforeSetOriginalExtraRowData = function () {};
    this.setOriginalExtraRowData = function (a, e, f) {
        if (typeof f !== "object" && f !== undefined) f = decodeURIComponent(f) || f;
        var j = this._beforeSetOriginalExtraRowData(a, e, f);
        if (j) a = j;
        if (this.options.data_source == "ROW_SOURCE") this.options.original_data[e][a] = f;
        else if (this.options.original_data[this.options.data_source][a]) this.options.original_data[this.options.data_source][a][e] = this.options.allow_parent_extra_row_data && this.options.original_data[e] && f === undefined ? this.options.original_data[e] : f;
        this._afterSetOriginalExtraRowData(a,
            e, f);
        return true
    };
    this._afterSetOriginalExtraRowData = function () {};
    this._beforeSetExtraRowData = function () {};
    this.setExtraRowData = function (a, e, f) {
        if (!$.isArray(f) && typeof f != "object") f = decodeURIComponent(f) || f;
        var j = this._beforeSetExtraRowData(a, e, f);
        if (j) a = j;
        if (this.options.data_source == "ROW_SOURCE") this.options.data[e][a] = f;
        else if (this.options.data[this.options.data_source][a]) this.options.data[this.options.data_source][a][e] = f;
        if (f !== null && f !== undefined && this.options.dirty_tracking && this.options.dirty_exclusion_lists &&
            this.options.dirty_exclusion_lists instanceof Array) {
            j = 0;
            for (var g = this.options.dirty_exclusion_lists.length; j < g; ++j) {
                var c = this.options.dirty_exclusion_lists[j];
                if (c && c instanceof Array && c.indexOf(e) >= 0)
                    for (var b = 0, l = c.length; b < l; ++b) {
                        var o = c[b];
                        if (o != e)
                            if (this.options.data_source == "ROW_SOURCE") this.options.data[o][a] = null;
                            else this.options.data[this.options.data_source][a][o] = null
                    }
            }
        }
        this._afterSetExtraRowData(a, e, f);
        return true
    };
    this._afterSetExtraRowData = function () {};
    this._beforeGetExtraRowData =
        function () {};
    this.getExtraRowData = function (a, e) {
        var f;
        if (f = this._beforeGetExtraRowData(a, e)) a = f;
        f = this.options.data_source == "ROW_SOURCE" ? this.options.data[e][a] : this.options.data[this.options.data_source][a][e];
        this._afterGetExtraRowData(a, e, f);
        return f
    };
    this._afterGetExtraRowData = function () {};
    this._beforeSetOriginalCellData = function () {};
    this.setOriginalCellData = function (a, e, f) {
        var j = this.element || $(this);
        if (this._is_meta_index(e) && this.options.lt) return false;
        if (!this.validRowNum(a)) {
            debugLog('dataTable Error: Attempted to set cell data for row index "' +
                a + '" which is out of range or invalid in setOriginalCellData().', true);
            return false
        }
        if (!this.validColNum(e)) {
            debugLog('dataTable Error: Attempted to set cell data for column index "' + e + '" which is out of range or invalid in setOriginalCellData().', true);
            return false
        }
        if (typeof f != "number" && typeof f != "string" && typeof f !== "undefined") {
            debugLog("dataTable Error: Attempted to set cell data value for row " + a + ", column " + e + " which is not a number or string in setOriginalCellData():", true, f);
            return false
        }
        f =
            decodeURIComponent(f) || f;
        var g = this._beforeSetOriginalCellData(a, e, f);
        if (g) a = g;
        if (!this.options.original_data) this.options.original_data = {};
        if (this.options.data_source == "ROW_SOURCE") {
            this.options.original_data[this.options.columns[e].row_source] || (this.options.original_data[this.options.columns[e].row_source] = []);
            this.options.original_data[this.options.columns[e].row_source][a] = f
        } else {
            this.options.original_data[this.options.data_source] || (this.options.original_data[this.options.data_source] = []);
            this.options.original_data[this.options.data_source][a] ||
                (this.options.original_data[this.options.data_source][a] = {});
            this.options.original_data[this.options.data_source][a][this.options.columns[e].column] = f
        }
        j.triggerHandler("updateCell");
        this._afterSetOriginalCellData(a, e, f);
        return true
    };
    this._afterSetOriginalCellData = function () {};
    this._beforeSetCellData = function () {};
    this.setCellData = function (a, e, f) {
        var j = this.element || $(this);
        if (this._is_meta_index(e) && this.options.lt) return false;
        if (!this.validRowNum(a)) {
            debugLog('dataTable Error: Attempted to set cell data for row index "' +
                a + '" which is out of range or invalid in setCellData().', true);
            return false
        }
        if (!this.validColNum(e)) {
            debugLog('dataTable Error: Attempted to set cell data for column index "' + e + '" which is out of range or invalid in setCellData().', true);
            return false
        }
        if (typeof f != "number" && typeof f != "string" && typeof f !== "undefined") {
            debugLog("dataTable Error: Attempted to set cell data value for row " + a + ", column " + e + " which is not a number or string in setCellData():", true, f);
            return false
        }
        f = decodeURIComponent(f) ||
            f;
        var g = this._beforeSetCellData(a, e, f);
        if (g) a = g;
        if (this.options.data_source == "ROW_SOURCE") this.options.data[this.options.columns[e].row_source][a] = f;
        else this.options.data[this.options.data_source][a][this.options.columns[e].column] = f; if (f !== null && f !== undefined && this.options.dirty_tracking && this.options.dirty_exclusion_lists && this.options.dirty_exclusion_lists instanceof Array) {
            g = this.getColumnName(e);
            for (var c = 0, b = this.options.dirty_exclusion_lists.length; c < b; ++c) {
                var l = this.options.dirty_exclusion_lists[c];
                if (l && l instanceof Array && l.indexOf(g) >= 0)
                    for (var o = 0, n = l.length; o < n; ++o) {
                        var q = l[o];
                        if (q != g) {
                            q = this.getColumnIndex(q);
                            if (this.options.data_source == "ROW_SOURCE") this.options.data[this.options.columns[q].row_source][a] = null;
                            else this.options.data[this.options.data_source][a][this.options.columns[q].column] = null
                        }
                    }
            }
        }
        j.triggerHandler("updateCell");
        this._afterSetCellData(a, e, f);
        return true
    };
    this._afterSetCellData = function () {};
    this._beforeGetColumnCount = function () {};
    this.getColumnCount = function (a) {
        this._beforeGetColumnCount(a);
        var e = 0;
        if (this.options.columns) e = this.options.columns.length;
        if (a = this._afterGetColumnCount(e, a)) e = a;
        return e
    };
    this._afterGetColumnCount = function () {};
    this._beforeGetColumnDef = function () {};
    this.getColumnDef = function (a, e) {
        var f = this._beforeGetColumnDef(a, e);
        if (f) a = f;
        if (!this.validColNum(a)) {
            debugLog('cui.dataTableClass.js: Attempted to get column definition for column index "' + a + '" which is out of range or invalid in getColumnDef().', true);
            return false
        }
        f = this.options.columns[a];
        var j = this._afterGetColumnDef(a,
            f, e);
        if (j) f = j;
        return f
    };
    this._afterGetColumnDef = function () {};
    this._beforeGetColumnName = function () {};
    this.getColumnName = function (a) {
        if (!this.validColNum(a)) {
            debugLog('cui.dataTableClass.js: Attempted to get column name for column index "' + a + '" which is out of range or invalid in getColumnName().', true);
            return false
        }
        this._beforeGetColumnName(a);
        var e = this.options.data_source == "ROW_SOURCE" ? this.options.columns[a].row_source : this.options.columns[a].column;
        this._afterGetColumnName(a);
        return e
    };
    this._afterGetColumnName =
        function () {};
    this._beforeGetColumnNum = function () {};
    this.getColumnNum = function (a) {
        var e = -1;
        this._beforeGetColumnNum(a);
        for (var f = 0, j = this.getColumnCount(); f < j; f++)
            if ((this.options.data_source == "ROW_SOURCE" ? this.options.columns[f].row_source : this.options.columns[f].column) == a) {
                e = f;
                break
            }
        this._afterGetColumnNum(a, e);
        return e
    };
    this._afterGetColumnNum = function () {};
    this._beforeHasColumn = function () {};
    this.hasColumn = function (a) {
        var e = this._beforeHasColumn(a);
        if (e) a = e;
        e = false;
        if (a in this.options.column_index_map) e =
            true;
        if (this.hasExtraRowData(a)) e = true;
        this._afterHasColumn(a, e);
        return e
    };
    this._afterHasColumn = function () {};
    this._beforeHasExtraRowData = function () {};
    this.hasExtraRowData = function (a) {
        var e = false;
        a = this._beforeHasExtraRowData(a) || a;
        if ($.isArray(this.options.extra_row_data)) e = $.inArray(a, this.options.extra_row_data) !== -1;
        else if (this.options.extra_row_data)
            for (var f in this.options.extra_row_data)
                if (this.options.extra_row_data[f] == a) {
                    e = true;
                    break
                }
        this._afterHasExtraRowData(a, e);
        return e
    };
    this._afterHasExtraRowData =
        function () {};
    this._beforeGetColumnIndex = function () {};
    this.getColumnIndex = function (a) {
        if (!(a in this.options.column_index_map)) {
            debugLog('cui.dataTableClass.js: Attempted to get column index for unknown column "' + a + '" in getColumnIndex(). Columns: ', true, this.options.columns);
            return false
        }
        this._beforeGetColumnIndex(a);
        var e = this.options.column_index_map[a];
        this._afterGetColumnIndex(a);
        return e
    };
    this._afterGetColumnIndex = function () {};
    this._beforeGetRowData = function () {};
    this.getRowData = function (a) {
        if (!this.validRowNum(a)) {
            debugLog('cui.dataTableClass.js: Attempted to get data for row index "' +
                a + '" which is out of range or invalid in getRowData().', true);
            return false
        }
        var e = this._beforeGetRowData(a);
        if (e) a = e;
        e = this._getRowData("data", a);
        if (a = this._afterGetRowData(a, e)) e = a;
        return e
    };
    this._getRowData = function (a, e) {
        for (var f = {}, j = 0, g = this.options.columns.length; j < g; ++j) {
            var c = this.getColumnName(j);
            if (c !== undefined) f[c] = this._getCellData(a, e, j)
        }
        return f
    };
    this._afterGetRowData = function () {};
    this._beforeGetRowWidgetData = function () {};
    this.getRowWidgetData = function (a) {
        var e, f, j;
        if (e = this._beforeGetRowWidgetData(a)) a =
            e;
        e = this.getRowData(a);
        if ($.isArray(this.options.extra_row_data))
            for (f = 0; f < this.options.extra_row_data.length; f++)
                if (this.options.data_source === "ROW_SOURCE") {
                    j = this.options.extra_row_data[f];
                    e[j] = this.options.data[j][a]
                } else {
                    j = this.options.extra_row_data[f];
                    if (j in this.options.data[this.options.data_source][a]) e[j] = this.options.data[this.options.data_source][a][j]
                } else if (this.options.extra_row_data)
            for (j in this.options.extra_row_data) e[j] = this.options.data_source === "ROW_SOURCE" ? this.options.data[this.options.extra_row_data[j]][a] :
                this.options.data[this.options.data_source][a][this.options.extra_row_data[j]];
        return e = this._afterGetRowWidgetData(a, e) || e
    };
    this._afterGetRowWidgetData = function () {};
    this._beforeGetOriginalRowWidgetData = function () {};
    this.getOriginalRowWidgetData = function (a) {
        var e, f, j;
        if (e = this._beforeGetOriginalRowWidgetData(a)) a = e;
        e = this.getOriginalRowData(a);
        if ($.isArray(this.options.extra_row_data))
            for (f = 0; f < this.options.extra_row_data.length; f++)
                if (this.options.data_source === "ROW_SOURCE") {
                    j = this.options.extra_row_data[f];
                    e[j] = this.options.original_data[j][a]
                } else {
                    j = this.options.extra_row_data[f];
                    if (j in this.options.original_data[this.options.data_source][a]) e[j] = this.options.original_data[this.options.data_source][a][j]
                } else if (this.options.extra_row_data)
            for (j in this.options.extra_row_data) e[j] = this.options.data_source === "ROW_SOURCE" ? this.options.original_data[this.options.extra_row_data[j]][a] : this.options.original_data[this.options.data_source][a][this.options.extra_row_data[j]];
        return e = this._afterGetOriginalRowWidgetData(a,
            e) || e
    };
    this._afterGetOriginalRowWidgetData = function () {};
    this._saveSuccessCallback = function (a, e, f, j, g, c) {
        var b;
        c = (rc = (j || g) && this.options.add_edit_action && this.options.add_edit_action.rest_container ? this._validateRESTContainer(c, this.options.add_edit_action.rest_container) : this._validateRESTContainer(c)) ? c[rc] : c;
        if (this.options.data_source === "live") {
            if (this.options.live_table_action_data_source) c = c[this.options.live_table_action_data_source] || c
        } else if (this.options.data_source !== "ROW_SOURCE") c = c[this.options.data_source] ||
            c;
        for (var l in c)
            if (this.options.dirty_tracking)
                if (this.hasExtraRowData(l)) {
                    this.setExtraRowData(a, l, c[l]);
                    this.setOriginalExtraRowData(a, l, c[l])
                } else {
                    if (this.hasColumn(l)) {
                        b = this.getColumnIndex(l);
                        this.setCellData(a, b, c[l]);
                        this.setOriginalCellData(a, b, c[l])
                    }
                } else if (this.hasExtraRowData(l)) this.setExtraRowData(a, l, c[l]);
        else this.hasColumn(l) && this.setCellData(a, this.getColumnIndex(l), c[l]);
        typeof f == "function" && f();
        this.element && this.element.triggerHandler("updateRow");
        this._afterSetRowData(a,
            c, true, e);
        if (j) {
            this.options.original_row_count++;
            this._setBeingAdded(a, false)
        }
        g && this._setBeingEdited(a, false)
    };
    this._beforeResetDirtyRow = function () {};
    this.resetDirtyRow = function (a, e) {
        var f = this.getRowWidgetData(a),
            j = this.getOriginalRowWidgetData(a),
            g = this._beforeResetDirtyRow(a, f, j, e);
        if (g) a = g;
        for (var c in f)
            if (this.hasExtraRowData(c)) this.setExtraRowData(a, c, j[c]);
            else {
                g = this.getColumnIndex(c);
                this.setCellData(a, g, j[c])
            }
        this._afterResetDirtyRow(a, f, j, e)
    };
    this._afterResetDirtyRow = function () {};
    this._saveErrorCallback =
        function (a, e, f, j) {
            var g = this;
            return function (c, b, l) {
                typeof j == "function" && j(c, b, l, a, f, e);
                g._afterSetRowData(a, f, false, e)
            }
    };
    this._beforeSetOriginalRowData = function () {};
    this.setOriginalRowData = function (a, e, f) {
        this.element || $(this);
        if (!this.validRowNum(a)) {
            debugLog('cui.dataTableClass.js: Attempted to set data for row index "' + a + '" which is out of range or invalid in setOriginalRowData().', true);
            return false
        }
        if (!(e instanceof Array || typeof e == "object" && !$.isEmptyObject(e))) {
            debugLog("cui.dataTableClass.js: Row data is not a valid type or is empty in setOriginalRowData(): ",
                true, e);
            return false
        }
        this.isBeingAdded(a, f);
        this.isBeingEdited(a, f);
        var j = this._beforeSetOriginalRowData(a, e, f);
        if (j) e = j;
        for (var g in e)
            if (this.options.dirty_tracking)
                if (this.hasExtraRowData(g)) {
                    original_val = this.getOriginalExtraCellData(a, g);
                    current_val = this.getExtraCellData(a, g);
                    original_val == current_val && this.setExtraRowData(a, g, e[g]);
                    this.setOriginalExtraRowData(a, g, e[g])
                } else {
                    if (this.hasColumn(g) && (col_index = this.getColumnIndex(g)) !== false) {
                        col_index = this.getColumnIndex(g);
                        original_val = this.getOriginalCellData(a,
                            col_index);
                        current_val = this.getCellData(a, col_index);
                        original_val == current_val && this.setCellData(a, col_index, e[g]);
                        this.setOriginalCellData(a, col_index, e[g])
                    }
                } else if (this.hasExtraRowData(g)) this.setExtraRowData(a, g, e[g]);
        else this.hasColumn(g) && this.setCellData(a, this.getColumnIndex(g), e[g]);
        this._afterSetOriginalRowData(a, e, f);
        return true
    };
    this._afterSetOriginalRowData = function () {};
    this._beforeSetRowData = function () {};
    this.setRowData = function (a, e, f, j, g, c) {
        this.element || $(this);
        if (!this.validRowNum(a)) {
            debugLog('cui.dataTableClass.js: Attempted to set data for row index "' +
                a + '" which is out of range or invalid in setRowData().', true);
            return false
        }
        if (!(e instanceof Array || typeof e == "object" && !$.isEmptyObject(e))) {
            debugLog("cui.dataTableClass.js: Row data is not a valid type or is empty in setRowData(): ", true, e);
            return false
        }
        var b = this.isBeingAdded(a, c),
            l = this.isBeingEdited(a, c),
            o;
        if (this.options.add_edit_action) o = this._getSaveParams(a, e, b, c);
        var n = this._beforeSetRowData(a, e, c);
        if (n) e = n;
        j = CUI.FunctionFactory.build(this._saveSuccessCallback, this, {
            context: "argument"
        }, [a, c, j, b, l]);
        g = CUI.FunctionFactory.build(this._saveErrorCallback, this, {
            context: "argument"
        }, [a, c, e, g]);
        this.options.add_edit_action && f ? this._executeSaveREST(o, a, j, g, c) : j(e);
        return true
    };
    this._afterSetRowData = function () {};
    this._beforeGetSaveParams = function () {};
    this._getSaveParams = function (a, e, f, j) {
        var g = this._beforeGetSaveParams(a, j);
        if (g) a = g;
        g = this._getActionParams(a, "add_edit_action", f ? "POST" : "PUT");
        for (var c in e) g[c] = e[c];
        if (this.options.switched_value_key) {
            e = this.options.switched_value_sets[g[this.options.switched_value_key]];
            var b = this.options.switched_value_always || [];
            if (e) {
                if (typeof e === "string") e = this.options.switched_value_sets[e];
                for (var l in g) l !== this.options.switched_value_key && $.inArray(l, e) === -1 && $.inArray(l, b) === -1 && delete g[l]
            }
        }
        if (this.options.add_edit_action.only_params) {
            l = {};
            for (var o in this.options.add_edit_action.only_params) {
                e = this.options.add_edit_action.only_params[o];
                if (e in g) l[e] = g[e]
            }
            g = l
        } else if (this.options.add_edit_action.filter_params) {
            l = {};
            for (c in g)
                if ($.inArray(c, this.options.add_edit_action.filter_params) == -1) l[c] = g[c];
            g = l
        }
        if (f && this.options.add_edit_action.filter_params_add)
            for (var n in g) $.inArray(n, this.options.add_edit_action.filter_params_add) > -1 && delete g[n];
        if (f) {
            l = {};
            for (c in g) {
                o = $.inArray(c, this.options.primary_keys) !== -1;
                n = g[c] !== "undefined" && typeof g[c] !== "undefined" && g[c] !== "";
                if (!o || o && n) l[c] = g[c]
            }
            g = l
        }
        if (l = this._afterGetSaveParams(a, g, f, j)) g = l;
        return g
    };
    this._afterGetSaveParams = function () {};
    this._beforeExecuteSaveREST = function () {};
    this._executeSaveREST = function (a, e, f, j, g) {
        this._beforeExecuteSaveREST(a,
            e, g);
        this.doREST(this.options.add_edit_action.real_method, this.options.add_edit_action.rest, a, {
            success: f,
            error: j
        });
        this._afterExecuteSaveREST(a, e, g)
    };
    this._afterExecuteSaveREST = function () {};
    this._beforeGetColumnData = function () {};
    this.getColumnData = function (a) {
        if (typeof a != "string" && typeof a != "number") debugLog('cui.dataTableClass.js: Requested value for unknown column "' + a + '" in getColumnData().', true);
        else {
            if (typeof a == "string") a = this.getColumnIndex(a);
            this._beforeGetColumnData(a);
            for (var e = [], f =
                    0, j = this.getRowCount(); f < j; ++f) {
                var g = this.getCellData(f, a);
                if (parseInt(g) == g) e.push(parseInt(g));
                else parseFloat(g) == g ? e.push(parseFloat(g)) : e.push(g)
            }
            this._afterGetColumnData(a, e);
            return e
        }
    };
    this._afterGetColumnData = function () {};
    this._beforeGetAnyColumnData = function () {};
    this.getAnyColumnData = function (a) {
        var e;
        if (typeof a != "string" && typeof a != "number") debugLog('cui.dataTableClass.js: Requested value for unknown column "' + a + '" in getAnyColumnData().', true);
        else {
            if (typeof a == "string") {
                if (!this.hasExtraRowData(a) && !this.hasColumn(a)) {
                    debugLog('Invalid column "' + a + '" specified in call to getAnyColumnData().', true);
                    return
                }
                this.hasExtraRowData(a) || (a = this.getColumnIndex(a))
            }
            this._beforeGetAnyColumnData(a);
            var f = [];
            for (r_idx = 0; r_idx < this.getRowCount(); r_idx++) {
                e = typeof a === "string" && this.hasExtraRowData(a) ? this.getExtraRowData(r_idx, a) : this.getCellData(r_idx, a);
                f.push(e)
            }
            this._afterGetAnyColumnData(a, f);
            return f
        }
    };
    this._afterGetAnyColumnData = function () {};
    this._beforeGetAnyOriginalColumnData = function () {};
    this.getAnyOriginalColumnData =
        function (a) {
            var e;
            if (typeof a != "string" && typeof a != "number") debugLog('cui.dataTableClass.js: Requested value for unknown column "' + a + '" in getAnyOriginalColumnData().', true);
            else {
                if (typeof a == "string") {
                    if (!this.hasExtraRowData(a) && !this.hasColumn(a)) {
                        debugLog('Invalid column "' + a + '" specified in call to getAnyOriginalColumnData().', true);
                        return
                    }
                    this.hasExtraRowData(a) || (a = this.getColumnIndex(a))
                }
                this._beforeGetAnyOriginalColumnData(a);
                var f = [];
                for (r_idx = 0; r_idx < this.getRowCount(); r_idx++) {
                    e = typeof a ===
                        "string" && this.hasExtraRowData(a) ? this.getOriginalExtraCellData(r_idx, a) : this.getOriginalCellData(r_idx, a);
                    f.push(e)
                }
                this._afterGetAnyOriginalColumnData(a, f);
                return f
            }
    };
    this._afterGetAnyOriginalColumnData = function () {};
    this.findRowId = function (a, e) {
        this.element || $(this);
        var f = false;
        if (!this.getRowCount()) return -1;
        if (!this.hasColumn(a) && !this.hasExtraRowData(a)) return -1;
        var j;
        if (!this.hasExtraRowData(a)) {
            f = true;
            j = this.getColumnIndex(a)
        }
        for (var g = 0, c = this.getRowCount(); g < c; ++g) {
            var b = "";
            b = f ? this.getCellData(g,
                j) : this.getExtraRowData(g, a);
            if (b == e) return g
        }
        return -1
    };
    this.findRows = function (a, e) {
        this.element || $(this);
        var f = false;
        if (!this.getRowCount()) return -1;
        if (!this.hasColumn(a) && !this.hasExtraRowData(a)) return -1;
        var j;
        if (!this.hasExtraRowData(a)) {
            f = true;
            j = this.getColumnIndex(a)
        }
        for (var g = [], c = 0, b = this.getRowCount(); c < b; ++c) {
            var l = "";
            l = f ? this.getCellData(c, j) : this.getExtraRowData(c, a);
            l == e && g.push(c)
        }
        return g
    };
    this._beforeAddRow = function () {};
    this.addRow = function (a) {
        var e = this.element || $(this);
        if (!(a instanceof Array || typeof a == "object" && !$.isEmptyObject(a))) {
            debugLog("cui.dataTableClass.js: Attempted to add a row using row data which is neither an array or object, or is empty in addRow():", true, a);
            return false
        }
        var f = a;
        if (a instanceof Array) {
            f = {};
            for (var j = 0, g = a.length; j < g; ++j) f[this.getColumnName(j)] = decodeURIComponent(a[j]) || a[j]
        }
        if (a = this._beforeAddRow(f)) f = a;
        a = this.options.row_count;
        this.options.row_count++;
        this.isBeingAdded(a) || this.options.original_row_count++;
        if (this.options.data_source == "ROW_SOURCE") {
            j =
                0;
            for (g = this.options.columns.length; j < g; ++j) {
                var c = this.options.columns[j].row_source;
                this.options.data[c] || (this.options.data[c] = []);
                this.options.data[c].push(f[c]);
                this.setOriginalCellData(a, j, f[c])
            }
            if ($.isArray(this.options.extra_row_data))
                for (j = 0; j < this.options.extra) {
                e = typeof a === "string" && this.hasExtraRowData(a) ? this.getExtraRowData(r_idx, a) : this.getCellData(r_idx, a);
                f.push(e)
            }
            this._afterGetAnyColumnData(a, f);
            return f
        }
    };
    this._afterGetAnyColumnData = function () {};
    this._beforeGetAnyOriginalColumnData = function () {};
    this.getAnyOriginalColumnData =
        function (a) {
            var e;
            if (typeof a != "string" && typeof a != "number") debugLog('cui.dataTableClass.js: Requested value for unknown column "' + a + '" in getAnyOriginalColumnData().', true);
            else {
                if (typeof a == "string") {
                    if (!this.hasExtraRowData(a) && !this.hasColumn(a)) {
                        debugLog('Invalid column "' + a + '" specified in call to getAnyOriginalColumnData().', true);
                        return
                    }
                    this.hasExtraRowData(a) || (a = this.getColumnIndex(a))
                }
                this._beforeGetAnyOriginalColumnData(a);
                var f = [];
                for (r_idx = 0; r_idx < this.getRowCount(); r_idx++) {
                    e = typeof a ===
                        "string" && this.hasExtraRowData(a) ? this.getOriginalExtraCellData(r_idx, a) : this.getOriginalCellData(r_idx, a);
                    f.push(e)
                }
                this._afterGetAnyOriginalColumnData(a, f);
                return f
            }
    };
    this._afterGetAnyOriginalColumnData = function () {};
    this.findRowId = function (a, e) {
        this.element || $(this);
        var f = false;
        if (!this.getRowCount()) return -1;
        if (!this.hasColumn(a) && !this.hasExtraRowData(a)) return -1;
        var j;
        if (!this.hasExtraRowData(a)) {
            f = true;
            j = this.getColumnIndex(a)
        }
        for (var g = 0, c = this.getRowCount(); g < c; ++g) {
            var b = "";
            b = f ? this.getCellData(g,
                j) : this.getExtraRowData(g, a);
            if (b == e) return g
        }
        return -1
    };
    this.findRows = function (a, e) {
        this.element || $(this);
        var f = false;
        if (!this.getRowCount()) return -1;
        if (!this.hasColumn(a) && !this.hasExtraRowData(a)) return -1;
        var j;
        if (!this.hasExtraRowData(a)) {
            f = true;
            j = this.getColumnIndex(a)
        }
        for (var g = [], c = 0, b = this.getRowCount(); c < b; ++c) {
            var l = "";
            l = f ? this.getCellData(c, j) : this.getExtraRowData(c, a);
            l == e && g.push(c)
        }
        return g
    };
    this._beforeAddRow = function () {};
    this.addRow = function (a) {
        var e = this.element || $(this);
        if (!(a instanceof Array || typeof a == "object" && !$.isEmptyObject(a))) {
            debugLog("cui.dataTableClass.js: Attempted to add a row using row data which is neither an array or object, or is empty in addRow():", true, a);
            return false
        }
        var f = a;
        if (a instanceof Array) {
            f = {};
            for (var j = 0, g = a.length; j < g; ++j) f[this.getColumnName(j)] = decodeURIComponent(a[j]) || a[j]
        }
        if (a = this._beforeAddRow(f)) f = a;
        a = this.options.row_count;
        this.options.row_count++;
        this.isBeingAdded(a) || this.options.original_row_count++;
        if (this.options.data_source == "ROW_SOURCE") {
            j =
                0;
            for (g = this.options.columns.length; j < g; ++j) {
                var c = this.options.columns[j].row_source;
                this.options.data[c] || (this.options.data[c] = []);
                this.options.data[c].push(f[c]);
                this.setOriginalCellData(a, j, f[c])
            }
            if ($.isArray(this.options.extra_row_data))
                for (j = 0; j < this.options.extra_row_data.length; j++) {
                    var b = this.options.extra_row_data[j];
                    this.options.data[b] = this.options.data[b] || [];
                    this.options.data[b].push(f[c]);
                    this.setOriginalExtraRowData(a, b, f[c])
                } else if (this.options.extra_row_data)
                    for (b in this.options.extra_row_data) {
                        this.options.data[b] =
                            this.options.data[b] || [];
                        this.options.data[b].push(f[c]);
                        this.setOriginalExtraRowData(a, b, f[c])
                    }
        } else {
            c = this.options.data_source;
            g = {};
            for (j = 0; j < this.options.columns.length; j++) {
                var l = this.getColumnName(j);
                g[l] = f[l];
                this.setOriginalCellData(a, j, f[l])
            }
            if ($.isArray(this.options.extra_row_data)) {
                for (j = 0; j < this.options.extra_row_data.length; j++) {
                    b = this.options.extra_row_data[j];
                    this.setOriginalExtraRowData(a, b, f[b])
                }
                g = this.options.original_data[c][a]
            } else if (this.options.extra_row_data)
                for (b in this.options.extra_row_data) {
                    g[b] =
                        f[b];
                    this.setOriginalExtraRowData(a, b, f[b])
                }
            if (!this.options.data) this.options.data = {};
            this.options.data[c] || (this.options.data[c] = []);
            this.options.data[c].push($.extend(true, {}, g))
        }
        e.triggerHandler("addRow");
        this._afterAddRow(f, a);
        return a
    };
    this._afterAddRow = function () {};
    this._beforeAddEmptyRow = function () {};
    this.addEmptyRow = function () {
        for (var a = [], e = 0, f = this.options.columns.length; e < f; ++e) a.push("");
        if (e = this._beforeAddEmptyRow(a)) a = e;
        this._setBeingAdded(this.options.row_count, true);
        e = this.addRow(a);
        this._afterAddEmptyRow(a, e);
        return e
    };
    this._afterAddEmptyRow = function () {};
    this._getDeleteSuccessCallbackRef = function (a, e, f, j, g, c) {
        var b = this;
        return function () {
            if (!(b.options.live_table && !c)) {
                if (b.options.data_source == "ROW_SOURCE")
                    for (var l = 0, o = b.options.columns.length; l < o; ++l) {
                        var n = b.options.columns[l].row_source;
                        b.options.data[n] && a in b.options.data[n] && b.options.data[n].splice(a, 1)
                    } else {
                        l = b.options.data_source;
                        b.options.data[l] && a in b.options.data[l] && b.options.data[l].splice(a, 1)
                    }
                b.options.original_row_count--;
                typeof f == "function" && f(a, e);
                b.element && b.element.triggerHandler("deleteRow");
                b._afterDeleteRow(a, true, e);
                j && b._setBeingAdded(a, false);
                g && b._setBeingEdited(a, false)
            }
        }
    };
    this._getDeleteErrorCallbackRef = function (a, e, f) {
        var j = this;
        return function (g, c, b) {
            typeof f == "function" && f(g, c, b, a, e);
            j._afterDeleteRow(a, false, e)
        }
    };
    this._beforeDeleteRow = function () {};
    this._LTRemoveRow = function (a) {
        var e, f;
        e = this.isBeingAdded(a);
        f = this.isBeingEdited(a);
        this._getDeleteSuccessCallbackRef(a, undefined, undefined, e, f, true)()
    };
    this._deleteRow = this.deleteRow = function (a, e, f, j) {
        this.element || $(this);
        if (!this.validRowNum(a)) {
            debugLog('cui.dataTableClass.js: Attempted to get post data for row index "' + a + '" which is out of range or invalid in getRowPostData().', true);
            return false
        }
        var g;
        if (this.options.delete_action) g = this._getDeleteParams(a, j);
        var c = this.isBeingAdded(a, j),
            b = this.isBeingEdited(a, j),
            l = this._beforeDeleteRow(a, j);
        if (l) a = l;
        e = this._getDeleteSuccessCallbackRef(a, j, e, c, b);
        f = this._getDeleteErrorCallbackRef(a, j, f);
        !c &&
            this.options.delete_action ? this._executeDeleteREST(g, a, e, f, j) : e();
        return true
    };
    this._afterDeleteRow = function () {};
    this._beforeExecuteDeleteREST = function () {};
    this._executeDeleteREST = function (a, e, f, j, g) {
        this._beforeExecuteDeleteREST(a, e, g);
        this.doREST(this.options.delete_action.real_method, this.options.delete_action.rest, a, {
            success: f,
            error: j
        });
        this._afterExecuteDeleteREST(a, e, g)
    };
    this._afterExecuteDeleteREST = function () {};
    this._beforeGetDeleteParams = function () {};
    this._getDeleteParams = function (a, e) {
        var f =
            this._beforeGetDeleteParams(a, e);
        if (f) a = f;
        f = this._getActionParams(a, "delete_action", "DELETE");
        if (this.options.delete_action.only_params) {
            var j = {}, g;
            for (g in this.options.delete_action.only_params) {
                var c = this.options.delete_action.only_params[g];
                if (c in f) j[c] = f[c]
            }
            f = j
        } else if (this.options.delete_action.filter_params) {
            j = {};
            for (c in f)
                if ($.inArray(c, this.options.delete_action.filter_params) == -1) j[c] = f[c];
            f = j
        }
        if (j = this._afterGetDeleteParams(a, f, e)) f = j;
        return f
    };
    this._afterGetDeleteParams = function () {};
    this._beforeGetActionParams = function () {};
    this._getActionParams = function (a, e, f) {
        var j, g = {};
        if (j = this._beforeGetActionParams(a, j, f)) f = j;
        j = this.options[e] = this.options[e] || {};
        j.rest = j.rest || this.options.rest;
        j.real_method = j.method ? j.method : f;
        if (!j.params) {
            j.params = [];
            for (var c = 0, b = this.options.columns.length; c < b; ++c)(e = this.getColumnName(c)) && j.params.push(e);
            if (this.options.extra_row_data)
                for (c = 0; c < this.options.extra_row_data.length; c++) $.inArray(this.options.extra_row_data[c], j.params) === -1 && j.params.push(this.options.extra_row_data[c])
        }
        for (key in this.options.rest_params)
            if ($.inArray(key, ["page", "rows", "sortby", "sort_by", "searchregexp", "searchstring", "key"]) === -1)
                if (j.only_rest_params) {
                    if ($.inArray(key, j.only_rest_params) > -1) g[key] = this.options.rest_params[key]
                } else if (j.filter_rest_params) {
            if ($.inArray(key, j.filter_rest_params) == -1) g[key] = this.options.rest_params[key]
        } else g[key] = this.options.rest_params[key];
        for (i in j.params) {
            e = j.params[i];
            var l = b = undefined;
            c = false;
            if (this.hasColumn(e) && !this.hasExtraRowData(e)) b = this.getColumnIndex(e);
            if (b !== undefined) {
                l = this.getCellData(a, b);
                c = this.isCellDirty(a, b)
            } else if (this.hasExtraRowData(e)) {
                l = this.getExtraRowData(a, e);
                c = this.isExtraRowDataDirty(a, e)
            }
            if (this.options.submit_only_dirty && c) {
                if (this.options.submit_dirty_nulls || l != null) g[e] = l
            } else if (!this.options.submit_only_dirty && (c || l != null)) g[e] = l == null ? "" : l
        }
        for (p in this.options.primary_keys) {
            e = this.options.primary_keys[p];
            l = b = undefArray.prototype.slice.call(g);
            switch (j.first) {
            case "context":
                c = undefined;
                break;
            case "argument":
                c = [f];
                break;
            default:
                c = []
            }
            switch (j.last) {
            case "context":
                b = undefined;
                break;
            case "argument":
                b = [f];
                break;
            default:
                b = []
            }
            return classCUI.prototype.FunctionFactory._build(e, c, b, j.context ===
                "argument" ? f : undefined, g)
        },
        _build: function (e, f, j, g, c) {
            return function () {
                var b;
                b = Array.prototype.splice.call(arguments, 0);
                return e.apply(g || this, (f || [this]).concat(c || [], j || [this], b || []))
            }
        }
    }
})(jQuery);
(function () {
    classCUI.prototype.keys = function (a) {
        var e;
        a = a || {};
        if (typeof Object.keys === "function") try {
            e = Object.keys(a)
        } catch (f) {
            return
        } else {
            e = [];
            for (var j in a) a.hasOwnProperty(j) && e.push(j)
        }
        return e
    };
    classCUI.prototype.firstKey = function (a) {
        var e = [],
            f;
        if (typeof Object.keys === "function") {
            try {
                e = Object.keys(a)
            } catch (j) {
                return
            }
            return e[0]
        } else
            for (f in a)
                if (a.hasOwnProperty(f)) return f
    };
    classCUI.prototype.hasKeys = function (a) {
        for (var e in a) return true;
        return false
    };
    classCUI.prototype.firstValue = function (a) {
        for (var e in a) return a[e]
    }
})(jQuery);
(function (a) {
    classCUI.prototype.liveTableBase = a.extend(true, {}, classCUI.prototype.dataTableClass, {
        options: {
            processed_data: [],
            destroy_cb: [],
            to: [],
            interval: [],
            user_info: {}
        },
        _create: function () {
            self.live_table_base_create()
        },
        _process_row_data: function (e) {
            return e
        },
        _clear: function () {
            this.options.processed_data = []
        },
        _insert_row: function () {},
        _update_row: function () {},
        _before_row_action: function () {},
        _after_row_action: function () {},
        _before_delete_row: function () {},
        _after_delete_row: function () {},
        _live_table_base_create: function () {
            this.options.live_ident =
                this.options.live_ident || getUnique("ltref");
            this.options.widget_id = this.options.widget_id || getUnique("liveTableBase_derivative");
            this._dataTableInit();
            this._liveDataTableSubscribe("liveTable_" + this.options.live_table + "__" + (this.options.live_table_key || ""), undefined, this.options.user_info)
        },
        _afterAddRow: function (e, f) {
            e.current_time && typeof set_server_time === "function" && update_server_time(e.current_time * 1E3);
            e = this._process_row_data(e, f);
            e._index = f;
            this.options._in_bootstrap || this._before_row_action(e,
                "add");
            this.options.processed_data.splice(f, 0, e);
            if (!this.options._in_bootstrap) {
                this._insert_row(e, f);
                this._after_row_action(e, f, "add")
            }
        },
        _afterSetOriginalRowData: function () {
            this._afterSetRowData.apply(this, arguments)
        },
        _afterSetRowData: function (e, f) {
            f = this._process_row_data(f, e);
            f._index = e;
            this._before_row_action(f, "update");
            this.options.processed_data[e] = f;
            this._update_row(e, f);
            this._after_row_action(f, e, "update")
        },
        _afterDeleteRow: function (e) {
            var f = this.options.processed_data[e];
            this._before_row_action(f,
                "delete");
            this._before_delete_row(f, e);
            f && this.options.processed_data.splice(e, 1);
            this._after_delete_row(f, e);
            this._after_row_action(f, e, "delete")
        },
        _afterLAClear: function () {
            this._clear()
        },
        _validateRESTContainer: function () {
            return this.options.rest_container || ""
        },
        _setTimeout: function (e, f) {
            var j = setTimeout(e, f);
            this.options.to.push(j);
            return j
        },
        _setInterval: function (e, f) {
            var j = setInterval(e, f);
            this.options.to.push(j);
            return j
        },
        _clearTimeout: function (e) {
            return clearTimeout(e)
        },
        _clearInterval: function (e) {
            return clearInterval(e)
        },
        _addDestroyCallback: function (e) {
            this.options.destroy_cb.push(e)
        },
        destroy: function () {
            for (var e = 0; e < this.options.destroy_cb.length; e++) this.options.destroy_cb[e]()
        }
    })
})(jQuery);
(function (a) {
    var e, f = function (j) {
            return typeof j == "string" && j.search(/^\$\./) > -1
        };
    a.widget("cui2.jsDataTable", {
        options: {
            rows: 100,
            page: 1,
            sortby: false,
            sortorder: "asc",
            search: false,
            chopRows: true,
            rowDataRoot: null,
            columnData: [],
            hasNoneText: false,
            hasNoneLoading: "Loading...",
            overwriteHeader: false,
            afterRender: false,
            fixed: false,
            _table_data: false,
            _table_data_root: false,
            _is_table: false
        },
        _create: function () {
            var j = this,
                g = this.element,
                c = g,
                b, l = false;
            if (!j.options._table_data) j.options._table_data = j.options.data;
            if (e === undefined) {
                b = a('<div class="nthChildTest" style="position: absolute; left: 0"><div>1</div><div>2</div></div>').appendTo("body");
                e = b.find("div:visible")[1] ? false : true;
                b.remove()
            }
            if (g.is("table")) j.options._is_table = true;
            else {
                j.options._is_table = false;
                c = a('<table class="jsDataTable"' + (j.options.fixed ? ' style="table-layout: fixed"' : "") + "><thead></thead><tbody></tbody></table>");
                c.appendTo(g.empty())
            }
            b = c.children("thead");
            c = c.children("tbody");
            g.bind("refresh", function () {
                j._zebra()
            });
            j.options.columnData =
                j.options.columnData || [];
            j.options._sortby_index = {};
            for (g = j.options.columnData.length; g--;) {
                var o = j.options.columnData[g];
                if (o.sortby) j.options._sortby_index[o.sortby] = g;
                if (!l && o.header) l = true
            }
            if (l)
                if (b[0]) {
                    b.empty();
                    j._write_headers(b)
                }
            j._write_tbody(c);
            j.sort(j.options.sortby, j.options.sortorder, true)
        },
        get_$row: function (j) {
            return this._get_$table().find("> tbody > tr:eq(" + j + ")")
        },
        _auto_destroy_check: function () {
            if (!this.element.closest("body")[0]) {
                this.destroy();
                return true
            }
            return false
        },
        _zebra: function () {
            if (!e) {
                a("tr:odd",
                    tbody).removeClass("even").addClass("odd");
                a("tr:even", tbody).removeClass("odd").addClass("even")
            }
        },
        sort: function (j, g) {
            this._update_sort_visuals(j, g)
        },
        _update_sort_visuals: function (j, g) {
            var c = this._get_$table();
            if (j) {
                g = g === "desc" ? "desc" : "asc";
                var b = this.options._sortby_index[j],
                    l = this.options.columnData[b];
                l = this.options.columnData[b || 0];
                b = l._$th;
                c.find("> thead th").removeClass("sortAsc sortDesc");
                if (l._sortorder === "asc" && !g || g === "desc") {
                    l._sortorder = "desc";
                    b.addClass("sortDesc")
                }
            }
        },
        _getSubset: function (j,
            g) {
            return g ? f(g) ? (jsonPath(j, g) || [])[0] : j[g] ? j[g] : g.search(/^static:/) == 0 ? g.replace(/^static:/, "") : false : j
        },
        _get_$table: function () {
            return this.options._is_table ? this.element : this.element.children("table")
        },
        _write_headers: function () {
            var j = this,
                g = j._get_$table().children("thead"),
                c = j.options.overwriteHeader || a("th", g).length != j.options.columnData.length;
            c && g.empty();
            g = a("<tr></tr>").appendTo(g);
            for (var b = 0; b < j.options.columnData.length; b++) {
                var l = j.options.columnData[b],
                    o;
                if (c) {
                    o = a("<th></th>").appendTo(g);
                    var n = "";
                    n = f(l.header) ? l.jsonPath(data, l.header)[0] : a.isFunction(l.header) ? l.header(data, idx) : l.header;
                    o[j.options.render === "html" ? "html" : "text"](n || "");
                    o.addClass("col" + (b + 1));
                    l["class"] && o.addClass(l["class"])
                } else {
                    o = a("th:eq(" + idx + ")", g);
                    o.siblings("th").removeClass("col" + (idx + 1));
                    o.addClass("col" + (idx + 1))
                }
                l._$th = o;
                if (l.sortby) {
                    a.isFunction(l.sortby) ? o.data("sortby", l.sortby(data, idx)) : o.data("sortby", l.sortby);
                    o.addClass("sortable").removeClass("notSortable")
                } else {
                    o.data("sortby", null);
                    o.addClass("notSortable").removeClass("sortable")
                }
            }
            a("th.sortable",
                g).bind("click", function () {
                j.sort(a(this).data("sortby"))
            })
        },
        _write_tbody: function () {
            var j = this._get_$table().children("tbody");
            this.options._table_data_root = this._getSubset(this.options._table_data, this.options.rowDataRoot) || [];
            j.empty();
            if (!this.options._table_data_root || !this.options._table_data_root.length) this._get_empty_row().appendTo(j);
            else {
                if (this.options.searchParam && this.options.search) {
                    var g = a('<tr class="searchRow nonDataRow"><td colspan="' + this.options.columnData.length + '"></td></tr>');
                    a("td", g).text("Search results for: " + this.options.search);
                    g.appendTo(j)
                }
                for (j = 0; j < this.options._table_data_root.length; j++) this._write_row(this.options._table_data_root[j], "push", j)
            }
        },
        _get_empty_row: function () {
            var j = a('<tr class="trHasNone nonDataRow"></tr>'),
                g = a('<td class="tdHasNone"></td>').attr("colspan", this.options.columnData.length || 1).appendTo(j);
            if (this.options._initial_empty_load) {
                delete this.options._initial_empty_load;
                g.text(this.options.hasNoneLoading || this.options.hasNoneText || "")
            } else if (!this.options.hasNoneText &&
                this.options.search) g.text("No matching entries found");
            else if (this.options.hasNoneText)
                if (typeof this.options.hasNoneText === "string") g.text(this.options.hasNoneText);
                else this.options.hasNoneText instanceof jQuery && g.append(this.options.hasNoneText);
                else g.text("No entries in this table");
            return j
        },
        insert_row: function (j, g, c) {
            var b = this._get_$table().children("tbody"),
                l = false;
            g = g || "insert";
            if (!a.isArray(this.options._table_data_root)) {
                console_log("Improper _table_data_root:", this.options._table_data_root);
                this.options._table_data_root = []
            }
            if (c && c > this.options._table_data_root.length) c = this.options._table_data_root.length;
            if (!this.options._table_data_root || this.options._table_data_root.length === 0) l = true;
            switch (g) {
            case "unshift":
                this.options._table_data_root.unshift(j);
                break;
            case "push":
                this.options._table_data_root.push(j);
                break;
            case "insert":
                if (!c) c = this.options._table_data_root.length;
                this.options._table_data_root.splice(c, 0, j);
                break;
            case "replace":
                !c && c !== 0 || c >= this.options._table_data_root.length ||
                    this._update_row(c, j);
                return
            }
            this._write_row(j, g, c);
            l && a(">tr.trHasNone", b).remove()
        },
        _generate_$td: function (j, g, c, b) {
            var l = this.options.columnData[c],
                o = {}, n = a("<td />").addClass("col" + (c + 1));
            l["class"] && n.addClass(l["class"]);
            for (var q in {
                value: 1,
                metadata: 1
            }) o[q] = a.isFunction(l[q]) ? l[q]({
                data: this.options._table_data,
                rowData: g,
                row: j,
                column: c,
                elem: n,
                $cell: n,
                $row: b
            }) : l[q] ? this._getSubset(g, l[q]) : null;
            o.metadata !== null && n.data("metadata", o.metadata);
            l.render == "html" ? n.append(o.value) : n.text(o.value);
            return n
        },
        _update_row: function (j, g) {
            var c = [],
                b = this.get_$row(j),
                l = b.children("td");
            row_was = this.options._table_data_root[j];
            this.options._table_data_root[j] = g;
            for (var o = 0; o < this.options.columnData.length; o++) {
                var n = this.options.columnData[o];
                if (n.key !== false)
                    if (!n.key || row_was[n.key] !== g[n.key]) c[o] = this._generate_$td(j, g, o, b)
            }
            for (o = 0; o < c.length; o++) c[o] && l.eq(o).replaceWith(c[o]);
            return b
        },
        _write_row: function (j, g, c) {
            var b = this._get_$table().children("tbody"),
                l = a("<tr />");
            if (!this._auto_destroy_check()) {
                g =
                    g || "insert";
                l.data("row", j);
                for (var o = 0; o < this.options.columnData.length; o++) this._generate_$td(c, j, o, l).appendTo(l);
                switch (g) {
                case "unshift":
                    b.prepend(l);
                    this._zebra();
                    return l;
                case "push":
                    b.append(l);
                    e || (b.find("> tr").length % 2 ? l.addClass("odd") : l.addClass("even"));
                    return l;
                case "insert":
                    if (c > 0) {
                        j = this.get_$row(c);
                        j[0] ? l.before(j) : b.append(l)
                    } else b.prepend(l);
                    this._zebra();
                    return l
                }
            }
        },
        removeRow: function (j) {
            var g = this._get_$table();
            this.get_$row(j).remove();
            !this.options._table_data_root || !this.options._table_data_root.length ?
                this._get_empty_row().appendTo(a(">tbody", g)) : this._zebra()
        },
        clearTable: function (j) {
            var g = this;
            if (j && typeof j !== "number") j = 3E3;
            if (j) g.options._clear_timeout = setTimeout(function () {
                g.performClearTable()
            }, j);
            else g.performClearTable()
        },
        cancelClearTable: function () {
            this.options._clear_timeout && clearTimeout(this.options._clear_timeout)
        },
        performClearTable: function () {
            if (this.options._clear_timeout) {
                clearTimeout(this.options._clear_timeout);
                this.options._clear_timeout = false
            }
            this.refreshTable([])
        },
        refresh: function () {
            this.refreshTable.apply(this,
                arguments)
        },
        refreshTable: function (j) {
            var g = this._get_$table().children("tbody");
            this.cancelClearTable();
            this.options._table_data = j;
            this._write_tbody(g)
        },
        getColumn: function (j) {
            params = this.data("jsDataTable");
            var g = this.closestDesc("table.jsDataTable"),
                c = a();
            a.each(params.columnData, function (b, l) {
                if (l.sortby && l.sortby === j || l.name && l.name == j) {
                    c = g.children("tbody, thead").children("tr").children(".col" + (b + 1));
                    return false
                }
            });
            return c
        }
    });
    a.widget("cui2.jsonTable", a.cui2.jsDataTable, {
        setRequestParams: function () {
            var j = {};
            a.extend(j, this.options.rest_data || {});
            j[this.options.searchParam] = this.options.search || "";
            this.options.rowsParam = this.options.rowsParam || "rows";
            j[this.options.rowsParam] = this.options.rows || 100;
            this.options.pageParam = this.options.pageParam || "page";
            j[this.options.pageParam] = this.options.page || 1;
            this.options.sortbyParam = this.options.sortbyParam || "sortby";
            j[this.options.sortbyParam] = this.options.sortby || "";
            this.options.sortorderParam = this.options.sortorderParam || "sortorder";
            j[this.options.sortorderParam] =
                this.options.sortorder || "asc";
            this.options.searchParam = this.options.searchParam || "searchstring";
            j[this.options.searchParam] = this.options.search || "";
            return this.options.rest_data = j
        },
        getRequestParams: function () {
            return a.extend(true, {}, this.options.rest_data)
        },
        refreshTable: function (j) {
            var g = this,
                c = this.element;
            j = j || {};
            if (g.options._xhr) {
                g.options._xhr.abort();
                delete g.options._xhr
            }
            a.extend(g.options, j || {});
            if (j.clear_existing_data) {
                g.options.rest_data = {};
                delete j.clear_existing_data
            }
            var b = g.setRequestParams();
            a.extend(b, j.data || {});
            delete j.data;
            g.options.rowDataRows = g.options.rowDataRows || "rows";
            g.options.rowDataPage = g.options.rowDataPage || "page";
            g.options.rowDataCount = g.options.rowDataCount || "count";
            b = {
                url: g.options.url,
                type: g.options.type || "GET",
                dataType: "json",
                data: b,
                success: function (l) {
                    delete g.options._xhr;
                    var o = g.options.paginator !== false && g.options.rowDataPage && g.options.rowDataCount && g.options.rowDataRows && l[g.options.rowDataPage] && l[g.options.rowDataCount] && l[g.options.rowDataRows] ? true : false,
                        n = c.children(".paginator");
                    if (o) {
                        n[0] || (n = a('<div class="paginator"/>').appendTo(c));
                        n.paginate(l[g.options.rowDataPage], Math.ceil(l[g.options.rowDataCount] / l[g.options.rowDataRows]), l[g.options.rowDataRows], {
                            changePage: function (q) {
                                g.refreshTable({
                                    page: q
                                });
                                if (g.options.paginatorToTop) {
                                    q = c.offset().top - g.options.paginatorToTopAdditional;
                                    q = q > 0 ? q : 0;
                                    a(window).scrollTop(q)
                                }
                            }
                        })
                    }
                    n = parseInt(l[g.options.rowDataCount] / l[g.options.rowDataRows], 10) + (l[g.options.rowDataCount] % l[g.options.rowDataRows] ? 1 : 0);
                    if (o &&
                        g.options.page > n) g.options.page = n;
                    a.cui2.jsDataTable.prototype.refreshTable.call(g, l, j);
                    typeof g.options.afterRender === "function" && g.options.afterRender.call(elem, {
                        data: l
                    })
                }
            };
            if (g.options.ajax) b = a.extend({}, b, g.options.ajax);
            g.options._xhr = a.ajax(b)
        },
        sort: function (j, g, c) {
            var b = this.options.columnData[j ? this.options._sortby_index[j] || 0 : 0];
            g || (g = c ? "asc" : b.sortorder === "desc" ? "asc" : "desc");
            this.options.sortby = j;
            this.options.sortorder = g;
            b.sortorder = g;
            this.refreshTable();
            this._update_sort_visuals(j, g)
        },
        _create: function () {
            this.options._table_data = [];
            this.options._initial_empty_load = true;
            this.options.rest_data = this.options.data;
            delete this.options.data;
            a.cui2.jsDataTable.prototype._create.apply(this, arguments)
        }
    })
})(jQuery);
(function (a) {
    a.widget("cui2.liveTable", a.extend(true, {}, CUI.dataTableClass, CUI.liveTableBase, a.cui2.jsDataTable.prototype, {
        options: {
            destroy_cb: [],
            to: [],
            interval: [],
            sorted_data: []
        },
        _create: function () {
            a.cui2.jsDataTable.prototype._create.apply(this, arguments);
            this._live_table_base_create()
        },
        _insert_row: function (e, f) {
            this.insert_row(e, "insert", f)
        },
        _before_delete_row: function (e, f) {
            this.removeRow(f)
        },
        rebuild_table: function () {
            console_log("rebuild:", this.options._processed_data);
            this.refresh(this.options.processed_data)
        },
        _sort_processed_data: function (e) {
            return e
        },
        _update_sort: function () {}
    }))
})(jQuery);
(function (a) {
    var e = {
        options: {
            groups: []
        },
        _apply_st_parent: function (f, j) {
            return this.sortableTable_parent[f].apply(this, j)
        },
        _create: function () {
            this.options.columnData = this.options.columnData || [];
            this.options.columnData.unshift({
                value: "static:",
                header: "",
                sortby: false
            });
            this._apply_st_parent("_create", arguments);
            this._setup_sortable()
        },
        _setup_sortable: function () {
            var f = this,
                j = this.element.children(".jsDataTable");
            j.sortable({
                items: f.options.items || "tr",
                handle: "td.col1",
                containment: "parent",
                tolerance: "pointer",
                start: function (g, c) {
                    f._test_valid("pickup", g, c) || f.options._$table.sortable("cancel")
                },
                stop: function (g, c) {
                    f._test_valid("drop", g, c) || f.options._$table.sortable("cancel");
                    f._sort_stop_handler(g, c)
                }
            });
            j.addClass("sortableJSDataTable");
            f.options._$table = j
        },
        _refresh_sortable: function () {
            this.options._$table.find("tr:eq(0)").addClass("first");
            this.options._$table.find("tr:gt(0).first").removeClass("first");
            this.options._$table.sortable("refresh")
        },
        _write_row: function () {
            this._apply_st_parent("_write_row",
                arguments);
            this._refresh_sortable()
        },
        _test_valid: function (f, j, g) {
            j = g.item.closest("tbody").children("tr").index(g.item);
            if (typeof this.options[f] === "function") return this.options[f](g.item.data("row"), g.item, j, this.options.processed_data || this.options._table_data_root, this);
            return true
        },
        _sort_stop_handler: function (f, j) {
            var g = j.item;
            g.closest("tbody").children("tr").index(g)
        },
        removeRow: function () {
            this._apply_st_parent("removeRow", arguments);
            this._refresh_sortable()
        },
        clearTable: function () {
            this._apply_st_parent("clearTable",
                arguments);
            this._refresh_sortable()
        }
    };
    a.widget("cui2.sortableTable", a.extend(true, {}, a.cui2.jsDataTable.prototype, e, {
        sortableTable_parent: a.cui2.jsDataTable.prototype
    }));
    a.widget("cui2.sortableLiveTable", a.extend(true, {}, a.cui2.liveTable.prototype, e, {
        sortableTable_parent: a.cui2.liveTable.prototype
    }));
    a.widget("cui2.sortableJSONTable", a.extend(true, {}, a.cui2.jsonTable.prototype, e, {
        sortableTable_parent: a.cui2.jsonTable.prototype
    }))
})(jQuery);
(function (a, e, f) {
    a.fn.dataTableSettings = [];
    var j = a.fn.dataTableSettings;
    a.fn.dataTableExt = {};
    var g = a.fn.dataTableExt;
    g.sVersion = "1.7.6";
    g.sErrMode = "alert";
    g.iApiIndex = 0;
    g.oApi = {};
    g.afnFiltering = [];
    g.aoFeatures = [];
    g.ofnSearch = {};
    g.afnSortData = [];
    g.oStdClasses = {
        sPagePrevEnabled: "paginate_enabled_previous",
        sPagePrevDisabled: "paginate_disabled_previous",
        sPageNextEnabled: "paginate_enabled_next",
        sPageNextDisabled: "paginate_disabled_next",
        sPageJUINext: "",
        sPageJUIPrev: "",
        sPageButton: "paginate_button",
        sPageButtonActive: "paginate_active",
        sPageButtonStaticDisabled: "paginate_button",
        sPageFirst: "first",
        sPagePrevious: "previous",
        sPageNext: "next",
        sPageLast: "last",
        sStripOdd: "odd",
        sStripEven: "even",
        sRowEmpty: "dataTables_empty",
        sWrapper: "dataTables_wrapper",
        sFilter: "dataTables_filter",
        sInfo: "dataTables_info",
        sPaging: "dataTables_paginate paging_",
        sLength: "dataTables_length",
        sProcessing: "dataTables_processing",
        sSortAsc: "sorting_asc",
        sSortDesc: "sorting_desc",
        sSortable: "sorting",
        sSortableAsc: "sorting_asc_disabled",
        sSortableDesc: "sorting_desc_disabled",
        sSortableNone: "sorting_disabled",
        sSortColumn: "sorting_",
        sSortJUIAsc: "",
        sSortJUIDesc: "",
        sSortJUI: "",
        sSortJUIAscAllowed: "",
        sSortJUIDescAllowed: "",
        sSortJUIWrapper: "",
        sScrollWrapper: "dataTables_scroll",
        sScrollHead: "dataTables_scrollHead",
        sScrollHeadInner: "dataTables_scrollHeadInner",
        sScrollBody: "dataTables_scrollBody",
        sScrollFoot: "dataTables_scrollFoot",
        sScrollFootInner: "dataTables_scrollFootInner",
        sFooterTH: ""
    };
    g.oJUIClasses = {
        sPagePrevEnabled: "fg-button ui-button ui-state-default ui-corner-left",
        sPagePrevDisabled: "fg-button ui-button ui-state-default ui-corner-left ui-state-disabled",
        sPageNextEnabled: "fg-button ui-button ui-state-default ui-corner-right",
        sPageNextDisabled: "fg-button ui-button ui-state-default ui-corner-right ui-state-disabled",
        sPageJUINext: "ui-icon ui-icon-circle-arrow-e",
        sPageJUIPrev: "ui-icon ui-icon-circle-arrow-w",
        sPageButton: "fg-button ui-button ui-state-default",
        sPageButtonActive: "fg-button ui-button ui-state-default ui-state-disabled",
        sPageButtonStaticDisabled: "fg-button ui-button ui-state-default ui-state-disabled",
        sPageFirst: "first ui-corner-tl ui-corner-bl",
        sPagePrevious: "previous",
        sPageNext: "next",
        sPageLast: "last ui-corner-tr ui-corner-br",
        sStripOdd: "odd",
        sStripEven: "even",
        sRowEmpty: "dataTables_empty",
        sWrapper: "dataTables_wrapper",
        sFilter: "dataTables_filter",
        sInfo: "dataTables_info",
        sPaging: "dataTables_paginate fg-buttonset ui-buttonset fg-buttonset-multi ui-buttonset-multi paging_",
        sLength: "dataTables_length",
        sProcessing: "dataTables_processing",
        sSortAsc: "ui-state-default",
        sSortDesc: "ui-state-default",
        sSortable: "ui-state-default",
        sSortableAsc: "ui-state-default",
        sSortableDesc: "ui-state-default",
        sSortableNone: "ui-state-default",
        sSortColumn: "sorting_",
        sSortJUIAsc: "css_right ui-icon ui-icon-triangle-1-n",
        sSortJUIDesc: "css_right ui-icon ui-icon-triangle-1-s",
        sSortJUI: "css_right ui-icon ui-icon-carat-2-n-s",
        sSortJUIAscAllowed: "css_right ui-icon ui-icon-carat-1-n",
        sSortJUIDescAllowed: "css_right ui-icon ui-icon-carat-1-s",
        sSortJUIWrapper: "DataTables_sort_wrapper",
        sScrollWrapper: "dataTables_scroll",
        sScrollHead: "dataTables_scrollHead ui-state-default",
        sScrollHeadInner: "dataTables_scrollHeadInner",
        sScrollBody: "dataTables_scrollBody",
        sScrollFoot: "dataTables_scrollFoot ui-state-default",
        sScrollFootInner: "dataTables_scrollFootInner",
        sFooterTH: "ui-state-default"
    };
    g.oPagination = {
        two_button: {
            fnInit: function (c, b, l) {
                var o, n, q;
                if (c.bJUI) {
                    o = f.createElement("a");
                    n = f.createElement("a");
                    q = f.createElement("span");
                    q.className = c.oClasses.sPageJUINext;
                    n.appendChild(q);
                    q = f.createElement("span");
                    q.className = c.oClasses.sPageJUIPrev;
                    o.appendChild(q)
                } else {
                    o = f.createElement("div");
                    n = f.createElement("div")
                }
                o.className =
                    c.oClasses.sPagePrevDisabled;
                n.className = c.oClasses.sPageNextDisabled;
                o.title = c.oLanguage.oPaginate.sPrevious;
                n.title = c.oLanguage.oPaginate.sNext;
                b.appendChild(o);
                b.appendChild(n);
                a(o).bind("click.DT", function () {
                    c.oApi._fnPageChange(c, "previous") && l(c)
                });
                a(n).bind("click.DT", function () {
                    c.oApi._fnPageChange(c, "next") && l(c)
                });
                a(o).bind("selectstart.DT", function () {
                    return false
                });
                a(n).bind("selectstart.DT", function () {
                    return false
                });
                if (c.sTableId !== "" && typeof c.aanFeatures.p == "undefined") {
                    b.setAttribute("id",
                        c.sTableId + "_paginate");
                    o.setAttribute("id", c.sTableId + "_previous");
                    n.setAttribute("id", c.sTableId + "_next")
                }
            },
            fnUpdate: function (c) {
                if (c.aanFeatures.p)
                    for (var b = c.aanFeatures.p, l = 0, o = b.length; l < o; l++)
                        if (b[l].childNodes.length !== 0) {
                            b[l].childNodes[0].className = c._iDisplayStart === 0 ? c.oClasses.sPagePrevDisabled : c.oClasses.sPagePrevEnabled;
                            b[l].childNodes[1].className = c.fnDisplayEnd() == c.fnRecordsDisplay() ? c.oClasses.sPageNextDisabled : c.oClasses.sPageNextEnabled
                        }
            }
        },
        iFullNumbersShowPages: 5,
        full_numbers: {
            fnInit: function (c,
                b, l) {
                var o = f.createElement("span"),
                    n = f.createElement("span"),
                    q = f.createElement("span"),
                    u = f.createElement("span"),
                    v = f.createElement("span");
                o.innerHTML = c.oLanguage.oPaginate.sFirst;
                n.innerHTML = c.oLanguage.oPaginate.sPrevious;
                u.innerHTML = c.oLanguage.oPaginate.sNext;
                v.innerHTML = c.oLanguage.oPaginate.sLast;
                var x = c.oClasses;
                o.className = x.sPageButton + " " + x.sPageFirst;
                n.className = x.sPageButton + " " + x.sPagePrevious;
                u.className = x.sPageButton + " " + x.sPageNext;
                v.className = x.sPageButton + " " + x.sPageLast;
                b.appendChild(o);
                b.appendChild(n);
                b.appendChild(q);
                b.appendChild(u);
                b.appendChild(v);
                a(o).bind("click.DT", function () {
                    c.oApi._fnPageChange(c, "first") && l(c)
                });
                a(n).bind("click.DT", function () {
                    c.oApi._fnPageChange(c, "previous") && l(c)
                });
                a(u).bind("click.DT", function () {
                    c.oApi._fnPageChange(c, "next") && l(c)
                });
                a(v).bind("click.DT", function () {
                    c.oApi._fnPageChange(c, "last") && l(c)
                });
                a("span", b).bind("mousedown.DT", function () {
                    return false
                }).bind("selectstart.DT", function () {
                    return false
                });
                if (c.sTableId !== "" && typeof c.aanFeatures.p ==
                    "undefined") {
                    b.setAttribute("id", c.sTableId + "_paginate");
                    o.setAttribute("id", c.sTableId + "_first");
                    n.setAttribute("id", c.sTableId + "_previous");
                    u.setAttribute("id", c.sTableId + "_next");
                    v.setAttribute("id", c.sTableId + "_last")
                }
            },
            fnUpdate: function (c, b) {
                if (c.aanFeatures.p) {
                    var l = g.oPagination.iFullNumbersShowPages,
                        o = Math.floor(l / 2),
                        n = Math.ceil(c.fnRecordsDisplay() / c._iDisplayLength),
                        q = Math.ceil(c._iDisplayStart / c._iDisplayLength) + 1,
                        u = "",
                        v, x = c.oClasses;
                    if (n < l) {
                        o = 1;
                        v = n
                    } else if (q <= o) {
                        o = 1;
                        v = l
                    } else if (q >= n - o) {
                        o =
                            n - l + 1;
                        v = n
                    } else {
                        o = q - Math.ceil(l / 2) + 1;
                        v = o + l - 1
                    }
                    for (l = o; l <= v; l++) u += q != l ? '<span class="' + x.sPageButton + '">' + l + "</span>" : '<span class="' + x.sPageButtonActive + '">' + l + "</span>";
                    v = c.aanFeatures.p;
                    var z, B = function () {
                            c._iDisplayStart = (this.innerHTML * 1 - 1) * c._iDisplayLength;
                            b(c);
                            return false
                        }, C = function () {
                            return false
                        };
                    l = 0;
                    for (o = v.length; l < o; l++)
                        if (v[l].childNodes.length !== 0) {
                            z = a("span:eq(2)", v[l]);
                            z.html(u);
                            a("span", z).bind("click.DT", B).bind("mousedown.DT", C).bind("selectstart.DT", C);
                            z = v[l].getElementsByTagName("span");
                            z = [z[0], z[1], z[z.length - 2], z[z.length - 1]];
                            a(z).removeClass(x.sPageButton + " " + x.sPageButtonActive + " " + x.sPageButtonStaticDisabled);
                            if (q == 1) {
                                z[0].className += " " + x.sPageButtonStaticDisabled;
                                z[1].className += " " + x.sPageButtonStaticDisabled
                            } else {
                                z[0].className += " " + x.sPageButton;
                                z[1].className += " " + x.sPageButton
                            } if (n === 0 || q == n || c._iDisplayLength == -1) {
                                z[2].className += " " + x.sPageButtonStaticDisabled;
                                z[3].className += " " + x.sPageButtonStaticDisabled
                            } else {
                                z[2].className += " " + x.sPageButton;
                                z[3].className += " " +
                                    x.sPageButton
                            }
                        }
                }
            }
        }
    };
    g.oSort = {
        "string-asc": function (c, b) {
            var l = c.toLowerCase(),
                o = b.toLowerCase();
            return l < o ? -1 : l > o ? 1 : 0
        },
        "string-desc": function (c, b) {
            var l = c.toLowerCase(),
                o = b.toLowerCase();
            return l < o ? 1 : l > o ? -1 : 0
        },
        "html-asc": function (c, b) {
            var l = typeof c === "string" ? c.replace(/<.*?>/g, "").toLowerCase() : c,
                o = typeof b === "string" ? b.replace(/<.*?>/g, "").toLowerCase() : b;
            return l < o ? -1 : l > o ? 1 : 0
        },
        "html-desc": function (c, b) {
            var l = typeof c === "string" ? c.replace(/<.*?>/g, "").toLowerCase() : c,
                o = typeof b === "string" ? b.replace(/<.*?>/g,
                    "").toLowerCase() : b;
            return l < o ? 1 : l > o ? -1 : 0
        },
        "date-asc": function (c, b) {
            var l = Date.parse(c),
                o = Date.parse(b);
            if (isNaN(l) || l === "") l = Date.parse("01/01/1970 00:00:00");
            if (isNaN(o) || o === "") o = Date.parse("01/01/1970 00:00:00");
            return l - o
        },
        "date-desc": function (c, b) {
            var l = Date.parse(c),
                o = Date.parse(b);
            if (isNaN(l) || l === "") l = Date.parse("01/01/1970 00:00:00");
            if (isNaN(o) || o === "") o = Date.parse("01/01/1970 00:00:00");
            return o - l
        },
        "numeric-asc": function (c, b) {
            return (c == "-" || c === "" ? 0 : c * 1) - (b == "-" || b === "" ? 0 : b * 1)
        },
        "numeric-desc": function (c,
            b) {
            return (b == "-" || b === "" ? 0 : b * 1) - (c == "-" || c === "" ? 0 : c * 1)
        }
    };
    g.aTypes = [
        function (c) {
            if (c.length === 0) return "numeric";
            var b, l = false;
            b = c.charAt(0);
            if ("0123456789-".indexOf(b) == -1) return null;
            for (var o = 1; o < c.length; o++) {
                b = c.charAt(o);
                if ("0123456789.".indexOf(b) == -1) return null;
                if (b == ".") {
                    if (l) return null;
                    l = true
                }
            }
            return "numeric"
        },
        function (c) {
            var b = Date.parse(c);
            if (b !== null && !isNaN(b) || c.length === 0) return "date";
            return null
        },
        function (c) {
            if (c.indexOf("<") != -1 && c.indexOf(">") != -1) return "html";
            return null
        }
    ];
    g.fnVersionCheck =
        function (c) {
            var b = function (v, x) {
                for (; v.length < x;) v += "0";
                return v
            }, l = g.sVersion.split(".");
            c = c.split(".");
            for (var o = "", n = "", q = 0, u = c.length; q < u; q++) {
                o += b(l[q], 3);
                n += b(c[q], 3)
            }
            return parseInt(o, 10) >= parseInt(n, 10)
    };
    g._oExternConfig = {
        iNextUnique: 0
    };
    a.fn.dataTable = function (c) {
        function b() {
            this.fnRecordsTotal = function () {
                return this.oFeatures.bServerSide ? parseInt(this._iRecordsTotal, 10) : this.aiDisplayMaster.length
            };
            this.fnRecordsDisplay = function () {
                return this.oFeatures.bServerSide ? parseInt(this._iRecordsDisplay,
                    10) : this.aiDisplay.length
            };
            this.fnDisplayEnd = function () {
                return this.oFeatures.bServerSide ? this.oFeatures.bPaginate === false || this._iDisplayLength == -1 ? this._iDisplayStart + this.aiDisplay.length : Math.min(this._iDisplayStart + this._iDisplayLength, this._iRecordsDisplay) : this._iDisplayEnd
            };
            this.sInstance = this.oInstance = null;
            this.oFeatures = {
                bPaginate: true,
                bLengthChange: true,
                bFilter: true,
                bSort: true,
                bInfo: true,
                bAutoWidth: true,
                bProcessing: false,
                bSortClasses: true,
                bStateSave: false,
                bServerSide: false
            };
            this.oScroll = {
                sX: "",
                sXInner: "",
                sY: "",
                bCollapse: false,
                bInfinite: false,
                iLoadGap: 100,
                iBarWidth: 0,
                bAutoCss: true
            };
            this.aanFeatures = [];
            this.oLanguage = {
                sProcessing: "Processing...",
                sLengthMenu: "Show _MENU_ entries",
                sZeroRecords: "No matching records found",
                sEmptyTable: "No data available in table",
                sInfo: "Showing _START_ to _END_ of _TOTAL_ entries",
                sInfoEmpty: "Showing 0 to 0 of 0 entries",
                sInfoFiltered: "(filtered from _MAX_ total entries)",
                sInfoPostFix: "",
                sSearch: "Search:",
                sUrl: "",
                oPaginate: {
                    sFirst: "First",
                    sPrevious: "Previous",
                    sNext: "Next",
                    sLast: "Last"
                },
                fnInfoCallback: null
            };
            this.aoData = [];
            this.aiDisplay = [];
            this.aiDisplayMaster = [];
            this.aoColumns = [];
            this.iNextId = 0;
            this.asDataSearch = [];
            this.oPreviousSearch = {
                sSearch: "",
                bRegex: false,
                bSmart: true
            };
            this.aoPreSearchCols = [];
            this.aaSorting = [
                [0, "asc", 0]
            ];
            this.aaSortingFixed = null;
            this.asStripClasses = [];
            this.asDestoryStrips = [];
            this.sDestroyWidth = 0;
            this.fnFooterCallback = this.fnHeaderCallback = this.fnRowCallback = null;
            this.aoDrawCallback = [];
            this.fnInitComplete = null;
            this.sTableId = "";
            this.nTableWrapper =
                this.nTBody = this.nTFoot = this.nTHead = this.nTable = null;
            this.bInitialised = false;
            this.aoOpenRows = [];
            this.sDom = "lfrtip";
            this.sPaginationType = "two_button";
            this.iCookieDuration = 7200;
            this.sCookiePrefix = "SpryMedia_DataTables_";
            this.fnCookieCallback = null;
            this.aoStateSave = [];
            this.aoStateLoad = [];
            this.sAjaxSource = this.oLoadedState = null;
            this.bAjaxDataGet = true;
            this.fnServerData = function (y, F, H) {
                a.ajax({
                    url: y,
                    data: F,
                    success: H,
                    dataType: "json",
                    cache: false,
                    error: function (K, N) {
                        N == "parsererror" && alert("DataTables warning: JSON data from server could not be parsed. This is caused by a JSON formatting error.")
                    }
                })
            };
            this.fnFormatNumber = function (y) {
                if (y < 1E3) return y;
                else {
                    var F = y + "";
                    y = F.split("");
                    var H = "";
                    F = F.length;
                    for (var K = 0; K < F; K++) {
                        if (K % 3 === 0 && K !== 0) H = "," + H;
                        H = y[F - K - 1] + H
                    }
                }
                return H
            };
            this.aLengthMenu = [10, 25, 50, 100];
            this.bDrawing = this.iDraw = 0;
            this.iDrawError = -1;
            this._iDisplayLength = 10;
            this._iDisplayStart = 0;
            this._iDisplayEnd = 10;
            this._iRecordsDisplay = this._iRecordsTotal = 0;
            this.bJUI = false;
            this.oClasses = g.oStdClasses;
            this.bSorted = this.bFiltered = false;
            this.oInit = null
        }

        function l(y) {
            return function () {
                var F = [lb(this[g.iApiIndex])].concat(Array.prototype.slice.call(arguments));
                return g.oApi[y].apply(this, F)
            }
        }

        function o(y) {
            var F, H;
            if (y.bInitialised === false) setTimeout(function () {
                o(y)
            }, 200);
            else {
                E(y);
                B(y);
                ba(y, true);
                y.oFeatures.bAutoWidth && Oa(y);
                F = 0;
                for (H = y.aoColumns.length; F < H; F++)
                    if (y.aoColumns[F].sWidth !== null) y.aoColumns[F].nTh.style.width = Qa(y.aoColumns[F].sWidth);
                if (y.oFeatures.bSort) Fa(y);
                else {
                    y.aiDisplay = y.aiDisplayMaster.slice();
                    Ka(y);
                    C(y)
                } if (y.sAjaxSource !== null && !y.oFeatures.bServerSide) y.fnServerData.call(y.oInstance, y.sAjaxSource, [], function (K) {
                    for (F = 0; F < K.aaData.length; F++) x(y,
                        K.aaData[F]);
                    y.iInitDisplayStart = y._iDisplayStart;
                    if (y.oFeatures.bSort) Fa(y);
                    else {
                        y.aiDisplay = y.aiDisplayMaster.slice();
                        Ka(y);
                        C(y)
                    }
                    ba(y, false);
                    n(y, K)
                });
                else if (!y.oFeatures.bServerSide) {
                    ba(y, false);
                    n(y)
                }
            }
        }

        function n(y, F) {
            y._bInitComplete = true;
            if (typeof y.fnInitComplete == "function") typeof F != "undefined" ? y.fnInitComplete.call(y.oInstance, y, F) : y.fnInitComplete.call(y.oInstance, y)
        }

        function q(y, F, H) {
            ra(y.oLanguage, F, "sProcessing");
            ra(y.oLanguage, F, "sLengthMenu");
            ra(y.oLanguage, F, "sEmptyTable");
            ra(y.oLanguage,
                F, "sZeroRecords");
            ra(y.oLanguage, F, "sInfo");
            ra(y.oLanguage, F, "sInfoEmpty");
            ra(y.oLanguage, F, "sInfoFiltered");
            ra(y.oLanguage, F, "sInfoPostFix");
            ra(y.oLanguage, F, "sSearch");
            if (typeof F.oPaginate != "undefined") {
                ra(y.oLanguage.oPaginate, F.oPaginate, "sFirst");
                ra(y.oLanguage.oPaginate, F.oPaginate, "sPrevious");
                ra(y.oLanguage.oPaginate, F.oPaginate, "sNext");
                ra(y.oLanguage.oPaginate, F.oPaginate, "sLast")
            }
            typeof F.sEmptyTable == "undefined" && typeof F.sZeroRecords != "undefined" && ra(y.oLanguage, F, "sZeroRecords", "sEmptyTable");
            H && o(y)
        }

        function u(y, F) {
            y.aoColumns[y.aoColumns.length++] = {
                sType: null,
                _bAutoType: true,
                bVisible: true,
                bSearchable: true,
                bSortable: true,
                asSorting: ["asc", "desc"],
                sSortingClass: y.oClasses.sSortable,
                sSortingClassJUI: y.oClasses.sSortJUI,
                sTitle: F ? F.innerHTML : "",
                sName: "",
                sWidth: null,
                sWidthOrig: null,
                sClass: null,
                fnRender: null,
                bUseRendered: true,
                iDataSort: y.aoColumns.length - 1,
                sSortDataType: "std",
                nTh: F ? F : f.createElement("th"),
                nTf: null,
                anThExtra: [],
                anTfExtra: []
            };
            var H = y.aoColumns.length - 1;
            if (typeof y.aoPreSearchCols[H] ==
                "undefined" || y.aoPreSearchCols[H] === null) y.aoPreSearchCols[H] = {
                sSearch: "",
                bRegex: false,
                bSmart: true
            };
            else {
                if (typeof y.aoPreSearchCols[H].bRegex == "undefined") y.aoPreSearchCols[H].bRegex = true;
                if (typeof y.aoPreSearchCols[H].bSmart == "undefined") y.aoPreSearchCols[H].bSmart = true
            }
            v(y, H, null)
        }

        function v(y, F, H) {
            F = y.aoColumns[F];
            if (typeof H != "undefined" && H !== null) {
                if (typeof H.sType != "undefined") {
                    F.sType = H.sType;
                    F._bAutoType = false
                }
                ra(F, H, "bVisible");
                ra(F, H, "bSearchable");
                ra(F, H, "bSortable");
                ra(F, H, "sTitle");
                ra(F, H, "sName");
                ra(F, H, "sWidth");
                ra(F, H, "sWidth", "sWidthOrig");
                ra(F, H, "sClass");
                ra(F, H, "fnRender");
                ra(F, H, "bUseRendered");
                ra(F, H, "iDataSort");
                ra(F, H, "as {
                    for (F = 0; F < K.aaData.length; F++) x(y,
                        K.aaData[F]);
                    y.iInitDisplayStart = y._iDisplayStart;
                    if (y.oFeatures.bSort) Fa(y);
                    else {
                        y.aiDisplay = y.aiDisplayMaster.slice();
                        Ka(y);
                        C(y)
                    }
                    ba(y, false);
                    n(y, K)
                });
                else if (!y.oFeatures.bServerSide) {
                    ba(y, false);
                    n(y)
                }
            }
        }

        function n(y, F) {
            y._bInitComplete = true;
            if (typeof y.fnInitComplete == "function") typeof F != "undefined" ? y.fnInitComplete.call(y.oInstance, y, F) : y.fnInitComplete.call(y.oInstance, y)
        }

        function q(y, F, H) {
            ra(y.oLanguage, F, "sProcessing");
            ra(y.oLanguage, F, "sLengthMenu");
            ra(y.oLanguage, F, "sEmptyTable");
            ra(y.oLanguage,
                F, "sZeroRecords");
            ra(y.oLanguage, F, "sInfo");
            ra(y.oLanguage, F, "sInfoEmpty");
            ra(y.oLanguage, F, "sInfoFiltered");
            ra(y.oLanguage, F, "sInfoPostFix");
            ra(y.oLanguage, F, "sSearch");
            if (typeof F.oPaginate != "undefined") {
                ra(y.oLanguage.oPaginate, F.oPaginate, "sFirst");
                ra(y.oLanguage.oPaginate, F.oPaginate, "sPrevious");
                ra(y.oLanguage.oPaginate, F.oPaginate, "sNext");
                ra(y.oLanguage.oPaginate, F.oPaginate, "sLast")
            }
            typeof F.sEmptyTable == "undefined" && typeof F.sZeroRecords != "undefined" && ra(y.oLanguage, F, "sZeroRecords", "sEmptyTable");
            H && o(y)
        }

        function u(y, F) {
            y.aoColumns[y.aoColumns.length++] = {
                sType: null,
                _bAutoType: true,
                bVisible: true,
                bSearchable: true,
                bSortable: true,
                asSorting: ["asc", "desc"],
                sSortingClass: y.oClasses.sSortable,
                sSortingClassJUI: y.oClasses.sSortJUI,
                sTitle: F ? F.innerHTML : "",
                sName: "",
                sWidth: null,
                sWidthOrig: null,
                sClass: null,
                fnRender: null,
                bUseRendered: true,
                iDataSort: y.aoColumns.length - 1,
                sSortDataType: "std",
                nTh: F ? F : f.createElement("th"),
                nTf: null,
                anThExtra: [],
                anTfExtra: []
            };
            var H = y.aoColumns.length - 1;
            if (typeof y.aoPreSearchCols[H] ==
                "undefined" || y.aoPreSearchCols[H] === null) y.aoPreSearchCols[H] = {
                sSearch: "",
                bRegex: false,
                bSmart: true
            };
            else {
                if (typeof y.aoPreSearchCols[H].bRegex == "undefined") y.aoPreSearchCols[H].bRegex = true;
                if (typeof y.aoPreSearchCols[H].bSmart == "undefined") y.aoPreSearchCols[H].bSmart = true
            }
            v(y, H, null)
        }

        function v(y, F, H) {
            F = y.aoColumns[F];
            if (typeof H != "undefined" && H !== null) {
                if (typeof H.sType != "undefined") {
                    F.sType = H.sType;
                    F._bAutoType = false
                }
                ra(F, H, "bVisible");
                ra(F, H, "bSearchable");
                ra(F, H, "bSortable");
                ra(F, H, "sTitle");
                ra(F, H, "sName");
                ra(F, H, "sWidth");
                ra(F, H, "sWidth", "sWidthOrig");
                ra(F, H, "sClass");
                ra(F, H, "fnRender");
                ra(F, H, "bUseRendered");
                ra(F, H, "iDataSort");
                ra(F, H, "asSorting");
                ra(F, H, "sSortDataType")
            }
            if (!y.oFeatures.bSort) F.bSortable = false;
            if (!F.bSortable || a.inArray("asc", F.asSorting) == -1 && a.inArray("desc", F.asSorting) == -1) {
                F.sSortingClass = y.oClasses.sSortableNone;
                F.sSortingClassJUI = ""
            } else if (a.inArray("asc", F.asSorting) != -1 && a.inArray("desc", F.asSorting) == -1) {
                F.sSortingClass = y.oClasses.sSortableAsc;
                F.sSortingClassJUI =
                    y.oClasses.sSortJUIAscAllowed
            } else if (a.inArray("asc", F.asSorting) == -1 && a.inArray("desc", F.asSorting) != -1) {
                F.sSortingClass = y.oClasses.sSortableDesc;
                F.sSortingClassJUI = y.oClasses.sSortJUIDescAllowed
            }
        }

        function x(y, F) {
            if (F.length != y.aoColumns.length && y.iDrawError != y.iDraw) {
                Z(y, 0, "Added data (size " + F.length + ") does not match known number of columns (" + y.aoColumns.length + ")");
                y.iDrawError = y.iDraw;
                return -1
            }
            var H = F.slice(),
                K = y.aoData.length;
            y.aoData.push({
                nTr: f.createElement("tr"),
                _iId: y.iNextId++,
                _aData: H,
                _anHidden: [],
                _sRowStripe: ""
            });
            for (var N, L, fa = 0; fa < H.length; fa++) {
                N = f.createElement("td");
                if (H[fa] === null) H[fa] = "";
                if (typeof y.aoColumns[fa].fnRender == "function") {
                    L = y.aoColumns[fa].fnRender({
                        iDataRow: K,
                        iDataColumn: fa,
                        aData: H,
                        oSettings: y
                    });
                    N.innerHTML = L;
                    if (y.aoColumns[fa].bUseRendered) y.aoData[K]._aData[fa] = L
                } else N.innerHTML = H[fa]; if (typeof H[fa] != "string") H[fa] += "";
                H[fa] = a.trim(H[fa]);
                if (y.aoColumns[fa].sClass !== null) N.className = y.aoColumns[fa].sClass;
                if (y.aoColumns[fa]._bAutoType && y.aoColumns[fa].sType !=
                    "string") {
                    L = ob(y.aoData[K]._aData[fa]);
                    if (y.aoColumns[fa].sType === null) y.aoColumns[fa].sType = L;
                    else if (y.aoColumns[fa].sType != L) y.aoColumns[fa].sType = "string"
                }
                if (y.aoColumns[fa].bVisible) {
                    y.aoData[K].nTr.appendChild(N);
                    y.aoData[K]._anHidden[fa] = null
                } else y.aoData[K]._anHidden[fa] = N
            }
            y.aiDisplayMaster.push(K);
            return K
        }

        function z(y) {
            var F, H, K, N, L, fa, ha, Ba;
            if (y.sAjaxSource === null) {
                ha = y.nTBody.childNodes;
                F = 0;
                for (H = ha.length; F < H; F++)
                    if (ha[F].nodeName.toUpperCase() == "TR") {
                        fa = y.aoData.length;
                        y.aoData.push({
                            nTr: ha[F],
                            _iId: y.iNextId++,
                            _aData: [],
                            _anHidden: [],
                            _sRowStripe: ""
                        });
                        y.aiDisplayMaster.push(fa);
                        Ba = y.aoData[fa]._aData;
                        fa = ha[F].childNodes;
                        K = L = 0;
                        for (N = fa.length; K < N; K++)
                            if (fa[K].nodeName.toUpperCase() == "TD") {
                                Ba[L] = a.trim(fa[K].innerHTML);
                                L++
                            }
                    }
            }
            ha = wb(y);
            fa = [];
            F = 0;
            for (H = ha.length; F < H; F++) {
                K = 0;
                for (N = ha[F].childNodes.length; K < N; K++) {
                    L = ha[F].childNodes[K];
                    L.nodeName.toUpperCase() == "TD" && fa.push(L)
                }
            }
            fa.length != ha.length * y.aoColumns.length && Z(y, 1, "Unexpected number of TD elements. Expected " + ha.length * y.aoColumns.length +
                " and got " + fa.length + ". DataTables does not support rowspan / colspan in the table body, and there must be one cell for each row/column combination.");
            ha = 0;
            for (K = y.aoColumns.length; ha < K; ha++) {
                if (y.aoColumns[ha].sTitle === null) y.aoColumns[ha].sTitle = y.aoColumns[ha].nTh.innerHTML;
                N = y.aoColumns[ha]._bAutoType;
                L = typeof y.aoColumns[ha].fnRender == "function";
                Ba = y.aoColumns[ha].sClass !== null;
                var Ja = y.aoColumns[ha].bVisible,
                    cb, hb;
                if (N || L || Ba || !Ja) {
                    F = 0;
                    for (H = y.aoData.length; F < H; F++) {
                        cb = fa[F * K + ha];
                        if (N)
                            if (y.aoColumns[ha].sType !=
                                "string") {
                                hb = ob(y.aoData[F]._aData[ha]);
                                if (y.aoColumns[ha].sType === null) y.aoColumns[ha].sType = hb;
                                else if (y.aoColumns[ha].sType != hb) y.aoColumns[ha].sType = "string"
                            }
                        if (L) {
                            hb = y.aoColumns[ha].fnRender({
                                iDataRow: F,
                                iDataColumn: ha,
                                aData: y.aoData[F]._aData,
                                oSettings: y
                            });
                            cb.innerHTML = hb;
                            if (y.aoColumns[ha].bUseRendered) y.aoData[F]._aData[ha] = hb
                        }
                        if (Ba) cb.className += " " + y.aoColumns[ha].sClass;
                        if (Ja) y.aoData[F]._anHidden[ha] = null;
                        else {
                            y.aoData[F]._anHidden[ha] = cb;
                            cb.parentNode.removeChild(cb)
                        }
                    }
                }
            }
        }

        function B(y) {
            var F,
                H, K, N, L, fa = y.nTHead.getElementsByTagName("tr"),
                ha = 0,
                Ba;
            if (y.nTHead.getElementsByTagName("th").length !== 0) {
                F = 0;
                for (K = y.aoColumns.length; F < K; F++) {
                    H = y.aoColumns[F].nTh;
                    y.aoColumns[F].sClass !== null && a(H).addClass(y.aoColumns[F].sClass);
                    N = 1;
                    for (L = fa.length; N < L; N++) {
                        Ba = a(fa[N]).children();
                        y.aoColumns[F].anThExtra.push(Ba[F - ha]);
                        y.aoColumns[F].bVisible || fa[N].removeChild(Ba[F - ha])
                    }
                    if (y.aoColumns[F].bVisible) {
                        if (y.aoColumns[F].sTitle != H.innerHTML) H.innerHTML = y.aoColumns[F].sTitle
                    } else {
                        H.parentNode.removeChild(H);
                        ha++
                    }
                }
            } else {
                N = y.nTHead;
                F = 0;
                for (K = y.aoColumns.length; F < K; F++) {
                    H = y.aoColumns[F].nTh;
                    H.innerHTML = y.aoColumns[F].sTitle;
                    y.aoColumns[F].sClass !== null && a(H).addClass(y.aoColumns[F].sClass);
                    y.aoColumns[F].bVisible && N.appendChild(H)
                }
            } if (y.bJUI) {
                F = 0; >= 0; Ba--) Ja == y.aoOpenRows[Ba].nParent && K.push(y.aoOpenRows[Ba].nTr)
                    }
                } else {
                    K[0] = f.createElement("tr");
                    if (typeof y.asStripClasses[0] != "undefined") K[0].className = y.asStripClasses[0];
                    L = f.createElement("td");
                    L.setAttribute("valign", "top");
                    L.colSpan = za(y);
                    L.className = y.oClasses.sRowEmpty;
                    L.innerHTML = typeof y.oLanguage.sEmptyTable != "undefined" && y.fnRecordsTotal() ===
                        0 ? y.oLanguage.sEmptyTable : y.oLanguage.sZeroRecords.replace("_MAX_", y.fnFormatNumber(y.fnRecordsTotal()));
                    K[N].appendChild(L)
                }
                typeof y.fnHeaderCallback == "function" && y.fnHeaderCallback.call(y.oInstance, a(">tr", y.nTHead)[0], pb(y), y._iDisplayStart, y.fnDisplayEnd(), y.aiDisplay);
                typeof y.fnFooterCallback == "function" && y.fnFooterCallback.call(y.oInstance, a(">tr", y.nTFoot)[0], pb(y), y._iDisplayStart, y.fnDisplayEnd(), y.aiDisplay);
                N = f.createDocumentFragment();
                F = f.createDocumentFragment();
                if (y.nTBody) {
                    L = y.nTBody.parentNode;
                    F.appendChild(y.nTBody);
                    if (!y.oScroll.bInfinite || !y._bInitComplete || y.bSorted || y.bFiltered) {
                        H = y.nTBody.childNodes;
                        for (F = H.length - 1; F >= 0; F--) H[F].parentNode.removeChild(H[F])
                    }
                    F = 0;
                    for (H = K.length; F < H; F++) N.appendChild(K[F]);
                    y.nTBody.appendChild(N);
                    L !== null && L.appendChild(y.nTBody)
                }
                for (F = y.aoDrawCallback.length - 1; F >= 0; F--) y.aoDrawCallback[F].fn.call(y.oInstance, y);
                y.bSorted = false;
                y.bFiltered = false;
                y.bDrawing = false;
                if (y.oFeatures.bServerSide) {
                    ba(y, false);
                    typeof y._bInitComplete == "undefined" && n(y)
                }
            }
        }

        function w(y) {
            if (y.oFeatures.bSort) Fa(y,
                y.oPreviousSearch);
            else if (y.oFeatures.bFilter) na(y, y.oPreviousSearch);
            else {
                Ka(y);
                C(y)
            }
        }

        function G(y) {
            if (y.bAjaxDataGet) {
                ba(y, true);
                var F = y.aoColumns.length,
                    H = [],
                    K;
                y.iDraw++;
                H.push({
                    name: "sEcho",
                    value: y.iDraw
                });
                H.push({
                    name: "iColumns",
                    value: F
                });
                H.push({
                    name: "sColumns",
                    value: da(y)
                });
                H.push({
                    name: "iDisplayStart",
                    value: y._iDisplayStart
                });
                H.push({
                    name: "iDisplayLength",
                    value: y.oFeatures.bPaginate !== false ? y._iDisplayLength : -1
                });
                if (y.oFeatures.bFilter !== false) {
                    H.push({
                        name: "sSearch",
                        value: y.oPreviousSearch.sSearch
                    });
                    H.push({
                        name: "bRegex",
                        value: y.oPreviousSearch.bRegex
                    });
                    for (K = 0; K < F; K++) {
                        H.push({
                            name: "sSearch_" + K,
                            value: y.aoPreSearchCols[K].sSearch
                        });
                        H.push({
                            name: "bRegex_" + K,
                            value: y.aoPreSearchCols[K].bRegex
                        });
                        H.push({
                            name: "bSearchable_" + K,
                            value: y.aoColumns[K].bSearchable
                        })
                    }
                }
                if (y.oFeatures.bSort !== false) {
                    var N = y.aaSortingFixed !== null ? y.aaSortingFixed.length : 0,
                        L = y.aaSorting.length;
                    H.push({
                        name: "iSortingCols",
                        value: N + L
                    });
                    for (K = 0; K < N; K++) {
                        H.push({
                            name: "iSortCol_" + K,
                            value: y.aaSortingFixed[K][0]
                        });
                        H.push({
                            name: "sSortDir_" + K,
                            value: y.aaSortingFixed[K][1]
                        })
                    }
                    for (K = 0; K < L; K++) {
                        H.push({
                            name: "iSortCol_" + (K + N),
                            value: y.aaSorting[K][0]
                        });
                        H.push({
                            name: "sSortDir_" + (K + N),
                            value: y.aaSorting[K][1]
                        })
                    }
                    for (K = 0; K < F; K++) H.push({
                        name: "bSortable_" + K,
                        value: y.aoColumns[K].bSortable
                    })
                }
                y.fnServerData.call(y.oInstance, y.sAjaxSource, H, function (fa) {
                    J(y, fa)
                });
                return false
            } else return true
        }

        function J(y, F) {
            if (typeof F.sEcho != "undefined")
                if (F.sEcho * 1 < y.iDraw) return;
                else y.iDraw = F.sEcho * 1;
            if (!y.oScroll.bInfinite || y.oScroll.bInfinite && (y.bSorted || y.bFiltered)) ea(y);
            y._iRecordsTotal = F.iTotalRecords;
            y._iRecordsDisplay = F.iTotalDisplayRecords;
            var H = da(y);
            if (H = typeof F.sColumns != "undefined" && H !== "" && F.sColumns != H) var K = S(y, F.sColumns);
            for (var N = 0, L = F.aaData.length; N < L; N++)
                if (H) {
                    for (var fa = [], ha = 0, Ba = y.aoColumns.length; ha < Ba; ha++) fa.push(F.aaData[N][K[ha]]);
                    x(y, fa)
                } else x(y, F.aaData[N]);
            y.aiDisplay = y.aiDisplayMaster.slice();
            y.bAjaxDataGet = false;
            C(y);
            y.bAjaxDataGet = true;
            ba(y, false)
        }

        function E(y) {
            var F = f.createElement("div");
            y.nTable.parentNode.insertBefore(F, y.nTable);
            y.nTableWrapper = f.createElement("div");
            y.nTableWrapper.className = y.oClasses.sWrapper;
            y.sTableId !== "" && y.nTableWrapper.setAttribute("id", y.sTableId + "_wrapper");
            for (var H = y.nTableWrapper, K = y.sDom.split(""), N, L, fa, ha, Ba, Ja, cb, hb = 0; hb < K.length; hb++) {
                L = 0;
                fa = K[hb];
                if (fa == "<") {
                    ha = f.createElement("div");
                    Ba = K[hb + 1];
                    if (Ba == "'" || Ba == '"') {
                        Ja = "";
                        for (cb = 2; K[hb + cb] != Ba;) {
                            Ja += K[hb + cb];
                            cb++
                        }
                        if (Ja == "H") Ja = "fg-toolbar ui-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix";
                        else if (Ja == "F") Ja = "fg-toolbar ui-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix";
                        if (Ja.indexOf(".") != -1) {
                            Ba = Ja.split(".");
                            ha.setAttribute("id", Ba[0].substr(1, Ba[0].length - 1));
                            ha.className = Ba[1]
                        } else if (Ja.charAt(0) == "#") ha.setAttribute("id", Ja.substr(1, Ja.length - 1));
                        else ha.className = Ja;
                        hb += cb
                    }
                    H.appendChild(ha);
                    H = ha
                } else if (fa == ">") H = H.parentNode;
                else if (fa == "l" && y.oFeatures.bPaginate && y.oFeatures.bLengthChange) {
                    N = P(y);
                    L = 1
                } else if (fa == "f" && y.oFeatures.bFilter) {
                    N = Y(y);
                    L = 1
                } else if (fa == "r" && y.oFeatures.bProcessing) {
                    N = T(y);
                    L = 1
                } else if (fa == "t") {
                    N = M(y);
                    L = 1
                } else if (fa == "i" && y.oFeatures.bInfo) {
                    N =
                        xb(y);
                    L = 1
                } else if (fa == "p" && y.oFeatures.bPaginate) {
                    N = ab(y);
                    L = 1
                } else if (g.aoFeatures.length !== 0) {
                    ha = g.aoFeatures;
                    cb = 0;
                    for (Ba = ha.length; cb < Ba; cb++)
                        if (fa == ha[cb].cFeature) {
                            if (N = ha[cb].fnInit(y)) L = 1;
                            break
                        }
                }
                if (L == 1 && N !== null) {
                    if (typeof y.aanFeatures[fa] != "object") y.aanFeatures[fa] = [];
                    y.aanFeatures[fa].push(N);
                    H.appendChild(N)
                }
            }
            F.parentNode.replaceChild(y.nTableWrapper, F)
        }

        function M(y) {
            if (y.oScroll.sX === "" && y.oScroll.sY === "") return y.nTable;
            var F = f.createElement("div"),
                H = f.createElement("div"),
                K = f.createElement("div"),
                N = f.createElement("div"),
                L = f.createElement("div"),
                fa = f.createElement("div"),
                ha = y.nTable.cloneNode(false),
                Ba = y.nTable.cloneNode(false),
                Ja = y.nTable.getElementsByTagName("thead")[0],
                cb = y.nTable.getElementsByTagName("tfoot").length === 0 ? null : y.nTable.getElementsByTagName("tfoot")[0],
                hb = typeof c.bJQueryUI != "undefined" && c.bJQueryUI ? g.oJUIClasses : g.oStdClasses;
            H.appendChild(K);
            L.appendChild(fa);
            N.appendChild(y.nTable);
            F.appendChild(H);
            F.appendChild(N);
            K.appendChild(ha);
            ha.appendChild(Ja);
            if (cb !== null) {
                F.appendChild(L);
                fa.appendChild(Ba);
                Ba.appendChild(cb)
            }
            F.className = hb.sScrollWrapper;
            H.className = hb.sScrollHead;
            K.className = hb.sScrollHeadInner;
            N.className = hb.sScrollBody;
            L.className = hb.sScrollFoot;
            fa.className = hb.sScrollFootInner;
            if (y.oScroll.bAutoCss) {
                H.style.overflow = "hidden";
                H.style.position = "relative";
                L.style.overflow = "hidden";
                N.style.overflow = "auto"
            }
            H.style.border = "0";
            H.style.width = "100%";
            L.style.border = "0";
            K.style.width = "150%";
            ha.removeAttribute("id");
            ha.style.marginLeft = "0";
            y.nTable.style.marginLeft = "0";
            if (cb !==
                null) {
                Ba.removeAttribute("id");
                Ba.style.marginLeft = "0"
            }
            K = a(">caption", y.nTable);
            fa = 0;
            for (Ba = K.length; fa < Ba; fa++) ha.appendChild(K[fa]);
            if (y.oScroll.sX !== "") {
                H.style.width = Qa(y.oScroll.sX);
                N.style.width = Qa(y.oScroll.sX);
                if (cb !== null) L.style.width = Qa(y.oScroll.sX);
                a(N).scroll(function () {
                    H.scrollLeft = this.scrollLeft;
                    if (cb !== null) L.scrollLeft = this.scrollLeft
                })
            }
            if (y.oScroll.sY !== "") N.style.height = Qa(y.oScroll.sY);
            y.aoDrawCallback.push({
                fn: R,
                sName: "scrolling"
            });
            y.oScroll.bInfinite && a(N).scroll(function () {
                if (!y.bDrawing)
                    if (a(this).scrollTop() +
                        a(this).height() > a(y.nTable).height() - y.oScroll.iLoadGap)
                        if (y.fnDisplayEnd() < y.fnRecordsDisplay()) {
                            rb(y, "next");
                            Ka(y);
                            C(y)
                        }
            });
            y.nScrollHead = H;
            y.nScrollFoot = L;
            return F
        }

        function R(y) {
            var F = y.nScrollHead.getElementsByTagName("div")[0],
                H = F.getElementsByTagName("table")[0],
                K = y.nTable.parentNode,
                N, L, fa, ha, Ba, Ja, cb, hb, yb = [];
            fa = y.nTable.getElementsByTagName("thead");
            fa.length > 0 && y.nTable.removeChild(fa[0]);
            if (y.nTFoot !== null) {
                Ba = y.nTable.getElementsByTagName("tfoot");
                Ba.length > 0 && y.nTable.removeChild(Ba[0])
            }
            fa =
                y.nTHead.cloneNode(true);
            y.nTable.insertBefore(fa, y.nTable.childNodes[0]);
            if (y.nTFoot !== null) {
                Ba = y.nTFoot.cloneNode(true);
                y.nTable.insertBefore(Ba, y.nTable.childNodes[1])
            }
            var Gb = ta(fa);
            N = 0;
            for (L = Gb.length; N < L; N++) {
                cb = ga(y, N);
                Gb[N].style.width = y.aoColumns[cb].sWidth
            }
            y.nTFoot !== null && va(function (vb) {
                vb.style.width = ""
            }, Ba.getElementsByTagName("tr"));
            N = a(y.nTable).outerWidth();
            if (y.oScroll.sX === "") {
                y.nTable.style.width = "100%";
                if (a.browser.msie && a.browser.version <= 7) y.nTable.style.width = Qa(a(y.nTable).outerWidth() -
                    y.oScroll.iBarWidth)
            } else if (y.oScroll.sXInner !== "") y.nTable.style.width = Qa(y.oScroll.sXInner);
            else if (N == a(K).width() && a(K).height() < a(y.nTable).height()) {
                y.nTable.style.width = Qa(N - y.oScroll.iBarWidth);
                if (a(y.nTable).outerWidth() > N - y.oScroll.iBarWidth) y.nTable.style.width = Qa(N)
            } else y.nTable.style.width = Qa(N);
            N = a(y.nTable).outerWidth();
            L = y.nTHead.getElementsByTagName("tr");
            fa = fa.getElementsByTagName("tr");
            va(function (vb, A) {
                Ja = vb.style;
                Ja.paddingTop = "0";
                Ja.paddingBottom = "0";
                Ja.borderTopWidth = "0";
                Ja.borderBottomWidth = "0";
                Ja.height = 0;
                hb = a(vb).width();
                A.style.width = Qa(hb);
                yb.push(hb)
            }, fa, L);
            a(fa).height(0);
            if (y.nTFoot !== null) {
                ha = Ba.getElementsByTagName("tr");
                Ba = y.nTFoot.getElementsByTagName("tr");
                va(function (vb, A) {
                    Ja = vb.style;
                    Ja.paddingTop = "0";
                    Ja.paddingBottom = "0";
                    Ja.borderTopWidth = "0";
                    Ja.borderBottomWidth = "0";
                    Ja.height = 0;
                    hb = a(vb).width();
                    A.style.width = Qa(hb);
                    yb.push(hb)
                }, ha, Ba);
                a(ha).height(0)
            }
            va(function (vb) {
                vb.innerHTML = "";
                vb.style.width = Qa(yb.shift())
            }, fa);
            y.nTFoot !== null && va(function (vb) {
                vb.innerHTML =
                    "";
                vb.style.width = Qa(yb.shift())
            }, ha);
            if (a(y.nTable).outerWidth() < N)
                if (y.oScroll.sX === "") Z(y, 1, "The table cannot fit into the current element which will cause column misalignment. It is suggested that you enable x-scrolling or increase the width the table has in which to be drawn");
                else y.oScroll.sXInner !== "" && Z(y, 1, "The table cannot fit into the current element which will cause column misalignment. It is suggested that you increase the sScrollXInner property to allow it to draw in a larger area, or simply remove that parameter to allow automatic calculation");
            if (y.oScroll.sY === "")
                if (a.browser.msie && a.browser.version <= 7) K.style.height = Qa(y.nTable.offsetHeight + y.oScroll.iBarWidth);
            if (y.oScroll.sY !== "" && y.oScroll.bCollapse) {
                K.style.height = Qa(y.oScroll.sY);
                ha = y.oScroll.sX !== "" && y.nTable.offsetWidth > K.offsetWidth ? y.oScroll.iBarWidth : 0;
                if (y.nTable.offsetHeight < K.offsetHeight) K.style.height = Qa(a(y.nTable).height() + ha)
            }
            ha = a(y.nTable).outerWidth();
            H.style.width = Qa(ha);
            F.style.width = Qa(ha + y.oScroll.iBarWidth);
            if (y.nTFoot !== null) {
                F = y.nScrollFoot.getElementsByTagName("div")[0];
                H = F.getElementsByTagName("table")[0];
                F.style.width = Qa(y.nTable.offsetWidth + y.oScroll.iBarWidth);
                H.style.width = Qa(y.nTable.offsetWidth)
            }
            if (y.bSorted || y.bFiltered) K.scrollTop = 0
        }

        function O(y) {
            if (y.oFeatures.bAutoWidth === false) return false;
            Oa(y);
            for (var F = 0, H = y.aoColumns.length; F < H; F++) y.aoColumns[F].nTh.style.width = y.aoColumns[F].sWidth
        }

        function Y(y) {
            var F = f.createElement("div");
            y.sTableId !== "" && typeof y.aanFeatures.f == "undefined" && F.setAttribute("id", y.sTableId + "_filter");
            F.className = y.oClasses.sFilter;
            F.innerHTML = y.oLanguage.sSearch + (y.oLanguage.sSearch === "" ? "" : " ") + '<input type="text" />';
            var H = a("input", F);
            H.val(y.oPreviousSearch.sSearch.replace('"', "&quot;"));
            H.bind("keyup.DT", function () {
                for (var K = y.aanFeatures.f, N = 0, L = K.length; N < L; N++) K[N] != this.parentNode && a("input", K[N]).val(this.value);
                this.value != y.oPreviousSearch.sSearch && na(y, {
                    sSearch: this.value,
                    bRegex: y.oPreviousSearch.bRegex,
                    bSmart: y.oPreviousSearch.bSmart
                })
            });
            H.bind("keypress.DT", function (K) {
                if (K.keyCode == 13) return false
            });
            return F
        }

        function na(y, F, H) {
            pa(y, F.sSearch, H, F.bRegex, F.bSmart);
            for (F = 0; F < y.aoPreSearchCols.length; F++) Na(y, y.aoPreSearchCols[F].sSearch, F, y.aoPreSearchCols[F].bRegex, y.aoPreSearchCols[F].bSmart);
            g.afnFiltering.length !== 0 && qa(y);
            y.bFiltered = true;
            y._iDisplayStart = 0;
            Ka(y);
            C(y);
            La(y, 0)
        }

        function qa(y) {
            for (var F = g.afnFiltering, H = 0, K = F.length; H < K; H++)
                for (var N = 0, L = 0, fa = y.aiDisplay.length; L < fa; L++) {
                    var ha = y.aiDisplay[L - N];
                    if (!F[H](y, y.aoData[ha]._aData, ha)) {
                        y.aiDisplay.splice(L - N, 1);
                        N++
                    }
                }
        }

        function Na(y, F, H, K, N) {
            if (F !==
                "") {
                var L = 0;
                F = fb(F, K, N);
                for (K = y.aiDisplay.length - 1; K >= 0; K--) {
                    N = jb(y.aoData[y.aiDisplay[K]]._aData[H], y.aoColumns[H].sType);
                    if (!F.test(N)) {
                        y.aiDisplay.splice(K, 1);
                        L++
                    }
                }
            }
        }

        function pa(y, F, H, K, N) {
            var L = fb(F, K, N);
            if (typeof H == "undefined" || H === null) H = 0;
            if (g.afnFiltering.length !== 0) H = 1;
            if (F.length <= 0) {
                y.aiDisplay.splice(0, y.aiDisplay.length);
                y.aiDisplay = y.aiDisplayMaster.slice()
            } else if (y.aiDisplay.length == y.aiDisplayMaster.length || y.oPreviousSearch.sSearch.length > F.length || H == 1 || F.indexOf(y.oPreviousSearch.sSearch) !==
                0) {
                y.aiDisplay.splice(0, y.aiDisplay.length);
                La(y, 1);
                for (H = 0; H < y.aiDisplayMaster.length; H++) L.test(y.asDataSearch[H]) && y.aiDisplay.push(y.aiDisplayMaster[H])
            } else {
                var fa = 0;
                for (H = 0; H < y.asDataSearch.length; H++)
                    if (!L.test(y.asDataSearch[H])) {
                        y.aiDisplay.splice(H - fa, 1);
                        fa++
                    }
            }
            y.oPreviousSearch.sSearch = F;
            y.oPreviousSearch.bRegex = K;
            y.oPreviousSearch.bSmart = N
        }

        function La(y, F) {
            y.asDataSearch.splice(0, y.asDataSearch.length);
            for (var H = typeof F != "undefined" && F == 1 ? y.aiDisplayMaster : y.aiDisplay, K = 0, N = H.length; K <
                N; K++) y.asDataSearch[K] = $a(y, y.aoData[H[K]]._aData)
        }

        function $a(y, F) {
            for (var H = "", K = f.createElement("div"), N = 0, L = y.aoColumns.length; N < L; N++)
                if (y.aoColumns[N].bSearchable) H += jb(F[N], y.aoColumns[N].sType) + "  ";
            if (H.indexOf("&") !== -1) {
                K.innerHTML = H;
                H = K.textContent ? K.textContent : K.innerText;
                H = H.replace(/\n/g, " ").replace(/\r/g, "")
            }
            return H
        }

        function fb(y, F, H) {
            if (H) {
                y = F ? y.split(" ") : Ab(y).split(" ");
                y = "^(?=.*?" + y.join(")(?=.*?") + ").*$";
                return RegExp(y, "i")
            } else {
                y = F ? y : Ab(y);
                return RegExp(y, "i")
            }
        }

        function jb(y,
            F) {
            if (typeof g.ofnSearch[F] == "function") return g.ofnSearch[F](y);
            else if (F == "html" && typeof y == "string") return y.replace(/\n/g, " ").replace(/<.*?>/g, "");
            else if (typeof y == "string") return y.replace(/\n/g, " ");
            return y
        }

        function Fa(y, F) {
            var H, K, N = true,
                L, fa, ha, Ba = [],
                Ja = [],
                cb = g.oSort,
                hb = y.aoData,
                yb = y.aoColumns;
            if (typeof g.afnSort != "undefined" && Ba && Ba[0]) {
                Ba = y.aaSorting.slice();
                N = g.afnSort(y, Ba[0][0], W(y, Ba[0][0]), y.aoColumns[Ba[0][0]].sSortDataType)
            }
            if (N)
                if (!y.oFeatures.bServerSide && (y.aaSorting.length !==
                    0 || y.aaSortingFixed !== null)) {
                    Ba = y.aaSortingFixed !== null ? y.aaSortingFixed.concat(y.aaSorting) : y.aaSorting.slice();
                    for (L = 0; L < Ba.length; L++) {
                        N = Ba[L][0];
                        fa = W(y, N);
                        ha = y.aoColumns[N].sSortDataType;
                        if (typeof g.afnSortData[ha] != "undefined") {
                            var Gb = g.afnSortData[ha](y, N, fa);
                            fa = 0;
                            for (ha = hb.length; fa < ha; fa++) hb[fa]._aData[N] = Gb[fa]
                        }
                    }
                    L = 0;
                    for (N = y.aiDisplayMaster.length; L < N; L++) Ja[y.aiDisplayMaster[L]] = L;
                    var vb = Ba.length;
                    y.aiDisplayMaster.sort(function (A, D) {
                        var I;
                        for (L = 0; L < vb; L++) {
                            H = yb[Ba[L][0]].iDataSort;
                            K = yb[H].sType;
                            I = cb[K + "-" + Ba[L][1]](hb[A]._aData[H], hb[D]._aData[H]);
                            if (I !== 0) return I
                        }
                        return cb["numeric-asc"](Ja[A], Ja[D])
                    })
                }
            if (typeof F == "undefined" || F) eb(y);
            y.bSorted = true;
            if (y.oFeatures.bFilter) na(y, y.oPreviousSearch, 1);
            else {
                y.aiDisplay = y.aiDisplayMaster.slice();
                y._iDisplayStart = 0;
                Ka(y);
                C(y)
            }
        }

        function db(y, F, H, K) {
            a(F).bind("click.DT", function (N) {
                if (y.aoColumns[H].bSortable !== false) {
                    var L = function () {
                        var fa, ha;
                        if (N.shiftKey) {
                            for (var Ba = false, Ja = 0; Ja < y.aaSorting.length; Ja++)
                                if (y.aaSorting[Ja][0] == H) {
                                    Ba = true;
                                    fa =
                                        y.aaSorting[Ja][0];
                                    ha = y.aaSorting[Ja][2] + 1;
                                    if (typeof y.aoColumns[fa].asSorting[ha] == "undefined") y.aaSorting.splice(Ja, 1);
                                    else {
                                        y.aaSorting[Ja][1] = y.aoColumns[fa].asSorting[ha];
                                        y.aaSorting[Ja][2] = ha
                                    }
                                    break
                                }
                            Ba === false && y.aaSorting.push([H, y.aoColumns[H].asSorting[0], 0])
                        } else if (y.aaSorting.length == 1 && y.aaSorting[0][0] == H) {
                            fa = y.aaSorting[0][0];
                            ha = y.aaSorting[0][2] + 1;
                            if (typeof y.aoColumns[fa].asSorting[ha] == "undefined") ha = 0;
                            y.aaSorting[0][1] = y.aoColumns[fa].asSorting[ha];
                            y.aaSorting[0][2] = ha
                        } else {
                            y.aaSorting.splice(0,
                                y.aaSorting.length);
                            y.aaSorting.push([H, y.aoColumns[H].asSorting[0], 0])
                        }
                        Fa(y)
                    };
                    if (y.oFeatures.bProcessing) {
                        ba(y, true);
                        setTimeout(function () {
                            L();
                            y.oFeatures.bServerSide || ba(y, false)
                        }, 0)
                    } else L();
                    typeof K == "function" && K(y)
                }
            })
        }

        function eb(y) {
            var F, H, K, N, L, fa = y.aoColumns.length,
                ha = y.oClasses;
            for (F = 0; F < fa; F++) y.aoColumns[F].bSortable && a(y.aoColumns[F].nTh).removeClass(ha.sSortAsc + " " + ha.sSortDesc + " " + y.aoColumns[F].sSortingClass);
            N = y.aaSortingFixed !== null ? y.aaSortingFixed.concat(y.aaSorting) : y.aaSorting.slice();
            for (F = 0; F < y.aoColumns.length; F++)
                if (y.aoColumns[F].bSortable) {
                    L = y.aoColumns[F].sSortingClass;
                    K = -1;
                    for (H = 0; H < N.length; H++)
                        if (N[H][0] == F) {
                            L = N[H][1] == "asc" ? ha.sSortAsc : ha.sSortDesc;
                            K = H;
                            break
                        }
                    a(y.aoColumns[F].nTh).addClass(L);
                    if (y.bJUI) {
                        H = a("span", y.aoColumns[F].nTh);
                        H.removeClass(ha.sSortJUIAsc + " " + ha.sSortJUIDesc + " " + ha.sSortJUI + " " + ha.sSortJUIAscAllowed + " " + ha.sSortJUIDescAllowed);
                        H.addClass(K == -1 ? y.aoColumns[F].sSortingClassJUI : N[K][1] == "asc" ? ha.sSortJUIAsc : ha.sSortJUIDesc)
                    }
                } else a(y.aoColumns[F].nTh).addClass(y.aoColumns[F].sSortingClass);
            L = ha.sSortColumn;
            if (y.oFeatures.bSort && y.oFeatures.bSortClasses) {
                K = mb(y);
                if (K.length >= fa)
                    for (F = 0; F < fa; F++)
                        if (K[F].className.indexOf(L + "1") != -1) {
                            H = 0;
                            for (y = K.length / fa; H < y; H++) K[fa * H + F].className = a.trim(K[fa * H + F].className.replace(L + "1", ""))
                        } else if (K[F].className.indexOf(L + "2") != -1) {
                    H = 0;
                    for (y = K.length / fa; H < y; H++) K[fa * H + F].className = a.trim(K[fa * H + F].className.replace(L + "2", ""))
                } else if (K[F].className.indexOf(L + "3") != -1) {
                    H = 0;
                    for (y = K.length / fa; H < y; H++) K[fa * H + F].className = a.trim(K[fa * H + F].className.replace(" " +
                        L + "3", ""))
                }
                ha = 1;
                var Ba;
                for (F = 0; F < N.length; F++) {
                    Ba = parseInt(N[F][0], 10);
                    H = 0;
                    for (y = K.length / fa; H < y; H++) K[fa * H + Ba].className += " " + L + ha;
                    ha < 3 && ha++
                }
            }
        }

        function ab(y) {
            if (y.oScroll.bInfinite) return null;
            var F = f.createElement("div");
            F.className = y.oClasses.sPaging + y.sPaginationType;
            g.oPagination[y.sPaginationType].fnInit(y, F, function (H) {
                Ka(H);
                C(H)
            });
            typeof y.aanFeatures.p == "undefined" && y.aoDrawCallback.push({
                fn: function (H) {
                    g.oPagination[H.sPaginationType].fnUpdate(H, function (K) {
                        Ka(K);
                        C(K)
                    })
                },
                sName: "pagination"
            });
            return F
        }

        function rb(y, F) {
            var H = y._iDisplayStart;
            if (F == "first") y._iDisplayStart = 0;
            else if (F == "previous") {
                y._iDisplayStart = y._iDisplayLength >= 0 ? y._iDisplayStart - y._iDisplayLength : 0;
                if (y._iDisplayStart < 0) y._iDisplayStart = 0
            } else if (F == "next")
                if (y._iDisplayLength >= 0) {
                    if (y._iDisplayStart + y._iDisplayLength < y.fnRecordsDisplay()) y._iDisplayStart += y._iDisplayLength
                } else y._iDisplayStart = 0;
                else if (F == "last")
                if (y._iDisplayLength >= 0) {
                    var K = parseInt((y.fnRecordsDisplay() - 1) / y._iDisplayLength, 10) + 1;
                    y._iDisplayStart =
                        (K - 1) * y._iDisplayLength
                } else y._iDisplayStart = 0;
                else Z(y, 0, "Unknown paging action: " + F);
            return H != y._iDisplayStart
        }

        function xb(y) {
            var F = f.createElement("div");
            F.className = y.oClasses.sInfo;
            if (typeof y.aanFeatures.i == "undefined") {
                y.aoDrawCallback.push({
                    fn: Pa,
                    sName: "information"
                });
                y.sTableId !== "" && F.setAttribute("id", y.sTableId + "_info")
            }
            return F
        }

        function Pa(y) {
            if (!(!y.oFeatures.bInfo || y.aanFeatures.i.length === 0)) {
                var F = y._iDisplayStart + 1,
                    H = y.fnDisplayEnd(),
                    K = y.fnRecordsTotal(),
                    N = y.fnRecordsDisplay(),
                    L = y.fnFormatNumber(F),
                    fa = y.fnFormatNumber(H),
                    ha = y.fnFormatNumber(K),
                    Ba = y.fnFormatNumber(N);
                if (y.oScroll.bInfinite) L = y.fnFormatNumber(1);
                L = y.fnRecordsDisplay() === 0 && y.fnRecordsDisplay() == y.fnRecordsTotal() ? y.oLanguage.sInfoEmpty + y.oLanguage.sInfoPostFix : y.fnRecordsDisplay() === 0 ? y.oLanguage.sInfoEmpty + " " + y.oLanguage.sInfoFiltered.replace("_MAX_", ha) + y.oLanguage.sInfoPostFix : y.fnRecordsDisplay() == y.fnRecordsTotal() ? y.oLanguage.sInfo.replace("_START_", L).replace("_END_", fa).replace("_TOTAL_", Ba) + y.oLanguage.sInfoPostFix :
                    y.oLanguage.sInfo.replace("_START_", L).replace("_END_", fa).replace("_TOTAL_", Ba) + " " + y.oLanguage.sInfoFiltered.replace("_MAX_", y.fnFormatNumber(y.fnRecordsTotal())) + y.oLanguage.sInfoPostFix;
                if (y.oLanguage.fnInfoCallback !== null) L = y.oLanguage.fnInfoCallback(y, F, H, K, N, L);
                y = y.aanFeatures.i;
                F = 0;
                for (H = y.length; F < H; F++) a(y[F]).html(L)
            }
        }

        function P(y) {
            if (y.oScroll.bInfinite) return null;
            var F = '<select size="1" ' + (y.sTableId === "" ? "" : 'name="' + y.sTableId + '_length"') + ">",
                H, K;
            if (y.aLengthMenu.length == 2 && typeof y.aLengthMenu[0] ==
                "object" && typeof y.aLengthMenu[1] == "object") {
                H = 0;
                for (K = y.aLengthMenu[0].length; H < K; H++) F += '<option value="' + y.aLengthMenu[0][H] + '">' + y.aLengthMenu[1][H] + "</option>"
            } else {
                H = 0;
                for (K = y.aLengthMenu.length; H < K; H++) F += '<option value="' + y.aLengthMenu[H] + '">' + y.aLengthMenu[H] + "</option>"
            }
            F += "</select>";
            var N = f.createElement("div");
            y.sTableId !== "" && typeof y.aanFeatures.l == "undefined" && N.setAttribute("id", y.sTableId + "_length");
            N.className = y.oClasses.sLength;
            N.innerHTML = y.oLanguage.sLengthMenu.replace("_MENU_",
                F);
            a('select option[value="' + y._iDisplayLength + '"]', N).attr("selected", true);
            a("select", N).bind("change.DT", function () {
                var L = a(this).val(),
                    fa = y.aanFeatures.l;
                H = 0;
                for (K = fa.length; H < K; H++) fa[H] != this.parentNode && a("select", fa[H]).val(L);
                y._iDisplayLength = parseInt(L, 10);
                Ka(y);
                if (y.fnDisplayEnd() == y.fnRecordsDisplay()) {
                    y._iDisplayStart = y.fnDisplayEnd() - y._iDisplayLength;
                    if (y._iDisplayStart < 0) y._iDisplayStart = 0
                }
                if (y._iDisplayLength == -1) y._iDisplayStart = 0;
                C(y)
            });
            return N
        }

        function T(y) {
            var F = f.createElement("div");
            y.sTableId !== "" && typeof y.aanFeatures.r == "undefined" && F.setAttribute("id", y.sTableId + "_processing");
            F.innerHTML = y.oLanguage.sProcessing;
            F.className = y.oClasses.sProcessing;
            y.nTable.parentNode.insertBefore(F, y.nTable);
            return F
        }

        function ba(y, F) {
            if (y.oFeatures.bProcessing)
                for (var H = y.aanFeatures.r, K = 0, N = H.length; K < N; K++) H[K].style.visibility = F ? "visible" : "hidden"
        }

        function ga(y, F) {
            for (var H = -1, K = 0; K < y.aoColumns.length; K++) {
                y.aoColumns[K].bVisible === true && H++;
                if (H == F) return K
            }
            return null
        }

        function W(y, F) {
            for (var H = -1, K = 0; K < y.aoColumns.length; K++) {
                y.aoColumns[K].bVisible === true && H++;
                if (K == F) return y.aoColumns[K].bVisible === true ? H : null
            }
            return null
        }

        function Ea(y, F) {
            var H, K;
            H = y._iDisplayStart;
            for (K = y._iDisplayEnd; H < K; H++)
                if (y.aoData[y.aiDisplay[H]].nTr == F) return y.aiDisplay[H];
            H = 0;
            for (K = y.aoData.length; H < K; H++)
                if (y.aoData[H].nTr == F) return H;
            return null
        }

        function za(y) {
            for (var F = 0, H = 0; H < y.aoColumns.length; H++) y.aoColumns[H].bVisible === true && F++;
            return F
        }

        function Ka(y) {
            y._iDisplayEnd = y.oFeatures.bPaginate === false ?
                y.aiDisplay.length : y._iDisplayStart + y._iDisplayLength > y.aiDisplay.length || y._iDisplayLength == -1 ? y.aiDisplay.length : y._iDisplayStart + y._iDisplayLength
        }

        function sa(y, F) {
            if (!y || y === null || y === "") return 0;
            if (typeof F == "undefined") F = f.getElementsByTagName("body")[0];
            var H, K = f.createElement("div");
            K.style.width = y;
            F.appendChild(K);
            H = K.offsetWidth;
            F.removeChild(K);
            return H
        }

        function Oa(y) {
            var F = 0,
                H, K = 0,
                N = y.aoColumns.length,
                L, fa = a("th", y.nTHead);
            for (L = 0; L < N; L++)
                if (y.aoColumns[L].bVisible) {
                    K++;
                    if (y.aoColumns[L].sWidth !==
                        null) {
                        H = sa(y.aoColumns[L].sWidthOrig, y.nTable.parentNode);
                        if (H !== null) y.aoColumns[L].sWidth = Qa(H);
                        F++
                    }
                }
            if (N == fa.length && F === 0 && K == N && y.oScroll.sX === "" && y.oScroll.sY === "")
                for (L = 0; L < y.aoColumns.length; L++) {
                    H = a(fa[L]).width();
                    if (H !== null) y.aoColumns[L].sWidth = Qa(H)
                } else {
                    F = y.nTable.cloneNode(false);
                    L = f.createElement("tbody");
                    H = f.createElement("tr");
                    F.removeAttribute("id");
                    F.appendChild(y.nTHead.cloneNode(true));
                    if (y.nTFoot !== null) {
                        F.appendChild(y.nTFoot.cloneNode(true));
                        va(function (ha) {
                            ha.style.width =
                                ""
                        }, F.getElementsByTagName("tr"))
                    }
                    F.appendChild(L);
                    L.appendChild(H);
                    L = a("thead th", F);
                    if (L.length === 0) L = a("tbody tr:eq(0)>td", F);
                    L.each(function (ha) {
                        this.style.width = "";
                        ha = ga(y, ha);
                        if (ha !== null && y.aoColumns[ha].sWidthOrig !== "") this.style.width = y.aoColumns[ha].sWidthOrig
                    });
                    for (L = 0; L < N; L++)
                        if (y.aoColumns[L].bVisible) {
                            K = gb(y, L);
                            if (K !== null) {
                                K = K.cloneNode(true);
                                H.appendChild(K)
                            }
                        }
                    L = y.nTable.parentNode;
                    L.appendChild(F);
                    if (y.oScroll.sX !== "" && y.oScroll.sXInner !== "") F.style.width = Qa(y.oScroll.sXInner);
                    else if (y.oScroll.sX !==
                        "") {
                        F.style.width = "";
                        if (a(F).width() < L.offsetWidth) F.style.width = Qa(L.offsetWidth)
                    } else if (y.oScroll.sY !== "") F.style.width = Qa(L.offsetWidth);
                    F.style.visibility = "hidden";
                    Va(y, F);
                    N = a("tbody tr:eq(0)>td", F);
                    if (N.length === 0) N = a("thead tr:eq(0)>th", F);
                    for (L = H = 0; L < y.aoColumns.length; L++)
                        if (y.aoColumns[L].bVisible) {
                            K = a(N[H]).outerWidth();
                            if (K !== null && K > 0) y.aoColumns[L].sWidth = Qa(K);
                            H++
                        }
                    y.nTable.style.width = Qa(a(F).outerWidth());
                    F.parentNode.removeChild(F)
                }
        }

        function Va(y, F) {
            if (y.oScroll.sX === "" && y.oScroll.sY !==
                "") {
                a(F).width();
                F.style.width = Qa(a(F).outerWidth() - y.oScroll.iBarWidth)
            } else if (y.oScroll.sX !== "") F.style.width = Qa(a(F).outerWidth())
        }

        function gb(y, F, H) {
            if (typeof H == "undefined" || H) {
                H = Ga(y, F);
                F = W(y, F);
                if (H < 0) return null;
                return y.aoData[H].nTr.getElementsByTagName("td")[F]
            }
            var K = -1,
                N, L;
            H = -1;
            var fa = f.createElement("div");
            fa.style.visibility = "hidden";
            fa.style.position = "absolute";
            f.body.appendChild(fa);
            N = 0;
            for (L = y.aoData.length; N < L; N++) {
                fa.innerHTML = y.aoData[N]._aData[F];
                if (fa.offsetWidth > K) {
                    K = fa.offsetWidth;
                    H = N
                }
            }
            f.body.removeChild(fa);
            if (H >= 0) {
                F = W(y, F);
                if (y = y.aoData[H].nTr.getElementsByTagName("td")[F]) return y
            }
            return null
        }

        function Ga(y, F) {
            for (var H = -1, K = -1, N = 0; N < y.aoData.length; N++) {
                var L = y.aoData[N]._aData[F];
                if (L.length > H) {
                    H = L.length;
                    K = N
                }
            }
            return K
        }

        function Qa(y) {
            if (y === null) return "0px";
            if (typeof y == "number") {
                if (y < 0) return "0px";
                return y + "px"
            }
            var F = y.charCodeAt(y.length - 1);
            if (F < 48 || F > 57) return y;
            return y + "px"
        }

        function ob(y) {
            for (var F = g.aTypes, H = F.length, K = 0; K < H; K++) {
                var N = F[K](y);
                if (N !== null) return N
            }
            return "string"
        }

        function lb(y) {
            for (var F = 0; F < j.length; F++)
                if (j[F].nTable == y) return j[F];
            return null
        }

        function pb(y) {
            for (var F = [], H = y.aoData.length, K = 0; K < H; K++) F.push(y.aoData[K]._aData);
            return F
        }

        function wb(y) {
            for (var F = [], H = y.aoData.length, K = 0; K < H; K++) F.push(y.aoData[K].nTr);
            return F
        }

        function mb(y) {
            var F = wb(y),
                H = [],
                K, N = [],
                L, fa, ha, Ba;
            L = 0;
            for (fa = F.length; L < fa; L++) {
                H = [];
                ha = 0;
                for (Ba = F[L].childNodes.length; ha < Ba; ha++) {
                    K = F[L].childNodes[ha];
                    K.nodeName.toUpperCase() == "TD" && H.push(K)
                }
                ha = K = 0;
                for (Ba = y.aoColumns.length; ha <
                    Ba; ha++)
                    if (y.aoColumns[ha].bVisible) N.push(H[ha - K]);
                    else {
                        N.push(y.aoData[L]._anHidden[ha]);
                        K++
                    }
            }
            return N
        }

        function Ab(y) {
            return y.replace(RegExp("(\\/|\\.|\\*|\\+|\\?|\\||\\(|\\)|\\[|\\]|\\{|\\}|\\\\|\\$|\\^)", "g"), "\\$1")
        }

        function Hb(y, F) {
            for (var H = -1, K = 0, N = y.length; K < N; K++)
                if (y[K] == F) H = K;
                else y[K] > F && y[K]--;
            H != -1 && y.splice(H, 1)
        }

        function S(y, F) {
            for (var H = F.split(","), K = [], N = 0, L = y.aoColumns.length; N < L; N++)
                for (var fa = 0; fa < L; fa++)
                    if (y.aoColumns[N].sName == H[fa]) {
                        K.push(fa);
                        break
                    }
            return K
        }

        function da(y) {
            for (var F =
                "", H = 0, K = y.aoColumns.length; H < K; H++) F += y.aoColumns[H].sName + ",";
            if (F.length == K) return "";
            return F.slice(0, -1)
        }

        function Z(y, F, H) {
            y = y.sTableId === "" ? "DataTables warning: " + H : "DataTables warning (table id = '" + y.sTableId + "'): " + H;
            if (F === 0)
                if (g.sErrMode == "alert") alert(y);
                else throw y;
                else typeof console != "undefined" && typeof console.log != "undefined" && console.log(y)
        }

        function ea(y) {
            y.aoData.splice(0, y.aoData.length);
            y.aiDisplayMaster.splice(0, y.aiDisplayMaster.length);
            y.aiDisplay.splice(0, y.aiDisplay.length);
            Ka(y)
        }

        function ca(y) {
            if (!(!y.oFeatures.bStateSave || typeof y.bDestroying != "undefined")) {
                var F, H, K, N = "{";
                N += '"iCreate":' + (new Date).getTime() + ",";
                N += '"iStart":' + y._iDisplayStart + ",";
                N += '"iEnd":' + y._iDisplayEnd + ",";
                N += '"iLength":' + y._iDisplayLength + ",";
                N += '"sFilter":"' + encodeURIComponent(y.oPreviousSearch.sSearch) + '",';
                N += '"sFilterEsc":' + !y.oPreviousSearch.bRegex + ",";
                N += '"aaSorting":[ ';
                for (F = 0; F < y.aaSorting.length; F++) N += "[" + y.aaSorting[F][0] + ',"' + y.aaSorting[F][1] + '"],';
                N = N.substring(0, N.length - 1);
                N += "],";
                N += '"aaSearchCols":[ ';
                for (F = 0; F < y.aoPreSearchCols.length; F++) N += '["' + encodeURIComponent(y.aoPreSearchCols[F].sSearch) + '",' + !y.aoPreSearchCols[F].bRegex + "],";
                N = N.substring(0, N.length - 1);
                N += "],";
                N += '"abVisCols":[ ';
                for (F = 0; F < y.aoColumns.length; F++) N += y.aoColumns[F].bVisible + ",";
                N = N.substring(0, N.length - 1);
                N += "]";
                F = 0;
                for (H = y.aoStateSave.length; F < H; F++) {
                    K = y.aoStateSave[F].fn(y, N);
                    if (K !== "") N = K
                }
                N += "}";
                oa(y.sCookiePrefix + y.sInstance, N, y.iCookieDuration, y.sCookiePrefix, y.fnCookieCallback)
            }
        }

        function ma(y,
            F) {
            if (y.oFeatures.bStateSave) {
                var H, K, N;
                K = ya(y.sCookiePrefix + y.sInstance);
                if (K !== null && K !== "") {
                    try {
                        H = typeof a.parseJSON == "function" ? a.parseJSON(K.replace(/'/g, '"')) : eval("(" + K + ")")
                    } catch (L) {
                        return
                    }
                    K = 0;
                    for (N = y.aoStateLoad.length; K < N; K++)
                        if (!y.aoStateLoad[K].fn(y, H)) return;
                    y.oLoadedState = a.extend(true, {}, H);
                    y._iDisplayStart = H.iStart;
                    y.iInitDisplayStart = H.iStart;
                    y._iDisplayEnd = H.iEnd;
                    y._iDisplayLength = H.iLength;
                    y.oPreviousSearch.sSearch = decodeURIComponent(H.sFilter);
                    y.aaSorting = H.aaSorting.slice();
                    y.saved_aaSorting =
                        H.aaSorting.slice();
                    if (typeof H.sFilterEsc != "undefined") y.oPreviousSearch.bRegex = !H.sFilterEsc;
                    if (typeof H.aaSearchCols != "undefined")
                        for (K = 0; K < H.aaSearchCols.length; K++) y.aoPreSearchCols[K] = {
                            sSearch: decodeURIComponent(H.aaSearchCols[K][0]),
                            bRegex: !H.aaSearchCols[K][1]
                        };
                    if (typeof H.abVisCols != "undefined") {
                        F.saved_aoColumns = [];
                        for (K = 0; K < H.abVisCols.length; K++) {
                            F.saved_aoColumns[K] = {};
                            F.saved_aoColumns[K].bVisible = H.abVisCols[K]
                        }
                    }
                }
            }
        }

        function oa(y, F, H, K, N) {
            var L = new Date;
            L.setTime(L.getTime() + H * 1E3);
            H = e.location.pathname.split("/");
            y = y + "_" + H.pop().replace(/[\/:]/g, "").toLowerCase();
            var fa;
            if (N !== null) {
                fa = typeof a.parseJSON == "function" ? a.parseJSON(F) : eval("(" + F + ")");
                F = N(y, fa, L.toGMTString(), H.join("/") + "/")
            } else F = y + "=" + encodeURIComponent(F) + "; expires=" + L.toGMTString() + "; path=" + H.join("/") + "/";
            N = "";
            L = 9999999999999;
            if ((ya(y) !== null ? f.cookie.length : F.length + f.cookie.length) + 10 > 4096) {
                y = f.cookie.split(";");
                for (var ha = 0, Ba = y.length; ha < Ba; ha++)
                    if (y[ha].indexOf(K) != -1) {
                        var Ja = y[ha].split("=");
                        try {
                            fa =
                                eval("(" + decodeURIComponent(Ja[1]) + ")")
                        } catch (cb) {
                            continue
                        }
                        if (typeof fa.iCreate != "undefined" && fa.iCreate < L) {
                            N = Ja[0];
                            L = fa.iCreate
                        }
                    }
                if (N !== "") f.cookie = N + "=; expires=Thu, 01-Jan-1970 00:00:01 GMT; path=" + H.join("/") + "/"
            }
            f.cookie = F
        }

        function ya(y) {
            var F = e.location.pathname.split("/");
            y = y + "_" + F[F.length - 1].replace(/[\/:]/g, "").toLowerCase() + "=";
            F = f.cookie.split(";");
            for (var H = 0; H < F.length; H++) {
                for (var K = F[H]; K.charAt(0) == " ";) K = K.substring(1, K.length);
                if (K.indexOf(y) === 0) return decodeURIComponent(K.substring(y.length,
                    K.leng "}";
                oa(y.sCookiePrefix + y.sInstance, N, y.iCookieDuration, y.sCookiePrefix, y.fnCookieCallback)
            }
        }

        function ma(y,
            F) {
            if (y.oFeatures.bStateSave) {
                var H, K, N;
                K = ya(y.sCookiePrefix + y.sInstance);
                if (K !== null && K !== "") {
                    try {
                        H = typeof a.parseJSON == "function" ? a.parseJSON(K.replace(/'/g, '"')) : eval("(" + K + ")")
                    } catch (L) {
                        return
                    }
                    K = 0;
                    for (N = y.aoStateLoad.length; K < N; K++)
                        if (!y.aoStateLoad[K].fn(y, H)) return;
                    y.oLoadedState = a.extend(true, {}, H);
                    y._iDisplayStart = H.iStart;
                    y.iInitDisplayStart = H.iStart;
                    y._iDisplayEnd = H.iEnd;
                    y._iDisplayLength = H.iLength;
                    y.oPreviousSearch.sSearch = decodeURIComponent(H.sFilter);
                    y.aaSorting = H.aaSorting.slice();
                    y.saved_aaSorting =
                        H.aaSorting.slice();
                    if (typeof H.sFilterEsc != "undefined") y.oPreviousSearch.bRegex = !H.sFilterEsc;
                    if (typeof H.aaSearchCols != "undefined")
                        for (K = 0; K < H.aaSearchCols.length; K++) y.aoPreSearchCols[K] = {
                            sSearch: decodeURIComponent(H.aaSearchCols[K][0]),
                            bRegex: !H.aaSearchCols[K][1]
                        };
                    if (typeof H.abVisCols != "undefined") {
                        F.saved_aoColumns = [];
                        for (K = 0; K < H.abVisCols.length; K++) {
                            F.saved_aoColumns[K] = {};
                            F.saved_aoColumns[K].bVisible = H.abVisCols[K]
                        }
                    }
                }
            }
        }

        function oa(y, F, H, K, N) {
            var L = new Date;
            L.setTime(L.getTime() + H * 1E3);
            H = e.location.pathname.split("/");
            y = y + "_" + H.pop().replace(/[\/:]/g, "").toLowerCase();
            var fa;
            if (N !== null) {
                fa = typeof a.parseJSON == "function" ? a.parseJSON(F) : eval("(" + F + ")");
                F = N(y, fa, L.toGMTString(), H.join("/") + "/")
            } else F = y + "=" + encodeURIComponent(F) + "; expires=" + L.toGMTString() + "; path=" + H.join("/") + "/";
            N = "";
            L = 9999999999999;
            if ((ya(y) !== null ? f.cookie.length : F.length + f.cookie.length) + 10 > 4096) {
                y = f.cookie.split(";");
                for (var ha = 0, Ba = y.length; ha < Ba; ha++)
                    if (y[ha].indexOf(K) != -1) {
                        var Ja = y[ha].split("=");
                        try {
                            fa =
                                eval("(" + decodeURIComponent(Ja[1]) + ")")
                        } catch (cb) {
                            continue
                        }
                        if (typeof fa.iCreate != "undefined" && fa.iCreate < L) {
                            N = Ja[0];
                            L = fa.iCreate
                        }
                    }
                if (N !== "") f.cookie = N + "=; expires=Thu, 01-Jan-1970 00:00:01 GMT; path=" + H.join("/") + "/"
            }
            f.cookie = F
        }

        function ya(y) {
            var F = e.location.pathname.split("/");
            y = y + "_" + F[F.length - 1].replace(/[\/:]/g, "").toLowerCase() + "=";
            F = f.cookie.split(";");
            for (var H = 0; H < F.length; H++) {
                for (var K = F[H]; K.charAt(0) == " ";) K = K.substring(1, K.length);
                if (K.indexOf(y) === 0) return decodeURIComponent(K.substring(y.length,
                    K.length))
            }
            return null
        }

        function ta(y) {
            y = y.getElementsByTagName("tr");
            if (y.length == 1) return y[0].getElementsByTagName("th");
            var F = [],
                H = [],
                K, N, L, fa, ha, Ba, Ja = function (A, D, I) {
                    for (; typeof A[D][I] != "undefined";) I++;
                    return I
                }, cb = function (A) {
                    if (typeof F[A] == "undefined") F[A] = []
                };
            K = 0;
            for (fa = y.length; K < fa; K++) {
                cb(K);
                var hb = 0,
                    yb = [];
                N = 0;
                for (ha = y[K].childNodes.length; N < ha; N++)
                    if (y[K].childNodes[N].nodeName.toUpperCase() == "TD" || y[K].childNodes[N].nodeName.toUpperCase() == "TH") yb.push(y[K].childNodes[N]);
                N = 0;
                for (ha =
                    yb.length; N < ha; N++) {
                    var Gb = yb[N].getAttribute("colspan") * 1,
                        vb = yb[N].getAttribute("rowspan") * 1;
                    if (!Gb || Gb === 0 || Gb === 1) {
                        Ba = Ja(F, K, hb);
                        F[K][Ba] = yb[N].nodeName.toUpperCase() == "TD" ? 4 : yb[N];
                        if (vb || vb === 0 || vb === 1)
                            for (L = 1; L < vb; L++) {
                                cb(K + L);
                                F[K + L][Ba] = 2
                            }
                        hb++
                    } else {
                        Ba = Ja(F, K, hb);
                        for (L = 0; L < Gb; L++) F[K][Ba + L] = 3;
                        hb += Gb
                    }
                }
            }
            K = 0;
            for (fa = F.length; K < fa; K++) {
                N = 0;
                for (ha = F[K].length; N < ha; N++)
                    if (typeof F[K][N] == "object" && typeof H[N] == "undefined") H[N] = F[K][N]
            }
            return H
        }

        function Aa() {
            var y = f.createElement("p"),
                F = y.style;
            F.width =
                "100%";
            F.height = "200px";
            var H = f.createElement("div");
            F = H.style;
            F.position = "absolute";
            F.top = "0px";
            F.left = "0px";
            F.visibility = "hidden";
            F.width = "200px";
            F.height = "150px";
            F.overflow = "hidden";
            H.appendChild(y);
            f.body.appendChild(H);
            F = y.offsetWidth;
            H.style.overflow = "scroll";
            y = y.offsetWidth;
            if (F == y) y = H.clientWidth;
            f.body.removeChild(H);
            return F - y
        }

        function va(y, F, H) {
            for (var K = 0, N = F.length; K < N; K++)
                for (var L = 0, fa = F[K].childNodes.length; L < fa; L++)
                    if (F[K].childNodes[L].nodeType == 1) typeof H != "undefined" ? y(F[K].childNodes[L],
                        H[K].childNodes[L]) : y(F[K].childNodes[L])
        }

        function ra(y, F, H, K) {
            if (typeof K == "undefined") K = H;
            if (typeof F[H] != "undefined") y[K] = F[H]
        }
        this.oApi = {};
        this.fnDraw = function (y) {
            var F = lb(this[g.iApiIndex]);
            if (typeof y != "undefined" && y === false) {
                Ka(F);
                C(F)
            } else w(F)
        };
        this.fnFilter = function (y, F, H, K, N) {
            var L = lb(this[g.iApiIndex]);
            if (L.oFeatures.bFilter) {
                if (typeof H == "undefined") H = false;
                if (typeof K == "undefined") K = true;
                if (typeof N == "undefined") N = true;
                if (typeof F == "undefined" || F === null) {
                    na(L, {
                            sSearch: y,
                            bRegex: H,
                            bSmart: K
                        },
                        1);
                    if (N && typeof L.aanFeatures.f != "undefined") {
                        F = L.aanFeatures.f;
                        H = 0;
                        for (K = F.length; H < K; H++) a("input", F[H]).val(y)
                    }
                } else {
                    L.aoPreSearchCols[F].sSearch = y;
                    L.aoPreSearchCols[F].bRegex = H;
                    L.aoPreSearchCols[F].bSmart = K;
                    na(L, L.oPreviousSearch, 1)
                }
            }
        };
        this.fnSettings = function () {
            return lb(this[g.iApiIndex])
        };
        this.fnVersionCheck = g.fnVersionCheck;
        this.fnSort = function (y) {
            var F = lb(this[g.iApiIndex]);
            F.aaSorting = y;
            Fa(F)
        };
        this.fnSortListener = function (y, F, H) {
            db(lb(this[g.iApiIndex]), y, F, H)
        };
        this.fnAddData = function (y,
            F) {
            if (y.length === 0) return [];
            var H = [],
                K, N = lb(this[g.iApiIndex]);
            if (typeof y[0] == "object")
                for (var L = 0; L < y.length; L++) {
                    K = x(N, y[L]);
                    if (K == -1) return H;
                    H.push(K)
                } else {
                    K = x(N, y);
                    if (K == -1) return H;
                    H.push(K)
                }
            N.aiDisplay = N.aiDisplayMaster.slice();
            if (typeof F == "undefined" || F) w(N);
            return H
        };
        this.fnDeleteRow = function (y, F, H) {
            var K = lb(this[g.iApiIndex]);
            y = typeof y == "object" ? Ea(K, y) : y;
            var N = K.aoData.splice(y, 1),
                L = a.inArray(y, K.aiDisplay);
            K.asDataSearch.splice(L, 1);
            Hb(K.aiDisplayMaster, y);
            Hb(K.aiDisplay, y);
            typeof F ==
                "function" && F.call(this, K, N);
            if (K._iDisplayStart >= K.aiDisplay.length) {
                K._iDisplayStart -= K._iDisplayLength;
                if (K._iDisplayStart < 0) K._iDisplayStart = 0
            }
            if (typeof H == "undefined" || H) {
                Ka(K);
                C(K)
            }
            return N
        };
        this.fnClearTable = function (y) {
            var F = lb(this[g.iApiIndex]);
            ea(F);
            if (typeof y == "undefined" || y) C(F)
        };
        this.fnOpen = function (y, F, H) {
            var K = lb(this[g.iApiIndex]);
            this.fnClose(y);
            var N = f.createElement("tr"),
                L = f.createElement("td");
            N.appendChild(L);
            L.className = H;
            L.colSpan = za(K);
            L.innerHTML = F;
            F = a("tr", K.nTBody);
            a.inArray(y,
                F) != -1 && a(N).insertAfter(y);
            K.aoOpenRows.push({
                nTr: N,
                nParent: y
            });
            return N
        };
        this.fnClose = function (y) {
            for (var F = lb(this[g.iApiIndex]), H = 0; H < F.aoOpenRows.length; H++)
                if (F.aoOpenRows[H].nParent == y) {
                    (y = F.aoOpenRows[H].nTr.parentNode) && y.removeChild(F.aoOpenRows[H].nTr);
                    F.aoOpenRows.splice(H, 1);
                    return 0
                }
            return 1
        };
        this.fnGetData = function (y) {
            var F = lb(this[g.iApiIndex]);
            if (typeof y != "undefined") {
                y = typeof y == "object" ? Ea(F, y) : y;
                return F.aoData[y] ? F.aoData[y]._aData : null
            }
            return pb(F)
        };
        this.fnGetNodes = function (y) {
            var F =
                lb(this[g.iApiIndex]);
         0; N < y; N++) K.aoColumns[N].bVisible &&
                        F++;
                    if (F >= za(K)) {
                        Ja.appendChild(cb[y]);
                        Ja = a(">tr", K.nTHead);
                        N = 1;
                        for (L = Ja.length; N < L; N++) Ja[N].appendChild(K.aoColumns[y].anThExtra[N - 1]);
                        if (fa) {
                            fa.appendChild(ha[y]);
                            Ja = a(">tr", K.nTFoot);
                            N = 1;
                            for (L = Ja.length; N < L; N++) Ja[N].appendChild(K.aoColumns[y].anTfExtra[N - 1])
                        }
                        N = 0;
                        for (L = K.aoData.length; N < L; N++) {
                            fa = K.aoData[N]._anHidden[y];
                            K.aoData[N].nTr.appendChild(fa)
                        }
                    } else {
                        for (N = y; N < L; N++) {
                            Ba = W(K, N);
                            if (Ba !== null) break
                        }
                        Ja.insertBefore(cb[y], Ja.getElementsByTagName("th")[Ba]);
                        Ja = a(">tr", K.nTHead);
                        N = 1;
                        for (L = Ja.length; N <
                            L; N++) {
                            cb = a(Ja[N]).children();
                            Ja[N].insertBefore(K.aoColumns[y].anThExtra[N - 1], cb[Ba])
                        }
                        if (fa) {
                            fa.insertBefore(ha[y], fa.getElementsByTagName("th")[Ba]);
                            Ja = a(">tr", K.nTFoot);
                            N = 1;
                            for (L = Ja.length; N < L; N++) {
                                cb = a(Ja[N]).children();
                                Ja[N].insertBefore(K.aoColumns[y].anTfExtra[N - 1], cb[Ba])
                            }
                        }
                        mb(K);
                        N = 0;
                        for (L = K.aoData.length; N < L; N++) {
                            fa = K.aoData[N]._anHidden[y];
                            K.aoData[N].nTr.insertBefore(fa, a(">td:eq(" + Ba + ")", K.aoData[N].nTr)[0])
                        }
                    }
                    K.aoColumns[y].bVisible = true
                } else {
                    Ja.removeChild(cb[y]);
                    N = 0;
                    for (L = K.aoColumns[y].anThExtra.length; N <
                        L; N++) {
                        Ba = K.aoColumns[y].anThExtra[N];
                        Ba.parentNode.removeChild(Ba)
                    }
                    if (fa) {
                        fa.removeChild(ha[y]);
                        N = 0;
                        for (L = K.aoColumns[y].anTfExtra.length; N < L; N++) {
                            Ba = K.aoColumns[y].anTfExtra[N];
                            Ba.parentNode.removeChild(Ba)
                        }
                    }
                    ha = mb(K);
                    N = 0;
                    for (L = K.aoData.length; N < L; N++) {
                        fa = ha[N * K.aoColumns.length + y * 1];
                        K.aoData[N]._anHidden[y] = fa;
                        fa.parentNode.removeChild(fa)
                    }
                    K.aoColumns[y].bVisible = false
                }
                N = 0;
                for (L = K.aoOpenRows.length; N < L; N++) K.aoOpenRows[N].nTr.colSpan = za(K);
                if (typeof H == "undefined" || H) {
                    O(K);
                    C(K)
                }
                ca(K)
            }
        };
        this.fnPageChange =
            function (y, F) {
                var H = lb(this[g.iApiIndex]);
                rb(H, y);
                Ka(H);
                if (typeof F == "undefined" || F) C(H)
        };
        this.fnDestroy = function () {
            var y = lb(this[g.iApiIndex]),
                F = y.nTableWrapper.parentNode,
                H = y.nTBody,
                K, N;
            y.bDestroying = true;
            a(y.nTableWrapper).find("*").andSelf().unbind(".DT");
            K = 0;
            for (N = y.aoColumns.length; K < N; K++) y.aoColumns[K].bVisible === false && this.fnSetColumnVis(K, true);
            a("tbody>tr>td." + y.oClasses.sRowEmpty, y.nTable).parent().remove();
            if (y.nTable != y.nTHead.parentNode) {
                a(">thead", y.nTable).remove();
                y.nTable.appendChild(y.nTHead)
            }
            if (y.nTFoot &&
                y.nTable != y.nTFoot.parentNode) {
                a(">tfoot", y.nTable).remove();
                y.nTable.appendChild(y.nTFoot)
            }
            y.nTable.parentNode.removeChild(y.nTable);
            a(y.nTableWrapper).remove();
            y.aaSorting = [];
            y.aaSortingFixed = [];
            eb(y);
            a(wb(y)).removeClass(y.asStripClasses.join(" "));
            if (y.bJUI) {
                a("th", y.nTHead).removeClass([g.oStdClasses.sSortable, g.oJUIClasses.sSortableAsc, g.oJUIClasses.sSortableDesc, g.oJUIClasses.sSortableNone].join(" "));
                a("th span", y.nTHead).remove()
            } else a("th", y.nTHead).removeClass([g.oStdClasses.sSortable,
                g.oStdClasses.sSortableAsc, g.oStdClasses.sSortableDesc, g.oStdClasses.sSortableNone
            ].join(" "));
            F.appendChild(y.nTable);
            K = 0;
            for (N = y.aoData.length; K < N; K++) H.appendChild(y.aoData[K].nTr);
            y.nTable.style.width = Qa(y.sDestroyWidth);
            a(">tr:even", H).addClass(y.asDestoryStrips[0]);
            a(">tr:odd", H).addClass(y.asDestoryStrips[1]);
            K = 0;
            for (N = j.length; K < N; K++) j[K] == y && j.splice(K, 1)
        };
        this.fnAdjustColumnSizing = function (y) {
            var F = lb(this[g.iApiIndex]);
            O(F);
            if (typeof y == "undefined" || y) this.fnDraw(false);
            else if (F.oScroll.sX !==
                "" || F.oScroll.sY !== "") this.oApi._fnScrollDraw(F)
        };
        for (var Ma in g.oApi)
            if (Ma) this[Ma] = l(Ma);
        this.oApi._fnExternApiFunc = l;
        this.oApi._fnInitalise = o;
        this.oApi._fnLanguageProcess = q;
        this.oApi._fnAddColumn = u;
        this.oApi._fnColumnOptions = v;
        this.oApi._fnAddData = x;
        this.oApi._fnGatherData = z;
        this.oApi._fnDrawHead = B;
        this.oApi._fnDraw = C;
        this.oApi._fnReDraw = w;
        this.oApi._fnAjaxUpdate = G;
        this.oApi._fnAjaxUpdateDraw = J;
        this.oApi._fnAddOptionsHtml = E;
        this.oApi._fnFeatureHtmlTable = M;
        this.oApi._fnScrollDraw = R;
        this.oApi._fnAjustColumnSizing =
            O;
        this.oApi._fnFeatureHtmlFilter = Y;
        this.oApi._fnFilterComplete = na;
        this.oApi._fnFilterCustom = qa;
        this.oApi._fnFilterColumn = Na;
        this.oApi._fnFilter = pa;
        this.oApi._fnBuildSearchArray = La;
        this.oApi._fnBuildSearchRow = $a;
        this.oApi._fnFilterCreateSearch = fb;
        this.oApi._fnDataToSearch = jb;
        this.oApi._fnSort = Fa;
        this.oApi._fnSortAttachListener = db;
        this.oApi._fnSortingClasses = eb;
        this.oApi._fnFeatureHtmlPaginate = ab;
        this.oApi._fnPageChange = rb;
        this.oApi._fnFeatureHtmlInfo = xb;
        this.oApi._fnUpdateInfo = Pa;
        this.oApi._fnFeatureHtmlLength =
            P;
        this.oApi._fnFeatureHtmlProcessing = T;
        this.oApi._fnProcessingDisplay = ba;
        this.oApi._fnVisibleToColumnIndex = ga;
        this.oApi._fnColumnIndexToVisible = W;
        this.oApi._fnNodeToDataIndex = Ea;
        this.oApi._fnVisbleColumns = za;
        this.oApi._fnCalculateEnd = Ka;
        this.oApi._fnConvertToWidth = sa;
        this.oApi._fnCalculateColumnWidths = Oa;
        this.oApi._fnScrollingWidthAdjust = Va;
        this.oApi._fnGetWidestNode = gb;
        this.oApi._fnGetMaxLenString = Ga;
        this.oApi._fnStringToCss = Qa;
        this.oApi._fnArrayCmp = function (y, F) {
            if (y.length != F.length) return 1;
            for (var H =
                0; H < y.length; H++)
                if (y[H] != F[H]) return 2;
            return 0
        };
        this.oApi._fnDetectType = ob;
        this.oApi._fnSettingsFromNode = lb;
        this.oApi._fnGetDataMaster = pb;
        this.oApi._fnGetTrNodes = wb;
        this.oApi._fnGetTdNodes = mb;
        this.oApi._fnEscapeRegex = Ab;
        this.oApi._fnDeleteIndex = Hb;
        this.oApi._fnReOrderIndex = S;
        this.oApi._fnColumnOrdering = da;
        this.oApi._fnLog = Z;
        this.oApi._fnClearTable = ea;
        this.oApi._fnSaveState = ca;
        this.oApi._fnLoadState = ma;
        this.oApi._fnCreateCookie = oa;
        this.oApi._fnReadCookie = ya;
        this.oApi._fnGetUniqueThs = ta;
        this.oApi._fnScrollBarWidth =
            Aa;
        this.oApi._fnApplyToChildren = va;
        this.oApi._fnMap = ra;
        var Ta = this;
        return this.each(function () {
            var y = 0,
                F, H, K, N;
            y = 0;
            for (F = j.length; y < F; y++) {
                if (j[y].nTable == this)
                    if (typeof c == "undefined" || typeof c.bRetrieve != "undefined" && c.bRetrieve === true) return j[y].oInstance;
                    else if (typeof c.bDestroy != "undefined" && c.bDestroy === true) {
                    j[y].oInstance.fnDestroy();
                    break
                } else {
                    Z(j[y], 0, "Cannot reinitialise DataTable.\n\nTo retrieve the DataTables object for this table, please pass either no arguments to the dataTable() function, or set bRetrieve to true. Alternatively, to destory the old table and create a new one, set bDestroy to true (note that a lot of changes to the configuration can be made through the API which is usually much faster).");
                    return
                } if (j[y].sTableId !== "" && j[y].sTableId == this.getAttribute("id")) {
                    j.splice(y, 1);
                    break
                }
            }
            var L = new b;
            j.push(L);
            var fa = false,
                ha = false;
            y = this.getAttribute("id");
            if (y !== null) {
                L.sTableId = y;
                L.sInstance = y
            } else L.sInstance = g._oExternConfig.iNextUnique++; if (this.nodeName.toLowerCase() != "table") Z(L, 0, "Attempted to initialise DataTables on a node which is not a table: " + this.nodeName);
            else {
                L.nTable = this;
                L.oInstance = Ta.length == 1 ? Ta : a(this).dataTable();
                L.oApi = Ta.oApi;
                L.sDestroyWidth = a(this).width();
                if (typeof c !=
                    "undefined" && c !== null) {
                    L.oInit = c;
                    ra(L.oFeatures, c, "bPaginate");
                    ra(L.oFeatures, c, "bLengthChange");
                    ra(L.oFeatures, c, "bFilter");
                    ra(L.oFeatures, c, "bSort");
                    ra(L.oFeatures, c, "bInfo");
                    ra(L.oFeatures, c, "bProcessing");
                    ra(L.oFeatures, c, "bAutoWidth");
                    ra(L.oFeatures, c, "bSortClasses");
                    ra(L.oFeatures, c, "bServerSide");
                    ra(L.oScroll, c, "sScrollX", "sX");
                    ra(L.oScroll, c, "sScrollXInner", "sXInner");
                    ra(L.oScroll, c, "sScrollY", "sY");
                    ra(L.oScroll, c, "bScrollCollapse", "bCollapse");
                    ra(L.oScroll, c, "bScrollInfinite", "bInfinite");
                    ra(L.oScroll, c, "iScrollLoadGap", "iLoadGap");
                    ra(L.oScroll, c, "bScrollAutoCss", "bAutoCss");
                    ra(L, c, "asStripClasses");
                    ra(L, c, "fnRowCallback");
                    ra(L, c, "fnHeaderCallback");
                    ra(L, c, "fnFooterCallback");
                    ra(L, c, "fnCookieCallback");
                    ra(L, c, "fnInitComplete");
                    ra(L, c, "fnServerData");
                    ra(L, c, "fnFormatNumber");
                    ra(L, c, "aaSorting");
                    ra(L, c, "aaSortingFixed");
                    ra(L, c, "aLengthMenu");
                    ra(L, c, "sPaginationType");
                    ra(L, c, "sAjaxSource");
                    ra(L, c, "iCookieDuration");
                    ra(L, c, "sCookiePrefix");
                    ra(L, c, "sDom");
                    ra(L, c, "oSearch", "oPreviousSearch");
                    ra(L, c, "aoSearchCols", "aoPreSearchCols");
                    ra(L, c, "iDisplayLength", "_iDisplayLength");
                    ra(L, c, "bJQueryUI", "bJUI");
                    ra(L.oLanguage, c, "fnInfoCallback");
                    typeof c.fnDrawCallback == "function" && L.aoDrawCallback.push({
                        fn: c.fnDrawCallback,
                        sName: "user"
                    });
                    typeof c.fnStateSaveCallback == "function" && L.aoStateSave.push({
                        fn: c.fnStateSaveCallback,
                        sName: "user"
                    });
                    typeof c.fnStateLoadCallback == "function" && L.aoStateLoad.push({
                        fn: c.fnStateLoadCallback,
                        sName: "user"
                    });
                    L.oFeatures.bServerSide && L.oFeatures.bSort && L.oFeatures.bSortClasses &&
                        L.aoDrawCallback.push({
                            fn: eb,
                            sName: "server_side_sort_classes"
                        });
                    if (typeof c.bJQueryUI != "undefined" && c.bJQueryUI) {
                        L.oClasses = g.oJUIClasses;
                        if (typeof c.sDom == "undefined") L.sDom = '<"H"lfr>t<"F"ip>'
                    }
                    if (L.oScroll.sX !== "" || L.oScroll.sY !== "") L.oScroll.iBarWidth = Aa();
                    if (typeof c.iDisplayStart != "undefined" && typeof L.iInitDisplayStart == "undefined") {
                        L.iInitDisplayStart = c.iDisplayStart;
                        L._iDisplayStart = c.iDisplayStart
                    }
                    if (typeof c.bStateSave != "undefined") {
                        L.oFeatures.bStateSave = c.bStateSave;
                        ma(L, c);
                        L.aoDrawCallback.push({
                            fn: ca,
                            sName: "state_save"
                        })
                    }
                    if (typeof c.aaData != "undefined") ha = true;
                    if (typeof c != "undefined" && typeof c.aoData != "undefined") c.aoColumns = c.aoData;
                    if (typeof c.oLanguage != "undefined")
                        if (typeof c.oLanguage.sUrl != "undefined" && c.oLanguage.sUrl !== "") {
                            L.oLanguage.sUrl = c.oLanguage.sUrl;
                            a.getJSON(L.oLanguage.sUrl, null, function (cb) {
                                q(L, cb, true)
                            });
                            fa = true
                        } else q(L, c.oLanguage, false)
                } else c = {}; if (typeof c.asStripClasses == "undefined") {
                    L.asStripClasses.push(L.oClasses.sStripOdd);
                    L.asStripClasses.push(L.oClasses.sStripEven)
                }
                H =
                    false;
                K = a(">tbody>tr", this);
                y = 0;
                for (F = L.asStripClasses.length; y < F; y++)
                    if (K.filter(":lt(2)").hasClass(L.asStripClasses[y])) {
                        H = true;
                        break
                    }
                if (H) {
                    L.asDestoryStrips = ["", ""];
                    if (a(K[0]).hasClass(L.oClasses.sStripOdd)) L.asDestoryStrips[0] += L.oClasses.sStripOdd + " ";
                    if (a(K[0]).hasClass(L.oClasses.sStripEven)) L.asDestoryStrips[0] += L.oClasses.sStripEven;
                    if (a(K[1]).hasClass(L.oClasses.sStripOdd)) L.asDestoryStrips[1] += L.oClasses.sStripOdd + " ";
                    if (a(K[1]).hasClass(L.oClasses.sStripEven)) L.asDestoryStrips[1] += L.oClasses.sStripEven;
                    K.removeClass(L.asStripClasses.join(" "))
                }
                y = this.getElementsByTagName("thead");
                H = y.length === 0 ? [] : ta(y[0]);
                var Ba;
                if (typeof c.aoColumns == "undefined") {
                    Ba = [];
                    y = 0;
                    for (F = H.length; y < F; y++) Ba.push(null)
                } else Ba = c.aoColumns;
                y = 0;
                for (F = Ba.length; y < F; y++) {
                    if (typeof c.saved_aoColumns != "undefined" && c.saved_aoColumns.length == F) {
                        if (Ba[y] === null) Ba[y] = {};
                        Ba[y].bVisible = c.saved_aoColumns[y].bVisible
                    }
                    u(L, H ? H[y] : null)
                }
                if (typeof c.aoColumnDefs != "undefined")
                    for (y = c.aoColumnDefs.length - 1; y >= 0; y--) {
                        var Ja = c.aoColumnDefs[y].aTargets;
                        a.isArray(Ja) || Z(L, 1, "aTargets must be an array of targets, not a " + typeof Ja);
                        H = 0;
                        for (K = Ja.length; H < K; H++)
                            if (typeof Ja[H] == "number" && Ja[H] >= 0) {
                                for (; L.aoColumns.length <= Ja[H];) u(L);
                                v(L, Ja[H], c.aoColumnDefs[y])
                            } else if (typeof Ja[H] == "number" && Ja[H] < 0) v(L, L.aoColumns.length + Ja[H], c.aoColumnDefs[y]);
                        else if (typeof Ja[H] == "string") {
                            F = 0;
                            for (N = L.aoColumns.length; F < N; F++)
                                if (Ja[H] == "_all" || L.aoColumns[F].nTh.className.indexOf(Ja[H]) != -1) v(L, F, c.aoColumnDefs[y])
                        }
                    }
                if (typeof Ba != "undefined") {
                    y = 0;
                    for (F = Ba.length; y <
                        F; y++) v(L, y, Ba[y])
                }
                y = 0;
                for (F = L.aaSorting.length; y < F; y++) {
                    if (L.aaSorting[y][0] >= L.aoColumns.length) L.aaSorting[y][0] = 0;
                    Ba = L.aoColumns[L.aaSorting[y][0]];
                    if (typeof L.aaSorting[y][2] == "undefined") L.aaSorting[y][2] = 0;
                    if (typeof c.aaSorting == "undefined" && typeof L.saved_aaSorting == "undefined") L.aaSorting[y][1] = Ba.asSorting[0];
                    H = 0;
                    for (K = Ba.asSorting.length; H < K; H++)
                        if (L.aaSorting[y][1] == Ba.asSorting[H]) {
                            L.aaSorting[y][2] = H;
                            break
                        }
                }
                eb(L);
                this.getElementsByTagName("thead").length === 0 && this.appendChild(f.createElement("thead"));
                this.getElementsByTagName("tbody").length === 0 && this.appendChild(f.createElement("tbody"));
                L.nTHead = this.getElementsByTagName("thead")[0];
                L.nTBody = this.getElementsByTagName("tbody")[0];
                if (this.getElementsByTagName("tfoot").length > 0) L.nTFoot = this.getElementsByTagName("tfoot")[0];
                if (ha)
                    for (y = 0; y < c.aaData.length; y++) x(L, c.aaData[y]);
                else z(L);
                L.aiDisplay = L.aiDisplayMaster.slice();
                L.bInitialised = true;
                fa === false && o(L)
            }
        })
    }
})(jQuery, window, document);
(function (a) {
    a.extend({
        tablesorter: new function () {
            function f(R, O) {
                j(R + "," + ((new Date).getTime() - O.getTime()) + "ms")
            }

            function j(R) {
                typeof console != "undefined" && typeof console.debug != "undefined" ? console.log(R) : alert(R)
            }

            function g(R, O) {
                if (R.config.debug) var Y = "";
                var na = R.tBodies[0].rows;
                if (R.tBodies[0].rows[0]) {
                    var qa = [];
                    na = na[0].cells;
                    for (var Na = na.length, pa = 0; pa < Na; pa++) {
                        var La = false;
                        if (a.metadata && a(O[pa]).metadata() && a(O[pa]).metadata().sorter) La = c(a(O[pa]).metadata().sorter);
                        else if (R.config.headers[pa] &&
                            R.config.headers[pa].sorter) La = c(R.config.headers[pa].sorter);
                        if (!La) a: {
                            La = R;
                            for (var $a = na[pa], fb = E.length, jb = 1; jb < fb; jb++)
                                if (E[jb].is(a.trim(l(La.config, $a)), La, $a)) {
                                    La = E[jb];
                                    break a
                                }
                            La = E[0]
                        }
                        if (R.config.debug) Y += "column:" + pa + " parser:" + La.id + "\n";
                        qa.push(La)
                    }
                }
                R.config.debug && j(Y);
                return qa
            }

            function c(R) {
                for (var O = E.length, Y = 0; Y < O; Y++)
                    if (E[Y].id.toLowerCase() == R.toLowerCase()) return E[Y];
                return false
            }

            function b(R) {
                if (R.config.debug) var O = new Date;
                for (var Y = R.tBodies[0] && R.tBodies[0].rows.length ||
                    0, na = R.tBodies[0].rows[0] && R.tBodies[0].rows[0].cells.length || 0, qa = R.config.parsers, Na = {
                            row: [],
                            normalized: []
                        }, pa = 0; pa < Y; ++pa) {
                    var La = R.tBodies[0].rows[pa],
                        $a = [];
                    Na.row.push(a(La));
                    for (var fb = 0; fb < na; ++fb) $a.push(qa[fb].format(l(R.config, La.cells[fb]), R, La.cells[fb]));
                    $a.push(pa);
                    Na.normalized.push($a)
                }
                R.config.debug && f("Building cache for " + Y + " rows:", O);
                return Na
            }

            function l(R, O) {
                if (!O) return "";
                var Y = "";
                return Y = R.textExtraction == "simple" ? O.childNodes[0] && O.childNodes[0].hasChildNodes() ? O.childNodes[0].innerHTML :
                    O.innerHTML : typeof R.textExtraction == "function" ? R.textExtraction(O) : a(O).text()
            }

            function o(R, O) {
                if (R.config.debug) var Y = new Date;
                for (var na = O.row, qa = O.normalized, Na = qa.length, pa = qa[0].length - 1, La = a(R.tBodies[0]), $a = [], fb = 0; fb < Na; fb++) {
                    $a.push(na[qa[fb][pa]]);
                    if (!R.config.appender)
                        for (var jb = na[qa[fb][pa]], Fa = jb.length, db = 0; db < Fa; db++) La[0].appendChild(jb[db])
                }
                R.config.appender && R.config.appender(R, $a);
                $a = null;
                R.config.debug && f("Rebuilt table:", Y);
                q(R);
                setTimeout(function () {
                        a(R).trigger("sortEnd")
                    },
                    0)
            }

            function n(R) {
                if (R.config.debug) var O = new Date;
                for (var Y = 0; Y < R.tHead.rows.length; Y++);
                $tableHeaders = a("thead th", R);
                $tableHeaders.each(function (na) {
                    this.count = 0;
                    this.column = na;
                    var qa = R.config.sortInitialOrder;
                    this.order = i = typeof qa != "Number" ? qa.toLowerCase() == "desc" ? 1 : 0 : qa == 1 ? qa : 0;
                    qa = a.metadata && a(this).metadata().sorter === false ? true : false;
                    if (!(qa = qa)) qa = R.config.headers[na] && R.config.headers[na].sorter === false ? true : false;
                    if (qa) this.sortDisabled = true;
                    this.sortDisabled || a(this).addClass(R.config.cssHeader);
                    R.config.headerList[na] = this
                });
                if (R.config.debug) {
                    f("Built headers:", O);
                    j($tableHeaders)
                }
                return $tableHeaders
            }

            function q(R) {
                for (var O = R.config.widgets, Y = O.length, na = 0; na < Y; na++) u(O[na]).format(R)
            }

            function u(R) {
                for (var O = M.length, Y = 0; Y < O; Y++)
                    if (M[Y].id.toLowerCase() == R.toLowerCase()) return M[Y]
            }

            function v(R, O) {
                for (var Y = O.length, na = 0; na < Y; na++)
                    if (O[na][0] == R) return true;
                return false
            }

            function x(R, O, Y, na) {
                O.removeClass(na[0]).removeClass(na[1]);
                var qa = [];
                O.each(function () {
                    this.sortDisabled || (qa[this.column] =
                        a(this))
                });
                R = Y.length;
                for (O = 0; O < R; O++) qa[Y[O][0]].addClass(na[Y[O][1]])
            }

            function z(R) {
                if (R.config.widthFixed) {
                    var O = a("<colgroup>");
                    a("tr:first td", R.tBodies[0]).each(function () {
                        O.append(a("<col>").css("width", a(this).width()))
                    });
                    a(R).prepend(O)
                }
            }

            function B(R, O, Y) {
                if (R.config.debug) var na = new Date;
                for (var qa = [], Na = O.length, pa = 0; pa < Na; pa++) {
                    var La = O[pa][0],
                        $a = O[pa][1],
                        fb = R.config.parsers[La].type == "text" ? $a == 0 ? C : w : $a == 0 ? G : J;
                    qa.push(function (Fa, db) {
                        return fb(Fa[La], db[La])
                    })
                }
                var jb = Y.normalized[0].length -
                    1;
                qa.push(function (Fa, db) {
                    return Fa[jb] - db[jb]
                });
                Y.normalized.sort(function (Fa, db) {
                    var eb, ab;
                    for (ab in qa)
                        if (eb = qa[ab](Fa, db)) return eb;
                    return 0
                });
                R.config.debug && f("Sorting on " + O.toString() + " and dir " + $a + " time:", na);
                return Y
            }

            function C(R, O) {
                return R < O ? -1 : R > O ? 1 : 0
            }

            function w(R, O) {
                return O < R ? -1 : O > R ? 1 : 0
            }

            function G(R, O) {
                return R - O
            }

            function J(R, O) {
                return O - R
            }
            var E = [],
                M = [];
            this.defaults = {
                cssHeader: "header",
                cssAsc: "headerSortUp",
                cssDesc: "headerSortDown",
                sortInitialOrder: "asc",
                sortMultiSortKey: "shiftKey",
                sortForce: null,
                sortAppend: null,
                textExtraction: "simple",
                parsers: {},
                widgets: [],
                widgetZebra: {
                    css: ["even", "odd"]
                },
                headers: {},
                widthFixed: false,
                cancelSelection: true,
                sortList: [],
                headerList: [],
                dateFormat: "us",
                decimal: ".",
                debug: false
            };
            this.benchmark = f;
            this.construct = function (R) {
                return this.each(function () {
                    if (this.tHead && this.tBodies) {
                        var O, Y, na, qa;
                        this.config = {};
                        qa = a.extend(this.config, a.tablesorter.defaults, R);
                        O = a(this);
                        Y = n(this);
                        this.config.parsers = g(this, Y);
                        na = b(this);
                        var Na = [qa.cssDesc, qa.cssAsc];
                        z(this);
                        Y.click(function (pa) {
                            O.trigger("sortStart");
                            var La = O[0].tBodies[0] && O[0].tBodies[0].rows.length || 0;
                            if (!this.sortDisabled && La > 0) {
                                a(this);
                                La = this.column;
                                this.order = this.count++ % 2;
                                if (pa[qa.sortMultiSortKey])
                                    if (v(La, qa.sortList))
                                        for (pa = 0; pa < qa.sortList.length; pa++) {
                                            var $a = qa.sortList[pa],
                                                fb = qa.headerList[$a[0]];
                                            if ($a[0] == La) {
                                                fb.count = $a[1];
                                                fb.count++;
                                                $a[1] = fb.count % 2
                                            }
                                        } else qa.sortList.push([La, this.order]);
                                    else {
                                        qa.sortList = [];
                                        if (qa.sortForce != null) {
                                            $a = qa.sortForce;
                                            for (pa = 0; pa < $a.length; pa++) $a[pa][0] !=
                                                La && qa.sortList.push($a[pa])
                                        }
                                        qa.sortList.push([La, this.order])
                                    }
                                setTimeout(function () {
                                    x(O[0], Y, qa.sortList, Na);
                                    o(O[0], B(O[0], qa.sortList, na))
                                }, 1);
                                return false
                            }
                        }).mousedown(function () {
                            if (qa.cancelSelection) {
                                this.onselectstart = function () {
                                    return false
                                };
                                return false
                            }
                        });
                        O.bind("update", function () {
                            this.config.parsers = g(this, Y);
                            na = b(this)
                        }).bind("sorton", function (pa, La) {
                            a(this).trigger("sortStart");
                            qa.sortList = La;
                            for (var $a = qa.sortList, fb = this.config, jb = $a.length, Fa = 0; Fa < jb; Fa++) {
                                var db = $a[Fa],
                                    eb = fb.headerList[db[0]];
                                eb.count = db[1];
                                eb.count++
                            }
                            x(this, Y, $a, Na);
                            o(this, B(this, $a, na))
                        }).bind("appendCache", function () {
                            o(this, na)
                        }).bind("applyWidgetId", function (pa, La) {
                            u(La).format(this)
                        }).bind("applyWidgets", function () {
                            q(this)
                        });
                        if (a.metadata && a(this).metadata() && a(this).metadata().sortlist) qa.sortList = a(this).metadata().sortlist;
                        qa.sortList.length > 0 && O.trigger("sorton", [qa.sortList]);
                        q(this)
                    }
                })
            };
            this.addParser = function (R) {
                for (var O = E.length, Y = true, na = 0; na < O; na++)
                    if (E[na].id.toLowerCase() == R.id.toLowerCase()) Y = false;
                Y && E.push(R)
            };
            this.addWidget = function (R) {
                M.push(R)
            };
            this.formatFloat = function (R) {
                R = parseFloat(R);
                return isNaN(R) ? 0 : R
            };
            this.formatInt = function (R) {
                R = parseInt(R);
                return isNaN(R) ? 0 : R
            };
            this.isDigit = function (R, O) {
                var Y = "\\" + O.decimal;
                return RegExp("/(^[+]?0(" + Y + "0+)?$)|(^([-+]?[1-9][0-9]*)$)|(^([-+]?((0?|[1-9][0-9]*)" + Y + "(0*[1-9][0-9]*)))$)|(^[-+]?[1-9]+[0-9]*" + Y + "0+$)/").test(a.trim(R))
            };
            this.clearTableBody = function (R) {
                if (a.browser.msie)(function () {
                    for (; this.firstChild;) this.removeChild(this.firstChild)
                }).apply(R.tBodies[0]);
                else R.tBodies[0].innerHTML = ""
            }
        }
    });
    a.fn.extend({
        tablesorter: a.tablesorter.construct
    });
    var e = a.tablesorter;
    e.addParser({
        id: "text",
        is: function () {
            return true
        },
        format: function (f) {
            return a.trim(f.toLowerCase())
        },
        type: "text"
    });
    e.addParser({
        id: "digit",
        is: function (f, j) {
            return a.tablesorter.isDigit(f, j.config)
        },
        format: function (f) {
            return a.tablesorter.formatFloat(f)
        },
        type: "numeric"
    });
    e.addParser({
        id: "currency",
        is: function (f) {
            return /^[\u00a3$\u20ac?.]/.test(f)
        },
        format: function (f) {
            return a.tablesorter.formatFloat(f.replace(RegExp(/[^0-9.]/g),
                ""))
        },
        type: "numeric"
    });
    e.addParser({
        id: "ipAddress",
        is: function (f) {
            return /^\d{2,3}[\.]\d{2,3}[\.]\d{2,3}[\.]\d{2,3}$/.test(f)
        },
        format: function (f) {
            f = f.split(".");
            for (var j = "", g = f.length, c = 0; c < g; c++) {
                var b = f[c];
                j += b.length == 2 ? "0" + b : b
            }
            return a.tablesorter.formatFloat(j)
        },
        type: "numeric"
    });
    e.addParser({
        id: "url",
        is: function (f) {
            return /^(https?|ftp|file):\/\/$/.test(f)
        },
        format: function (f) {
            return jQuery.trim(f.replace(RegExp(/(https?|ftp|file):\/\//), ""))
        },
        type: "text"
    });
    e.addParser({
        id: "isoDate",
        is: function (f) {
            return /^\d{4}[\/-]\d{1,2}[\/-]\d{1,2}$/.test(f)
        },
        format: function (f) {
            return a.tablesorter.formatFloat(f != "" ? (new Date(f.replace(RegExp(/-/g), "/"))).getTime() : "0")
        },
        type: "numeric"
    });
    e.addParser({
        id: "percent",
        is: function (f) {
            return /\%$/.test(a.trim(f))
        },
        format: function (f) {
            return a.tablesorter.formatFloat(f.replace(RegExp(/%/g), ""))
        },
        type: "numeric"
    });
    e.addParser({
        id: "usLongDate",
        is: function (f) {
            return f.match(RegExp(/^[A-Za-z]{3,10}\.? [0-9]{1,2}, ([0-9]{4}|'?[0-9]{2}) (([0-2]?[0-9]:[0-5][0-9])|([0-1]?[0-9]:[0-5][0-9]\s(AM|PM)))$/))
        },
        format: function (f) {
            return a.tablesorter.formatFloat((new Date(f)).getTime())
        },
        type: "numeric"
    });
    e.addParser({
        id: "shortDate",
        is: function (f) {
            return /\d{1,2}[\/\-]\d{1,2}[\/\-]\d{2,4}/.test(f)
        },
        format: function (f, j) {
            var g = j.config;
            f = f.replace(/\-/g, "/");
            if (g.dateFormat == "us") f = f.replace(/(\d{1,2})[\/\-](\d{1,2})[\/\-](\d{4})/, "$3/$1/$2");
            else if (g.dateFormat == "uk") f = f.replace(/(\d{1,2})[\/\-](\d{1,2})[\/\-](\d{4})/, "$3/$2/$1");
            else if (g.dateFormat == "dd/mm/yy" || g.dateFormat == "dd-mm-yy") f = f.replace(/(\d{1,2})[\/\-](\d{1,2})[\/\-](\d{2})/, "$1/$2/$3");
            return a.tablesorter.formatFloat((new Date(f)).getTime())
        },
        type: "numeric"
    });
    e.addParser({
        id: "time",
        is: function (f) {
            return /^(([0-2]?[0-9]:[0-5][0-9])|([0-1]?[0-9]:[0-5][0-9]\s(am|pm)))$/.test(f)
        },
        format: function (f) {
            return a.tablesorter.formatFloat((new Date("2000/01/01 " + f)).getTime())
        },
        type: "numeric"
    });
    e.addParser({
        id: "metadata",
        is: function () {
            return false
        },
        format: function (f, j, g) {
            f = j.config;
            f = !f.parserMetadataName ? "sortValue" : f.parserMetadataName;
            return a(g).metadata()[f]
        },
        type: "numeric"
    });
    e.addWidget({
        id: "zebra",
        format: function (f) {
            if (f.config.debug) var j =
                new Date;
            a("tr:visible", f.tBodies[0]).filter(":even").removeClass(f.config.widgetZebra.css[1]).addClass(f.config.widgetZebra.css[0]).end().filter(":odd").removeClass(f.config.widgetZebra.css[0]).addClass(f.config.widgetZebra.css[1]);
            f.config.debug && a.tablesorter.benchmark("Applying Zebra widget", j)
        }
    })
})(jQuery);
(function (a) {
    var e = function (g) {
        var c = a("input[name=record_calls]", g);
        c.bind("click change", function () {
            if (a(this).is(":checked")) a("input", g).enable("callRecording");
            else {
                a("input[name=record_calls]", g).enable("callRecording");
                a("input:not([name=record_calls])", g).disable("callRecording")
            }
        });
        a("form", g).bind("deserialize", function (b, l) {
            var o = a(this);
            if (l.group_record_calls) {
                a(".ifGroupPolicy", o).show();
                a(".groupPolicyGroupName", o).text(l.group_name);
                a(".groupPolicyDays", o).text(l.group_record_keep_days)
            } else a(".ifGroupPolicy",
                o).hide();
            c.triggerHandler("change")
        })
    }, f = function (g) {
            var c = a("form", g);
            a("input.emailEnableDisable", c).bind("change init", function () {
                if (a(this).is(":checked")) {
                    b = c.data("formData", b) || {};
                    delete b["recording-mailto"];
                    c.data("formData", b);
                    a("input[name=recording-mailto]", c).enable("noMail")
                } else {
                    var b = c.data("formData") || {};
                    b["recording-mailto"] = "";
                    c.data("formData", b);
                    a("input[name=recording-mailto]", c).disable("noMail")
                }
            }).trigger("change");
            a("form", g).bind("deserialize", function (b, l) {
                l["recording-mailto"] &&
                    a("input.emailEnableDisable", this).attr("checked", "checked").data("wasChecked", true).triggerHandler("init")
            })
        }, j = {
            bbx_user_id: function (g) {
                var c = this;
                a.getTemplate("/ajax-html/callRecording.html", function (b) {
                    b = a(b);
                    a("form", b).attr("action", "/gui/user2/call_recording");
                    c.html(b);
                    e(c);
                    f(c);
                    a.isFunction(g.callback) && g.callback()
                })
            },
            bbx_group_id: function (g) {
                var c = this;
                a.getTemplate("/ajax-html/callRecording.html", function (b) {
                    b = a(b);
                    a("form", b).attr("action", "/gui/group/call_recording");
                    c.html(b);
                    e(c);
                    f(c);
                    a.isFunction(g.callback) && g.callback()
                })
            }
        };
    a.fn.callRecording = function (g) {
        if (j[g]) return j[g].apply(this, Array.prototype.slice.call(arguments, 1));
        else a.error("Method " + g + " does not exist on jQuery.callRecording")
    }
})(jQuery);
(function (a) {
    var e, f = function (g, c, b, l) {
            a(".selRows, .selTime", c).bind("change", function () {
                j.call(g, l)
            });
            a(".selTime", c).bind("change", function () {
                if (a(this).val() === "RANGE") {
                    a(".customDateRange", c).show();
                    j.call(g, l)
                } else a(".customDateRange", c).hide()
            });
            a("a.opRefresh", c).bind("click", function (o) {
                o.preventDefault();
                j.call(g, l)
            });
            a(".search", c).searchBox().bind("search", function (o, n) {
                j.call(g, l, {
                    search: n
                })
            });
            g.html(c);
            j.call(g, l);
            a(".dateEnd, .dateStart", c).datepicker({
                showAnim: "fadeIn",
                changeMonth: true,
                changeYear: true,
                dateFormat: "MM d, yy",
                onSelect: function () {
                    j.call(g, l)
                }
            }).datepicker("setDate", new Date)
        }, j = function (g, c) {
            g = g || {};
            a.extend(true, g, c || {});
            var b = a(">.staticBody.eventList", this),
                l = {
                    url: "/gui/eventlog/eventlog",
                    type: "GET",
                    rowDataRoot: "eventlog",
                    hasNoneText: "No records matching your search",
                    rows: a(".selRows", b).val(),
                    sortby: "bbx_eventlog_date_time",
                    sortorder: "desc",
                    searchParam: "search_string",
                    columnData: [{
                        header: "Date",
                        sortby: "bbx_eventlog_date_time",
                        value: "bbx_eventlog_date_time",
                        render: "text"
                    }, {
                        header: "Priority",
                        sortby: "bbx_eventlog_priority",
                        value: "bbx_eventlog_priority",
                        render: "text"
                    }, {
                        header: "User Name",
                        sortby: "bbx_eventlog_fullname",
                        value: "bbx_eventlog_fullname",
                        render: "text"
                    }, {
                        header: "IP Address",
                        sortby: "bbx_eventlog_ip_addr",
                        value: "bbx_eventlog_ip_addr",
                        render: "text"
                    }, {
                        header: "Message",
                        sortby: "bbx_eventlog_message",
                        value: "bbx_eventlog_message",
                        render: "text"
                    }]
                }, o = {
                    rows: a(".selRows", b).val(),
                    search: g.search || ""
                }, n = a(".selTime", b).val();
            o.data = n === "RANGE" ? {
                since: "RANGE",
                range: [a(".dateStart",
                    b).val(), a(".dateEnd", b).val()]
            } : {
                since: n
            };
            g.hasRun ? a(".eventTable", b).jsonTable("refresh", o) : a(".eventTable", b).jsonTable(a.extend(true, {}, l, o));
            if (!g.hasRun) g.hasRun = true;
            a(this).data("eventList", g);
            return this
        };
    a.fn.eventList = function (g) {
        var c = this,
            b = {
                refresh: j
            };
        if (b[g]) {
            var l = this.data("eventList");
            if (typeof l === "undefined") {
                this.data("eventList", {});
                l = this.data("eventList")
            }
            return b[g].apply(this, [].concat([l], Array.prototype.slice.call(arguments, 1)))
        } else if (g && typeof g !== "object") {
            console_log("Method does not exist in plugin eventList");
            return this
        }
        var o = g || {};
        a.getTemplate("/ajax-html/eventlist.html", function (n) {
            c.each(function () {
                var q = a(this),
                    u = a(n),
                    v = a(".staticBody", u);
                e = e || a(".template", u);
                f(q, v, e, o)
            })
        });
        this.data("eventList", o);
        return this
    }
})(jQuery);
(function (a) {
    var e = function (f) {
        if (f) {
            var j = ["(There was a problem reading the solutions list.)"];
            try {
                j = JSON.parse(f)
            } catch (g) {}
            f = a("<ul />");
            for (var c = 0; c < j.length; c++) f.append(a("<li />").text(j[c]));
            return f
        } else return a("<ul />")
    };
    a.fn.diagsTable = function () {
        a(this).liveTable("destroy").liveTable({
            live_table: "bbx_diag",
            live_table_key: "",
            user_info: {
                sort_by: "bbx_diag_id",
                order_by: "bbx_diag_id"
            },
            columnData: [{
                header: "Run",
                key: false,
                value: function (f) {
                    return a('<input type="checkbox" />').attr("name",
                        "run_diags").val(f.rowData.bbx_diag_name)
                },
                sortable: false,
                render: "html"
            }, {
                header: "Description",
                value: "bbx_diag_desc",
                key: "bbx_diag_desc"
            }, {
                header: "Last Test Completed",
                value: function (f) {
                    if (!f.rowData.bbx_diag_last_completed) return "(Never)";
                    return f.rowData.bbx_diag_last_completed.replace(/\..+$/, "")
                },
                key: "bbx_diag_last_completed"
            }, {
                header: "Status",
                value: function (f) {
                    f = f.rowData;
                    var j = a("<div />");
                    if (f.bbx_diag_completed_tests == 0) j.text("Not Tested").css("color", "#666");
                    else if (f.bbx_diag_completed_tests !==
                        f.bbx_diag_total_tests) j.text("In Progress (" + f.bbx_diag_completed_tests + " of " + f.bbx_diag_total_tests + ")...").css("color", "#000");
                    else if (f.bbx_diag_fail_count == f.bbx_diag_total_tests) j.text("Failed").css("color", "red");
                    else f.bbx_diag_pass_count == f.bbx_diag_total_tests ? j.text("Passed").css("color", "green") : j.text("Some Failed").css("color", "#600");
                    return j
                },
                render: "html"
            }, {
                header: "Details",
                key: false,
                value: function (f) {
                    var j = a('<div><a href="javascript:false">Show/Hide</a><div class="diagDetailContainer" /></div>'),
                        g = j.children("div.diagDetailContainer").hide(),
                        c = false,
                        b = getUnique("diagsResize");
                    j.children("a").bind("click", function (l) {
                        l.preventDefault();
                        c = !c;
                        g.toggle();
                        if (c) {
                            g.diagsInnerTable({
                                bbx_diag_id: f.rowData.bbx_diag_id
                            });
                            l = function () {
                                if (g.closest("body")) {
                                    var o = f.$row.width() - f.$row.find(">td:eq(0)").outerWidth() - f.$cell.outerWidth();
                                    g.css("margin-left", -o + "px")
                                } else a(window).unbind("debouncedresize." + b)
                            };
                            a(window).unbind("debouncedresize." + b).bind("debouncedresize." + b, l);
                            l()
                        } else {
                            a(window).unbind("debouncedresize." +
                                b);
                            g.diagsInnerTable("destroy")
                        }
                    });
                    return j
                },
                render: "html",
                "class": "diagDetailsCol"
            }]
        })
    };
    a.fn.diagsInnerTable = function (f) {
        a(this).liveTable("destroy").liveTable({
            user_info: {
                page: 1,
                page_size: 100,
                sort_by: "bbx_diag_id",
                distinct_on: "",
                allow_null_distinct: true,
                order_by: "bbx_diag_test_id",
                search: {
                    bbx_diag_id: "^" + f.bbx_diag_id + "$"
                }
            },
            columnData: [{
                header: "Sub-Test",
                value: "bbx_diag_test_name"
            }, {
                header: "Result",
                value: "bbx_diag_test_result"
            }, {
                header: "Details",
                value: function (j) {
                    return e(j.rowData.bbx_diag_test_info)
                },
                render: "html"
            }, {
                header: "Solutions",
                value: function (j) {
                    return e(j.rowData.bbx_diag_test_solutions)
                },
                render: "html"
            }],
            live_table: "bbx_diag_test",
            live_table_key: ""
        })
    }
})(jQuery);
$.tablesorter.addWidget({
    id: "resizeColumns",
    format: function (a) {
        a = $(a).children("thead").find("th");
        if (!a.find(".TSResizer")[0]) {
            a.wrapInner('<div class="TSResizableWrap" style="position: relative"></div>');
            a.find(".TSResizableWrap").css("position", "relative").append('<div class="TSResizer"></div>');
            a.find(".TSResizer").draggable({
                axis: "x"
            }).bind("drag", function () {
                var e = $(this).closest("th"),
                    f = $(this);
                e.css("width", f.offset().left - e.offset().left)
            });
            a.find(".TSResizer").bind("dragstop", function () {
                var e =
                    $(this).closest("th"),
                    f = $(this);
                e.css("width", f.offset().le j.text("Failed").css("color", "red");
                    else f.bbx_diag_pass_count == f.bbx_diag_total_tests ? j.text("Passed").css("color", "green") : j.text("Some Failed").css("color", "#600");
                    return j
                },
                render: "html"
            }, {
                header: "Details",
                key: false,
                value: function (f) {
                    var j = a('<div><a href="javascript:false">Show/Hide</a><div class="diagDetailContainer" /></div>'),
                        g = j.children("div.diagDetailContainer").hide(),
                        c = false,
                        b = getUnique("diagsResize");
                    j.children("a").bind("click", function (l) {
                        l.preventDefault();
                        c = !c;
                        g.toggle();
                        if (c) {
                            g.diagsInnerTable({
                                bbx_diag_id: f.rowData.bbx_diag_id
                            });
                            l = function () {
                                if (g.closest("body")) {
                                    var o = f.$row.width() - f.$row.find(">td:eq(0)").outerWidth() - f.$cell.outerWidth();
                                    g.css("margin-left", -o + "px")
                                } else a(window).unbind("debouncedresize." + b)
                            };
                            a(window).unbind("debouncedresize." + b).bind("debouncedresize." + b, l);
                            l()
                        } else {
                            a(window).unbind("debouncedresize." +
                                b);
                            g.diagsInnerTable("destroy")
                        }
                    });
                    return j
                },
                render: "html",
                "class": "diagDetailsCol"
            }]
        })
    };
    a.fn.diagsInnerTable = function (f) {
        a(this).liveTable("destroy").liveTable({
            user_info: {
                page: 1,
                page_size: 100,
                sort_by: "bbx_diag_id",
                distinct_on: "",
                allow_null_distinct: true,
                order_by: "bbx_diag_test_id",
                search: {
                    bbx_diag_id: "^" + f.bbx_diag_id + "$"
                }
            },
            columnData: [{
                header: "Sub-Test",
                value: "bbx_diag_test_name"
            }, {
                header: "Result",
                value: "bbx_diag_test_result"
            }, {
                header: "Details",
                value: function (j) {
                    return e(j.rowData.bbx_diag_test_info)
                },
                render: "html"
            }, {
                header: "Solutions",
                value: function (j) {
                    return e(j.rowData.bbx_diag_test_solutions)
                },
                render: "html"
            }],
            live_table: "bbx_diag_test",
            live_table_key: ""
        })
    }
})(jQuery);
$.tablesorter.addWidget({
    id: "resizeColumns",
    format: function (a) {
        a = $(a).children("thead").find("th");
        if (!a.find(".TSResizer")[0]) {
            a.wrapInner('<div class="TSResizableWrap" style="position: relative"></div>');
            a.find(".TSResizableWrap").css("position", "relative").append('<div class="TSResizer"></div>');
            a.find(".TSResizer").draggable({
                axis: "x"
            }).bind("drag", function () {
                var e = $(this).closest("th"),
                    f = $(this);
                e.css("width", f.offset().left - e.offset().left)
            });
            a.find(".TSResizer").bind("dragstop", function () {
                var e =
                    $(this).closest("th"),
                    f = $(this);
                e.css("width", f.offset().left - e.offset().left);
                f.css("left", false)
            })
        }
    }
});
(function (a) {
    function e(c) {
        var b = c.data;
        if (!c.isDefaultPrevented()) {
            c.preventDefault();
            a(this).ajaxSubmit(b)
        }
    }

    function f(c) {
        var b = c.target,
            l = a(b);
        if (!l.is(":submit,input:image")) {
            b = l.closest(":submit");
            if (b.length === 0) return;
            b = b[0]
        }
        var o = this;
        o.clk = b;
        if (b.type == "image")
            if (c.offsetX !== undefined) {
                o.clk_x = c.offsetX;
                o.clk_y = c.offsetY
            } else if (typeof a.fn.offset == "function") {
            l = l.offset();
            o.clk_x = c.pageX - l.left;
            o.clk_y = c.pageY - l.top
        } else {
            o.clk_x = c.pageX - b.offsetLeft;
            o.clk_y = c.pageY - b.offsetTop
        }
        setTimeout(function () {
            o.clk =
                o.clk_x = o.clk_y = null
        }, 100)
    }

    function j() {
        if (a.fn.ajaxSubmit.debug) {
            var c = "[jquery.form] " + Array.prototype.join.call(arguments, "");
            if (window.console && window.console.log) window.console.log(c);
            else window.opera && window.opera.postError && window.opera.postError(c)
        }
    }
    var g = {};
    g.fileapi = a("<input type='file'/>").get(0).files !== undefined;
    g.formdata = window.FormData !== undefined;
    a.fn.ajaxSubmit = function (c) {
        function b(G) {
            for (var J = new FormData, E = 0; E < G.length; E++) J.append(G[E].name, G[E].value);
            if (c.extraData)
                for (var M in c.extraData) c.extraData.hasOwnProperty(M) &&
                    J.append(M, c.extraData[M]);
            c.data = null;
            G = a.extend(true, {}, a.ajaxSettings, c, {
                contentType: false,
                processData: false,
                cache: false,
                type: "POST"
            });
            if (c.uploadProgress) G.xhr = function () {
                var O = jQuery.ajaxSettings.xhr();
                if (O.upload) O.upload.onprogress = function (Y) {
                    var na = 0,
                        qa = Y.loaded || Y.position,
                        Na = Y.total;
                    if (Y.lengthComputable) na = Math.ceil(qa / Na * 100);
                    c.uploadProgress(Y, qa, Na, na)
                };
                return O
            };
            G.data = null;
            var R = G.beforeSend;
            G.beforeSend = function (O, Y) {
                Y.data = J;
                R && R.call(Y, O, c)
            };
            a.ajax(G)
        }

        function l(G) {
            function J() {
                function T() {
                    try {
                        var za =
                            (Na.contentWindow ? Na.contentWindow.document : Na.contentDocument ? Na.contentDocument : Na.document).readyState;
                        j("state = " + za);
                        za && za.toLowerCase() == "uninitialized" && setTimeout(T, 50)
                    } catch (Ka) {
                        j("Server abort: ", Ka, " (", Ka.name, ")");
                        E(Fa);
                        fb && clearTimeout(fb);
                        fb = undefined
                    }
                }
                var ba = q.attr("target"),
                    ga = q.attr("action");
                M.setAttribute("target", na);
                o || M.setAttribute("method", "POST");
                ga != O.url && M.setAttribute("action", O.url);
                if (!O.skipEncodingOverride && (!o || /post/i.test(o))) q.attr({
                    encoding: "multipart/form-data",
                    enctype: "multipart/form-data"
                });
                if (O.timeout) fb = setTimeout(function () {
                    $a = true;
                    E(jb)
                }, O.timeout);
                var W = [];
                try {
                    if (O.extraData)
                        for (var Ea in O.extraData) O.extraData.hasOwnProperty(Ea) && W.push(a('<input type="hidden" name="' + Ea + '">').attr("value", O.extraData[Ea]).appendTo(M)[0]);
                    if (!O.iframeTarget) {
                        qa.appendTo("body");
                        Na.attachEvent ? Na.attachEvent("onload", E) : Na.addEventListener("load", E, false)
                    }
                    setTimeout(T, 15);
                    M.submit()
                } finally {
                    M.setAttribute("action", ga);
                    ba ? M.setAttribute("target", ba) : q.removeAttr("target");
                    a(W).remove()
                }
            }

            function E(T) {
                if (!(pa.aborted || rb)) {
                    try {
                        eb = Na.contentWindow ? Na.contentWindow.document : Na.contentDocument ? Na.contentDocument : Na.document
                    } catch (ba) {
                        j("cannot access response document: ", ba);
                        T = Fa
                    }
                    if (T === jb && pa) pa.abort("timeout");
                    else if (T == Fa && pa) pa.abort("server abort");
                    else {
                        if (!eb || eb.location.href == O.iframeSrc)
                            if (!$a) return;
                        Na.detachEvent ? Na.detachEvent("onload", E) : Na.removeEventListener("load", E, false);
                        T = "success";
                        var ga;
                        try {
                            if ($a) throw "timeout";
                            var W = O.dataType == "xml" || eb.XMLDocument ||
                                a.isXMLDoc(eb);
                            j("isXml=" + W);
                            if (!W && window.opera && (eb.body === null || !eb.body.innerHTML))
                                if (--ab) {
                                    j("requeing onLoad callback, DOM not available");
                                    setTimeout(E, 250);
                                    return
                                }
                            var Ea = eb.body ? eb.body : eb.documentElement;
                            pa.responseText = Ea ? Ea.innerHTML : null;
                            pa.responseXML = eb.XMLDocument ? eb.XMLDocument : eb;
                            if (W) O.dataType = "xml";
                            pa.getResponseHeader = function (Qa) {
                                return {
                                    "content-type": O.dataType
                                }[Qa]
                            };
                            if (Ea) {
                                pa.status = Number(Ea.getAttribute("status")) || pa.status;
                                pa.statusText = Ea.getAttribute("statusText") || pa.statusText
                            }
                            var za =
                                (O.dataType || "").toLowerCase(),
                                Ka = /(json|script|text)/.test(za);
                            if (Ka || O.textarea) {
                                var sa = eb.getElementsByTagName("textarea")[0];
                                if (sa) {
                                    pa.responseText = sa.value;
                                    pa.status = Number(sa.getAttribute("status")) || pa.status;
                                    pa.statusText = sa.getAttribute("statusText") || pa.statusText
                                } else if (Ka) {
                                    var Oa = eb.getElementsByTagName("pre")[0],
                                        Va = eb.getElementsByTagName("body")[0];
                                    if (Oa) pa.responseText = Oa.textContent ? Oa.textContent : Oa.innerText;
           O.error && O.error.call(O.context, pa, ba, T);
                        Y && a.event.trigger("ajaxError", [pa, O, ba]);
                        O.complete && O.complete.call(O.context, pa, ba)
                    }
                };
                (Y = O.global) && 0 === a.active++ && a.event.trigger("ajaxStart");
                Y && a.event.trigger("ajaxSend", [pa, O]);
                if (O.beforeSend && O.beforeSend.call(O.context, pa, O) === false) O.global && a.active--;
                else if (!pa.aborted) {
                    if (La =
                        M.clk)
                        if ((G = La.name) && !La.disabled) {
                            O.extraData = O.extraData || {};
                            O.extraData[G] = La.value;
                            if (La.type == "image") {
                                O.extraData[G + ".x"] = M.clk_x;
                                O.extraData[G + ".y"] = M.clk_y
                            }
                        }
                    var jb = 1,
                        Fa = 2;
                    La = a("meta[name=csrf-token]").attr("content");
                    if ((G = a("meta[name=csrf-param]").attr("content")) && La) {
                        O.extraData = O.extraData || {};
                        O.extraData[G] = La
                    }
                    O.forceSync ? J() : setTimeout(J, 10);
                    var db, eb, ab = 50,
                        rb, xb = a.parseXML || function (T, ba) {
                            if (window.ActiveXObject) {
                                ba = new ActiveXObject("Microsoft.XMLDOM");
                                ba.async = "false";
                                ba.loadXML(T)
                            } else ba =
                                (new DOMParser).parseFromString(T, "text/xml");
                            return ba && ba.documentElement && ba.documentElement.nodeName != "parsererror" ? ba : null
                        }, Pa = a.parseJSON || function (T) {
                            return window.eval("(" + T + ")")
                        }, P = function (T, ba, ga) {
                            var W = T.getResponseHeader("content-type") || "",
                                Ea = ba === "xml" || !ba && W.indexOf("xml") >= 0;
                            T = Ea ? T.responseXML : T.responseText;
                            Ea && T.documentElement.nodeName === "parsererror" && a.error && a.error("parsererror");
                            if (ga && ga.dataFilter) T = ga.dataFilter(T, ba);
                            if (typeof T === "string")
                                if (ba === "json" || !ba && W.indexOf("json") >=
                                    0) T = Pa(T);
                                else if (ba === "script" || !ba && W.indexOf("javascript") >= 0) a.globalEval(T);
                            return T
                        }
                }
            }
        }
        if (!this.length) {
            j("ajaxSubmit: skipping submit process - no element selected");
            return this
        }
        var o, n, q = this;
        if (typeof c == "function") c = {
            success: c
        };
        o = this.attr("method");
        n = this.attr("action");
        if (n = (n = typeof n === "string" ? a.trim(n) : "") || window.location.href || "") n = (n.match(/^([^#]+)/) || [])[1];
        c = a.extend(true, {
            url: n,
            success: a.ajaxSettings.success,
            type: o || "GET",
            iframeSrc: /^https/i.test(window.location.href || "") ? "javascript:false" : "about:blank"
        }, c);
        n = {};
        this.trigger("form-pre-serialize", [this, c, n]);
        if (n.veto) {
            j("ajaxSubmit: submit vetoed via form-pre-serialize trigger");
            return this
        }
        if (c.beforeSerialize && c.beforeSerialize(this, c) === false) {
            j("ajaxSubmit: submit aborted via beforeSerialize callback");
            return this
        }
        var u = c.traditional;
        if (u === undefined) u = a.ajaxSettings.traditional;
        var v = [],
            x, z = this.formToArray(c.semantic, v);
        if (c.data) {
            c.extraData = c.data;
            x = a.param(c.data, u)
        }
        if (c.beforeSubmit && c.beforeSubmit(z, this, c) === false) {
            j("ajaxSubmit: submit aborted via beforeSubmit callback");
            return this
        }
        this.trigger("form-submit-validate", [z, this, c, n]);
        if (n.veto) {
            j("ajaxSubmit: submit vetoed via form-submit-validate trigger");
            return this
        }
        n = a.param(z, u);
        if (x) n = n ? n + "&" + x : x;
        if (c.type.toUpperCase() == "GET") {
            c.url += (c.url.indexOf("?") >= 0 ? "&" : "?") + n;
            c.data = null
        } else c.data = n;
        var B = [];
        c.resetForm && B.push(function () {
            q.resetForm()
        });
        c.clearForm && B.push(function () {
            q.clearForm(c.includeHidden)
        });
        if (!c.dataType && c.target) {
            var C = c.success || function () {};
            B.push(function (G) {
                var J = c.replaceTarget ? "replaceWith" :
                    "html";
                a(c.target)[J](G).each(C, arguments)
            })
        } else c.success && B.push(c.success);
        c.success = function (G, J, E) {
            for (var M = c.context || c, R = 0, O = B.length; R < O; R++) B[R].apply(M, [G, J, E || q, q])
        };
        x = a("input:file:enabled[value]", this).length > 0;
        n = q.attr("enctype") == "multipart/form-data" || q.attr("encoding") == "multipart/form-data";
        u = g.fileapi && g.formdata;
        j("fileAPI :" + u);
        var w = (x || n) && !u;
        if (c.iframe !== false && (c.iframe || w)) c.closeKeepAlive ? a.get(c.closeKeepAlive, function () {
            l(z)
        }) : l(z);
        else(x || n) && u ? b(z) : a.ajax(c);
        for (x =
            0; x < v.length; x++) v[x] = null;
        this.trigger("form-submit-notify", [this, c]);
        return this
    };
    a.fn.ajaxForm = function (c) {
        c = c || {};
        c.delegation = c.delegation && a.isFunction(a.fn.on);
        if (!c.delegation && this.length === 0) {
            var b = {
                s: this.selector,
                c: this.context
            };
            if (!a.isReady && b.s) {
                j("DOM not ready, queuing ajaxForm");
                a(function () {
                    a(b.s, b.c).ajaxForm(c)
                });
                return this
            }
            j("terminating; zero elements found by selector" + (a.isReady ? "" : " (DOM not ready)"));
            return this
        }
        if (c.delegation) {
            a(document).off("submit.form-plugin", this.selector,
                e).off("click.form-plugin", this.selector, f).on("submit.form-plugin", this.selector, c, e).on("click.form-plugin", this.selector, c, f);
            return this
        }
        return this.ajaxFormUnbind().bind("submit.form-plugin", c, e).bind("click.form-plugin", c, f)
    };
    a.fn.ajaxFormUnbind = function () {
        return this.unbind("submit.form-plugin click.form-plugin")
    };
    a.fn.formToArray = function (c, b) {
        var l = [];
        if (this.length === 0) return l;
        var o = this[0],
            n = c ? o.getElementsByTagName("*") : o.elements;
        if (!n) return l;
        var q, u, v, x, z, B;
        q = 0;
        for (B = n.length; q < B; q++) {
            z =
                n[q];
            if (v = z.name)
                if (c && o.clk && z.type == "image") {
                    if (!z.disabled && o.clk == z) {
                        l.push({
                            name: v,
                            value: a(z).val(),
                            type: z.type
                        });
                        l.push({
                            name: v + ".x",
                            value: o.clk_x
                        }, {
                            name: v + ".y",
                            value: o.clk_y
                        })
                    }
                } else if ((x = a.fieldValue(z, true)) && x.constructor == Array) {
                b && b.push(z);
                u = 0;
                for (z = x.length; u < z; u++) l.push({
                    name: v,
                    value: x[u]
                })
            } else if (g.fileapi && z.type == "file" && !z.disabled) {
                b && b.push(z);
                x = z.files;
                if (x.length)
                    for (u = 0; u < x.length; u++) l.push({
                        name: v,
                        value: x[u],
                        type: z.type
                    });
                else l.push({
                    name: v,
                    value: "",
                    type: z.type
                })
            } else if (x !==
                null && typeof x != "undefined") {
                b && b.push(z);
                l.push({
                    name: v,
                    value: x,
                    type: z.type,
                    required: z.required
                })
            }
        }
        if (!c && o.clk) {
            n = a(o.clk);
            q = n[0];
            if ((v = q.name) && !q.disabled && q.type == "image") {
                l.push({
                    name: v,
                    value: n.val()
                });
                l.push({
                    name: v + ".x",
                    value: o.clk_x
                }, {
                    name: v + ".y",
                    value: o.clk_y
                })
            }
        }
        return l
    };
    a.fn.formSerialize = function (c) {
        return a.param(this.formToArray(c))
    };
    a.fn.fieldSerialize = function (c) {
        var b = [];
        this.each(function () {
            var l = this.name;
            if (l) {
                var o = a.fieldValue(this, c);
                if (o && o.constructor == Array)
                    for (var n = 0,
                            q = o.length; n < q; n++) b.push({
                        name: l,
                        value: o[n]
                    });
                else o !== null && typeof o != "undefined" && b.push({
                    name: this.name,
                    value: o
                })
            }
        });
        return a.param(b)
    };
    a.fn.fieldValue = function (c) {
        for (var b = [], l = 0, o = this.length; l < o; l++) {
            var n = a.fieldValue(this[l], c);
            n === null || typeof n == "undefined" || n.constructor == Array && !n.length || (n.constructor == Array ? a.merge(b, n) : b.push(n))
        }
        return b
    };
    a.fieldValue = function (c, b) {
        var l = c.name,
            o = c.type,
            n = c.tagName.toLowerCase();
        if (b === undefined) b = true;
        if (b && (!l || c.disabled || o == "reset" || o == "button" ||
            (o == "checkbox" || o == "radio") && !c.checked || (o == "submit" || o == "image") && c.form && c.form.clk != c || n == "select" && c.selectedIndex == -1)) return null;
        if (n == "select") {
            var q = c.selectedIndex;
            if (q < 0) return null;
            l = [];
            n = c.options;
            var u = (o = o == "select-one") ? q + 1 : n.length;
            for (q = o ? q : 0; q < u; q++) {
                var v = n[q];
                if (v.selected) {
                    var x = v.value;
                    x || (x = v.attributes && v.attributes.value && !v.attributes.value.specified ? v.text : v.value);
                    if (o) return x;
                    l.push(x)
                }
            }
            return l
        }
        return a(c).val()
    };
    a.fn.clearForm = function (c) {
        return this.each(function () {
            a("input,select,textarea",
                this).clearFields(c)
        })
    };
    a.fn.clearFields = a.fn.clearInputs = function (c) {
        var b = /^(?:color|date|datetime|email|month|number|password|range|search|tel|text|time|url|week)$/i;
        return this.each(function () {
            var l = this.type,
                o = this.tagName.toLowerCase();
            if (b.test(l) || o == "textarea") this.value = "";
            else if (l == "checkbox" || l == "radio") this.checked = false;
            else if (o == "select") this.selectedIndex = -1;
            else if (c)
                if (c === true && /hidden/.test(l) || typeof c == "string" && a(this).is(c)) this.value = ""
        })
    };
    a.fn.resetForm = function () {
        return this.each(function () {
            if (typeof this.reset ==
                "function" || typeof this.reset == "object" && !this.reset.nodeType) this.reset()
        })
    };
    a.fn.enable = function (c) {
        if (c === undefined) c = true;
        return this.each(function () {
            this.disabled = !c
        })
    };
    a.fn.selected = function (c) {
        if (c === undefined) c = true;
        return this.each(function () {
            var b = this.type;
            if (b == "checkbox" || b == "radio") this.checked = c;
            else if (this.tagName.toLowerCase() == "option") {
                b = a(this).parent("select");
                c && b[0] && b[0].type == "select-one" && b.find("option").selected(false);
                this.selected = c
            }
        })
    };
    a.fn.ajaxSubmit.debug = false
})(jQuery);
jQuery.cookie = function (a, e, f) {
    if (typeof e != "undefined") {
        f = f || {};
        if (e === null) {
            e = "";
            f.expires = -1
        }
        var j = "";
        if (f.expires && (typeof f.expires == "number" || f.expires.toUTCString)) {
            if (typeof f.expires == "number") {
                j = new Date;
                j.setTime(j.getTime() + f.expires * 24 * 60 * 60 * 1E3)
            } else j = f.expires;
            j = "; expires=" + j.toUTCString()
        }
        var g = f.path ? "; path=" + f.path : "",
            c = f.domain ? "; domain=" + f.domain : "";
        f = f.secure ? "; secure" : "";
        document.cookie = [a, "=", encodeURIComponent(e), j, g, c, f].join("")
    } else {
        e = null;
        if (document.cookie && document.cookie !=
            "") {
            f = document.cookie.split(";");
            for (j = 0; j < f.length; j++) {
                g = jQuery.trim(f[j]);
                if (g.substring(0, a.length + 1) == a + "=") {
                    e = decodeURIComponent(g.substring(a.length + 1));
                    break
                }
            }
        }
        return e
    }
};
var _canLog = true;

function _log(a) {
    if (_canLog) {
        var e = Array.prototype.slice.apply(arguments, [1]),
            f = new Date;
        f = f.getHours() + ":" + f.getMinutes() + ":" + f.getSeconds() + "." + f.getMilliseconds();
        e[0] = f + " - " + e[0];
        try {
            switch (a) {
            case "info":
                window.console.info.apply(window.console, e);
                break;
            case "warn":
                window.console.warn.apply(window.console, e);
                break;
            default:
                window.console.log.apply(window.console, e)
            }
        } catch (j) {
            window.console || (_canLog = false)
        }
    }
}

function logMsg() {
    Array.prototype.unshift.apply(arguments, ["debug"]);
    _log.apply(this, arguments)
}
var getDynaTreePersistData = null,
    DTNodeStatus_Error = -1,
    DTNodeStatus_Loading = 1,
    DTNodeStatus_Ok = 0;
(function (a) {
    function e(n) {
        for (var q = 5; n && q--;) {
            if (n.dtnode) return n.dtnode;
            n = n.parentNode
        }
        return null
    }

    function f(n) {
        var q = n.options.dnd || null;
        if (q && (q.onDragStart || q.onDrop)) o();
        q && q.onDragStart && n.$tree.draggable({
            addClasses: false,
            appendTo: "body",
            containment: false,
            delay: 0,
            distance: 4,
            revert: false,
            connectToDynatree: true,
            helper: function (u) {
                var v = e(u.target);
                return v.tree._onDragEvent("helper", v, null, u, null, null)
            },
            _last: null
        });
        q && q.onDrop && n.$tree.droppable({
            addClasses: false,
            tolerance: "intersect",
            greedy: false,
            _last: null
        })
    }
    var j = {
        create: function () {
            return function () {
                this.initialize.apply(this, arguments)
            }
        }
    }, g = j.create();
    g.prototype = {
        initialize: function (n, q, u) {
            this.parent = n;
            this.tree = q;
            if (typeof u === "string") u = {
                title: u
            };
            if (u.key === undefined) u.key = "_" + q._nodeCount++;
            this.data = a.extend({}, a.ui.dynatree.nodedatadefaults, u);
            this.childList = this.ul = this.span = this.li = null;
            this.bSelected = this.bExpanded = this.hasSubSel = this.isLoading = false
        },
        toString: function () {
            return "DynaTreeNode<" + this.data.key + ">: '" + this.data.title +
                "'"
        },
        toDict: function (n, q) {
            var u = a.extend({}, this.data);
            u.activate = this.tree.activeNode === this;
            u.focus = this.tree.focusNode === this;
            u.expand = this.bExpanded;
            u.select = this.bSelected;
            q && q(u);
            if (n && this.childList) {
                u.children = [];
                for (var v = 0; v < this.childList.length; v++) u.children.push(this.childList[v].toDict(true, q))
            } else delete u.children;
            return u
        },
        fromDict: function (n) {
            var q = n.children;
            if (q === undefined) {
                this.data = a.extend(this.data, n);
                this.render()
            } else {
                n = a.extend({}, n);
                n.children = undefined;
                this.data = a.extend(this.data,
                    n);
                this.removeChildren();
                this.addChild(q)
            }
        },
        _getInnerHtml: function () {
            var n = this.tree.options,
                q = this.tree.cache,
                u = this.getLevel(),
                v = "";
            if (u < n.minExpandLevel) {
                if (u > 1) v += q.tagConnector
            } else v += this.hasChildren() !== false ? q.tagExpander : q.tagConnector; if (n.checkbox && this.data.hideCheckbox !== true && !this.data.isStatusNode) v += q.tagCheckbox;
            if (this.data.icon) v += "<img src='" + n.imagePath + this.data.icon + "' alt='' />";
            else if (this.data.icon !== false) v += q.tagNodeIcon;
            q = this.data.tooltip ? " title='" + this.data.tooltip +
                "'" : "";
            v += n.noLink || this.data.noLink ? "<span style='display: inline-block;' class='" + n.classNames.title + "'" + q + ">" + this.data.title + "</span>" : "<a href='#' class='" + n.classNames.title + "'" + q + ">" + this.data.title + "</a>";
            return v
        },
        _fixOrder: function () {
            var n = this.childList;
            if (n)
                for (var q = this.ul.firstChild, u = 0; u < n.length - 1; u++) {
                    var v = n[u],
                        x = q.dtnode;
                    if (v !== x) {
                        this.tree.logDebug("_fixOrder: mismatch at index " + u + ": " + v + " != " + x);
                        this.ul.insertBefore(v.li, x.li)
                    } else q = q.nextSibling
                }
        },
        render: function (n) {
            var q =
                this.tree.options,
                u = q.classNames,
                v = this.isLastSibling();
            if (!this.parent && !this.ul) {
                this.li = this.span = null;
                this.ul = document.createElement("ul");
                this.ul.className = q.minExpandLevel > 1 ? u.container + " " + u.noConnector : u.container
            } else if (this.parent) {
                if (!this.li) {
                    this.li = document.createElement("li");
                    this.li.dtnode = this;
                    if (this.data.key && q.generateIds) this.li.id = q.idPrefix + this.data.key;
                    this.span = document.createElement("span");
                    this.span.className = u.title;
                    this.li.appendChild(this.span);
                    if (!this.parent.ul) {
                        this.parent.ul =
                            document.createElement("ul");
                        this.parent.ul.style.display = "none";
                        this.parent.li.appendChild(this.parent.ul)
                    }
                    this.parent.ul.appendChild(this.li)
                }
                this.span.innerHTML = this._getInnerHtml();
                var x = [];
                x.push(u.node);
                this.data.isFolder && x.push(u.folder);
                this.bExpanded && x.push(u.expanded);
                this.hasChildren() !== false && x.push(u.hasChildren);
                this.data.isLazy && this.childList === null && x.push(u.lazy);
                v && x.push(u.lastsib);
                this.bSelected && x.push(u.selected);
                this.hasSubSel && x.push(u.partsel);
                this.tree.activeNode === this &&
                    x.push(u.active);
                this.data.addClass && x.push(this.data.addClass);
                x.push(u.combinedExpanderPrefix + (this.bExpanded ? "e" : "c") + (this.data.isLazy && this.childList === null ? "d" : "") + (v ? "l" : ""));
                x.push(u.combinedIconPrefix + (this.bExpanded ? "e" : "c") + (this.data.isFolder ? "f" : ""));
                this.span.className = x.join(" ");
                this.li.className = v ? u.lastsib : ""
            }
            if (this.bExpanded && this.childList) {
                for (u = 0; u < this.childList.length; u++) this.childList[u].render();
                this._fixOrder()
            }
            if (this.ul) {
                u = this.ul.style.display === "none";
                if (n && q.fx && !! u === !! this.bExpanded) {
                    n = q.fx.duration || 200;
                    a(this.ul).animate(q.fx, n)
                } else this.ul.style.display = this.bExpanded || !this.parent ? "" : "none"
            }
        },
        getKeyPath: function (n) {
            var q = [];
            this.visitParents(function (u) {
                u.parent && q.unshift(u.data.key)
            }, !n);
            return "/" + q.join(this.tree.options.keyPathSeparator)
        },
        getParent: function () {
            return this.parent
        },
        getChildren: function () {
            return this.childList
        },
        hasChildren: function () {
            if (this.data.isLazy) {
                if (this.childList === null || this.childList === undefined) return;
                else if (this.childList.length ===
                    0) return false;
                else if (this.childList.length === 1 && this.childList[0].isStatusNode()) return;
                return true
            }
            return !!this.childList
        },
        isFirstSibling: function () {
            var n = this.parent;
            return !n || n.childList[0] === this
        },
        isLastSibling: function () {
            var n = this.parent;
            return !n || n.childList[n.childList.length - 1] === this
        },
        getPrevSibling: function () {
            if (!this.parent) return null;
            for (var n = this.parent.childList, q = 1; q < n.length; q++)
                if (n[q] === this) return n[q - 1];
            return null
        },
        getNextSibling: function () {
            if (!this.parent) return null;
            for (var n =
                this.parent.childList, q = 0; q < n.length - 1; q++)
                if (n[q] === this) return n[q + 1];
            return null
        },
        isStatusNode: function () {
            return this.data.isStatusNode === true
        },
        isChildOf: function (n) {
            return this.parent && this.parent === n
        },
        isDescendantOf: function (n) {
            if (!n) return false;
            for (var q = this.parent; q;) {
                if (q === n) return true;
                q = q.parent
            }
            return false
        },
        sortChildren: function (n, q) {
            var u = this.childList;
            if (u) {
                n = n || function (x, z) {
                    return x.data.title === z.data.title ? 0 : x.data.title > z.data.title
                };
                u.sort(n);
                if (q)
                    for (var v = 0; v < u.length; v++) u[v].childList &&
                        u[v].sortChildren(n, "$norender$");
                q !== "$norender$" && this.render()
            }
        },
        _setStatusNode: function (n) {
            var q = this.childList ? this.childList[0] : null;
            if (n)
                if (q) {
                    n.isStatusNode = true;
                    n.key = "_statusNode";
                    q.data = n;
                    q.render()
                } else {
                    n.isStatusNode = true;
                    n.key = "_statusNode";
                    this.addChild(n)
                } else if (q && q.isStatusNode()) {
                try {
                    this.ul && this.ul.removeChild(q.li)
                } catch (u) {}
                if (this.childList.length === 1) this.childList = [];
                else this.childList.shift()
            }
        },
        setLazyNodeStatus: function (n, q) {
            var u = q && q.tooltip ? q.tooltip : null,
                v = q && q.info ?
                    " (" + q.info + ")" : "";
            switch (n) {
            case DTNodeStatus_Ok:
                this._setStatusNode(null);
                a(this.span).removeClass(this.tree.options.classNames.nodeLoading);
                this.isLoading = false;
                this.render();
                if (this.tree.options.autoFocus) this === this.tree.tnRoot && this.childList && this.childList.length > 0 ? this.childList[0].focus() : this.focus();
                break;
            case DTNodeStatus_Loading:
                this.isLoading = true;
                a(this.span).addClass(this.tree.options.classNames.nodeLoading);
                this.parent || this._setStatusNode({
                    title: this.tree.options.strings.loading + v,
                    tooltip: u,
                    addClass: this.tree.options.classNames.nodeWait
                });
                break;
            case DTNodeStatus_Error:
                this.isLoading = false;
                this._setStatusNode({
                    title: this.tree.options.strings.loadError + v,
                    tooltip: u,
                    addClass: this.tree.options.classNames.nodeError
                });
                break;
            default:
                throw "Bad LazyNodeStatus: '" + n + "'.";
            }
        },
        _parentList: function (n, q) {
            for (var u = [], v = q ? this : this.parent; v;) {
                if (n || v.parent) u.unshift(v);
                v = v.parent
            }
            return u
        },
        getLevel: function () {
            for (var n = 0, q = this.parent; q;) {
                n++;
                q = q.parent
            }
            return n
        },
        _getTypeForOuterNodeEvent: function (n) {
            var q =
                this.tree.options.classNames,
                u = n.target;
            if (u.className.indexOf(q.node) < 0) return null;
            var v = n.pageX - u.offsetLeft;
            n = n.pageY - u.offsetTop;
            for (var x = 0; x < u.childNodes.length; x++) {
                var z = u.childNodes[x],
                    B = z.offsetLeft - u.offsetLeft,
                    C = z.offsetTop - u.offsetTop,
                    w = z.clientWidth,
                    G = z.clientHeight;
                if (v >= B && v <= B + w && n >= C && n <= C + G)
                    if (z.className == q.title) return "title";
                    else if (z.className == q.expander) return "expander";
                else if (z.className == q.checkbox) return "checkbox";
                else if (z.className == q.nodeIcon) return "icon"
            }
            return "prefix"
        },
        getEventTargetType: function (n) {
            var q = n && n.target ? n.target.className : "",
                u = this.tree.options.classNames;
            if (q === u.title) return "title";
            else if (q === u.expander) return "expander";
            else if (q === u.checkbox) return "checkbox";
            else if (q === u.nodeIcon) return "icon";
            else if (q === u.empty || q === u.vline || q === u.connector) return "prefix";
            else if (q.indexOf(u.node) >= 0) return this._getTypeForOuterNodeEvent(n);
            return null
        },
        isVisible: function () {
            for (var n = this._parentList(true, false), q = 0; q < n.length; q++)
                if (!n[q].bExpanded) return false;
            return true
        },
        makeVisible: function () {
            for (var n = this._parentList(true, false), q = 0; q < n.length; q++) n[q]._expand(true)
        },
        focus: function () {
            this.makeVisible();
            try {
                a(this.span).find(">a").focus()
            } catch (n) {}
        },
        isFocused: function () {
            return this.tree.tnFocused === this
        },
        _activate: function (n, q) {
            this.tree.logDebug("dtnode._activate(%o, fireEvents=%o) - %o", n, q, this);
            var u = this.tree.options;
            if (!this.data.isStatusNode)
                if (!(q && u.onQueryActivate && u.onQueryActivate.call(this.tree, n, this) === false))
                    if (n) {
                        if (this.tree.activeNode) {
                            if (this.tree.activeNode ===
                                this) return;
                            this.tree.activeNode.deactivate()
                        }
                        u.activeVisible && this.makeVisible();
                        this.tree.activeNode = this;
                        u.persist && a.cookie(u.cookieId + "-active", this.data.key, u.cookie);
                        this.tree.persistence.activeKey = this.data.key;
                        a(this.span).addClass(u.classNames.active);
                        q && u.onActivate && u.onActivate.call(this.tree, this)
                    } else if (this.tree.activeNode === this) {
                u = this.tree.options;
                if (!(u.onQueryActivate && u.onQueryActivate.call(this.tree, false, this) === false)) {
                    a(this.span).removeClass(u.classNames.active);
                    u.persist &&
                        a.cookie(u.cookieId + "-active", "", u.cookie);
                    this.tree.persistence.activeKey = null;
                    this.tree.activeNode = null;
                    q && u.onDeactivate && u.onDeactivate.call(this.tree, this)
                }
            }
        },
        activate: function () {
            this._acti  getLevel: function () {
            for (var n = 0, q = this.parent; q;) {
                n++;
                q = q.parent
            }
            return n
        },
        _getTypeForOuterNodeEvent: function (n) {
            var q =
                this.tree.options.classNames,
                u = n.target;
            if (u.className.indexOf(q.node) < 0) return null;
            var v = n.pageX - u.offsetLeft;
            n = n.pageY - u.offsetTop;
            for (var x = 0; x < u.childNodes.length; x++) {
                var z = u.childNodes[x],
                    B = z.offsetLeft - u.offsetLeft,
                    C = z.offsetTop - u.offsetTop,
                    w = z.clientWidth,
                    G = z.clientHeight;
                if (v >= B && v <= B + w && n >= C && n <= C + G)
                    if (z.className == q.title) return "title";
                    else if (z.className == q.expander) return "expander";
                else if (z.className == q.checkbox) return "checkbox";
                else if (z.className == q.nodeIcon) return "icon"
            }
            return "prefix"
        },
        getEventTargetType: function (n) {
            var q = n && n.target ? n.target.className : "",
                u = this.tree.options.classNames;
            if (q === u.title) return "title";
            else if (q === u.expander) return "expander";
            else if (q === u.checkbox) return "checkbox";
            else if (q === u.nodeIcon) return "icon";
            else if (q === u.empty || q === u.vline || q === u.connector) return "prefix";
            else if (q.indexOf(u.node) >= 0) return this._getTypeForOuterNodeEvent(n);
            return null
        },
        isVisible: function () {
            for (var n = this._parentList(true, false), q = 0; q < n.length; q++)
                if (!n[q].bExpanded) return false;
            return true
        },
        makeVisible: function () {
            for (var n = this._parentList(true, false), q = 0; q < n.length; q++) n[q]._expand(true)
        },
        focus: function () {
            this.makeVisible();
            try {
                a(this.span).find(">a").focus()
            } catch (n) {}
        },
        isFocused: function () {
            return this.tree.tnFocused === this
        },
        _activate: function (n, q) {
            this.tree.logDebug("dtnode._activate(%o, fireEvents=%o) - %o", n, q, this);
            var u = this.tree.options;
            if (!this.data.isStatusNode)
                if (!(q && u.onQueryActivate && u.onQueryActivate.call(this.tree, n, this) === false))
                    if (n) {
                        if (this.tree.activeNode) {
                            if (this.tree.activeNode ===
                                this) return;
                            this.tree.activeNode.deactivate()
                        }
                        u.activeVisible && this.makeVisible();
                        this.tree.activeNode = this;
                        u.persist && a.cookie(u.cookieId + "-active", this.data.key, u.cookie);
                        this.tree.persistence.activeKey = this.data.key;
                        a(this.span).addClass(u.classNames.active);
                        q && u.onActivate && u.onActivate.call(this.tree, this)
                    } else if (this.tree.activeNode === this) {
                u = this.tree.options;
                if (!(u.onQueryActivate && u.onQueryActivate.call(this.tree, false, this) === false)) {
                    a(this.span).removeClass(u.classNames.active);
                    u.persist &&
                        a.cookie(u.cookieId + "-active", "", u.cookie);
                    this.tree.persistence.activeKey = null;
                    this.tree.activeNode = null;
                    q && u.onDeactivate && u.onDeactivate.call(this.tree, this)
                }
            }
        },
        activate: function () {
            this._activate(true, true)
        },
        activateSilently: function () {
            this._activate(true, false)
        },
        deactivate: function () {
            this._activate(false, true)
        },
        isActive: function () {
            return this.tree.activeNode === this
        },
        _userActivate: function () {
            var n = true,
                q = false;
            if (this.data.isFolder) switch (this.tree.options.clickFolderMode) {
            case 2:
                n = false;
                q = true;
                break;
            case 3:
                n = q = true
            }
            if (this.parent === null) q = false;
            if (q) {
                this.toggleExpand();
                this.focus()
            }
            n && this.activate()
        },
        _setSubSel: function (n) {
            if (n) {
                this.hasSubSel = true;
                a(this.span).addClass(this.tree.options.classNames.partsel)
            } else {
                this.hasSubSel = false;
                a(this.span).removeClass(this.tree.options.classNames.partsel)
            }
        },
        _fixSelectionState: function () {
            if (this.bSelected) {
                this.visit(function (x) {
                    x.parent._setSubSel(true);
                    x._select(true, false, false)
                });
                for (var n = this.parent; n;) {
                    n._setSubSel(true);
                    for (var q = true, u =
                            0; u < n.childList.length; u++) {
                        var v = n.childList[u];
                        if (!v.bSelected && !v.data.isStatusNode) {
                            q = false;
                            break
                        }
                    }
                    q && n._select(true, false, false);
                    n = n.parent
                }
            } else {
                this._setSubSel(false);
                this.visit(function (x) {
                    x._setSubSel(false);
                    x._select(false, false, false)
                });
                for (n = this.parent; n;) {
                    n._select(false, false, false);
                    q = false;
                    for (u = 0; u < n.childList.length; u++)
                        if (n.childList[u].bSelected || n.childList[u].hasSubSel) {
                            q = true;
                            break
                        }
                    n._setSubSel(q);
                    n = n.parent
                }
            }
        },
        _select: function (n, q, u) {
            var v = this.tree.options;
            if (!this.data.isStatusNode)
                if (this.bSelected !==
                    n)
                    if (!(q && v.onQuerySelect && v.onQuerySelect.call(this.tree, n, this) === false)) {
                        v.selectMode == 1 && n && this.tree.visit(function (x) {
                            if (x.bSelected) {
                                x._select(false, false, false);
                                return false
                            }
                        });
                        if (this.bSelected = n) {
                            v.persist && this.tree.persistence.addSelect(this.data.key);
                            a(this.span).addClass(v.classNames.selected);
                            u && v.selectMode === 3 && this._fixSelectionState();
                            q && v.onSelect && v.onSelect.call(this.tree, true, this)
                        } else {
                            v.persist && this.tree.persistence.clearSelect(this.data.key);
                            a(this.span).removeClass(v.classNames.selected);
                            u && v.selectMode === 3 && this._fixSelectionState();
                            q && v.onSelect && v.onSelect.call(this.tree, false, this)
                        }
              leExpand();
                this.focus()
            } else if (n === "checkbox") {
                this.toggleSelect();
                this.focus()
            } else {
                this._userActivate();
                n = this.span.getElementsByTagName("a");
                if (n[0]) a.browser.msie || n[0].focus();
                else return true
            }
            return false
        },
        _onDblClick: function () {},
        _onKeydown: function (n) {
            var q = true;
            switch (n.which) {
            case 107:
            case 187:
                this.bExpanded || this.toggleExpand();
                break;
            case 109:
            case 189:
                this.bExpanded && this.toggleExpand();
                break;
            case 32:
                this._userActivate();
                break;
            case 8:
                this.parent && this.parent.focus();
                break;
            case 37:
                if (this.bExpanded) {
                    this.toggleExpand();
                    this.focus()
                } else this.parent && this.parent.parent && this.parent.focus();
                break;
            case 39:
                if (!this.bExpanded && (this.childList || this.data.isLazy)) {
                    this.toggleExpand();
                    this.focus()
                } else this.childList && this.childList[0].focus();
                break;
            case 38:
                for (var u = this.getPrevSibling(); u && u.bExpanded && u.childList;) u = u.childList[u.childList.length - 1];
                if (!u && this.parent && this.parent.parent) u = this.parent;
                u && u.focus();
                break;
            case 40:
                if (this.bExpanded && this.childList) u =
                    this.childList[0];
                else {
                    n = this._parentList(false, true);
                    for (var v = n.length - 1; v >= 0; v--)
                        if (u = n[v].getNextSibling()) break
                }
                u && u.focus();
                break;
            default:
                q = false
            }
            return !q
        },
        _onKeypress: function () {},
        _onFocus: function (n) {
            var q = this.tree.options;
            if (n.type == "blur" || n.type == "focusout") {
                q.onBlur && q.onBlur.call(this.tree, this);
                this.tree.tnFocused && a(this.tree.tnFocused.span).removeClass(q.classNames.focused);
                this.tree.tnFocused = null;
                q.persist && a.cookie(q.cookieId + "-focus", "", q.cookie)
            } else if (n.type == "focus" || n.type ==
                "focusin") {
                if (this.tree.tnFocused && this.tree.tnFocused !== this) {
                    this.tree.logDebug("dtnode.onFocus: out of sync: curFocus: %o", this.tree.tnFocused);
                    a(this.tree.tnFocused.span).removeClass(q.classNames.focused)
                }
                this.tree.tnFocused = this;
                q.onFocus && q.onFocus.call(this.tree, this);
                a(this.tree.tnFocused.span).addClass(q.classNames.focused);
                q.persist && a.cookie(q.cookieId + "-focus", this.data.key, q.cookie)
            }
        },
        visit: function (n, q) {
            var u = true;
            if (q === true) {
                u = n(this);
                if (u === false || u == "skip") return u
            }
            if (this.childList)
                for (var v =
                    0; v < this.childList.length; v++) {
                    u = this.childList[v].visit(n, true);
                    if (u === false) break
                }
            return u
        },
        visitParents: function (n, q) {
            if (q && n(this) === false) return false;
            for (var u = this.parent; u;) {
                if (n(u) === false) return false;
                u = u.parent
            }
            return true
        },
        remove: function () {
            if (this === this.tree.root) throw "Cannot remove system root";
            return this.parent.removeChild(this)
        },
        removeChild: function (n) {
            var q = this.childList;
            if (q.length == 1) {
                if (n !== q[0]) throw "removeChild: invalid child";
                return this.removeChildren()
            }
            n === this.tree.activeNode &&
                n.deactivate();
            if (this.tree.options.persist) {
                n.bSelected && this.tree.persistence.clearSelect(n.data.key);
                n.bExpanded && this.tree.persistence.clearExpand(n.data.key)
            }
            n.removeChildren(true);
            this.ul.removeChild(n.li);
            for (var u = 0; u < q.length; u++)
                if (q[u] === n) {
                    this.childList.splice(u, 1);
                    delete n;
                    break
                }
        },
        removeChildren: function (n, q) {
            this.tree.logDebug("%s.removeChildren(%o)", this, n);
            var u = this.tree,
                v = this.childList;
            if (v) {
                for (var x = 0; x < v.length; x++) {
                    var z = v[x];
                    z === u.activeNode && !q && z.deactivate();
                    if (this.tree.options.persist && !q) {
                        z.bSelected && this.tree.persistence.clearSelect(z.data.key);
                        z.bExpanded && this.tree.persistence.clearExpand(z.data.key)
                    }
                    z.removeChildren(true, q);
                    this.ul && this.ul.removeChild(z.li);
                    delete z
                }
                this.childList = null
            }
            if (!n) {
                this.isLoading = false;
                this.render()
            }
        },
        setTitle: function (n) {
            this.fromDict({
                title: n
            })
        },
        reload: function () {
            throw "Use reloadChildren() instead";
        },
        reloadChildren: function (n) {
            if (this.parent === null) throw "Use tree.reload() instead";
            else if (!this.data.isLazy) throw "node.reloadChildren() requires lazy nodes.";
            if (n) {
                var q = this,
                    u = "nodeLoaded.dynatree." + this.tree.$tree.attr("id") + "." + this.data.key;
                this.tree.$tree.bind(u, function (v, x, z) {
                    q.tree.$tree.unbind(u);
                    q.tree.logInfo("loaded %o, %o, %o", v, x, z);
                    if (x !== q) throw "got invalid load event";
                    n.call(q.tree, x, z)
                })
            }
            this.removeChildren();
            this._loadContent()
        },
        _loadKeyPath: function (n, q) {
            var u = this.tree;
            u.logDebug("%s._loadKeyPath(%s)", this, n);
            if (n === "") throw "Key path must not be empty";
            var v = n.split(u.options.keyPathSeparator);
            if (v[0] === "") throw "Key path must be relative (don't start with '/')";
            for (var x = v.shift(), z = 0; z < this.childList.length; z++) {
                var B = this.childList[z];
                if (B.data.key === x) {
                    if (v.length === 0) q.call(u, B, "ok");
                    else if (B.data.isLazy && (B.childList === null || B.childList === undefined)) {
                        u.logDebug("%s._loadKeyPath(%s) -> reloading %s...", this, n, B);
                        var C = this;
                        B.reloadChildren(function (w, G) {
                            if (G) {
                                u.logDebug("%s._loadKeyPath(%s) -> reloaded %s.", w, n, w);
                                q.call(u, B, "loaded");
                                w._loadKeyPath(v.join(u.options.keyPathSeparator), q)
                            } else {
                                u.logWarning("%s._loadKeyPath(%s) -> reloadChildren() failed.",
                                    C, n);
                                q.call(u, B, "error")
                            }
                        })
                    } else {
                        q.call(u, B, "loaded");
                        B._loadKeyPath(v.join(u.options.keyPathSeparator), q)
                    }
                    return
                }
            }
            u.logWarning("Node not found: " + x)
        },
        resetLazy: function () {
            if (this.parent === null) throw "Use tree.reload() instead";
            else if (!this.data.isLazy) throw "node.resetLazy() requires lazy nodes.";
            this.expand(false);
            this.removeChildren()
        },
        _addChildNode: function (n, q) {
            var u = this.tree,
                v = u.options,
                x = u.persistence;
            n.parent = this;
            if (this.childList === null) this.childList = [];
            else q || a(this.childList[this.childList.length -
                1].span).removeClass(v.classNames.lastsib); if (q) {
                var z = a.inArray(q, this.childList);
                if (z < 0) throw "<beforeNode> must be a child of <this>";
                this.childList.splice(z, 0, n)
            } else this.childList.push(n);
            z = u.isInitializing();
            if (v.persist && x.cookiesFound && z) {
                if (x.activeKey == n.data.key) u.activeNode = n;
                if (x.focusedKey == n.data.key) u.focusNode = n;
                n.bExpanded = a.inArray(n.data.key, x.expandedKeyList) >= 0;
                n.bSelected = a.inArray(n.data.key, x.selectedKeyList) >= 0
            } else {
                if (n.data.activate) {
                    u.activeNode = n;
                    if (v.persist) x.activeKey =
                        n.data.key
                }
                if (n.data.focus) {
                    u.focusNode = n;
                    if (v.persist) x.focusedKey = n.data.key
                }
                n.bExpanded = n.data.expand === true;
                n.bExpanded && v.persist && x.addExpand(n.data.key);
                n.bSelected = n.data.select === true;
                n.bSelected && v.persist && x.addSelect(n.data.key)
            } if (v.minExpandLevel >= n.getLevel()) this.bExpanded = true;
            if (n.bSelected && v.selectMode == 3)
                for (v = this; v;) {
                    v.hasSubSel || v._setSubSel(true);
                    v = v.parent
                }
            u.bEnableUpdate && this.render();
            return n
        },
        addChild: function (n, q) {
            if (typeof n == "string") throw "Invalid data type for " +
                n;
            else if (!n || n.length === 0) return;
            else if (n instanceof g) return this._addChildNode(n, q);
            n.length || (n = [n]);
            for (var u = this.tree.enableUpdate(false), v = null, x = 0; x < n.length; x++) {
                var z = n[x],
                    B = this._addChildNode(new g(this, this.tree, z), q);
                v || (v = B);
                z.children && B.addChild(z.children, null)
            }
            this.tree.enableUpdate(u);
            return v
        },
        append: function (n) {
            this.tree.logWarning("node.append() is deprecated (use node.addChild() instead).");
            return this.addChild(n, null)
        },
        appendAjax: function (n) {
            this.removeChildren(false, true);
            this.setLazyNodeStatus(DTNodeStatus_Loading);
            if (n.debugLazyDelay) {
                var q = n.debugLazyDelay,
                    u = this;
                n.debugLazyDelay = 0;
                this.tree.logInfo("appendAjax: waiting for debugLazyDelay " + q);
                setTimeout(function () {
                    u.appendAjax(n)
                }, q)
            } else {
                u = this;
                var v = n.success,
                    x = n.error,
                    z = "nodeLoaded.dynatree." + this.tree.$tree.attr("id") + "." + this.data.key,
                    B = a.extend({}, this.tree.options.ajaxDefaults, n, {
                        success: function (C) {
                            var w = u.tree.phase;
                            u.tree.phase = "init";
                            if (!a.isArray(C) || C.length !== 0) u.addChild(C, null);
                            u.tree.phase = "postInit";
                            v && v.call(B, u);
                            u.tree.logInfo("trigger " + z);
                            u.tree.$tree.trigger(z, [u, true]);
                            u.tree.phase = w;
                            u.setLazyNodeStatus(DTNodeStatus_Ok);
                            if (a.isArray(C) && C.length === 0) {
                                u.childList = [];
                                u.render()
                            }
                        },
                        error: function (C, w, G) {
                            u.tree.logWarning("appendAjax failed:", w, ":\n", C, "\n", G);
                            x && x.call(B, u, C, w, G);
                            u.tree.$tree.trigger(z, [u, false]);
                            u.setLazyNodeStatus(DTNodeStatus_Error, {
                                info: w,
                                tooltip: "" + G
                            })
                        }
                    });
                a.ajax(B)
            }
        },
        move: function (n, q) {
            if (this !== n) {
                if (!this.parent) throw "Cannot move system root";
                if (q === undefined || q == "over") q =
                    "child";
                var u = this.parent,
                    v = q === "child" ? n : n.parent;
                if (v.isDescendantOf(this)) throw "Cannot move a node to it's own descendant";
                if (this.parent.childList.length == 1) {
                    this.parent.childList = null;
                    this.parent.bExpanded = false
                } else {
                    var x = a.inArray(this, this.parent.childList);
                    if (x < 0) throw "Internal error";
                    this.parent.childList.splice(x, 1)
                }
                this.parent.ul.removeChild(this.li);
                this.parent = v;
                if (v.hasChildren()) switch (q) {
                case "child":
                    v.childList.push(this);
                    break;
                case "before":
                    x = a.inArray(n, v.childList);
                    if (x < 0) throw "Internal error";
                    v.childList.splice(x, 0, this);
                    break;
                case "after":
                    x = a.inArray(n, v.childList);
                    if (x < 0) throw "Internal error";
                    v.childList.splice(x + 1, 0, this);
                    break;
                default:
                    throw "Invalid mode " + q;
                } else {
                    v.childList = [this];
                    if (!v.ul) {
                        v.ul = document.createElement("ul");
                        v.ul.style.display = "none";
                        v.li.appendChild(v.ul)
                    }
                }
                v.ul.appendChild(this.li);
                if (this.tree !== n.tree) {
                    this.visit(function (z) {
                        z.tree = n.tree
                    }, null, true);
                    throw "Not yet implemented.";
                }
                u.isDescendantOf(v) || u.render();
                v.isDescendantOf(u) || v.render()
            }
        },
        lastentry: undefined
    };
    var c = j.create();
    c._getTreePersistData = function (n, q) {
        var u = new c(n, q);
        u.read();
        return u.toDict()
    };
    getDynaTreePersistData = c._getTreePersistData;
    c.prototype = {
        initialize: function (n, q) {
            this._log("DynaTreeStatus: initialize");
            if (n === undefined) n = a.ui.dynatree.prototype.options.cookieId;
            q = a.extend({}, a.ui.dynatree.prototype.options.cookie, q);
            this.cookieId = n;
            this.cookieOpts = q;
            this.cookiesFound = undefined;
            this.selectedKeyList = this.expandedKeyList = this.focusedKey = this.activeKey = null
        },
        _log: function () {
            Array.prototype.unshift.apply(arguments, ["debug"]);
            _log.apply(this, arguments)
        },
        read: function () {
            this._log("DynaTreeStatus: read");
            this.cookiesFound = false;
            var n = a.cookie(this.cookieId + "-active");
            this.activeKey = n === null ? "" : n;
            if (n !== null) this.cookiesFound = true;
            n = a.cookie(this.cookieId + "-focus");
            this.focusedKey = n === null ? "" : n;
            if (n !== null) this.cookiesFound = true;
            n = a.cookie(this.cookieId + "-expand");
            this.expandedKeyList = n === null ? [] : n.split(",");
            if (n !== null) this.cookiesFound = true;
            n = a.cookie(this.cookieId + "-select");
            this.selectedKeyList = n === null ? [] :
                n.split(",");
            if (n !== null) this.cookiesFound = true
        },
        write: function () {
            this._log("DynaTreeStatus: write");
            a.cookie(this.cookieId + "-active", this.activeKey === null ? "" : this.activeKey, this.cookieOpts);
            a.cookie(this.cookieId + "-focus", this.focusedKey === null ? "" : this.focusedKey, this.cookieOpts);
            a.cookie(this.cookieId + "-expand", this.expandedKeyList === null ? "" : this.expandedKeyList.join(","), this.cookieOpts);
            a.cookie(this.cookieId + "-select", this.selectedKeyList === null ? "" : this.selectedKeyList.join(","), this.cookieOpts)
        },
        addExpand: function (n) {
            this._log("addExpand(%o)", n);
            if (a.inArray(n, this.expandedKeyList) < 0) {
                this.expandedKeyList.push(n);
                a.cookie(this.cookieId + "-expand", this.expandedKeyList.join(","), this.cookieOpts)
            }
        },
        clearExpand: function (n) {
            this._log("clearExpand(%o)", n);
            n = a.inArray(n, this.expandedKeyList);
            if (n >= 0) {
                this.expandedKeyList.splice(n, 1);
                a.cookie(this.cookieId + "-expand", this.expandedKeyList.join(","), this.cookieOpts)
            }
        },
        addSelect: function (n) {
            this._log("addSelect(%o)", n);
            if (a.inArray(n, this.selectedKeyList) <
                0) {
                this.selectedKeyList.push(n);
                a.cookie(this.cookieId + "-select", this.selectedKeyList.join(","), this.cookieOpts)
            }
        },
        clearSelect: function (n) {
            this._log("clearSelect(%o)", n);
            n = a.inArray(n, this.selectedKeyList);
            if (n >= 0) {
                this.selectedKeyList.splice(n, 1);
                a.cookie(this.cookieId + "-select", this.selectedKeyList.join(","), this.cookieOpts)
            }
        },
        isReloading: function () {
            return this.cookiesFound === true
        },
        toDict: function () {
            return {
                cookiesFound: this.cookiesFound,
                activeKey: this.activeKey,
                focusedKey: this.activeKey,
                expandedKeyList: this.expandedKeyList,
                selectedKeyList: this.selectedKeyList
            }
        },
        lastentry: undefined
    };
    var b = j.create();
    b.version = "$Version: 1.0.2$";
    b.prototype = {
        initialize: function (n) {
            this.phase = "init";
            this.$widget = n;
            this.options = n.options;
            this.$tree = n.element;
            this.timer = null;
            this.divTree = this.$tree.get(0);
            f(this)
        },
        _load: function (n) {
            var q = this.options;
            this.bEnableUpdate = true;
            this._nodeCount = 1;
            this.focusNode = this.activeNode = null;
            console_log(q);
            q.rootVisible !== undefined && _log("warn", "Option 'rootVisible' is no longer supported.");
            q.title !==
                undefined && _log("warn", "Option 'title' is no longer supported.");
            if (q.minExpandLevel < 1) {
                _log("warn", "Option 'minExpandLevel' must be >= 1.");
                q.minExpandLevel = 1
            }
            if (q.classNames !== a.ui.dynatree.prototype.options.classNames) q.classNames = a.extend({}, a.ui.dynatree.prototype.options.classNames, q.classNames);
            if (q.ajaxDefaults !== a.ui.dynatree.prototype.options.ajaxDefaults) q.ajaxDefaults = a.extend({}, a.ui.dynatree.prototype.options.ajaxDefaults, q.ajaxDefaults);
            if (q.dnd !== a.ui.dynatree.prototype.options.dnd) q.dnd =
                a.extend({}, a.ui.dynatree.prototype.options.dnd, q.dnd);
            q.imagePath || a("script").each(function () {
                if (this.src.search(/.*dynatree[^\/]*\.js$/i) >= 0) {
                    q.imagePath = this.src.indexOf("/") >= 0 ? this.src.slice(0, this.src.lastIndexOf("/")) + "/skin/" : "skin/";
                    logMsg("Guessing imagePath from '%s': '%s'", this.src, q.imagePath);
                    return false
                }
            });
            this.persistence = new c(q.cookieId, q.cookie);
            if (q.persist) {
                a.cookie || _log("warn", "Please include jquery.cookie.js to use persistence.");
                this.persistence.read()
            }
            this.logDebug("DynaTree.persistence: %o",
                this.persistence.toDict());
            this.cache = {
                tagEmpty: "<span class='" + q.classNames.empty + "'></span>",
                tagVline: "<span class='" + q.classNames.vline + "'></span>",
                tagExpander: "<span class='" + q.classNames.expander + "'></span>",
                tagConnector: "<span class='" + q.classNames.connector + "'></span>",
                tagNodeIcon: "<span class='" + q.classNames.nodeIcon + "'></span>",
                tagCheckbox: "<span class='" + q.classNames.checkbox + "'></span>",
                lastentry: undefined
            };
            if (q.children || q.initAjax && q.initAjax.url || q.initId) a(this.divTree).empty();
            else this.divRoot &&
                a(this.divRoot).remove();
            this.tnRoot = new g(null, this, {});
            this.tnRoot.bExpanded = true;
            this.tnRoot.render();
            this.divTree.appendChild(this.tnRoot.ul);
            var u = this.tnRoot,
                v = q.persist && this.persistence.isReloading(),
                x = false,
                z = this.enableUpdate(false);
            this.logDebug("Dynatree._load(): read tree structure...");
            if (q.children) u.addChild(q.children);
            else if (q.initAjax && q.initAjax.url) {
                x = true;
                u.data.isLazy = true;
                this._reloadAjax(n)
            } else if (q.initId) this._createFromTag(u, a("#" + q.initId));
            else {
                n = this.$tree.find(">ul:first").hide();
                this._createFromTag(u, n);
                n.remove()
            }
            this._checkConsistency();
            this.logDebug("Dynatree._load(): render nodes...");
            this.enableUpdate(z);
            this.logDebug("Dynatree._load(): bind events...");
            this.$widget.bind();
            this.logDebug("Dynatree._load(): postInit...");
            this.phase = "postInit";
            q.persist && this.persistence.write();
            if (this.focusNode && this.focusNode.isVisible()) {
                this.logDebug("Focus on init: %o", this.focusNode);
                this.focusNode.focus()
            }!x && q.onPostInit && q.onPostInit.call(this, v, false);
            this.phase = "idle"
        },
        _reloadAjax: function (n) {
            var q =
                this.options;
            if (!q.initAjax || !q.initAjax.url) throw "tree.reload() requires 'initAjax' mode.";
            var u = this.persistence,
                v = a.extend({}, q.initAjax);
            if (v.addActiveKey) v.data.activeKey = u.activeKey;
            if (v.addFocusedKey) v.data.focusedKey = u.focusedKey;
            if (v.addExpandedKeyList) v.data.expandedKeyList = u.expandedKeyList.join(",");
            if (v.addSelectedKeyList) v.data.selectedKeyList = u.selectedKeyList.join(",");
            if (q.onPostInit) {
                v.success && this.logWarning("initAjax: success callback is ignored when onPostInit was specified.");
                v.error && this.logWarning("initAjax: error callback is ignored when onPostInit was specified.");
                var x = u.isReloading();
                v.success = function (z) {
                    q.onPostInit.call(z.tree, x, false);
                    n && n.call(z.tree, "ok")
                };
                v.error = function (z) {
                    q.onPostInit.call(z.tree, x, true);
                    n && n.call(z.tree, "error")
                }
            }
            this.logDebug("Dynatree._init(): send Ajax request...");
            this.tnRoot.appendAjax(v)
        },
        toString: function () {
            return "Dynatree '" + this.$tree.attr("id") + "'"
        },
        toDict: function () {
            return this.tnRoot.toDict(true)
        },
        serializeArray: function (n) {
            n =
                this.getSelectedNodes(n);
            for (var q = this.$tree.attr("name") || this.$tree.attr("id"), u = [], v = 0, x = n.length; v < x; v++) u.push({
                name: q,
                value: n[v].data.key
            });
            return u
        },
        getPersistData: function () {
            return this.persistence.toDict()
        },
        logDebug: function () {
            if (this.options.debugLevel >= 2) {
                Array.prototype.unshift.apply(arguments, ["debug"]);
                _log.apply(this, arguments)
            }
        },
        logInfo: function () {
            if (this.options.debugLevel >= 1) {
                Array.prototype.unshift.apply(arguments, ["info"]);
                _log.apply(this, arguments)
            }
        },
        logWarning: function () {
            Array.prototype.unshift.apply(arguments, ["warn"]);
            _log.apply(this, arguments)
        },
        isInitializing: function () {
            return this.phase == "init" || this.phase == "postInit"
        },
        isReloading: function () {
            return (this.phase == "init" || this.phase == "postInit") && this.options.persist && this.persistence.cookiesFound
        },
        isUserEvent: function () {
            return this.phase == "userEvent"
        },
        redraw: function () {
            this.logDebug("dynatree.redraw()...");
            this.tnRoot.render(false);
            this.logDebug("dynatree.redraw() done.")
        },
        reload: function (n) {
            this._load(n)
        },
        getRoot: function () {
            return this.tnRoot
        },
        enable: function () {
            this.$widget.enable()
        },
        disable: function () {
            this.$widget.disable()
        },
        getNodeByKey: function (n) {
            var q = document.getElementById(this.options.idPrefix + n);
            if (q) return q.dtnode ? q.dtnode : null;
            var u = null;
            this.visit(function (v) {
                if (v.data.key == n) {
                    u = v;
                    return false
                }
            }, true);
            return u
        },
        getActiveNode: function () {
            return this.activeNode
        },
        reactivate: function (n) {
            var q = this.activeNode;
            if (q) {
                this.activeNode = null;
                q.activate();
                n && q.focus()
            }
        },
        getSelectedNodes: function (n) {
            var q = [];
            this.tnRoot.visit(function (u) {
                if (u.bSelected) {
                    q.push(u);
                    if (n === true) return "skip"
                }
            });
            return q
        },
        activateKey: function (n) {
            n = n === null ? null : this.getNodeByKey(n);
            if (!n) {
                this.activeNode && this.activeNode.deactivate();
                return this.activeNode = null
            }
            n.focus();
            n.activate();
            return n
        },
        loadKeyPath: function (n, q) {
            var u = n.split(this.options.keyPathSeparator);
            u[0] === "" && u.shift();
            if (u[0] == this.tnRoot.data.key) {
                this.logDebug("Removed leading root key.");
                u.shift()
            }
            n = u.join(this.options.keyPathSeparator);
            return this.tnRoot._loadKeyPath(n, q)
        },
        selectKey: function (n, q) {
            var u = this.getNodeByKey(n);
            if (!u) return null;
            u.select(q);
            return u
        },
        enableUpdate: function (n) {
            if (this.bEnableUpdate == n) return n;
            (this.bEnableUpdate = n) && this.redraw();
            return !n
        },
        visit: function (n, q) {
            return this.tnRoot.visit(n, q)
        },
        _createFromTag: function (n, q) {
            var u = this;
            q.find(">li").each(function () {
                var v = a(this),
                    x = v.find(">span:first");
                if (x.length) x = x.html();
                else {
                    x = v.html();
                    var z = x.search(/<ul/i);
                    x = z >= 0 ? a.trim(x.substring(0, z)) : a.trim(x)
                }
                x = {
                    title: x,
                    isFolder: v.hasClass("folder"),
                    isLazy: v.hasClass("lazy"),
                    expand: v.hasClass("expanded"),
                    select: v.hasClass("selected"),
                    activate: v.hasClass("active"),
                    focus: v.hasClass("focused"),
                    noLink: v.hasClass("noLink")
                };
                if (v.attr("title")) x.tooltip = v.attr("title");
                if (v.attr("id")) x.key = v.attr("id");
                if (v.attr("data"))
                    if (z = a.trim(v.attr("data"))) {
                        if (z.charAt(0) != "{") z = "{" + z + "}";
                        try {
                            a.extend(x, eval("(" + z + ")"))
                        } catch (B) {
                            throw "Error parsing node data: " + B + "\ndata:\n'" + z + "'";
                        }
                    }
                x = n.addChild(x);
                v = v.find(">ul:first");
                v.length && u._createFromTag(x, v)
            })
        },
        _checkConsistency: function () {},
        _setDndStatus: function (n, q, u, v, x) {
            n = n ? a(n.span) : null;
            q =
                a(q.span);
            if (!this.$dndMarker) {
                this.$dndMarker = a("<div id='dynatree-drop-marker'></div>").hide().prependTo(a(this.divTree).parent());
                logMsg("Creating marker: %o", this.$dndMarker)
            }
            if (v === "after" || v === "before" || v === "over") {
                var z = q.position();
                switch (v) {
                case "before":
                    this.$dndMarker.removeClass("dynatree-drop-after dynatree-drop-over");
                    this.$dndMarker.addClass("dynatree-drop-before");
                    z.top -= 8;
                    break;
                case "after":
                    this.$dndMarker.removeClass("dynatree-drop-before dynatree-drop-over");
                    this.$dndMarker.addClass("dynatree-drop-after");
                    z.top += 8;
                    break;
                default:
                    this.$dndMarker.removeClass("dynatree-drop-after dynatree-drop-before");
                    this.$dndMarker.addClass("dynatree-drop-over");
                    q.addClass("dynatree-drop-target");
                    z.left += 8
                }
                this.$dndMarker.css({
                    left: z.left + "px",
                    top: z.top + "px"
                }).show()
            } else {
                q.removeClass("dynatree-drop-target");
                this.$dndMarker.hide()
            }
            v === "after" ? q.addClass("dynatree-drop-after") : q.removeClass("dynatree-drop-after");
            v === "before" ? q.addClass("dynatree-drop-before") : q.removeClass("dynatree-drop-before");
            if (x === true) {
                n && n.addClass("dynatree-drop-accept");
                q.addClass("dynatree-drop-accept");
                u.addClass("dynatree-drop-accept")
            } else {
                n && n.removeClass("dynatree-drop-accept");
                q.removeClass("dynatree-drop-accept");
                u.removeClass("dynatree-drop-accept")
            } if (x === false) {
                n && n.addClass("dynatree-drop-reject");
                q.addClass("dynatree-drop-reject");
                u.addClass("dynatree-drop-reject")
            } else {
                n && n.removeClass("dynatree-drop-reject");
                q.removeClass("dynatree-drop-reject");
                u.removeClass("dynatree-drop-reject")
            }
        },
        _onDragEvent: function (n, q, u, v, x, z) {
            n !== "over" && this.logDebug("tree._onDragEvent(%s, %o, %o) - %o",
                n, q, u, this);
            var B = this.options.dnd,
                C = null,
                w = a(q.span);
            switch (n) {
            case "helper":
                u = a("<div class='dynatree-drag-helper'><span class='dynatree-drag-helper-img' /></div>").append(a(v.target).closest("a").clone());
                u.data("dtSourceNode", q);
                this.logDebug("helper.sourceNode=%o", u.data("dtSourceNode"));
                C = u;
                break;
            case "start":
                if (q.isStatusNode()) C = false;
                else if (B.onDragStart) C = B.onDragStart(q);
                if (C === false) {
                    this.logDebug("tree.onDragStart() cancelled");
                    x.helper.trigger("mouseup");
                    x.helper.hide()
                } else w.addClass("dynatree-drag-source");
                break;
            case "enter":
                C = B.onDragEnter ? B.onDragEnter(q, u) : null;
                C = {
                    over: C !== false && (C === true || C === "over" || a.inArray("over", C) >= 0),
                    before: C !== false && (C === true || C === "before" || a.inArray("before", C) >= 0),
                    after: C !== false && (C === true || C === "after" || a.inArray("after", C) >= 0)
                };
                x.helper.data("enterResponse", C);
                this.logDebug("helper.enterResponse: %o", C);
                break;
            case "over":
                z = x.helper.data("enterResponse");
                n = null;
                if (z === false) break;
                else if (typeof z === "string") n = z;
                else {
                    var G = w.offset();
                    v = {
                        x: v.pageX - G.left,
                        y: v.pageY - G.top
                    };
                    w = {
                        x: v.x / w.width(),
                        y: v.y / w.height()
                    };
                    if (z.after && w.y > 0.75) n = "after";
                    else if (!z.over && z.after && w.y > 0.5) n = "after";
                    else if (z.before && w.y <= 0.25) n = "before";
                    else if (!z.over && z.before && w.y <= 0.5) n = "before";
                    else if (z.over) n = "over";
                    if (B.preventVoidMoves)
                        if (q === u) {
                            this.logDebug("    drop over source node prevented");
                            n = null
                        } else if (n === "before" && u && q === u.getNextSibling()) {
                        this.logDebug("    drop after source node prevented");
                        n = null
                    } else if (n === "after" && u && q === u.getPrevSibling()) {
                        this.logDebug("    drop before source node prevented");
                        n = null
                    } else if (n === "over" && u && u.parent === q && u.isLastSibling()) {
                        this.logDebug("    drop last child over own parent prevented");
                        n = null
                    }
                    this.logDebug("hitMode: %s - %s - %s", n, q.parent === u, q.isLastSibling());
                    x.helper.data("hitMode", n)
                }
                n === "over" && B.autoExpandMS && q.hasChildren() !== false && !q.bExpanded && q.scheduleAction("expand", B.autoExpandMS);
                if (n && B.onDragOver) C = B.onDragOver(q, u, n);
                this._setDndStatus(u, q, x.helper, n, C !== false);
                break;
            case "drop":
                (n = x.helper.data("hitMode")) && B.onDrop && B.onDrop(q, u, n, x,
                    z);
                break;
            case "leave":
                q.scheduleAction("cancel");
                x.helper.data("enterResponse", null);
                x.helper.data("hitMode", null);
                this._setDndStatus(u, q, x.helper, "out", undefined);
                B.onDragLeave && B.onDragLeave(q, u);
                break;
            case "stop":
                w.removeClass("dynatree-drag-source");
                B.onDragStop && B.onDragStop(q);
                break;
            default:
                throw "Unsupported drag event: " + n;
            }
            return C
        },
        cancelDrag: function () {
            var n = a.ui.ddmanager.current;
            n && n.cancel()
        },
        lastentry: undefined
    };
    a.widget("ui.dynatree", {
        _init: function () {
            if (parseFloat(a.ui.version) < 1.8) {
                _log("warn",
                    "ui.dynatree._init() was called; you should upgrade to jquery.ui.core.js v1.8 or higher.");
                return this._create()
            }
            _log("debug", "ui.dynatree._init() was called; no current default functionality.")
        },
        _create: function () {
            logMsg("Dynatree._create(): version='%s', debugLevel=%o.", b.version, this.options.debugLevel);
            this.options.event += ".dynatree";
            this.element.get(0);
            this.tree = new b(this);
            this.tree._load();
            this.tree.logDebug("Dynatree._init(): done.")
        },
        bind: function () {
            function n(u) {
                u = u = a.event.fix(u || window.event);
                var v = e(u.target);
                return v ? v._onFocus(u) : false
            }
            this.unbind();
            var q = "click.dynatree dblclick.dynatree";
            if (this.options.keyboard) q += " keypress.dynatree keydown.dynatree";
            this.element.bind(q, function (u) {
                var v = e(u.target);
                if (!v) return true;
                var x = v.tree,
                    z = x.options;
                x.logDebug("event(%s): dtnode: %s", u.type, v);
                var B = x.phase;
                x.phase = "userEvent";
                try {
                    switch (u.type) {
                    case "click":
                        return z.onClick && z.onClick.call(x, v, u) === false ? false : v._onClick(u);
                    case "dblclick":
                        return z.onDblClick && z.onDblClick.call(x, v, u) ===
                            false ? false : v._onDblClick(u);
                    case "keydown":
                        return z.onKeydown && z.onKeydown.call(x, v, u) === false ? false : v._onKeydown(u);
                    case "keypress":
                        return z.onKeypress && z.onKeypress.call(x, v, u) === false ? false : v._onKeypress(u)
                    }
                } catch (C) {
                    x.logWarning("bind(%o): dtnode: %o, error: %o", u, v, C)
                } finally {
                    x.phase = B
                }
            });
            q = this.tree.divTree;
            if (q.addEventListener) {
                q.addEventListener("focus", n, true);
                q.addEventListener("blur", n, true)
            } else q.onfocusin = q.onfocusout = n
        },
        unbind: function () {
            this.element.unbind(".dynatree")
        },
        enable: function () {
            this.bind();
            a.Widget.prototype.enable.apply(this, arguments)
        },
        disable: function () {
            this.unbind();
            a.Widget.prototype.disable.apply(this, arguments)
        },
        getTree: function () {
            return this.tree
        },
        getRoot: function () {
            return this.tree.getRoot()
        },
        getActiveNode: function () {
            return this.tree.getActiveNode()
        },
        getSelectedNodes: function () {
            return this.tree.getSelectedNodes()
        },
        lastentry: undefined
    });
    if (parseFloat(a.ui.version) < 1.8) a.ui.dynatree.getter = "getTree getRoot getActiveNode getSelectedNodes";
    a.ui.dynatree.prototype.options = {
        title: "Dynatree",
        minExpandLevel: 1,
        imagePath: null,
        children: null,
        initId: null,
        initAjax: null,
        autoFocus: true,
        keyboard: true,
        persist: false,
        autoCollapse: false,
        clickFolderMode: 3,
        activeVisible: true,
        checkbox: false,
        selectMode: 2,
        fx: null,
        noLink: false,
        onClick: null,
        onDblClick: null,
        onKeydown: null,
        onKeypress: null,
        onFocus: null,
        onBlur: null,
        onQueryActivate: null,
        onQuerySelect: null,
        onQueryExpand: null,
        onPostInit: null,
        onActivate: null,
        onDeactivate: null,
        onSelect: null,
        onExpand: null,
        onLazyRead: null,
        dnd: {
            onDragStart: null,
            onDragStop: null,
            autoExpandMS: 1E3,
            preventVoidMoves: true,
            onDragEnter: null,
            onDragOver: null,
            onDrop: null,
            onDragLeave: null
        },
        ajaxDefaults: {
            cache: false,
            dataType: "json"
        },
        strings: {
            loading: "Loading&#8230;",
            loadError: "Load error!"
        },
        generateIds: false,
        idPrefix: "dynatree-id-",
        keyPathSeparator: "/",
        cookieId: "dynatree",
        cookie: {
            expires: null
        },
        classNames: {
            container: "dynatree-container",
            node: "dynatree-node",
            folder: "dynatree-folder",
            empty: "dynatree-empty",
            vline: "dynatree-vline",
            expander: "dynatree-expander",
            connector: "dynatree-connector",
            checkbox: "dynatree-checkbox",
            nodeIcon: "dynatree-icon",
            title: "dynatree-title",
            noConnector: "dynatree-no-connector",
            nodeError: "dynatree-statusnode-error",
            nodeWait: "dynatree-statusnode-wait",
            hidden: "dynatree-hidden",
            combinedExpanderPrefix: "dynatree-exp-",
            combinedIconPrefix: "dynatree-ico-",
            nodeLoading: "dynatree-loading",
            hasChildren: "dynatree-has-children",
            active: "dynatree-active",
            selected: "dynatree-selected",
            expanded: "dynatree-expanded",
            lazy: "dynatree-lazy",
            focused: "dynatree-focused",
            partsel: "dynatree-partsel",
            lastsib: "dynatree-lastsib"
        },
        debugLevel: 1,
        lastentry: undefined
    };
    if (parseFloat(a.ui.version) < 1.8) a.ui.dynatree.defaults = a.ui.dynatree.prototype.options;
    a.ui.dynatree.nodedatadefaults = {
        title: null,
        key: null,
        isFolder: false,
        isLazy: false,
        tooltip: null,
        icon: null,
        addClass: null,
        noLink: false,
        activate: false,
        focus: false,
        expand: false,
        select: false,
        hideCheckbox: false,
        unselectable: false,
        children: null,
        lastentry: undefined
    };
    var l = false,
        o = function () {
            if (!l) {
                a.ui.plugin.add("draggable", "connectToDynatree", {
                    start: function (n, q) {
                        var u = a(this).data("draggable"),
                            v = q.helper.data("dtSourceNode") || null;
                        logMsg("draggable-connectToDynatree.start, %s", v);
                        logMsg("    this: %o", this);
                        logMsg("    event: %o", n);
                        logMsg("    draggable: %o", u);
                        logMsg("    ui: %o", q);
                        if (v) {
                            u.offset.click.top = -2;
                            u.offset.click.left = +16;
                            return v.tree._onDragEvent("start", v, null, n, q, u)
                        }
                    },
                    drag: function (n, q) {
                        var u = a(this).data("draggable"),
                            v = q.helper.data("dtSourceNode") || null,
                            x = q.helper.data("dtTargetNode") || null,
                            z = e(n.target);
                        if (n.target && !z)
                            if (a(n.target).closest("div.dynatree-drag-helper,#dynatree-drop-marker").length >
                                0) {
                                logMsg("Drag event over helper: ignored.");
                                return
                            }
                        q.helper.data("dtTargetNode", z);
                        x && x !== z && x.tree._onDragEvent("leave", x, v, n, q, u);
                        if (z)
                            if (z.tree.options.dnd.onDrop) z === x ? z.tree._onDragEvent("over", z, v, n, q, u) : z.tree._onDragEvent("enter", z, v, n, q, u)
                    },
                    stop: function (n, q) {
                        var u = a(this).data("draggable"),
                            v = q.helper.data("dtSourceNode") || null,
                            x = q.helper.data("dtTargetNode") || null;
                        logMsg("draggable-connectToDynatree.stop: targetNode(from event): %s, dtTargetNode: %s", x, q.helper.data("dtTargetNode"));
                        logMsg("draggable-connectToDynatree.stop, %s",
                            v);
                        var z = n.type;
                        logMsg("    type: %o, downEvent: %o, upEvent: %o", z, u._mouseDownEvent, n);
                        logMsg("    targetNode: %o", x);
                        (z = z == "mouseup" && n.which == 1) || logMsg("Drag was cancelled");
                        if (x) {
                            z && x.tree._onDragEvent("drop", x, v, n, q, u);
                            x.tree._onDragEvent("leave", x, v, n, q, u)
                        }
                        v && v.tree._onDragEvent("stop", v, null, n, q, u)
                    }
                });
                l = true
            }
        }
})(jQuery);
(function (a) {
    a.fn.konami = function (e, f) {
        f = a.extend({}, a.fn.konami.params, f);
        this.each(function () {
            var j = a(this),
                g = "kcfn:" + f.code.join(",");
            a.data(this, g, e);
            j.unbind("konami.autokonami").bind("konami.autokonami", function (c, b) {
                var l = "kcfn:" + b.code.join(",");
                func = a.data(this, l);
                typeof func == "function" && func()
            }).bind("keyup", function (c) {
                a.fn.konami.checkCode(c, f, j)
            })
        });
        return this
    };
    a.fn.konami.params = {
        code: [38, 38, 40, 40, 37, 39, 37, 39, 66, 65],
        step: 0
    };
    a.fn.konami.checkCode = function (e, f, j) {
        if (e.keyCode == f.code[f.step]) f.step++;
        else f.step = 0; if (f.step == f.code.length) {
            j.trigger("konami", {
                code: f.code
            });
            f.step = 0
        }
    }
})(jQuery);
(function (a) {
    var e = (a.browser.msie ? "paste" : "input") + ".mask",
        f = window.orientation != undefined;
    a.mask = {
        definitions: {
            "9": "[0-9]",
            a: "[A-Za-z]",
            "*": "[A-Za-z0-9]"
        }
    };
    a.fn.extend({
        caret: function (j, g) {
            if (this.length != 0)
                if (typeof j == "number") {
                    g = typeof g == "number" ? g : j;
                    return this.each(function () {
                        if (this.setSelectionRange) {
                            this.focus();
                            this.setSelectionRange(j, g)
                        } else if (this.createTextRange) {
                            var b = this.createTextRange();
                            b.collapse(true);
                            b.moveEnd("character", g);
                            b.moveStart("character", j);
                            b.select()
                        }
                    })
                } else {
                    if (this[0].setSelectionRange) {
                        j =
                            this[0].selectionStart;
                        g = this[0].selectionEnd
                    } else if (document.selection && document.selection.createRange) {
                        var c = document.selection.createRange();
                        j = 0 - c.duplicate().moveStart("character", -1E5);
                        g = j + c.text.length
                    }
                    return {
                        begin: j,
                        end: g
                    }
                }
        },
        unmask: function () {
            return this.trigger("unmask")
        },
        mask: function (j, g) {
            if (!j && this.length > 0) {
                var c = a(this[0]),
                    b = c.data("tests");
                return a.map(c.data("buffer"), function (u, v) {
                    return b[v] ? u : null
                }).join("")
            }
            g = a.extend({
                placeholder: "_",
                completed: null
            }, g);
            var l = a.mask.definitions;
            b = [];
            var o = j.length,
                n = null,
                q = j.length;
            a.each(j.split(""), function (u, v) {
                if (v == "?") {
                    q--;
                    o = u
                } else if (l[v]) {
                    b.push(RegExp(l[v]));
                    if (n == null) n = b.length - 1
                } else b.push(null)
            });
            return this.each(function () {
                function u(M) {
                    for (; ++M <= q && !b[M];);
                    return M
                }

                function v(M) {
                    var R = a(this).caret();
                    M = M.keyCode;
                    J = M < 16 || M > 16 && M < 32 || M > 32 && M < 41;
                    if (R.begin - R.end != 0 && (!J || M == 8 || M == 46)) z(R.begin, R.end);
                    if (M == 8 || M == 46 || f && M == 127) {
                        for (R = R.begin + (M == 46 ? 0 : -1); !b[R] && --R >= 0;);
                        for (M = R; M < q; M++)
                            if (b[M]) {
                                G[M] = g.placeholder;
                                var O = u(M);
                                if (O < q && b[M].test(G[O])) G[M] = G[O];
                                else break
                            }
                        B();
                        w.caret(Math.max(n, R));
                        return false
                    } else if (M == 27) {
                        w.val(E);
                        w.caret(0, C());
                        return false
                    }
                }

                function x(M) {
                    if (J) {
                        J = false;
                        return M.keyCode == 8 ? false : null
                    }
                    M = M || window.event;
                    var R = M.charCode || M.keyCode || M.which,
                        O = a(this).caret();
                    if (M.ctrlKey || M.altKey || M.metaKey) return true;
                    else if (R >= 32 && R <= 125 || R > 186) {
                        M = u(O.begin - 1);
                        if (M < q) {
                            R = String.fromCharCode(R);
                            if (b[M].test(R)) {
                                O = M;
                                for (var Y = g.placeholder; O < q; O++)
                                    if (b[O]) {
                                        var na = u(O),
                                            qa = G[O];
                                        G[O] = Y;
                                        if (na < q && b[na].test(qa)) Y =
                                            qa;
                                        else break
                                    }
                                G[M] = R;
                                B();
                                M = u(M);
                                a(this).caret(M);
                                g.completed && M == q && g.completed.call(w)
                            }
                        }
                    }
                    return false
                }

                function z(M, R) {
                    for (var O = M; O < R && O < q; O++)
                        if (b[O]) G[O] = g.placeholder
                }

                function B() {
                    return w.val(G.join("")).val()
                }

                function C(M) {
                    for (var R = w.val(), O = -1, Y = 0, na = 0; Y < q; Y++)
                        if (b[Y]) {
                            for (G[Y] = g.placeholder; na++ < R.length;) {
                                var qa = R.charAt(na - 1);
                                if (b[Y].test(qa)) {
                                    G[Y] = qa;
                                    O = Y;
                                    break
                                }
                            }
                            if (na > R.length) break
                        } else if (G[Y] == R[na] && Y != o) {
                        na++;
                        O = Y
                    }
                    if (!M && O + 1 < o) {
                        w.val("");
                        z(0, q)
                    } else if (M || O + 1 >= o) {
                        B();
                        M || w.val(w.val().substring(0,
                            O + 1))
                    }
                    return o ? Y : n
                }
                var w = a(this),
                    G = a.map(j.split(""), function (M) {
                        if (M != "?") return l[M] ? g.placeholder : M
                    }),
                    J = false,
                    E = w.val();
                w.data("buffer", G).data("tests", b);
                w.attr("readonly") || w.one("unmask", function () {
                    w.unbind(".mask").removeData("buffer").removeData("tests")
                }).bind("focus.mask", function () {
                    E = w.val();
                    var M = C();
                    B();
                    setTimeout(function () {
                        M == j.length ? w.caret(0, M) : w.caret(M)
                    }, 0)
                }).bind("blur.mask", function () {
                    C();
                    w.val() != E && w.change()
                }).bind("keydown.mask", v).bind("keypress.mask", x).bind(e, function () {
                    setTimeout(function () {
                            w.caret(C(true))
                        },
                        0)
                });
                C()
            })
        }
    })
})(jQuery);
$.fn.bar = function (a) {
    var e = $.extend(true, {
        direction: "horizontal",
        attach: "left",
        bars: 1,
        style: "background-color: #000;",
        animate: 300,
        halt: false,
        value: [0]
    }, a);
    return this.each(function () {
        this.barOpts = $.extend(true, {}, e);
        var f = $(this).css("z-index");
        f = (isNaN(f) ? 1 : f) + this.barOpts.bars;
        $(this).css({
            overflow: "hidden"
        });
        this.barOpts.direction != "horizontal" && $(this).css("position").search(/(absolute|relative|fixed)/i) < 0 && $(this).css("position", "relative").addClass("vertical");
        for (var j = 0; j < this.barOpts.bars; j++) {
            var g =
                typeof this.barOpts.style != "string" ? this.barOpts.style[j] : this.barOpts.style;
            $(this).append('<div class="interBar ' + this.barOpts.direction + '" style="' + g + '"></div>');
            this.barOpts.direction != "horizontal" && $(this).find(".interBar:last").css({
                "z-index": f--,
                height: 0
            })
        }
    })
};
$.fn.getBarOpts = function (a) {
    return a ? this[0].barOpts[a] : this[0].barOpts
};
$.fn.setBarOpts = function (a) {
    return this.each(function () {
        this.barOpts = $.extend(true, this.barOpts, a);
        if (a.style) {
            $(this).stop();
            $(this).find(".interBar").attr("style", this.barOpts.style)
        }
    })
};
$.fn.setBar = function (a, e) {
    e = e || 0;
    a = isNaN(a) ? 0 : a || 0;
    if (a < 0) a = 0;
    return this.each(function () {
        if (this.barOpts && !this.barOpts.halt) {
            if (this.barOpts.value && this.barOpts.value.length) this.barOpts.value[e] = a;
            else this.barOpts.value = [a]; if (this.barOpts.direction == "horizontal") {
                var f = {
                    width: a * 100 + "%"
                };
                this.barOpts.isResize && this.barOpts.animate ? $(this).find(".interBar").eq(e).animate(f, typeof this.barOpts.animate == "boolean" ? "normal" : this.barOpts.animate) : $(this).find(".interBar").eq(e).css(f);
                this.barOpts.isResize =
                    true
            } else if (this.barOpts.bars == 1) {
                f = {
                    height: a * 100 + "%"
                };
                this.barOpts.animate ? $(this).find(".interBar").eq(e).animate(f, typeof this.barOpts.animate == "boolean" ? "normal" : this.barOpts.animate) : $(this).find(".interBar").eq(e).css(f)
            } else {
                this.barOpts.value[e] = a;
                for (var j = 0, g = 0; g < this.barOpts.bars; g++) {
                    j += this.barOpts.value[g] || 0;
                    f = {
                        height: j * 100 + "%"
                    };
                    this.barOpts.animate ? $(this).find(".interBar").eq(g).animate(f, typeof this.barOpts.animate == "boolean" ? "normal" : this.barOpts.animate) : $(this).find(".interBar").eq(g).css(f)
                }
            }
        }
    })
};
$(document).ready(function () {
    $.browser.mozilla && parseFloat($.browser.version) < 1.9 && $("body").addClass("ff2")
});
$.fn.dropdown = function (a) {
    if (typeof a != "object") a = {};
    if (!a.header) a.header = "selected";
    this.each(function () {
        if ($(this).is("ul") && !$(this).is(".dropdownUL")) {
            $(this).addClass("dropdownUL").wrap('<div class="dropdown"' + ($.browser.msie ? ' style="display: inline;"' : "") + '><div class="dropdownWrap"></div></div>');
            $(this).prepend('<li class="ddSpecial dropdownCap NE"></li><li class="ddSpecial dropdownCap SE"></li><li class="ddSpecial dropdownCap SW"></li>');
            $(this).find(".active")[0] || $(this).find("li:not(.ddSpecial):eq(0)").addClass("active");
            switch (a.header) {
            case "first":
                $(this).find("li:not(.ddSpecial)").eq(0).removeClass("active").addClass("activeDuplicate");
                break;
            case "firstcopy":
                $(this).find("li:not(.ddSpecial)").eq(0).clone().prependTo($(this)).removeClass("active").addClass("activeDuplicate");
                break;
            default:
                $(this).find(".active").eq(0).clone().prependTo($(this)).removeClass("active").addClass("activeDuplicate")
            }
            $(this).bind("click", function () {
                var e = $(this);
                $(this).find("li:not(.ddSpecial)").length == 2 && a.noExpandSingle ? e.trigger("select", {
                    target: $(this).find("li:not(.ddSpecial)").eq(0)
                }) : e.addClass("hovered")
            });
            $(this).bind("mouseleave", function () {
                clearTimeout(this.hoverTO);
                var e = $(this);
                this.hoverTO = setTimeout(function () {
                    e.removeClass("hovered")
                }, 200)
            });
            $(this).find("li:not(.ddSpecial)").click(function (e) {
                if ($(this).parent().is(".hovered")) {
                    $(this).parents("ul").removeClass("hovered");
                    e.stopPropagation();
                    $(this).is(":not(.activeDuplicate)") && $(this).dropdownSelect()
                }
            });
            $.data(this, "ddOptions", a)
        }
    });
    return this
};
$.fn.dropdownSelect = function (a) {
    this.each(function () {
        var e = false,
            f = false;
        if (a && $(this).is("ul")) {
            f = $(this);
            e = $(this).find("li").not(".ddSpecial").not(".activeDuplicate").eq(a)
        } else if ($(this).is("li")) {
            f = $(this).parents("ul").eq(0);
            e = $(this)
        } else {
            e = $(this).parents("li").eq(0);
            f = e.parents("ul").eq(0);
            if (!e[0]) return this
        } if (e) {
            ddOptions = $.data($(f)[0], "ddOptions");
            e.siblings("li").removeClass("active");
            e.addClass("active");
            switch (ddOptions.header) {
            case "first":
                break;
            case "firstcopy":
                break;
            default:
                e.siblings("li.activeDuplicate").remove();
                e.clone(true).removeClass("active").addClass("activeDuplicate").prependTo(e.parent())
            }
            e.trigger("select", {
                target: e
            })
        }
    });
    return this
};
(function (a) {
    var e = function (j) {
        var g = 0;
        j = a(j).get(0);
        if (document.selection) {
            j.focus();
            g = document.selection.createRange();
            var c = document.selection.createRange().text.length;
            g.moveStart("character", -j.value.length);
            g = g.text.length - c
        } else if (j.selectionStart || j.selectionStart == "0") g = j.selectionStart;
        return g
    }, f = function (j) {
            var g = null,
                c = a("#" + j);
            j = a("input[name=" + j + "]");
            if (c.length) g = c;
            else if (j != undefined) g = j;
            return g
        };
    a.fn.autotab_magic = function (j) {
        for (var g = 0; g < this.length; g++) {
            var c = g + 1,
                b = g - 1;
            if (g >
                0 && c < this.length) a(this[g]).autotab({
                target: a(this[c]),
                previous: a(this[b])
            });
            else g > 0 ? a(this[g]).autotab({
                previous: a(this[b])
            }) : a(this[g]).autotab({
                target: a(this[c])
            }); if (j != null && isNaN(j) && j == a(this[g]).attr("id") || !isNaN(j) && j == g) a(this[g]).focus()
        }
        return this
    };
    a.fn.autotab_filter = function (j) {
        var g = {
            format: "all",
            uppercase: false,
            lowercase: false,
            nospace: false,
            pattern: null
        };
        if (typeof j == "string" || typeof j == "function") g.format = j;
        else a.extend(g, j);
        for (j = 0; j < this.length; j++) a(this[j]).bind("keyup", function () {
            var c =
                this.value;
            switch (g.format) {
            case "text":
                var b = RegExp("[0-9]+", "g");
                c = c.replace(b, "");
                break;
            case "alpha":
                b = RegExp("[^a-zA-Z]+", "g");
                c = c.replace(b, "");
                break;
            case "number":
            case "numeric":
                b = RegExp("[^0-9]+", "g");
                c = c.replace(b, "");
                break;
            case "alphanumeric":
                b = RegExp("[^0-9a-zA-Z]+", "g");
                c = c.replace(b, "");
                break;
            case "custom":
                b = RegExp(g.pattern, "g");
                c = c.replace(b, "");
                break;
            default:
                if (typeof g.format == "function") c = g.format(c)
            }
            if (g.nospace) {
                b = RegExp("[ ]+", "g");
                c = c.replace(b, "")
            }
            if (g.uppercase) c = c.toUpperCase();
            if (g.lowercase) c = c.toLowerCase();
            if (c != this.value) this.value = c
        })
    };
    a.fn.autotab = function (j) {
        var g = {
            format: "all",
            maxlength: 2147483647,
            uppercase: false,
            lowercase: false,
            nospace: false,
            target: null,
            previous: null,
            pattern: null
        };
        a.extend(g, j);
        if (typeof g.target == "string") g.target = f(g.target);
        if (typeof g.previous == "string") g.previous = f(g.previous);
        j = a(this).attr("maxlength");
        if (g.maxlength == 2147483647 && j != 2147483647) g.maxlength = j;
        else if (g.maxlength > 0) a(this).attr("maxlength", g.maxlength);
        else g.target = null;
        g.format != "all" && a(this).autotab_filter(g);
        return a(this).bind("keydown", function (c) {
            if (c.which == 8 && this.value.length == 0 && g.previous) setTimeout(function () {
                g.previous.focus().val(g.previous.val())
            }, 10);
            else if (c.which == 37 && e(this) == 0 && g.previous) setTimeout(function () {
                g.previous.focus().val(g.previous.val())
            }, 10);
            else c.which == 39 && e(this) == this.value.length && g.target && setTimeout(function () {
                g.target.focus()
            }, 10)
        }).bind("keyup", function (c) {
            var b = [8, 9, 16, 17, 18, 19, 20, 27, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 144,
                145
            ];
            if (c.which != 8) {
                var l = a(this).val();
                a.inArray(c.which, b) == -1 && l.length == g.maxlength && g.target && g.target.focus()
            }
        })
    }
})(jQuery);
(function (a, e) {
    "function" === typeof define && define.amd ? define(["jquery"], e) : a.jQuery ? e(a.jQuery) : e(a.Zepto)
})(this, function (a, e) {
    a.fn.jPlayer = function (b) {
        var l = "string" === typeof b,
            o = Array.prototype.slice.call(arguments, 1),
            n = this;
        b = !l && o.length ? a.extend.apply(null, [true, b].concat(o)) : b;
        if (l && "_" === b.charAt(0)) return n;
        l ? this.each(function () {
            var q = a(this).data("jPlayer"),
                u = q && a.isFunction(q[b]) ? q[b].apply(q, o) : q;
            if (u !== q && u !== e) return n = u, false
        }) : this.each(function () {
            var q = a(this).data("jPlayer");
            q ?
                q.option(b || {}) : a(this).data("jPlayer", new a.jPlayer(b, this))
        });
        return n
    };
    a.jPlayer = function (b, l) {
        if (arguments.length) {
            this.element = a(l);
            this.options = a.extend(true, {}, this.options, b);
            var o = this;
            this.element.bind("remove.jPlayer", function () {
                o.destroy()
            });
            this._init()
        }
    };
    "function" !== typeof a.fn.stop && (a.fn.stop = function () {});
    a.jPlayer.emulateMethods = "load play pause";
    a.jPlayer.emulateStatus = "src readyState networkState currentTime duration paused ended playbackRate";
    a.jPlayer.emulateOptions = "muted volume";
    a.jPlayer.reservedEvent = "ready flashreset resize repeat error warning";
    a.jPlayer.event = {};
    a.each("ready flashreset resize repeat click error warning loadstart progress suspend abort emptied stalled play pause loadedmetadata loadeddata waiting playing canplay canplaythrough seeking seeked timeupdate ended ratechange durationchange volumechange".split(" "), function () {
        a.jPlayer.event[this] = "jPlayer_" + this
    });
    a.jPlayer.htmlEvent = "loadstart abort emptied stalled loadedmetadata loadeddata canplay canplaythrough ratechange".split(" ");
    a.jPlayer.pause = function () {
        a.each(a.jPlayer.prototype.instances, function (b, l) {
            l.data("jPlayer").status.srcSet && l.jPlayer("pause")
        })
    };
    a.jPlayer.timeFormat = {
        showHour: false,
        showMin: true,
        showSec: true,
        padHour: false,
        padMin: true,
        padSec: true,
        sepHour: ":",
        sepMin: ":",
        sepSec: ""
    };
    var f = function () {
        this.init()
    };
    f.prototype = {
        init: function () {
            this.options = {
                timeFormat: a.jPlayer.timeFormat
            }
        },
        time: function (b) {
            var l = new Date(1E3 * (b && "number" === typeof b ? b : 0)),
                o = l.getUTCHours();
            b = this.options.timeFormat.showHour ? l.getUTCMinutes() :
                l.getUTCMinutes() + 60 * o;
            l = this.options.timeFormat.showMin ? l.getUTCSeconds() : l.getUTCSeconds() + 60 * b;
            o = this.options.timeFormat.padHour && 10 > o ? "0" + o : o;
            b = this.options.timeFormat.padMin && 10 > b ? "0" + b : b;
            l = this.options.timeFormat.padSec && 10 > l ? "0" + l : l;
            o = "" + (this.options.timeFormat.showHour ? o + this.options.timeFormat.sepHour : "");
            o += this.options.timeFormat.showMin ? b + this.options.timeFormat.sepMin : "";
            return o + (this.options.timeFormat.showSec ? l + this.options.timeFormat.sepSec : "")
        }
    };
    var j = new f;
    a.jPlayer.convertTime =
        function (b) {
            return j.time(b)
    };
    a.jPlayer.uaBrowser = function (b) {
        b = b.toLowerCase();
        var l = /(opera)(?:.*version)?[ \/]([\w.]+)/,
            o = /(msie) ([\w.]+)/,
            n = /(mozilla)(?:.*? rv:([\w.]+))?/;
        b = /(webkit)[ \/]([\w.]+)/.exec(b) || l.exec(b) || o.exec(b) || 0 > b.indexOf("compatible") && n.exec(b) || [];
        return {
            browser: b[1] || "",
            version: b[2] || "0"
        }
    };
    a.jPlayer.uaPlatform = function (b) {
        var l = b.toLowerCase(),
            o = /(android)/,
            n = /(mobile)/;
        b = /(ipad|iphone|ipod|android|blackberry|playbook|windows ce|webos)/.exec(l) || [];
        l = /(ipad|playbook)/.exec(l) || !n.exec(l) && o.exec(l) || [];
        b[1] && (b[1] = b[1].replace(/\s/g, "_"));
        return {
            platform: b[1] || "",
            tablet: l[1] || ""
        }
    };
    a.jPlayer.browser = {};
    a.jPlayer.platform = {};
    var g = a.jPlayer.uaBrowser(navigator.userAgent);
    g.browser && (a.jPlayer.browser[g.browser] = true, a.jPlayer.browser.version = g.version);
    g = a.jPlayer.uaPlatform(navigator.userAgent);
    g.platform && (a.jPlayer.platform[g.platform] = true, a.jPlayer.platform.mobile = !g.tablet, a.jPlayer.platform.tablet = !! g.tablet);
    a.jPlayer.getDocMode = function () {
        var b;
        a.jPlayer.browser.msie &&
            (document.documentMode ? b = document.documentMode : (b = 5, document.compatMode && "CSS1Compat" === document.compatMode && (b = 7)));
        return b
    };
    a.jPlayer.browser.documentMode = a.jPlayer.getDocMode();
    a.jPlayer.nativeFeatures = {
        init: function () {
            var b = document,
                l = b.createElement("video"),
                o = {
                    w3c: "fullscreenEnabled fullscreenElement requestFullscreen exitFullscreen fullscreenchange fullscreenerror".split(" "),
                    moz: "mozFullScreenEnabled mozFullScreenElement mozRequestFullScreen mozCancelFullScreen mozfullscreenchange mozfullscreenerror".split(" "),
                    webkit: " webkitCurrentFullScreenElement webkitRequestFullScreen webkitCancelFullScreen webkitfullscreenchange ".split(" "),
                    webkitVideo: "webkitSupportsFullscreen webkitDisplayingFullscreen webkitEnterFullscreen webkitExitFullscreen  ".split(" ")
                }, n = ["w3c", "moz", "webkit", "webkitVideo"],
                q, u;
            this.fullscreen = l = {
                support: {
                    w3c: !! b[o.w3c[0]],
                    moz: !! b[o.moz[0]],
                    webkit: "function" === typeof b[o.webkit[3]],
                    webkitVideo: "function" === typeof l[o.webkitVideo[2]]
                },
                used: {}
            };
            q = 0;
            for (u = n.length; q < u; q++) {
                var v = n[q];
                if (l.support[v]) {
                    l.spec =
                        v;
                    l.used[v] = true;
                    break
                }
            }
            if (l.spec) {
                var x = o[l.spec];
                l.api = {
                    fullscreenEnabled: true,
                    fullscreenElement: function (z) {
                        z = z ? z : b;
                        return z[x[1]]
                    },
                    requestFullscreen: function (z) {
                        return z[x[2]]()
                    },
                    exitFullscreen: function (z) {
                        z = z ? z : b;
                        return z[x[3]]()
                    }
                };
                l.event = {
                    fullscreenchange: x[4],
                    fullscreenerror: x[5]
                }
            } else {
                l.api = {
                    fullscreenEnabled: false,
                    fullscreenElement: function () {
                        return null
                    },
        return j.time(b)
    };
    a.jPlayer.uaBrowser = function (b) {
        b = b.toLowerCase();
        var l = /(opera)(?:.*version)?[ \/]([\w.]+)/,
            o = /(msie) ([\w.]+)/,
            n = /(mozilla)(?:.*? rv:([\w.]+))?/;
        b = /(webkit)[ \/]([\w.]+)/.exec(b) || l.exec(b) || o.exec(b) || 0 > b.indexOf("compatible") && n.exec(b) || [];
        return {
            browser: b[1] || "",
            version: b[2] || "0"
        }
    };
    a.jPlayer.uaPlatform = function (b) {
        var l = b.toLowerCase(),
            o = /(android)/,
            n = /(mobile)/;
        b = /(ipad|iphone|ipod|android|blackberry|playbook|windows ce|webos)/.exec(l) || [];
        l = /(ipad|playbook)/.exec(l) || !n.exec(l) && o.exec(l) || [];
        b[1] && (b[1] = b[1].replace(/\s/g, "_"));
        return {
            platform: b[1] || "",
            tablet: l[1] || ""
        }
    };
    a.jPlayer.browser = {};
    a.jPlayer.platform = {};
    var g = a.jPlayer.uaBrowser(navigator.userAgent);
    g.browser && (a.jPlayer.browser[g.browser] = true, a.jPlayer.browser.version = g.version);
    g = a.jPlayer.uaPlatform(navigator.userAgent);
    g.platform && (a.jPlayer.platform[g.platform] = true, a.jPlayer.platform.mobile = !g.tablet, a.jPlayer.platform.tablet = !! g.tablet);
    a.jPlayer.getDocMode = function () {
        var b;
        a.jPlayer.browser.msie &&
            (document.documentMode ? b = document.documentMode : (b = 5, document.compatMode && "CSS1Compat" === document.compatMode && (b = 7)));
        return b
    };
    a.jPlayer.browser.documentMode = a.jPlayer.getDocMode();
    a.jPlayer.nativeFeatures = {
        init: function () {
            var b = document,
                l = b.createElement("video"),
                o = {
                    w3c: "fullscreenEnabled fullscreenElement requestFullscreen exitFullscreen fullscreenchange fullscreenerror".split(" "),
                    moz: "mozFullScreenEnabled mozFullScreenElement mozRequestFullScreen mozCancelFullScreen mozfullscreenchange mozfullscreenerror".split(" "),
                    webkit: " webkitCurrentFullScreenElement webkitRequestFullScreen webkitCancelFullScreen webkitfullscreenchange ".split(" "),
                    webkitVideo: "webkitSupportsFullscreen webkitDisplayingFullscreen webkitEnterFullscreen webkitExitFullscreen  ".split(" ")
                }, n = ["w3c", "moz", "webkit", "webkitVideo"],
                q, u;
            this.fullscreen = l = {
                support: {
                    w3c: !! b[o.w3c[0]],
                    moz: !! b[o.moz[0]],
                    webkit: "function" === typeof b[o.webkit[3]],
                    webkitVideo: "function" === typeof l[o.webkitVideo[2]]
                },
                used: {}
            };
            q = 0;
            for (u = n.length; q < u; q++) {
                var v = n[q];
                if (l.support[v]) {
                    l.spec =
                        v;
                    l.used[v] = true;
                    break
                }
            }
            if (l.spec) {
                var x = o[l.spec];
                l.api = {
                    fullscreenEnabled: true,
                    fullscreenElement: function (z) {
                        z = z ? z : b;
                        return z[x[1]]
                    },
                    requestFullscreen: function (z) {
                        return z[x[2]]()
                    },
                    exitFullscreen: function (z) {
                        z = z ? z : b;
                        return z[x[3]]()
                    }
                };
                l.event = {
                    fullscreenchange: x[4],
                    fullscreenerror: x[5]
                }
            } else {
                l.api = {
                    fullscreenEnabled: false,
                    fullscreenElement: function () {
                        return null
                    },
                    requestFullscreen: function () {},
                    exitFullscreen: function () {}
                };
                l.event = {}
            }
        }
    };
    a.jPlayer.nativeFeatures.init();
    a.jPlayer.focus = null;
    a.jPlayer.keyIgnoreElementNames =
        "INPUT TEXTAREA";
    var c = function (b) {
        var l = a.jPlayer.focus,
            o;
        l && (a.each(a.jPlayer.keyIgnoreElementNames.split(/\s+/g), function (n, q) {
            if (b.target.nodeName.toUpperCase() === q.toUpperCase()) return o = true, false
        }), o || a.each(l.options.keyBindings, function (n, q) {
            if (q && b.which === q.key && a.isFunction(q.fn)) return b.preventDefault(), q.fn(l), false
        }))
    };
    a.jPlayer.keys = function (b) {
        a(document.documentElement).unbind("keydown.jPlayer");
        b && a(document.documentElement).bind("keydown.jPlayer", c)
    };
    a.jPlayer.keys(true);
    a.jPlayer.prototype = {
        count: 0,
        version: {
            script: "2.4.0",
            needFlash: "2.4.0",
            flash: "unknown"
        },
        options: {
            swfPath: "js",
            solution: "html, flash",
            supplied: "mp3",
            preload: "metadata",
            volume: 0.8,
            muted: false,
            wmode: "opaque",
            backgroundColor: "#000000",
            cssSelectorAncestor: "#jp_container_1",
            cssSelector: {
                videoPlay: ".jp-video-play",
                play: ".jp-play",
                pause: ".jp-pause",
                stop: ".jp-stop",
                seekBar: ".jp-seek-bar",
                playBar: ".jp-play-bar",
                mute: ".jp-mute",
                unmute: ".jp-unmute",
                volumeBar: ".jp-volume-bar",
                volumeBarValue: ".jp-volume-bar-value",
                volumeMax: ".jp-volume-max",
                currentTime: ".jp-current-time",
                duration: ".jp-duration",
                fullScreen: ".jp-full-screen",
                restoreScreen: ".jp-restore-screen",
                repeat: ".jp-repeat",
                repeatOff: ".jp-repeat-off",
                gui: ".jp-gui",
                noSolution: ".jp-no-solution"
            },
            smoothPlayBar: false,
            fullScreen: false,
            fullWindow: false,
            autohide: {
                restored: false,
                full: true,
                fadeIn: 200,
                fadeOut: 600,
                hold: 1E3
            },
            loop: false,
            repeat: function (b) {
                b.jPlayer.options.loop ? a(this).unbind(".jPlayerRepeat").bind(a.jPlayer.event.ended + ".jPlayer.jPlayerRepeat", function () {
                    a(this).jPlayer("play")
                }) :
                    a(this).unbind(".jPlayerRepeat")
            },
            nativeVideoControls: {},
            noFullWindow: {
                msie: /msie [0-6]\./,
                ipad: /ipad.*?os [0-4]\./,
                iphone: /iphone/,
                ipod: /ipod/,
                android_pad: /android [0-3]\.(?!.*?mobile)/,
                android_phone: /android.*?mobile/,
                blackberry: /blackberry/,
                windows_ce: /windows ce/,
                iemobile: /iemobile/,
                webos: /webos/
            },
            noVolume: {
                ipad: /ipad/,
                iphone: /iphone/,
                ipod: /ipod/,
                android_pad: /android(?!.*?mobile)/,
                android_phone: /android.*?mobile/,
                blackberry: /blackberry/,
                windows_ce: /windows ce/,
                iemobile: /iemobile/,
                webos: /webos/,
                playbook: /playbook/
            },
            timeFormat: {},
            keyEnabled: false,
            audioFullScreen: false,
            keyBindings: {
                play: {
                    key: 32,
                    fn: function (b) {
                        b.status.paused ? b.play() : b.pause()
                    }
                },
                fullScreen: {
                    key: 13,
                    fn: function (b) {
                        (b.status.video || b.options.audioFullScreen) && b._setOption("fullScreen", !b.options.fullScreen)
                    }
                },
                muted: {
                    key: 8,
                    fn: function (b) {
                        b._muted(!b.options.muted)
                    }
                },
                volumeUp: {
                    key: 38,
                    fn: function (b) {
                        b.volume(b.options.volume + 0.1)
                    }
                },
                volumeDown: {
                    key: 40,
                    fn: function (b) {
                        b.volume(b.options.volume - 0.1)
                    }
                }
            },
            verticalVolume: false,
            idPrefix: "jp",
            noConflict: "jQuery",
            emulateHtml: false,
            errorAlerts: false,
            warningAlerts: false
        },
        optionsAudio: {
            size: {
                width: "0px",
                height: "0px",
                cssClass: ""
            },
            sizeFull: {
                width: "0px",
                height: "0px",
                cssClass: ""
            }
        },
        optionsVideo: {
            size: {
                width: "480px",
                height: "270px",
                cssClass: "jp-video-270p"
            },
            sizeFull: {
                width: "100%",
                height: "100%",
                cssClass: "jp-video-full"
            }
        },
        instances: {},
        status: {
            src: "",
            media: {},
            paused: true,
            format: {},
            formatType: "",
            waitForPlay: true,
            waitForLoad: true,
            srcSet: false,
            video: false,
            seekPercent: 0,
            currentPercentRelative: 0,
            currentPercentAbsolute: 0,
            currentTime: 0,
            duration: 0,
            videoWidth: 0,
            videoHeight: 0,
            readyState: 0,
            networkState: 0,
            playbackRate: 1,
            ended: 0
        },
        internal: {
            ready: false
        },
        solution: {
            html: true,
            flash: true
        },
        format: {
            mp3: {
                codec: 'audio/mpeg; codecs="mp3"',
                flashCanPlay: true,
                media: "audio"
            },
            m4a: {
                codec: 'audio/mp4; codecs="mp4a.40.2"',
                flashCanPlay: true,
                media: "audio"
            },
            oga: {
                codec: 'audio/ogg; codecs="vorbis"',
                flashCanPlay: false,
                media: "audio"
            },
            wav: {
                codec: 'audio/wav; codecs="1"',
                flashCanPlay: false,
                media: "audio"
            },
            webma: {
                codec: 'audio/webm; codecs="vorbis"',
                flashCanPlay: false,
                media: "audio"
            },
            fla: {
                codec: "audio/x-flv",
                flashCanPlay: true,
                media: "audio"
            },
            rtmpa: {
                codec: 'audio/rtmp; codecs="rtmp"',
                flashCanPlay: true,
                media: "audio"
            },
            m4v: {
                codec: 'video/mp4; codecs="avc1.42E01E, mp4a.40.2"',
                flashCanPlay: true,
                media: "video"
            },
            ogv: {
                codec: 'video/ogg; codecs="theora, vorbis"',
                flashCanPlay: false,
                media: "video"
          eo ? a.extend(true, {}, this.optionsVideo, this.options) : a.extend(true, {}, this.optionsAudio, this.options);
            this._setSize();
            this.status.nativeVideoControls = this._uaBlocklist(this.options.nativeVideoControls);
            this.status.noFullWindow = this._uaBlocklist(this.options.noFullWindow);
            this.status.noVolume = this._uaBlocklist(this.options.noVolume);
            a.jPlayer.nativeFeatures.fullscreen.api.fullscreenEnabled &&
                this._fullscreenAddEventListeners();
            this._restrictNativeVideoControls();
            this.htmlElement.poster = document.createElement("img");
            this.htmlElement.poster.id = this.internal.poster.id;
            this.htmlElement.poster.onload = function () {
                (!b.status.video || b.status.waitForPlay) && b.internal.poster.jq.show()
            };
            this.element.append(this.htmlElement.poster);
            this.internal.poster.jq = a("#" + this.internal.poster.id);
            this.internal.poster.jq.css({
                width: this.status.width,
                height: this.status.height
            });
            this.internal.poster.jq.hide();
            this.internal.poster.jq.bind("click.jPlayer", function () {
                b._trigger(a.jPlayer.event.click)
            });
            this.html.audio.available = false;
            this.require.audio && (this.htmlElement.audio = document.createElement("audio"), this.htmlElement.audio.id = this.internal.audio.id, this.html.audio.available = !! this.htmlElement.audio.canPlayType && this._testCanPlayType(this.htmlElement.audio));
            this.html.video.available = false;
            this.require.video && (this.htmlElement.video = document.createElement("video"), this.htmlElement.video.id = this.internal.video.id,
                this.html.video.available = !! this.htmlElement.video.canPlayType && this._testCanPlayType(this.htmlElement.video));
            this.flash.available = this._checkForFlash(10.1);
            this.html.canPlay = {};
            this.flash.canPlay = {};
            a.each(this.formats, function (q, u) {
                b.html.canPlay[u] = b.html[b.format[u].media].available && "" !== b.htmlElement[b.format[u].media].canPlayType(b.format[u].codec);
                b.flash.canPlay[u] = b.format[u].flashCanPlay && b.flash.available
            });
            this.html.desired = false;
            this.flash.desired = false;
            a.each(this.solutions, function (q,
                u) {
                if (0 === q) b[u].desired = true;
                else {
                    var v = false,
                        x = false;
                    a.each(b.formats, function (z, B) {
                        b[b.solutions[0]].canPlay[B] && ("video" === b.format[B].media ? x = true : v = true)
                    });
                    b[u].desired = b.require.audio && !v || b.require.video && !x
                }
            });
            this.html.support = {};
            this.flash.support = {};
            a.each(this.formats, function (q, u) {
                b.html.support[u] = b.html.canPlay[u] && b.html.desired;
                b.flash.support[u] = b.flash.canPlay[u] && b.flash.desired
            });
            this.html.used = false;
            this.flash.used = false;
            a.each(this.solutions, function (q, u) {
                a.each(b.formats,
                    function (v, x) {
                        if (b[u].support[x]) return b[u].used = true, false
                    })
            });
            this._resetActive();
            this._resetGate();
            this._cssSelectorAncestor(this.options.cssSelectorAncestor);
            !this.html.used && !this.flash.used ? (this._error({
                type: a.jPlayer.error.NO_SOLUTION,
                context: "{solution:'" + this.options.solution + "', supplied:'" + this.options.supplied + "'}",
                message: a.jPlayer.errorMsg.NO_SOLUTION,
                hint: a.jPlayer.errorHint.NO_SOLUTION
            }), this.css.jq.noSolution.length && this.css.jq.noSolution.show()) : this.css.jq.noSolution.length &&
                this.css.jq.noSolution.hide();
            if (this.flash.used) {
                var l, o = "jQuery=" + encodeURI(this.options.noConflict) + "&id=" + encodeURI(this.internal.self.id) + "&vol=" + this.options.volume + "&muted=" + this.options.muted;
                if (a.jPlayer.browser.msie && (9 > Number(a.jPlayer.browser.version) || 9 > a.jPlayer.browser.documentMode)) {
                    o = ['<param name="movie" value="' + this.internal.flash.swf + '" />', '<param name="FlashVars" value="' + o + '" />', '<param name="allowScriptAccess" value="always" />', '<param name="bgcolor" value="' + this.options.backgroundColor +
                        '" />', '<param name="wmode" value="' + this.options.wmode + '" />'
                    ];
                    l = document.createElement('<object id="' + this.internal.flash.id + '" classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="0" height="0" tabindex="-1"></object>');
                    for (var n = 0; n < o.length; n++) l.appendChild(document.createElement(o[n]))
                } else {
                    n = function (q, u, v) {
                        var x = document.createElement("param");
                        x.setAttribute("name", u);
                        x.setAttribute("value", v);
                        q.appendChild(x)
                    };
                    l = document.createElement("object");
                    l.setAttribute("id", this.internal.flash.id);
                    l.setAttribute("name", this.internal.flash.id);
                    l.setAttribute("data", this.internal.flash.swf);
                    l.setAttribute("type", "application/x-shockwave-flash");
                    l.setAttribute("width", "1");
                    l.setAttribute("height", "1");
                    l.setAttribute("tabindex", "-1");
                    n(l, "flashvars", o);
                    n(l, "allowscriptaccess", "always");
                    n(l, "bgcolor", this.options.backgroundColor);
                    n(l, "wmode", this.options.wmode)
                }
                this.element.append(l);
                this.internal.flash.jq = a(l)
            }
            this.html.used && (this.html.audio.available && (this._addHtmlEventListeners(this.htmlElement.audio,
                this.html.audio), this.element.append(this.htmlElement.audio), this.internal.audio.jq = a("#" + this.internal.audio.id)), this.html.video.available && (this._addHtmlEventListeners(this.htmlElement.video, this.html.video), this.element.append(this.htmlElement.video), this.internal.video.jq = a("#" + this.internal.video.id), this.status.nativeVideoControls ? this.internal.video.jq.css({
                width: this.status.width,
                height: this.status.height
            }) : this.internal.video.jq.css({
                width: "0px",
                height: "0px"
            }), this.internal.video.jq.bind("click.jPlayer",
                function () {
                    b._trigger(a.jPlayer.event.click)
                })));
            this.options.emulateHtml && this._emulateHtmlBridge();
            this.html.used && !this.flash.used && setTimeout(function () {
                b.internal.ready = true;
                b.version.flash = "n/a";
                b._trigger(a.jPlayer.event.repeat);
                b._trigger(a.jPlayer.event.ready)
            }, 100);
            this._updateNativeVideoControls();
            this.css.jq.videoPlay.length && this.css.jq.videoPlay.hide();
            a.jPlayer.prototype.count++
        },
        destroy: function () {
            this.clearMedia();
            this._removeUiClass();
            this.css.jq.currentTime.length && this.css.jq.currentTime.text("");
            this.css.jq.duration.length && this.css.jq.duration.text("");
            a.each(this.css.jq, function (b, l) {
                l.length && l.unbind(".jPlayer")
            });
            this.internal.poster.jq.unbind(".jPlayer");
            this.internal.video.jq && this.internal.video.jq.unbind(".jPlayer");
            this._fullscreenRemoveEventListeners();
            this === a.jPlayer.focus && (a.jPlayer.focus = null);
            this.options.emulateHtml && this._destroyHtmlBridge();
            this.element.removeData("jPlayer");
            this.element.unbind(".jPlayer");
            this.element.empty();
            delete this.instances[this.internal.instance]
        },
        enable: function () {},
        disable: function () {},
        _testCanPlayType: function (b) {
            try {
                return b.canPlayType(this.format.mp3.codec), true
            } catch (l) {
                return false
            }
        },
        _uaBlocklist: function (b) {
            var l = navigator.userAgent.toLowerCase(),
                o = false;
            a.each(b, function (n, q) {
                if (q && q.test(l)) return o = true, false
            });
            return o
        },
        _restrictNativeVideoControls: function () {
            this.require.audio && this.status.nativeVideoControls && (this.status.nativeVideoControls = false, this.status.noFullWindow = true)
        },
        _updateNativeVideoControls: function () {
            this.html.video.available &&
                this.html.used && (this.htmlElement.video.controls = this.status.nativeVideoControls, this._updateAutohide(), this.status.nativeVideoControls && this.require.video ? (this.internal.poster.jq.hide(), this.internal.video.jq.css({
                    width: this.status.width,
                    height: this.status.height
                })) : this.status.waitForPlay && this.status.video && (this.internal.poster.jq.show(), this.internal.video.jq.css({
                    width: "0px",
                    height: "0px"
                })))
        },
        _addHtmlEventListeners: function (b, l) {
            var o = this;
            b.preload = this.options.preload;
            b.muted = this.options.muted;
            b.volume = this.options.volume;
            b.addEventListener("progress", function () {
                l.gate && (o.internal.cmdsIgnored && 0 < this.readyState && (o.internal.cmdsIgnored = false), o._getHtmlStatus(b), o._updateInterface(), o._trigger(a.jPlayer.event.progress))
            }, false);
            b.addEventListener("timeupdate", function () {
                l.gate && (o._getHtmlStatus(b), o._updateInterface(), o._trigger(a.jPlayer.event.timeupdate))
            }, false);
            b.addEventListener("durationchange", function () {
                    l.gate && (o._getHtmlStatus(b), o._updateInterface(), o._trigger(a.jPlayer.event.durationchange))
                },
                false);
            b.addEventListener("play", function () {
                l.gate && (o._updateButtons(true), o._html_checkWaitForPlay(), o._trigger(a.jPlayer.event.play))
            }, false);
            b.addEventListener("playing", function () {
                l.gate && (o._updateButtons(true), o._seeked(), o._trigger(a.jPlayer.event.playing))
            }, false);
            b.addEventListener("pause", function () {
                l.gate && (o._updateButtons(false), o._trigger(a.jPlayer.event.pause))
            }, false);
            b.addEventListener("waiting", function () {
                l.gate && (o._seeking(), o._trigger(a.jPlayer.event.waiting))
            }, false);
            b.addEventListener("seeking",
                function () {
                    l.gate && (o._seeking(), o._trigger(a.jPlayer.event.seeking))
                }, false);
            b.addEventListener("seeked", function () {
                l.gate && (o._seeked(), o._trigger(a.jPlayer.event.seeked))
            }, false);
            b.addEventListener("volumechange", function () {
                l.gate && (o.options.volume = b.volume, o.options.muted = b.muted, o._updateMute(), o._updateVolume(), o._trigger(a.jPlayer.event.volumechange))
            }, false);
            b.addEventListener("suspend", function () {
                l.gate && (o._seeked(), o._trigger(a.jPlayer.event.suspend))
            }, false);
            b.addEventListener("ended",
                function () {
                    l.gate && (a.jPlayer.browser.webkit || (o.htmlElement.media.currentTime = 0), o.htmlElement.media.pause(), o._updateButtons(false), o._getHtmlStatus(b, true), o._updateInterface(), o._trigger(a.jPlayer.event.ended))
                }, false);
            b.addEventListener("error", function () {
                l.gate && (o._updateButtons(false), o._seeked(), o.status.srcSet && (clearTimeout(o.internal.htmlDlyCmdId), o.status.waitForLoad = true, o.status.waitForPlay = true, o.status.video && !o.status.nativeVideoControls && o.internal.video.jq.css({
                        width: "0px",
                        height: "0px"
                    }),
                    o._validString(o.status.media.poster) && !o.status.nativeVideoControls && o.internal.poster.jq.show(), o.css.jq.videoPlay.length && o.css.jq.videoPlay.show(), o._error({
                        type: a.jPlayer.error.URL,
                        context: o.status.src,
                        message: a.jPlayer.errorMsg.URL,
                        hint: a.jPlayer.errorHint.URL
                    })))
            }, false);
            a.each(a.jPlayer.htmlEvent, function (n, q) {
                b.addEventListener(this, function () {
                    l.gate && o._trigger(a.jPlayer.event[q])
                }, false)
            })
        },
        _getHtmlStatus: function (b, l) {
            var o = 0,
                n = 0,
                q = 0,
                u = 0;
            isFinite(b.duration) && (this.status.duration = b.duration);
            o = b.currentTime;
            n = 0 < this.status.duration ? 100 * o / this.status.duration : 0;
            "object" === typeof b.seekable && 0 < b.seekable.length ? (q = 0 < this.status.duration ? 100 * b.seekable.end(b.seekable.length - 1) / this.status.duration : 100, u = 0 < this.status.duration ? 100 * b.currentTime / b.seekable.end(b.seekable.length - 1) : 0) : (q = 100, u = n);
            l && (n = u = o = 0);
            this.status.seekPercent = q;
            this.status.currentPercentRelative = u;
            this.status.currentPercentAbsolute = n;
            this.status.currentTime = o;
            this.status.videoWidth = b.videoWidth;
            this.status.videoHeight =
                b.videoHeight;
            this.status.readyState = b.readyState;
            this.status.networkState = b.networkState;
            this.status.playbackRate = b.playbackRate;
            this.status.ended = b.ended
        },
        _resetStatus: function () {
            this.status = a.extend({}, this.status, a.jPlayer.prototype.status)
        },
        _trigger: function (b, l, o) {
            b = a.Event(b);
            b.jPlayer = {};
            b.jPlayer.version = a.extend({}, this.version);
            b.jPlayer.options = a.extend(true, {}, this.options);
            b.jPlayer.status = a.extend(true, {}, this.status);
            b.jPlayer.html = a.extend(true, {}, this.html);
            b.jPlayer.flash = a.extend(true, {}, this.flash);
            l && (b.jPlayer.error = a.extend({}, l));
            o && (b.jPlayer.warning = a.extend({}, o));
            this.element.trigger(b)
        },
        jPlayerFlashEvent: function (b, l) {
            if (b === a.jPlayer.event.ready)
                if (this.internal.ready) {
                    if (this.flash.gate) {
                        if (this.status.srcSet) {
                            var o = this.status.currentTime,
                                n = this.status.paused;
                            this.setMedia(this.status.media);
                            0 < o && (n ? this.pame = b.volume, o.options.muted = b.muted, o._updateMute(), o._updateVolume(), o._trigger(a.jPlayer.event.volumechange))
            }, false);
            b.addEventListener("suspend", function () {
                l.gate && (o._seeked(), o._trigger(a.jPlayer.event.suspend))
            }, false);
            b.addEventListener("ended",
                function () {
                    l.gate && (a.jPlayer.browser.webkit || (o.htmlElement.media.currentTime = 0), o.htmlElement.media.pause(), o._updateButtons(false), o._getHtmlStatus(b, true), o._updateInterface(), o._trigger(a.jPlayer.event.ended))
                }, false);
            b.addEventListener("error", function () {
                l.gate && (o._updateButtons(false), o._seeked(), o.status.srcSet && (clearTimeout(o.internal.htmlDlyCmdId), o.status.waitForLoad = true, o.status.waitForPlay = true, o.status.video && !o.status.nativeVideoControls && o.internal.video.jq.css({
                        width: "0px",
                        height: "0px"
                    }),
                    o._validString(o.status.media.poster) && !o.status.nativeVideoControls && o.internal.poster.jq.show(), o.css.jq.videoPlay.length && o.css.jq.videoPlay.show(), o._error({
                        type: a.jPlayer.error.URL,
                        context: o.status.src,
                        message: a.jPlayer.errorMsg.URL,
                        hint: a.jPlayer.errorHint.URL
                    })))
            }, false);
            a.each(a.jPlayer.htmlEvent, function (n, q) {
                b.addEventListener(this, function () {
                    l.gate && o._trigger(a.jPlayer.event[q])
                }, false)
            })
        },
        _getHtmlStatus: function (b, l) {
            var o = 0,
                n = 0,
                q = 0,
                u = 0;
            isFinite(b.duration) && (this.status.duration = b.duration);
            o = b.currentTime;
            n = 0 < this.status.duration ? 100 * o / this.status.duration : 0;
            "object" === typeof b.seekable && 0 < b.seekable.length ? (q = 0 < this.status.duration ? 100 * b.seekable.end(b.seekable.length - 1) / this.status.duration : 100, u = 0 < this.status.duration ? 100 * b.currentTime / b.seekable.end(b.seekable.length - 1) : 0) : (q = 100, u = n);
            l && (n = u = o = 0);
            this.status.seekPercent = q;
            this.status.currentPercentRelative = u;
            this.status.currentPercentAbsolute = n;
            this.status.currentTime = o;
            this.status.videoWidth = b.videoWidth;
            this.status.videoHeight =
                b.videoHeight;
            this.status.readyState = b.readyState;
            this.status.networkState = b.networkState;
            this.status.playbackRate = b.playbackRate;
            this.status.ended = b.ended
        },
        _resetStatus: function () {
            this.status = a.extend({}, this.status, a.jPlayer.prototype.status)
        },
        _trigger: function (b, l, o) {
            b = a.Event(b);
            b.jPlayer = {};
            b.jPlayer.version = a.extend({}, this.version);
            b.jPlayer.options = a.extend(true, {}, this.options);
            b.jPlayer.status = a.extend(true, {}, this.status);
            b.jPlayer.html = a.extend(true, {}, this.html);
            b.jPlayer.flash = a.extend(true, {}, this.flash);
            l && (b.jPlayer.error = a.extend({}, l));
            o && (b.jPlayer.warning = a.extend({}, o));
            this.element.trigger(b)
        },
        jPlayerFlashEvent: function (b, l) {
            if (b === a.jPlayer.event.ready)
                if (this.internal.ready) {
                    if (this.flash.gate) {
                        if (this.status.srcSet) {
                            var o = this.status.currentTime,
                                n = this.status.paused;
                            this.setMedia(this.status.media);
                            0 < o && (n ? this.pa(b ? (this.css.jq.play.hide(), this.css.jq.pause.show()) : (this.css.jq.play.show(), this.css.jq.pause.hide()));
            this.css.jq.restoreScreen.length && this.css.jq.fullScreen.length && (this.status.noFullWindow ? (this.css.jq.fullScreen.hide(), this.css.jq.restoreScreen.hide()) : this.options.fullWindow ? (this.css.jq.fullScreen.hide(), this.css.jq.restoreScreen.show()) : (this.css.jq.fullScreen.show(), this.css.jq.restoreScreen.hide()));
            this.css.jq.repeat.length && this.css.jq.repeatOff.length &&
                (this.options.loop ? (this.css.jq.repeat.hide(), this.css.jq.repeatOff.show()) : (this.css.jq.repeat.show(), this.css.jq.repeatOff.hide()))
        },
        _updateInterface: function () {
            this.css.jq.seekBar.length && this.css.jq.seekBar.width(this.status.seekPercent + "%");
            this.css.jq.playBar.length && (this.options.smoothPlayBar ? this.css.jq.playBar.stop().animate({
                width: this.status.currentPercentAbsolute + "%"
            }, 250, "linear") : this.css.jq.playBar.width(this.status.currentPercentRelative + "%"));
            this.css.jq.currentTime.length && this.css.jq.currentTime.text(this._convertTime(this.status.currentTime));
            this.css.jq.duration.length && this.css.jq.duration.text(this._convertTime(this.status.duration))
        },
        _convertTime: f.prototype.time,
        _seeking: function () {
            this.css.jq.seekBar.length && this.css.jq.seekBar.addClass("jp-seeking-bg")
        },
        _seeked: function () {
            this.css.jq.seekBar.length && this.css.jq.seekBar.removeClass("jp-seeking-bg")
        },
        _resetGate: function () {
            this.html.audio.gate = false;
            this.html.video.gate = false;
            this.flash.gate = false
        },
        _resetActive: function () {
            this.html.active = false;
            this.flash.active = false
        },
        setMedia: function (b) {
            var l =
                this,
                o = false,
                n = this.status.media.poster !== b.poster;
            this._resetMedia();
            this._resetGate();
            this._resetActive();
            a.each(this.formats, function (q, u) {
                var v = "video" === l.format[u].media;
                a.each(l.solutions, function (x, z) {
                    if (l[z].support[u] && l._validString(b[u])) {
                        var B = "html" === z;
                        v ? (B ? (l.html.video.gate = true, l._html_setVideo(b), l.html.active = true) : (l.flash.gate = true, l._flash_setVideo(b), l.flash.active = true), l.css.jq.videoPlay.length && l.css.jq.videoPlay.show(), l.status.video = true) : (B ? (l.html.audio.gate = true, l._html_setAudio(b),
                            l.html.active = true) : (l.flash.gate = true, l._flash_setAudio(b), l.flash.active = true), l.css.jq.videoPlay.length && l.css.jq.videoPlay.hide(), l.status.video = false);
                        o = true;
                        return false
                    }
                });
                if (o) return false
            });
            if (o) {
                if ((!this.status.nativeVideoControls || !this.html.video.gate) && this._validString(b.poster)) n ? this.htmlElement.poster.src = b.poster : this.internal.poster.jq.show();
                this.status.srcSet = true;
                this.status.media = a.extend({}, b);
                this._updateButtons(false);
                this._updateInterface()
            } else this._error({
                type: a.jPlayer.error.NO_SUPPORT,
                context: "{supplied:'" + this.options.supplied + "'}",
                message: a.jPlayer.errorMsg.NO_SUPPORT,
                hint: a.jPlayer.errorHint.NO_SUPPORT
            })
        },
        _resetMedia: function () {
            this._resetStatus();
            this._updateButtons(false);
            this._updateInterface();
            this._seeked();
            this.internal.poster.jq.hide();
            clearTimeout(this.internal.htmlDlyCmdId);
            this.html.active ? this._html_resetMedia() : this.flash.active && this._flash_resetMedia()
        },
        clearMedia: function () {
            this._resetMedia();
            this.html.active ? this._html_clearMedia() : this.flash.active && this._flash_clearMedia();
            this._resetGate();
            this._resetActive()
        },
        load: function () {
            this.status.srcSet ? this.html.active ? this._html_load() : this.flash.active && this._flash_load() : this._urlNotSetError("load")
        },
        focus: function () {
            this.options.keyEnabled && (a.jPlayer.focus = this)
        },
        play: function (b) {
            b = "number" === typeof b ? b : NaN;
            this.status.srcSet ? (this.focus(), this.html.active ? this._html_play(b) : this.flash.active && this._flash_play(b)) : this._urlNotSetError("play")
        },
        videoPlay: function () {
            this.play()
        },
        pause: function (b) {
            b = "number" === typeof b ?
                b : NaN;
            this.status.srcSet ? this.html.active ? this._html_pause(b) : this.flash.active && this._flash_pause(b) : this._urlNotSetError("pause")
        },
        pauseOthers: function () {
            var b = this;
            a.each(this.instances, function (l, o) {
                b.element !== o && o.data("jPlayer").status.srcSet && o.jPlayer("pause")
            })
        },
        stop: function () {
            this.status.srcSet ? this.html.active ? this._html_pause(0) : this.flash.active && this._flash_pause(0) : this._urlNotSetError("stop")
        },
        playHead: function (b) {
            b = this._limitValue(b, 0, 100);
            this.status.srcSet ? this.html.active ? this._html_playHead(b) :
                this.flash.active && this._flash_playHead(b) : this._urlNotSetError("playHead")
        },
        _muted: function (b) {
            this.options.muted = b;
            this.html.used && this._html_mute(b);
            this.flash.used && this._flash_mute(b);
            !this.html.video.gate && !this.html.audio.gate && (this._updateMute(b), this._updateVolume(this.options.volume), this._trigger(a.jPlayer.event.volumechange))
        },
        mute: function (b) {
            b = b === e ? true : !! b;
            this._muted(b)
        },
        unmute: function (b) {
            b = b === e ? true : !! b;
            this._muted(!b)
        },
        _updateMute: function (b) {
            b === e && (b = this.options.muted);
            this.css.jq.mute.length &&
                this.css.jq.unmute.length && (this.status.noVolume ? (this.css.jq.mute.hide(), this.css.jq.unmute.hide()) : b ? (this.css.jq.mute.hide(), this.css.jq.unmute.show()) : (this.css.jq.mute.show(), this.css.jq.unmute.hide()))
        },
        volume: function (b) {
            b = this._limitValue(b, 0, 1);
            this.options.volume = b;
            this.html.used && this._html_volume(b);
            this.flash.used && this._flash_volume(b);
            !this.html.video.gate && !this.html.audio.gate && (this._updateVolume(b), this._trigger(a.jPlayer.event.volumechange))
        },
        volumeBar: function (b) {
            if (this.css.jq.volumeBar.length) {
                var l =
                    a(b.currentTarget),
                    o = l.offset(),
                    n = b.pageX - o.left,
                    q = l.width();
                b = l.height() - b.pageY + o.top;
                l = l.height();
                this.options.verticalVolume ? this.volume(b / l) : this.volume(n / q)
            }
            this.options.muted && this._muted(false)
        },
        volumeBarValue: function () {},
        _updateVolume: function (b) {
            b === e && (b = this.options.volume);
            b = this.options.muted ? 0 : b;
            this.status.noVolume ? (this.css.jq.volumeBar.length && this.css.jq.volumeBar.hide(), this.css.jq.volumeBarValue.length && this.css.jq.volumeBarValue.hide(), this.css.jq.volumeMax.length && this.css.jq.volumeMax.hide()) :
                (this.css.jq.volumeBar.length && this.css.jq.volumeBar.show(), this.css.jq.volumeBarValue.length && (this.css.jq.volumeBarValue.show(), this.css.jq.volumeBarValue[this.options.verticalVolume ? "height" : "width"](100 * b + "%")), this.css.jq.volumeMax.length && this.css.jq.volumeMax.show())
        },
        volumeMax: function () {
            this.volume(1);
            this.options.muted && this._muted(false)
        },
        _cssSelectorAncestor: function (b) {
            var l = this;
            this.options.cssSelectorAncestor = b;
            this._removeUiClass();
            this.ancestorJq = b ? a(b) : [];
            b && 1 !== this.ancestorJq.length &&
                this._warning({
                    type: a.jPlayer.warning.CSS_SELECTOR_COUNT,
                    context: b,
                    message: a.jPlayer.warningMsg.CSS_SELECTOR_COUNT + this.ancestorJq.length + " found for cssSelectorAncestor.",
                    hint: a.jPlayer.warningHint.CSS_SELECTOR_COUNT
                });
            this._addUiClass();
            a.each(this.options.cssSelector, function (o, n) {
                l._cssSelector(o, n)
            });
            this._updateInterface();
            this._updateButtons();
            this._updateAutohide();
            this._updateVolume();
            this._updateMute()
        },
        _cssSelector: function (b, l) {
            var o = this;
            "string" === typeof l ? a.jPlayer.prototype.options.cssSelector[b] ?
                (this.css.jq[b] && this.css.jq[b].length && this.css.jq[b].unbind(".jPlayer"), this.options.cssSelector[b] = l, this.css.cs[b] = this.options.cssSelectorAncestor + " " + l, this.css.jq[b] = l ? a(this.css.cs[b]) : [], this.css.jq[b].length && this.css.jq[b].bind("click.jPlayer", function (n) {
                n.preventDefault();
                o[b](n);
                a(this).blur()
            }), l && 1 !== this.css.jq[b].length && this._warning({
                type: a.jPlayer.warning.CSS_SELECTOR_COUNT,
                context: this.css.cs[b],
                message: a.jPlayer.warningMsg.CSS_SELECTOR_COUNT + this.css.jq[b].length + " found for " + b + " method.",
                hint: a.jPlayer.warningHint.CSS_SELECTOR_COUNT
            })) : this._warning({
                type: a.jPlayer.warning.CSS_SELECTOR_METHOD,
                context: b,
                message: a.jPlayer.warningMsg.CSS_SELECTOR_METHOD,
                hint: a.jPlayer.warningHint.CSS_SELECTOR_METHOD
            }) : this._warning({
                type: a.jPlayer.warning.CSS_SELECTOR_STRING,
                context: l,
                message: a.jPlayer.warningMsg.CSS_SELECTOR_STRING,
                hint: a.jPlayer.warningHint.CSS_SELECTOR_STRING
            })
        },
        seekBar: function (b) {
            if (this.css.jq.seekBar.length) {
                var l = a(b.currentTarget),
                    o = l.offset();
                b = b.pageX - o.left;
                l = l.width();
                this.playHead(100 * b / l)
            }
        },
        playBar: function () {},
        repeat: function () {
            this._loop(true)
        },
        repeatOff: function () {
            this._loop(false)
        },
        _loop: function (b) {
            this.options.loop !== b && (this.options.loop = b, this._updateButtons(), this._trigger(a.jPlayer.event.repeat))
        },
        currentTime: function () {},
        duration: function () {},
        gui: function () {},
        noSolution: function () {},
        option: function (b, l) {
            var o = b;
            if (0 === arguments.length) return a.extend(true, {}, this.options);
            if ("string" === typeof b) {
                var n = b.split(".");
                if (l === e) {
                    o = a.exvolumeBar.hide(), this.css.jq.volumeBarValue.length && this.css.jq.volumeBarValue.hide(), this.css.jq.volumeMax.length && this.css.jq.volumeMax.hide()) :
                (this.css.jq.volumeBar.length && this.css.jq.volumeBar.show(), this.css.jq.volumeBarValue.length && (this.css.jq.volumeBarValue.show(), this.css.jq.volumeBarValue[this.options.verticalVolume ? "height" : "width"](100 * b + "%")), this.css.jq.volumeMax.length && this.css.jq.volumeMax.show())
        },
        volumeMax: function () {
            this.volume(1);
            this.options.muted && this._muted(false)
        },
        _cssSelectorAncestor: function (b) {
            var l = this;
            this.options.cssSelectorAncestor = b;
            this._removeUiClass();
            this.ancestorJq = b ? a(b) : [];
            b && 1 !== this.ancestorJq.length &&
                this._warning({
                    type: a.jPlayer.warning.CSS_SELECTOR_COUNT,
                    context: b,
                    message: a.jPlayer.warningMsg.CSS_SELECTOR_COUNT + this.ancestorJq.length + " found for cssSelectorAncestor.",
                    hint: a.jPlayer.warningHint.CSS_SELECTOR_COUNT
                });
            this._addUiClass();
            a.each(this.options.cssSelector, function (o, n) {
                l._cssSelector(o, n)
            });
            this._updateInterface();
            this._updateButtons();
            this._updateAutohide();
            this._updateVolume();
            this._updateMute()
        },
        _cssSelector: function (b, l) {
            var o = this;
            "string" === typeof l ? a.jPlayer.prototype.options.cssSelector[b] ?
                (this.css.jq[b] && this.css.jq[b].length && this.css.jq[b].unbind(".jPlayer"), this.options.cssSelector[b] = l, this.css.cs[b] = this.options.cssSelectorAncestor + " " + l, this.css.jq[b] = l ? a(this.css.cs[b]) : [], this.css.jq[b].length && this.css.jq[b].bind("click.jPlayer", function (n) {
                n.preventDefault();
                o[b](n);
                a(this).blur()
            }), l && 1 !== this.css.jq[b].length && this._warning({
                type: a.jPlayer.warning.CSS_SELECTOR_COUNT,
                context: this.css.cs[b],
                message: a.jPlayer.warningMsg.CSS_SELECTOR_COUNT + this.css.jq[b].length + " found for " + b + " method.",
                hint: a.jPlayer.warningHint.CSS_SELECTOR_COUNT
            })) : this._warning({
                type: a.jPlayer.warning.CSS_SELECTOR_METHOD,
                context: b,
                message: a.jPlayer.warningMsg.CSS_SELECTOR_METHOD,
                hint: a.jPlayer.warningHint.CSS_SELECTOR_METHOD
            }) : this._warning({
                type: a.jPlayer.warning.CSS_SELECTOR_STRING,
                context: l,
                message: a.jPlayer.warningMsg.CSS_SELECTOR_STRING,
                hint: a.jPlayer.warningHint.CSS_SELECTOR_STRING
            })
        },
        seekBar: function (b) {
            if (this.css.jq.seekBar.length) {
                var l = a(b.currentTarget),
                    o = l.offset();
                b = b.pageX - o.left;
                l = l.width();
                this.playHead(100 * b / l)
            }
        },
        playBar: function () {},
        repeat: function () {
            this._loop(true)
        },
        repeatOff: function () {
            this._loop(false)
        },
        _loop: function (b) {
            this.options.loop !== b && (this.options.loop = b, this._updateButtons(), this._trigger(a.jPlayer.event.repeat))
        },
        currentTime: function () {},
        duration: function () {},
        gui: function () {},
        noSolution: function () {},
        option: function (b, l) {
            var o = b;
            if (0 === arguments.length) return a.extend(true, {}, this.options);
            if ("string" === typeof b) {
                var n = b.split(".");
                if (l === e) {
                    o = a.extend(true, {}, this.options);
                    for (var q = 0; q < n.length; q++)
                        if (o[n[q]] !== e) o = o[n[q]];
                        else return this._warning({
                            type: a.jPlayer.warning.OPTION_KEY,
                            context: b,
                            message: a.jPlayer.warningMsg.OPTION_KEY,
                            hint: a.jPlayer.warningHint.OPTION_KEY
                        }), e;
                    return o
                }
                q = o = {};
                for (var u = 0; u < n.length; u++) u < n.length - 1 ? (q[n[u]] = {}, q = q[n[u]]) : q[n[u]] = l
            }
            this._setOptions(o);
            return this
        },
        _setOptions: function (b) {
            var l = this;
            a.each(b, function (o, n) {
                l._setOption(o, n)
            });
            return this
        },
        _setOption: function (b, l) {
            var o = this;
            switch (b) {
            case "volume":
                this.volume(l);
                break;
            case "muted":
                this._muted(l);
                break;
            case "cssSelectorAncestor":
                this._cssSelectorAncestor(l);
                break;
            case "cssSelector":
                a.each(l, function (q, u) {
                    o._cssSelector(q, u)
                });
                break;
            case "fullScreen":
                if (this.options[b] !== l) {
                    var n = a.jPlayer.nativeFeatures.fullscreen.used.webkitVideo;
                    if (!n || n && !this.status.waitForPlay) {
                        n || (this.options[b] = l);
                        l ? this._requestFullscreen() : this._exitFullscreen();
                        n || this._setOption("fullWindow", l)
                    }
                }
                break;
            case "fullWindow":
                this.options[b] !== l && (this._removeUiClass(), this.options[b] =
                    l, this._refreshSize());
                break;
            case "size":
                !this.options.fullWindow && this.options[b].cssClass !== l.cssClass && this._removeUiClass();
                this.options[b] = a.extend({}, this.options[b], l);
                this._refreshSize();
                break;
            case "sizeFull":
                this.options.fullWindow && this.options[b].cssClass !== l.cssClass && this._removeUiClass();
                this.options[b] = a.extend({}, this.options[b], l);
                this._refreshSize();
                break;
            case "autohide":
                this.options[b] = a.extend({}, this.options[b], l);
                this._updateAutohide();
                break;
            case "loop":
                this._loop(l);
                break;
            case "nativeVideoControls":
                this.options[b] =
                    a.extend({}, this.options[b], l);
                this.status.nativeVideoControls = this._uaBlocklist(this.options.nativeVideoControls);
                this._restrictNativeVideoControls();
                this._updateNativeVideoControls();
                break;
            case "noFullWindow":
                this.options[b] = a.extend({}, this.options[b], l);
                this.status.nativeVideoControls = this._uaBlocklist(this.options.nativeVideoControls);
                this.status.noFullWindow = this._uaBlocklist(this.options.noFullWindow);
                this._restrictNativeVideoControls();
                this._updateButtons();
                break;
            case "noVolume":
                this.options[b] =
                    a.extend({}, this.options[b], l);
                this.status.noVolume = this._uaBlocklist(this.options.noVolume);
                this._updateVolume();
                this._updateMute();
                break;
            case "emulateHtml":
                this.options[b] !== l               b._fullscreenchange()
            }), document.addEventListener(l.event.fullscreenchange, this.internal.fullscreenchangeHandler, false))
        },
        _fullscreenRemoveEventListeners: function () {
            var b = a.jPlayer.nativeFeatures.fullscreen;
            this.internal.fullscreenchangeHandler && document.addEventListener(b.event.fullscreenchange, this.internal.fullscreenchangeHandler, false)
        },
        _fullscreenchange: function () {
            this.options.fullScreen && !a.jPlayer.nativeFeatures.fullscreen.api.fullscreenElement() && this._setOption("fullScreen", false)
        },
        _requestFullscreen: function () {
            var b = this.ancestorJq.length ? this.ancestorJq[0] : this.element[0],
                l = a.jPlayer.nativeFeatures.fullscreen;
            l.used.webkitVideo && (b = this.htmlElement.video);
            l.api.fullscreenEnabled && l.api.requestFullscreen(b)
        },
        _exitFullscreen: function () {
            var b = a.jPlayer.nativeFeatures.fullscreen,
                l;
            b.used.webkitVideo && (l = this.htmlElement.video);
            b.api.fullscreenEnabled && b.api.exitFullscreen(l)
        },
        _html_initMedia: function (b) {
            var l = a(this.htmlElement.media).empty();
            a.each(b.track || [], function (o, n) {
                var q = document.createElement("track");
                q.setAttribute("kind", n.kind ? n.kind : "");
                q.setAttribute("src", n.src ? n.src : "");
                q.setAttribute("srclang", n.srclang ? n.srclang : "");
                q.setAttribute("label", n.label ? n.label : "");
                n.def && q.setAttribute("default",
                    n.def);
                l.append(q)
            });
            this.htmlElement.media.src = this.status.src;
            "none" !== this.options.preload && this._html_load();
            this._trigger(a.jPlayer.event.timeupdate)
        },
        _html_setFormat: function (b) {
            var l = this;
            a.each(this.formats, function (o, n) {
                if (l.html.support[n] && b[n]) return l.status.src = b[n], l.status.format[n] = true, l.status.formatType = n, false
            })
        },
        _html_setAudio: function (b) {
            this._html_setFormat(b);
            this.htmlElement.media = this.htmlElement.audio;
            this._html_initMedia(b)
        },
        _html_setVideo: function (b) {
            this._html_setFormat(b);
            this.status.nativeVideoControls && (this.htmlElement.video.poster = this._validString(b.poster) ? b.poster : "");
            this.htmlElement.media = this.htmlElement.video;
            this._html_initMedia(b)
        },
        _html_resetMedia: function () {
            this.htmlElement.media && (this.htmlElement.media.id === this.internal.video.id && !this.status.nativeVideoControls && this.internal.video.jq.css({
                width: "0px",
                height: "0px"
            }), this.htmlElement.media.pause())
        },
        _html_clearMedia: function () {
            this.htmlElement.media && (this.htmlElement.media.src = "about:blank", this.htmlElement.media.load())
        },
        _html_load: function () {
            this.status.waitForLoad && (this.status.waitForLoad = false, this.htmlElement.media.load());
            clearTimeout(this.internal.htmlDlyCmdId)
        },
        _html_play: function (b) {
            var l = this,
                o = this.htmlElement.media;
            this._html_load();
            if (isNaN(b)) o.play();
            else {
                this.internal.cmdsIgnored && o.play();
                try {
                    if (!o.seekable || "object" === typeof o.seekable && 0 < o.seekable.length) {
                        o.currentTime = b;
                        o.play()
                    } else throw 1;
                } catch (n) {
                    this.internal.htmlDlyCmdId = setTimeout(function () {
                        l.play(b)
                    }, 250);
                    return
                }
            }
            this._html_checkWaitForPlay()
        },
        _html_pause: function (b) {
            var l = this,
                o = this.htmlElement.media;
            0 < b ? this._html_load() : clearTimeout(this.internal.htmlDlyCmdId);
            o.pause();
            if (!isNaN(b)) try {
                if (!o.seekable || "object" === typeof o.seekable && 0 < o.seekable.length) o.currentTime = b;
                else throw 1;
            } catch (n) {
                this.internal.htmlDlyCmdId = setTimeout(function () {
                    l.pause(b)
                }, 250);
                return
            }
            0 < b && this._html_checkWaitForPlay()
        },
        _html_playHead: function (b) {
            var l = this,
                o = this.htmlElement.media;
            this._html_load();
            try {
                if ("object" === typeof o.seekable && 0 < o.seekable.length) o.currentTime =
                    b * o.seekable.end(o.seekable.length - 1) / 100;
                else if (0 < o.duration && !isNaN(o.duration)) o.currentTime = b * o.duration / 100;
                else throw "e";
            } catch (n) {
                this.internal.htmlDlyCmdId = setTimeout(function () {
                    l.playHead(b)
                }, 250);
                return
            }
            this.status.waitForLoad || this._html_checkWaitForPlay()
        },
        _html_checkWaitForPlay: function () {
            this.status.waitForPlay && (this.status.waitForPlay = false, this.css.jq.videoPlay.length && this.css.jq.videoPlay.hide(), this.status.video && (this.internal.poster.jq.hide(), this.internal.video.jq.css({
                width: this.status.width,
                height: this.status.height
            })))
        },
        _html_volume: function (b) {
            this.html.audio.available && (this.htmlElement.audio.volume = b);
            this.html.video.available && (this.htmlElement.video.volume = b)
        },
        _html_mute: function (b) {
            this.html.audio.available && (this.htmlElement.audio.muted = b);
            this.html.video.available && (this.htmlElement.video.muted = b)
        },
        _flash_setAudio: function (b) {
            var l = this;
            try {
                a.each(this.formats, function (n, q) {
                    if (l.flash.support[q] && b[q]) {
                        switch (q) {
                        case "m4a":
                        case "fla":
                            l._getMovie().fl_setAudio_m4a(b[q]);
                            break;
                        case "mp3":
                            l._getMovie().fl_setAudio_mp3(b[q]);
                            break;
                        case "rtmpa":
                            l._getMovie().fl_setAudio_rtmp(b[q])
                        }
                        l.status.src = b[q];
                        l.status.format[q] = true;
                        l.status.formatType = q;
                        return false
                    }
                });
                "auto" === this.options.preload && (this._flash_load(), this.status.waitForLoad = false)
            } catch (o) {
                this._flashError(o)
            }
        },
        _flash_setVideo: function (b) {
            var l = this;
            try {
                a.each(this.formats, function (n, q) {
                    if (l.flash.support[q] && b[q]) {
                        switch (q) {
                        case "m4v":
                        case "flv":
                            l._getMovie().fl_setVideo_m4v(b[q]);
                            break;
                        case "rtmpv":
                            l._getMovie().fl_setVideo_rtmp(b[q])
                        }
                        l.status.src =
                            b[q];
                        l.status.format[q] = true;
                        l.status.formatType = q;
                        return false
                    }
                });
                "auto" === this.options.preload && (this._flash_load(), this.status.waitForLoad = false)
            } catch (o) {
                this._flashError(o)
            }
        },
        _flash_resetMedia: function () {
            this.internal.flash.jq.css({
                width: "0px",
                height: "0px"
            });
            this._flash_pause(NaN)
        },
        _flash_clearMedia: function () {
            try {
                this._getMovie().fl_clearMedia()
            } catch (b) {
                this._flashError(b)
            }
        },
        _flash_load: function () {
            try {
                this._getMovie().fl_load()
            } catch (b) {
                this._flashError(b)
            }
            this.status.waitForLoad = false
        },
        _flash_play: function (b) {
            try {
                this._getMovie().fl_play(b)
            } catch (l) {
                this._flashError(l)
            }
            this.status.waitForLoad =
                false;
            this._flash_checkWaitForPlay()
        },
        _flash_pause: function (b) {
            try {
                this._getMovie().fl_pause(b)
            } catch (l) {
                this._flashError(l)
            }
            0 < b && (this.status.waitForLoad = false, this._flash_checkWaitForPlay())
        },
        _flash_playHead: function (b) {
            try {
                this._getMovie().fl_play_head(b)
            } catch (l) {
                this._flashError(l)
            }
            this.status.waitForLoad || this._flash_checkWaitForPlay()
        },
        _flash_checkWaitForPlay: function () {
            this.status.waitForPlay && (this.status.waitForPlay = false, this.css.jq.videoPlay.length && this.css.jq.videoPlay.hide(), this.status.video &&
                (this.internal.poster.jq.hide(), this.internal.flash.jq.css({
                    width: this.status.width,
                    height: this.status.height
                })))
        },
        _flash_volume: function (b) {
            try {
                this._getMovie().fl_volume(b)
            } catch (l) {
                this._flashError(l)
            }
        },
        _flash_mute: function (b) {
            try {
                this._getMovie().fl_mute(b)
            } catch (l) {
                this._flashError(l)
            }
        },
        _getMovie: function () {
            return document[this.internal.flash.id]
        },
        _getFlashPluginVersion: function () {
            var b = 0,
                l;
            if (window.ActiveXObject) try {
                if (l = new ActiveXObject("ShockwaveFlash.ShockwaveFlash")) {
                    var o = l.GetVariable("$version");
                    o && (o = o.split(" ")[1].split(","), b = parseInt(o[0], 10) + "." + parseInt(o[1], 10))
                }
            } catch (n) {} else navigator.plugins && 0 < navigator.mimeTypes.length && navigator.plugins["Shockwave Flash"] && (b = navigator.plugins["Shockwave Flash"].description.replace(/.*\s(\d+\.\d+).*/, "$1"));
            return 1 * b
        },
        _checkForFlash: function (b) {
            var l = false;
            this._getFlashPluginVersion() >= b && (l = true);
            return l
        },
        _validString: function (b) {
            return b && "string" === typeof b
        },
        _limitValue: function (b, l, o) {
            return b < l ? l : b > o ? o : b
        },
        _urlNotSetError: function (b) {
            this._error({
                type: a.jPlayer.error.URL_NOT_SET,
                context: b,
                message: a.jPlayer.errorMsg.URL_NOT_SET,
                hint: a.jPlayer.errorHint.URL_NOT_SET
            })
        },
        _flashError: function (b) {
            var l;
            l = this.internal.ready ? "FLASH_DISABLED" : "FLASH";
            this._error({
                type: a.jPlayer.error[l],
                context: this.internal.flash.swf,
                message: a.jPlayer.errorMsg[l] + b.message,
                hint: a.jPlayer.errorHint[l]
            });
            this.internal.flash.jq.css({
                width: "1px",
                height: "1px"
            })
        },
        _error: function (b) {
            this._trigger(a.jPlayer.event.error, b);
            this.options.errorAlerts && this._alert("Error!" + (b.message ? "\n\n" + b.message : "") + (b.hint ?
                "\n\n" + b.hint : "") + "\n\nContext: " + b.context)
        },
        _warning: function (b) {
            this._trigger(a.jPlayer.event.warning, e, b);
            this.options.warningAlerts && this._alert("Warning!" + (b.message ? "\n\n" + b.message : "") + (b.hint ? "\n\n" + b.hint : "") + "\n\nContext: " + b.context)
        },
        _alert: function (b) {
            alert("jPlayer " + this.version.script + " : id='" + this.internal.self.id + "' : " + b)
        },
        _emulateHtmlBridge: function () {
            var b = this;
            a.each(a.jPlayer.emulateMethods.split(/\s+/g), function (l, o) {
                b.internal.domNode[o] = function (n) {
                    b[o](n)
                }
            });
            a.each(a.jPlayer.event,
                function (l, o) {
                    var n = true;
                    a.each(a.jPlayer.reservedEvent.split(/\s+/g), function (q, u) {
                        if (u === l) return n = false
                    });
                    n && b.element.bind(o + ".jPlayer.jPlayerHtml", function () {
                        b._emulateHtmlUpdate();
                        var q = document.createEvent("Event");
                        q.initEvent(l, false, true);
                        b.internal.domNode.dispatchEvent(q)
                    })
                })
        },
        _emulateHtmlUpdate: function () {
            var b = this;
            a.each(a.jPlayer.emulateStatus.split(/\s+/g), function (l, o) {
                b.internal.domNode[o] = b.status[o]
            });
            a.each(a.jPlayer.emulateOptions.split(/\s+/g), function (l, o) {
                b.internal.domNode[o] =
                    b.options[o]
            })
        },
        _destroyHtmlBridge: function () {
            var b = this;
            this.element.unbind(".jPlayerHtml");
            a.each((a.jPlayer.emulateMethods + " " + a.jPlayer.emulateStatus + " " + a.jPlayer.emulateOptions).split(/\s+/g), function (l, o) {
                delete b.internal.domNode[o]
            })
        }
    };
    a.jPlayer.error = {
        FLASH: "e_flash",
        FLASH_DISABLED: "e_flash_disabled",
        NO_SOLUTION: "e_no_solution",
        NO_SUPPORT: "e_no_support",
        URL: "e_url",
        URL_NOT_SET: "e_url_not_set",
        VERSION: "e_version"
    };
    a.jPlayer.errorMsg = {
        FLASH: "jPlayer's Flash fallback is not configured correctly, or a command was issued before the jPlayer Ready event. Details: ",
        FLASH_DISABLED: "jPlayer's Flash fallback has been disabled by the browser due to the CSS rules you have used. Details: ",
        NO_SOLUTION: "No solution can be found by jPlayer in this browser. Neither HTML nor Flash can be used.",
        NO_SUPPORT: "It is not possible to play any media format provided in setMedia() on this browser using your current options.",
        URL: "Media URL could not be loaded.",
        URL_NOT_SET: "Attempt to issue media playback commands, while no media url is set.",
        VERSION: "jPlayer " + a.jPlayer.prototype.version.script + " needs Jplayer.swf version " + a.jPlayer.prototype.version.needFlash + " but found "
    };
    a.jPlayer.errorHint = {
        FLASH: "Check your swfPath option and that Jplayer.swf is there.",
        FLASH_DISABLED: "Check that you have not display:none; the jPlayer entity or any ancestor.",
        NO_SOLUTION: "Review the jPlayer options: support and supplied.",
        NO_SUPPORT: "Video or audio formats defined in the supplied option are missing.",
        URL: "Check media URL is valid.",
        URL_NOT_SET: "Use setMedia() to set the media URL.",
        VERSION: "Update jPlayer files."
    };
    a.jPlayer.warning = {
        CSS_SELECTOR_COUNT: "e_css_selector_count",
        CSS_SELECTOR_METHOD: "e_css_selector_method",
        CSS_SELECTOR_STRING: "e_css_selector_string",
        OPTION_KEY: "e_option_key"
    };
    a.jPlayer.warningMsg = {
        CSS_SELECTOR_COUNT: "The number of css selectors found did not equal one: ",
        CSS_SELECTOR_METHOD: "The methodName given in jPlayer('cssSelector') is not a valid jPlayer method.",
        CSS_SELECTOR_STRING: "The methodCssSelector given in jPlayer('cssSelector') is not a String or is empty.",
        OPTION_KEY: "The option requested in jPlayer('option') is undefined."
    };
    a.jPlayer.warningHint = {
        CSS_SELECTOR_COUNT: "Check your css selector and the ancestor.",
        CSS_SELECTOR_METHOD: "Check your method name.",
        CSS_SELECTOR_STRING: "Check your css selector is a string.",
        OPTION_KEY: "Check your option name."
    }
});
jQuery.fn.debounce = function (a, e, f) {
    f = f || 100;
    this.each(function () {
        var j = this,
            g;
        $(this).bind(a, function () {
            if (g) {
                clearTimeout(g);
                g = undefined
            }
            var c = arguments;
            g = setTimeout(function () {
                e.apply(j, c)
            }, f)
        })
    });
    return this
};
$.fn.inputOverlay = function (a) {
    this.filter("input").each(function () {
        var e = $(this),
            f = e.offsetParent(),
            j = e.offset().top - f.offset().top;
        f = e.offset().left - f.offset().left;
        var g = e.parent(),
            c = "overlay" + Math.floor(Math.random() * 1E4);
        a || (a = e.attr("title") ? e.attr("title") : "");
        g.append('<div class="inputOverlay" id="' + c + '" style="position: absolute; top: ' + j + "px; left: " + (f + 5) + 'px;">' + a + "</div>");
        var b = $("#" + c);
        e.bind("focus", function () {
            b.hide()
        });
        e.bind("blur", function () {
            e.val() || b.fadeIn("fast")
        });
        b.bind("click",
            function () {
                b.hide();
                e.focus()
            })
    })
};
$.fn.militarize = function () {
    var a = ["Alpha", "Bravo", "Charlie", "Delta", "Echo", "Foxtrot", "Golf", "Hotel", "India", "Juliet", "Kilo", "Lima", "Mike", "November", "Oscar", "Papa", "Quebec", "Romeo", "Sierra", "Tango", "Uniform", "Victor", "Whiskey", "X-Ray", "Yankee", "Zulu"];
    this.each(function () {
        for (var e = $(this).text(), f = [], j = 0; j < e.length; j++) {
            var g = e.charCodeAt(j);
            if (g > 64 && g < 91) f.push(a[g - 65]);
            else g > 96 && g < 123 ? f.push(a[g - 97]) : f.push(e.charAt(j))
        }
        $(this).text(f.join(" "))
    })
};
_ticker = _timer = null;
_tickCounter = 0;
if (typeof ticking == "undefined" || !ticking) $(document).ready(function () {
    _ticker = function (a) {
        _tickCounter++;
        $(window).triggerHandler("halfTick");
        if (_tickCounter % 2 == 0) {
            $(window).triggerHandler("tick");
            _tickCounter = 0
        }
        _timer = setTimeout(function () {
            a(a)
        }, 500)
    };
    _ticker(_ticker)
});
var _TICKING = true;
/*
: Licensed under The MIT License. See license.txt and http://www.datejs.com/license/. 
 @website: http://www.datejs.com/
*/
Date.CultureInfo = {
    name: "en-US",
    englishName: "English (United States)",
    nativeName: "English (United States)",
    dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
    abbreviatedDayNames: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
    shortestDayNames: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
    firstLetterDayNames: ["S", "M", "T", "W", "T", "F", "S"],
    monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
    abbreviatedMonthNames: ["Jan",
        "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"
    ],
    amDesignator: "AM",
    pmDesignator: "PM",
    firstDayOfWeek: 0,
    twoDigitYearMax: 2029,
    dateElementOrder: "mdy",
    formatPatterns: {
        shortDate: "M/d/yyyy",
        longDate: "dddd, MMMM dd, yyyy",
        shortTime: "h:mm tt",
        longTime: "h:mm:ss tt",
        fullDateTime: "dddd, MMMM dd, yyyy h:mm:ss tt",
        sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
        universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
        rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
        monthDay: "MMMM dd",
        yearMonth: "MMMM, yyyy"
    },
    regexPatterns: {
        jan: /^jan(uary)?/i,
        feb: /^feb(ruary)?/i,
        mar: /^mar(ch)?/i,
        apr: /^apr(il)?/i,
        may: /^may/i,
        jun: /^jun(e)?/i,
        jul: /^jul(y)?/i,
        aug: /^aug(ust)?/i,
        sep: /^sep(t(ember)?)?/i,
        oct: /^oct(ober)?/i,
        nov: /^nov(ember)?/i,
        dec: /^dec(ember)?/i,
        sun: /^su(n(day)?)?/i,
        mon: /^mo(n(day)?)?/i,
        tue: /^tu(e(s(day)?)?)?/i,
        wed: /^we(d(nesday)?)?/i,
        thu: /^th(u(r(s(day)?)?)?)?/i,
        fri: /^fr(i(day)?)?/i,
        sat: /^sa(t(urday)?)?/i,
        future: /^next/i,
        past: /^last|past|prev(ious)?/i,
        add: /^(\+|aft(er)?|from|hence)/i,
        subtract: /^(\-|bef(ore)?|ago)/i,
        yesterday: /^yes(terday)?/i,
        today: /^t(od(ay)?)?/i,
        tomorrow: /^tom(orrow)?/i,
        now: /^n(ow)?/i,
        millisecond: /^ms|milli(second)?s?/i,
        second: /^sec(ond)?s?/i,
        minute: /^mn|min(ute)?s?/i,
        hour: /^h(our)?s?/i,
        week: /^w(eek)?s?/i,
        month: /^m(onth)?s?/i,
        day: /^d(ay)?s?/i,
        year: /^y(ear)?s?/i,
        shortMeridian: /^(a|p)/i,
        longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
        timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt|utc)/i,
        ordinalSuffix: /^\s*(st|nd|rd|th)/i,
        timeContext: /^\s*(\:|a(?!u|p)|p)/i
    },
    timezones: [{
        name: "UTC",
        offset: "-000"
    }, {
        name: "GMT",
        offset: "-000"
    }, {
        name: "EST",
        offset: "-0500"
    }, {
        name: "EDT",
        offset: "-0400"
    }, {
        name: "CST",
        offset: "-0600"
    }, {
        name: "CDT",
        offset: "-0500"
    }, {
        name: "MST",
        offset: "-0700"
    }, {
        name: "MDT",
        offset: "-0600"
    }, {
        name: "PST",
        offset: "-0800"
    }, {
        name: "PDT",
        offset: "-0700"
    }]
};
(function () {
    var a = Date,
        e = a.prototype,
        f = a.CultureInfo,
        j = function (l, o) {
            o || (o = 2);
            return ("000" + l).slice(o * -1)
        };
    e.clearTime = function () {
        this.setHours(0);
        this.setMinutes(0);
        this.setSeconds(0);
        this.setMilliseconds(0);
        return this
    };
    e.setTimeToNow = function () {
        var l = new Date;
        this.setHours(l.getHours());
        this.setMinutes(l.getMinutes());
        this.setSeconds(l.getSeconds());
        this.setMilliseconds(l.getMilliseconds());
        return this
    };
    a.today = function () {
        return (new Date).clearTime()
    };
    a.compare = function (l, o) {
        if (isNaN(l) || isNaN(o)) throw Error(l +
            " - " + o);
        else if (l instanceof Date && o instanceof Date) return l < o ? -1 : l > o ? 1 : 0;
        else throw new TypeError(l + " - " + o);
    };
    a.equals = function (l, o) {
        return l.compareTo(o) === 0
    };
    a.getDayNumberFromName = function (l) {
        var o = f.dayNames,
            n = f.abbreviatedDayNames,
            q = f.shortestDayNames;
        l = l.toLowerCase();
        for (var u = 0; u < o.length; u++)
            if (o[u].toLowerCase() == l || n[u].toLowerCase() == l || q[u].toLowerCase() == l) return u;
        return -1
    };
    a.getMonthNumberFromName = function (l) {
        var o = f.monthNames,
            n = f.abbreviatedMonthNames;
        l = l.toLowerCase();
        for (var q =
            0; q < o.length; q++)
            if (o[q].toLowerCase() == l || n[q].toLowerCase() == l) return q;
        return -1
    };
    a.isLeapYear = function (l) {
        return l % 4 === 0 && l % 100 !== 0 || l % 400 === 0
    };
    a.getDaysInMonth = function (l, o) {
        return [31, a.isLeapYear(l) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][o]
    };
    a.getTimezoneAbbreviation = function (l) {
        for (var o = f.timezones, n = 0; n < o.length; n++)
            if (o[n].offset === l) return o[n].name;
        return null
    };
    a.getTimezoneOffset = function (l) {
        for (var o = f.timezones, n = 0; n < o.length; n++)
            if (o[n].name === l.toUpperCase()) return o[n].offset;
        return null
    };
    e.clone = function () {
        return new Date(this.getTime())
    };
    e.compareTo = function (l) {
        return Date.compare(this, l)
    };
    e.equals = function (l) {
        return Date.equals(this, l || new Date)
    };
    e.between = function (l, o) {
        return this.getTime() >= l.getTime() && this.getTime() <= o.getTime()
    };
    e.isAfter = function (l) {
        return this.compareTo(l || new Date) === 1
    };
    e.isBefore = function (l) {
        return this.compareTo(l || new Date) === -1
    };
    e.isToday = function () {
        return this.isSameDay(new Date)
    };
    e.isSameDay = function (l) {
        return this.clone().clearTime().equals(l.clone().clearTime())
    };
    e.addMilliseconds = function (l) {
        this.setMilliseconds(this.getMilliseconds() + l);
        return this
    };
    e.addSeconds = function (l) {
        return this.addMilliseconds(l * 1E3)
    };
    e.addMinutes = function (l) {
        return this.addMilliseconds(l * 6E4)
    };
    e.addHours = function (l) {
        return this.addMilliseconds(l * 36E5)
    };
    e.addDays = function (l) {
        this.setDate(this.getDate() + l);
        return this
    };
    e.addWeeks = function (l) {
        return this.addDays(l * 7)
    };
    e.addMonths = function (l) {
        var o = this.getDate();
        this.setDate(1);
        this.setMonth(this.getMonth() + l);
        this.setDate(Math.min(o,
            a.getDaysInMonth(this.getFullYear(), this.getMonth())));
        return this
    };
    e.addYears = function (l) {
        return this.addMonths(l * 12)
    };
    e.add = function (l) {
        if (typeof l == "number") {
            this._orient = l;
            return this
        }
        l.milliseconds && this.addMilliseconds(l.milliseconds);
        l.seconds && this.addSeconds(l.seconds);
        l.minutes && this.addMinutes(l.minutes);
        l.hours && this.addHours(l.hours);
        l.weeks && this.addWeeks(l.weeks);
        l.months && this.addMonths(l.months);
        l.years && this.addYears(l.years);
        l.days && this.addDays(l.days);
        return this
    };
    var g, c, b;
    e.getWeek =
        function () {
            var l, o, n, q, u;
            g = !g ? this.getFullYear() : g;
            c = !c ? this.getMonth() + 1 : c;
            b = !b ? this.getDate() : b;
            if (c <= 2) {
                l = g - 1;
                o = (l / 4 | 0) - (l / 100 | 0) + (l / 400 | 0);
                n = ((l - 1) / 4 | 0) - ((l - 1) / 100 | 0) + ((l - 1) / 400 | 0);
                n = o - n;
                q = 0;
                u = b - 1 + 31 * (c - 1)
            } else {
                l = g;
                o = (l / 4 | 0) - (l / 100 | 0) + (l / 400 | 0);
                n = ((l - 1) / 4 | 0) - ((l - 1) / 100 | 0) + ((l - 1) / 400 | 0);
                n = o - n;
                q = n + 1;
                u = b + (153 * (c - 3) + 2) / 5 + 58 + n
            }
            l = (l + o) % 7;
            o = u + 3 - (u + l - q) % 7 | 0;
            n = o < 0 ? 53 - ((l - n) / 5 | 0) : o > 364 + n ? 1 : (o / 7 | 0) + 1;
            g = c = b = null;
            return n
    };
    e.getISOWeek = function () {
        g = this.getUTCFullYear();
        c = this.getUTCMonth() + 1;
        b = this.getUTCDate();
        return j(this.getWeek())
    };
    e.setWeek = function (l) {
        return this.moveToDayOfWeek(1).addWeeks(l - this.getWeek())
    };
    a._validate = function (l, o, n, q) {
        if (typeof l == "undefined") return false;
        else if (typeof l != "number") throw new TypeError(l + " is not a Number.");
        else if (l < o || l > n) throw new RangeError(l + " is not a valid value for " + q + ".");
        return true
    };
    a.validateMillisecond = function (l) {
        return a._validate(l, 0, 999, "millisecond")
    };
    a.validateSecond = function (l) {
        return a._validate(l, 0, 59, "second")
    };
    a.validateMinute = function (l) {
        return a._validate(l,
            0, 59, "minute")
    };
    a.validateHour = function (l) {
        return a._validate(l, 0, 23, "hour")
    };
    a.validateDay = function (l, o, n) {
        return a._validate(l, 1, a.getDaysInMonth(o, n), "day")
    };
    a.validateMonth = function (l) {
        return a._validate(l, 0, 11, "month")
    };
    a.validateYear = function (l) {
        return a._validate(l, 0, 9999, "year")
    };
    e.set = function (l) {
        a.validateMillisecond(l.millisecond) && this.addMilliseconds(l.millisecond - this.getMilliseconds());
        a.validateSecond(l.second) && this.addSeconds(l.second - this.getSeconds());
        a.validateMinute(l.minute) &&
            this.addMinutes(l.minute - this.getMinutes());
        a.validateHour(l.hour) && this.addHours(l.hour - this.getHours());
        a.validateMonth(l.month) && this.addMonths(l.month - this.getMonth());
        a.validateYear(l.year) && this.addYears(l.year - this.getFullYear());
        a.validateDay(l.day, this.getFullYear(), this.getMonth()) && this.addDays(l.day - this.getDate());
        l.timezone && this.setTimezone(l.timezone);
        l.timezoneOffset && this.setTimezoneOffset(l.timezoneOffset);
        l.week && a._validate(l.week, 0, 53, "week") && this.setWeek(l.week);
        return this
    };
    e.moveToFirstDayOfMonth = function () {
        return this.set({
            day: 1
        })
    };
    e.moveToLastDayOfMonth = function () {
        return this.set({
            day: a.getDaysInMonth(this.getFullYear(), this.getMonth())
        })
    };
    e.moveToNthOccurrence = function (l, o) {
        var n = 0;
        if (o > 0) n = o - 1;
        else if (o === -1) {
            this.moveToLastDayOfMonth();
            this.getDay() !== l && this.moveToDayOfWeek(l, -1);
            return this
        }
        return this.moveToFirstDayOfMonth().addDays(-1).moveToDayOfWeek(l, +1).addWeeks(n)
    };
    e.moveToDayOfWeek = function (l, o) {
        var n = (l - this.getDay() + 7 * (o || +1)) % 7;
        return this.addDays(n ===
            0 ? n += 7 * (o || +1) : n)
    };
    e.moveToMonth = function (l, o) {
        var n = (l - this.getMonth() + 12 * (o || +1)) % 12;
        return this.addMonths(n === 0 ? n += 12 * (o || +1) : n)
    };
    e.getOrdinalNumber = function () {
        return Math.ceil((this.clone().clearTime() - new Date(this.getFullYear(), 0, 1)) / 864E5) + 1
    };
    e.getTimezone = function () {
        return a.getTimezoneAbbreviation(this.getUTCOffset())
    };
    e.setT= o - n;
                q = 0;
                u = b - 1 + 31 * (c - 1)
            } else {
                l = g;
                o = (l / 4 | 0) - (l / 100 | 0) + (l / 400 | 0);
                n = ((l - 1) / 4 | 0) - ((l - 1) / 100 | 0) + ((l - 1) / 400 | 0);
                n = o - n;
                q = n + 1;
                u = b + (153 * (c - 3) + 2) / 5 + 58 + n
            }
            l = (l + o) % 7;
            o = u + 3 - (u + l - q) % 7 | 0;
            n = o < 0 ? 53 - ((l - n) / 5 | 0) : o > 364 + n ? 1 : (o / 7 | 0) + 1;
            g = c = b = null;
            return n
    };
    e.getISOWeek = function () {
        g = this.getUTCFullYear();
        c = this.getUTCMonth() + 1;
        b = this.getUTCDate();
        return j(this.getWeek())
    };
    e.setWeek = function (l) {
        return this.moveToDayOfWeek(1).addWeeks(l - this.getWeek())
    };
    a._validate = function (l, o, n, q) {
        if (typeof l == "undefined") return false;
        else if (typeof l != "number") throw new TypeError(l + " is not a Number.");
        else if (l < o || l > n) throw new RangeError(l + " is not a valid value for " + q + ".");
        return true
    };
    a.validateMillisecond = function (l) {
        return a._validate(l, 0, 999, "millisecond")
    };
    a.validateSecond = function (l) {
        return a._validate(l, 0, 59, "second")
    };
    a.validateMinute = function (l) {
        return a._validate(l,
            0, 59, "minute")
    };
    a.validateHour = function (l) {
        return a._validate(l, 0, 23, "hour")
    };
    a.validateDay = function (l, o, n) {
        return a._validate(l, 1, a.getDaysInMonth(o, n), "day")
    };
    a.validateMonth = function (l) {
        return a._validate(l, 0, 11, "month")
    };
    a.validateYear = function (l) {
        return a._validate(l, 0, 9999, "year")
    };
    e.set = function (l) {
        a.validateMillisecond(l.millisecond) && this.addMilliseconds(l.millisecond - this.getMilliseconds());
        a.validateSecond(l.second) && this.addSeconds(l.second - this.getSeconds());
        a.validateMinute(l.minute) &&
            this.addMinutes(l.minute - this.getMinutes());
        a.validateHour(l.hour) && this.addHours(l.hour - this.getHours());
        a.validateMonth(l.month) && this.addMonths(l.month - this.getMonth());
        a.validateYear(l.year) && this.addYears(l.year - this.getFullYear());
        a.validateDay(l.day, this.getFullYear(), this.getMonth()) && this.addDays(l.day - this.getDate());
        l.timezone && this.setTimezone(l.timezone);
        l.timezoneOffset && this.setTimezoneOffset(l.timezoneOffset);
        l.week && a._validate(l.week, 0, 53, "week") && this.setWeek(l.week);
        return this
    };
    e.moveToFirstDayOfMonth = function () {
        return this.set({
            day: 1
        })
    };
    e.moveToLastDayOfMonth = function () {
        return this.set({
            day: a.getDaysInMonth(this.getFullYear(), this.getMonth())
        })
    };
    e.moveToNthOccurrence = function (l, o) {
        var n = 0;
        if (o > 0) n = o - 1;
        else if (o === -1) {
            this.moveToLastDayOfMonth();
            this.getDay() !== l && this.moveToDayOfWeek(l, -1);
            return this
        }
        return this.moveToFirstDayOfMonth().addDays(-1).moveToDayOfWeek(l, +1).addWeeks(n)
    };
    e.moveToDayOfWeek = function (l, o) {
        var n = (l - this.getDay() + 7 * (o || +1)) % 7;
        return this.addDays(n ===
            0 ? n += 7 * (o || +1) : n)
    };
    e.moveToMonth = function (l, o) {
        var n = (l - this.getMonth() + 12 * (o || +1)) % 12;
        return this.addMonths(n === 0 ? n += 12 * (o || +1) : n)
    };
    e.getOrdinalNumber = function () {
        return Math.ceil((this.clone().clearTime() - new Date(this.getFullYear(), 0, 1)) / 864E5) + 1
    };
    e.getTimezone = function () {
        return a.getTimezoneAbbreviation(this.getUTCOffset())
    };
    e.setTimezoneOffset = function (l) {
        var o = this.getTimezoneOffset();
        return this.addMinutes(Number(l) * -6 / 10 - o)
    };
    e.setTimezone = function (l) {
        return this.setTimezoneOffset(a.getTimezoneOffset(l))
    };
    e.hasDaylightSavingTime = function () {
        return Date.today().set({
            month: 0,
            day: 1
        }).getTimezoneOffset() !== Date.today().set({
            month: 6,
            day: 1
        }).getTimezoneOffset()
    };
    e.isDaylightSavingTime = function () {
        return this.hasDaylightSavingTime() && (new Date).getTimezoneOffset() === Date.today().set({
            month: 6,
            day: 1
        }).getTimezoneOffset()
    };
    e.getUTCOffset = function () {
        var l = this.getTimezoneOffset() * -10 / 6;
        if (l < 0) {
            l = (l - 1E4).toString();
            return l.charAt(0) + l.substr(2)
        } else {
            l = (l + 1E4).toString();
            return "+" + l.substr(1)
        }
    };
    e.getElapsed = function (l) {
        return (l ||
            new Date) - this
    };
    if (!e.toISOString) e.toISOString = function () {
        function l(o) {
            return o < 10 ? "0" + o : o
        }
        return '"' + this.getUTCFullYear() + "-" + l(this.getUTCMonth() + 1) + "-" + l(this.getUTCDate()) + "T" + l(this.getUTCHours()) + ":" + l(this.getUTCMinutes()) + ":" + l(this.getUTCSeconds()) + 'Z"'
    };
    e._toString = e.toString;
    e.toString = function (l) {
        var o = this;
        if (l && l.length == 1) {
            var n = f.formatPatterns;
            o.t = o.toString;
            switch (l) {
            case "d":
                return o.t(n.shortDate);
            case "D":
                return o.t(n.longDate);
            case "F":
                return o.t(n.fullDateTime);
            case "m":
                return o.t(n.monthDay);
            case "r":
                return o.t(n.rfc1123);
            case "s":
                return o.t(n.sortableDateTime);
            case "t":
                return o.t(n.shortTime);
            case "T":
                return o.t(n.longTime);
            case "u":
                return o.t(n.universalSortableDateTime);
            case "y":
                return o.t(n.yearMonth)
            }
        }
        var q = function (u) {
            switch (u * 1) {
            case 1:
            case 21:
            case 31:
                return "st";
            case 2:
            case 22:
                return "nd";
            case 3:
            case 23:
                return "rd";
            default:
                return "th"
            }
        };
        return l ? l.replace(/(\\)?(dd?d?d?|MM?M?M?|yy?y?y?|hh?|HH?|mm?|ss?|tt?|S)/g, function (u) {
            if (u.charAt(0) === "\\") return u.replace("\\", "");
            o.h = o.getHours;
            switch (u) {
            case "hh":
                return j(o.h() < 13 ? o.h() === 0 ? 12 : o.h() : o.h() - 12);
            case "h":
                return o.h() < 13 ? o.h() === 0 ? 12 : o.h() : o.h() - 12;
            case "HH":
                return j(o.h());
            case "H":
                return o.h();
            case "mm":
                return j(o.getMinutes());
            case "m":
                return o.getMinutes();
            case "ss":
                return j(o.getSeconds());
            case "s":
                return o.getSeconds();
            case "yyyy":
                return j(o.getFullYear(), 4);
            case "yy":
                return j(o.getFullYear());
            case "dddd":
                return f.dayNames[o.getDay()];
            case "ddd":
                return f.abbreviatedDayNames[o.getDay()];
            case "dd":
                return j(o.getDate());
            case "d":
                return o.getDate();
            case "MMMM":
                return f.monthNames[o.getMonth()];
            case "MMM":
                return f.abbreviatedMonthNames[o.getMonth()];
            case "MM":
                return j(o.getMonth() + 1);
            case "M":
                return o.getMonth() + 1;
            case "t":
                return o.h() < 12 ? f.amDesignator.substring(0, 1) : f.pmDesignator.substring(0, 1);
            case "tt":
                return o.h() < 12 ? f.amDesignator : f.pmDesignator;
            case "S":
                return q(o.getDate());
            default:
                return u
            }
        }) : this._toString()
    }
})();
(function () {
    var a = Date,
        e = a.prototype,
        f = a.CultureInfo,
        j = Number.prototype;
    e._orient = +1;
    e._nth = null;
    e._is = false;
    e._same = false;
    e._isSecond = false;
    j._dateElement = "day";
    e.next = function () {
        this._orient = +1;
        return this
    };
    a.next = function () {
        return a.today().next()
    };
    e.last = e.prev = e.previous = function () {
        this._orient = -1;
        return this
    };
    a.last = a.prev = a.previous = function () {
        return a.today().last()
    };
    e.is = function () {
        this._is = true;
        return this
    };
    e.same = function () {
        this._same = true;
        this._isSecond = false;
        return this
    };
    e.today = function () {
        return this.same().day()
    };
    e.weekday = function () {
        if (this._is) {
            this._is = false;
            return !this.is().sat() && !this.is().sun()
        }
        return false
    };
    e.at = function (v) {
        return typeof v === "string" ? a.parse(this.toString("d") + " " + v) : this.set(v)
    };
    j.fromNow = j.after = function (v) {
        var x = {};
        x[this._dateElement] = this;
        return (!v ? new Date : v.clone()).add(x)
    };
    j.ago = j.before = function (v) {
        var x = {};
        x[this._dateElement] = this * -1;
        return (!v ? new Date : v.clone()).add(x)
    };
    var g = "sunday monday tuesday wednesday thursday friday saturday".split(/\s/),
        c = "january february march april may june july august september october november december".split(/\s/),
        b = "Millisecond Second Minute Hour Day Week Month Year".split(/\s/),
        l = "Milliseconds Seconds Minutes Hours Date Week Month FullYear".split(/\s/),
        o = "final first second third fourth fifth".split(/\s/);
    e.toObject = function () {
        for (var v = {}, x = 0; x < b.length; x++) v[b[x].toLowerCase()] = this["get" + l[x]]();
        return v
    };
    a.fromObject = function (v) {
        v.week = null;
        return Date.today().set(v)
    };
    for (var n = function (v) {
        return function () {
            if (this._is) {
                this._is = false;
                return this.getDay() == v
            }
            if (this._nth !== null) {
                this._isSecond && this.addSeconds(this._orient * -1);
                this._isSecond = false;
                var x = this._nth;
                this._nth = null;
                var z = this.clone().moveToLastDayOfMonth();
                this.moveToNthOccurrence(v, x);
                if (this > z) throw new RangeError(a.getDayName(v) + " does not occur " + x + " times in the month of " + a.getMonthName(z.getMonth()) + " " + z.getFullYear() + ".");
                return this
            }
            return this.moveToDayOfWeek(v, this._orient)
        }
    }, q = function (v) {
            return function () {
                var x = a.today(),
                    z = v - x.getDay();
                if (v === 0 && f.firstDayOfWeek === 1 && x.getDay() !== 0) z += 7;
                return x.addDays(z)
            }
        }, u = 0; u < g.length; u++) {
        a[g[u].toUpperCase()] =
            a[g[u].toUpperCase().substring(0, 3)] = u;
        a[g[u]] = a[g[u].substring(0, 3)] = q(u);
        e[g[u]] = e[         return function (b) {
                    var l = null;
                    try {
                        l = c.call(this, b)
                    } catch (o) {
                        return [null, b]
                    }
                    return [l[0], l[1]]
                }
            },
            not: function (c) {
                return function (b) {
                    try {
                        c.call(this, b)
                    } catch (l) {
                        return [null, b]
                    }
                    throw new a.Exception(b);
                }
            },
            ignore: function (c) {
                return c ? function (b) {
                    var l = null;
                    l = c.call(this, b);
                    return [null, l[1]]
                } : null
            },
            product: function () {
                for (var c =
                    arguments[0], b = Array.prototype.slice.call(arguments, 1), l = [], o = 0; o < c.length; o++) l.push(e.each(c[o], b));
                return l
            },
            cache: function (c) {
                var b = {}, l = null;
                return function (o) {
                    try {
                        l = b[o] = b[o] || c.call(this, o)
                    } catch (n) {
                        l = b[o] = n
                    }
                    if (l instanceof a.Exception) throw l;
                    else return l
                }
            },
            any: function () {
                var c = arguments;
                return function (b) {
                    for (var l = null, o = 0; o < c.length; o++)
                        if (c[o] != null) {
                            try {
                                l = c[o].call(this, b)
                            } catch (n) {
                                l = null
                            }
                            if (l) return l
                        }
                    throw new a.Exception(b);
                }
            },
            each: function () {
                var c = arguments;
                return function (b) {
                    for (var l = [], o = null, n = 0; n < c.length; n++)
                        if (c[n] != null) {
                            try {
                                o = c[n].call(this, b)
                            } catch (q) {
                                throw new a.Exception(b);
                            }
                            l.push(o[0]);
                            b = o[1]
                        }
                    return [l, b]
                }
            },
            all: function () {
                var c = c;
                return c.each(c.optional(arguments))
            },
            sequence: function (c, b, l) {
                b = b || e.rtoken(/^\s*/);
                l = l || null;
                if (c.length == 1) return c[0];
                return function (o) {
                    for (var n = null, q = null, u = [], v = 0; v < c.length; v++) {
                        try {
                            n = c[v].call(this, o)
                        } catch (x) {
                            break
                        }
                        u.push(n[0]);
                        try {
                            q = b.call(this, n[1])
                        } catch (z) {
                            q = null;
                            break
                        }
                        o = q[1]
                    }
                    if (!n) throw new a.Exception(o);
                    if (q) throw new a.Exception(q[1]);
                    if (l) try {
                        n = l.call(this, n[1])
                    } catch (B) {
                        throw new a.Exception(n[1]);
                    }
                    return [u, n ? n[1] : o]
                }
            },
            between: function (c, b, l) {
                l = l || c;
                var o = e.each(e.ignore(c), b, e.ignore(l));
                return function (n) {
                    n = o.call(this, n);
                    return [[n[0][0], r[0][2]], n[1]]
                }
            },
            list: function (c, b, l) {
                b = b || e.rtoken(/^\s*/);
                l = l || null;
                return c instanceof Array ? e.each(e.product(c.slice(0, -1), e.ignore(b)), c.slice(-1), e.ignore(l)) : e.each(e.many(e.each(c, e.ignore(b))), px, e.ignore(l))
            },
            set: function (c, b, l) {
                b = b || e.rtoken(/^\s*/);
                l = l || null;
                return function (o) {
                    var n =
                        null;
                    for (var q = n = null, u = null, v = [
                            [], o
                        ], x = false, z = 0; z < c.length; z++) {
                        n = q = null;
                        x = c.length == 1;
                        try {
                            n = c[z].call(this, o)
                        } catch (B) {
                            continue
                        }
                        u = [
                            [n[0]], n[1]
                        ];
                        if (n[1].length > 0 && !x) try {
                            q = b.call(this, n[1])
                        } catch (C) {
                            x = true
                        } else x = true;
                        if (!x && q[1].length === 0) x = true;
                        if (!x) {
                            n = [];
                            for (x = 0; x < c.length; x++) z != x && n.push(c[x]);
                            n = e.set(n, b).call(this, q[1]);
                            if (n[0].length > 0) {
                                u[0] = u[0].concat(n[0]);
                                u[1] = n[1]
                            }
                        }
                        if (u[1].length < v[1].length) v = u;
                        if (v[1].length === 0) break
                    }
                    if (v[0].length === 0) return v;
                    if (l) {
                        try {
                            q = l.call(this, v[1])
                        } catch (w) {
                            throw new a.Exception(v[1]);
                        }
                        v[1] = q[1]
                    }
                    return v
                }
            },
            forward: function (c, b) {
                return function (l) {
                    return c[b].call(this, l)
                }
            },
            replace: function (c, b) {
                return function (l) {
                    l = c.call(this, l);
                    return [b, l[1]]
                }
            },
            process: function (c, b) {
                return function (l) {
                    l = c.call(this, l);
                    return [b.call(this, l[0]), l[1]]
                }
            },
            min: function (c, b) {
                return function (l) {
                    var o = b.call(this, l);
                    if (o[0].length < c) throw new a.Exception(l);
                    return o
                }
            }
        }, f = function (c) {
            return function () {
                var b = null,
                    l = [];
                if (arguments.length > 1) b = Array.prototype.slice.call(arguments);
                else if (arguments[0] instanceof Array) b = arguments[0];
                if (b)
                    for (var o = b.shift(); 0 < o.length;) {
                        b.unshift(o[0]);
                        l.push(c.apply(null, b));
                        b.shift();
                        return l
                    } else return c.apply(null, arguments)
            }
        }, j = "optional not ignore cache".split(/\s/), g = 0; g < j.length; g++) e[j[g]] = f(e[j[g]]);
    f = function (c) {
        return function () {
            return arguments[0] instanceof Array ? c.apply(null, arguments[0]) : c.apply(null, arguments)
        }
    };
    j = "each any all".split(/\s/);
    for (g = 0; g < j.length; g++) e[j[g]] = f(e[j[g]])
})();
(function () {
    var a = Date,
        e = a.CultureInfo,
        f = function (n) {
            for (var q = [], u = 0; u < n.length; u++)
                if (n[u] instanceof Array) q = q.concat(f(n[u]));
                else n[u] && q.push(n[u]);
            return q
        };
    a.Grammar = {};
    a.Translator = {
        hour: function (n) {
            return function () {
                this.hour = Number(n)
            }
        },
        minute: function (n) {
            return function () {
                this.minute = Number(n)
            }
        },
        second: function (n) {
            return function () {
                this.second = Number(n)
            }
        },
        meridian: function (n) {
            return function () {
                this.meridian = n.slice(0, 1).toLowerCase()
            }
        },
        timezone: function (n) {
            return function () {
                var q = n.replace(/[^\d\+\-]/g,
                    "");
                if (q.length) this.timezoneOffset = Number(q);
                else this.timezone = n.toLowerCase()
            }
        },
        day: function (n) {
            var q = n[0];
            return function () {
                this.day = Number(q.match(/\d+/)[0])
            }
        },
        month: function (n) {
            return function () {
                this.month = n.length == 3 ? "jan feb mar apr may jun jul aug sep oct nov dec".indexOf(n) / 4 : Number(n) - 1
            }
        },
        year: function (n) {
            return function () {
                var q = Number(n);
                this.year = n.length > 2 ? q : q + (q + 2E3 < e.twoDigitYearMax ? 2E3 : 1900)
            }
        },
        rday: function (n) {
            return function () {
                switch (n) {
                case "yesterday":
                    this.days = -1;
                    break;
                case "tomorrow":
                    this.days =
                        1;
                    break;
                case "today":
                    this.days = 0;
                    break;
                case "now":
                    this.days = 0;
                    this.now = true
                }
            }
        },
        finishExact: function (n) {
            n = n instanceof Array ? n : [n];
            for (var q = 0; q < n.length; q++) n[q] && n[q].call(this);
            n = new Date;
            if ((this.hour || this.minute) && !this.month && !this.year && !this.day) this.day = n.getDate();
            if (!this.year) this.year = n.getFullYear();
            if (!this.month && this.month !== 0) this.month = n.getMonth();
            if (!this.day) this.day = 1;
            if (!this.hour) this.hour = 0;
            if (!this.minute) this.minute = 0;
            if (!this.second) this.second = 0;
            if (this.meridian && this.hour)
                if (this.meridian ==
                    "p" && this.hour < 12) this.hour += 12;
                else if (this.meridian == "a" && this.hour == 12) this.hour = 0;
            if (this.day > a.getDaysInMonth(this.year, this.month)) throw new RangeError(this.day + " is not a valid value for days.");
            n = new Date(this.year, this.month, this.day, this.hour, this.minute, this.second);
            if (this.timezone) n.set({
                timezone: this.timezone
            });
            else this.timezoneOffset && n.set({
                timezoneOffset: this.timezoneOffset
            });
            return n
        },
        finish: function (n) {
            n = n instanceof Array ? f(n) : [n];
            if (n.length === 0) return null;
            for (var q = 0; q < n.length; q++) typeof n[q] ==
                "function" && n[q].call(this);
            n = a.today();
            if (this.now && !this.unit && !this.operator) return new Date;
            else if (this.now) n = new Date;
            q = !! (this.days && this.days !== null || this.orient || this.operator);
            var u, v, x;
            x = this.orient == "past" || this.operator == "subtract" ? -1 : 1;
            !this.now && "hour minute second".indexOf(this.unit) != -1 && n.setTimeToNow();
            if (this.month || this.month === 0)
                if ("year day hour minute second".indexOf(this.unit) != -1) {
                    this.value = this.month + 1;
                    this.month = null;
                    q = true
                }
            if (!q && this.weekday && !this.day && !this.days) {
                u =
                    Date[this.weekday]();
                this.day = u.getDate();
                if (!this.month) this.month = u.getMonth();
                this.year = u.getFullYear()
            }
            if (q && this.weekday && this.unit != "month") {
                this.unit = "day";
                u = a.getDayNumberFromName(this.weekday) - n.getDay();
                v = 7;
                this.days = u ? (u + x * v) % v : x * v
            }
            if (this.month && this.unit == "day" && this.operator) {
                this.value = this.month + 1;
                this.month = null
            }
            if (this.value != null && this.month != null && this.year != null) this.day = this.value * 1;
            if (this.month && !this.day && this.value) {
                n.set({
                    day: this.value * 1
                });
                if (!q) this.day = this.value * 1
            }
            if (!this.month &&
                this.value && this.unit == "month" && !this.now) {
                this.month = this.value;
                q = true
            }
            if (q && (this.month || this.month === 0) && this.unit != "year") {
                this.unit = "month";
                u = this.month - n.getMonth();
                v = 12;
                this.months = u ? (u + x * v) % v : x * v;
                this.month = null
            }
            if (!this.unit) this.unit = "day";
            if (!this.value && this.operator && this.operator !== null && this[this.unit + "s"] && this[this.unit + "s"] !== null) this[this.unit + "s"] = this[this.unit + "s"] + (this.operator == "add" ? 1 : -1) + (this.value || 0) * x;
            else if (this[this.unit + "s"] == null || this.operator != null) {
                if (!this.value) this.value =
                    1;
                this[this.unit + "s"] = this.value * x
            }
            if (this.meridian && this.hour)
                if (this.meridian == "p" && this.hour < 12) this.hour += 12;
                else if (this.meridian == "a" && this.hour == 12) this.hour = 0;
            if (this.weekday && !this.day && !this.days) {
                u = Date[this.weekday]();
                this.day = u.getDate();
                if (u.getMonth() !== n.getMonth()) this.month = u.getMonth()
            }
            if ((this.month || this.month === 0) && !this.day) this.day = 1;
            if (!this.orient && !this.operator && this.unit == "week" && this.value && !this.day && !this.month) return Date.today().setWeek(this.value);
            if (q && this.timezone &&
                this.day && this.days) this.day = this.days;
            return q ? n.add(this) : n.set(this)
        }
    };
    var j = a.Parsing.Operators,
        g = a.Grammar,
        c = a.Translator,
        b;
    g.datePartDelimiter = j.rtoken(/^([\s\-\.\,\/\x27]+)/);
    g.timePartDelimiter = j.stoken(":");
    g.whiteSpace = j.rtoken(/^\s*/);
    g.generalDelimiter = j.rtoken(/^(([\s\,]|at|@|on)+)/);
    var l = {};
    g.ctoken = function (n) {
        var q = l[n];
        if (!q) {
            q = e.regexPatterns;
            for (var u = n.split(/\s+/), v = [], x = 0; x < u.length; x++) v.push(j.replace(j.rtoken(q[u[x]]), u[x]));
            q = l[n] = j.any.apply(null, v)
        }
        return q
    };
    g.ctoken2 =
        function (n) {
            return j.rtoken(e.regexPatterns[n])
    };
    g.h = j.cache(j.process(j.rtoken(/^(0[0-9]|1[0-2]|[1-9])/), c.hour));
    g.hh = j.cache(j.process(j.rtoken(/^(0[0-9]|1[0-2])/), c.hour));
    g.H = j.cache(j.process(j.rtoken(/^([0-1][0-9]|2[0-3]|[0-9])/), c.hour));
    g.HH = j.cache(j.process(j.rtoken(/^([0-1][0-9]|2[0-3])/), c.hour));
    g.m = j.cache(j.process(j.rtoken(/^([0-5][0-9]|[0-9])/), c.minute));
    g.mm = j.cache(j.process(j.rtoken(/^[0-5][0-9]/), c.minute));
    g.s = j.cache(j.process(j.rtoken(/^([0-5][0-9]|[0-9])/), c.second));
    g.ss =
        j.cache(j.process(j.rtoken(/^[0-5][0-9]/), c.second));
    g.hms = j.cache(j.sequence([g.H, g.m, g.s], g.timePartDelimiter));
    g.t = j.cache(j.process(g.ctoken2("shortMeridian"), c.meridian));
    g.tt = j.cache(j.process(g.ctoken2("longMeridian"), c.meridian));
    g.z = j.cache(j.process(j.rtoken(/^((\+|\-)\s*\d\d\d\d)|((\+|\-)\d\d\:?\d\d)/), c.timezone));
    g.zz = j.cache(j.process(j.rtoken(/^((\+|\-)\s*\d\d\d\d)|((\+|\-)\d\d\:?\d\d)/), c.timezone));
    g.zzz = j.cache(j.process(g.ctoken2("timezone"), c.timezone));
    g.timeSuffix = j.each(j.ignore(g.whiteSpace),
        j.set([g.tt, g.zzz]));
    g.time = j.each(j.optional(j.ignore(j.stoken("T"))), g.hms, g.timeSuffix);
    g.d = j.cache(j.process(j.each(j.rtoken(/^([0-2]\d|3[0-1]|\d)/), j.optional(g.ctoken2("ordinalSuffix"))), c.day));
    g.dd = j.cache(j.process(j.each(j.rtoken(/^([0-2]\d|3[0-1])/), j.optional(g.ctoken2("ordinalSuffix"))), c.day));
    g.ddd = g.dddd = j.cache(j.process(g.ctoken("sun mon tue wed thu fri sat"), function (n) {
        return function () {
            this.weekday = n
        }
    }));
    g.M = j.cache(j.process(j.rtoken(/^(1[0-2]|0\d|\d)/), c.month));
    g.MM = j.cache(j.process(j.rtoken(/^(1[0-2]|0\d)/),
        c.month));
    g.MMM = g.MMMM = j.cache(j.process(g.ctoken("jan feb mar apr may jun jul aug sep oct nov dec"), c.month));
    g.y = j.cache(j.process(j.rtoken(/^(\d\d?)/), c.year));
    g.yy = j.cache(j.process(j.rtoken(/^(\d\d)/), c.year));
    g.yyy = j.cache(j.process(j.rtoken(/^(\d\d?\d?\d?)/), c.year));
    g.yyyy = j.cache(j.process(j.rtoken(/^(\d\d\d\d)/), c.year));
    b = function () {
        return j.each(j.any.apply(null, arguments), j.not(g.ctoken2("timeContext")))
    };
    g.day = b(g.d, g.dd);
    g.month = b(g.M, g.MMM);
    g.year = b(g.yyyy, g.yy);
    g.orientation = j.process(g.ctoken("past future"),
        function (n) {
            return function () {
                this.orient = n
            }
        });
    g.operator = j.process(g.ctoken("add subtract"), function (n) {
        return function () {
            this.operator = n
        }
    });
    g.rday = j.process(g.ctoken("yesterday tomorrow today now"), c.rday);
    g.unit = j.process(g.ctoken("second minute hour day week month year"), function (n) {
        return function () {
            this.unit = n
        }
    });
    g.value = j.process(j.rtoken(/^\d\d?(st|nd|rd|th)?/), function (n) {
        return function () {
            this.value = n.replace(/\D/g, "")
        }
    });
    g.expression = j.set([g.rday, g.operator, g.value, g.unit, g.orientation,
        g.ddd, g.MMM
    ]);
    b = function () {
        return j.set(arguments, g.datePartDelimiter)
    };
    g.mdy = b(g.ddd, g.month, g.day, g.year);
    g.ymd = b(g.ddd, g.year, g.month, g.day);
    g.dmy = b(g.ddd, g.day, g.month, g.year);
    g.date = function (n) {
        return (g[e.dateElementOrder] || g.mdy).call(this, n)
    };
    g.format = j.process(j.many(j.any(j.process(j.rtoken(/^(dd?d?d?|MM?M?M?|yy?y?y?|hh?|HH?|mm?|ss?|tt?|zz?z?)/), function (n) {
            if (g[n]) return g[n];
            else throw a.Parsing.Exception(n);
        }), j.process(j.rtoken(/^[^dMyhHmstz]+/), function (n) {
            return j.ignore(j.stoken(n))
        }))),
        function (n) {
            return j.process(j.each.apply(null, n), c.finishExact)
        });
    var o = {};
    g.formats = function (n) {
        if (n instanceof Array) {
            for (var q = [], u = 0; u < n.length; u++) q.push(o[n[u]] = o[n[u]] || g.format(n[u])[0]);
            return j.any.apply(null, q)
        } else return o[n] = o[n] || g.format(n)[0]
    };
    g._formats = g.formats(['"yyyy-MM-ddTHH:mm:ssZ"', "yyyy-MM-ddTHH:mm:ssZ", "yyyy-MM-ddTHH:mm:ssz", "yyyy-MM-ddTHH:mm:ss", "yyyy-MM-ddTHH:mmZ", "yyyy-MM-ddTHH:mmz", "yyyy-MM-ddTHH:mm", "ddd, MMM dd, yyyy H:mm:ss tt", "ddd MMM d yyyy HH:mm:ss zzz", "MMddyyyy",
        "ddMMyyyy", "Mddyyyy", "ddMyyyy", "Mdyyyy", "dMyyyy", "yyyy", "Mdyy", "dMyy", "d"
    ]);
    g._start = j.process(j.set([g.date, g.time, g.expression], g.generalDelimiter, g.whiteSpace), c.finish);
    g.start = function (n) {
        try {
            var q = g._formats.call({}, n);
            if (q[1].length === 0) return q
        } catch (u) {}
        return g._start.call({}, n)
    };
    a._parse = a.parse;
    a.parse = function (n) {
        var q = null;
        if (!n) return null;
        if (n instanceof Date) return n;
        try {
            q = a.Grammar.start.call({}, n.replace(/^\s*(\S*(\s+\S+)*)\s*$/, "$1"))
        } catch (u) {
            return null
        }
        return q[1].length ===
            0 ? q[0] : null
    };
    a.getParseFunction = function (n) {
        var q = a.Grammar.formats(n);
        return function (u) {
            var v = null;
            try {
                v = q.call({}, u)
            } catch (x) {
                return null
            }
            return v[1].length === 0 ? v[0] : null
        }
    };
    a.parseExact = function (n, q) {
        return a.getParseFunction(q)(n)
    }
})();
(function () {
    var a = {}, e = {};
    $.getTemplate = function (f, j) {
        if (e[f])
            if (a[f]) j(a[f]);
            else var g = setInterval(function () {
                if (a[f]) {
                    clearInterval(g);
                    j(a[f])
                }
            }, 20);
            else {
                e[f] = 1;
                var c = $("div.widgetTemplates div[templatefile='" + f + "']");
                if (c[0]) {
                    a[f] = c[0].innerHTML;
                    e[f] = 2;
                    j(c[0].innerHTML)
                } else $.ajax({
                    url: f,
                    cache: false,
                    type: "GET",
                    dataType: "html",
                    success: function (b) {
                        a[f] = b;
                        e[f] = 2;
                        j(b)
                    }
                })
            }
    }
})();
$.fn.makeLiveForm = function (a, e, f, j) {
    this.each(function () {
        var g = $(this),
            c = false;
        if (g.parents(".liveFormWrap")[0]) c = g.parents(".liveFormWrap").eq(0);
        else if (g.parents("div")[0]) c = g.parents("div").eq(0);
        if (c) {
            g.data("liveform") == true && console_log(g, "is already a live form!");
            g.data("liveform", true);
            g.ajaxForm({
                target: g.parents(".liveFormWrap").eq(0),
                beforeSubmit: function (b, l, o) {
                    if (!formValidateFilled(j, g)) return false;
                    if (typeof a == "function") return a.call(l, b, l, o)
                },
                cache: false,
                success: function () {
                    c.html(hookScan(c.html().replace(/<!--.*?--\>/g,
                        "")));
                    c.find("form.liveForm").not(".isLiveForm").makeLiveForm();
                    enliven(c);
                    typeof e == "function" && e.call(c, c);
                    c.trigger("liveFormComplete")
                },
                afterError: function (b, l, o) {
                    typeof f == "function" && f(b, l, o)
                }
            })
        }
    });
    return this
};

function formValidateFilled(a, e) {
    e = $(e);
    if (typeof a == "object")
        for (var f in a) {
            var j = e.find("[name=" + a[f] + "]");
            if (j.val()) j.removeClass("unfilled");
            else {
                j.addClass("unfilled");
                alert("You did not complete one or more required form fields.");
                j.focus();
                return false
            }
        }
    return true
}
$.fn.checkDrop = function () {
    this.each(function () {
        var a = $(this),
            e;
        a.wrap('<div class="checkDropWrap"></div>');
        a.prepend('<div class="clickOpen">Click to Select</div>');
        var f = a.find(".clickOpen"),
            j = a.closest(".checkDropWrap");
        f.text(a.find("input:checked").length + "/" + a.find("input[type=checkbox]").length + " selected");
        a.find("input,label").bind("click", function () {
            a.find(".clickOpen").text(a.find("input:checked").length + "/" + a.find("input[type=checkbox]").length + " selected");
            a.data("changed", true)
        });
        f.bind("click",
            function () {
                a.addClass("open");
                if ($.browser.msie) {
                    var g = a.offset().top,
                        c = a.offset().left;
                    a.appendTo("body");
                    a.css({
                        top: g + "px",
                        left: c + "px",
                        position: "absolute",
                        "z-index": 3E5
                    })
                }
                e && clearTimeout(e);
                if (a.offset().top + a.outerHeight() > $(window).scrollTop() + $(window).height()) {
                    g = 50 + a.offset().top + a.height() - $(window).height();
                    $(window).scrollTop(g)
                }
            });
        a.bind("mouseleave", function () {
            e = setTimeout(function () {
                a.removeClass("open");
                if ($.browser.msie) {
                    a.appendTo(j);
                    a.css({
                        top: "",
                        left: "",
                        position: "static"
                    });
                    if (a.data("changed")) {
                        a.removeData("changed");
                        a.trigger("doIEAutoSubmit")
                    }
                }
            }, 1E3)
        })
    })
};

function blankerConfirm(a, e, f, j, g) {
    var c = function () {
        a.data("blankerConfirmed", {
            confirmed: true
        });
        a.trigger("submit");
        blankerCancel.call(this)
    }, b = blankerCancel;
    if (a.data("blankerConfirmed") && a.data("blankerConfirmed").confirmed) return typeof g == "function" ? g.call(a) : true;
    else {
        var l = [],
            o = [];
        $.each(j, function (n, q) {
            l[n] = q.title;
            o[n] = q.value ? c : b
        });
        showBlanker({
            buttons: l,
            callbacks: o,
            title: e,
            text: f
        });
        return false
    }
}

function submitAndClose() {
    $(this).trigger("close_request", {
        refresh: true
    })
}
$("input.fixHostnamePort").live("blur", function () {
    var a = $(this),
        e;
    if (e = a.val().match(/:([0-9]+)$/)) {
        a.closest("form").find("input.fixHostnamePortDestination").val(e[1]);
        a.val(a.val().replace(RegExp(e[0] + "$"), ""))
    }
});
$.fn.contextMenu = function (a, e) {
    e = $.extend(false, {}, {
        position: "mouse",
        doubleClickFirst: true,
        preventDefault: true,
        cursor: "pointer",
        parentCursor: "pointer"
    }, e);
    this.each(function () {
        var f = $(this),
            j = false,
            g = false;
        e.parentCursor && f.css("cursor", e.parentCursor);
        e.doubleClickFirst && f.bind("dblclick", function (c) {
            g = true;
            if (j) {
                clearTimeout(j);
                j = false
            }
            a[0].event && f.trigger(a[0].event);
            a[0].fn && a[0].fn.call(f, c);
            setTimeout(function () {
                g = false
            }, 800);
            $(".popupContextMenu").remove()
        });
        f.bind("click", function (c) {
            var b =
                $(this);
            e.preventDefault && c.preventDefault();
            j = setTimeout(function () {
                j = false;
                if (!g) {
                    var l = b.offset().top,
                        o = b.offset().left,
                        n = b.height(),
                        q = b.width(),
                        u = "jqContext" + Math.floor(Math.random() * 1E6);
                    $(".popupContextMenu").remove();
                    var v = '<ul class="popupContextMenu" id="' + u + '-menu"';
                    if (e.cursor) v += 'style="cursor:' + e.cursor + '"';
                    v += ">";
                    $.each(a, function () {
                        v += "<li>";
                        if (this.href) {
                            v += '<a href="' + this.href + '"';
                            if (this.target) v += ' target="' + this.target + '"';
                            v += ">"
                        }
                        v += this.title;
                        if (this.href) v += "</a>";
                        v += "</li>"
                    });
                    v += "</ul>";
                    $("body").append(v);
                    var x = $("#" + u + "-menu"),
                        z = setTimeout(function () {
                            x.remove()
                        }, 5E3);
                    e.position == "under" ? x.show().css({
                        top: l + n + "px",
                        left: o + "px",
                        "min-width": q + "px"
                    }) : x.show().css({
                        top: c.pageY - 2 + "px",
                        left: c.pageX - 2 + "px"
                    });
                    x.find("li").bind("click", function () {
                        var B = $(this).closest("ul").find("li").index(this);
                        a[B].event && f.trigger(a[0].event);
                        a[B].fn && a[B].fn.call(f, c);
                        $(".popupContextMenu").remove()
                    });
                    x.bind("mouseenter", function () {
                        z && clearTimeout(z);
                        z = false
                    });
                    x.bind("mouseleave", function () {
                        z &&
                            clearTimeout(z);
                        z = setTimeout(function () {
                            x.remove()
                        }, 1500)
                    })
                }
            }, 500)
        })
    })
};
(function (a) {
    function e(b) {
        function l(o) {
            var n = RegExp(a.map(o, encodeURIComponent).join("|"), "ig");
            return function (q) {
                return q.replace(n, decodeURIComponent)
            }
        }
        b = a.extend({
            unescape: false
        }, b || {});
        f.encoder = function (o) {
            if (o === true) return function (n) {
                return n
            };
            if (typeof o == "string" && (o = l(o.split(""))) || typeof o == "function") return function (n) {
                return o(encodeURIComponent(n))
            };
            return encodeURIComponent
        }(b.unescape)
    }
    var f = {
        put: function (b, l) {
            (l || window).location.hash = this.encoder(b)
        },
        get: funct () {
        var f = $(this),
            j = false,
            g = false;
        e.parentCursor && f.css("cursor", e.parentCursor);
        e.doubleClickFirst && f.bind("dblclick", function (c) {
            g = true;
            if (j) {
                clearTimeout(j);
                j = false
            }
            a[0].event && f.trigger(a[0].event);
            a[0].fn && a[0].fn.call(f, c);
            setTimeout(function () {
                g = false
            }, 800);
            $(".popupContextMenu").remove()
        });
        f.bind("click", function (c) {
            var b =
                $(this);
            e.preventDefault && c.preventDefault();
            j = setTimeout(function () {
                j = false;
                if (!g) {
                    var l = b.offset().top,
                        o = b.offset().left,
                        n = b.height(),
                        q = b.width(),
                        u = "jqContext" + Math.floor(Math.random() * 1E6);
                    $(".popupContextMenu").remove();
                    var v = '<ul class="popupContextMenu" id="' + u + '-menu"';
                    if (e.cursor) v += 'style="cursor:' + e.cursor + '"';
                    v += ">";
                    $.each(a, function () {
                        v += "<li>";
                        if (this.href) {
                            v += '<a href="' + this.href + '"';
                            if (this.target) v += ' target="' + this.target + '"';
                            v += ">"
                        }
                        v += this.title;
                        if (this.href) v += "</a>";
                        v += "</li>"
                    });
                    v += "</ul>";
                    $("body").append(v);
                    var x = $("#" + u + "-menu"),
                        z = setTimeout(function () {
                            x.remove()
                        }, 5E3);
                    e.position == "under" ? x.show().css({
                        top: l + n + "px",
                        left: o + "px",
                        "min-width": q + "px"
                    }) : x.show().css({
                        top: c.pageY - 2 + "px",
                        left: c.pageX - 2 + "px"
                    });
                    x.find("li").bind("click", function () {
                        var B = $(this).closest("ul").find("li").index(this);
                        a[B].event && f.trigger(a[0].event);
                        a[B].fn && a[B].fn.call(f, c);
                        $(".popupContextMenu").remove()
                    });
                    x.bind("mouseenter", function () {
                        z && clearTimeout(z);
                        z = false
                    });
                    x.bind("mouseleave", function () {
                        z &&
                            clearTimeout(z);
                        z = setTimeout(function () {
                            x.remove()
                        }, 1500)
                    })
                }
            }, 500)
        })
    })
};
(function (a) {
    function e(b) {
        function l(o) {
            var n = RegExp(a.map(o, encodeURIComponent).join("|"), "ig");
            return function (q) {
                return q.replace(n, decodeURIComponent)
            }
        }
        b = a.extend({
            unescape: false
        }, b || {});
        f.encoder = function (o) {
            if (o === true) return function (n) {
                return n
            };
            if (typeof o == "string" && (o = l(o.split(""))) || typeof o == "function") return function (n) {
                return o(encodeURIComponent(n))
            };
            return encodeURIComponent
        }(b.unescape)
    }
    var f = {
        put: function (b, l) {
            (l || window).location.hash = this.encoder(b)
        },
        get: function (b) {
            b = (b || window).location.hash.replace(/^#/,
                "");
            try {
                return a.browser.mozilla ? b : decodeURIComponent(b)
            } catch (l) {
                return b
            }
        },
        encoder: encodeURIComponent
    }, j = {
            id: "__jQuery_history",
            init: function () {
                var b = '<iframe id="' + this.id + '" style="display:none" src="javascript:false;" />';
                a("body").prepend(b);
                return this
            },
            _document: function () {
                return a("#" + this.id)[0].contentWindow.document
            },
            put: function (b) {
                var l = this._document();
                l.open();
                l.close();
                f.put(b, l)
            },
            get: function () {
                return f.get(this._document())
            }
        }, g = {};
    g.base = {
        callback: undefined,
        type: undefined,
        check: function () {},
        load: function () {},
        init: function (b, l) {
            e(l);
            c.callback = b;
            c._options = l;
            c._init()
        },
        _init: function () {},
        _options: {}
    };
    g.timer = {
        _appState: undefined,
        _init: function () {
            var b = f.get();
            c._appState = b;
            c.callback(b);
            setInterval(c.check, 100)
        },
        check: function () {
            var b = f.get();
            if (b != c._appState) {
                c._appState = b;
                c.callback(b)
            }
        },
        load: function (b) {
            if (b != c._appState) {
                f.put(b);
                c._appState = b;
                c.callback(b)
            }
        }
    };
    g.iframeTimer = {
        _appState: undefined,
        _init: function () {
            var b = f.get();
            c._appState = b;
            j.init().put(b);
            c.callback(b);
            setInterval(c.check,
                100)
        },
        check: function () {
            var b = j.get(),
                l = f.get();
            if (l != b)
                if (l == c._appState) {
                    c._appState = b;
                    f.put(b);
                    c.callback(b)
                } else {
                    c._appState = l;
                    j.put(l);
                    c.callback(l)
                }
        },
        load: function (b) {
            if (b != c._appState) {
                f.put(b);
                j.put(b);
                c._appState = b;
                c.callback(b)
            }
        }
    };
    g.hashchangeEvent = {
        _init: function () {
            c.callback(f.get());
            a(window).bind("hashchange", c.check)
        },
        check: function () {
            c.callback(f.get())
        },
        load: function (b) {
            f.put(b)
        }
    };
    var c = a.extend({}, g.base);
    c.type = a.browser.msie && (a.browser.version < 8 || document.documentMode < 8) ? "iframeTimer" :
        "onhashchange" in window ? "hashchangeEvent" : "timer";
    a.extend(c, g[c.type]);
    a.history = c
})(jQuery);
var HASH_PARAM_ARRAY = 1,
    HASH_PARAM_STRING = 2,
    __prevPage = location.href,
    commonAbbrs = {
        AL: true,
        AK: true,
        AS: true,
        AZ: true,
        AR: true,
        CA: true,
        CO: true,
        CT: true,
        DE: true,
        DC: true,
        FM: true,
        FL: true,
        GA: true,
        GU: true,
        HI: true,
        ID: true,
        IL: true,
        IN: true,
        IA: true,
        KS: true,
        KY: true,
        LA: true,
        ME: true,
        MH: true,
        MD: true,
        MA: true,
        MI: true,
        MN: true,
        MS: true,
        MO: true,
        MT: true,
        NE: true,
        NV: true,
        NH: true,
        NJ: true,
        NM: true,
        NY: true,
        NC: true,
        ND: true,
        MP: true,
        OH: true,
        OK: true,
        OR: true,
        PW: true,
        PA: true,
        PR: true,
        RI: true,
        SC: true,
        SD: true,
        TN: true,
        TX: true,
        UT: true,
        VT: true,
        VI: true,
        VA: true,
        WA: true,
        WV: true,
        WI: true,
        WY: true,
        USA: true
    };
if (typeof String.prototype.trim !== "function") String.prototype.trim = function () {
    return this.replace(/^\s+|\s+$/g, "")
};

function console_log() {
    try {
        console.log.apply(window.console, arguments)
    } catch (a) {}
}

function getSessionID() {
    return getCookie("bps_session")
}

function cmp(a, e) {
    return a < e ? -1 : a > e ? 1 : 0
}

function getHeight(a) {
    a = a instanceof jQuery ? a : $(a);
    var e = [],
        f = function (c) {
            c = c.parentNode;
            var b = $(c),
                l = b.css("display");
            if (l == "none") {
                e.push({
                    node: c,
                    display: l,
                    position: b.css("position"),
                    visibility: b.css("visibility")
                });
                c.style.position = "absolute";
                c.style.visibility = "hidden";
                c.style.display = "block"
            }
            c.nodeName != "BODY" && f(c)
        };
    f(a[0]);
    a = a.height();
    for (var j = 0, g = e.length; j < g; ++j) {
        e[j].node.style.position = e[j].position;
        e[j].node.style.visibility = e[j].visibility;
        e[j].node.style.display = e[j].display
    }
    e.splice(0,
        e.length);
    return a
}

function titleCase(a, e) {
    e = e || {};
    var f = a.split(" "),
        j;
    for (j in f) e.ignoreAbbr && commonAbbrs[f[j]] || (f[j] = f[j].toUpperCase().substr(0, 1) + f[j].toLowerCase().substr(1, f[j].length));
    return f.join(" ")
}

function parseIntNaNChar(a, e) {
    a = parseInt(a);
    return isNaN(a) ? e : a
}

function debugAlert(a) {
    if (location.search.search(/js_debug/) || location.search.search(/uncompiled_js/)) alert(a)
}

function debugLog(a, e) {
    var f = Array.prototype.slice.call(arguments);
    if (/js_debug|uncompiled_js/.test(location.search))
        if (/stack_trace/.test(location.search) || typeof e === "boolean" && e) {
            typeof e === "boolean" && e && f.splice(1, 1);
            var j = Error(a).stack;
            console_log.apply(this, f);
            console_log(j)
        } else console_log.apply(this, f)
}

function timestampToLocal(a) {
    if (!a) return "";
    a = a.replace(/^([0-9]{4})-([0-9]{2})-([0-9]{2})/, "$1/$2/$3");
    a = a.replace(/^([0-9/]+ [0-9:]+)\.?[0-9]*([-+])0?([0-9]+)/, "$1 GMT$2$300");
    a = new Date(Date.parse(a));
    return a.toLocaleDateString() + ", " + a.toLocaleTimeString()
}

function macFormat(a) {
    return a.search(/^[0-9a-fA-F]{12}$/) > -1 ? a.replace(/([0-9a-fA-F]{2})/g, "$1:").replace(/:$/, "") : a
}

function sortObjectArray(a, e) {
    return a.sort(function (f, j) {
        return f[e] && j[e] ? optLc(f[e]) == optLc(j[e]) ? 0 : optLc(f[e]) > optLc(j[e]) ? 1 : -1 : f[e] || j[e] ? f[e] ? 1 : -1 : 0
    })
}

function optLc(a) {
    return typeof a.toLowerCase == "function" ? a.toLowerCase() : a
}
$.fn.hotkey = function (a, e) {
    $(this).bind("keyup", function (f) {
        f.keyCode == a && $(e).trigger("click")
    })
};

function strReplaceAll(a, e, f) {
    rxNeedle = RegExp(e.replace(/([\[\]\<\>\?\.\^\$\{\}])/g, "\\$1"), "g");
    return a.replace(rxNeedle, f)
}
$.fn.getDimensionOffsets = function () {
    el = this.eq(0);
    var a = $(el).parents().filter(function () {
        return $(this).css("position").match(/(relative|absolute|fixed)/)
    }).eq(0).offset().top,
        e = : "fFeE".indexOf(u) > -1 ? 6 : u == "d" ? 0 : void 0;
            b = b ? a[b.slice(0, -1)] : a[e++];
            switch (u) {
            case "s":
                u = String(b);
                v = v;
                o = o;
                n = n;
                B = B;
                if (q != null) u = u.slice(0, q);
                return j(u, "", v, o, n, B);
            case "c":
                u = String.fromCharCode(+b);
                v = v;
                o = o;
                n = n;
                if (q != null) u = u.slice(0, q);
                return j(u, "", v, o, n, void 0);
            case "b":
                return g(b, 2, z, v, o, q, n);
            case "o":
                return g(b, 8, z, v, o, q, n);
            case "x":
                return g(b, 16, z, v, o, q, n);
            case "X":
                return g(b, 16, z, v, o, q, n).toUpperCase();
            case "u":
                return g(b, 10, z, v, o, q, n);
            case "i":
            case "d":
                B = parseInt(+b);
                c = B < 0 ? "-" : x;
                b = c + f(String(Math.abs(B)), q, "0", false);
                return j(b,
                    c, v, o, n);
            case "e":
            case "E":
            case "f":
            case "F":
            case "g":
            case "G":
                B = +b;
                c = B < 0 ? "-" : x;
                x = ["toExponential", "toFixed", "toPrecision"]["efg".indexOf(u.toLowerCase())];
                u = ["toString", "toUpperCase"]["eEfFgG".indexOf(u) % 2];
                b = c + Math.abs(B)[x](q);
                return j(b, c, v, o, n)[u]();
            default:
                return c
            }
        })
}

function formatCID(a, e, f) {
    e || (e = "(Unknown)");
    a = !a || a == "Unknown" || a == "" || unescape(a).replace(/[^0-9a-zA-Z]/g, "") == unescape(e).replace(/[^0-9]/g, "") ? ["", format_information(unescape(e))] : [unescape(titleCase(a, {
        ignoreAbbr: true
    })), format_information(unescape(e)).replace(/ /g, "\u00a0").replace(/-/g, "\u2011")];
    return f ? a : a[0] ? a.join(", ") : a[1]
}

function unixTime() {
    return Math.round((new Date).getTime() / 1E3)
}

function hhmmss(a) {
    h = parseInt(a / 3600) % 24;
    m = parseInt(a / 60) % 60;
    s = a % 60;
    return sprintf("%d:%02d:%02d", h, m, s)
}

function uniqueArray(a) {
    a = a.slice(0);
    a.sort();
    for (var e = 1; e < a.length;)
        if (a[e - 1] == a[e]) a.splice(e, 1);
        else e++;
    return a
}

function format_age(a, e) {
    e = e || {};
    var f = (new Date).add({
        seconds: -a
    }),
        j = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
        g = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"],
        c = "",
        b = function (l) {
            var o = l.getHours(),
                n = "AM";
            if (o == 0) {
                o = 12;
                n = "AM"
            } else if (o > 12) {
                o -= 12;
                n = "PM"
            } else if (o == 12) n = "PM";
            return o + ":" + sprintf("%02d", l.getMinutes()) + n
        };
    if (e.longForm) {
        c = g[f.getDay()] + " " + j[f.getMonth()] + " " + f.getDate();
        if (f.getFullYear() <
            (new Date).getFullYear()) c += ", " + f.getFullYear();
        c += ", " + b(f);
        return c
    }
    if (a > 1209600) {
        c = j[f.getMonth()] + " " + f.getDate();
        if (f.getFullYear() < (new Date).getFullYear()) c += ", " + f.getFullYear()
    } else c = a >= 604800 ? j[f.getMonth()] + " " + f.getDate() + ", " + b(f) : (new Date).getDay() != f.getDay() ? (f.getDay() == (new Date).getDay() - 1 ? "Yesterday" : g[f.getDay()]) + ", " + b(f) : b(f);
    return c
}

function trueish(a, e) {
    a = a || false;
    e = e || {};
    if (e.allowStringFalse && (a.toString().toLowerCase() === "false" || a.toString().toLowerCase() === "f")) return false;
    return !a || a == "0" ? false : a
}(function () {
    var a = 0;
    getUnique = function (e, f) {
        return (e || "") + ++a + (f || "")
    }
})();

function stringContains(a, e) {
    return e.indexOf(a) === -1 ? false : true
}
var entity = {
    quot: '"',
    amp: "&",
    apos: "'",
    lt: "<",
    gt: ">",
    nbsp: "\u00a0",
    iexcl: "\u00a1",
    cent: "\u00a2",
    pound: "\u00a3",
    curren: "\u00a4",
    yen: "\u00a5",
    brvbar: "\u00a6",
    sect: "\u00a7",
    uml: "\u00a8",
    copy: "\u00a9",
    ordf: "\u00aa",
    laquo: "\u00ab",
    not: "\u00ac",
    shy: "\u00ad",
    reg: "\u00ae",
    macr: "\u00af",
    deg: "\u00b0",
    plusmn: "\u00b1",
    sup2: "\u00b2",
    sup3: "\u00b3",
    acute: "\u00b4",
    micro: "\u00b5",
    para: "\u00b6",
    middot: "\u00b7",
    cedil: "\u00b8",
    sup1: "\u00b9",
    ordm: "\u00ba",
    raquo: "\u00bb",
    frac14: "\u00bc",
    frac12: "\u00bd",
    frac34: "\u00be",
    iquest: "\u00bf",
    Agrave: "\u00c0",
    Aacute: "\u00c1",
    Acirc: "\u00c2",
    Atilde: "\u00c3",
    Auml: "\u00c4",
    Aring: "\u00c5",
    AElig: "\u00c6",
    Ccedil: "\u00c7",
    Egrave: "\u00c8",
    Eacute: "\u00c9",
    Ecirc: "\u00ca",
    Euml: "\u00cb",
    Igrave: "\u00cc",
    Iacute: "\u00cd",
    Icirc: "\u00ce",
    Iuml: "\u00cf",
    ETH: "\u00d0",
    Ntilde: "\u00d1",
    Ograve: "\u00d2",
    Oacute: "\u00d3",
    Ocirc: "\u00d4",
    Otilde: "\u00d5",
    Ouml: "\u00d6",
    times: "\u00d7",
    Oslash: "\u00d8",
    Ugrave: "\u00d9",
    Uacute: "\u00da",
    Ucirc: "\u00db",
    Uuml: "\u00dc",
    Yacute: "\u00dd",
    THORN: "\u00de",
    szlig: "\u00df",
    agrave: "\u00e0",
    aacute: "\u00e1",
    acirc: "\u00e2",
    atilde: "\u00e3",
    auml: "\u00e4",
    aring: "\u00e5",
    aelig: "\u00e6",
    ccedil: "\u00e7",
    egrave: "\u00e8",
    eacute: "\u00e9",
    ecirc: "\u00ea",
    euml: "\u00eb",
    igrave: "\u00ec",
    iacute: "\u00ed",
    icirc: "\u00ee",
    iuml: "\u00ef",
    eth: "\u00f0",
    ntilde: "\u00f1",
    ograve: "\u00f2",
    oacute: "\u00f3",
    ocirc: "\u00f4",
    otilde: "\u00f5",
    ouml: "\u00f6",
    divide: "\u00f7",
    oslash: "\u00f8",
    ugrave: "\u00f9",
    uacute: "\u00fa",
    ucirc: "\u00fb",
    uuml: "\u00fc",
    yacute: "\u00fd",
    thorn: "\u00fe",
    yuml: "\u00ff",
    OElig: "\u0152",
    oelig: "\u0153",
    Scaron: "\u0160",
    scaron: "\u0161",
    Yuml: "\u0178",
    fnof: "\u0192",
    circ: "\u02c6",
    tilde: "\u02dc",
    Alpha: "\u0391",
    Beta: "\u0392",
    Gamma: "\u0393",
    Delta: "\u0394",
    Epsilon: "\u0395",
    Zeta: "\u0396",
    Eta: "\u0397",
    Theta: "\u0398",
    Iota: "\u0399",
    Kappa: "\u039a",
    Lambda: "\u039b",
    Mu: "\u039c",
    Nu: "\u039d",
    Xi: "\u039e",
    Omicron: "\u039f",
    Pi: "\u03a0",
    Rho: "\u03a1",
    Sigma: "\u03a3",
    Tau: "\u03a4",
    Upsilon: "\u03a5",
    Phi: "\u03a6",
    Chi: "\u03a7",
    Psi: "\u03a8",
    Omega: "\u03a9",
    alpha: "\u03b1",
    beta: "\u03b2",
    gamma: "\u03b3",
    delta: "\u03b4",
    epsilon: "\u03b5",
    zeta: "\u03b6",
    eta: "\u03b7",
    theta: "\u03b8",
    iota: "\u03b9",
    kappa: "\u03ba",
    lambda: "\u03bb",
    mu: "\u03bc",
    nu: "\u03bd",
    xi: "\u03be",
    omicron: "\u03bf",
    pi: "\u03c0",
    rho: "\u03c1",
    sigmaf: "\u03c2",
    sigma: "\u03c3",
    tau: "\u03c4",
    upsilon: "\u03c5",
    phi: "\u03c6",
    chi: "\u03c7",
    psi: "\u03c8",
    omega: "\u03c9",
    thetasym: "\u03d1",
    upsih: "\u03d2",
    piv: "\u03d6",
    ensp: "\u2002",
    emsp: "\u2003",
    thinsp: "\u2009",
    zwnj: "\u200c",
    zwj: "\u200d",
    lrm: "\u200e",
    rlm: "\u200f",
    ndash: "\u2013",
    mdash: "\u2014",
    lsquo: "\u2018",
    rsquo: "\u2019",
    sbquo: "\u201a",
    ldquo: "\u201c",
    rdquo: "\u201d",
    bdquo: "\u201e",
    dagger: "\u2020",
    Dagger: "\u2021",
    bull: "\u2022",
    hellip: "\u2026",
    permil: "\u2030",
    prime: "\u2032",
    Prime: "\u2033",
    lsaquo: "\u2039",
    rsaquo: "\u203a",
    oline: "\u203e",
    frasl: "\u2044",
    euro: "\u20ac",
    image: "\u2111",
    weierp: "\u2118",
    real: "\u211c",
    trade: "\u2122",
    alefsym: "\u2135",
    larr: "\u2190",
    uarr: "\u2191",
    rarr: "\u2192",
    darr: "\u2193",
    harr: "\u2194",
    crarr: "\u21b5",
    lArr: "\u21d0",
    uArr: "\u21d1",
    rArr: "\u21d2",
    dArr: "\u21d3",
    hArr: "\u21d4",
    forall: "\u2200",
    part: "\u2202",
    exist: "\u2203",
    empty: "\u2205",
    nabla: "\u2207",
    isin: "\u2208",
    notin: "\u2209",
    ni: "\u220b",
    prod: "\u220f",
    sum: "\u2211",
    minus: "\u2212",
    lowast: "\u2217",
    radic: "\u221a",
    prop: "\u221d",
    infin: "\u221e",
    ang: "\u2220",
    and: "\u2227",
    or: "\u2228",
    cap: "\u2229",
    cup: "\u222a",
    "int": "\u222b",
    there4: "\u2234",
    sim: "\u223c",
    cong: "\u2245",
    asymp: "\u2248",
    ne: "\u2260",
    equiv: "\u2261",
    le: "\u2264",
    ge: "\u2265",
    sub: "\u2282",
    sup: "\u2283",
    nsub: "\u2284",
    sube: "\u2286",
    supe: "\u2287",
    oplus: "\u2295",
    otimes: "\u2297",
    perp: "\u22a5",
    sdot: "\u22c5",
    lceil: "\u2308",
    rceil: "\u2309",
    lfloor: "\u230a",
    rfloor: "\u230b",
    lang: "\u27e8",
    rang: "\u27e9",
    loz: "\u25ca",
    spades: "\u2660",
    clubs: "\u2663",
    hearts: "\u2665",
    diams: "\u2666"
};

function debugVar(a) {
    return typeof a === "object" ? $.extend(true, {}, a) : a
}

function isObjectEmpty(a) {
    for (k in a) return false;
    return true
}

function getObjectLength(a) {
    var e = 0;
    for (k in a)++e;
    return e
};
var POPUP_MESSAGE_TIMEOUT = 5E3;

function popupMessage(a, e, f) {
    var j = "jcontext" + Math.floor(Math.random() * 1E6);
    $("#popupMessageContainer")[0] || $("body").append('<div id="popupMessageContainer"></div>');
    $("#popupMessageContainer").append('<div class="popupMessage' + (e ? " priorityPopup" : "") + (f && f.length ? " " + f + "_popup" : "") + '">' + a + '<img src="/images/help_tack_up.png" alt="Tack" width="15" height="15" class="popupTack" /><img src="/images/help_close.png" alt="Close" width="15" height="15" class="popupClose" /><div id="' + j + '-sound"></div></div>');
    var g = $("#popupMessageContainer .popupMessage:last").fadeIn("fast");
    a = g[0];
    $.soundEffect("/sounds/pop.mp3");
    g.find(".popupClose").bind("click", closePopupMessage);
    g.find(".popupTack").bind("click", function () {
        var c = $(this).closest(".popupMessage");
        if (!c.is(".tacked")) {
            c.addClass("tacked");
            this.src = "/images/help_tack_down.png"
        }
    });
    if (e) g.find(".popupTack").click();
    else a.timeout = setTimeout(function () {
        fadePopupMessage(g)
    }, POPUP_MESSAGE_TIMEOUT)
}

function fadePopupMessage(a) {
    a.is(".tacked") || a.fadeOut("slow")
}

function closePopupMessage(a) {
    a = a.length > 0 ? $("." + a + "_popup") : $(this).closest(".popupMessage");
    cancelPopupFade.call(a[0]);
    a.fadeOut("normal", function () {
        $(this).remove()
    })
}

function cancelPopupFade() {
    $(this).addClass("frozen").removeClass("priorityPopup");
    this.timeout && clearTimeout(this.timeout)
};
var __hideSubNavDelay = 50,
    __hideSubNavTimeout = false,
    __hideSNButtonTimeout = false,
    __screenParentRegistry = {}, __currentMenu = false,
    __collapsed_button_width = "35px",
    DWR_DEBOUNCE_TIME = 500;
$.browser.msie && setInterval(function () {
    var a = document.title.match(/^[^#]+/);
    if (a && a[0]) document.title = a[0]
}, 500);
$(window).bind("meteor_update_status", function (a, e) {
    if (typeof titlebar == "undefined" || !titlebar) titlebar = "CudaTel Communication Server";
    if (e.json.system_serial) document.title = sprintf("%s (%s)", titlebar, e.json.system_serial)
});

function bindNavHover() {
    $("#ulButtonBar > li:not(.logo)").unbind("mouseenter.nav").unbind("mouseleave.nav").bind("mouseenter.nav", function () {
        highlightButton($(this), true)
    }).bind("mouseleave.nav", function () {
        $(this).is(".current") || highlightButton($(this), false)
    });
    $("#ulButtonBar > li > a").bind("click", function () {
        this.blur()
    });
    $("#ulButtonBar").trigger("navReady")
}

function highlightButton(a, e) {
    var f = $(a).find("img")[0];
    if (f)
        if (e) {
            $(a).addClass("hovered");
            if (!f.src.match(/-active\./)) f.src = f.src.replace(/\.(png|gif|jpg)$/, "-active.$1")
        } else if (!($(a).is(".current") || $(a).parents(".current").length)) {
        $(a).removeClass("hovered");
        f.src = f.src.replace(/-active\./, ".")
    }
}

function hookScan(a) {
    return a.replace(/\[hook:([^\]]*)\]/g, '<span class="hook $1"></span>')
}
var __DWRwindowDebounceTimer = false,
    __dwrLoaded;
$(document).ready(function () {
    $(window).bind("resize", DWRResizeHandler)
});

function DWRResizeHandler() {
    __DWRwindowDebounceTimer && clearTimeout(__DWRwindowDebounceTimer);
    __DWRDebounceTimer = setTimeout(DWRFireEvent, DWR_DEBOUNCE_TIME)
}

function DWRFireEvent() {
    $(window).trigger("debouncedresize")
}
$.fn.fullHeight = function (a) {
    this.each(function () {
        var e = $(this).offset().top,
            f = $(window).height(),
            j = 0;
        if (a) j = a.air || 0;
        $(this).css({
            height: f - j - e + "px"
        })
    })
};

function fitAll(a, e) {
    if (e && e[0]) {
        var f = e.eq(0),
            j = e.eq(0).data("ratio");
        j || (j = e.eq(0).outerWidth(true) / e.eq(0).outerHeight(true));
        e.data("ratio", j);
        var g = a.innerWidth();
        $(e).css({
            width: g,
            height: g / j
        });
        var c = f.height(),
            b = f.width();
        f = a.innerHeight();
        c = a.innerWidth();
        g = e.length;
        b = optimalSize(f, c, 1, j, g);
        g = Math.ceil(g / b);
        b = c / b;
        c = b / j;
        if (c * g > f) c = f / g;
        e.css({
            width: b - 5 + "px",
            height: c + "px"
        });
        e.eq(0).offset();
        e.trigger("resize")
    }
}

function optimalSize(a, e, f, j, g) {
    return Math.ceil(Math.sqrt(g) * (e / j / (a / f)))
}

function windowOpen(a) {
    var e = {
        ccc: "width=350,height=500,location=0,menubar=0,scrollbars=1,status=0,toolbar=0,resizable=1",
        fullscreen: "width=" + (screen.width - 200) + "height=" + (screen.height - 200) + "location=0,menubar=0,scrollbars=auto,status=0,toolbar=0,resizable=1",
        fullscroll: "width=" + (screen.width - 200) + "height=" + (screen.height - 200) + "location=0,menubar=0,scrollbars=1,status=0,toolbar=0,resizable=1"
    };
    return window.open(a.url, a.name || "win" + Math.floor(Math.random()), a.options || e[a.preset])
}
var ccc_win;

function cccOpen() {
    if (!ccc_win || ccc_win.closed) ccc_win = windowOpen({
        url: "/ajax-html/callcontrol.shtml",
        name: "client",
        preset: "ccc"
    });
    ccc_win.focus()
};
var STATIC_PATH = "./",
    XMLGUI_PATH = "/gui/",
    AJAXHTML_PATH = "ajax-html/",
    HTML_SCREENS_DIR = "ajax-html",
    PLEASE_WAIT_MESSAGE = '<p class="wait"><img src="./images/wait.gif" width="24" height="24" style="vertical-align: bottom; margin-right: 1em;" />Please Wait...</p>';
$(window).bind("screenInit", function () {
    $(".helpPopupWrap").remove()
});

function logout() {
    SUPPRESS_ERROR_DISPLAY = true;
    $.ajax({
        url: "/gui/login/logout",
        type: "POST",
        success: function () {
            $(window).unbind("hashchange.nav");
            location.replatitlebar = "CudaTel Communication Server";
    if (e.json.system_serial) document.title = sprintf("%s (%s)", titlebar, e.json.system_serial)
});

function bindNavHover() {
    $("#ulButtonBar > li:not(.logo)").unbind("mouseenter.nav").unbind("mouseleave.nav").bind("mouseenter.nav", function () {
        highlightButton($(this), true)
    }).bind("mouseleave.nav", function () {
        $(this).is(".current") || highlightButton($(this), false)
    });
    $("#ulButtonBar > li > a").bind("click", function () {
        this.blur()
    });
    $("#ulButtonBar").trigger("navReady")
}

function highlightButton(a, e) {
    var f = $(a).find("img")[0];
    if (f)
        if (e) {
            $(a).addClass("hovered");
            if (!f.src.match(/-active\./)) f.src = f.src.replace(/\.(png|gif|jpg)$/, "-active.$1")
        } else if (!($(a).is(".current") || $(a).parents(".current").length)) {
        $(a).removeClass("hovered");
        f.src = f.src.replace(/-active\./, ".")
    }
}

function hookScan(a) {
    return a.replace(/\[hook:([^\]]*)\]/g, '<span class="hook $1"></span>')
}
var __DWRwindowDebounceTimer = false,
    __dwrLoaded;
$(document).ready(function () {
    $(window).bind("resize", DWRResizeHandler)
});

function DWRResizeHandler() {
    __DWRwindowDebounceTimer && clearTimeout(__DWRwindowDebounceTimer);
    __DWRDebounceTimer = setTimeout(DWRFireEvent, DWR_DEBOUNCE_TIME)
}

function DWRFireEvent() {
    $(window).trigger("debouncedresize")
}
$.fn.fullHeight = function (a) {
    this.each(function () {
        var e = $(this).offset().top,
            f = $(window).height(),
            j = 0;
        if (a) j = a.air || 0;
        $(this).css({
            height: f - j - e + "px"
        })
    })
};

function fitAll(a, e) {
    if (e && e[0]) {
        var f = e.eq(0),
            j = e.eq(0).data("ratio");
        j || (j = e.eq(0).outerWidth(true) / e.eq(0).outerHeight(true));
        e.data("ratio", j);
        var g = a.innerWidth();
        $(e).css({
            width: g,
            height: g / j
        });
        var c = f.height(),
            b = f.width();
        f = a.innerHeight();
        c = a.innerWidth();
        g = e.length;
        b = optimalSize(f, c, 1, j, g);
        g = Math.ceil(g / b);
        b = c / b;
        c = b / j;
        if (c * g > f) c = f / g;
        e.css({
            width: b - 5 + "px",
            height: c + "px"
        });
        e.eq(0).offset();
        e.trigger("resize")
    }
}

function optimalSize(a, e, f, j, g) {
    return Math.ceil(Math.sqrt(g) * (e / j / (a / f)))
}

function windowOpen(a) {
    var e = {
        ccc: "width=350,height=500,location=0,menubar=0,scrollbars=1,status=0,toolbar=0,resizable=1",
        fullscreen: "width=" + (screen.width - 200) + "height=" + (screen.height - 200) + "location=0,menubar=0,scrollbars=auto,status=0,toolbar=0,resizable=1",
        fullscroll: "width=" + (screen.width - 200) + "height=" + (screen.height - 200) + "location=0,menubar=0,scrollbars=1,status=0,toolbar=0,resizable=1"
    };
    return window.open(a.url, a.name || "win" + Math.floor(Math.random()), a.options || e[a.preset])
}
var ccc_win;

function cccOpen() {
    if (!ccc_win || ccc_win.closed) ccc_win = windowOpen({
        url: "/ajax-html/callcontrol.shtml",
        name: "client",
        preset: "ccc"
    });
    ccc_win.focus()
};
var STATIC_PATH = "./",
    XMLGUI_PATH = "/gui/",
    AJAXHTML_PATH = "ajax-html/",
    HTML_SCREENS_DIR = "ajax-html",
    PLEASE_WAIT_MESSAGE = '<p class="wait"><img src="./images/wait.gif" width="24" height="24" style="vertical-align: bottom; margin-right: 1em;" />Please Wait...</p>';
$(window).bind("screenInit", function () {
    $(".helpPopupWrap").remove()
});

function logout() {
    SUPPRESS_ERROR_DISPLAY = true;
    $.ajax({
        url: "/gui/login/logout",
        type: "POST",
        success: function () {
            $(window).unbind("hashchange.nav");
            location.repla.apply(a("#allScreen"), [c,
                    function () {
                        a(window).triggerHandler("screenBuilt", {
                            screen: {
                                name: g
                            }
                        });
                        switchScreenCallback(c, true)
                    }
                ])) {
                    showError('Internal script error: Screen "' + g + '" build function does not return a DOM object.');
                    return j
                }
        } else {
            showError('Internal script error: Screen "' + g + '" does not exist.');
            return j
        }
    };
    iframeScreen = function (g, c, b, l, o) {
        c = getCookie(c);
        var n = a("body"),
            q = false;
        if (n.is(".firefox") || n.is(".msie") || n.is(".opera") || n.is(".mozilla")) q = true;
        var u = document.createElement("div");
        u.className = "screen";
        a(u).css({
            display: "block",
            margin: 0,
            padding: 0,
            height: q ? b.height() + "px" : "100%"
        });
        b.append(u);
        b = document.createElement("iframe");
        b.src = c ? c : g;
        if (n.is(".msie")) {
            b.setAttribute("scrolling", "no");
            b.setAttribute("verticalscrolling", "no");
            b.setAttribute("horizontalscrolling", "no")
        }
        var v = a(b);
        v.css({
            top: "0px",
            left: "0px",
            border: 0,
            margin: 0,
            padding: 0,
            width: "100%",
            height: q ? a(u).height() + "px" : "100%",
            "min-height": "100%",
            display: "block",
            bottom: "0px"
        });
        u.appendChild(b);
        l.dom = a(u);
        a(window).bind("tick", function () {
            var x = parseInt(v.height());
            v.contents().find(".screen").each(function () {
                if (parseInt(a(this).height()) >
                    x) x = parseInt(a(this).height()) + 2
            });
            v.css({
                height: x + "px"
            })
        });
        o.call(undefined, l);
        return true
    };
    ajaxScreen = function (g, c, b, l) {
        a.getTemplate(g, function (o) {
            b.dom = a('<div id="screen-' + b.name + '" class="screen" style="display: none;"></div>').appendTo(c);
            b.dom.html(o);
            help_activate(b.dom);
            l(b)
        });
        return true
    };
    ajaxScreenParts = function () {};
    buildScreenClassic = function (g, c, b) {
        c.dom = a("#screen-" + g);
        b.call(undefined, c);
        return true
    };
    enterScreenClassic = function (g) {
        return switchScreenClassic(g)
    };
    getCurrentScreen = function () {
        return j
    };
    serializeOverlayToHash = function (g, c, b) {
        location.href = location.href + ";" + g + "=" + c + ":" + JSON.stringify(b)
    };
    removeOverlayFromHash = function (g, c) {
        for (var b, l = location.href; b = l.match("((?:;|)" + g + "=" + c + ":({.*?}))(?:;|$)");) l = l.replace(b[1], "");
        location.href = l
    };
    isOverlayInHash = function (g, c) {
        if (location.href.match("((?:;|)" + g + "=" + c + ":({.*?}))(?:;|$)")) return true;
        return false
    };
    updateOverlaysFromHash = function () {
        for (var g, c = location.href, b = []; g = c.match("((?:;|)(overlay|popup)=(.+?):({.*?}))(?:;|$)");) {
            var l = g[2],
                o = g[3],
                n = a.parseJSON(unescape(g[4])),
                q = a("." + l + "." + o);
            b.push("." + l + "." + o);
            q[0] || (l == "popup" ? showPopup(o, n, true) : showOverlay(o, n, true));
            c = c.replace(g[1], "")
        }
        g = a("#allPopup .popup, #allOverlay .overlay");
        if (b.length > 0) g = g.filter(":not(" + b.join(",") + ")");
        g.each(function () {
            a(this).triggerHandler("close_request")
        })
    };
    showPopup = function (g, c) {
        var b, l;
        if (a.isPlainObject(g)) {
            b = getUnique("anonymous-popup-");
            l = g
        } else {
            b = g;
            l = f[g]
        }
        l = a.extend(true, {}, {
            closeButton: true
        }, l);
        c || (c = {});
        if (l)
            if (a.isFunction(l.init)) {
                var o =
                    a("#overlaytemplate > .popup").clone().addClass(b),
                    n = a(".popupcontents", o);
                l.help ? help_bindElement(a(".popupHelpButton", o), "/ajax-html/help/en_US/" + l.help) : a(".popupHelpButton", o).hide();
                o.toggleClass("autoHeight", !l.fillHeight);
                l.closeButton || a(".popupClose > .popupCloseButton", o).remove();
                o.delegate(".popupCloseButton", "click", function (q) {
                    q.preventDefault();
                    o.trigger("close_request")
                });
                o.one("close_request", function (q, u) {
                    q.preventDefault();
                    q.stopPropagation();
                    a.isFunction(l.close) && l.close.call(l);
                    o.remove();
                    isOverlayInHash("popup", b) && history.back();
                    if (!a("#allPopup").children()[0]) {
                        a("#commonBlankerBackground").hide();
                        a("#allPopup").hide();
                        a("body").removeClass("hasPopups");
                        if (!a("#allOverlay").children()[0]) {
                            a(window).triggerHandler("screenInit", {
                                screen: {
                                    name: j
                                }
                            });
                            e[j] && a.isFunction(e[j].enter) && e[j].enter.apply(e[j].dom, [e[j]])
                        }
                    }
                    if (u && u.refresh)
                        if (a("#allPopup .popup:last")[0]) a("#allPopup .popup:last").triggerHandler("refreshDetail");
                        else if (a("#allOverlay .overlay:last")[0]) a("#allOverlay .overlay:last").triggerHandler("refreshDetail");
                    else {
                        var v = e[j];
                        v.dom && v.dom.trigger("refreshDetail")
                    }
                    typeof c.close === "function" && c.close()
                });
                l.init.call(l, n, c);
                a("#commonBlankerBackground").show();
                a("#allPopup").append(o).show();
                a("body").addClass("hasPopups");
                return o
            } else console_log("popup ", b, " has no build function");
            else console_log("popup ", b, " does not exist")
    };
    showOverlay = function (g, c, b) {
        var l;
        if (a.isPlainObject(g)) {
            l = g;
            g = l.name || getUnique("anonymousOverlay")
        } else l = f[g];
        c || (c = {});
        if (l)
            if (a.isFunction(l.init)) {
                var o = a("#overlaytemplate > .overlay").clone().addClass(g);
                a(".closeRight", o).bind("click", function (q) {
                    q.preventDefault();
                    o.triggerHandler("close_request")
                });
                l.help ? help_bindElement(a(".overlayHelpButton", o), "/ajax-html/help/en_US/" + l.help) : a(".overlayHelpButton", o).hide();
                o.bind("close_request", function (q) {
                    q.preventDefault();
                    q.stopPropagation();
                    a.isFunction(l.close) && l.close.call(l);
                    isOverlayInHash("overlay", g) && history.back();
                    o.remove();
                    if (a("#allOverlay").children()[0]) a("#allOverlay .overlay:last").show();
                    else {
                        a("#allOverlay").hide();
                        a("#allScreen").show();
                        a(window).triggerHandler("screenInit", {
                            screen: {
                                name: j
                            }
                        });
                        e[j] && a.isFunction(e[j].enter) && e[j].enter.apply(e[j].dom, [e[j]])
                    }
                    typeof c.close === "function" && c.close()
                });
                var n = a(".megaPanel", o);
                l.init.call(l, n, c);
                b || serializeOverlayToHash("overlay", g, c);
                a("#allScreen").hide();
                a("#allOverlay .overlay").hide();
                a("#allOverlay").append(o).show();
                return o
            } else console_log("overlay ", g, " has no init function");
            else console_log("overlay ", g, " does not exist")
    };
    overlayLoadClassic = function (g, c, b, l) {
        a.ajax({
            type: "POST",
            dataType: "TEXT",
            url: g,
            data: c,
            success: function (o) {
                b.html(o.replace(/\<!--.*?--\>/g, ""));
                a.isFunction(l) && l.call(b);
                if (a.browser.msie && parseInt(a.browser.version, 10) === 8 && b.closest(".popup")) {
                    o = b.closest(".popup");
                    o.hide();
                    o.show()
                }
            }
        })
    }
})(jQuery);
initScreensList({
    status: {
        build: function (a, e) {
            return ajaxScreen("/ajax-html/status.html", this, a, e)
        },
        enter: function () {
            $(".statbar", $(this)).setBarOpts({
                halt: false
            })
        },
        exit: function () {
            $(".statbar", $(this)).setBarOpts({
                halt: true
            })
        }
    },
    userstatus: {
        build: function (a, e) {
            return ajaxScreen("/ajax-html/userstatus.html", this, a, e)
        },
        enter: function () {
            loadInto($("#userStatusVM"), "/gui/configure/dynamic/user_dashboard?action=voicemail", "GET");
            loadInto($("#userStatusCalls"), "/gui/configure/dynamic/user_dashboard?action=calls",
                "GET");
            loadInto($("#userStatusFaxes"), "/gui/configure/dynamic/user_dashboard?action=faxes", "GET")
        }
    },
    activecalls: {
        build: function (a, e) {
            return ajaxScreen("/ajax-html/active_calls.html", this, a, function () {
                e();
                $("#statsPageActiveChannels").empty().recentActiveCalls()
            })
        }
    },
    statsgraphs: {
        build: function (a, e) {
            return ajaxScreen("/ajax-html/stats_graphs.html", this, a, e)
        }
    },
    peopleoncall: {
        build: function (a, e) {
            if (loginData.new_wallboards) return iframeScreen("/3/?embeded#!/cudatel/peopleoncall", "peopleoncall_url", this,
                a, e);
            return ajaxScreen("/ajax-html/peopleOnCall_stub.html", this, a, function () {
                $("#pocBody").peopleOnCall({
                    popupLink: "/ajax-html/wallboard/oncall_popup.shtml"
                });
                e()
            })
        }
    },
    queuewall: {
        build: function (a, e) {
            if (loginData.new_wallboards) return iframeScreen("/3/?embeded#!/cudatel/queuewall", "queuewall_url", this, a, e);
            return ajaxScreen("/ajax-html/queues_wall_stub.html", this, a, function () {
                e();
                $("#stubQueueMonitor").empty().queueBoard({
                    autosize: false
                });
                $("#queuemanager .opOpenQueueWallboard").bind("click", function (f) {
                    f.preventDefault();
                    windowOpen({
                        url: "/ajax-html/wallboard/queue_popup.shtml",
                        name: "queue_wallboard",
                        preset                       a("#allScreen").show();
                        a(window).triggerHandler("screenInit", {
                            screen: {
                                name: j
                            }
                        });
                        e[j] && a.isFunction(e[j].enter) && e[j].enter.apply(e[j].dom, [e[j]])
                    }
                    typeof c.close === "function" && c.close()
                });
                var n = a(".megaPanel", o);
                l.init.call(l, n, c);
                b || serializeOverlayToHash("overlay", g, c);
                a("#allScreen").hide();
                a("#allOverlay .overlay").hide();
                a("#allOverlay").append(o).show();
                return o
            } else console_log("overlay ", g, " has no init function");
            else console_log("overlay ", g, " does not exist")
    };
    overlayLoadClassic = function (g, c, b, l) {
        a.ajax({
            type: "POST",
            dataType: "TEXT",
            url: g,
            data: c,
            success: function (o) {
                b.html(o.replace(/\<!--.*?--\>/g, ""));
                a.isFunction(l) && l.call(b);
                if (a.browser.msie && parseInt(a.browser.version, 10) === 8 && b.closest(".popup")) {
                    o = b.closest(".popup");
                    o.hide();
                    o.show()
                }
            }
        })
    }
})(jQuery);
initScreensList({
    status: {
        build: function (a, e) {
            return ajaxScreen("/ajax-html/status.html", this, a, e)
        },
        enter: function () {
            $(".statbar", $(this)).setBarOpts({
                halt: false
            })
        },
        exit: function () {
            $(".statbar", $(this)).setBarOpts({
                halt: true
            })
        }
    },
    userstatus: {
        build: function (a, e) {
            return ajaxScreen("/ajax-html/userstatus.html", this, a, e)
        },
        enter: function () {
            loadInto($("#userStatusVM"), "/gui/configure/dynamic/user_dashboard?action=voicemail", "GET");
            loadInto($("#userStatusCalls"), "/gui/configure/dynamic/user_dashboard?action=calls",
                "GET");
            loadInto($("#userStatusFaxes"), "/gui/configure/dynamic/user_dashboard?action=faxes", "GET")
        }
    },
    activecalls: {
        build: function (a, e) {
            return ajaxScreen("/ajax-html/active_calls.html", this, a, function () {
                e();
                $("#statsPageActiveChannels").empty().recentActiveCalls()
            })
        }
    },
    statsgraphs: {
        build: function (a, e) {
            return ajaxScreen("/ajax-html/stats_graphs.html", this, a, e)
        }
    },
    peopleoncall: {
        build: function (a, e) {
            if (loginData.new_wallboards) return iframeScreen("/3/?embeded#!/cudatel/peopleoncall", "peopleoncall_url", this,
                a, e);
            return ajaxScreen("/ajax-html/peopleOnCall_stub.html", this, a, function () {
                $("#pocBody").peopleOnCall({
                    popupLink: "/ajax-html/wallboard/oncall_popup.shtml"
                });
                e()
            })
        }
    },
    queuewall: {
        build: function (a, e) {
            if (loginData.new_wallboards) return iframeScreen("/3/?embeded#!/cudatel/queuewall", "queuewall_url", this, a, e);
            return ajaxScreen("/ajax-html/queues_wall_stub.html", this, a, function () {
                e();
                $("#stubQueueMonitor").empty().queueBoard({
                    autosize: false
                });
                $("#queuemanager .opOpenQueueWallboard").bind("click", function (f) {
                    f.preventDefault();
                    windowOpen({
                        url: "/ajax-html/wallboard/queue_popup.shtml",
                        name: "queue_wallboard",
                        preset: "fullscreen"
                    })
                })
            })
        }
    },
    agentwall: {
        build: function (a, e) {
            if (loginData.new_wallboards) return iframeScreen("/3/?embeded#!/cudatel/agentwall", "agentwall_url", this, a, e);
            return ajaxScreen("/ajax-html/agent_wall_stub.html", this, a, function () {
                e();
                $("#stubAgentMonitor").empty().agentBoard({
                    autosize: false
                });
                $("#agentmanager .opOpenAgentWallboard").bind("click", function (f) {
                    f.preventDefault();
                    windowOpen({
                        url: "/ajax-html/wallboard/agent_popup.shtml",
                        name: "agent_wallboard",
                        preset: "fullscreen"
                    })
                })
            })
        }
    },
    agentmgr: {
        build: function (a, e) {
            if (loginData.new_wallboards) return iframeScreen("/3/?embeded#!/cudatel/agentmgr", "agentmgr_url", this, a, e);
            return ajaxScreen("/ajax-html/agent_manager.html", this, a, function () {
                e();
                $("#stubAgentManager").empty().queueAgentManager()
            })
        }
    },
    queuemgr: {
        build: function (a, e) {
            if (loginData.new_wallboards) return iframeScreen("/3/?embeded#!/cudatel/queuemgr", "queuemgr_url", this, a, e);
            return ajaxScreen("/ajax-html/queue_manager.html", this,
                a, function () {
                    e();
                    $("#stubQueueManager").queueManager();
                    $("#stubQueueManager .opOpenQueueManager").bind("click", function (f) {
                        f.preventDefault();
                        windowOpen({
                            url: "/ajax-html/wallboard/queue_manager_popup.shtml",
                            name: "queue_manager_wallboard",
                            preset: "fullscroll"
                        })
                    })
                })
        }
    },
    usercallflow: {
        build: function (a, e) {
            return ajaxScreen("/ajax-html/usercallflow.html", this, a, e)
        },
        enter: function () {
            loadInto($("#userCallflowRouters").empty(), "/gui/configure/dynamic/user_routers", "POST", {
                action: "list",
                template: "list"
            })
        }
    },
    uservoicemail: {
        build: function (a,
            e) {
            a.dom = $('<div id="screen-uservoicemail" class="screen only panel" help="user_voicemail.html"><h2>Voice Mail</h2><div class="userVoicemail"></div></div>').appendTo(this);
            help_activate(a.dom);
            e(a);
            return a.dom
        },
        enter: function () {
            this.find(".userVoicemail").empty().voicemailList()
        }
    },
    userfaxout: {
        build: function (a, e) {
            a.dom = $('<div id="screen-userfaxout" class="screen only panel" style="display: none" help="user_fax_outbox.html"><h2>Outgoing Faxes</h2><div class="faxOutList faxList"></div></div>').appendTo(this);
            help_activate(a.dom);
            e(a);
            return a.dom
        },
        enter: function () {
            var a = $(".faxOutList", this);
            a.data("faxOutList") && a.faxOutList("destroy");
            a.faxOutList()
        }
    },
    userfaxin: {
        build: function (a, e) {
            a.dom = $('<div id="screen-userfaxin" class="screen only panel" style="display: none" help="user_fax_inbox.html"><h2>Incoming Faxes</h2><div class="faxInList faxList"></div></div>').appendTo(this);
            help_activate(a.dom);
            e(a);
            return a.dom
        },
        enter: function () {
            var a = $(".faxInList", this);
            a.data("faxInList") && a.faxInList("destroy");
            a.faxInList()
        }
    },
    usersendfax: {
        build: function (d(".extensionList").extensionList({
                data: {
                    type: "valet_parking"
                },
                search: $(".extensionsSearch", a.dom),
                hasNoneText: "No parking extensions found"
            });
            a.dom.find(".opNewParking").bind("click",
                function (f) {
                    f.preventDefault();
                    showPopup("valet_parking_create")
                });
            e(a);
            return a.dom
        },
        enter: function () {
            $(".extensionList", this).extensionList("refresh")
        }
    },
    conferences: {
        build: function (a, e) {
            a.dom = $('<div id="screen-conferences" class="screen only panel" style="display: none" help="extension_list.html"><h2>Conferences <a class="ops opNewConference" href="#">Add New Conference</a></h2><div class="extensionsSearch"></div><div class="extensionList"></div></div>').appendTo(this);
            help_activate(a.dom);
            a.dom.find(".extensionList").extensionList({
                data: {
                    type: "conference"
                },
                search: $(".extensionsSearch", a.dom),
                hasNoneText: "No conferences found"
            });
            a.dom.find(".opNewConference").bind("click", function (f) {
                f.preventDefault();
                showPopup("conference_create")
            });
            e(a);
            return a.dom
        },
        enter: function () {
            $(".extensionList", this).extensionList("refresh")
        }
    },
    advrouters: {
        build: function (a, e) {
            a.dom = $('<div class="screen panel only">This screen does not exist in this version.</div>');
            e(a);
            return a.dom
        }
    },
    autoattends: {
        build: function (a, e) {
            a.dom = $('<div id="screen-autoattends" class="screen only panel" style="display: none" help="extension_list.html"><h2>Auto Attendants <a class="ops opNewRouter" href="#">Add New Call Router</a> <a class="ops opNewAutoAttendant" href="#">Add New Automated Attendant</a></h2><div class="extensionsSearch"></div><div class="extensionList"></div></div>').appendTo(this);
            help_activate(a.dom);
            a.dom.find(".extensionList").extensionList({
                data: {
                    type: "auto_attendant,router"
                },
                search: $(".extensionsSearch", a.dom),
                hasNoneText: "No automated attendants found"
            });
            a.dom.find(".opNewRouter").bind("click", function (f) {
                f.preventDefault();
                showPopup("router_create")
            });
            a.dom.find(".opNewAutoAttendant").bind("click", function (f) {
                f.preventDefault();
                showPopup("auto_attendant_create")
            });
            e(a);
            return a.dom
        },
        enter: function () {
            $(".extensionList", this).extensionList("refresh")
        }
    },
    phones: {
        build: function (a,
            e) {
            a.dom = $('<div id="screen-phones" class="screen only panel" style="display: none" help="extension_list.html"><h2>Phones</h2><div class="extensionsSearch"></div><div class="extensionList"></div></div>').appendTo(this);
            help_activate(a.dom);
            a.dom.find(".extensionList").extensionList({
                data: {
                    type: "phone"
                },
                search: $(".extensionsSearch", a.dom),
                hasNoneText: "No unassigned phones found"
            });
            e(a);
            return a.dom
        },
        enter: function () {
            $(".extensionList", this).extensionList("refresh")
        }
    },
    allexts: {
        build: function (a, e) {
            a.dom =
                $('<div id="screen-allexts" class="screen only panel" style="display: none" help="extension_list.html"><h2>All Extensions</h2><div class="extensionsSearch"></div><div class="extensionList"></div></div>').appendTo(this);
            help_activate(a.dom);
            a.dom.find(".extensionList").extensionList({
                search: $(".extensionsSearch", a.dom),
                hasNoneText: "No extensions found"
            });
            e(a);
            return a.dom
        },
        enter: function () {
            $(".extensionList", this).extensionList("refresh")
        }
    },
    providers: {
        build: function (a, e) {
            var f = this;
            $.get("/ajax-html/providers.html",
                function (j) {
                    a.dom = $('<div class="screen panel only" help="sip_provider_list.html"></div>').appendTo(f);
                    a.dom.html(j);
                    $("a.opNewGateway", a.dom).bind("click", function (g) {
                        g.preventDefault();
                        showPopup("new_sip_gateway", {
                            close: function () {
                                $(".providersTable", a.dom).empty().providersTable()
                            }
                        })
                    });
                    help_activate(a.dom);
                    e.call(undefined, a)
                });
            return true
        },
        enter: function () {
            $(".providersTable", this).empty().providersTable()
        }
    },
    hwproviders: {
        build: function (a, e) {
            var f = this;
            $.get("/ajax-html/hwproviders.html", function (j) {
                a.dom =
                    $('<div class="screen panel only" help="hardware_providers_list.html"></div>').appendTo(f);
                a.dom.html(j);
                help_activate(a.dom);
                e.call(undefined, a)
            });
            return true
        },
        enter: function () {
            $(".providersTable", this).empty().hardwareProvidersTable()
        }
    },
    routes: {
        build: function (a, e) {
            var f = this;
            $.get("/ajax-html/routing.html", function (j) {
                a.dom = $('<div class="screen panel only" help="routing.html"></div>').appendTo(f);
                a.dom.html(j);
                help_activate(a.dom);
                e.call(undefined, a)
            });
            return true
        },
        enter: function () {
            $(".routingList",
                this).routeMapList()
        }
    },
    cdrs: {
        build: function (a, e) {
            var f = this;
            $.get("/ajax-html/cdrs2.html", function (j) {
                a.dom = $(j).addClass("screen").appendTo(f);
                help_activate(a.dom);
                e.call(undefined, a)
            });
            return true
        },
        enter: function () {
            $(">.cdrList", this).cdrList()
        }
    },
    registrations: {
        build: function (a, e) {
            var f = this;
            $.get("/ajax-html/registrations.html", function (j) {
                a.dom = $(j).addClass("screen").appendTo(f);
                help_activate(a.dom);
                e.call(undefined, a)
            });
            return true
        },
        enter: function () {
            $(".phoneRegList", this).activeRegScreen()
        }
    },
    activityreports: {
        build: function (a, e) {
            return iframeScreen("/3/?embeded#!/cudatel/groupactivity/", "user_activity_url", this, a, e)
        },
        enter: function () {
            $(this).find("iframe")[0].src = "/3/?embeded#!/cudatel/groupactivity/"
        }
    },
    groupactivity: {
        build: function (a, e) {
            return iframeScreen("/3/?embeded#!/cudatel/groupactivity/", "user_activity_url", this, a, e)
        },
        enter: function () {
            $(this).find("iframe")[0].src = "/3/?embeded#!/cudatel/groupactivity/"
        }
    },
    networksettings: {
        build: function (a, e) {
            a.dom = $('<div id="screen-networksettings" class="screen panel only" style="display: none;" help="system_network_help.html"><div class="panel"><h3>Network</h3><div class="networkSettings"></div></div></div>').appendTo(this);
            help_activate(a.dom);
            a.dom.find(".networkSettings").networkSettings();
            e(a);
            return true
        }
    },
    firewallsettings: {
        build: function (a, e) {
            return ajaxScreen("/ajax-html/settings/firewall.html", this, a, function (f) {
                e();
                for (var j = [{
                    div: $(".firewallSettingsFirewall", f.dom),
                    url: "/gui/configure/dynamic/settings_wan_firewall?action=form"
                }], g = 0; g < j.length; g++) loadInto(j[g].div, j[g].url, "GET");
                $(".firewallSettingsIPACL", f.dom).ipAcl()
            })
        }
    },
    systemsettings: {
        build: function (a, e) {
            var f = this;
            $.getTemplate("/ajax-html/settings/system.html",
                function (j) {
                    a.dom = $('<div id="screen-systemsettings" class="screen panel only" style="display: none;" help="system_system_help.html"></div>').appendTo(f);
                    a.dom.html(j);
                    help_activate(a.dom);
                    e(a)
                });
            return true
        },
        afterBuild: function () {
            var a = this;
            $("form.adminPassword", this).formModule({
                dirty: function (j) {
                    return j.new_password == j.new_password_confirm && j.new_password != ""
                }
            });
            var e = $("select[name=timezone]", this);
            $.getREST("/gui/system/timezones", {}, function (j) {
                cur_val = j.timezone;
                $.each(j.timezones, function (g,
                    c) {
                    e.append('<option value="' + c.value + '">' + c.name + "</option>")
                });
                e.val(j.timezone);
                $(".systime", a).localTime();
                $("form.module", a).formModule();
                e.bind("change", function () {
                    jConfirm("Changing the system time zone may result in a momentary lapse in call processing or a few seconds of instability. Do you wish to continue?", "Confirm Time Zone Change", function (g) {
                        if (g) {
                            cur_val = e.val();
                            e.closest("form").trigger("submitEvent")
                        } else e.val(cur_val)
                    })
                })
            });
            var f = $("select[name=language]", this);
            $.getREST("/gui/system/languages", {}, function (j) {
                $.each(j.languages, function (g, c) {
                    f.append('<option value="' + c.value + '">' + c.name + "</option>")
                });
                f.val(j.language);
                $("form.module", a).formModule()
            });
            $(document.getElementById("system_settings_reporting")).one("built", function () {
                trueish($(document.getElementById("system_settings_reporting_allowed")).val()) && $(document.getElementById("system_settings_reporting_div")).show()
            }).formModule()
        },
        enter: function () {
            var a = $(this);
            $(".loginMethodSelect", a).disable("loading");
            $.getREST("/gui/system/login_method", {}, function (e) {
                $(".loginMethodSelect", a).enable("loading");
                var f = e.login_method;
                e = trueish(e.sync_available);
                $(".loginMethodSelect").val(f);
                if (e) {
                    $(".loginMethodDisabled", a).hide();
                    $(".loginMethodSelect", a).enable("syncAvailable")
                } else {
                    $(".loginMethodDisabled", a).show();
                    $(".loginMethodSelect", a).disable("syncAvailable")
                }
            })
        }
    },
    phonesettings: {
        build: function (a, e) {
            var f = this;
            $.getTemplate("/ajax-html/settings/phone.html", function (j) {
                a.dom = $('<div id="screen-phonesettings" class="screen panel only" style="display: none;" help="system_phones_help.html"></div>').appendTo(f);
                a.dom.html(j);
                help_activate(a.dom);
                a.dom.find("[name=bbx_call_timeout]").mask("9?999", {
                    placeholder: ""
                });
                $.getREST("/gui/system/network", function (g) {
                    var c = "<tt>http://" + g.network.prov_lan_ip + "/provision/</tt>";
                    if (g.network.external_inet_ip && g.network.external_inet_ip != "0.0.0.0") c += "(within your LAN) or <tt>http://" + g.network.external_inet_ip + "/provision/</tt> (outside your LAN)";
                    if (g.network.prov_fqdn) c = "<tt>http://" + g.network.prov_fqdn + "/provision/</tt>";
                    a.dom.find(".provisioningURL").html(c)
                });
                loadInto($(".ciscoProvPanel",
                    a.dom), "/ajax-html/settings/cisco_prov.html", "GET");
                loadInto($("#utilitiesSettingsGuide", a.dom), "/ajax-html/settings/guide.html", "GET");
                e(a)
            });
            return true
        },
        afterBuild: function () {
            var a = this;
            this.find("form.module").formModule();
            this.find("form.zeroDest").bind("built", function () {
                $(".opExtensionPicker", a).extensionPicker({
                    searchTypes: ["user", "group", "queue", "conference", "auto_attendant", "router", "phone"],
                    hidden: $("input[name=zero_dest]", a),
                    hiddenFormat: "number",
                    autoSelectFirst: true,
                    forcePickFirst: true,
                    mustValidate: true,
                    validate: "id",
                    emptyTriggersSelection: true
                }).val($("input[name=zero_dest]", a).val())
            });
            var e = this.find(".ringbackForm"),
                f = e.find(".customRingback");
            e.find(".ringbackSelect").bind("change", function () {
                var g = $(this),
                    c = g.closest("tr").find(".customRingback");
                if (g.val() === "_CUSTOM_") {
                    c.show().empty();
                    c.one("mohPickerBuilt", function () {
                        $(this).trigger("change")
                    });
                    c.mohPicker()
                } else {
                    c.hide();
                    g = {};
                    g[$(this).attr("name")] = $(this).val();
                    $.putREST("/gui/system/ringback", g)
                }
            });
            var j = {
                ringback: "ringback_moh_id",
                transfer_ringback: "transfer_ringback_moh_id"
            };
            f.bind("change", function () {
                var g = $(this),
                    c = g.closest("tr").find(".ringbackSelect");
                if (c.val() === "_CUSTOM_") {
                    var b = {};
                    b[j[c.attr("name")]] = g.find("select").val();
                    $.putREST("/gui/system/ringback", b)
                }
            })
        },
        enter: function () {
            var a = this;
            $.getREST("/gui/system/codecs", {}, function (e) {
                $(".codecPicker-inbound", screen.dom).codecPicker({
                    selected: e.codecs.codecs_inbound,
                    inputName: "codecs_inbound"
                });
                $(".codecPicker-outbound", screen.dom).codecPicker({
                    selected: e.codecs.codecs_outbound,
                    inputName: "codecs_outbound"
                });
                $(".prioritySelect").val(e.codecs.priority_preset)
            });
            $.getREST("/gui/system/ringback", function (e) {
                var f = a.find("tr.regularRingback"),
                    j = f.find(".ringbackSelect");
                f = f.find(".customRingback");
                if (trueish(e.ringback.ringback_moh_id)) {
                    f.empty().show().mohPicker({
                        name: "ringback_moh_id",
                        bbx_moh_id: e.ringback.ringback_moh_id
                    });
                    j.val("_CUSTOM_")
                }
                trueish(e.ringback.ringback) && j.val(e.ringback.ringback).trigger("change");
                f = a.find("tr.transferRingback");
                j = f.find(".ringbackSelect");
                f = f.find(".customRingback");
                if (trueish(e.ringback.transfer_ringback_moh_id)) {
                    f.empty().show().mohPicker({
                        name: "ringback_moh_id",
                        bbx_moh_id: e.ringback.transfer_ringback_moh_id
                    });
                    j.val("_CUSTOM_")
                }
                trueish(e.ringback.transfer_ringback) && j.val(e.ringback.transfer_ringback).trigger("change")
            })
        }
    },
    hasettings: {
        build: function (a, e) {
            a.dom = $('<div class="screen panel only" id="screen-hasettings" help="ha_settings.html"><div></div></div>').appendTo(this);
            help_activate(a.dom);
            e();
            return a.dom
        },
        enter: function () {
            $("#screen-hasettings > div").haSettings()
        }
    },
    mailsettings: {
        build: function (a, e) {
            a.dom = $('<div id="screen-mailsettings" class="screen panel only smtpSettings" style="display: none;" help="smtp_settings.html"><div></div></div>').appendTo(this);
            a.dom.find("div").smtpSettings("build");
            help_activate(a.dom);
            e(a);
            return true
        },
        enter: function () {
            this.smtpSettings("enter");
            return true
        }
    },
    ldapsettings: {
        build: function (a, e) {
            return ajaxScreen("/ajax-html/settings/ldap_screen.html", this, a, e)
        }
    },
    monitoring: {
        build: function (a, e) {
            var f = this;
            $.getTemplate("/ajax-html/monitoring.html",
                function (j) {
                    a.dom = $(j).addClass("screen").appendTo(f);
                    help_activate(a.dom);
                    e.call(undefined, a)
                });
            return true
        },
        enter: function () {
            $(">.eventList", this).eventList()
        }
    },
    backup: {
        build: function (a, e) {
            return ajaxScreen("/ajax-html/settings/backup.html", this, a, e)
        }
    },
    updatesettings: {
        build: function (a, e) {
            var f = this;
            $.getTemplate("/ajax-html/settings/updates_screen.html", function (j) {
                a.dom = $('<div id="screen-updatesettings" class="screen panel only" style="display: none;" help="system_updates_help.html"></div>').appendTo(f);
                a.dom.html(j);
                help_activate(a.dom);
                $("#updatesMainTable .progressBar", a.dom).bar({
                    style: "background-color: #004076; background-image: url(./images/bar/blue_horiz.png);",
                    animate: false
                });
                $(".startDownloadButton", a.dom).bind("click", function (g) {
                    g.preventDefault();
                    $(this).disable("waitfordl");
                    settings_startDownload($(g.target).attr("link"))
                });
                $(".stopDownloadButton", a.dom).bind("click", function (g) {
                    g.preventDefault();
                    settings_stopDownload($(g.target).attr("link"))
                });
                $(".installUpdateButton", a.dom).bind("click",
                    function (g) {
                        g.preventDefault();
                        settings_installUpdate($(g.target).attr("link"), true)
                    });
                $(".deleteUpdateButton", a.dom).bind("click", function (g) {
                    g.preventDefault();
                    settings_deleteUpdate($(g.target).attr("link"))
                });
                e(a)
            });
            return true
        }
    },
    extensionsettings: {
        build: function (a, e) {
            a.dom = $('<div class="screen extensionsettings only panel" help="system_extension_blocks_help.html"><h2>Valid Extension Blocks</h2><div class="extBlockList"></div></div>').appendTo(this);
            $(".extBlockList", a.dom).extensionBlockMgr();
            help_activate(a.dom);
            e(a);
            return true
        },
        enter: function () {
            return true
        }
    },
    soundmusic: {
        build: function (a, e) {
            return ajaxScreen("/ajax-html/settings/sound_music.html", this, a, e)
        }
    },
    utilitiessettings: {
        build: function (a, e) {
            var f = this;
            $.getTemplate("/ajax-html/settings/utilities.html", function (j) {
                a.dom = $('<div id="screen-utilitiessettings" class="screen panel only" style="display: none;" help="system_troubleshooting_help.html"></div>').appendTo(f);
                a.dom.html(j);
                help_activate(a.dom);
                e(a)
            });
            return true
        }
    },
    sitessettings: {
        build: function (a,
            e) {
            var f = this;
            $.getTemplate("/ajax-html/settings/sites.html", function (j) {
                a.dom = $('<div class="screen panel only" help="sites.html"></div>').appendTo(f);
                a.dom.html(j);
                help_activate(a.dom);
                e.call(undefined, a)
            });
            return true
        },
        enter: function () {
            $(".sitesListBody", this).empty().sitesTable()
        }
    },
    activation: {
        build: function (a, e) {
            var f = this;
            $.getTemplate("/ajax-html/settings/firstrun2.html", function (j) {
                a.dom = $('<div id="screen-firstrun2" class="screen panel only" style="display: none;"></div>').appendTo(f);
                a.dom.html(j);
                a.dom.find("h2.title").text("Activation");
                a.dom.find(".activationWidget").activation();
                a.dom.bind("activated", function () {
                    a.dom.find(".isActivated").show();
                    a.dom.find(".isNotActivated").hide()
                });
                a.dom.bind("notactivated", function () {
                    a.dom.find(".isActivated").hide();
                    a.dom.find(".isNotActivated").show()
                });
                $(".skipActivationLink, .isActivated button").hide();
                $(".isActivated", a.dom).bind("click", function (g) {
                    g.preventDefault()
                });
                e(a)
            });
            return true
        }
    },
    login: {
        build: function (a, e) {
            return ajaxScreen("/ajax-html/login.html",
                this, a, e)
        },
        enter: function () {
            loginMessage()
        }
    },
    expert: {
        build: function (a, e) {
            unhideNavItem("expert");
            var f = this;
            $.getTemplate("/ajax-html/expert.html", function (j) {
                a.dom = $('<div id="screen-expert" class="screen panel only" style="display: none;"></div>').appendTo(f);
                a.dom.html(j);
                loadInto($("#expertADUndelete", a.dom), "/gui/configure/dynamic/expert", "POST", {
                    action: "list_deleted_users",
                    template: "undelete_list"
                });
                $("button.undeleteADUsers", a.dom).bind("click", function () {
                    loadInto($("#expertADUndelete", a.dom),
                        "/gui/configure/dynamic/expert", "POST", {
                            action: "list_deleted_users",
                            template: "undelete_list"
                        })
                });
                $.getREST("/gui/permission/checkcheck", {
                    check: "DEMOABLE"
                }, function (g) {
                    if (trueish(g.checkcheck)) {
                        $("#demoModeLI").show();
                        $("#demoModeSettings").demoModeSettings();
                        $("#demoModeSetup").demoModeSetup()
                    }
                });
                e.call(undefined, a)
            });
            return true
        }
    },
    firstrun0: {
        build: function (a, e) {
            var f = this;
            $.getTemplate("/ajax-html/settings/firstrun0.html", function (j) {
                a.dom = $('<div id="screen-firstrun0" class="screen panel only" style="display: none;"></div>').appendTo(f);
                a.dom.html(j);
                a.dom.find(".nextStep").one("click", function (g) {
                    g.preventDefault();
                    $.putREST("/gui/system/firstrun", {
                        step: 1
                    }, function () {
                        location.reload()
                    })
                });
                e(a)
            });
            return true
        }
    },
    firstrun1: {
        build: function (a, e) {
            var f = this;
            $.getTemplate("/ajax-html/settings/firstrun1.html", function (j) {
                a.dom = $('<div id="screen-firstrun1" class="screen panel only" style="display: none;"></div>').appendTo(f);
                a.dom.html(j);
                a.dom.find(".networkSettings").networkSettings({
                    alwaysDirty: true
                });
                a.dom.one("submitted", function (g) {
                    g.preventDefault();
                    $.putREST("/gui/system/firstrun", {
                        step: 2
                    }, function () {
                        location.reload()
                    })
                });
                e(a)
            });
            return true
        }
    },
    firstrun2: {
        build: function (a, e) {
            var f = this;
            $.getTemplate("/ajax-html/settings/firstrun2.html", function (j) {
                a.dom = $('<div id="screen-firstrun2" class="screen panel only" style="display: none;"></div>').appendTo(f);
                a.dom.html(j);
                a.dom.find(".activationWidget").activation();
                a.dom.bind("activated", function () {
                    a.dom.find(".isActivated").show();
                    a.dom.find(".isNotActivated").hide()
                });
                a.dom.bind("notactivated", function () {
                    a.dom.find(".isActivated").hide();
                    a.dom.find(".isNotActivated").show()
                });
                $(".skipActivationLink, .isActivated", a.dom).bind("click", function (g) {
                    g.preventDefault();
                    $.putREST("/gui/system/firstrun", {
                        step: 3
                    }, function () {
                        location.reload()
                    })
                });
                e(a)
            });
            return true
        }
    },
    firstrun3: {
        build: function (a, e) {
            var f = this;
            $.getTemplate("/ajax-html/settings/firstrun3.html", function (j) {
                a.dom = $('<div id="screen-firstrun3" class="screen panel only" style="display: none;"></div>').appendTo(f);
                a.dom.html(j);
                setTimeout(function () {
                    $(".progressBar", a.dom).bar({
                        style: "background-color: #004076;",
                        animate: false
                    })
                }, 50);
                $(".continue", a.dom).bind("click", function () {
                    $.putREST("/gui/system/firstrun", {
                        step: 4
                    }, function () {
                        location.reload()
                    })
                });
                $.getREST("/gui/jsoncache/cache?channel=update_wrapper", function (g) {
                    var c = $(".installScreenUpdatesGeneral", a.dom);
                    $(".installScreenGeneralVersion", a.dom).text(g.new_version);
                    if (g.new_version && g.new_version > g.system_version) {
                        c.addClass("startReady");
                        $(".startDownloadButton", a.dom).bind("click", function (b) {
                            b.preventDefault();
                            settings_startDownload("stable")
                        });
                        $(".stopDownloadButton", a.dom).bind("click", function (b) {
                            b.preventDefault();
                            settings_stopDownload("stable")
                        });
                        $(".installUpdateButton", a.dom).bind("click", function (b) {
                            b.preventDefault();
                            settings_installUpdate("stable")
                        });
                        $(window).bind("meteor_update_status", function (b, l) {
                            if (l.json.download_not_available) {
                                c.removeClass("inprogress downloadReady startReady").addClass("noop");
                                $(".progressBar", a.dom).hide()
                            } else if (l.json.error) {
                                c.removeClass("inprogress downloadReady startReady").addClass("noop");
                                $(".noopMessage",
                                    a.dom).text("Error: " + l.json.error);
                                $(".progressBar", a.dom).hide()
                            } else {
                                if (l.json.download_canceled) {
                                    c.addClass("startReady").removeClass("inprogress downloadReady noop");
                                    c.find(".progressBar").setBar(0)
                                }
                                if (l.json.download_progress) {
                                    c.removeClass("downloadReady noop startReady").addClass("inprogress");
                                    a.dom.find(".progressBar:visible").setBarOpts({
                                        halt: false
                                    });
                                    a.dom.find(".progressBar:visible").setBar(l.json.download_progress / 100);
                                    a.dom.find(".progressText").text(l.json.download_progress + "%")
                                }
                                if (l.json.download_complete) {
                                    c.removeClass("startReady downloadReady").addClass("inprogress");
                                    $(".progressText", a.dom).html("Verifying download.<img src='/images/wait.gif'/>")
                                }
                                l.json.download_verified && c.removeClass("startReady inprogress noop").addClass("downloadReady")
                            }
                        })
                    } else {
                        c.addClass("noop").removeClass("inprogress startReady downloadReady");
                        $(".progressBar", a.dom).hide();
                        g.activated == 0 && $(".noopMessage", a.dom).text("Your CudaTel is not activated and is therefore unable to obtain updates.")
                    }
                    e(a)
                })
            });
            return true
        }
    },
    firstrun4: {
        build: function (a, e) {
            var f = this;
            $.getTemplate("/ajax-html/settings/firstrun4.html",
                function (j) {
                    a.dom = $('<div id="screen-firstrun4" class="screen panel only" style="display: none;"></div>').appendTo(f);
                    a.dom.html(j);
                    e(a);
                    $.getREST("/gui/system/network", function (g) {
                        var c = "<tt>http://" + g.network.prov_lan_ip + "/provision/</tt>";
                        if (g.network.external_inet_ip && g.network.external_inet_ip != "0.0.0.0") c += "(within your LAN) or <tt>http://" + g.network_external_inet_ip + "/provision/</tt> (outside your LAN)";
                        a.dom.find(".provisioningURL").html(c)
                    })
                });
            return true
        },
        afterBuild: function () {
            $("form.adminPassword",
                this).formModule({
                dirty: function (a) {
                    return a.new_password == a.new_password_confirm && a.new_password != ""
                }
            });
            this.superForm({
                button: $("button.closeInstallation", this)
            }).bind("success", function () {
                $.putREST("/gui/system/firstrun", {
                    step: 5
                }, function () {
                    $(window).unbind("hashchange.nav");
                    location.replace("#");
                    location.reload()
                })
            });
            $("#exts").extensionBlockMgr()
        }
    },
    diags: {
        build: function (a, e) {
            a.dom = $('<div id="screen-diags" class="screen only panel" help="diags.html"><h2>Diagnostic Tests</h2><div class="diagsBody"></div></div>').appendTo(this);
            help_activate(a.dom);
            $.getTemplate("/ajax-html/settings/diags.html", function (f) {
                f = $(f);
                a.dom.children(".diagsBody").empty().append(f);
                f.ajaxForm({
                    beforeSerialize: function (j) {
                        if (!j.find(":checked")[0]) {
                            showBlanker({
                                title: "Nothing Selected",
                                text: "No tests were selected. Click the checkmark next to one or more tests to continue.",
                                buttons: ["OK"]
                            });
                            return false
                        }
                    },
                    success: function () {
                        showBlanker({
                            icon: false,
                            title: "Running Diagnostics",
                            text: "Information in the table will update as the tests you selected are run.",
                            buttons: ["OK"]
                        })
                    },
                    accept: "application/json"
                });
                e(a)
            });
            return a.dom
        },
        enter: function () {
            $(".diagsTable", this).diagsTable()
        }
    },
    ccc_address: {
        build: function (a, e) {
            a.dom = $('<div id="screen-ccc-address" class="screen only panel" help="user_address_book.html"><div class="cccCallMonitor"></div><div class="cccAddressBody"></div></div>').appendTo(this);
            help_activate(a.dom);
            a.dom.children(".cccAddressBody").addressBook();
            e(a);
            return a.dom
        },
        enter: function () {
            $(this).children(".cccCallMonitor").callMonitorBar()
        },
        exit: function () {
            $(this).children(".cccCallMonitor").callMonitorBar("destroy")
        }
    },
    ccc_confman: {
        build: function (a, e) {
            a.dom = $('<div id="screen-ccc-confman" class="screen only panel" help="user_conference_manager.html"><div class="cccCallMonitor"></div><h2>Conference Manager</h2><div class="cccConfmanBody"></div></div>').appendTo(this);
            help_activate(a.dom);
            a.dom.children(".cccConfmanBody").conferenceManager();
            e(a);
            return a.dom
        },
        enter: function () {
            $(this).children(".cccCallMonitor").callMonitorBar()
        },
        exit: function () {
            $(this).children(".cccCallMonitor").callMonitorBar("destroy")
        }
    },
    ccc_queues: {
        build: function (a,
            e) {
            a.dom = $('<div id="screen-ccc-queues" class="screen only panel" help="user_ccc_queue_manager.html"><div class="cccCallMonitor"></div><h2>Queue Call Manager</h2><div class="cccQueuesBody"></div></div>').appendTo(this);
            help_activate(a.dom);
            a.dom.children(".cccQueuesBody").queueCalls();
            e(a);
            return a.dom
        },
        enter: function () {
            $(this).children(".cccCallMonitor").callMonitorBar()
        },
        exit: function () {
            $(this).children(".cccCallMonitor").callMonitorBar("destroy")
        }
    }
});
initOverlaysList({
    user: {
        help: "extension_edit_help.html",
        init: function (a, e) {
            var f = function () {
                $("form.module:not(.voicemailEmail)", a).formModule({
                    formData: {
                        bbx_user_id: e.bbx_user_id
                    }
                });
                $("form.module.voicemailEmail", a).formModule({
                    formData: {
                        bbx_user_id: e.bbx_user_id
                    },
                    preSubmit: function (c) {
                        voicemailEmailPreSubmit(c);
                        return false
                    }
                })
            }, j = function () {
                    a.find(".callRecording").callRecording("bbx_user_id", {
                        bbx_user_id: e.bbx_user_id,
                        callback: f
                    })
                }, g = {
                    action: "detail",
                    bbx_extension_id: e.bbx_extension_id,
                    bbx_user_id: e.bbx_user_id
                };
            g[e.key] = e[e.key];
            overlayLoadClassic("/gui/configure/dynamic/users", g, a, j);
            a.bind("refreshDetail refreshUsers", function () {
                loadInto(a, "/gui/configure/dynamic/users", "POST", {
                    action: "detail",
                    bbx_user_id: e.bbx_user_id
                }, j)
            })
        }
    },
    user_create: {
        init: function (a) {
            overlayLoadClassic("/gui/configure/dynamic/new_panels", {
                type: "bbx_user_id"
            }, a)
        },
        fillHeight: true
    },
    group: {
        help: "group_type_help.html",
        init: function (a, e) {
            var f = function () {
                $("form.module", a).formModule({
                    formData: {
                        bbx_group_id: e.bbx_group_id
                    }
                })
            }, j = function () {
                    a.find(".callRecording").callRecording("bbx_group_id", {
                        bbx_group_id: e.bbx_group_id,
                        callback: f
                    })
                }, g = {
                    action: "detail",
                    template: "detail",
                    bbx_extension_id: e.bbx_extension_id
                };
            g[e.key] = e[e.key];
            overlayLoadClassic("/gui/configure/dynamic/groups", g, a, j);
            a.parent().bind("refreshDetail", function () {
                loadInto(a, "/gui/configure/dynamic/groups", "POST", {
                    bbx_group_id: e.bbx_group_id,
                    detail_extension_id: e.bbx_extension_id,
                    action: "detail",
                    template: "detail"
                }, j)
            })
        }
    },
    group_create: {
        init: function (a) {
            overlayLoadClassic("/gui/configure/dynamic/new_panels", {
                    type: "bbx_group_id"
                },
                a)
        }
    },
    queue: {
        help: "queue_edit_help.html",
        init: function (a, e) {
            $.getJSONCached("/gui/permission/user_permissions", {}, 1E3, function (f) {
                a.bind("refreshDetail", function () {
                    $.getREST("/gui/extension/queue/queue", e, function (j) {
                        var g = j.queue,
                            c = $('<div class="queueDetailBody"><div class="detailMasthead"></div><div class="queueDetail"></div></div>'),
                            b = {
                                name: g.bbx_queue_name,
                                number: g.bbx_extension_value,
                                prefix: "bbx_queue",
                                bbx_queue_id: g.bbx_queue_id,
                                bbx_extension_id: g.bbx_extension_id,
                                restURL: "/gui/queue2/queue",
                                buttons: []
                            };
                        f.user_permissions.EDIT_QUEUE && b.buttons.push("rename");
                        f.user_permissions.EDIT_EXTENSION && g.bbx_extension_block_begin == g.bbx_extension_block_end && !g.flag_external && b.buttons.push("migrate");
                        f.user_permissions.DELETE_QUEUE && b.buttons.push("delete");
                        $(".queueDetail", c).queueDetail({
                            jsQueue: j.queue
                        });
                        $(".detailMasthead", c).extensionDetailMasthead(b);
                        a.empty().append(c)
                    })
                }).triggerHandler("refreshDetail")
            })
        }
    },
    queue_create: {
        init: function (a) {
            overlayLoadClassic("/gui/configure/dynamic/new_panels", {
                type: "bbx_queue_id"
            }, a)
        }
    },
    router: {
        help: "router_edit_help.html",
        init: function (a, e) {
            var f = {
                action: "detail",
                template: "router",
                bbx_extension_id: e.bbx_extension_id
            };
            f[e.key] = e[e.key];
            overlayLoadClassic("/gui/configure/dynamic/detail", f, a);
            a.parent().bind("refreshDetail", function () {
                loadInto(a, "/gui/configure/dynamic/detail", "POST", {
                    bbx_router_id: e.bbx_router_id,
                    bbx_extension_id: e.bbx_extension_id,
                    action: "detail",
                    template: "router",
                    type: "router"
                })
            })
        }
    },
    router_create: {
        init: function (a) {
            overlayLoadClassic("/gui/configure/dynamic/new_panels", {
                type: "bbx_router_id"
            }, a)
        }
    },
    valet_parking: {
        help: "parking.html",
        init: function (a, e) {
            $(a).empty().valetParking({
                bbx_valet_parking_id: e.bbx_valet_parking_id
            })
        }
    },
    valet_parking_create: {
        init: function (a) {
            $(a).empty().valetParkingCreate()
        }
    },
    conference: {
        help: "conference_edit_help.html",
        init: function (a, e) {
            var f = {
                action: "detail",
                bbx_extension_id: e.bbx_extension_id
            };
            f[e.key] = e[e.key];
            overlayLoadClassic("/gui/configure/dynamic/conferences", f, a);
            a.parent().bind("refreshDetail", function () {
                loadInto(a, "/gui/configure/dynamic/conferences",
                    "POST", {
                        bbx_conference_id: e.bbx_conference_id,
                        detail_extension_id: e.bbx_extension_id,
                        action: "detail"
                    })
            })
        }
    },
    conference_create: {
        init: function (a) {
            overlayLoadClassic("/gui/configure/dynamic/new_panels", {
                type: "bbx_conference_id"
            }, a)
        }
    },
    auto_attendant: {
        help: "auto_attendant_edit_help.html",
        init: function (a, e) {
            var f = {
                action: "detail",
                bbx_extension_id: e.bbx_extension_id
            };
            f[e.key] = e[e.key];
            overlayLoadClassic("/gui/configure/dynamic/autoattends", f, a);
            a.parent().bind("refreshDetail", function () {
                loadInto(a, "/gui/configure/dynamic/autoattends",
                    "POST", {
                        bbx_auto_attendant_id: e.bbx_auto_attendant_id,
                        detail_extension_id: e.bbx_extension_id,
                        action: "detail"
                    })
            })
        }
    },
    auto_attendant_create: {
        init: function (a) {
            overlayLoadClassic("/gui/configure/dynamic/new_panels", {
                type: "bbx_auto_attendant_id"
            }, a)
        }
    },
    auto_attendant_non_interactive: {
        init: function (a, e) {
            var f = {
                action: "detail",
                template: "detail_v2",
                bbx_extension_id: e.bbx_extension_id
            };
            f[e.key] = e[e.key];
            overlayLoadClassic("/gui/configure/dynamic/callflow", f, a)
        }
    },
    phone: {
        help: "unassignedphone_type_help.html",
        init: function (a, e) {
            a.empty().phoneDetail(e)
        }
    },
    gateway_edit: {
        help: "gateway_edit_help.html",
        init: function (a, e) {
            a.empty().gatewayEdit({
                bbx_provider_gateway_id: e.bbx_provider_gateway_id
            })
        }
    },
    tdm_analog_edit: {
        help: "tdm_analog_edit_help.html",
        init: function (a, e) {
            a.empty().tdmAnalogEdit(e.bbx_tdm_card_port_id)
        }
    },
    tdm_digital_edit: {
        help: "tdm_digital_edit_help.html",
        init: function (a, e) {
            a.empty().tdmDigitalEdit(e.bbx_tdm_card_port_id)
        }
    },
    new_sip_gateway: {
        help: "new_provider_gateway_help.html",
        fillHeight: true,
        init: function (a) {
            a.empty().gatewayCreate()
        }
    },
    phone_edit: {
        fillHeight: true,
        help: "phone_edit.html",
        init: function (a, e) {
            a.empty().phoneEdit(e)
        },
        close: function () {}
    },
    button_line_edit: {
        fillHeight: true,
        init: function (a, e) {
            a.empty().buttonLineEdit(e)
        }
    },
    line_forwards: {
        fillHeight: true,
        init: function (a, e) {
            a.empty().buttonLineForwards(e)
        }
    },
    line_reg_info: {
        fillHeight: true,
        init: function (a, e) {
            a.empty().buttonLineRegInfo(e)
        }
    },
    phone_add: {
        fillHeight: true,
        init: function (a, e) {
            a.empty().phoneAdd(e)
        }
    },
    extension_create: {
        init: function (a, e) {
            overlayLoadClassic("/gui/configure/dynamic/new_panels", {
                type: e.type
            }, a)
        }
    },
    user_rename: {
        init: function (a, e) {
            overlayLoadClassic("/gui/configure/dynamic/common_ops", {
                action: "form",
                form: "rename_user",
                form_url: "users",
                form_action: "modify_contact",
                obj_type: "user",
                obj_id: e.obj_id,
                bbx_contact_id: e.bbx_contact_id,
                ext_id: e.ext_id,
                first: e.first,
                last: e.last
            }, a)
        }
    },
    user_delete: {
        init: function (a, e) {
            extraText = {
                user: "This will remove all of the user's Address Book entries, Voice Mail, and Fax files."
            };
            var f = {
                action: "form",
                form: "delete",
                form_url: "users",
                form_action: "remove",
                obj_type: "user",
                obj_id: e.obj_id,
                bbx_contact_id: e.bbx_contact_id,
                ext_id: e.ext_id,
                obj_name: e.obj_name
            };
            if (e.extra_text && extraText[e.extra_text]) f.extra_text = extraText[e.extra_text];
            overlayLoadClassic("/gui/configure/dynamic/common_ops", f, a)
        }
    },
    user_migrate: {
        init: function (a, e) {
            overlayLoadClassic("/gui/configure/dynamic/common_ops", {
                action: "form",
                form: "migrate",
                form_url: "extensions",
                form_action: "migrate",
                obj_type: "user",
                obj_id: e.obj_id,
                ext_id: e.ext_id
            }, a)
        }
    },
    group_rename: {
        init: function (a, e) {
            overlayLoadClassic("/gui/configure/dynamic/common_ops", {
                action: "form",
                form: "rename",
                form_url: "groups",
                form_action: "modify",
                obj_type: "group",
                obj_id: e.obj_id,
                current: e.current
            }, a)
        }
    },
    group_delete: {
        init: function (a, e) {
            overlayLoadClassic("/gui/configure/dynamic/common_ops", {
                action: "form",
                form: "delete",
                form_url: "groups",
                form_action: "remove",
                obj_type: "group",
                obj_id: e.obj_id,
                ext_id: e.ext_id,
                obj_name: e.obj_name
            }, a)
        }
    },
    group_migrate: {
        init: function (a, e) {
            overlayLoadClassic("/gui/configure/dynamic/common_ops", {
                action: "form",
                form: "migrate",
                form_url: "extensions",
                form_action: "migrate",
                obj_type: "group",
                obj_id: e.obj_id,
                ext_id: e.ext_id
            }, a)
        }
    },
    valet_parking_rename: {
        init: function (a, e) {
            overlayLoadClassic("/gui/configure/dynamic/common_ops", {
                action: "form",
                form: "rename",
                form_url: "valet_parking",
                form_action: "modify",
                obj_type: "valet_parking",
                obj_id: e.obj_id,
                ext_id: e.ext_id,
                current: e.current
            }, a)
        }
    },
    valet_parking_delete: {
        init: function (a, e) {
            overlayLoadClassic("/gui/configure/dynamic/common_ops", {
                action: "form",
                form: "delete",
                form_url: "valet_parking",
                form_action: "remove",
                obj_type: "valet_parking",
                obj_id: e.obj_id,
                ext_id: e.ext_id,
                obj_name: e.obj_name
            }, a)
        }
    },
    conference_rename: {
        init: function (a, e) {
            overlayLoadClassic("/gui/configure/dynamic/common_ops", {
                action: "form",
                form: "rename",
                form_url: "conferences",
                form_action: "modify",
                obj_type: "conference",
                obj_id: e.obj_id,
                ext_id: e.ext_id,
                current: e.current
            }, a)
        }
    },
    conference_delete: {
        init: function (a, e) {
            overlayLoadClassic("/gui/configure/dynamic/common_ops", {
                action: "form",
                form: "delete",
                form_url: "conferences",
                form_action: "remove",
                obj_type: "conference",
                obj_id: e.obj_id,
                ext_id: e.ext_id,
                obj_name: e.obj_name
            }, a)
        }
    },
    conference_migrate: {
        init: function (a, e) {
            overlayLoadClassic("/gui/configure/dynamic/common_ops", {
                action: "form",
                form: "migrate",
                form_url: "conferencess",
                form_action: "migrate",
                obj_type: "conference",
                obj_id: e.obj_id,
                ext_id: e.ext_id
            }, a)
        }
    },
    phone_delete: {
        init: function (a, e) {
            overlayLoadClassic("/gui/configure/dynamic/common_ops", {
                action: "form",
                form: "delete",
                form_url: "phones",
                form_action: "remove",
                obj_type: "phone",
                obj_id: e.obj_id,
                ext_id: e.ext_id,
                obj_name: e.obj_name
            }, a)
        }
    },
    phone_migrate: {
        init: function (a, e) {
            overlayLoadClassic("/gui/configure/dynamic/common_ops", {
                action: "form",
                form: "migrate",
                form_url: "extensions",
                form_action: "migrate",
                obj_type: "phone",
                obj_id: e.obj_id,
                ext_id: e.ext_id
            }, a)
        }
    },
    autoattendant_rename: {
        init: function (a, e) {
            overlayLoadClassic("/gui/configure/dynamic/common_ops", {
                action: "form",
                form: "rename",
                form_url: "autoattends",
                form_action: "rename",
                obj_type: "auto_attendant",
                obj_id: e.obj_id,
                ext_id: e.ext_id,
                current: e.current
            }, a)
        }
    },
    autoattendant_delete: {
        init: function (a,
            e) {
            overlayLoadClassic("/gui/configure/dynamic/common_ops", {
                action: "form",
                form: "delete",
                form_url: "autoattends",
                form_action: "delete",
                obj_type: "auto_attendant",
                obj_id: e.obj_id,
                ext_id: e.ext_id,
                obj_name: e.obj_name
            }, a)
        }
    },
    autoattendant_migrate: {
        init: function (a, e) {
            overlayLoadClassic("/gui/configure/dynamic/common_ops", {
                action: "form",
                form: "migrate",
                form_url: "autoattends",
                form_action: "migrate",
                obj_type: "auto_attendant",
                obj_id: e.obj_id,
                ext_id: e.ext_id
            }, a)
        }
    },
    extension_rename: {
        init: function (a) {
            $.getTemplate("/ajax-html/operations/rename.html",
                function (e) {
                    a.html(e);
                    setTimeout(function () {
                        a.parent().triggerHandler("popup_ready")
                    }, 25)
                })
        }
    },
    extension_delete: {
        init: function (a) {
            $.getTemplate("/ajax-html/operations/delete.html", function (e) {
                a.html(e);
                setTimeout(function () {
                    a.parent().triggerHandler("popup_ready")
                }, 25)
            })
        }
    },
    extension_migrate: {
        init: function (a) {
            $.getTemplate("/ajax-html/operations/migrate.html", function (e) {
                a.html(e);
                setTimeout(function () {
                    a.parent().triggerHandler("popup_ready")
                }, 25)
            })
        }
    },
    router_rename: {
        init: function (a, e) {
            overlayLoadClassic("/gui/configure/dynamic/common_ops", {
                action: "form",
                form: "rename",
                form_url: "routers",
                form_action: "modify",
                obj_type: "router",
                obj_id: e.obj_id,
                ext_id: e.ext_id,
                current: e.current
            }, a)
        }
    },
    router_delete: {
        init: function (a, e) {
            overlayLoadClassic("/gui/configure/dynamic/common_ops", {
                action: "form",
                form: "delete",
                form_url: "routers",
                form_action: "delete",
                obj_type: "router",
                obj_id: e.obj_id,
                ext_id: e.ext_id,
                obj_name: e.obj_name
            }, a)
        }
    },
    router_migrate: {
        init: function (a, e) {
            overlayLoadClassic("/gui/configure/dynamic/common_ops", {
                action: "form",
                form: "migrate",
                form_url: "extensions",
                form_action: "migrate",
                obj_type: "router",
                obj_id: e.obj_id,
                ext_id: e.ext_id
            }, a)
        }
    },
    gateway_rename: {
        init: function (a, e) {
            overlayLoadClassic("/gui/configure/dynamic/common_ops", {
                action: "form",
                form: "rename",
                form_url: "gateways",
                form_action: "rename",
                obj_type: "provider_gateway",
                obj_id: e.obj_id,
                current: e.current
            }, a)
        }
    },
    gateway_delete: {
        init: function (a, e) {
            overlayLoadClassic("/gui/configure/dynamic/common_ops", {
                action: "form",
                form: "delete",
                form_url: "gateways",
                form_action: "remove",
                obj_type: "provider_gateway",
                obj_id: e.obj_id,
                obj_name: e.obj_name
            }, a)
        }
    },
    forward: {
        init: function (a, e) {
            var f, j = "/gui/fax/forward";
            if (e.bbx_fax_inbound_id) f = "bbx_fax_inbound_id";
            else if (e.bbx_fax_outbound_id) f = "bbx_fax_outbound_id";
            else if (e.voicemail_msgs_id) {
                f = "voicemail_msgs_id";
                j = "/gui/voicemail/forward"
            }
            $.getTemplate("/ajax-html/forward_form.html", function (g) {
                var c = $(g);
                c.attr("action", j);
                $(".submit", c).disable("invalid");
                c.append($('<input type="hidden" name="' + f + '" />').val(e[f]));
                $(".destination", c).extensionPicker({
                    searchTypes: ["user", "group"],
                    hiddenName: "bbx_object",
                    hiddenFormat: "{object_type}:{object_id}",
                    autoSelectFirst: true
                }).bind("selection", function () {
                    $(".submitButton").enable("invalid")
                }).bind("noselection", function () {
                    $(".submitButton", c).disable("invalid")
                });
                a.html(c);
                c.ajaxForm({
                    dataType: "json",
                    success: function () {
                        c.trigger("close_request")
                    }
                });
                setTimeout(function () {
                    a.parent().triggerHandler("popup_ready")
                }, 25)
            })
        }
    },
    demo_splash: {
        init: function (a) {
            $.getTemplate("/ajax-html/demosplash.html", function (e) {
                a.html(e);
                setTimeout(function () {
                        a.parent().triggerHandler("popup_ready")
                    },
                    25)
            })
        }
    },
    eavesdrop: {
        init: function (a) {
            $.getTemplate("/ajax-html/eavesdrop.html", function (e) {
                a.html(e);
                setTimeout(function () {
                    a.parent().triggerHandler("popup_ready")
                }, 25)
            })
        }
    },
    routemanager: {
        fillHeight: true,
        init: function (a, e) {
            a.routeManager(e);
            a.parent().triggerHandler("popup_ready")
        }
    },
    routemapmanager: {
        fillHeight: true,
        init: function (a) {
            a.bind("close_request", function (e) {
                e.stopPropagation()
            });
            $.get("/ajax-html/routing.html", function (e) {
                a.html(e);
                $(".routingList", a).routeMapList();
                a.parent().triggerHandler("popup_ready")
            })
        }
    },
    ldap_credentials: {
        fillHeight: true,
        init: function (a) {
            $.getTemplate("/ajax-html/settings/ldap_credentials.html", function (e) {
                var f = $(e);
                a.html(f);
                f.find("button[type=submit]").disable("no-id");
                $.getREST("/gui/sync/server", {}, function (j) {
                    j.server.bbx_sync_server_bind_dn && f.find("[name=bbx_sync_server_bind_dn]").val(j.server.bbx_sync_server_bind_dn);
                    f.find("[name=bbx_sync_server_id]").val(j.server.bbx_sync_server_id);
                    f.find("button[type=submit]").enable("no-id")
                });
                f.find("button.test").bind("click", function () {
                    $.postREST("/gui/sync/test",
                        f.serializeObject(), function (j) {
                            trueish(j.test) ? f.find("button[type=submit]").enable("not-tested") : alert("There was a problem connecting to the Active Directory server. Please verify your credentials and test again.")
                        })
                });
                f.find("input").bind("change keyup", function () {
                    var j = f.find("button[type=submit]");
                    j.disable("not-tested");
                    var g = f.find(".verifyPassword");
                    if (g.eq(0).val() === g.eq(1).val()) {
                        j.enable("not-matching");
                        f.find(".not-matching").hide()
                    } else {
                        j.disable("not-matching");
                        f.find(".not-matching").show()
                    }
                }).eq(0).trigger("change");
                f.ajaxForm({
                    accept: "application/json",
                    type: "PUT",
                    complete: function () {
                        f.trigger("close_request")
                    }
                })
            })
        }
    }
});

function blankerCancel() {
    $(this).trigger("closeBlanker")
}
(function (a) {
    var e = [];
    showBlanker = function (f) {
        f = a.extend(true, {}, {
            spinner: false,
            flyby: false,
            shade: true,
            icon: "/images/warning_large.png",
            iconCSS: false,
            title: "",
            text: "",
            buttons: ["OK"],
            callbacks: [
                function () {
                    a(this).trigger("closeBlanker")
                }
            ],
            ping: false,
            pingTime: 2E4,
            modal: false
        }, f);
        var j = false,
            g = a('<div class="blanker"></div>').bind("closeBlanker", function () {
                j = true;
                var c = this;
                if (e.length && e[e.length - 1].dom[0] == c) {
                    e.pop();
                    e.length && e[e.length - 1].dom.show()
                } else e.length && a.each(e, function (b) {
                    if (this.dom[0] ==
                        c) {
                        e.splice(b, 1);
                        return false
                    }
                });
                a(this).remove()
            }).appendTo("body");
        a.getTemplate("/ajax-html/blanker.html", function (c) {
            if (!j) {
                g.append(c);
                g.data("params", f);
                var b = {
                    dom: g,
                    params: f
                };
                c = true;
                if (e.length)
                    if (e[e.length - 1].params.modal)
                        for (var l = e.length - 1; l >= 0; l--) {
                            if (!e[l].modal) {
                                e.splice(l, 0, b);
                                c = false;
                                break
                            }
                        } else e.push(b);
                    else e.push(b);
                if (f.flyby) {
                    g.bind("flyby", function (q, u) {
                        a(".flyby", g).text(u)
                    });
                    typeof f.flyby == "string" && a(".flyby", g).text(f.flyby)
                } else a(".flyby", g).remove();
                f.shade || a(".blankerBackground",
                    g).remove();
                if (f.spinner) {
                    a('<img src="/images/bigwait.gif" width="100" height="100" alt="Please wait..." class="blankerSpinner" />').appendTo(a(".blankerIcons", g));
                    if (f.icon) {
                        b = a('<img src="' + f.icon + '" class="blankerIcon" />').appendTo(a(".blankerIcons", g));
                        f.iconCSS && b.css(f.iconCSS)
                    }
                } else if (f.icon) {
                    b = a('<img src="' + f.icon + '" class="blankerIconSimple" />').appendTo(a(".blankerIcons", g));
                    f.iconCSS && b.css(f.iconCSS)
                } else g.addClass("noIcon"); if (typeof f.buttons == "string") f.buttons = [f.buttons];
                if (typeof f.callbacks ==
                    "function") f.callbacks = [f.callbacks];
                if (f.buttons && f.buttons.length) {
                    f.callbacks = f.callbacks || [f.callbacks];
                    a.each(f.buttons, function (q, u) {
                        var v = a('<button type="button"></button>').text(u).appendTo(a(".buttons", g));
                        if (f.callbacks[q]) {
                            var x = f.callbacks[q];
                            v.bind("click", function () {
                                x.call(this, q)
                            })
                        }
                    })
                } else a(".buttons", g).remove();
                a(".title", g).text(f.title);
                a(".content", g).text(f.text);
                if (c) {
                    a("body > .blanker").hide();
                    g.show()
                }
                if (typeof f.ping == "function" && f.pingTime) {
                    var o = true;
                    g.bind("pingStop",
                        function () {
                            o = false
                        });
                    g.bind("pingStart", function () {
                        o = true
                    });
                    var n = setInterval(function () {
                        if (g.closest("body")[0]) o && f.ping.call(g);
                        else clearInterval(n)
                    }, f.pingTime)
                }
            }
        });
        return g
    }
})(jQuery);
var ldapFlyIDNum = 0,
    blankerBacklog = [];

function showUploadBlanker(a) {
    a = $.extend({}, {
        title: "Upload in Progress",
        text: "Please wait while your file is uploaded...",
        modal: true,
        spinner: true,
        icon: "/images/blankers/upload_blanker.png",
        iconCSS: {
            top: "60px",
            left: "75px"
        },
        buttons: false
    }, a || {});
    return showBlanker(a)
}
(function () {
    var a;
    pushLDAPFly = function (e) {
        a && a.trigger("flyby", e)
    };
    showLDAPBlanker = function () {
        a || (a = showBlanker({
            title: "Active Directory Synchronization in Progress",
            text: "To protect data integrity, the administrative interface is locked while the synchronization is in progress.",
            spinner: true,
            flyby: true,
            icon: "/images/ldap_large.png",
            iconCSS: {
                top: "50px",
                left: "50px"
            },
            buttons: ["Log Out"],
            callbacks: [
                function () {
                    logout()
                }
            ]
        }))
    };
    hideLDAPBlanker = function () {
        a.trigger("closeBlanker");
        a = false
    }
})();
(function () {
    var a = false;
    showRestartBlanker = function (e, f, j, g) {
        if (!a) {
            a = showBlanker({
                title: e || "System Restart",
                text: f || 'Please wait a moment while the system restarts. If the screen fails to respond, you may need to click your browser\'s "Refresh" or "Reload" button.',
                buttons: false,
                modal: true,
                icon: g,
                ping: function () {
                    var c = function () {
                        setTimeout(function () {
                            location.reload()
                        }, Math.floor(Math.random() * 5E3))
                    };
                    $.getREST("/gui/sysinfo/ok", {}, {
                        success: c,
                        error: function (b) {
                            b.status == 401 && b.getResponseHeader("X-Reason") !=
                                "Role Failed" && c()
                        }
                    })
                },
                pingTime: j || 1E4
            });
            a.bind("closeBlanker", function () {
                a = false
            })
        }
    }
})();
$(window).bind("meteor_system_restart", function (a, e) {
    e.json.lockdown_start && showRestartBlanker()
});
var HELP_PATH = AJAXHTML_PATH + "help/en_US/",
    HELP_TIMEOUT = 3E3,
    helpClearTimeout = false;
$(window).bind("screenBuilt", function (a, e) {
    var f = $("#" + e.screen.div);
    help_activate(f)
});

function help_activate(a, e) {
    e = $.extend({}, {
        image: "/images/help_icon_heavy.png",
        width: "35",
        height: "20"
    }, e);
    a.find("[help]").andSelf().filter("[help]").not(".helpHere, .manualHelp").each(function () {
        ($(this).find(".panelInner")[0] ? $(this).find(".panelInner") : $(this)).prepend(sprintf('<a class="helpLink panelAuto" href="%s"><img src="%s" width="%s" height="%s" alt="Help" /></a>', HELP_PATH + $(this).attr("help"), e.image, e.width, e.height))
    });
    a.find(".helpHere").each(function () {
        $(this).html(sprintf('<a class="helpLink panelAuto" href="%s"><img src="%s" width="%s" height="%s" alt="Help" /></a>',
            HELP_PATH + $(this).attr("help"), e.image, e.width, e.height))
    });
    a.find("a.helpLink").each(function () {
        help_bindElement(this)
    })
}

function help_bindElement(a, e) {
    var f = $(a);
    f.bind("click", function (j) {
        $(".helpPopupWrap").remove();
        var g = $('<div class="helpPopupWrap"><div class="helpPopup"><img class="helpClose" src="./images/help_close.png" width="15" height="15" alt="Close" /><img class="helpTack" src="/images/help_tack_up.png" width="15" height="15" alt="tack" /><div class="helpContent">Loading...</div></div></div>').appendTo("body");
        g.css({
            top: $(this).offset().top,
            left: $(this).offset().left + $(this).width()
        });
        g.find(".helpClose").bind("click",
            function () {
                helpClearTimeout && clearTimeout(helpClearTimeout);
                $(this).closest(".helpPopupWrap").remove()
            });
        g[0].helpParent = this;
        g.bind("mouseleave", function () {
            var c = $(this).closest(".helpPopupWrap");
            helpClearTimeout && clearTimeout(helpClearTimeout);
            helpClearTimeout = setTimeout(function () {
                c.not(".tacked").remove()
            }, HELP_TIMEOUT)
        });
        g.bind("mouseenter", function () {
            helpClearTimeout && clearTimeout(helpClearTimeout)
        });
        g.find("img.helpTack").bind("click", function () {
            helpClearTimeout && clearTimeout(helpClearTimeout);
            var c = $(this).closest(".helpPopupWrap");
            if (c.is(".tacked")) {
                c.removeClass("tacked");
                this.src = "/images/help_tack_up.png"
            } else {
                c.addClass("tacked");
                this.src = "/images/help_tack_down.png"
            }
        });
        $.ajax({
            type: "GET",
            dataType: "text",
            url: e || f.attr("href"),
            success: function (c) {
                g.find(".helpContent").html(c)
            },
            error: function () {
                g.find(".helpContent").html("Error loading help: " + (e || f.attr("href")))
            }
        });
        j.preventDefault()
    })
}
$(window).bind("debouncedresize", function () {
    $(".helpPopupWrap").each(function () {
        this.helpParent && $(this).css({
            top: $(this.helpParent).offset().top,
            left: $(this.helpParent).offset().left + $(this.helpParent).width()
        })
    })
});
var systemStatusChannel = {}, statusGraphUpdateTimeout, statusChannelsTimeout, statusUpdateTimeout, providerStatusArray = [];

function builtStatusScreen() {
    $("#screen-status .statbar.horizontal").bar({
        style: "background-color: #004076; background-image: url(./images/bar/blue_horiz.png);",
        animate: 5E3
    });
    $("#screen-status .statbar.line").setBarOpts({
        style: "background-color: transparent; background-image: none; border-right: 4px solid black",
        animate: 5E3
    });
    $("#screen-status .statbar.VMPercents").bar({
        direction: "vertical",
        bars: 3,
        animate: false,
        style: ["background-color: #00447c;", "background-color: #ff7a00;", "background-color: #000"]
    }).setBar(0,
        0).setBar(0, 1).setBar(0, 2);
    $("#statusScreenProviders").gatewayStatus()
}
systemStatusChannel = {
    firmware_storage: 0,
    sys_storage: 0,
    voicemail_storage: 0
};

function updateSystemStatus(a) {
    systemStatusChannel = $.extend(true, systemStatusChannel, a);
    if ($("#screen-status:visible")[0]) {
        $("#CPUFanRPM").text(parseIntNaNChar(systemStatusChannel.cpu_fan, "0"));
        $("#systemFanRPM").text(parseIntNaNChar(systemStatusChannel.system_fan, "0"));
        parseInt(systemStatusChannel.cpu_load) > 100 ? $("#CPULoadPercent").text("100") : $("#CPULoadPercent").text(parseIntNaNChar(systemStatusChannel.cpu_load, "-"));
        $("#CPUTempC").text(parseIntNaNChar(systemStatusChannel.cpu_temp, "-"));
        $("#SysTempC").text(parseIntNaNChar(systemStatusChannel.system_temp,
            "-"));
        $("#firmwareFreePercent").text(100 - (systemStatusChannel.firmware_storage || 0));
        $("#VMFreePercent").text(100 - (systemStatusChannel.voicemail_storage || 0));
        $("#phonesProvisionedCount").text(parseInt(systemStatusChannel.provisioned_phones) || 0);
        a = (parseInt(systemStatusChannel.provisioned_phones) || 0) - (parseInt(systemStatusChannel.unassigned_phones) || 0);
        $("#phonesWithUsers").html('<a href="#screen=users">' + a + "</a>");
        a = parseInt(systemStatusChannel.unassigned_phones) || 0;
        $("#phonesWithoutUsers").html('<a href="#screen=phones">' +
            a + "</a>");
        $("#phonesRegisteredCount").text(parseInt(systemStatusChannel.registered_phones) || 0);
        $("#availableExtensionsCount").text(parseInt(systemStatusChannel.available_extensions) || 0);
        $("#CPUFanGraph").setBar(rangePercent(systemStatusChannel.cpu_fan, 0, 1E4));
        $("#systemFanGraph").setBar(rangePercent(systemStatusChannel.system_fan, 0, 1E4));
        $("#CPULoadGraph").setBar(systemStatusChannel.cpu_load / 100);
        $("#CPUTempGraph").setBar(rangePercent(systemStatusChannel.cpu_temp, 25, 75));
        $("#SysTempGraph").setBar(rangePercent(systemStatusChannel.system_temp,
            15, 65));
        a = parseInt(systemStatusChannel.system_temp) || 0;
        var e = parseInt(systemStatusChannel.cpu_temp) || 0;
        if (a && a > 70) $("#SysTempGraph .interBar").css("background-image", "url(/images/bar/red_horiz.png)");
        else if (a && a > 55) $("#SysTempGraph .interBar").css("background-image", "url(/images/bar/yellow_horiz.png)");
        else a && $("#SysTempGraph .interBar").css("background-image", "url(/images/bar/blue_horiz.png)"); if (e && e > 70) $("#CPUTempGraph .interBar").css("background-image", "url(/images/bar/red_horiz.png)");
        else if (e &&
            e > 55) $("#CPUTempGraph .interBar").css("background-image", "url(/images/bar/yellow_horiz.png)");
        else e && $("#CPUTempGraph .interBar").css("background-image", "url(/images/bar/blue_horiz.png)");
        $("#firmwareFreeGraph").setBar(systemStatusChannel.firmware_storage / 100);
        $("#VMFreeGraph").setBar(systemStatusChannel.voicemail_storage / 100);
        if (systemStatusChannel.voicemail_total) {
            $("#VMReadCount").text(systemStatusChannel.voicemail_read.count || 0);
            $("#VMSavedCount").text(systemStatusChannel.voicemail_saved.count ||
                0);
            $("#VMUnreadCount").text(systemStatusChannel.voicemail_unread.count || 0);
            $("#VMTotalCount").text(systemStatusChannel.voicemail_total.count || 0);
            var f = systemStatusChannel.voicemail_read.length || 0;
            e = systemStatusChannel.voicemail_saved.length || 0;
            a = systemStatusChannel.voicemail_unread.length || 0;
            var j = systemStatusChannel.voicemail_total.length || 0;
            $("#VMReadTime").text(sprintf("%02d:%02d:%02d", f / 3600, f % 3600 / 60, f % 60));
            $("#VMSavedTime").text(sprintf("%02d:%02d:%02d", e / 3600, e % 3600 / 60, e % 60));
            $("#VMUnreadTime").text(sprintf("%02d:%02d:%02d",
                a / 3600, a % 3600 / 60, a % 60));
            $("#VMTotalTime").text(sprintf("%02d:%02d:%02d", j / 3600, j % 3600 / 60, j % 60));
            if (systemStatusChannel.voicemail_total.length) {
                j = systemStatusChannel.voicemail_total.length;
                f = f / j;
                e = e / j;
                a = a / j;
                $("#VMPercentsGraph").setBar(e, 0);
                $("#VMPercentsGraph").setBar(f, 1);
                $("#VMPercentsGraph").setBar(a, 2);
                $("#VMPercentsGraph").show()
            } else {
                $("#VMPercentsGraph").hide();
                $("#VMReadCount").text("0");
                $("#VMSavedCount").text("0");
                $("#VMUnreadCount").text("0");
                $("#VMReadTime").text("0:00");
                $("#VMSavedTime").text("0:00");
                $("#VMUnreadTime").text("0:00")
            }
        }
    }
}
$(window).bind("meteor_system_status", function (a, e) {
    e.json.switch_heartbeat && $("#presBarFSHeartbeat").stop().show().fadeOut(8E3);
    if (e.json.last_mail_error)
        if (!$(".last_mail_error_popup").hasClass("last_mail_error_popup")) {
            $("button.smtpError").removeAttr("disabled");
            popupMessage('<div class="last_mail_error_popup">The notification E-mail address may not be functioning correctly. Examine the (<a href="#screen=mailsettings;showlasterror=1" class="show_last_error_link">last error message</a>) for additional details.</div>', 1,
                "last_mail_error");
            $(".show_last_error_link").bind("click", function () {
                $.getREST("/gui/jsoncache/cache?channel=last_mail_error", function (g) {
                    $(".last_mail_error").html("<pre>" + g.last_mail_error + "</pre>")
                })
            })
        }
    if (e.json.vm_mail_error)
        if (!$(".vm_mail_error_" + e.json.vm_mail_error_user + "_popup").hasClass("vm_mail_error_" + e.json.vm_mail_error_user + "_popup")) {
            popupMessage('<div class="vm_mail_error_' + e.json.vm_mail_error_user_id + '">The "Do not save E-mailed voicemail" option in the Voicemail to E-mail settings for ' +
                e.json.vm_mail_error_user + " has been disabled because E-mails to the specified E-mail address are failing.</div>", 1, "vm_mail_error_" + e.json.vm_mail_error_user);
            if (getHashParam("screen") == "users") {
                var f = $("#vm-mailto"),
                    j = false;
                if (f.closest("form").hasClass("dirty")) j = true;
                if (f && f.val() == e.json.vm_mail_error_email)
                    if (jQuery.isFunction(uncheckVoicemailEmailDoNotSave)) {
                        uncheckVoicemailEmailDoNotSave();
                        j || f.closest("form").removeClass("dirty")
                    }
            }
        }
    updateSystemStatus(e.json)
});
$(window).bind("screenready", function (a, e) {
    if (e.screen == "status") {
        getMessageCache("system_status", "count_voicemail", true);
        getMessageCache("system_status", "last_mail_error", true);
        getMessageCache("system_status", "system_stats", true);
        getMessageCache("update_status", "update_wrapper");
        builtStatusScreen();
        $.postREST("/gui/update/query", {});
        $("#status-systime").localTime()
    }
});
$(window).bind("meteor_support_tunnel", function (a, e) {
    e.json.message && e.json.message.search(/keepalive/) && $("#presBarSTHeartbeat").stop().show().fadeTo(10, 1, function () {
        $(this).fadeOut(2E4)
    })
});

function rangePercent(a, e, f) {
    return a = (a = ((a || e) - e) / (f - e)) || 0
};

function users_phoneStatusUpdates(a, e, f) {
    var j = [],
        g = {}, c = function (q, u) {
            if (u === "down") q.prepend('<img src="/images/icons/phone_notfound.png" class="subIcon notfound" alt="Not Registered" title="Not Registered" />');
            else u === "up" && q.find(".notfound").remove()
        }, b = function (q, u, v) {
            var x = q.data("liveChannels") || [],
                z = false;
            $.each(x, function (B, C) {
                if (C === v) {
                    z = B;
                    return false
                }
            });
            if (u) {
                x.length || q.prepend('<img src="/images/icons/phone_inuse.png" alt="In Use" title="In Use" class="subIcon phoneActive" />');
                z ===
                    false && x.push(v)
            } else {
                z !== false && x.splice(z, 1);
                x.length || q.find(".phoneActive").remove()
            }
            q.data("liveChannels", x)
        }, l;
    for (l in e) j.push(l);
    if (j.length) {
        var o = getUnique("bind"),
            n = setInterval(function () {
                if (e[j[0]].closest("body")[0]) $.inArray("phone_status", Ape.subscriptions()) == -1 && Ape.subscribe("phone_status");
                else {
                    Ape.unsubscribe("phone_status");
                    clearInterval(n);
                    $(window).unbind("meteor_phone_status." + o).unbind("meteor_call_event." + o)
                }
            }, 250);
        Ape.subscribe("phone_status");
        $(window).bind("meteor_phone_status." +
            o, function (q, u) {
                e[u.json.bbx_phone_id] && c(e[u.json.bbx_phone_id], u.json.status)
            });
        $(window).bind("meteor_call_event." + o, function (q, u) {
            var v = e[f[u.json.bbx_phone_registration_id]] || g[u.json.uuid];
            if (v)
                if (u.json.call_event === "channel_answer") {
                    g[u.json.uuid] = v;
                    b(v, true, u.json.uuid)
                } else u.json.call_event === "channel_destroy" && b(g[u.json.uuid], false, u.json.uuid)
        });
        $.getREST("/gui/phone/userregs", {
            bbx_user_id: a
        }, function (q) {
            $.each(q.registrations, function (u, v) {
                e[v.bbx_phone_id] && !trueish(v.status) && c(e[v.bbx_phone_id],
                    "down")
            })
        });
        $.getREST("/gui/calls/listusers", {
            bbx_user_id: a
        }, function (q) {
            $.each(q.listusers, function (u, v) {
                var x = e[f[v.bbx_phone_registration_id]] || g[v.uuid];
                if (x) {
                    g[v.uuid] = x;
                    b(x, true, v.uuid)
                }
            })
        })
    }
}

function users_setNewUserExtension(a, e) {
    e = e || $(".newUserForm:eq(0)");
    var f = e.find(".newUserForm:eq(0)"),
        j = f.find(".no"),
        g = f.find(".yes"),
        c = f.find("input[name=bbx_extension_block_begin]"),
        b = f.find("input[name=bbx_extension_block_end]"),
        l = f.find("input[name=bbx_extension_value]"),
        o = f.find("input[name=flag_locked]"),
        n = f.find("input[name=flag_external]"),
        q = f.find("input[name=bbx_extension_id]");
    f = f.find("button[type=submit]");
    c.val("");
    b.val("");
    l.val("");
    o.val("0");
    q.val("");
    f.each(function () {
        this.disabled =
            false
    });
    if (typeof a == "object") {
        j.hide();
        if (a.bbx_extension_value) {
            g.show().text(a.bbx_extension_value.replace(/[^-0-9]/g, ""));
            l.val(a.bbx_extension_value);
            n.val(a.flag_external ? 1 : 0)
        } else if (a.bbx_extension_block_begin) {
            g.show().text(a.bbx_extension_block_begin.replace(/[^-0-9]/g, "") + "\u2013" + a.bbx_extension_block_end.replace(/[^-0-9]/g, ""));
            c.val(a.bbx_extension_block_begin);
            b.val(a.bbx_extension_block_end);
            o.val(a.flag_locked);
            n.val(a.flag_external ? 1 : 0)
        } else {
            g.show().text("(Next Free Extension)");
            c.add(b).add(l).val("")
        }
    } else if (typeof a == "boolean") {
        j = e.find("form.newUserExtForm [name=bbx_extension_id]:enabled").val();
        c = e.find("form.newUserExtForm [name=bbx_extension_id] option:selected").text();
        g.show().text(c.replace(/[^-0-9]/g, ""));
        q.val(j)
    } else {
        j.hide();
        g.show().text(a.replace(/[^-0-9]/g, ""));
        l.val(a)
    }
}

function users_unsetNewUserExtension(a) {
    var e = a.find(".newUserForm:eq(0)");
    a = e.find("input[name=bbx_extension_block_begin]");
    var f = e.find("input[name=bbx_extension_block_end]"),
        j = e.find("input[name=bbx_extension_value]"),
        g = e.find("input[name=flag_locked]"),
        c = e.find("button[type=submit]"),
        b = e.find(".no");
    e = e.find(".yes");
    b.show();
    e.hide();
    a.val("");
    f.val("");
    g.val("");
    j.val("");
    c.each(function () {
        this.disabled = true
    })
};

function settings_rebootAllPhones() {
    $("#btnRebootPhones")[0].disabled = true;
    $.postREST("/gui/system/reboot_phones", {}, function () {
        $("#rebootPhonesSpinner").show();
        setTimeout(function () {
            $("#rebootPhonesSpinner").fadeOut()
        }, 3E3);
        setTimeout(function () {
            $("#btnRebootPhones")[0].disabled = false
        }, 3E3)
    })
}

function settings_shutDown() {
    showBlanker({
        title: "Shut Down",
        text: "WARNING: You are about to power down this Communication Server. All current calls will be dropped, and you must power the Server back on before any services will be available.",
        buttons: ["Shut Down", "Cancel"],
        callbacks: [settings_processShutDown, blankerCancel]
    })
}

function settings_processShutDown() {
    $(this).trigger("closeBlanker");
    showRestartBlanker("System Shutdown", "The system is shutting down. All services will be unavailable until the system is powered on again.");
    $.postREST("/gui/system/shutdown", {})
}

function settings_restart() {
    showBlanker({
        title: "Restart",
        text: "WARNING: You are about to restart the Communication Server. All current calls will be dropped, and the system will be unavailable until the Server restarts.",
        buttons: ["Restart", "Cancel"],
        callbacks: [settings_processRestart, blankerCancel]
    })
}

function settings_processRestart() {
    $(this).trigger("closeBlanker");
    showRestartBlanker("System Restart", "The system is restarting. All services will be unavailable until the restart is complete.");
    $.postREST("/gui/system/reboot", {})
}

function settings_restart_fs() {
    showBlanker({
        title: "Restart",
        text: "You are about to restart the Telephony Engine. All current calls will be dropped, and services will be unavailable until the engine is completely restarted.",
        buttons: ["Restart Telephony Engine", "Cancel"],
        callbacks: [settings_process_restart_fs, blankerCancel]
    })
}

function settings_process_restart_fs() {
    $(this).trigger("closeBlanker");
    $.postREST("/gui/system/restart_fs", {})
};
supportTunnelKeepalive = false;

function settings_startSupportTunnel() {
    $.ajax({
        url: "/gui/configure/support_tunnel_start",
        type: "POST",
        dataType: "text",
        error: function () {
            alert("There was an error creating the support tunnel.")
        }
    });
    $("#supportTunnelBarracudaConnection")[0].src = "/images/net_work.gif";
    settings_logSupportTunnel()
}

function settings_stopSupportTunnel() {
    $("#btnTunnelEnd").disable("stStop");
    $.ajax({
        url: "/gui/configure/support_tunnel_stop",
        type: "POST",
        dataType: "text",
        error: function () {
            alert("There was an error stopping the support tunnel.")
        }
    })
}

function settings_logSupportTunnel(a) {
    supportTunnelKeepalive && clearTimeout(supportTunnelKeepalive);
    $("#btnTunnelStart").disable("stRunning");
    $("#btnTunnelEnd").enable("stRunning");
    supportTunnelKeepalive = setTimeout(settings_timeoutSupportTunnel, 15E3);
    $("#supportTunnelBarracudaConnection").attr("src", "/images/net_work.gif");
    $("#supportTunnelBarracudaLogo").attr("src", "/images/net_cudatel.png");
    if (a && a.json.message) {
        $("#tunnelLog").append("<p>" + a.json.message + "</p>");
        var e = a.json.message;
        if (e.search(/-exception: /) > -1) {
            var f = e.match(/-exception: (.*)/)[1];
            e = e.match(/T(\d\d:\d\d:\d\d)/)[1];
            f = f.replace(/^IO::Socket::INET::new/, "");
            showError(sprintf("Support Tunnel (%s): %s", e, f))
        }
    }
    if (a && a.json.support_tunnel_key) {
        $("#tunnelStatus").html('Support Tunnel Key: "<span id="tunnelkey">' + a.json.support_tunnel_key + '</span>."  (' + a.json.support_tunnel_key + ")<br />System Serial Number: " + a.json.support_tunnel_serial);
        $("#tunnelkey").militarize()
    }
}
$(window).bind("meteor_support_tunnel", function (a, e) {
    settings_logSupportTunnel(e)
});

function settings_timeoutSupportTunnel() {
    var a = $("#supportTunnelBarracudaConnection")[0];
    if (a) {
        a.src = "/images/net_notwork.png";
        $("#supportTunnelBarracudaLogo")[0].src = "/images/net_cudatel_noconnect.png";
        $("#btnTunnelStart").enable("stRunning");
        $("#btnTunnelEnd").enable("stStop");
        $("#btnTunnelEnd").disable("stRunning");
        $("#tunnelLog").append('<p class="tunnelJSMessage">No response from tunnel connection. Connection is closed.</p>');
        $("#tunnelStatus").empty()
    }
};
var settings_LDAPServerProfiles = [];

function settings_spin(a) {
    $(a).find(".spinner").show()
}

function settings_stopSpin(a) {
    $(a).find(".spinner").hide()
}

function dt_getValuesSelected(a, e) {
    var f = a.dynatree("getTree").getSelectedNodes(e),
        j = [];
    $.each(f, function () {
        typeof this.data.value != "undefined" && j.push(this.data.value)
    });
    return j
}

function parseXML(a) {
    if (window.ActiveXObject && window.GetObject) {
        var e = new ActiveXObject("Microsoft.XMLDOM");
        e.loadXML(a);
        return e
    }
    if (window.DOMParser) return (new DOMParser).parseFromString(a, "text/xml");
    window.console && console.log("No XML parser: fallback to jQuery");
    return $(a)
}

function settings_pickLDAPServer() {
    $("#frmLDAPDomain").slideDown();
    $("#screen-settings .ldapWelcome").slideUp()
}

function settings_LDAPRefreshServerInfo() {
    $("#currentSyncInfo").empty();
    $.ajax({
        url: XMLGUI_PATH + "configure/dynamic/ldap",
        type: "POST",
        dataType: "text",
        data: {
            action: "get_server",
            template: "get_server"
        },
        success: function (a) {
            $("#currentSyncInfo").html(a);
            if ($("#currentSyncInfo .ldap_server")[0]) {
                $("#yesLDAPServer").show();
                $("#noLDAPServer").hide();
                $.getREST("/gui/sync/server", function (e) {
                    var f = $("form#frmLDAPAuthConfig");
                    $("input[name=bbx_sync_server_id]", f).val(e.server.bbx_sync_server_id);
                    $("input[name=bbx_sync_server_auth_enabled]",
                        f).attr("checked", e.server.bbx_sync_server_auth_enabled == "0" ? false : true);
                    $("input[name=bbx_sync_server_default_auth_suffix]", f).val(e.server.bbx_sync_server_default_auth_suffix)
                })
            } else {
                $("#yesLDAPServer").hide();
                $("#noLDAPServer").show()
            }
        }
    })
}

function settings_LDAPSyncNow(a) {
    showLDAPBlanker();
    a = $(a);
    var e = a.closest("form");
    $("#ldapSyncWait").show();
    a.attr("disabled", "disabled");
    setTimeout(function () {
        $("#ldapSyncWait").fadeOut();
        a.removeAttr("disabled")
    }, 5E3);
    e = $(e).serialize() + "&action=set_sync_units";
    $.ajax({
        url: XMLGUI_PATH + "configure/dynamic/ldap",
        data: e,
        dataType: "text",
        type: "POST",
        complete: function () {
            $.ajax({
                url: XMLGUI_PATH + "configure/ldap_sync_now",
                type: "POST",
                dataType: "text"
            })
        }
    })
}

function settings_LDAPBuildSyncList() {
    $("#LDAPSyncList").dynatree({
        checkbox: true,
        selectMode: 3,
        clickFolderMode: 2,
        minExpandLevel: 2,
        initAjax: {
            url: XMLGUI_PATH + "configure/dynamic/ldap",
            type: "POST",
            data: {
                action: "list_ous",
                template: "dynatree"
            }
        },
        strings: {
            loading: '<img src="/images/table/miniwait.gif" style="width: 8px; height: 16px" alt="" /> Searching...'
        },
        onSelect: function () {
            $("#LDAPSyncListOUs").empty();
            var a = $("#LDAPSyncList").dynatree("getTree").getSelectedNodes();
            $("#LDAPSyncListOUs").append('<input type="hidden" name="changes_made" value="1" />');
            for (var e in a) a[e] && a[e].data.value && $("#LDAPSyncListOUs").append('<input type="hidden" name="ou" value="' + a[e].data.value + '" />')
        }
    })
}

function settings_LDAPRefreshSyncList() {
    $("#frmLDAPSyncList button[type=submit]").html("Apply");
    $("#LDAPSyncList").dynatree("getTree").getRoot().removeChildren();
    $("#LDAPSyncList").dynatree("getTree").getRoot().appendAjax({
        url: XMLGUI_PATH + "configure/dynamic/ldap",
        type: "POST",
        data: {
            action: "list_ous",
            template: "dynatree"
        }
    })
}

function settings_LDAPBack(a) {
    a = $(a)[0];
    a.reset();
    $(a).slideUp().prev("form.section").slideDown()
}

function settings_LDAPCancel() {
    $("#addLDAPForms form").each(function () {
        this.reset()
    });
    $("#addLDAPForms form").slideUp();
    $("#currentSyncInfo .ldap_server")[0] ? $("#yesLDAPServer").slideDown() : $("#noLDAPServer").slideDown()
}

function settings_fillLDAPDomain() {
    $("#LDAPDomainMessage").html('<img src="images/table/miniwait.gif" width="8" height="16" alt="" /> Auto-detecting domain...');
    var a = function () {
        $("#LDAPDomainMessage").html('Auto-detect failed. Please enter your domain. <a href="javascript:settings_fillLDAPDomain();"><img src="/images/small_refresh.png" width="15" height="15" alt="Retry" style="vertical-align: bottom" /></a>')
    };
    $("#LDAPUsernameDomain").val("domain");
    $.ajax({
        url: XMLGUI_PATH + "configure/ldap_domain",
        type: "POST",
        dataType: "text",
        success: function (e) {
            e = $(parseXML(e));
            $("#txtLDAPDomain");
            var f = e.find("domain:eq(0)").text();
            $("#txtLDAPDomain").val(f);
            $("#LDAPUsernameDomain").text(f ? f : "domain");
            e.find("error")[0] ? a() : $("#LDAPDomainMessage").empty()
        },
        error: function () {
            a()
        }
    })
}

function settings_fillLDAPServer(a) {
    var e = $("#txtLDAPDomain")[0].value,
        f = $("#txtLDAPUsername")[0].value,
        j = $("#pwdLDAPPassword")[0].value;
    if (!(f ? true : false)) {
        $(a).find(".errorMessage").html("Username and password are required.");
        return false
    }
    $(a).find(".errorMessage").empty();
    settings_spin(a);
    $.ajax({
        url: XMLGUI_PATH + "configure/ldap_discover",
        type: "POST",
        dataType: "text",
        data: {
            domain_name: e,
            username: f,
            password: j
        },
        success: function (g) {
            g = $(parseXML(g));
            var c = $("#selLDAPServerObject");
            settings_LDAPServerProfiles = [];
            c.find("option:not(#optLDAPServerManual)").remove();
            g.find("server").each(function () {
                var l = $(this),
                    o = $(this).find("address:eq(0)").text();
                settings_LDAPServerProfiles.push({
                    printed_name: o,
                    uid: l.find("uid").text(),
                    member: l.find("member").text(),
                    group_member: l.find("group_member").text(),
                    port: l.find("port").text(),
                    base_dn: l.find("base_dn").text(),
                    address: o,
                    type: l.find("base_dn").text(),
                    server: o
                })
            });
            settings_LDAPServerProfiles.push({
                printed_name: "Active Directory (Manual Configuration)",
                uid: "sAMAccountName",
                member: "memberOf",
                group_member: "member",
                port: 389,
                base_dn: "",
                address: "",
                type: "Active Directory",
                server: ""
            });
            settings_LDAPServerProfiles.push({
                printed_name: "E-Directory (Manual Configuration)",
                uid: "cn",
                member: "memberOf",
                group_member: "member",
                port: 389,
                base_dn: "",
                address: "",
                type: "E-Directory",
                server: ""
            });
            settings_LDAPServerProfiles.push({
                printed_name: "OpenLDAP/Generic (Manual Configuration)",
                uid: "uid",
                member: "memberOf",
                group_member: "member",
                port: 389,
                base_dn: "",
                address: "",
                type: "Generic LDAP",
                server: ""
            });
            for (var b in settings_LDAPServerProfiles) c[0].options[c[0].options.length] = new Option(settings_LDAPServerProfiles[b].printed_name, b);
            c.bind("change", settings_selectLDAPServer);
            b = c.find("option");
            if (b[1]) b[1].selected = "selected";
            settings_selectLDAPServer();
            settings_stopSpin(a);
            $(a).slideUp().next("form.section").slideDown()
        },
        error: function () {
            alert("Error retrieving LDAP server list.")
        }
    })
}

function settings_selectLDAPServer() {
    var a = $("#selLDAPServerObject > option:selected")[0].value;
    a = settings_LDAPServerProfiles[a] || {};
    $("#frmLDAPServer");
    $("#txtLDAPAddress")[0].value = a.address || "";
    $("#txtLDAPPort")[0].value = a.port || "";
    $("#txtLDAPUID")[0].value = a.uid || "";
    $("#txtLDAPBaseDN")[0].value = a.base_dn || "";
    $("#txtLDAPMember")[0].value = a.member || "";
    $("#txtLDAPGroupMember")[0].value = a.group_member || ""
}

function settings_LDAPShowDeleteServer() {
    showBlanker({
        title: "Remove Synchronization Server",
        text: "This will remove any users or groups associated with this server. Are you sure you want to delete the sync server?",
        buttons: ["Yes", "No"],
        callbacks: [
            function () {
                settings_LDAPProcessDeleteServer(1);
                blankerCancel.call(this)
            },
            function () {
                settings_LDAPProcessDeleteServer(0);
                blankerCancel.call(this)
            }
        ]
    })
}

function settings_LDAPProcessDeleteServer(a) {
    a == 1 && settings_LDAPSubmitDeleteServer()
}

function settings_LDAPHideDeleteServer() {
    $("#screen-settings .deleteLDAPServer").slideUp()
}

function settings_LDAPSubmitDeleteServer() {
    $.deleteREST("/gui/sync/server", {}, {
        success: function () {
            settings_LDAPHideDeleteServer();
            settings_LDAPRefreshServerInfo()
        },
        error: function (a) {
            var e;
            try {
                e = JSON.parse(a.responseText)
            } catch (f) {}
            e ? showError(e.error || "There was an internal error deleting the synchronization server") : showError("There was an internal error deleting the synchronization server")
        }
    })
}

function settings_LDAPSubmitServerInfo(a) {
    var e = $("#frmLDAPDomain").serialize();
    e += "&" + $("#frmLDAPServer").serialize();
    e += "&action=set_server";
    if (!$("#txtLDAPBaseDN").val()) {
        alert("The Base DN value is required");
        return false
    }
    $.ajax({
        url: XMLGUI_PATH + "configure/dynamic/ldap",
        type: "POST",
        data: e,
        success: function (f) {
            f = $(parseXML(f));
            if (f.find("error")[0]) {
                alert(f.text());
                f.find("error").attr("type") == "BINDFAIL" && settings_LDAPCancel($(a))
            } else {
                settings_LDAPRefreshSyncList();
                settings_LDAPRefreshServerInfo();
                $("#addLDAPForms form").slideUp()
            }
        },
        error: function () {
            alert("Internal or Network Error saving settings")
        }
    })
}

function settings_LDAPGetOUs(a) {
    $("#txtLDAPDomain");
    $("#txtLDAPUsername");
    $("#pwdLDAPPassword");
    $(a).find(".errorMessage").empty();
    settings_spin(a);
    var e = $("#frmLDAPDomain").serialize();
    e += "&" + $("#frmLDAPServer").serialize();
    $("#LDAPOUs").replaceWith('<div id="LDAPOUs"></div>');
    $("#LDAPOUs").dynatree({
        checkbox: true,
        selectMode: 3,
        clickFolderMode: 2,
        minExpandLevel: 3,
        initAjax: {
            url: XMLGUI_PATH + "configure/ldap_list_ous",
            data: e,
            type: "POST"
        },
        onSelect: function () {
            var f = dt_getValuesSelected($("#LDAPOUs"), true),
                j = "",
                g = "",
                c;
            for (c in f) {
                j += '<input type="hidden" name="base_ou" value="' + f[c] + '" />';
                g += "<div>" + f[c] + "</div>"
            }
            $("#LDAPOUsSelected").html(j)
        }
    });
    settings_stopSpin(a)
}

function settings_LDAPSubmitSyncList(a) {
    a = $(a).serialize() + "&action=set_sync_units";
    $.ajax({
        url: XMLGUI_PATH + "configure/dynamic/ldap",
        data: a,
        dataType: "text",
        type: "POST",
        complete: settings_LDAPRefreshSyncList
    })
}

function settings_LDAPCredentialsPopup() {
    showPopup("ldap_credentials", {}, true)
}
$(window).bind("meteor_ldap_import", function (a, e) {
    if (e.json) {
        e.json.ldap_import_start && showLDAPBlanker();
        e.json.message && pushLDAPFly(e.json.message);
        if (e.json.ldap_import_complete) e.json.reason && e.json.reason == "error" ? setTimeout(hideLDAPBlanker, 2E4) : setTimeout(hideLDAPBlanker, 5E3)
    }
});
var updateDownloading = 0,
    updateInfo = {};
$(window).bind("screenInit", function (a, e) {
    if (e.screen.name == "updatesettings") {
        setTimeout(settings_queryUpdateStatus, 100);
        $.getJSONCached("/gui/permission/checkcheck/", {
            check: "HOTPATCH"
        }, 3E5, function (f) {
            f = trueish(f.checkcheck);
            trueish(f) && showError("Firmware updates have been disabled because Technical Support staff have made manual internal changes to this Server. To upgrade, please call Support at (734) 887-3000")
        })
    }
});

function settings_versionToNumber(a) {
    a = a.split(".");
    for (var e = [], f = 0; f < a.length; f++) e.push(sprintf("%03d", parseInt(a[f], 10)));
    return parseFloat(e.shift() + "." + e.join(""))
}

function callbackActivatedStatus(a) {
    $.getREST("/gui/sysinfo/activation", {}, function (e) {
        a(e.activation)
    })
}

function showActivatedStatus(a) {
    if (trueish(a.activated)) {
        $("#statActivation").closest("tr").hide();
        $("#statActivation").html("Product is activated.")
    } else {
        var e = 1;
        if (!a.activation_online || a.activation_online == "0") e = 0;
        $("#statActivation").closest("tr").show();
        $("#statActivation").html(sprintf('<a class="activation_warning" target="_blank" href="%s"%s>This product is not activated. Click to activate.</a>', a.activation_url + (e ? "&connected_update=1" : ""), e ? "" : ' onclick="settings_offlineActivationPopup(); return true"'))
    }
}
$(window).bind("meteor_update_status", function (a, e) {
    var f = e.json,
        j = {
            "-1": "Database Error",
            "-2": "Terminated",
            "-3": "Not Purchased",
            "-4": "Out of Region",
            "-9": "Cannot connect to Update Server",
            "1": "Active",
            "3": "Demonstration Unit",
            "4": "Developer Unit",
            "5": "Evaluation Unit"
        }, g = {
            stable: $("#updatesGeneral, #installScreenUpdatesGeneral"),
            beta: $("#updatesEarly")
        };
    if (f.system_serial) {
        var c = f;
        $.extend(true, updateInfo, c);
        var b = {
            system_version: $("#updatesCurrentVersion"),
            new_version: $("#updatesGeneralVersion, #installScreenGeneralVersion"),
            beta_version: $("#updatesEarlyVersion")
        }, l;
        for (l in b) b[l].html(sprintf('<a href="http://update01.barracuda.com/cgi-bin/view_release_notes.cgi?type=bpsware&platform=2&version=%s" target="_blank"><img src="/images/info.png" alt="Release Notes" title="Release Notes" width="15" height="15" style="vertical-align: middle" /></a> &nbsp;%s', c[l], c[l]) || "None Available");
        b = c.system_version;
        if (c.new_version && c.new_version > c.system_version || c.beta_version && c.beta_version > c.system_version) b += '<br /><a href="#screen=updatesettings">Update Available</a>';
        var o = c.full_prodname + "<br />Serial Number " + c.system_serial;
        $("#statSysInfo, #updSysInfo").html(o);
        $("#statFirmware").html(b);
        b = j[c.premium_status];
        if (c.premium_status == 1) b += ". (Expires: " + (new Date(c.premium_expiration * 1E3)).toDateString() + ")";
        $("#statPremium, #updPremium").html(b);
        if (c.inst_replace_status == 1) {
            $("#statInstant").closest("tr").show();
            $("#statInstant, #updInstant").html("Valid until " + (new Date(c.inst_replace_expiration * 1E3)).toDateString())
        } else if (c.inst_replace_status != 0) {
            $("#statInstant").closest("tr").show();
            $("#statInstant, #updInstant").text(j[c.inst_replace_status])
        } else $("#statInstant").closest("tr").hide();
        j = j[c.energize_status];
        if (c.energize_status == 1) j += ". (Expires: " + (new Date(c.energize_expiration * 1E3)).toDateString() + ")";
        $("#statEnergize, #updEnergize").html(j);
        showActivatedStatus(c);
        trueish(c.activated_status) && trueish(c.activation_warning) && $("#statActivation").html('<a class="activation_warning" target="_blank" href=" ' + c.activation_renew_url + '">Your Energize Updates expire soon. Click to renew.</a>')
    }
    if (f.system_serial) {
        j = {};
        if (f.beta_version)
            if (f.beta_version == f.system_version) {
                $("#updatesEarlyVersion").show();
                j.beta = "(Currently Installed)"
            } else {
                if (settings_versionToNumber(f.beta_version) < settings_versionToNumber(f.system_version)) {
                    $("#updatesEarlyVersion").show();
                    j.beta = "(Installed Version is Newer)"
                }
            } else {
                $("#updatesEarlyVersion").hide();
                j.beta = "(None available)"
            }
        if (f.new_version)
            if (f.new_version == f.system_version) j.stable = "(Currently Installed)";
            else {
                if (settings_versionToNumber(f.new_version) < settings_versionToNumber(f.system_version)) j.stable =
                    "(Installed Version is Newer)"
            } else j.stable = "(None available)";
        if (!(f.download_in_progress && parseInt(f.download_in_progress) && updateDownloading)) {
            g.stable.removeClass("downloadReady").removeClass("noop").removeClass("inprogress").removeClass("startReady");
            g.beta.removeClass("downloadReady").removeClass("noop").removeClass("inprogress").removeClass("startReady");
            f.new_version && g.stable.addClass("startReady");
            f.beta_version && g.beta.addClass("startReady");
            f.downloaded_version && f.downloaded_version ==
                f.new_version && g.stable.addClass("downloadReady").removeClass("startReady");
            f.downloaded_version && f.downloaded_version == f.beta_version && g.beta.addClass("downloadReady").removeClass("startReady")
        }
        if (c.energize_status < 1) {
            console_log("Energize status failed:", c.energize_status, c);
            $("#updatesWarning").show().text("Your Energize Updates subscription is inactive, or the update server cannot be contacted. Cannot download updates.");
            console_log("Disabled download due to Energize Status check");
            $("input, button",
                g.stable).attr("disabled", "disabled");
            $("input, button", g.beta).attr("disabled", "disabled");
            $("#updatesMainTable").css({
                color: "#666",
                "font-style": "italic"
            })
        }
        $.getJSONCached("/gui/permission/checkcheck/", {
            check: "HOTPATCH"
        }, 3E5, function (n) {
            if (trueish(n.checkcheck)) {
                $("#updatesWarning").show().text("Firmware updates have been disabled because Technical Support staff have made manual internal changes to this Server. To upgrade, please call Support at (734) 887-3000");
                console_log("Disabled download due to HOTPATCH check");
                $("input, button", g.stable).attr("disabled", "disabled");
                $("input, button", g.beta).attr("disabled", "disabled");
                $("#updatesMainTable").css({
                    color: "#666",
                    "font-style": "italic"
                })
            }
            $.getJSONCached("/gui/jsoncache/cache", {
                channel: "system_stats"
            }, 5E3, function (q) {
                q = parseInt(q.firmware_storage);
                var u = false;
                if (isNaN(q)) u = "The Server is not properly reporting free disk space.";
                else if (q >= 98) u = "The Server is critically low on disk space.";
                if (u) {
                    $("#updatesWarning").show().text(u + " Upgrading has been disabled to prevent possible damage due to low disk space. For assistance, please call CudaTel Support at (734) 887-3000");
                    console_log("Disabled download due to disk space check");
                    $("input, button", g.stable).attr("disabled", "disabled");
                    $("input, button", g.beta).attr("disabled", "disabled");
                    $("#updatesMainTable").css({
                        color: "#666",
                        "font-style": "italic"
                    })
                }
            })
        });
        for (l in g)
            if (j[l]) {
                g[l].addClass("noop");
                g[l].find(".noopMessage").text(j[l])
            }
    }
    if (f.download_complete || f.download_canceled) {
        c = g[f.download_release].removeClass("downloadReady").addClass("noop").removeClass("inprogress").removeClass("startReady");
        c.find(".noop").text("(Please Wait)");
        c.find(".progressBar").setBar(0);
        updateDownloading = 0
    }
    if (f.download_progress && g[f.download_release]) {
        c = g[f.download_release];
        c.removeClass("downloadReady").removeClass("noop").addClass("inprogress").removeClass("startReady");
        $(c).find(".progressBar:visible").setBarOpts({
            halt: false
        });
        $(c).find(".progressBar:visible").setBar(f.download_progress / 100);
        $(c).find(".startDownloadButton").enable("waitfordl");
        if (f.download_progress == 100) $(c).find(".stopDownloadButton").attr("disabled", "disabled");
        else f.download_progress &&
            $(c).find(".stopDownloadButton, .deleteUpdateButton, .installUpdateButton").removeAttr("disabled");
        c.find(".progressText").text(f.download_progress + "%");
        updateDownloading = 1
    }
    f.download_deleted && settings_queryUpdateStatus()
});

function settings_offlineActivationPopup() {}

function settings_queryUpdateStatus() {
    $.postREST("/gui/update/query", {});
    getMessageCache("update_status", "update_wrapper")
}

function settings_startDownload(a) {
    $.postREST("/gui/update/download", {
        type: a
    })
}

function settings_stopDownload(a) {
    $.postREST("/gui/update/cancel", {
        type: a
    })
}

function settings_installUpdate(a, e) {
    var f = function () {
        $.postREST("/gui/update/apply", {
            type: a
        }, function () {
            showRestartBlanker()
        })
    };
    e ? showBlanker({
        title: "Install Update?",
        text: "Installing this update will stop all calls currently in progress, and you will experience a temporary loss of connectivity. The install process may take up to 10 minutes to complete.",
        buttons: ["Continue", "Cancel"],
        callbacks: [
            function () {
                f();
                blankerCancel.call(this)
            },
            blankerCancel
        ]
    }) : f()
}

function settings_deleteUpdate(a) {
    console_log("Disabled download because delete is in progress");
    $(".installUpdateButton").attr("disabled", "disabled");
    $.postREST("/gui/update/delete", {
        type: a
    })
};
$(window).bind("login", function () {
    loginData.bbx_extension_id ? $("#presenceBarCCCButton").live("click", function (a) {
        a.preventDefault();
        cccOpen()
    }) : $("#presenceBarCCCButton").hide();
    $.ajax({
        url: "/gui/sysinfo/sysinfo",
        type: "GET",
        data: {},
        dataType: "json",
        accept: "application/json",
        success: function (a) {
            a.sysinfo && a.sysinfo.system_model && a.sysinfo.system_version && a.sysinfo.system_serial ? $("#presBarVersionInfo").text("Communication Server " + a.sysinfo.system_model + ",  Firmware " + a.sysinfo.system_version + ",  Serial # " +
                a.sysinfo.system_serial) : $("#presBarVersionInfo").text("CudaTel Communication Server")
        },
        error: function () {
            $("#presBarVersionInfo").text("CudaTel Communication Server")
        }
    })
});
(function () {
    $(document).ready(function () {
        $.getTemplate("/ajax-html/errorPopup.html", function () {})
    });
    var a = false;
    showError = function (e) {
        var f = function () {
            var j = $("#errorWrap > .staticBody");
            $(".errors > .error.first", j).removeClass("first");
            var g = $('<div class="first error"></div>').text(e);
            $(".errors", j).prepend(g);
            g = $(".error", j).length;
            $(".errorCount", j).text(g);
            g > 1 ? $(".opExpand", j).show() : $(".opExpand", j).hide();
            $("#errorWrap").show();
            if ($("#errorWrap").is(".autofadeErrorWrap")) {
                a && clearTimeout(a);
                a = setTimeout(function () {
                    $("#errorWrap .opClose").trigger("click")
                }, 5E3)
            }
        };
        if ($("#errorWrap > .staticBody")[0])
            if ($("#errorWrap:hidden")[0]) f();
            else {
                f();
                $("#errorWrap:not(.expanded)").blink(2, 200)
            } else $.getTemplate("/ajax-html/errorPopup.html", function (j) {
                j = $(j).find(".staticBody");
                $("#errorWrap")[0] || $("body").prepend('<div id="errorWrap"></div>');
                var g = $("#errorWrap").append(j);
                g.data("errors", []);
                $(".opClose", g).bind("click", function (c) {
                    c.preventDefault();
                    $("#errorWrap").fadeOut(function () {
                        $(".error",
                            this).remove();
                        $(this).removeClass("expanded")
                    })
                });
                $(".opExpand", g).bind("click", function (c) {
                    c.preventDefault();
                    g.toggleClass("expanded")
                });
                g.is(".autofadeErrorWrap") && $(".opClose", g).hide();
                f()
            })
    }
})();
(function (a) {
    var e = function () {
        this.each(function () {
            for (var j = 0; j < 4; j++) {
                var g = a(".IPv4Quad-" + j, a(this)).val();
                if (j == 0 && g === "0" || g > 255 || g === "") {
                    a(this).addClass("IPv4InputInvalid");
                    return
                }
            }
            a(this).removeClass("IPv4InputInvalid")
        })
    }, f = {
            updateValue: function (j) {
                this.each(function () {
                    var g = a(this).find(".IPv4Hidden:eq(0)");
                    j !== undefined && g.val(j);
                    var c = g.siblings("input[type=text]");
                    if ((g = g[0].value.match(/([0-9]+)\.([0-9]+)\.([0-9]+)\.([0-9]+)/)) && g.length == 5) {
                        c[0].value = g[1];
                        c[1].value = g[2];
                        c[2].value =
                            g[3];
                        c[3].value = g[4]
                    } else {
                        c[0].value = "";
                        c[1].value = "";
                        c[2].value = "";
                        c[3].value = ""
                    }
                })
            },
            disable: function (j) {
                this.toggleClass("disabled", j);
                this.find("input").attr("disabled", j)
            },
            init: function () {
                var j = a();
                this.each(function () {
                    var g = a(this);
                    if (g.is("input[type=text]")) {
                        g.wrap('<span class="IPv4Input"></span>');
                        var c = g.parent(),
                            b = g.attr("disabled");
                        a('<input type="hidden" name="' + g.attr("name") + '" class="IPv4Hidden ' + this.className + '" value="' + g[0].value + '">').insertAfter(g).data("widget", c).data("widgetType",
                            "ipv4Input");
                        var l = c.find(".IPv4Hidden");
                        l.data("originalValue", g[0].value);
                        g.remove();
                        for (g = 0; g < 4; g++) a('<input type="text" class="IPv4Quad' + g + '" size="3" maxlength="3" /><span class="IPv4Dot">.</span>').appendTo(c);
                        b && c.addClass("disabled").find("input").attr("disabled", true);
                        var o = function (n) {
                            n = n.replace(RegExp("[^0-9]+", "g"), "");
                            if (parseInt(n, 10) > 255) return n.slice(0, 2);
                            return n
                        };
                        b = function (n) {
                            n = o(n);
                            if (n == "0") return "";
                            return n
                        };
                        for (g = 0; g < 4; g++) {
                            if (g > 0 && g < 3) a(".IPv4Quad" + g, c).autotab({
                                target: a(".IPv4Quad" +
                                    (g + 1), c),
                                maxlength: 3,
                                format: o,
                                previous: a(".IPv4Quad" + (g - 1), c)
                            });
                            else if (g == 0) a(".IPv4Quad0", c).autotab({
                                target: a(".IPv4Quad1", c),
                                maxlength: 3,
                                format: b
                            });
                            else g == 3 && a(".IPv4Quad3", c).autotab({
                                previous: a(".IPv4Quad2", c),
                                maxlength: 3,
                                format: o
                            });
                            a(".IPv4Quad" + g, c).bind("keyup", function () {
                                for (var n = [], q = 0; q < 4; q++) {
                                    var u = parseInt(a(".IPv4Quad" + q, c).val());
                                    if (isNaN(u)) {
                                        l.trigger("dirty");
                                        l.val("");
                                        return
                                    } else n.push(u)
                                }
                                l.val(n.join("."));
                                l.trigger("dirty")
                            });
                            g < 3 && a(".IPv4Quad" + g, c).bind("keyup", {
                                i: g
                            }, function (n) {
                                if (n.keyCode ==
                                    a.ui.keyCode.PERIOD) {
                                    n.preventDefault();
                                    if (this.value != "") {
                                        a(this).trigger("change");
                                        a(this).nextAll("input[type=text]").eq(0).focus()[0].select()
                                    }
                                }
                                if (this.value === "0" && a.inArray(n.keyCode, [a.ui.keyCode.TAB, a.ui.keyCode.SHIFT, a.ui.keyCode.BACKSPACE, a.ui.keyCode.LEFT, a.ui.keyCode.RIGHT]) == -1 && n.data.i != 0 || this.value > 25 && this.value.length == 2 && a.inArray(n.keyCode, [a.ui.keyCode.PERIOD, a.ui.keyCode.BACKSPACE, a.ui.keyCode.TAB, a.ui.keyCode.SHIFT, a.ui.keyCode.CTRL, a.ui.keyCode.ALT, a.ui.keyCode.CAPS_LOCK,
                                    a.ui.keyCode.ESCAPE, a.ui.keyCode.PAGE_UP, a.ui.keyCode.PAGE_DOWN, a.ui.keyCode.END, a.ui.keyCode.HOME, a.ui.keyCode.LEFT, a.ui.keyCode.UP, a.ui.keyCode.RIGHT, a.ui.keyCode.DOWN, a.ui.keyCode.INSERT, a.ui.keyCode.DELETE
                                ]) == -1) {
                                    n.preventDefault();
                                    a(this).trigger("change");
                                    a(this).nextAll("input[type=text]").eq(0).focus()[0].select()
                                }
                            });
                            a(".IPv4Quad" + g, c).bind("focus", function () {
                                a(this).addClass("justFocused")
                            }).bind("keydown", function (n) {
                                n.keyCode == a.ui.keyCode.PERIOD ? n.preventDefault() : a(this).removeClass("justFocused")
                            }).bind("blur",
                                function () {
                                    e.apply(c)
                                })
                        }
                        c.find(".IPv4Dot:last").remove();
                        c.ipv4Input("updateValue");
                        j = j.add(c)
                    }
                });
                return j
            }
        };
    a.fn.ipv4Input = function (j) {
        if (f[j]) return f[j].apply(this, Array.prototype.slice.call(arguments, 1));
        else if (typeof j === "object" || !j) return f.init.apply(this, arguments);
        else a.error("Method " + j + " does not exist on jQuery.ipv4Input")
    }
})(jQuery);
$(window).bind("tick", function () {
    $("body > .jPlayerDummy").each(function (a, e) {
        var f = $(e),
            j = f.data("attachmentID");
        j && !$("#" + j)[0] && f.jPlayer("destroy").remove()
    })
});
$.soundEffect = function (a) {
    getUnique("sfx");
    $('<div style="position: absolute; left: -999em;" />').appendTo("body").jPlayer({
        supplied: "mp3",
        solution: "flash, html",
        noVolume: {
            all: /./
        },
        preload: "auto",
        swfPath: "/js/contrib/",
        ready: function () {
            $(this).jPlayer("setMedia", {
                mp3: a
            }).jPlayer("play")
        },
        ended: function () {
            $(this).jPlayer("destroy").remove()
        }
    })
};
$.fn.soundWidget = function (a, e) {
    var f = this;
    e = $.extend({}, {
        download_params: "disposition=attachment"
    }, e || {});
    var j, g = a.match(/(\?)(.+)/);
    if (e.download_params) j = g[2] ? a + "&" + e.download_params : g[1] ? a + e.download_params : g ? a + "?" + e.download_params : url;
    $("body > iframe[name=download_iframe]")[0] || $("body").prepend('<iframe name="download_iframe" width="1" height="1" style="width: 1px; height: 1px; position: absolute; left: -999em;"></iframe>');
    $.getTemplate("/ajax-html/soundWidget.html", function (c) {
        f.each(function () {
            var b =
                $(this),
                l = $(c),
                o = getUnique("jPlayer");
            l.attr("id", o).appendTo(b);
            l.find(".download").attr("href", j);
            l.find(".play").bind("click", function () {
                $(this).trigger("soundWidgetPlay")
            }).one("click", function () {
                l.find(".pause").show();
                l.find(".playerDiv").addClass("soundPlayerDiv").jPlayer({
                    supplied: "mp3",
                    noVolume: {
                        all: /./
                    },
                    error: function (n) {
                        var q;
                        switch (n.jPlayer.error.type) {
                        case $.jPlayer.error.URL:
                            q = "There was a problem playing the file. The file was missing or not playable.";
                            break;
                        case $.jPlayer.error.FLASH:
                        case $.jPlayer.error.FLASH_DISABLED:
                        case $.jPlayer.error.NO_SOLUTION:
                            q =
                                "This player requires the Adobe Flash plugin. There is a problem with the Flash plugin, or it is not installed or enabled."
                        }
                        q && l.find(".play").qtipMessage({
                            style: "failure",
                            message: q
                        })
                    },
                    cssSelectorAncestor: "#" + o,
                    cssSelector: {
                        play: ".play",
                        pause: ".pause",
                        stop: ".stop",
                        seekBar: ".soundPlayerScrubLoaded",
                        playBar: ".soundPlayerScrubPlayed"
                    },
                    solution: "flash",
                    swfPath: "/js/contrib/",
                    ready: function () {
                        $(this).jPlayer("setMedia", {
                            mp3: a
                        }).jPlayer("play");
                        l.find(".play").attr("src", "/images/play.png")
                    }
                });
                l.find(".play").attr("src",
                    "/images/wait.gif")
            })
        })
    })
};
$.fn.miniSoundWidget = function (a, e) {
    $("body > iframe[name=download_iframe]")[0] || $("body").prepend('<iframe name="download_iframe" width="1" height="1" style="width: 1px; height: 1px; position: absolute; left: -999em;"></iframe>');
    e = $.extend({}, {
        download_params: "disposition=attachment"
    }, e || {});
    var f, j = a.match(/(\?)(.+)/);
    if (e.download_params) f = j[2] ? a + "&" + e.download_params : j[1] ? a + e.download_params : j ? a + "?" + e.download_params : url;
    this.each(function () {
        var g = getUnique("jPlayer"),
            c = $(this),
            b = $('<span class="soundControl"></span>').attr("id",
                g);
        $('<img src="/images/play.png" width="15" height="15" alt="Play" class="play" />').appendTo(b);
        $('<img src="/images/play_active.png" width="15" height="15" alt="Pause" class="pause" />').appendTo(b).hide();
        $('<img src="/images/stop.png" width="15" height="15" alt="Stop" class="stop" />').appendTo(b);
        b.appendTo(c);
        b.find(".download").attr("href", f).attr("target", "download_iframe");
        b.find(".play").bind("click", function () {
            $(this).trigger("soundWidgetPlay")
        }).one("click", function () {
            var l = $('<div class="jPlayerDummy" style="position: absolute; left: -999em" />').appendTo("body").data("attachmentID",
                g);
            b.find(".pause").show();
            l.jPlayer({
                supplied: "mp3",
                noVolume: {
                    all: /./
                },
                error: function (o) {
                    var n;
                    switch (o.jPlayer.error.type) {
                    case $.jPlayer.error.URL:
                        n = "There was a problem playing the file. The file was missing or not playable.";
                        break;
                    case $.jPlayer.error.FLASH:
                    case $.jPlayer.error.FLASH_DISABLED:
                    case $.jPlayer.error.NO_SOLUTION:
                        n = "This player requires the Adobe Flash plugin. There is a problem with the Flash plugin, or it is not installed or enabled."
                    }
                    n && b.find(".play").qtipMessage({
                        style: "failure",
                        message: n
                    })
                },
                cssSelectorAncestor: "#" + g,
                cssSelector: {
                    play: ".play",
                    pause: ".pause",
                    stop: ".stop"
                },
                solution: "flash, html",
                swfPath: "/js/contrib/",
                ready: function () {
                    $(this).jPlayer("setMedia", {
                        mp3: a
                    }).jPlayer("play");
                    b.find(".play").attr("src", "/images/play.png")
                }
            });
            b.find(".play").attr("src", "/images/wait.gif")
        })
    })
};

function format_information(a, e) {
    if (!(typeof a == "undefined" || a == null)) {
        var f;
        e = e || {};
        var j = e.ndash ? "\u2013" : "-";
        if ((f = a.match(/(\d+)-(\d+)/)) && !e.no_auto_split) return format_information(f[1]) + j + format_information(f[2]);
        if (!e.no_seven_digit) {
            if (a.search(/^(\d{3})([\da-zA-Z]{4})$/) > -1) return a.replace(/^(\d{3})([\da-zA-Z]{4})$/, "$1-$2");
            if (a.search(/^1(\d{3})([\da-zA-Z]{4})$/) > -1) return a.replace(/^1(\d{3})([\da-zA-Z]{4})$/, "1-$1-$2")
        }
        if (!e.no_ten_digit) {
            if (a.search(/^(\d{3})([\da-zA-Z]{3})([\da-zA-Z]{4})$/) > -1) return a.replace(/^(\d{3})([\da-zA-Z]{3})([\da-zA-Z]{4})$/, "($1) $2-$3");
            if (a.search(/^1(\d{3})([\da-zA-Z]{3})([\da-zA-Z]{4})$/) > -1) return a.replace(/^1(\d{3})([\da-zA-Z]{3})([\da-zA-Z]{4})$/, "1($1) $2-$3");
            if (a.search(/^\+1(\d{3})([\da-zA-Z]{3})([\da-zA-Z]{4})$/) > -1) return a.replace(/^\+1(\d{3})([\da-zA-Z]{3})([\da-zA-Z]{4})$/, "+1($1) $2-$3")
        }
        if (!e.no_extension) {
            f = e.ext_mark || "x";
            if (a.search(/^(\d{1,6})$/) > -1) return a.replace(/^(\d{1,6})$/, f + "$1")
        }
        return a
    }
};
(function (a) {
    var e = {
        precision: 2,
        format: "long"
    };
    a.formatInterval = function (f, j) {
        var g = [];
        j = a.extend({}, e, j);
        if (f == 0) return j.format == "long" ? "0 seconds" : j.format == "medium" ? "0s" : "00:00";
        var c;
        if (c = f % 60)
            if (j.format == "long") g.push(c + " second" + (c > 1 ? "s" : ""));
            else j.format == "medium" ? g.push(c + "s ") : g.push(sprintf("%'02d", c));
            else j.format == "short" && g.push("00");
        if ((f = Math.floor(f / 60)) && (c = f % 60))
            if (j.format == "long") g.push(c + " minute" + (c > 1 ? "s" : ""));
            else j.format == "medium" ? g.push(c + "m ") : g.push(sprintf("%'02d:",
                c));
            else j.format == "short" && g.push("00:");
        if ((f = Math.floor(f / 60)) && (c = f % 24))
            if (j.format == "long") g.push(c + " hour" + (c > 1 ? "s" : ""));
            else j.format == "medium" ? g.push(c + "h ") : g.push(sprintf("%'02d:", c));
        if (f = Math.floor(f / 24)) j.format == "long" ? g.push(f + " day" + (f > 1 ? "s" : "")) : g.push(f + "d ");
        return g.reverse().slice(0, j.precision).join(j.format == "long" ? ", " : "")
    };
    a.timeSince = function (f, j) {
        j = a.extend({}, e, j);
        if (f instanceof Date) f = Math.floor(f.getTime() / 1E3);
        if (isNaN(f)) return f;
        var g = Math.floor((new Date).getTime() /
            1E3);
        return a.formatInterval(Math.abs(f - g), j)
    }
})(jQuery);
$.fn.callflowDetail = function (a) {
    var e = ["action", "bbx_callflow_id", "bbx_callflow_map_id"];
    if (typeof a != "object") a = {};
    var f = this;
    $.get("/gui/configure/dynamic/callflow?action=ui" + (a.mode ? "&mode=" + a.mode : ""), function (j) {
        var g = $(j),
            c, b = function (l, o) {
                var n = function (q) {
                    $(".callflowNoActions", o).hide();
                    $(".callflowActions", o).append(q.templateElem);
                    q.templateElem.prepend('<div class="ops callflowOperations"><a class="ops opsDelete deleteCallflowLink" href="#">Delete this action</a></div><div class="grippy"></div>').data("bbx_callflow_map",
                        q);
                    q.templateElem.find(".advancedOptions")[0] && $(".callflowOperations", q.templateElem).prepend('<a class="ops opToggleAdvanced" href="#">Advanced Options</a> | ').find(".opToggleAdvanced").bind("click", function (v) {
                        v.preventDefault();
                        $(".advancedOptions", q.templateElem).toggle()
                    });
                    q.templateElem.trigger("callflowTemplateInit");
                    for (var u in q.callflow_map_data_display) e.join("|").indexOf(q.bbx_callflow_map_data[u]) == -1 && $("[name=" + u + "]", q.templateElem).val(q.callflow_map_data_display[u])
                };
                $(".callflowMain",
                    o).remove();
                o.append($(".callflowMain", g).clone());
                $(".opMoreOptionsToggle", o).bind("click", function (q) {
                    q.preventDefault();
                    $(".moreOptionsHidden, .moreOptionsShown", o).toggle();
                    $(".checkslider", o).trigger("redraw")
                });
                $(".callflowMain", o).data("callflow", l);
                $(".callflowFinals input[name=bbx_callflow_id]", o).val(l.bbx_callflow_id);
                $.getJSON("/gui/configure/dynamic/callflow?action=get_callflow_types&template=json" + ((l.bbx_user_id ? true : false) ? "&type=user" : ""), function (q) {
                    q = q.data;
                    var u = l.bbx_callflow_maps;
                    $("a.deleteCallflowLink", o).live("click", function (C) {
                        C.preventDefault();
                        var w = $(this).closest(".callflowTemplate");
                        C = w.data("bbx_callflow_map");
                        confirm("This will delete the action. Continue?") && $.ajax({
                            url: "/gui/configure/dynamic/callflow",
                            data: {
                                action: "delete_callflow_map",
                                bbx_callflow_map_id: C.bbx_callflow_map_id,
                                template: "json"
                            },
                            success: function () {
                                w.remove()
                            }
                        })
                    });
                    var v = {
                        actions: [],
                        presets: [],
                        finals: []
                    }, x;
                    for (x in q) {
                        var z = q[x];
                        z.html = $(".callflowTemplate-" + z.name.replace(/[ _]/g, "-"), g);
                        if (!z.html[0]) {
                            z.html =
                                $(".callflowTemplateGeneric-" + z.section, g).clone().addClass("callflowTemplate-" + z.name.replace(/[ _]/g, "-"));
                            z.html.find(".callflowTypeName").text(z.printed_name)
                        }
                        z.section == "presets" && $('<input type="checkbox" class="checkslider" name="' + z.name + '" />').appendTo(z.html.find(".cb"));
                        v[z.section][z.menu_order] = z
                    }
                    for (var B in u) {
                        z = u[B];
                        if (q[z.bbx_callflow_map_action]) {
                            z.type = q[z.bbx_callflow_map_action];
                            if (z.type.html[0]) z.templateElem = z.type.html.clone();
                            else console_log("jquery.callflow.js: Unknown callflow map type section: ",
                                z.type.section)
                        } else console_log("jquery.callflow.js: Unknown callflow map type: ", z)
                    }
                    for (B in v.presets) {
                        z = v.presets[B];
                        u = z.html.clone();
                        $(".callflowPresets", o).append(u);
                        u.append('<input type="hidden" name="action" value="update_preset" /><input type="hidden" name="bbx_callflow_id" value="' +vancedOptions")[0] && $(".callflowOperations", q.templateElem).prepend('<a class="ops opToggleAdvanced" href="#">Advanced Options</a> | ').find(".opToggleAdvanced").bind("click", function (v) {
                        v.preventDefault();
                        $(".advancedOptions", q.templateElem).toggle()
                    });
                    q.templateElem.trigger("callflowTemplateInit");
                    for (var u in q.callflow_map_data_display) e.join("|").indexOf(q.bbx_callflow_map_data[u]) == -1 && $("[name=" + u + "]", q.templateElem).val(q.callflow_map_data_display[u])
                };
                $(".callflowMain",
                    o).remove();
                o.append($(".callflowMain", g).clone());
                $(".opMoreOptionsToggle", o).bind("click", function (q) {
                    q.preventDefault();
                    $(".moreOptionsHidden, .moreOptionsShown", o).toggle();
                    $(".checkslider", o).trigger("redraw")
                });
                $(".callflowMain", o).data("callflow", l);
                $(".callflowFinals input[name=bbx_callflow_id]", o).val(l.bbx_callflow_id);
                $.getJSON("/gui/configure/dynamic/callflow?action=get_callflow_types&template=json" + ((l.bbx_user_id ? true : false) ? "&type=user" : ""), function (q) {
                    q = q.data;
                    var u = l.bbx_callflow_maps;
                    $("a.deleteCallflowLink", o).live("click", function (C) {
                        C.preventDefault();
                        var w = $(this).closest(".callflowTemplate");
                        C = w.data("bbx_callflow_map");
                        confirm("This will delete the action. Continue?") && $.ajax({
                            url: "/gui/configure/dynamic/callflow",
                            data: {
                                action: "delete_callflow_map",
                                bbx_callflow_map_id: C.bbx_callflow_map_id,
                                template: "json"
                            },
                            success: function () {
                                w.remove()
                            }
                        })
                    });
                    var v = {
                        actions: [],
                        presets: [],
                        finals: []
                    }, x;
                    for (x in q) {
                        var z = q[x];
                        z.html = $(".callflowTemplate-" + z.name.replace(/[ _]/g, "-"), g);
                        if (!z.html[0]) {
                            z.html =
                                $(".callflowTemplateGeneric-" + z.section, g).clone().addClass("callflowTemplate-" + z.name.replace(/[ _]/g, "-"));
                            z.html.find(".callflowTypeName").text(z.printed_name)
                        }
                        z.section == "presets" && $('<input type="checkbox" class="checkslider" name="' + z.name + '" />').appendTo(z.html.find(".cb"));
                        v[z.section][z.menu_order] = z
                    }
                    for (var B in u) {
                        z = u[B];
                        if (q[z.bbx_callflow_map_action]) {
                            z.type = q[z.bbx_callflow_map_action];
                            if (z.type.html[0]) z.templateElem = z.type.html.clone();
                            else console_log("jquery.callflow.js: Unknown callflow map type section: ",
                                z.type.section)
                        } else console_log("jquery.callflow.js: Unknown callflow map type: ", z)
                    }
                    for (B in v.presets) {
                        z = v.presets[B];
                        u = z.html.clone();
                        $(".callflowPresets", o).append(u);
                        u.append('<input type="hidden" name="action" value="update_preset" /><input type="hidden" name="bbx_callflow_id" value="' + l.bbx_callflow_id + '" /><input type="hidden" name="bbx_callflow_map_action" value="' + z.name + '" /><input type="hidden" name="template" value="json" />');
                        u.wrap('<form class="jsAutoSubmit" action="/gui/configure/dynamic/callflow" method="POST"></form>');
                        u.find("input.checkslider").checkslider()
                    }
                    for (B in v.finals) {
                        z = v.finals[B];
                        $(".callflowFinalSelect", o).append('<option value="' + z.name + '">' + z.printed_name + "</option>")
                    }
                    $(".callflowFinalSelect", o).bind("change", function () {
                        var C = q[$(this).val()];
                        if (C) {
                            $(".settingsPanel", o).empty().append(C.html);
                            C = $(this).closest("form").data("bbx_callflow_map");
                            $(this).trigger("callflowTemplateInit", {
                                bbx_callflow_map: C
                            })
                        }
                    });
                    for (B in v.actions) {
                        z = v.actions[B];
                        $(".callflowActionSelect", o).append('<option value="' + z.name +
                            '">' + z.printed_name + "</option>")
                    }
                    $(".callflowActionSelect", o).bind("change", function () {
                        var C = q[$(this).val()].html.clone();
                        $(".callflowNewActionHolder", o).empty().append(C)
                    }).trigger("change");
                    $(".callflowAddAction", o).bind("click", function () {
                        var C = $(".newCallflowMapForm", o).serialize() + "&bbx_callflow_id=" + l.bbx_callflow_id + "&bbx_callflow_map_priority=last_action&action=insert_action&template=json&return=single";
                        $.ajax({
                            url: "/gui/configure/dynamic/callflow",
                            data: C,
                            dataType: "json",
                            success: function (w) {
                                var G =
                                    w.data;
                                G.templateElem = q[w.data.bbx_callflow_map_action].html.clone();
                                n(G)
                            }
                        })
                    });
                    for (B in l.bbx_callflow_maps) {
                        z = l.bbx_callflow_maps[B];
                        switch (z.type.section) {
                        case "presets":
                            v = $(".callflowPresets .callflowTemplate-" + z.bbx_callflow_map_action.replace(/[ _]/g, "-"), o);
                            for (x in z.bbx_callflow_map_data) e.join("|").indexOf(z.bbx_callflow_map_data[x]) == -1 && $(":input[name=" + x + "]", v).val(z.bbx_callflow_map_data[x]);
                            $("form", v).removeClass("jqAutoSubmit");
                            $("input[type=checkbox][name=" + z.bbx_callflow_map_action +
                                "]", v).attr("checked", "checked").trigger("csupdate");
                            $("form", v).addClass("jqAutoSubmit");
                            break;
                        case "actions":
                            n(z);
                            break;
                        case "finals":
                            v = $(".callflowFinals", o);
                            v.removeClass("jsAutoSubmit");
                            v.data("bbx_callflow_map", z);
                            $(".callflowFinalSelect", v).val(z.bbx_callflow_map_action).trigger("change");
                            v.trigger("callflowTemplateInit", {
                                bbx_callflow_map: z
                            });
                            for (x in z.bbx_callflow_map_data)
                                if (e.join("|").indexOf(z.bbx_callflow_map_data[x]) == -1)
                                    if (typeof z.bbx_callflow_map_data[x] === "string" || typeof z.bbx_callflow_map_data[x] ===
                                        "number") $(".callflowTemplate :input[name=" + x + "]", v).val(z.bbx_callflow_map_data[x]);
                            v.addClass("jsAutoSubmit")
                        }
                    }
                    $(".callflowActions", o).sortable({
                        axis: "y",
                        handle: ".grippy"
                    });
                    $(".callflowActions", o).bind("sortupdate", function () {
                        var C = [];
                        $(".callflowActions > .callflowTemplate", o).each(function () {
                            C.push($(this).data("bbx_callflow_map").bbx_callflow_map_id)
                        });
                        var w = $(".callflowMain", o).data("callflow").bbx_callflow_id,
                            G = this;
                        $.ajax({
                            url: "/gui/configure/dynamic/callflow",
                            data: {
                                action: "reorder",
                                template: "json",
                                bbx_callflow_id: w,
                                bbx_callflow_map_id: C
                            },
                            dataType: "json",
                            success: function () {},
                            error: function () {
                                $(G).sortable("cancel")
                            }
                        })
                    })
                });
                o.bind("refreshCallflow", function (q, u) {
                    u.json ? b(u.json, o) : c(a.bbx_callflow_id)
                })
            };
        c = function (l) {
            $.getJSON("/gui/configure/dynamic/callflow?action=detail&template=json&bbx_callflow_id=" + l, function (o) {
                f.each(function () {
                    b(o.data[0], $(this))
                })
            })
        };
        if (a.jsCallflow) f.each(function () {
            b(a.jsCallflow, $(this))
        });
        else a.bbx_callflow_id ? c(a.bbx_callflow_id) : console_log("jquery.callflow.js: No callflow ID or JS object given. Nothing to do.")
    })
};
$(".callflowTemplate").live("callflowTemplateInit", function () {
    var a = $(this),
        e = $(this).data("bbx_callflow_map");
    switch (e.bbx_callflow_map_action) {
    case "try_phone_numbers":
        var f = $(".callflowNumberList", a);
        e.bbx_callflow_map_data ? f.phoneNumberList({
            numbers: e.bbx_callflow_map_data.destination || ""
        }) : f.phoneNumberList({
            numbers: ""
        });
        f.bind("updateList", function (g, c) {
            $.post("/gui/configure/dynamic/callflow", {
                action: "modify_action",
                bbx_callflow_map_id: e.bbx_callflow_map_id,
                destination: c,
                no_clearing: 1
            })
        });
        $("input.callflowMapID", a).val(e.bbx_callflow_map_id);
        $(".timeout", a).val(e.bbx_callflow_map_data.timeout || "");
        trueish(e.bbx_callflow_map_data.confirm) && $(".confirm", a).attr("checked", "checked");
        var j = $(".confirmPrompt", a);
        f = 0;
        if (e.bbx_callflow_map_data.conf_sound) f = e.bbx_callflow_map_data.conf_sound.bbx_sound_id;
        j.empty().soundPicker({
            name: "conf_sound",
            bbx_sound_id: f,
            allowNone: false,
            ready: function () {
                $(".confirm", a).trigger("initchange")
            }
        });
        $(".confirm", a).bind("click change initchange", function () {
            $(this).is(":checked") ?
                j.soundPicker("enable") : j.soundPicker("disable")
        });
        break;
    case "campon":
        $(".camponHoldPick", a).mohPicker(e.bbx_callflow_map_data.bbx_moh_id ? {
            ap_data.group.bbx_extension_block_begin);
                $(".groupPickerGroup", f).val(j.bbx_callflow_map_data.group.bbx_extension_id)
            }
            $(".groupPageMode",
                f).val(j.bbx_callflow_map_data.mode || "realtime");
            $(".groupPickerText", f).extensionPicker(g);
            break;
        case "route":
            $(".gateway", f).empty().selectFrom({
                url: "gui/gateway/combined",
                name: "gateway",
                rowDataRoot: "combined",
                rowData: {
                    value: function (c) {
                        if (c.rowData.bbx_provider_gateway_id) return "gw_" + c.rowData.bbx_provider_gateway_id;
                        else if (c.rowData.bbx_tdm_card_port_type === "ANALOG") return "atdm_" + c.rowData.bbx_tdm_card_port_id;
                        else if (c.rowData.bbx_tdm_card_port_type === "DIGITAL") return "dtdm_" + c.rowData.bbx_tdm_card_port_id
                    },
                    text: function (c) {
                        if (c.rowData.bbx_provider_gateway_id) return c.rowData.bbx_provider_gateway_name;
                        else if (c.rowData.bbx_tdm_card_port_type === "ANALOG") return "Analog port " + c.rowData.bbx_tdm_card_port_number;
                        else if (c.rowData.bbx_tdm_card_port_type === "DIGITAL") return "Digital port " + c.rowData.bbx_tdm_card_port_number
                    }
                },
                firstEmpty: true,
                complete: function () {
                    if (j) {
                        var c = "NOTHING!";
                        if (j && j.bbx_callflow_map_data && j.bbx_callflow_map_data.gateway) {
                            if (j.bbx_callflow_map_data.gateway.bbx_provider_gateway_id) c =
                                "gw_" + j.bbx_callflow_map_data.gateway.bbx_provider_gateway_id;
                            else if ($("option[value=atdm_" + j.bbx_callflow_map_data.gateway.bbx_tdm_card_port_id + "]", f)[0]) c = "atdm_" + j.bbx_callflow_map_data.gateway.bbx_tdm_card_port_id;
                            else if ($("option[value=dtdm_" + j.bbx_callflow_map_data.gateway.bbx_tdm_card_port_id + "]", f)[0]) c = "dtdm_" + j.bbx_callflow_map_data.gateway.bbx_tdm_card_port_id;
                            var b = $("select[name=gateway]", f);
                            c && b.val(c)
                        }
                    }
                }
            })
        }
    })
})();
jQuery.fn.phoneNumberList = function (a) {
    var e = a.layout || [{
        freeform: true
    }],
        f = a.numbers || "",
        j = function (b) {
            return b.search(/^sip:/) > -1 ? b.replace(/[`|,]/g, "") : b.replace(/[^0-9]/g, "")
        }, g = function (b, l) {
            var o = function () {
                var C = "";
                $(".phoneNumberListSortable > .phoneNumberListItem", x).each(function () {
                    C += "|";
                    $(".phoneNumber", this).each(function () {
                        C += $(this).data("number") + ","
                    })
                });
                C = C.replace(/[|,]$/, "").replace(/^\|/, "").replace(/,\|/g, "|");
                x.trigger("updateList", C)
            }, n = function () {
                    var C = $(this).closest(".phoneNumberListItem");
                    $(".newSeqTarget", x).show();
                    $(".deleteNumberTarget", C).show();
                    $(".opAddSimul", C).hide();
                    $(".newSeqEntry", x).hide()
                }, q = function () {
                    $(".newSeqTarget", x).hide();
                    $(".newSeqEntry", x).show();
                    $(".deleteNumberTarget:visible", x).hide();
                    $(".opAddSimul:hidden", x).show()
                }, u = function (C, w, G) {
                    var J = w.find(".phoneNumbersSimul");
                    C = $('<div class="phoneNumber" />').text(format_information(C)).appendTo(J).data("number", C);
                    w = $(".phoneNumber", J).toArray().sort(function (E, M) {
                        return $(E).data("number") - $(M).data("number")
                    });
                    $.each(w, function () {
                        $(this).appendTo(J)
                    });
                    C.draggable({
                        revert: "invalid"
                    }).bind("dragstart", n).bind("dragstop", q).bind("selectstart", function (E) {
                        E.preventDefault()
                    });
                    G || o()
                }, v = function (C, w) {
                    var G = $(".phoneNumberListTemplates > .phoneNumberListItem", x).clone(),
                        J = C.split(",");
                    $(".phoneNumberListSortable", x).append(G);
                    $(".phoneNumberListNoItems", x).hide();
                    for (B in J) u(J[B], G, true);
                    w || o();
                    G.droppable({
                        accept: ".phoneNumber",
                        drop: function (E, M) {
                            q(E, M);
                            var R = M.draggable.closest(".phoneNumberListItem");
                            u(M.draggable.data("number"),
                                $(this), true);
                            M.draggable.remove();
                            R.find(".phoneNumber")[0] || R.remove();
                            o()
                        }
                    });
                    $(".deleteNumberTarget", x).droppable({
                        accept: ".phoneNumber",
                        greedy: true,
                        drop: function (E, M) {
                            q(E, M);
                            var R = M.draggable.closest(".phoneNumberListItem");
                            $(this).hide();
                            M.draggable.remove();
                            R.find(".phoneNumber")[0] || R.remove();
                            o()
                        }
                    });
                    $("a.deleteNumberLink", G).bind("click", function (E) {
                        E.preventDefault();
                        G.remove();
                        o()
                    })
                }, x = $(l);
            x.append($(b));
            x.addClass("phoneNumberList");
            $(".phoneNumberListSortable", x).sortable({
                axis: "y",
                handle: ".grippy"
            }).bind("sortupdate",
                function (C) {
                    o();
                    C.stopPropagation()
                });
            var z = $(".phoneNumberListPicker", x).bind("change", function () {
                var C = e[$(this).val()];
                $(".phoneNumberListInput", x).removeClass("phoneNumberActiveInput").hide();
                if (C.freeform) $("input.phoneNumberListInput", x).addClass("phoneNumberActiveInput").show();
                else {
                    var w = $("select.phoneNumberListInput", x).addClass("phoneNumberActiveInput").show(),
                        G;
                    for (G in C.numbers) w.append("<option />").val(C.numbers[G].value).text(C.numbers[G].display)
                }
            });
            if (e.length == 1 && e[0].freeform) z.hide().append('<option value="0"></option>');
            else
                for (var B in e) z.append("<option />").val(B).text(e[B].display);
            z.trigger("change");
            $(".phoneNumberListInput", x).bind("keyup", function (C) {
                C.keyCode == 13 && $(".addButton", x).trigger("click")
            }).extensionPicker({
                searchTypes: ["all"],
                hidden: false,
                textFormat: "number"
            });
            $(".addButton", x).bind("click", function () {
                var C = $(".phoneNumberActiveInput", x).val();
                C = j(C);
                if (C != "") {
                    v(C);
                    o()
                    w = $(".phoneNumber", J).toArray().sort(function (E, M) {
                        return $(E).data("number") - $(M).data("number")
                    });
                    $.each(w, function () {
                        $(this).appendTo(J)
                    });
                    C.draggable({
                        revert: "invalid"
                    }).bind("dragstart", n).bind("dragstop", q).bind("selectstart", function (E) {
                        E.preventDefault()
                    });
                    G || o()
                }, v = function (C, w) {
                    var G = $(".phoneNumberListTemplates > .phoneNumberListItem", x).clone(),
                        J = C.split(",");
                    $(".phoneNumberListSortable", x).append(G);
                    $(".phoneNumberListNoItems", x).hide();
                    for (B in J) u(J[B], G, true);
                    w || o();
                    G.droppable({
                        accept: ".phoneNumber",
                        drop: function (E, M) {
                            q(E, M);
                            var R = M.draggable.closest(".phoneNumberListItem");
                            u(M.draggable.data("number"),
                                $(this), true);
                            M.draggable.remove();
                            R.find(".phoneNumber")[0] || R.remove();
                            o()
                        }
                    });
                    $(".deleteNumberTarget", x).droppable({
                        accept: ".phoneNumber",
                        greedy: true,
                        drop: function (E, M) {
                            q(E, M);
                            var R = M.draggable.closest(".phoneNumberListItem");
                            $(this).hide();
                            M.draggable.remove();
                            R.find(".phoneNumber")[0] || R.remove();
                            o()
                        }
                    });
                    $("a.deleteNumberLink", G).bind("click", function (E) {
                        E.preventDefault();
                        G.remove();
                        o()
                    })
                }, x = $(l);
            x.append($(b));
            x.addClass("phoneNumberList");
            $(".phoneNumberListSortable", x).sortable({
                axis: "y",
                handle: ".grippy"
            }).bind("sortupdate",
                function (C) {
                    o();
                    C.stopPropagation()
                });
            var z = $(".phoneNumberListPicker", x).bind("change", function () {
                var C = e[$(this).val()];
                $(".phoneNumberListInput", x).removeClass("phoneNumberActiveInput").hide();
                if (C.freeform) $("input.phoneNumberListInput", x).addClass("phoneNumberActiveInput").show();
                else {
                    var w = $("select.phoneNumberListInput", x).addClass("phoneNumberActiveInput").show(),
                        G;
                    for (G in C.numbers) w.append("<option />").val(C.numbers[G].value).text(C.numbers[G].display)
                }
            });
            if (e.length == 1 && e[0].freeform) z.hide().append('<option value="0"></option>');
            else
                for (var B in e) z.append("<option />").val(B).text(e[B].display);
            z.trigger("change");
            $(".phoneNumberListInput", x).bind("keyup", function (C) {
                C.keyCode == 13 && $(".addButton", x).trigger("click")
            }).extensionPicker({
                searchTypes: ["all"],
                hidden: false,
                textFormat: "number"
            });
            $(".addButton", x).bind("click", function () {
                var C = $(".phoneNumberActiveInput", x).val();
                C = j(C);
                if (C != "") {
                    v(C);
                    o();
                    $(".phoneNumberActiveInput", x).val("")
                }
            });
            $(".newSeqTarget", x).droppable({
                accept: ".phoneNumber",
                drop: function (C, w) {
                    q(C, w);
                    var G =
                        w.draggable.closest(".phoneNumberListItem");
                    $(this).hide();
                    v(w.draggable.data("number"), true);
                    w.draggable.remove();
                    G.find(".phoneNumber")[0] || G.remove();
                    o()
                }
            });
            $(".phoneNumberListTypeSelect", x).bind("change", function () {
                o()
            });
            $(".opAddSimul", x).die("click.addLink").live("click.addLink", function (C) {
                C.preventDefault();
                C = $(this).closest(".phoneNumberListItem");
                if (!$(".newPhoneSimul", C)[0]) {
                    var w = $('<input type="text" size="10" value="" class="newPhoneSimul" />');
                    w.appendTo($(".phoneNumbersSimul", C));
                    w.growable().extensionPicker({
                        searchTypes: ["all"],
                        hidden: false,
                        textFormat: "number"
                    }).bind("blur triggerSubmit", function () {
                        var G = $(this),
                            J = setTimeout(function () {
                                var E = G.val();
                                (E = j(E)) && u(E, G.closest(".phoneNumberListItem"));
                                G.remove()
                            }, 200);
                        G.one("focus", function () {
                            clearTimeout(J)
                        })
                    }).focus()
                }
            });
            $(".newPhoneSimul", x).die("click.addSubmit").live("keyup.addSubmit", function (C) {
                if (C.keyCode == 27) {
                    C.preventDefault();
                    $(this).unbind("blur").fadeOut("fast", function () {
                        $(this).remove()
                    })
                } else if (C.keyCode == 13) {
                    C.preventDefault();
                    $(this).trigger("triggerSubmit")
                }
            });
            f = f.split("|");
            if (f.length == 1 && f[0] == "") f = [];
            for (B in f) v(f[B], true)
        }, c = this;
    $.getTemplate("/ajax-html/callflow/number_list.html", function (b) {
        c.each(function () {
            g(b, this)
        })
    })
};
(function () {
    autoSubmits = "form[action].jsAutoSubmit input[name]:not(.noAutoSubmit), form[action].jsAutoSubmit textarea[name]:not(.noAutoSubmit), form[action].jsAutoSubmit select[name]:not(.noAutoSubmit), form[action].jsAutoSubmit .jsAutoSubmitWatch";
    var a = function (f, j) {
        if (typeof j == "undefined") j = false;
        if (f.hasClass("jsAutoSubmitInProgress")) {
            f.trigger("jsAutoSubmitQueued");
            f.addClass("jsAutoSubmitQueued")
        } else {
            j && j.data("autoSubmitTimeout") && clearTimeout(j.data("autoSubmitTimeout"));
            if (j.data("autoSubmitBeforeSerialize"))
                if (j.data("autoSubmitBeforeSerialize")() ===
                    false) return false;
            for (var g = f.serializeObject(), c = f.find("input[alwayssubmit]"), b = 0; b < c.length; b++) {
                var l = $(c[b]);
                if (l.attr("name") != "" && !g[l.attr("name")])
                    if (l.attr("type") == "checkbox") g[l.attr("name")] = l.attr("checked") ? "1" : "0";
                    else g[l.attr("name")] = l.val()
            }
            f.data("extraFormData") && $.extend(g, f.data("extraFormData"));
            f.trigger("jsAutoSubmitInProgress");
            f.addClass("jsAutoSubmitInProgress");
            if (f.data("widgetType") == "formModule") f.formModule("submit", {
                success: function () {
                    f.removeClass("jsAutoSubmitInProgress")
                },
                error: function () {
                    f.removeClass("jsAutoSubmitInProgress")
                }
            });
            else {
                var o = {
                    url: f.attr("action"),
                    type: f.data("method") || f.getFormMethod() || "GET",
                    data: g,
                    accept: f.data("accept") || f.attr("accept"),
                    success: function (n) {
                        j && j.removeAttr("disabled").addClass("autoSubmitSuccess").trigger("autoSubmitSuccess", n);
                        f.trigger("jsAutoSubmitSuccess", n);
                        f.trigger("jsAutoSubmitComplete", n);
                        f.removeClass("jsAutoSubmitInProgress");
                        if (f.hasClass("jsAutoSubmitQueued")) {
                            f.removeClass("jsAutoSubmitQueued");
                            a(f, j)
                        }
                    },
                    afterError: function (n) {
                        f.trigger("jsAutoSubmitError",
                            n);
                        f.trigger("jsAutoSubmitComplete", n);
                        j && j.removeAttr("disabled").addClass("autoSubmitFail").trigger("autoSubmitFail");
                        f.removeClass("jsAutoSubmitInProgress");
                        if (f.hasClass("jsAutoSubmitQueued")) {
                            f.removeClass("jsAutoSubmitQueued");
                            a(f, j)
                        }
                    }
                };
                if (f.data("dataType") || f.attr("returntype")) o.dataType = f.data("dataType") || f.attr("returntype");
                if (!o.dataType) switch (o.accept) {
                case "application/json":
                    o.dataType = "json";
                    break;
                case "text/xml":
                    o.dataType = "xml";
                    break;
                case "text/html":
                    o.dataType = "html"
                }
                f.is(".delayed") ?
                    setTimeout(function () {
                        $.ajax(o)
                    }, 200) : $.ajax(o)
            }
        }
    };
    $("form[action].jsAutoSubmit").live("ddSelect", function () {
        a($(this))
    });
    $(autoSubmits).live("keyup", function (f) {
        if (!$(this).is("textarea") && f.keyCode == 13) {
            f.preventDefault();
            $(this).trigger("change");
            return false
        }
        $(this).data("autoSubmitTimeout") && clearTimeout($(this).data("autoSubmitTimeout"));
        var j = this;
        $(this).data("autoSubmitTimeout", setTimeout(function () {
            $(j).trigger("change")
        }, 2E4))
    });
    $(autoSubmits).live("change IEchange selection", function (f,
        j) {
        var g = $(f.target),
            c = g.closest("form.jsAutoSubmit");
        if (c.closest(".utility")[0] && !c.closest("body")[0]) console_log("liveforms.js: Aborted an improper submit triggered by draggable move");
        else if (!(j && $.isPlainObject(j) && j.autoinit)) {
            $(this).data("autoSubmitTimeout") && clearTimeout(g.data("autoSubmitTimeout"));
            c.serialize();
            g.removeClass("autoSubmitSuccess autoSubmitFail");
            a(c, g)
        }
    });
    $("form.jsAutoSubmit").live("submit", function (f) {
        f.preventDefault()
    });
    if ($.browser.msie) {
        var e = function () {
            $(this).triggerHandler("IEchange")
        };
        $("form.jsAutoSubmit").live("doIEAutoSubmit", function () {
            $(this).find("input[name], textarea[name], select[name]").eq(0).trigger("change")
        });
        $(autoSubmits).live("click keyup", function () {
            var f = $(this);
            f.data("jsAutoSubmit") || f.data("jsAutoSubmit", true).bind("changW + ga -
                    W * ga,
                    za = 2 * W - Ea;
                ga = u(za, Ea, T + 1 / 3);
                W = u(za, Ea, T);
                T = u(za, Ea, T - 1 / 3)
            }
            T = "#" + jb[Math.floor(ga * 255)] + jb[Math.floor(W * 255)] + jb[Math.floor(T * 255)];
            ba = ba[3]
        } else T = eb[P] || P;
        return ab[P] = {
            color: T,
            alpha: ba
        }
    }

    function x(P) {
        this.m_ = b();
        this.mStack_ = [];
        this.aStack_ = [];
        this.currentPath_ = [];
        this.fillStyle = this.strokeStyle = "#000";
        this.lineWidth = 1;
        this.lineJoin = "miter";
        this.lineCap = "butt";
        this.miterLimit = pa * 1;
        this.globalAlpha = 1;
        this.font = "10px sans-serif";
        this.textAlign = "left";
        this.textBaseline = "alphabetic";
        this.canvas =
            P;
        var T = "width:" + P.clientWidth + "px;height:" + P.clientHeight + "px;overflow:hidden;position:absolute",
            ba = P.ownerDocument.createElement("div");
        ba.style.cssText = T;
        P.appendChild(ba);
        T = ba.cloneNode(false);
        T.style.backgroundColor = "red";
        T.style.filter = "alpha(opacity=0)";
        P.appendChild(T);
        this.element_ = ba;
        this.lineScale_ = this.arcScaleY_ = this.arcScaleX_ = 1
    }

    function z(P, T, ba, ga) {
        P.currentPath_.push({
            type: "bezierCurveTo",
            cp1x: T.x,
            cp1y: T.y,
            cp2x: ba.x,
            cp2y: ba.y,
            x: ga.x,
            y: ga.y
        });
        P.currentX_ = ga.x;
        P.currentY_ = ga.y
    }

    function B(P,
        T) {
        var ba = v(P.strokeStyle),
            ga = ba.color;
        ba = ba.alpha * P.globalAlpha;
        var W = P.lineScale_ * P.lineWidth;
        if (W < 1) ba *= W;
        T.push("<g_vml_:stroke", ' opacity="', ba, '"', ' joinstyle="', P.lineJoin, '"', ' miterlimit="', P.miterLimit, '"', ' endcap="', Pa[P.lineCap] || "square", '"', ' weight="', W, 'px"', ' color="', ga, '" />')
    }

    function C(P, T, ba, ga) {
        var W = P.fillStyle,
            Ea = P.arcScaleX_,
            za = P.arcScaleY_,
            Ka = ga.x - ba.x,
            sa = ga.y - ba.y;
        if (W instanceof J) {
            var Oa = 0;
            ga = {
                x: 0,
                y: 0
            };
            var Va = 0,
                gb = 1;
            if (W.type_ == "gradient") {
                Oa = W.x1_ / Ea;
                ba = W.y1_ / za;
                var Ga =
                    w(P, W.x0_ / Ea, W.y0_ / za);
                Oa = w(P, Oa, ba);
                Oa = Math.atan2(Oa.x - Ga.x, Oa.y - Ga.y) * 180 / Math.PI;
                if (Oa < 0) Oa += 360;
                if (Oa < 1.0E-6) Oa = 0
            } else {
                Ga = w(P, W.x0_, W.y0_);
                ga = {
                    x: (Ga.x - ba.x) / Ka,
                    y: (Ga.y - ba.y) / sa
                };
                Ka /= Ea * pa;
                sa /= za * pa;
                gb = R.max(Ka, sa);
                Va = 2 * W.r0_ / gb;
                gb = 2 * W.r1_ / gb - Va
            }
            Ea = W.colors_;
            Ea.sort(function (lb, pb) {
                return lb.offset - pb.offset
            });
            za = Ea.length;
            Ga = Ea[0].color;
            ba = Ea[za - 1].color;
            Ka = Ea[0].alpha * P.globalAlpha;
            P = Ea[za - 1].alpha * P.globalAlpha;
            sa = [];
            for (var Qa = 0; Qa < za; Qa++) {
                var ob = Ea[Qa];
                sa.push(ob.offset * gb + Va + " " + ob.color)
            }
            T.push('<g_vml_:fill type="',
                W.type_, '"', ' method="none" focus="100%"', ' color="', Ga, '"', ' color2="', ba, '"', ' colors="', sa.join(","), '"', ' opacity="', P, '"', ' g_o_:opacity2="', Ka, '"', ' angle="', Oa, '"', ' focusposition="', ga.x, ",", ga.y, '" />')
        } else if (W instanceof E) Ka && sa && T.push("<g_vml_:fill", ' position="', -ba.x / Ka * Ea * Ea, ",", -ba.y / sa * za * za, '"', ' type="tile"', ' src="', W.src_, '" />');
        else {
            W = v(P.fillStyle);
            T.push('<g_vml_:fill color="', W.color, '" opacity="', W.alpha * P.globalAlpha, '" />')
        }
    }

    function w(P, T, ba) {
        P = P.m_;
        return {
            x: pa * (T *
                P[0][0] + ba * P[1][0] + P[2][0]) - La,
            y: pa * (T * P[0][1] + ba * P[1][1] + P[2][1]) - La
        }
    }

    function G(P, T, ba) {
        if (isFinite(T[0][0]) && isFinite(T[0][1]) && isFinite(T[1][0]) && isFinite(T[1][1]) && isFinite(T[2][0]) && isFinite(T[2][1])) {
            P.m_ = T;
            if (ba) P.lineScale_ = Na(qa(T[0][0] * T[1][1] - T[0][1] * T[1][0]))
        }
    }

    function J(P) {
        this.type_ = P;
        this.r1_ = this.y1_ = this.x1_ = this.r0_ = this.y0_ = this.x0_ = 0;
        this.colors_ = []
    }

    function E(P, T) {
        if (!P || P.nodeType != 1 || P.tagName != "IMG") throw new M("TYPE_MISMATCH_ERR");
        if (P.readyState != "complete") throw new M("INVALID_STATE_ERR");
        switch (T) {
        case "repeat":
        case null:
        case "":
            this.repetition_ = "repeat";
            break;
        case "repeat-x":
        case "repeat-y":
        case "no-repeat":
            this.repetition_ = T;
            break;
        default:
            throw new M("SYNTAX_ERR");
        }
        this.src_ = P.src;
        this.width_ = P.width;
        this.height_ = P.height
    }

    function M(P) {
        this.code = this[P];
        this.message = P + ": DOM Exception " + this.code
    }
    var R = Math,
        O = R.round,
        Y = R.sin,
        na = R.cos,
        qa = R.abs,
        Na = R.sqrt,
        pa = 10,
        La = pa / 2;
    navigator.userAgent.match(/MSIE ([\d.]+)?/);
    var $a = Array.prototype.slice;
    j(document);
    var fb = {
        init: function (P) {
            P = P ||
                document;
            P.createElement("canvas");
            P.attachEvent("onreadystatechange", e(this.init_, this, P))
        },
        init_: function (P) {
            P = P.getElementsByTagName("canvas");
            for (var T = 0; T < P.length; T++) this.initElement(P[T])
        },
        initElement: function (P) {
            if (!P.getContext) {
                P.getContext = a;
                j(P.ownerDocument);
                P.innerHTML = "";
                P.attachEvent("onpropertychange", g);
                P.attachEvent("onresize", c);
                var T = P.attributes;
                if (T.width && T.width.specified) P.style.width = T.width.nodeValue + "px";
                else P.width = P.clientWidth; if (T.height && T.height.specified) P.style.height =
                    T.height.nodeValue + "px";
                else P.height = P.clientHeight
            }
            return P
        }
    };
    fb.init();
    for (var jb = [], Fa = 0; Fa < 16; Fa++)
        for (var db = 0; db < 16; db++) jb[Fa * 16 + db] = Fa.toString(16) + db.toString(16);
    var eb = {
        aliceblue: "#F0F8FF",
        antiquewhite: "#FAEBD7",
        aquamarine: "#7FFFD4",
        azure: "#F0FFFF",
        beige: "#F5F5DC",
        bisque: "#FFE4C4",
        black: "#000000",
        blanchedalmond: "#FFEBCD",
        blueviolet: "#8A2BE2",
        brown: "#A52A2A",
        burlywood: "#DEB887",
        cadetblue: "#5F9EA0",
        chartreuse: "#7FFF00",
        chocolate: "#D2691E",
        coral: "#FF7F50",
        cornflowerblue: "#6495ED",
        cornsilk: "#FFF8DC",
        crimson: "#DC143C",
        cyan: "#00FFFF",
        darkblue: "#00008B",
        darkcyan: "#008B8B",
        darkgoldenrod: "#B8860B",
        darkgray: "#A9A9A9",
        darkgreen: "#006400",
        darkgrey: "#A9A9A9",
        darkkhaki: "#BDB76B",
        darkmagenta: "#8B008B",
        darkolivegreen: "#556B2F",
        darkorange: "#FF8C00",
        darkorchid: "#9932CC",
        darkred: "#8B0000",
        darksalmon: "#E9967A",
        darkseagreen: "#8FBC8F",
        darkslateblue: "#483D8B",
        darkslategray: "#2F4F4F",
        darkslategrey: "#2F4F4F",
        darkturquoise: "#00CED1",
        darkviolet: "#9400D3",
        deeppink: "#FF1493",
        deepskyblue: "#00BFFF",
        dimgray: "#696969",
        dimgrey: "#696969",
        dodgerblue: "#1E90FF",
        firebrick: "#B22222",
        floralwhite: "#FFFAF0",
        forestgreen: "#228B22",
        gainsboro: "#DCDCDC",
        ghostwhite: "#F8F8FF",
        gold: "#FFD700",
        goldenrod: "#DAA520",
        grey: "#808080",
        greenyellow: "#ADFF2F",
        honeydew: "#F0FFF0",
        hotpink: "#FF69B4",
        indianred: "#CD5C5C",
        indigo: "#4B0082",
        ivory: "#FFFFF0",
        khaki: "#F0E68C",
        lavender: "#E6E6FA",
        lavenderblush: "#FFF0F5",
        lawngreen: "#7CFC00",
        lemonchiffon: "#FFFACD",
        lightblue: "#ADD8E6",
        lightcoral: "#F08080",
        lightcyan: "#E0FFFF",
        lightgoldenrodyellow: "#FAFAD2",
        lightgreen: "#90EE90",
        lightgrey: "#D3D3D3",
        lightpink: "#FFB6C1",
        lightsalmon: "#FFA07A",
        lightseagreen: "#20B2AA",
        lightskyblue: "#87CEFA",
        lightslategray: "#778899",
        lightslategrey: "#778899",
        lightsteelblue: "#B0C4DE",
        lightyellow: "#FFFFE0",
        limegreen: "#32CD32",
        linen: "#FAF0E6",
        magenta: "#FF00FF",
        mediumaquamarine: "#66CDAA",
        mediumblue: "#0000CD",
        mediumorchid: "#BA55D3",
        mediumpurple: "#9370DB",
        mediumseagreen: "#3CB371",
        mediumslateblue: "#7B68EE",
        mediumspringgreen: "#00FA9A",
        mediumturquoise: "#48D1CC",
        mediumvioletred: "#C71585",
        midnightblue: "#191970",
        mintcream: "#F5FFFA",
        mistyrose: "#FFE4E1",
        moccasin: "#FFE4B5",
        navajowhite: "#FFDEAD",
        oldlace: "#FDF5E6",
        olivedrab: "#6B8E23",
        orange: "#FFA500",
        orangered: "#FF4500",
        orchid: "#DA70D6",
        palegoldenrod: "#EEE8AA",
        palegreen: "#98FB98",
        paleturquoise: "#AFEEEE",
        palevioletred: "#DB7093",
        papayawhip: "#FFEFD5",
        peachpuff: "#FFDAB9",
        peru: "#CD853F",
        pink: "#FFC0CB",
        plum: "#DDA0DD",
        powderblue: "#B0E0E6",
        rosybrown: "#BC8F8F",
        royalblue: "#4169E1",
        saddlebrown: "#8B4513",
        salmon: "#FA8072",
        sandybrown: "#F4A460",
        seagreen: "#2E8B57",
        seashell: "#FFF5EE",
        sienna: "#A0522D",
        skyblue: "#87CEEB",
        slateblue: "#6A5ACD",
        slategray: "#708090",
        slategrey: "#708090",
        snow: "#FFFAFA",
        springgreen: "#00FF7F",
        steelblue: "#4682B4",
        tan: "#D2B48C",
        thistle: "#D8BFD8",
        tomato: "#FF6347",
        turquoise: "#40E0D0",
        violet: "#EE82EE",
        wheat: "#F5DEB3",
        whitesmoke: "#F5F5F5",
        yellowgreen: "#9ACD32"
    }, ab = {}, rb = {
            style: "normal",
            variant: "normal",
            weight: "normal",
            size: 10,
            family: "sans-serif"
        }, xb = {}, Pa = {
            butt: "flat",
            round: "round"
        };
    Fa = x.prototype;
    Fa.clearRect = function () {
        if (this.textMeasureEl_) {
            this.textMeasureEl_.removeNode(true);
            this.textMeasureEl_ = null
        }
        this.element_.innerHTML = ""
    };
    Fa.beginPath = function () {
        this.currentPath_ = []
    };
    Fa.moveTo = function (P, T) {
        var ba = w(this, P, T);
        this.currentPath_.push({
            type: "moveTo",
            x: ba.x: "#A9A9A9",
        darkkhaki: "#BDB76B",
        darkmagenta: "#8B008B",
        darkolivegreen: "#556B2F",
        darkorange: "#FF8C00",
        darkorchid: "#9932CC",
        darkred: "#8B0000",
        darksalmon: "#E9967A",
        darkseagreen: "#8FBC8F",
        darkslateblue: "#483D8B",
        darkslategray: "#2F4F4F",
        darkslategrey: "#2F4F4F",
        darkturquoise: "#00CED1",
        darkviolet: "#9400D3",
        deeppink: "#FF1493",
        deepskyblue: "#00BFFF",
        dimgray: "#696969",
        dimgrey: "#696969",
        dodgerblue: "#1E90FF",
        firebrick: "#B22222",
        floralwhite: "#FFFAF0",
        forestgreen: "#228B22",
        gainsboro: "#DCDCDC",
        ghostwhite: "#F8F8FF",
        gold: "#FFD700",
        goldenrod: "#DAA520",
        grey: "#808080",
        greenyellow: "#ADFF2F",
        honeydew: "#F0FFF0",
        hotpink: "#FF69B4",
        indianred: "#CD5C5C",
        indigo: "#4B0082",
        ivory: "#FFFFF0",
        khaki: "#F0E68C",
        lavender: "#E6E6FA",
        lavenderblush: "#FFF0F5",
        lawngreen: "#7CFC00",
        lemonchiffon: "#FFFACD",
        lightblue: "#ADD8E6",
        lightcoral: "#F08080",
        lightcyan: "#E0FFFF",
        lightgoldenrodyellow: "#FAFAD2",
        lightgreen: "#90EE90",
        lightgrey: "#D3D3D3",
        lightpink: "#FFB6C1",
        lightsalmon: "#FFA07A",
        lightseagreen: "#20B2AA",
        lightskyblue: "#87CEFA",
        lightslategray: "#778899",
        lightslategrey: "#778899",
        lightsteelblue: "#B0C4DE",
        lightyellow: "#FFFFE0",
        limegreen: "#32CD32",
        linen: "#FAF0E6",
        magenta: "#FF00FF",
        mediumaquamarine: "#66CDAA",
        mediumblue: "#0000CD",
        mediumorchid: "#BA55D3",
        mediumpurple: "#9370DB",
        mediumseagreen: "#3CB371",
        mediumslateblue: "#7B68EE",
        mediumspringgreen: "#00FA9A",
        mediumturquoise: "#48D1CC",
        mediumvioletred: "#C71585",
        midnightblue: "#191970",
        mintcream: "#F5FFFA",
        mistyrose: "#FFE4E1",
        moccasin: "#FFE4B5",
        navajowhite: "#FFDEAD",
        oldlace: "#FDF5E6",
        olivedrab: "#6B8E23",
        orange: "#FFA500",
        orangered: "#FF4500",
        orchid: "#DA70D6",
        palegoldenrod: "#EEE8AA",
        palegreen: "#98FB98",
        paleturquoise: "#AFEEEE",
        palevioletred: "#DB7093",
        papayawhip: "#FFEFD5",
        peachpuff: "#FFDAB9",
        peru: "#CD853F",
        pink: "#FFC0CB",
        plum: "#DDA0DD",
        powderblue: "#B0E0E6",
        rosybrown: "#BC8F8F",
        royalblue: "#4169E1",
        saddlebrown: "#8B4513",
        salmon: "#FA8072",
        sandybrown: "#F4A460",
        seagreen: "#2E8B57",
        seashell: "#FFF5EE",
        sienna: "#A0522D",
        skyblue: "#87CEEB",
        slateblue: "#6A5ACD",
        slategray: "#708090",
        slategrey: "#708090",
        snow: "#FFFAFA",
        springgreen: "#00FF7F",
        steelblue: "#4682B4",
        tan: "#D2B48C",
        thistle: "#D8BFD8",
        tomato: "#FF6347",
        turquoise: "#40E0D0",
        violet: "#EE82EE",
        wheat: "#F5DEB3",
        whitesmoke: "#F5F5F5",
        yellowgreen: "#9ACD32"
    }, ab = {}, rb = {
            style: "normal",
            variant: "normal",
            weight: "normal",
            size: 10,
            family: "sans-serif"
        }, xb = {}, Pa = {
            butt: "flat",
            round: "round"
        };
    Fa = x.prototype;
    Fa.clearRect = function () {
        if (this.textMeasureEl_) {
            this.textMeasureEl_.removeNode(true);
            this.textMeasureEl_ = null
        }
        this.element_.innerHTML = ""
    };
    Fa.beginPath = function () {
        this.currentPath_ = []
    };
    Fa.moveTo = function (P, T) {
        var ba = w(this, P, T);
        this.currentPath_.push({
            type: "moveTo",
            x: ba.x,
            y: ba.y
        });
        this.currentX_ = ba.x;
        this.currentY_ = ba.y
    };
    Fa.lineTo = function (P, T) {
        var ba = w(this, P, T);
        this.currentPath_.push({
            type: "lineTo",
            x: ba.x,
            y: ba.y
        });
        this.currentX_ = ba.x;
        this.currentY_ = ba.y
    };
    Fa.bezierCurveTo = function (P, T, ba, ga, W, Ea) {
        W = w(this, W, Ea);
        P = w(this, P, T);
        ba = w(this, ba, ga);
        z(this, P, ba, W)
    };
    Fa.quadraticCurveTo = function (P,
        T, ba, ga) {
        P = w(this, P, T);
        ba = w(this, ba, ga);
        ga = {
            x: this.currentX_ + 2 / 3 * (P.x - this.currentX_),
            y: this.currentY_ + 2 / 3 * (P.y - this.currentY_)
        };
        z(this, ga, {
            x: ga.x + (ba.x - this.currentX_) / 3,
            y: ga.y + (ba.y - this.currentY_) / 3
        }, ba)
    };
    Fa.arc = function (P, T, ba, ga, W, Ea) {
        ba *= pa;
        var za = Ea ? "at" : "wa",
            Ka = P + na(ga) * ba - La,
            sa = T + Y(ga) * ba - La;
        ga = P + na(W) * ba - La;
        W = T + Y(W) * ba - La;
        if (Ka == ga && !Ea) Ka += 0.125;
        P = w(this, P, T);
        Ka = w(this, Ka, sa);
        ga = w(this, ga, W);
        this.currentPath_.push({
            type: za,
            x: P.x,
            y: P.y,
            radius: ba,
            xStart: Ka.x,
            yStart: Ka.y,
            xEnd: ga.x,
            yEnd: ga.y
        })
    };
    Fa.rect = function (P, T, ba, ga) {
        this.moveTo(P, T);
        this.lineTo(P + ba, T);
        this.lineTo(P + ba, T + ga);
        this.lineTo(P, T + ga);
        this.closePath()
    };
    Fa.strokeRect = function (P, T, ba, ga) {
        var W = this.currentPath_;
        this.beginPath();
        this.moveTo(P, T);
        this.lineTo(P + ba, T);
        this.lineTo(P + ba, T + ga);
        this.lineTo(P, T + ga);
        this.closePath();
        this.stroke();
        this.currentPath_ = W
    };
    Fa.fillRect = function (P, T, ba, ga) {
        var W = this.currentPath_;
        this.beginPath();
        this.moveTo(P, T);
        this.lineTo(P + ba, T);
        this.lineTo(P + ba, T + ga);
        this.lineTo(P, T + ga);
        this.closePath();
        this.fill();
        this.currentPath_ = W
    };
    Fa.createLinearGradient = function (P, T, ba, ga) {
        var W = new J("gradient");
        W.x0_ = P;
        W.y0_ = T;
        W.x1_ = ba;
        W.y1_ = ga;
        return W
    };
    Fa.createRadialGradient = function (P, T, ba, ga, W, Ea) {
        var za = new J("gradientradial");
        za.x0_ = P;
        za.y0_ = T;
        za.r0_ = ba;
        za.x1_ = ga;
        za.y1_ = W;
        za.r1_ = Ea;
        return za
    };
    Fa.drawImage = function (P) {
        var T, ba, ga, W, Ea, za, Ka, sa;
        ga = P.runtimeStyle.width;
        W = P.runtimeStyle.height;
        P.runtimeStyle.width = "auto";
        P.runtimeStyle.height = "auto";
        var Oa = P.width,
            Va = P.height;
        P.runtimeStyle.width = ga;
        P.runtimeStyle.height =
            W;
        if (arguments.length == 3) {
            T = arguments[1];
            ba = arguments[2];
            Ea = za = 0;
            Ka = ga = Oa;
            sa = W = Va
        } else if (arguments.length == 5) {
            T = arguments[1];
            ba = arguments[2];
            ga = arguments[3];
            W = arguments[4];
            Ea = za = 0;
            Ka = Oa;
            sa = Va
        } else if (arguments.length == 9) {
            Ea = arguments[1];
            za = arguments[2];
            Ka = arguments[3];
            sa = arguments[4];
            T = arguments[5];
            ba = arguments[6];
            ga = arguments[7];
            W = arguments[8]
        } else throw Error("Invalid number of arguments");
        var gb s.aStack_.pop(), this);
            this.m_ = this.mStack_.pop()
        }
    };
    Fa.translate =
        function (P, T) {
            G(this, l([
                [1, 0, 0],
                [0, 1, 0],
                [P, T, 1]
            ], this.m_), false)
    };
    Fa.rotate = function (P) {
        var T = na(P);
        P = Y(P);
        G(this, l([
            [T, P, 0],
            [-P, T, 0],
            [0, 0, 1]
        ], this.m_), false)
    };
    Fa.scale = function (P, T) {
        this.arcScaleX_ *= P;
        this.arcScaleY_ *= T;
        G(this, l([
            [P, 0, 0],
            [0, T, 0],
            [0, 0, 1]
        ], this.m_), true)
    };
    Fa.transform = function (P, T, ba, ga, W, Ea) {
        G(this, l([
            [P, T, 0],
            [ba, ga, 0],
            [W, Ea, 1]
        ], this.m_), true)
    };
    Fa.setTransform = function (P, T, ba, ga, W, Ea) {
        G(this, [
            [P, T, 0],
            [ba, ga, 0],
            [W, Ea, 1]
        ], true)
    };
    Fa.drawText_ = function (P, T, ba, ga, W) {
        var Ea = this.m_;
        ga =
            0;
        var za = 1E3,
            Ka = {
                x: 0,
                y: 0
            }, sa = [],
            Oa;
        Oa = this.font;
        if (xb[Oa]) Oa = xb[Oa];
        else {
            var Va = document.createElement("div").style;
            try {
                Va.font = Oa
            } catch (gb) {}
            Oa = xb[Oa] = {
                style: Va.fontStyle || rb.style,
                variant: Va.fontVariant || rb.variant,
                weight: Va.fontWeight || rb.weight,
                size: Va.fontSize || rb.size,
                family: Va.fontFamily || rb.family
            }
        }
        Va = Oa;
        var Ga = this.element_;
        Oa = {};
        for (var Qa in Va) Oa[Qa] = Va[Qa];
        Qa = parseFloat(Ga.currentStyle.fontSize);
        Ga = parseFloat(Va.size);
        Oa.size = typeof Va.size == "number" ? Va.size : Va.size.indexOf("px") != -1 ?
            Ga : Va.size.indexOf("em") != -1 ? Qa * Ga : Va.size.indexOf("%") != -1 ? Qa / 100 * Ga : Va.size.indexOf("pt") != -1 ? Ga / 0.75 : Qa;
        Oa.size *= 0.981;
        Qa = Oa.style + " " + Oa.variant + " " + Oa.weight + " " + Oa.size + "px " + Oa.family;
        Ga = this.element_.currentStyle;
        Va = this.textAlign.toLowerCase();
        switch (Va) {
        case "left":
        case "center":
        case "right":
            break;
        case "end":
            Va = Ga.direction == "ltr" ? "right" : "left";
            break;
        case "start":
            Va = Ga.direction == "rtl" ? "right" : "left";
            break;
        default:
            Va = "left"
        }
        switch (this.textBaseline) {
        case "hanging":
        case "top":
            Ka.y = Oa.size /
                1.75;
            break;
        case "middle":
            break;
        default:
        case null:
        case "alphabetic":
        case "ideographic":
        case "bottom":
            Ka.y = -Oa.size / 2.25
        }
        switch (Va) {
        case "right":
            ga = 1E3;
            za = 0.05;
            break;
        case "center":
            ga = za = 500
        }
        T = w(this, T + Ka.x, ba + Ka.y);
        sa.push('<g_vml_:line from="', -ga, ' 0" to="', za, ' 0.05" ', ' coordsize="100 100" coordorigin="0 0"', ' filled="', !W, '" stroked="', !! W, '" style="position:absolute;width:1px;height:1px;">');
        W ? B(this, sa) : C(this, sa, {
            x: -ga,
            y: 0
        }, {
            x: za,
            y: Oa.size
        });
        W = Ea[0][0].toFixed(3) + "," + Ea[1][0].toFixed(3) + "," +
            Ea[0][1].toFixed(3) + "," + Ea[1][1].toFixed(3) + ",0,0";
        T = O(T.x / pa) + "," + O(T.y / pa);
        sa.push('<g_vml_:skew on="t" matrix="', W, '" ', ' offset="', T, '" origin="', ga, ' 0" />', '<g_vml_:path textpathok="true" />', '<g_vml_:textpath on="true" string="', f(P), '" style="v-text-align:', Va, ";font:", f(Qa), '" /></g_vml_:line>');
        this.element_.insertAdjacentHTML("beforeEnd", sa.join(""))
    };
    Fa.fillText = function (P, T, ba, ga) {
        this.drawText_(P, T, ba, ga, false)
    };
    Fa.strokeText = function (P, T, ba, ga) {
        this.drawText_(P, T, ba, ga, true)
    };
    Fa.measureText =
        function (P) {
            if (!this.textMeasureEl_) {
                this.element_.insertAdjacentHTML("beforeEnd", '<span style="position:absolute;top:-20000px;left:0;padding:0;margin:0;border:none;white-space:pre;"></span>');
                this.textMeasureEl_ = this.element_.lastChild
            }
            var T = this.element_.ownerDocument;
            this.textMeasureEl_.innerHTML = "";
            this.textMeasureEl_.style.font = this.font;
            this.textMeasureEl_.appendChild(T.createTextNode(P));
            return {
                width: this.textMeasureEl_.offsetWidth
            }
    };
    Fa.clip = function () {};
    Fa.arcTo = function () {};
    Fa.createPattern =
        function (P, T) {
            return new E(P, T)
    };
    J.prototype.addColorStop = function (P, T) {
        T = v(T);
        this.colors_.push({
            offset: P,
            color: T.color,
            alpha: T.alpha
        })
    };
    Fa = M.prototype = Error();
    Fa.INDEX_SIZE_ERR = 1;
    Fa.DOMSTRING_SIZE_ERR = 2;
    Fa.HIERARCHY_REQUEST_ERR = 3;
    Fa.WRONG_DOCUMENT_ERR = 4;
    Fa.INVALID_CHARACTER_ERR = 5;
    Fa.NO_DATA_ALLOWED_ERR = 6;
    Fa.NO_MODIFICATION_ALLOWED_ERR = 7;
    Fa.NOT_FOUND_ERR = 8;
    Fa.NOT_SUPPORTED_ERR = 9;
    Fa.INUSE_ATTRIBUTE_ERR = 10;
    Fa.INVALID_STATE_ERR = 11;
    Fa.SYNTAX_ERR = 12;
    Fa.INVALID_MODIFICATION_ERR = 13;
    Fa.NAMESPACE_ERR = 14;
    Fa.INVALID_ACCESS_ERR = 15;
    Fa.VALIDATION_ERR = 16;
    Fa.TYPE_MISMATCH_ERR = 17;
    G_vmlCanvasManager = fb;
    CanvasRenderingContext2D = x;
    CanvasGradient = J;
    CanvasPattern = E;
    DOMException = M
}();
(function (a) {
    a.color = {};
    a.color.make = function (f, j, g, c) {
        var b = {};
        b.r = f || 0;
        b.g = j || 0;
        b.b = g || 0;
        b.a = c != null ? c : 1;
        b.add = function (l, o) {
            for (var n = 0; n < l.length; ++n) b[l.charAt(n)] += o;
            return b.normalize()
        };
        b.scale = function (l, o) {
            for (var n = 0; n < l.length; ++n) b[l.charAt(n)] *= o;
            return b.normalize()
        };
        b.toString = function () {
            return b.a >= 1 ? "rgb(" + [b.r, b.g, b.b].join(",") + ")" : "rgba(" + [b.r, b.g, b.b, b.a].join(",") + ")"
        };
        b.normalize = function () {
            function l(o, n, q) {
                return n < o ? o : n > q ? q : n
            }
            b.r = l(0, parseInt(b.r), 255);
            b.g = l(0, parseInt(b.g),
                255);
            b.b = l(0, parseInt(b.b), 255);
            b.a = l(0, b.a, 1);
            return b
        };
        b.clone = function () {
            return a.color.make(b.r, b.b, b.g, b.a)
        };
        return b.normalize()
    };
    a.color.extract = function (f, j) {
        var g;
        do {
            g = f.css(j).toLowerCase();
            if (g != "" && g != "transparent") break;
            f = f.parent()
        } while (!a.nodeName(f.get(0), "body"));
        if (g == "rgba(0, 0, 0, 0)") g = "transparent";
        return a.color.parse(g)
    };
    a.color.parse = function (f) {
        var j, g = a.color.make;
        if (j = /rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec(f)) return g(parseInt(j[1], 10),
            parseInt(j[2], 10), parseInt(j[3], 10));
        if (j = /rgba\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]+(?:\.[0-9]+)?)\s*\)/.exec(f)) return g(parseInt(j[1], 10), parseInt(j[2], 10), parseInt(j[3], 10), parseFloat(j[4]));
        if (j = /rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/.exec(f)) return g(parseFloat(j[1]) * 2.55, parseFloat(j[2]) * 2.55, parseFloat(j[3]) * 2.55);
        if (j = /rgba\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\s*\)/.exec(f)) return g(parseFloat(j[1]) *
            2.55, parseFloat(j[2]) * 2.55, parseFloat(j[3]) * 2.55, parseFloat(j[4]));
        if (j = /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(f)) return g(parseInt(j[1], 16), parseInt(j[2], 16), parseInt(j[3], 16));
        if (j = /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(f)) return g(parseInt(j[1] + j[1], 16), parseInt(j[2] + j[2], 16), parseInt(j[3] + j[3], 16));
        f = a.trim(f).toLowerCase();
        if (f == "transparent") return g(255, 255, 255, 0);
        else {
            j = e[f] || [0, 0, 0];
            return g(j[0], j[1], j[2])
        }
    };
    var e = {
        aqua: [0, 255, 255],
        azure: [240, 255, 255],
        beige: [245,
            245, 220
        ],
        black: [0, 0, 0],
        blue: [0, 0, 255],
        brown: [165, 42, 42],
        cyan: [0, 255, 255],
        darkblue: [0, 0, 139],
        darkcyan: [0, 139, 139],
        darkgrey: [169, 169, 169],
        darkgreen: [0, 100, 0],
        darkkhaki: [189, 183, 107],
        darkmagenta: [139, 0, 139],
        darkolivegreen: [85, 107, 47],
        darkorange: [255, 140, 0],
        darkorchid: [153, 50, 204],
        darkred: [139, 0, 0],
        darksalmon: [233, 150, 122],
        darkviolet: [148, 0, 211],
        fuchsia: [255, 0, 255],
        gold: [255, 215, 0],
        green: [0, 128, 0],
        indigo: [75, 0, 130],
        khaki: [240, 230, 140],
        lightblue: [173, 216, 230],
        lightcyan: [224, 255, 255],
        lightgreen: [144, 238,
            144
        ],
        lightgrey: [211, 211, 211],
        lightpink: [255, 182, 193],
        lightyellow: [255, 255, 224],
        lime: [0, 255, 0],
        magenta: [255, 0, 255],
        maroon: [128, 0, 0],
        navy: [0, 0, 128],
        olive: [128, 128, 0],
        orange: [255, 165, 0],
        pink: [255, 192, 203],
        purple: [128, 0, 128],
        violet: [128, 0, 128],
        red: [255, 0, 0],
        silver: [192, 192, 192],
        white: [255, 255, 255],
        yellow: [255, 255, 0]
    }
})(jQuery);
(function (a) {
    function e(j, g, c, b) {
        function l(S, da) {
            da = [mb].concat(da);
            for (var Z = 0; Z < S.length; ++Z) S[Z].apply(this, da)
        }

        function o(S) {
            for (var da = [], Z = 0; Z < S.length; ++Z) {
                var ea = a.extend(true, {}, W.series);
                if (S[Z].data != null) {
                    ea.data = S[Z].data;
                    delete S[Z].data;
                    a.extend(true, ea, S[Z]);
                    S[Z].data = ea.data
                } else ea.data = S[Z];
                da.push(ea)
            }
            ga = da;
            da = ga.length;
            Z = [];
            ea = [];
            for (S = 0; S < ga.length; ++S) {
                var ca = ga[S].color;
                if (ca != null) {
                    --da;
                    typeof ca == "number" ? ea.push(ca) : Z.push(a.color.parse(ga[S].color))
                }
            }
            for (S = 0; S < ea.length; ++S) da =
                Math.max(da, ea[S] + 1);
            Z = [];
            for (S = ea = 0; Z.length < da;) {
                ca = W.colors.length == S ? a.color.make(100, 100, 100) : a.color.parse(W.colors[S]);
                ca.scale("rgb", 1 + (ea % 2 == 1 ? -1 : 1) * Math.ceil(ea / 2) * 0.2);
                Z.push(ca);
                ++S;
                if (S >= W.colors.length) {
                    S = 0;
                    ++ea
                }
            }
            for (S = da = 0; S < ga.length; +Float(j[4]));
        if (j = /rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/.exec(f)) return g(parseFloat(j[1]) * 2.55, parseFloat(j[2]) * 2.55, parseFloat(j[3]) * 2.55);
        if (j = /rgba\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\s*\)/.exec(f)) return g(parseFloat(j[1]) *
            2.55, parseFloat(j[2]) * 2.55, parseFloat(j[3]) * 2.55, parseFloat(j[4]));
        if (j = /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(f)) return g(parseInt(j[1], 16), parseInt(j[2], 16), parseInt(j[3], 16));
        if (j = /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(f)) return g(parseInt(j[1] + j[1], 16), parseInt(j[2] + j[2], 16), parseInt(j[3] + j[3], 16));
        f = a.trim(f).toLowerCase();
        if (f == "transparent") return g(255, 255, 255, 0);
        else {
            j = e[f] || [0, 0, 0];
            return g(j[0], j[1], j[2])
        }
    };
    var e = {
        aqua: [0, 255, 255],
        azure: [240, 255, 255],
        beige: [245,
            245, 220
        ],
        black: [0, 0, 0],
        blue: [0, 0, 255],
        brown: [165, 42, 42],
        cyan: [0, 255, 255],
        darkblue: [0, 0, 139],
        darkcyan: [0, 139, 139],
        darkgrey: [169, 169, 169],
        darkgreen: [0, 100, 0],
        darkkhaki: [189, 183, 107],
        darkmagenta: [139, 0, 139],
        darkolivegreen: [85, 107, 47],
        darkorange: [255, 140, 0],
        darkorchid: [153, 50, 204],
        darkred: [139, 0, 0],
        darksalmon: [233, 150, 122],
        darkviolet: [148, 0, 211],
        fuchsia: [255, 0, 255],
        gold: [255, 215, 0],
        green: [0, 128, 0],
        indigo: [75, 0, 130],
        khaki: [240, 230, 140],
        lightblue: [173, 216, 230],
        lightcyan: [224, 255, 255],
        lightgreen: [144, 238,
            144
        ],
        lightgrey: [211, 211, 211],
        lightpink: [255, 182, 193],
        lightyellow: [255, 255, 224],
        lime: [0, 255, 0],
        magenta: [255, 0, 255],
        maroon: [128, 0, 0],
        navy: [0, 0, 128],
        olive: [128, 128, 0],
        orange: [255, 165, 0],
        pink: [255, 192, 203],
        purple: [128, 0, 128],
        violet: [128, 0, 128],
        red: [255, 0, 0],
        silver: [192, 192, 192],
        white: [255, 255, 255],
        yellow: [255, 255, 0]
    }
})(jQuery);
(function (a) {
    function e(j, g, c, b) {
        function l(S, da) {
            da = [mb].concat(da);
            for (var Z = 0; Z < S.length; ++Z) S[Z].apply(this, da)
        }

        function o(S) {
            for (var da = [], Z = 0; Z < S.length; ++Z) {
                var ea = a.extend(true, {}, W.series);
                if (S[Z].data != null) {
                    ea.data = S[Z].data;
                    delete S[Z].data;
                    a.extend(true, ea, S[Z]);
                    S[Z].data = ea.data
                } else ea.data = S[Z];
                da.push(ea)
            }
            ga = da;
            da = ga.length;
            Z = [];
            ea = [];
            for (S = 0; S < ga.length; ++S) {
                var ca = ga[S].color;
                if (ca != null) {
                    --da;
                    typeof ca == "number" ? ea.push(ca) : Z.push(a.color.parse(ga[S].color))
                }
            }
            for (S = 0; S < ea.length; ++S) da =
                Math.max(da, ea[S] + 1);
            Z = [];
            for (S = ea = 0; Z.length < da;) {
                ca = W.colors.length == S ? a.color.make(100, 100, 100) : a.color.parse(W.colors[S]);
                ca.scale("rgb", 1 + (ea % 2 == 1 ? -1 : 1) * Math.ceil(ea / 2) * 0.2);
                Z.push(ca);
                ++S;
                if (S >= W.colors.length) {
                    S = 0;
                    ++ea
                }
            }
            for (S = da = 0; S < ga.length; ++S) {
                ea = ga[S];
                if (ea.color == null) {
                    ea.color = Z[da].toString();
                    ++da
                } else if (typeof ea.color == "number") ea.color = Z[ea.color].toString();
                if (ea.lines.show == null) {
                    var ma;
                    ca = true;
                    for (ma in ea)
                        if (ea[ma] && ea[ma].show) {
                            ca = false;
                            break
                        }
                    if (ca) ea.lines.show = true
                }
                ea.xaxis =
                    v(Va, n(ea, "x"));
                ea.yaxis = v(gb, n(ea, "y"))
            }
            x()
        }

        function n(S, da) {
            var Z = S[da + "axis"];
            if (typeof Z == "object") Z = Z.n;
            if (typeof Z != "number") Z = 1;
            return Z
        }

        function q() {
            return a.grep(Va.concat(gb), function (S) {
                return S
            })
        }

        function u(S) {
            var da = {}, Z, ea;
            for (Z = 0; Z < Va.length; ++Z)
                if ((ea = Va[Z]) && ea.used) da["x" + ea.n] = ea.c2p(S.left);
            for (Z = 0; Z < gb.length; ++Z)
                if ((ea = gb[Z]) && ea.used) da["y" + ea.n] = ea.c2p(S.top);
            if (da.x1 !== undefined) da.x = da.x1;
            if (da.y1 !== undefined) da.y = da.y1;
            return da
        }

        function v(S, da) {
            S[da - 1] || (S[da - 1] = {
                n: da,
                direction: S == Va ? "x" : "y",
                options: a.extend(true, {}, S == Va ? W.xaxis : W.yaxis)
            });
            return S[da - 1]
        }

        function x() {
            function S(K, N, L) {
                if (N < K.datamin && N != -ea) K.datamin = N;
                if (L > K.datamax && L != ea) K.datamax = L
            }
            var da = Number.POSITIVE_INFINITY,
                Z = Number.NEGATIVE_INFINITY,
                ea = Number.MAX_VALUE,
                ca, ma, oa, ya, ta, Aa, va, ra, Ma, Ta;
            a.each(q(), function (K, N) {
                N.datamin = da;
                N.datamax = Z;
                N.used = false
            });
            for (ca = 0; ca < ga.length; ++ca) {
                ta = ga[ca];
                ta.datapoints = {
                    points: []
                };
                l(wb.processRawData, [ta, ta.data, ta.datapoints])
            }
            for (ca = 0; ca < ga.length; ++ca) {
                ta =
                    ga[ca];
                var y = ta.data,
                    F = ta.datapoints.format;
                if (!F) {
                    F = [];
                    F.push({
                        x: true,
                        number: true,
                        required: true
                    });
                    F.push({
                        y: true,
                        number: true,
                        required: true
                    });
                    if (ta.bars.show || ta.lines.show && ta.lines.fill) {
                        F.push({
                            y: true,
                            number: true,
                            required: false,
                            defaultValue: 0
                        });
                        if (ta.bars.horizontal) {
                            delete F[F.length - 1].y;
                            F[F.length - 1].x = true
                        }
                    }
                    ta.datapoints.format = F
                }
                if (ta.datapoints.pointsize == null) {
                    ta.datapoints.pointsize = F.length;
                    va = ta.datapoints.pointsize;
                    Aa = ta.datapoints.points;
                    insertSteps = ta.lines.show && ta.lines.steps;
                    ta.xaxis.used =
                        ta.yaxis.used = true;
                    for (ma = oa = 0; ma < y.length; ++ma, oa += va) {
                        Ta = y[ma];
                        var H = Ta == null;
                        if (!H)
                            for (ya = 0; ya < va; ++ya) {
                                ra = Ta[ya];
                                if (Ma = F[ya]) {
                                    if (Ma.number && ra != null) {
                                        ra = +ra;
                                        if (isNaN(ra)) ra = null;
                                        else if (ra == Infinity) ra = ea;
                                        else if (ra == -Infinity) ra = -ea
                                    }
                                    if (ra == null) {
                                        if (Ma.required) H = true;
                                        if (Ma.defaultValue != null) ra = Ma.defaultValue
                                    }
                                }
                                Aa[oa + ya] = ra
                            }
                        if (H)
                            for (ya = 0; ya < va; ++ya) {
                                ra = Aa[oa + ya];
                                if (ra != null) {
                                    Ma = F[ya];
                                    Ma.x && S(ta.xaxis, ra, ra);
                                    Ma.y && S(ta.yaxis, ra, ra)
                                }
                                Aa[oa + ya] = null
                            } else if (insertSteps && oa > 0 && Aa[oa - va] != null && Aa[oa -
                                va] != Aa[oa] && Aa[oa - va + 1] != Aa[oa + 1]) {
                                for (ya = 0; ya < va; ++ya) Aa[oa + va + ya] = Aa[oa + ya];
                                Aa[oa + 1] = Aa[oa - va + 1];
                                oa += va
                            }
                    }
                }
            }
            for (ca = 0; ca < ga.length; ++ca) {
                ta = ga[ca];
                l(wb.processDatapoints, [ta, ta.datapoints])
            }
            for (ca = 0; ca < ga.length; ++ca) {
                ta = ga[ca];
                Aa = ta.datapoints.points;
                va = ta.datapoints.pointsize;
                F = ta.datapoints.format;
                Ta = oa = da;
                H = y = Z;
                for (ma = 0; ma < Aa.length; ma += va)
                    if (Aa[ma] != null)
                        for (ya = 0; ya < va; ++ya) {
                            ra = Aa[ma + ya];
                            Ma = F[ya];
                            if (!(!Ma || ra == ea || ra == -ea)) {
                                if (Ma.x) {
                                    if (ra < oa) oa = ra;
                                    if (ra > y) y = ra
                                }
                                if (Ma.y) {
                                    if (ra < Ta) Ta = ra;
                                    if (ra >
                                        H) H = ra
                                }
                            }
                        }
                    if (ta.bars.show) {
                        ma = ta.bars.align == "left" ? 0 : -ta.bars.barWidth / 2;
                        if (ta.bars.horizontal) {
                            Ta += ma;
                            H += ma + ta.bars.barWidth
                        } else {
                            oa += ma;
                            y += ma + ta.bars.barWidth
                        }
                    }
                S(ta.xaxis, oa, y);
                S(ta.yaxis, Ta, H)
            }
            a.each(q(), function (K, N) {
                if (N.datamin == da) N.datamin = null;
                if (N.datamax == Z) N.datamax = null
            })
        }

        function z(S, da) {
            var Z = document.createElement("canvas");
   = Math.ceil(S);
            a.each(q(), function (ea, ca) {
                var ma = ca.direction;
                if (ca.reserveSpace) da[ma] = Math.ceil(Math.max(da[ma], (ma == "x" ? ca.labelWidth : ca.labelHeight) / 2))
            });
            Ga.left = Math.max(da.x, Ga.left);
            Ga.right = Math.max(da.x, Ga.right);
            Ga.top = Math.max(da.y, Ga.top);
            Ga.bottom = Math.max(da.y, Ga.bottom)
        }

        function E() {
            var S, da = q();
            S = W.grid.show;
            for (var Z in Ga) Ga[Z] = S ? W.grid.borderWidth : 0;
            a.each(da, function (ca, ma) {
                ma.show =
                    ma.options.show;
                if (ma.show == null) ma.show = ma.used;
                ma.reserveSpace = ma.show || ma.options.reserveSpace;
                var oa = ma.options,
                    ya = +(oa.min != null ? oa.min : ma.datamin),
                    ta = +(oa.max != null ? oa.max : ma.datamax),
                    Aa = ta - ya;
                if (Aa == 0) {
                    Aa = ta == 0 ? 1 : 0.01;
                    if (oa.min == null) ya -= Aa;
                    if (oa.max == null || oa.min != null) ta += Aa
                } else {
                    var va = oa.autoscaleMargin;
                    if (va != null) {
                        if (oa.min == null) {
                            ya -= Aa * va;
                            if (ya < 0 && ma.datamin != null && ma.datamin >= 0) ya = 0
                        }
                        if (oa.max == null) {
                            ta += Aa * va;
                            if (ta > 0 && ma.datamax != null && ma.datamax <= 0) ta = 0
                        }
                    }
                }
                ma.min = ya;
                ma.max = ta
            });
            if (S) {
                var ea = {
                    style: j.css("font-style"),
                    size: Math.round(0.8 * (+j.css("font-size").replace("px", "") || 13)),
                    variant: j.css("font-variant"),
                    weight: j.css("font-weight"),
                    family: j.css("font-family")
                };
                Z = a.grep(da, function (ca) {
                    return ca.reserveSpace
                });
                a.each(Z, function (ca, ma) {
                    M(ma);
                    var oa = ma.options.ticks,
                        ya = [];
                    if (oa == null || typeof oa == "number" && oa > 0) ya = ma.tickGenerator(ma);
                    else if (oa) ya = a.isFunction(oa) ? oa(ma) : oa;
                    var ta;
                    ma.ticks = [];
                    for (oa = 0; oa < ya.length; ++oa) {
                        var Aa = null,
                            va = ya[oa];
                        if (typeof va == "object") {
                            ta = +va[0];
                            if (va.length >
                                1) Aa = va[1]
                        } else ta = +va; if (Aa == null) Aa = ma.tickFormatter(ta, ma);
                        isNaN(ta) || ma.ticks.push({
                            v: ta,
                            label: Aa
                        })
                    }
                    ya = ma.ticks;
                    if (ma.options.autoscaleMargin && ya.length > 0) {
                        if (ma.options.min == null) ma.min = Math.min(ma.min, ya[0].v);
                        if (ma.options.max == null && ya.length > 1) ma.max = Math.max(ma.max, ya[ya.length - 1].v)
                    }
                    ma.font = a.extend({}, ea, ma.options.font);
                    ya = ma.options;
                    oa = ma.ticks || [];
                    ta = ya.labelWidth || 0;
                    Aa = ya.labelHeight || 0;
                    va = ma.font;
                    sa.save();
                    sa.font = va.style + " " + va.variant + " " + va.weight + " " + va.size + "px '" + va.family +
                        "'";
                    for (var ra = 0; ra < oa.length; ++ra) {
                        var Ma = oa[ra];
                        Ma.lines = [];
                        Ma.width = Ma.height = 0;
                        if (Ma.label) {
                            for (var Ta = Ma.label.replace(/<br ?\/?>|\r\n|\r/g, "\n").split("\n"), y = 0; y < Ta.length; ++y) {
                                var F = {
                                    text: Ta[y]
                                }, H = sa.measureText(F.text);
                                F.width = H.width;
                                F.height = H.height != null ? H.height : va.size;
                                F.height += Math.round(va.size * 0.15);
                                Ma.width = Math.max(F.width, Ma.width);
                                Ma.height += F.height;
                                Ma.lines.push(F)
                            }
                            if (ya.labelWidth == null) ta = Math.max(ta, Ma.width);
                            if (ya.labelHeight == null) Aa = Math.max(Aa, Ma.height)
                        }
                    }
                    sa.restore();
                    ma.labelWidth = Math.ceil(ta);
                    ma.labelHeight = Math.ceil(Aa)
                });
                for (S = Z.length - 1; S >= 0; --S) G(Z[S]);
                J();
                a.each(Z, function (ca, ma) {
                    if (ma.direction == "x") {
                        ma.box.left = Ga.left - ma.labelWidth / 2;
                        ma.box.width = Qa - Ga.left - Ga.right + ma.labelWidth
                    } else {
                        ma.box.top = Ga.top - ma.labelHeight / 2;
                        ma.box.height = ob - Ga.bottom - Ga.top + ma.labelHeight
                    }
                })
            }
            lb = Qa - Ga.left - Ga.right;
            pb = ob - Ga.bottom - Ga.top;
            a.each(da, function (ca, ma) {
                w(ma)
            });
            fb()
        }

        function M(S) {
            var da = S.options,
                Z = (S.max - S.min) / (typeof da.ticks == "number" && da.ticks > 0 ? da.ticks : 0.3 *
                    Math.sqrt(S.direction == "x" ? Qa : ob)),
                ea, ca, ma, oa;
            if (da.mode == "time") {
                var ya = {
                    second: 1E3,
                    minute: 6E4,
                    hour: 36E5,
                    day: 864E5,
                    month: 2592E6,
                    year: 525949.2 * 60 * 1E3
                };
                oa = [
                    [1, "second"],
                    [2, "second"],
                    [5, "second"],
                    [10, "second"],
                    [30, "second"],
                    [1, "minute"],
                    [2, "minute"],
                    [5, "minute"],
                    [10, "minute"],
                    [30, "minute"],
                    [1, "hour"],
                    [2, "hour"],
                    [4, "hour"],
                    [8, "hour"],
                    [12, "hour"],
                    [1, "day"],
                    [2, "day"],
                    [3, "day"],
                    [0.25, "month"],
                    [0.5, "month"],
                    [1, "month"],
                    [2, "month"],
                    [3, "month"],
                    [6, "month"],
                    [1, "year"]
                ];
                ea = 0;
                if (da.minTickSize != null) ea = typeof da.tickSize ==
                    "number" ? da.tickSize : da.minTickSize[0] * ya[da.minTickSize[1]];
                for (ca = 0; ca < oa.length - 1; ++ca)
                    if (Z < (oa[ca][0] * ya[oa[ca][1]] + oa[ca + 1][0] * ya[oa[ca + 1][1]]) / 2 && oa[ca][0] * ya[oa[ca][1]] >= ea) break;
                ea = oa[ca][0];
                ma = oa[ca][1];
                if (ma == "year") {
                    ca = Math.pow(10, Math.floor(Math.log(Z / ya.year) / Math.LN10));
                    oa = Z / ya.year / ca;
                    ea = oa < 1.5 ? 1 : oa < 3 ? 2 : oa < 7.5 ? 5 : 10;
                    ea *= ca
                }
                S.tickSize = da.tickSize || [ea, ma];
                ca = function (va) {
                    var ra = [],
                        Ma = va.tickSize[0],
                        Ta = va.tickSize[1],
                        y = new Date(va.min),
                        F = Ma * ya[Ta];
                    Ta == "second" && y.setUTCSeconds(f(y.getUTCSeconds(),
                        Ma));
                    Ta == "minute" && y.setUTCMinutes(f(y.getUTCMinutes(), Ma));
                    Ta == "hour" && y.setUTCHours(f(y.getUTCHours(), Ma));
                    Ta == "month" && y.setUTCMonth(f(y.getUTCMonth(), Ma));
                    Ta == "year" && y.setUTCFullYear(f(y.getUTCFullYear(), Ma));
                    y.setUTCMilliseconds(0);
                    F >= ya.minute && y.setUTCSeconds(0);
                    F >= ya.hour && y.setUTCMinutes(0);
                    F >= ya.day && y.setUTCHours(0);
                    F >= ya.day * 4 && y.setUTCDate(1);
                    F >= ya.year && y.setUTCMonth(0);
                    var H = 0,
                        K = Number.NaN,
                        N;
                    do {
                        N = K;
                        K = y.getTime();
                        ra.push(K);
                        if (Ta == "month")
                            if (Ma < 1) {
                                y.setUTCDate(1);
                                var L = y.getTime();
                                y.setUTCMonth(y.getUTCMonth() + 1);
                                var fa = y.getTime();
                                y.setTime(K + H * ya.hour + (fa - L) * Ma);
                                H = y.getUTCHours();
                                y.setUTCHours(0)
                            } else y.setUTCMonth(y.getUTCMonth() + Ma);
                            else Ta == "year" ? y.setUTCFullYear(y.getUTCFullYear() + Ma) : y.setTime(K + F)
                    } while (K < va.max && K != N);
                    return ra
                };
                ea = function (va, ra) {
                    var Ma = new Date(va);
                    if (da.timeformat != null) return a.plot.formatDate(Ma, da.timeformat, da.monthNames);
                    var Ta = ra.tickSize[0] * ya[ra.tickSize[1]],
                        y = ra.max - ra.min,
                        F = da.twelveHourClock ? " %p" : "";
                    fmt = Ta < ya.minute ? "%h:%M:%S" + F : Ta <
                        ya.day ? y < 2 * ya.day ? "%h:%M" + F : "%b %d %h:%M" + F : Ta < ya.month ? "%b %d" : Ta < ya.year ? y < ya.year ? "%b" : "%b %y" : "%y";
                    return a.plot.formatDate(Ma, fmt, da.monthNames)
                }
            } else {
                ma = da.tickDecimals;
                var ta = -Math.floor(Math.log(Z) / Math.LN10);
                if (ma != null && ta > ma) ta = ma;
                ca = Math.pow(10, -ta);
                oa = Z / ca;
                if (oa < 1.5) ea = 1;
                else if (oa < 3) {
                    ea = 2;
                    if (oa > 2.25 && (ma == null || ta + 1 <= ma)) {
                        ea = 2.5;
                        ++ta
                    }
                } else ea = oa < 7.5 ? 5 : 10;
                ea *= ca;
                if (da.minTickSize != null && ea < da.minTickSize) ea = da.minTickSize;
                S.tickDecimals = Math.max(0, ma != null ? ma : ta);
                S.tickSize = da.tickSize ||
                    ea;
                ca = function (va) {
                    var ra = [],
                        Ma = f(va.min, va.tickSize),
                        Ta = 0,
                        y = Number.NaN,
                        F;
                    do {
                        F = y;
                        y = Ma + Ta * va.tickSize;
                        ra.push(y);
                        ++Ta
                    } while (y < va.max && y != F);
                    return ra
                };
                ea = function (va, ra) {
                    return va.toFixed(ra.tickDecimals)
                }
            } if (da.alignTicksWithAxis != null) {
                var Aa = (S.direction == "x" ? Va : gb)[da.alignTicksWithAxis - 1];
                if (Aa && Aa.used && Aa != S) {
                    ca = ca(S);
                    if (ca.length > 0) {
                        if (da.min == null) S.min = Math.min(S.min, ca[0]);
                        if (da.max == null && ca.length > 1) S.max = Math.max(S.max, ca[ca.length - 1])
                    }
                    ca = function (va) {
                        var ra = [],
                            Ma, Ta;
                        for (Ta = 0; Ta < Aa.ticks.length; ++Ta) {
                            Ma =
                                (Aa.ticks[Ta].v - Aa.min) / (Aa.max - Aa.min);
                            Ma = va.min + Ma * (va.max - va.min);
                            ra.push(Ma)
                        }
                        return ra
                    };
                    if (!S.mode && da.tickDecimals == null) {
                        Z = Math.max(0, -Math.floor(Math.log(Z) / Math.LN10) + 1);
                        oa = ca(S);
                        if (!(oa.length > 1 && /\..*0$/.test((oa[1] - oa[0]).toFixed(Z)))) S.tickDecimals = Z
                    }
                }
            }
            S.tickGenerator = ca;
            S.tickFormatter = a.isFunction(da.tickFormatter) ? function (va, ra) {
                return "" + da.tickFormatter(va, ra)
            } : ea
        }

        function R() {
            sa.clearRect(0, 0, Qa, ob);
            var S = W.grid;
            if (S.show && S.backgroundColor) {
                sa.save();
                sa.translate(Ga.left, Ga.top);
                sa.fillStyle = ba(W.grid.backgroundColor, pb, 0, "rgba(255, 255, 255, 0)");
                sa.fillRect(0, 0, lb, pb);
                sa.restore()
            }
            if (S.show && !S.aboveData) {
                Y();
                na()
            }
            for (var da = 0; da < ga.length; ++da) {
                l(wb.drawSeries, [sa, ga[da]]);
                var Z = ga[da];
                Z.lines.show && qa(Z);
                Z.bars.show && La(Z);
                Z.points.show && Na(Z)
            }
            l(wb.draw, [sa]);
            if (S.show && S.aboveData) {
                Y();
                na()
            }
        }

        function O(S, da) {
            var Z, ea, ca, ma, oa = q();
            for (i = 0; i < oa.length; ++i) {
                Z = oa[i];
                if (Z.direction == da) {
                    ma = da + Z.n + "axis";
                    if (!S[ma] && Z.n == 1) ma = da + "axis";
                    if (S[ma]) {
                        ea = S[ma].from;
                        ca = S[ma].to;
                        break
                    }
                }
            }
            if (!S[ma]) {
                Z =
                    da == "x" ? Va[0] : gb[0];
                ea = S[da + "1"];
                ca = S[da + "2"]
            }
            if (ea != null && ca != null && ea > ca) {
                ma = ea;
                ea = ca;
                ca = ma
            }
            return {
                from: ea,
                to: ca,
                axis: Z
            }
        }

        function Y() {
            var S;
            sa.save();
            sa.translate(Ga.left, Ga.top);
            var da = W.grid.markings;
            if (da) {
                if (a.isFunction(da)) {
                    var Z = mb.getAxes();
                    Z.xmin = Z.xaxis.min;
                    Z.xmax = Z.xaxis.max;
                    Z.ymin = Z.yaxis.min;
                    Z.ymax = Z.yaxis.max;
                    da = da(Z)
                }
                for (S = 0; S < da.length; ++S) {
                    Z = da[S];
                    var ea = O(Z, "x"),
                        ca = O(Z, "y");
                    if (ea.from == null) ea.from = ea.axis.min;
                    if (ea.to == null) ea.to = ea.axis.max;
                    if (ca.from == null) ca.from = ca.axis.min;
                    if (ca.to == null) ca.to = ca.axis.max;
                    if (!(ea.to < ea.axis.min || ea.from > ea.axis.max || ca.to < ca.axis.min || ca.from > ca.axis.max)) {
                        ea.from = Math.max(ea.from, ea.axis.min);
                        ea.to = Math.min(ea.to, ea.axis.max);
                        ca.from = Math.max(ca.from, ca.axis.min);
                        ca.to = Math.min(ca.to, ca.axis.max);
                        if (!(ea.from == ea.to && ca.from == ca.to)) {
                            ea.from = ea.axis.p2c(ea.from);
                            ea.to = ea.axis.p2c(ea.to);
                            ca.from = ca.axis.p2c(ca.from);
                            ca.to = ca.axis.p2c(ca.to);
                            if (ea.from == ea.to || ca.from == ca.to) {
                                sa.beginPath();
                                sa.strokeStyle = Z.color || W.grid.markingsColor;
                                sa.lineWidth = Z.lineWidth || W.grid.markingsLineWidth;
                                sa.moveTo(ea.from, ca.from);
                                sa.lineTo(ea.to, ca.to);
                                sa.stroke()
                            } else {
                                sa.fillStyle = Z.color || W.grid.markingsColor;
                                sa.fillRect(ea.from, ca.to, ea.to - ea.from, ca.from - ca.to)
                            }
                        }
                    }
                }
            }
            Z = q();
            da = W.grid.borderWidth;
            for (ea = 0; ea < Z.length; ++ea) {
                ca = Z[ea];
                S = ca.box;
                var ma = ca.tickLength,
                    oa, ya, ta, Aa;
                if (!(!ca.show || ca.ticks.length == 0)) {
                    sa.strokeStyle = ca.options.tickColor || a.color.parse(ca.options.color).scale("a", 0.22).toString();
                    sa.lineWidth = 1;
                    if (ca.direction == "x") {
                        oa = 0;
                        ya =
                            ma == "full" ? ca.position == "top" ? 0 : pb : S.top - Ga.top + (ca.position == "top" ? S.height : 0)
                    } else {
                        ya = 0;
                        oa = ma == "full" ? ca.position == "left" ? 0 : lb : S.left - Ga.left + (ca.position == "left" ? S.width : 0)
                    } if (!ca.innermost) {
                        sa.beginPath();
                        ta = Aa = 0;
                        if (ca.direction == "x") ta = lb;
                        else Aa = pb; if (sa.lineWidth == 1) {
                            oa = Math.floor(oa) + 0.5;
                            ya = Math.floor(ya) + 0.5
                        }
                        sa.moveTo(oa, ya);
                        sa.lineTo(oa + ta, ya + Aa);
                        sa.stroke()
                    }
                    sa.beginPath();
                    for (S = 0; S < ca.ticks.length; ++S) {
                        var va = ca.ticks[S].v;
                        ta = Aa = 0;
                        if (!(va < ca.min || va > ca.max || ma == "full" && da > 0 && (va == ca.min ||
                            va == ca.max))) {
                            if (ca.direction == "x") {
                                oa = ca.p2c(va);
                                Aa = ma == "full" ? -pb : ma;
                                if (ca.position == "top") Aa = -Aa
                            } else {
                                ya = ca.p2c(va);
                                ta = ma == "full" ? -lb : ma;
                                if (ca.position == "left") ta = -ta
                            } if (sa.lineWidth == 1)
                                if (ca.direction == "x") oa = Math.floor(oa) + 0.5;
                                else ya = Math.floor(ya) + 0.5;
                            sa.moveTo(oa, ya);
                            sa.lineTo(oa + ta, ya + Aa)
                        }
                    }
                    sa.stroke()
                }
            }
            if (da) {
                sa.lineWidth = da;
                sa.strokeStyle = W.grid.borderColor;
                sa.strokeRect(-da / 2, -da / 2, lb + da, pb + da)
            }
            sa.restore()
        }

        function na() {
            sa.save();
            a.each(q(), function (S, da) {
                if (!(!da.show || da.ticks.length ==
                    0)) {
                    var Z = da.box,
                        ea = da.font;
                    sa.fillStyle = da.options.color;
                    sa.font = ea.style + " " + ea.variant + " " + ea.weight + " " + ea.size + "px " + ea.family;
                    sa.textAlign = "start";
                    sa.textBaseline = "middle";
                    for (ea = 0; ea < da.ticks.length; ++ea) {
                        var ca = da.ticks[ea];
                        if (!(!ca.label || ca.v < da.min || ca.v > da.max))
                            for (var ma, oa, ya = 0, ta, Aa = 0; Aa < ca.lines.length; ++Aa) {
                                ta = ca.lines[Aa];
                                if (da.direction == "x") {
                                    ma = Ga.left + da.p2c(ca.v) - ta.width / 2;
                                    oa = da.position == "bottom" ? Z.top + Z.padding : Z.top + Z.height - Z.padding - ca.height
                                } else {
                                    oa = Ga.top + da.p2c(ca.v) -
                                        ca.height / 2;
                                    ma = da.position == "left" ? Z.left + Z.width - Z.padding - ta.width : Z.left + Z.padding
                                }
                                oa += ta.height / 2 + ya;
                                ya += ta.height;
                                if (a.browser.opera) {
                                    ma = Math.floor(ma);
                                    oa = Math.ceil(oa - 2)
                                }
                                sa.fillText(ta.text, ma, oa)
                            }
                    }
                }
            });
            sa.restore()
        }

        function qa(S) {
            function da(oa, ya, ta, Aa, va) {
                var ra = oa.points;
                oa = oa.pointsize;
                var Ma = null,
                    Ta = null;
                sa.beginPath();
                for (var y = oa; y < ra.length; y += oa) {
                    var F = ra[y - oa],
                        H = ra[y - oa + 1],
                        K = ra[y],
                        N = ra[y + 1];
                    if (!(F == null || K == null)) {
                        if (H <= N && H < va.min) {
                            if (N < va.min) continue;
                            F = (va.min - H) / (N - H) * (K - F) + F;
                            H = va.min
                        } else if (N <= H && N < va.min) {
                            if (H < va.min) continue;
                            K = (va.min - H) / (N - H) * (K - F) + F;
                            N = va.min
                        }
                        if (H >= N && H > va.max) {
                            if (N > va.max) continue;
                            F = (va.max - H) / (N - H) * (K - F) + F;
                            H = va.max
                        } else if (N >= H && N > va.max) {
                            if (H > va.max) continue;
                            K = (va.max - H) / (N - H) * (K - F) + F;
                            N = va.max
                        }
                        if (F <= K && F < Aa.min) {
                            if (K < Aa.min) continue;
                            H = (Aa.min - F) / (K - F) * (N - H) + H;
                            F = Aa.min
                        } else if (K <= F && K < Aa.min) {
                            if (F < Aa.min) continue;
                            N = (Aa.min - F) / (K - F) * (N - H) + H;
                            K = Aa.min
                        }
                        if (F >= K && F > Aa.max) {
                            if (K > Aa.max) continue;
                            H = (Aa.max - F) / (K - F) * (N - H) + H;
                            F = Aa.max
                        } else if (K >= F && K > Aa.max) {
                            if (F >
                                Aa.max) continue;
                            N = (Aa.max - F) / (K - F) * (N - H) + H;
                            K = Aa.max
                        }
                        if (F != Ma || H != Ta) sa.moveTo(Aa.p2c(F) + ya, va.p2c(H) + ta);
                        Ma = K;
                        Ta = N;
                        sa.lineTo(Aa.p2c(K) + ya, va.p2c(N) + ta)
                    }
                }
                sa.stroke()
            }

            function Z(oa, ya, ta) {
                var Aa = oa.points;
                oa = oa.pointsize;
                for (var va = Math.min(Math.max(0, ta.min), ta.max), ra = 0, Ma = false, Ta = 1, y = 0, F = 0;;) {
                    if (oa > 0 && ra > Aa.length + oa) break;
                    ra += oa;
                    var H = Aa[ra - oa],
                        K = Aa[ra - oa + Ta],
                        N = Aa[ra],
                        L = Aa[ra + Ta];
                    if (Ma) {
                        if (oa > 0 && H != null && N == null) {
                            F = ra;
                            oa = -oa;
                            Ta = 2;
                            continue
                        }
                        if (oa < 0 && ra == y + oa) {
                            sa.fill();
                            Ma = false;
                            oa = -oa;
                            Ta = 1;
                            ra = y =
                                F + oa;
                            continue
                        }
                    }
                    if (!(H == null || N == null)) {
                        if (H <= N && H < ya.min) {
                            if (N < ya.min) continue;
                            K = (ya.min - H) / (N - H) * (L - K) + K;
                            H = ya.min
                        } else if (N <= H && N < ya.min) {
                            if (H < ya.min) continue;
                            L = (ya.min - H) / (N - H) * (L - K) + K;
                            N = ya.min
                        }
                        if (H >= N && H > ya.max) {
                            if (N > ya.max) continue;
                            K = (ya.max - H) / (N - H) * (L - K) + K;
                            H = ya.max
                        } else if (N >= H && N > ya.max) {
                            if (H > ya.max) continue;
                            L = (ya.max - H) / (N - H) * (L - K) + K;
                            N = ya.max
                        }
                        if (!Ma) {
                            sa.beginPath();
                            sa.moveTo(ya.p2c(H), ta.p2c(va));
                            Ma = true
                        }
                        if (K >= ta.max && L >= ta.max) {
                            sa.lineTo(ya.p2c(H), ta.p2c(ta.max));
                            sa.lineTo(ya.p2c(N), ta.p2c(ta.max))
                        } else if (K <=
                            ta.min && L <= ta.min) {
                            sa.lineTo(ya.p2c(H), ta.p2c(ta.min));
                            sa.lineTo(ya.p2c(N), ta.p2c(ta.min))
                        } else {
                            var fa = H,
                                ha = N;
                            if (K <= L && K < ta.min && L >= ta.min) {
                                H = (ta.min - K) / (L - K) * (N - H) + H;
                                K = ta.min
                            } else if (L <= K && L < ta.min && K >= ta.min) {
                                N = (ta.min - K) / (L - K) * (N - H) + H;
                                L = ta.min
                            }
                            if (K >= L && K > ta.max && L <= ta.max) {
                                H = (ta.max - K) / (L - K) * (N - H) + H;
                                K = ta.max
                            } else if (L >= K && L > ta.max && K <= ta.max) {
                                N = (ta.max - K) / (L - K) * (N - H) + H;
                                L = ta.max
                            }
                            H != fa && sa.lineTo(ya.p2c(fa), ta.p2c(K));
                            sa.lineTo(ya.p2c(H), ta.p2c(K));
                            sa.lineTo(ya.p2c(N), ta.p2c(L));
                            if (N != ha) {
                                sa.lineTo(ya.p2c(N),
                                    ta.p2c(L));
                                sa.lineTo(ya.p2c(ha), ta.p2c(L))
                            }
                        }
                    }
                }
            }
            sa.save();
            sa.translate(Ga.left, Ga.top);
            sa.lineJoin = "round";
            var ea = S.lines.lineWidth,
                ca = S.shadowSize;
            if (ea > 0 && ca > 0) {
                sa.lineWidth = ca;
                sa.strokeStyle = "rgba(0,0,0,0.1)";
                var ma = Math.PI / 18;
                da(S.datapoints, Math.sin(ma) * (ea / 2 + ca / 2), Math.cos(ma) * (ea / 2 + ca / 2), S.xaxis, S.yaxis);
                sa.lineWidth = ca / 2;
                da(S.datapoints, Math.sin(ma) * (ea / 2 + ca / 4), Math.cos(ma) * (ea / 2 + ca / 4), S.xaxis, S.yaxis)
            }
            sa.lineWidth = ea;
            sa.strokeStyle = S.color;
            if (ca = $a(S.lines, S.color, 0, pb)) {
                sa.fillStyle = ca;
                Z(S.datapoints,
                    S.xaxis, S.yaxis)
            }
            ea > 0 && da(S.datapoints, 0, 0, S.xaxis, S.yaxis);
            sa.restore()
        }

        function Na(S) {
            function da(oa, ya, ta, Aa, va, ra, Ma, Ta) {
                var y = oa.points;
                oa = oa.pointsize;
                for (var F = 0; F < y.length; F += oa) {
                    var H = y[F],
                        K = y[F + 1];
                    if (!(H == null || H < ra.min || H > ra.max || K < Ma.min || K > Ma.max)) {
                        sa.beginPath();
                        H = ra.p2c(H);
                        K = Ma.p2c(K) + Aa;
                        Ta == "circle" ? sa.arc(H, K, ya, 0, va ? Math.PI : Math.PI * 2, false) : Ta(sa, H, K, ya, va);
                        sa.closePath();
                        if (ta) {
                            sa.fillStyle = ta;
                            sa.fill()
                        }
                        sa.stroke()
                    }
                }
            }
            sa.save();
            sa.translate(Ga.left, Ga.top);
            var Z = S.points.lineWidth,
                ea = S.shadowSize,
                ca = S.points.radius,
                ma = S.points.symbol;
            if (Z > 0 && ea > 0) {
                ea = ea / 2;
                sa.lineWidth = ea;
                sa.strokeStyle = "rgba(0,0,0,0.1)";
                da(S.datapoints, ca, null, ea + ea / 2, true, S.xaxis, S.yaxis, ma);
                sa.strokeStyle = "rgba(0,0,0,0.2)";
                da(S.datapoints, ca, null, ea / 2, true, S.xaxis, S.yaxis, ma)
            }
            sa.lineWidth = Z;
            sa.strokeStyle = S.color;
            da(S.datapoints, ca, $a(S.points, S.color), 0, false, S.xaxis, S.yaxis, ma);
            sa.restore()
        }

        function pa(S, da, Z, ea, ca, ma, oa, ya, ta, Aa, va, ra) {
            var Ma, Ta, y, F;
            if (va) {
                F = Ta = y = true;
                Ma = false;
                va = Z;
                S = S;
                Z = da + ea;
                ca = da + ca;
                if (S < va) {
                    da = S;
                    S = va;
                    va = da;
                    Ma = true;
                    Ta = false
                }
            } else {
                Ma = Ta = y = true;
                F = false;
                va = S + ea;
                S = S + ca;
                ca = Z;
                Z = da;
                if (Z < ca) {
                    da = Z;
                    Z = ca;
                    ca = da;
                    F = true;
                    y = false
                }
            } if (!(S < ya.min || va > ya.max || Z < ta.min || ca > ta.max)) {
                if (va < ya.min) {
                    va = ya.min;
                    Ma = false
                }
                if (S > ya.max) {
                    S = ya.max;
                    Ta = false
                }
                if (ca < ta.min) {
                    ca = ta.min;
                    F = false
                }
                if (Z > ta.max) {
                    Z = ta.max;
                    y = false
                }
                va = ya.p2c(va);
                ca = ta.p2c(ca);
                S = ya.p2c(S);
                Z = ta.p2c(Z);
                if (oa) {
                    Aa.beginPath();
                    Aa.moveTo(va, ca);
                    Aa.lineTo(va, Z);
                    Aa.lineTo(S, Z);
                    Aa.lineTo(S, ca);
                    Aa.fillStyle = oa(ca, Z);
                    Aa.fill()
                }
                if (ra > 0 && (Ma || Ta || y || F)) {
                    Aa.beginPath();
                    Aa.moveTo(va, ca + ma);
                    Ma ? Aa.lineTo(va, Z + ma) : Aa.moveTo(va, Z + ma);
                    y ? Aa.lineTo(S, Z + ma) : Aa.moveTo(S, Z + ma);
                    Ta ? Aa.lineTo(S, ca + ma) : Aa.moveTo(S, ca + ma);
                    F ? Aa.lineTo(va, ca + ma) : Aa.moveTo(va, ca + ma);
                    Aa.stroke()
                }
            }
        }

        function La(S) {
            sa.save();
            sa.translate(Ga.left, Ga.top);
            sa.lineWidth = S.bars.lineWidth;
            sa.strokeStyle = S.color;
            var da = S.bars.align == "left" ? 0 : -S.bars.barWidth / 2;
            (function (Z, ea, ca, ma, oa, ya, ta) {
                var Aa = Z.points;
                Z = Z.pointsize;
                for (var va = 0; va < Aa.length; va += Z) Aa[va] != null && pa(Aa[va], Aa[va + 1], Aa[va + 2], ea, ca, ma, oa, ya,
                    ta, sa, S.bars.horizontal, S.bars.lineWidth)
            })(S.datapoints, da, da + S.bars.barWidth, 0, S.bars.fill ? function (Z, ea) {
                return $a(S.bars, S.color, Z, ea)
            } : null, S.xaxis, S.yaxis);
            sa.restore()
        }

        function $a(S, da, Z, ea) {
            var ca = S.fill;
            if (!ca) return null;
            if (S.fillColor) return ba(S.fillColor, Z, ea, da);
            S = a.color.parse(da);
            S.a = typeof ca == "number" ? ca : 0.4;
            S.normalize();
            return S.toString()
        }

        function fb() {
            j.find(".legend").remove();
            if (W.legend.show) {
                for (var S = [], da = false, Z = W.legend.labelFormatter, ea, ca, ma = 0; ma < ga.length; ++ma) {
                    ea =
                        ga[ma];
                    if (ca = ea.label) {
                        if (ma % W.legend.noColumns == 0) {
                            da && S.push("</tr>");
                            S.push("<tr>");
                            da = true
                        }
                        if (Z) ca = Z(ca, ea);
                        S.push('<td class="legendColorBox"><div style="border:1px solid ' + W.legend.labelBoxBorderColor + ';padding:1px"><div style="width:4px;height:0;border:5px solid ' + ea.color + ';overflow:hidden"></div></div></td><td class="legendLabel">' + ca + "</td>")
                    }
                }
                da && S.push("</tr>");
                if (S.length != 0) {
                    da = '<table style="font-size:smaller;color:' + W.grid.color + '">' + S.join("") + "</table>";
                    if (W.legend.container != null) a(W.legend.container).html(da);
                    else {
                        S = "";
                        Z = W.legend.position;
                        ea = W.legend.margin;
                        if (ea[0] == null) ea = [ea, ea];
                        if (Z.charAt(0) == "n") S += "top:" + (ea[1] + Ga.top) + "px;";
                        else if (Z.charAt(0) == "s") S += "bottom:" + (ea[1] + Ga.bottom) + "px;";
                        if (Z.charAt(1) == "e") S += "right:" + (ea[0] + Ga.right) + "px;";
                        else if (Z.charAt(1) == "w") S += "left:" + (ea[0] + Ga.left) + "px;";
                        da = a('<div class="legend">' + da.replace('style="', 'style="position:absolute;' + S + ";") + "</div>").appendTo(j);
                        if (W.legend.backgroundOpacity != 0) {
                            Z = W.legend.backgroundColor;
                            if (Z == null) {
                                Z = (Z = W.grid.backgroundColor) &&
                                    typeof Z == "string" ? a.color.parse(Z) : a.color.extract(da, "background-color");
                                Z.a = 1;
                                Z = Z.toString()
                            }
                            ea = da.children();
                            a('<div style="position:absolute;width:' + ea.width() + "px;height:" + ea.height() + "px;" + S + "background-color:" + Z + ';"> </div>').prependTo(da).css("opacity", W.legend.backgroundOpacity)
                        }
                    }
                }
            }
        }

        function jb(S) {
            W.grid.hoverable && eb("plothover", S, function (da) {
                return da.hoverable != false
            })
        }

        function Fa(S) {
            W.grid.hoverable && eb("plothover", S, function () {
                return false
            })
        }

        function db(S) {
            eb("plotclick", S, function (da) {
                return da.clickable !=
                    false
            })
        }

        function eb(S, da, Z) {
            var ea = Ka.offset(),
                ca = da.pageX - ea.left - Ga.left,
                ma = da.pageY - ea.top - Ga.top,
                oa = u({
                    left: ca,
                    top: ma
                });
            oa.pageX = da.pageX;
            oa.pageY = da.pageY;
            da = W.grid.mouseActiveRadius;
            var ya = da * da + 1,
                ta = null,
                Aa, va;
            for (Aa = ga.length - 1; Aa >= 0; --Aa)
                if (Z(ga[Aa])) {
                    var ra = ga[Aa],
                        Ma = ra.xaxis,
                        Ta = ra.yaxis,
                        y = ra.datapoints.points,
                        F = ra.datapoints.pointsize,
                        H = Ma.c2p(ca),
                        K = Ta.c2p(ma),
                        N = da / Ma.scale,
                        L = da / Ta.scale;
                    if (Ma.options.inverseTransform) N = Number.MAX_VALUE;
                    if (Ta.options.inverseTransform) L = Number.MAX_VALUE;
                    if (ra.lines.show || ra.points.show)
                        for (va = 0; va < y.length; va += F) {
                            var fa = y[va],
                                ha = y[va + 1];
                            if (fa != null)
                                if (!(fa - H > N || fa - H < -N || ha - K > L || ha - K < -L)) {
                                    fa = Math.abs(Ma.p2c(fa) - ca);
                                    ha = Math.abs(Ta.p2c(ha) - ma);
                                    ha = fa * fa + ha * ha;
                                    if (ha < ya) {
                                        ya = ha;
                                        ta = [Aa, va / F]
                                    }
                                }
                        }
                    if (ra.bars.show && !ta) {
                        Ma = ra.bars.align == "left" ? 0 : -ra.bars.barWidth / 2;
                        ra = Ma + ra.bars.barWidth;
                        for (va = 0; va < y.length; va += F) {
                            fa = y[va];
                            ha = y[va + 1];
                            Ta = y[va + 2];
                            if (fa != null)
                                if (ga[Aa].bars.horizontal ? H <= Math.max(Ta, fa) && H >= Math.min(Ta, fa) && K >= ha + Ma && K <= ha + ra : H >= fa + Ma && H <= fa +
                                    ra && K >= Math.min(Ta, ha) && K <= Math.max(Ta, ha)) ta = [Aa, va / F]
                        }
                    }
                }
            if (ta) {
                Aa = ta[0];
                va = ta[1];
                F = ga[Aa].datapoints.pointsize;
                Z = {
                    datapoint: ga[Aa].datapoints.points.slice(va * F, (va + 1) * F),
                    dataIndex: va,
                    series: ga[Aa],
                    seriesIndex: Aa
                }
            } else Z = null; if (Z) {
                Z.pageX = parseInt(Z.series.xaxis.p2c(Z.datapoint[0]) + ea.left + Ga.left);
                Z.pageY = parseInt(Z.series.yaxis.p2c(Z.datapoint[1]) + ea.top + Ga.top)
            }
            if (W.grid.autoHighlight) {
                for (ea = 0; ea < Ab.length; ++ea) {
                    ca = Ab[ea];
                    ca.auto == S && !(Z && ca.series == Z.series && ca.point[0] == Z.datapoint[0] && ca.point[1] ==
                        Z.datapoint[1]) && Pa(ca.series, ca.point)
                }
                Z && xb(Z.series, Z.datapoint, S)
            }
            j.trigger(S, [oa, Z])
        }

        function ab() {
            var S = W.interaction.redrawOverlayInterval;
            if (S == -1) rb();
            else Hb || (Hb = setTimeout(rb, S))
        }

        function rb() {
            Hb = null;
            Oa.save();
            Oa.clearRect(0, 0, Qa, ob);
            Oa.translate(Ga.left, Ga.top);
            var S, da;
            for (S = 0; S < Ab.length; ++S) {
                da = Ab[S];
                if (da.series.bars.show) T(da.series, da.point);
                else {
                    var Z = da.series,
                        ea = da.point;
                    da = ea[0];
                    ea = ea[1];
                    var ca = Z.xaxis,
                        ma = Z.yaxis;
                    if (!(da < ca.min || da > ca.max || ea < ma.min || ea > ma.max)) {
                        var oa = Z.points.radius +
                            Z.points.lineWidth / 2;
                        Oa.lineWidth = oa;
                        Oa.strokeStyle = a.color.parse(Z.color).scale("a", 0.5).toString();
                        oa = 1.5 * oa;
                        da = ca.p2c(da);
                        ea = ma.p2c(ea);
                        Oa.beginPath();
                        Z.points.symbol == "circle" ? Oa.arc(da, ea, oa, 0, 2 * Math.PI, false) : Z.points.symbol(Oa, da, ea, oa, false);
                        Oa.closePath();
                        Oa.stroke()
                    }
                }
            }
            Oa.restore();
            l(wb.drawOverlay, [Oa])
        }

        function xb(S, da, Z) {
            if (typeof S == "number") S = ga[S];
            if (typeof da == "number") {
                var ea = S.datapoints.pointsize;
                da = S.datapoints.points.slice(ea * da, ea * (da + 1))
            }
            ea = P(S, da);
            if (ea == -1) {
                Ab.push({
                    series: S,
                    point: da,
                    auto: Z
                });
                ab()
            } else if (!Z) Ab[ea].auto = false
        }

        function Pa(S, da) {
            if (S == null && da == null) {
                Ab = [];
                ab()
            }
            if (typeof S == "number") S = ga[S];
            if (typeof da == "number") da = S.data[da];
            var Z = P(S, da);
            if (Z != -1) {
                Ab.splice(Z, 1);
                ab()
            }
        }

        function P(S, da) {
            for (var Z = 0; Z < Ab.length; ++Z) {
                var ea = Ab[Z];
                if (ea.series == S && ea.point[0] == da[0] && ea.point[1] == da[1]) return Z
            }
            return -1
        }

        function T(S, da) {
            Oa.lineWidth = S.bars.lineWidth;
            Oa.strokeStyle = a.color.parse(S.color).scale("a", 0.5).toString();
            var Z = a.color.parse(S.color).scale("a", 0.5).toString(),
                ea = S.bars.align == "left" ? 0 : -S.bars.barWidth / 2;
            pa(da[0], da[1], da[2] || 0, ea, ea + S.bars.barWidth, 0, function () {
                return Z
            }, S.xaxis, S.yaxis, Oa, S.bars.horizontal, S.bars.lineWidth)
        }

        function ba(S, da, Z, ea) {
            if (typeof S == "string") return S;
            else {
                da = sa.createLinearGradient(0, Z, 0, da);
                Z = 0;
                for (var ca = S.colors.length; Z < ca; ++Z) {
                    var ma = S.colors[Z];
                    if (typeof ma != "string") {
                        var oa = a.color.parse(ea);
                        if (ma.brightness != null) oa = oa.scale("rgb", ma.brightness);
                        if (ma.opacity != null) oa.a *= ma.opacity;
                        ma = oa.toString()
                    }
                    da.addColorStop(Z /
                        (ca - 1), ma)
                }
                return da
            }
        }
        var ga = [],
            W = {
                colors: ["#edc240", "#afd8f8", "#cb4b4b", "#4da74d", "#9440ed"],
                legend: {
                    show: true,
                    noColumns: 1,
                    labelFormatter: null,
                    labelBoxBorderColor: "#ccc",
                    container: null,
                    position: "ne",
                    margin: 5,
                    backgroundColor: null,
                    backgroundOpacity: 0.85
                },
                xaxis: {
                    show: null,
                    position: "bottom",
                    mode: null,
                    font: null,
                    color: null,
                    tickColor: null,
                    transform: null,
                    inverseTransform: null,
                    min: null,
                    max: null,
                    autoscaleMargin: null,
                    ticks: null,
                    tickFormatter: null,
                    labelWidth: null,
                    labelHeight: null,
                    reserveSpace: null,
                    tickLength: null,
                    alignTicksWithAxis: null,
                    tickDecimals: null,
                    tickSize: null,
                    minTickSize: null,
                    monthNames: null,
                    timeformat: null,
                    twelveHourClock: false
                },
                yaxis: {
                    autoscaleMargin: 0.02,
                    position: "left"
                },
                xaxes: [],
                yaxes: [],
                series: {
                    points: {
                        show: false,
                        radius: 3,
                        lineWidth: 2,
                        fill: true,
                        fillColor: "#ffffff",
                        symbol: "circle"
                    },
                    lines: {
                        lineWidth: 2,
                        fill: false,
                        fillColor: null,
                        steps: false
                    },
                    bars: {
                        show: false,
                        lineWidth: 2,
                        barWidth: 1,
                        fill: true,
                        fillColor: null,
                        align: "left",
                        horizontal: false
                    },
                    shadowSize: 3
                },
                grid: {
                    show: true,
                    aboveData: false,
                    color: "#545454",
                    backgroundColor: null,
                    borderColor: null,
                    tickColor: null,
                    labelMargin: 5,
                    axisMargin: 8,
                    borderWidth: 2,
                    minBorderMargin: null,
                    markings: null,
                    markingsColor: "#f4f4f4",
                    markingsLineWidth: 2,
                    clickable: false,
                    hoverable: false,
                    autoHighlight: true,
                    mouseActiveRadius: 10
                },
                interaction: {
                    redrawOverlayInterval: 1E3 / 60
                },
                hooks: {}
            }, Ea = null,
            za = null,
            Ka = null,
            sa = null,
            Oa = null,
            Va = [],
            gb = [],
            Ga = {
                left: 0,
                right: 0,
                top: 0,
                bottom: 0
            }, Qa = 0,
            ob = 0,
            lb = 0,
            pb = 0,
            wb = {
                processOptions: [],
                processRawData: [],
                processDatapoints: [],
                drawSeries: [],
                draw: [],
                bindEvents: [],
                drawOverlay: [],
                shutdown: []
            }, mb = this;
        mb.setData = o;
        mb.setupGrid = E;
        mb.draw = R;
        mb.getPlaceholder = function () {
            return j
        };
        mb.getCanvas = function () {
            return Ea
        };
        mb.getPlotOffset = function () {
            return Ga
        };
        mb.width = function () {
            return lb
        };
        mb.height = function () {
            return pb
        };
        mb.offset = function () {
            var S = Ka.offset();
            S.left += Ga.left;
            S.top += Ga.top;
            return S
        };
        mb.getData = function () {
            return ga
        };
        mb.getAxes = function () {
            var S = {};
            a.each(Va.concat(gb), function (da, Z) {
                if (Z) S[Z.direction + (Z.n != 1 ? Z.n : "") + "axis"] = Z
            });
            return S
        };
        mb.getXAxes = function () {
            return Va
        };
        mb.getYAxes = function () {
            return gb
        };
        mb.c2p = u;
        mb.p2c = function (S) {
            var da = {}, Z, ea, ca;
            for (Z = 0; Z < Va.length; ++Z)
                if ((ea = Va[Z]) && ea.used) {
                    ca = "x" + ea.n;
                    if (S[ca] == null && ea.n == 1) ca = "x";
                    if (S[ca] != null) {
                        da.left = ea.p2c(S[ca]);
                        break
                    }
                }
            for (Z = 0; Z < gb.length; ++Z)
                if ((ea = gb[Z]) && ea.used) {
                    ca = "y" + ea.n;
                    if (S[ca] == null && ea.n == 1) ca = "y";
                    if (S[ca] != null) {
                        da.top = ea.p2c(S[ca]);
                        break
                    }
                }
            return da
        };
        mb.getOptions = function () {
            return W
        };
        mb.highlight = xb;
        mb.unhighlight = Pa;
        mb.triggerRedrawOverlay = ab;
        mb.pointOffset = function (S) {
            return {
                left: parseInt(Va[n(S,
                    "x") - 1].p2c(+S.x) + Ga.left),
                top: parseInt(gb[n(S, "y") - 1].p2c(+S.y) + Ga.top)
            }
        };
        mb.shutdown = function () {
            Hb && clearTimeout(Hb);
            Ka.unbind("mousemove", jb);
            Ka.unbind("mouseleave", Fa);
            Ka.unbind("click", db);
            l(wb.shutdown, [Ka])
        };
        mb.resize = function () {
            B();
            C(Ea);
            C(za)
        };
        mb.hooks = wb;
        (function () {
            for (var S = 0; S < b.length; ++S) {
                var da = b[S];
                da.init(mb);
                da.options && a.extend(true, W, da.options)
            }
        })(mb);
        (function (S) {
            a.extend(true, W, S);
            if (W.xaxis.color == null) W.xaxis.color = W.grid.color;
            if (W.yaxis.color == null) W.yaxis.color = W.grid.color;
            if (W.xaxis.tickColor == null) W.xaxis.tickColor = W.grid.tickColor;
            if (W.yaxis.tickColor == null) W.yaxis.tickColor = W.grid.tickColor;
            if (W.grid.borderColor == null) W.grid.borderColor = W.grid.color;
            if (W.grid.tickColor == null) W.grid.tickColor = a.color.parse(W.grid.color).scale("a", 0.22).toString();
            for (S = 0; S < Math.max(1, W.xaxes.length); ++S) W.xaxes[S] = a.extend(true, {}, W.xaxis, W.xaxes[S]);
            for (S = 0; S < Math.max(1, W.yaxes.length); ++S) W.yaxes[S] = a.extend(true, {}, W.yaxis, W.yaxes[S]);
            if (W.xaxis.noTicks && W.xaxis.ticks == null) W.xaxis.ticks =
                W.xaxis.noTicks;
            if (W.yaxis.noTicks && W.yaxis.ticks == null) W.yaxis.ticks = W.yaxis.noTicks;
            if (W.x2axis) {
                W.xaxes[1] = a.extend(true, {}, W.xaxis, W.x2axis);
                W.xaxes[1].position = "top"
            }
            if (W.y2axis) {
                W.yaxes[1] = a.extend(true, {}, W.yaxis, W.y2axis);
                W.yaxes[1].position = "right"
            }
            if (W.grid.coloredAreas) W.grid.markings = W.grid.coloredAreas;
            if (W.grid.coloredAreasColor) W.grid.markingsColor = W.grid.coloredAreasColor;
            W.lines && a.extend(true, W.series.lines, W.lines);
            W.points && a.extend(true, W.series.points, W.points);
            W.bars && a.extend(true,
                W.series.bars, W.bars);
            if (W.shadowSize != null) W.series.shadowSize = W.shadowSize;
            for (S = 0; S < W.xaxes.length; ++S) v(Va, S + 1).options = W.xaxes[S];
            for (S = 0; S < W.yaxes.length; ++S) v(gb, S + 1).options = W.yaxes[S];
            for (var da in wb)
                if (W.hooks[da] && W.hooks[da].length) wb[da] = wb[da].concat(W.hooks[da]);
            l(wb.processOptions, [W])
        })(c);
        (function () {
            var S;
            S = j.children("canvas.flot-base");
            var da = j.children("canvas.flot-overlay");
            if (S.length == 0 || da == 0) {
                j.html("");
                j.css({
                    padding: 0
                });
                j.css("position") == "static" && j.css("position", "relative");
                B();
                Ea = z(true, "flot-base");
                za = z(false, "flot-overlay");
                S = false
            } else {
                Ea = S.get(0);
                za = da.get(0);
                S = true
            }
            sa = Ea.getContext("2d");
            Oa = za.getContext("2d");
            Ka = a(za);
            if (S) {
                j.data("plot").shutdown();
                mb.resize();
                Oa.clearRect(0, 0, Qa, ob);
                Ka.unbind();
                j.children().not([Ea, za]).remove()
            }
            j.data("plot", mb)
        })();
        o(g);
        E();
        R();
        if (W.grid.hoverable) {
            Ka.mousemove(jb);
            Ka.mouseleave(Fa)
        }
        W.grid.clickable && Ka.click(db);
        l(wb.bindEvents, [Ka]);
        var Ab = [],
            Hb = null
    }

    function f(j, g) {
        return g * Math.floor(j / g)
    }
    a.plot = function (j, g, c) {
        return new e(a(j),
            g, c, a.plot.plugins)
    };
    a.plot.version = "0.7";
    a.plot.plugins = [];
    a.plot.formatDate = function (j, g, c) {
        var b = function (z) {
            z = "" + z;
            return z.length == 1 ? "0" + z : z
        }, l = [],
            o = false,
            n = false,
            q = j.getUTCHours(),
            u = q < 12;
        if (c == null) c = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
        if (g.search(/%p|%P/) != -1)
            if (q > 12) q -= 12;
            else if (q == 0) q = 12;
        for (var v = 0; v < g.length; ++v) {
            var x = g.charAt(v);
            if (o) {
                switch (x) {
                case "h":
                    x = "" + q;
                    break;
                case "H":
                    x = b(q);
                    break;
                case "M":
                    x = b(j.getUTCMinutes());
                    break;
                case "S":
                    x = b(j.getUTCSeconds());
                    break;
                case "d":
                    x = "" + j.getUTCDate();
                    break;
                case "m":
                    x = "" + (j.getUTCMonth() + 1);
                    break;
                case "y":
                    x = "" + j.getUTCFullYear();
                    break;
                case "b":
                    x = "" + c[j.getUTCMonth()];
                    break;
                case "p":
                    x = u ? "am" : "pm";
                    break;
                case "P":
                    x = u ? "AM" : "PM";
                    break;
                case "0":
                    x = "";
                    n = true
                }
                if (x && n) {
                    x = b(x);
                    n = false
                }
                l.push(x);
                n || (o = false)
            } else if (x == "%") o = true;
            else l.push(x)
        }
        return l.join("")
    }
})(jQuery);
(function (a) {
    a.plot.plugins.push({
        init: function (e) {
            function f() {
                if (!g.locked)
                    if (g.x != -1) {
                        g.x = -1;
                        e.triggerRedrawOverlay()
                    }
            }

            function j(c) {
                if (!g.locked)
                    if (e.getSelection && e.getSelection()) g.x = -1;
                    else {
                        var b = e.offset();
                        g.x = Math.max(0, Math.min(c.pageX - b.left, e.width()));
                        g.y = Math.max(0, Math.min(c.pageY - b.top, e.height()));
                        e.triggerRedrawOverlay()
                    }
            }
            var g = {
                x: -1,
                y: -1,
                locked: false
            };
            e.setCrosshair = function (c) {
                if (c) {
                    c = e.p2c(c);
                    g.x = Math.max(0, Math.min(c.left, e.width()));
                    g.y = Math.max(0, Math.min(c.top, e.height()))
                } else g.x = -1;
                e.triggerRedrawOverlay()
            };
            e.clearCrosshair = e.setCrosshair;
            e.lockCrosshair = function (c) {
                c && e.setCrosshair(c);
                g.locked = true
            };
            e.unlockCrosshair = function () {
                g.locked = false
            };
            e.hooks.bindEvents.push(function (c, b) {
                if (c.getOptions().crosshair.mode) {
                    b.mouseout(f);
                    b.mousemove(j)
                }
            });
            e.hooks.drawOverlay.push(function (c, b) {
                var l = c.getOptions().crosshair;
                if (l.mode) {
                    var o = c.getPlotOffset();
                    b.save();
                    b.translate(o.left, o.top);
                    if (g.x != -1) {
                        b.strokeStyle = l.color;
                        b.lineWidth = l.lineWidth;
                        b.lineJoin = "round";
                        b.beginPath();
                        if (l.mode.indexOf("x") != -1) {
                            b.moveTo(g.x, 0);
                            b.lineTo(g.x, c.height())
                        }
                        if (l.mode.indexOf("y") != -1) {
                            b.moveTo(0, g.y);
                            b.lineTo(c.width(), g.y)
                        }
                        b.stroke()
                    }
                    b.restore()
                }
            });
            e.hooks.shutdown.push(function (c, b) {
                b.unbind("mouseout", f);
                b.unbind("mousemove", j)
            })
        },
        options: {
            crosshair: {
                mode: null,
                color: "rgba(170, 0, 0, 0.80)",
                lineWidth: 1
            }
        },
        name: "crosshair",
        version: "1.0"
    })
})(jQuery);
(function (a) {
    a.plot.plugins.push({
        init: function (e) {
            function f(z) {
                if (u.active) {
                    l(z);
                    e.getPlaceholder().trigger("plotselecting", [g()])
                }
            }

            function j(z) {
                if (z.which == 1) {
                    document.body.focus();
                    if (document.onselectstart !== undefined && v.onselectstart == null) {
                        v.onselectstart = document.onselectstart;
                        document.onselectstart = function () {
                            return false
                        }
                    }
                    if (document.ondrag !== undefined && v.ondrag == null) {
                        v.ondrag = document.ondrag;
                        document.ondrag = function () {
                            return false
                        }
                    }
                    b(u.first, z);
                    u.active = true;
                    x = function (B) {
                        x = null;
                        if (document.onselectstart !==
                            undefined) document.onselectstart = v.onselectstart;
                        if (document.ondrag !== undefined) document.ondrag = v.ondrag;
                        u.active = false;
                        l(B);
                        if (q()) c();
                        else {
                            e.getPlaceholder().trigger("plotunselected", []);
                            e.getPlaceholder().trigger("plotselecting", [null])
                        }
                    };
                    a(document).one("mouseup", x)
                }
            }

            function g() {
                if (!q()) return null;
                var z = {}, B = u.first,
                    C = u.second;
                a.each(e.getAxes(), function (w, G) {
                    if (G.used) {
                        var J = G.c2p(B[G.direction]),
                            E = G.c2p(C[G.direction]);
                        z[w] = {
                            from: Math.min(J, E),
                            to: Math.max(J, E)
                        }
                    }
                });
                return z
            }

            function c() {
                var z =
                    g();
                e.getPlaceholder().trigger("plotselected", [z]);
                z.xaxis && z.yaxis && e.getPlaceholder().trigger("selected", [{
                    x1: z.xaxis.from,
                    y1: z.yaxis.from,
                    x2: z.xaxis.to,
                    y2: z.yaxis.to
                }])
            }

            function b(z, B) {
                var C = e.getOptions(),
                    w = e.getPlaceholder().offset(),
                    G = e.getPlotOffset(),
                    J = B.pageX - w.left - G.left,
                    E = e.width();
                z.x = J < 0 ? 0 : J > E ? E : J;
                w = B.pageY - w.top - G.top;
                G = e.height();
                z.y = w < 0 ? 0 : w > G ? G : w;
                if (C.selection.mode == "y") z.x = z == u.first ? 0 : e.width();
                if (C.selection.mode == "x") z.y = z == u.first ? 0 : e.height()
            }

            function l(z) {
                if (z.pageX != null) {
                    b(u.second,
                        z);
                    if (q()) {
                        u.show = true;
                        e.triggerRedrawOverlay()
                    } else o(true)
                }
            }

            function o(z) {
                if (u.show) {
                    u.show = false;
                    e.triggerRedrawOverlay();
                    z || e.getPlaceholder().trigger("plotunselected", [])
                }
            }

            function n(z, B) {
                var C, w, G, J, E = e.getAxes(),
                    M;
                for (M in E) {
                    C = E[M];
                    if (C.direction == B) {
                        J = B + C.n + "axis";
                        if (!z[J] && C.n == 1) J = B + "axis";
                        if (z[J]) {
                            w = z[J].from;
                            G = z[J].to;
                            break
                        }
                    }
                }
                if (!z[J]) {
                    C = B == "x" ? e.getXAxes()[0] : e.getYAxes()[0];
                    w = z[B + "1"];
                    G = z[B + "2"]
                }
                if (w != null && G != null && w > G) {
                    J = w;
                    w = G;
                    G = J
                }
                return {
                    from: w,
                    to: G,
                    axis: C
                }
            }

            function q() {
                return Math.abs(u.second.x -
                    u.first.x) >= 5 && Math.abs(u.second.y - u.first.y) >= 5
            }
            var u = {
                first: {
                    x: -1,
                    y: -1
                },
                second: {
                    x: -1,
                    y: -1
                },
                show: false,
                active: false
            }, v = {}, x = null;
            e.clearSelection = o;
            e.setSelection = function (z, B) {
                var C, w = e.getOptions();
                if (w.selection.mode == "y") {
                    u.first.x = 0;
                    u.second.x = e.width()
                } else {
                    C = n(z, "x");
                    u.first.x = C.axis.p2c(C.from);
                    u.second.x = C.axis.p2c(C.to)
                } if (w.selection.mode == "x") {
                    u.first.y = 0;
                    u.second.y = e.height()
                } else {
                    C = n(z, "y");
                    u.first.y = C.axis.p2c(C.from);
                    u.second.y = C.axis.p2c(C.to)
                }
                u.show = true;
                e.triggerRedrawOverlay();
                !B && q() && c()
            };
            e.getSelection = g;
            e.hooks.bindEvents.push(function (z, B) {
                if (z.getOptions().selection.mode != null) {
                    B.mousemove(f);
                    B.mousedown(j)
                }
            });
            e.hooks.drawOverlay.push(function (z, B) {
                if (u.show && q()) {
                    var C = z.getPlotOffset(),
                        w = z.getOptions();
                    B.save();
                    B.translate(C.left, C.top);
                    C = a.color.parse(w.selection.color);
                    B.strokeStyle = C.scale("a", 0.8).toString();
                    B.lineWidth = 1;
                    B.lineJoin = "round";
                    B.fillStyle = C.scale("a", 0.4).toString();
                    C = Math.min(u.first.x, u.second.x);
                    w = Math.min(u.first.y, u.second.y);
                    var G = Math.abs(u.second.x -
                        u.first.x),
                        J = Math.abs(u.second.y - u.first.y);
                    B.fillRect(C, w, G, J);
                    B.strokeRect(C, w, G, J);
                    B.restore()
                }
            });
            e.hooks.shutdown.push(function (z, B) {
                B.unbind("mousemove", f);
                B.unbind("mousedown", j);
                x && a(document).unbind("mouseup", x)
            })
        },
        options: {
            selection: {
                mode: null,
                color: "#e8cfac"
            }
        },
        name: "selection",
        version: "1.1"
    })
})(jQuery);
(function (a, e, f) {
    function j() {
        b = e[l](function () {
            g.each(function () {
                var u = a(this),
                    v = u.width(),
                    x = u.height(),
                    z = a.data(this, n);
                if (v !== z.w || x !== z.h) u.trigger(o, [z.w = v, z.h = x])
            });
            j()
        }, c[q])
    }
    var g = a([]),
        c = a.resize = a.extend(a.resize, {}),
        b, l = "setTimeout",
        o = "resize",
        n = o + "-special-event",
        q = "delay";
    c[q] = 250;
    c.throttleWindow = true;
    a.event.special[o] = {
        setup: function () {
            if (!c.throttleWindow && this[l]) return false;
            var u = a(this);
            g = g.add(u);
            a.data(this, n, {
                w: u.width(),
                h: u.height()
            });
            g.length === 1 && j()
        },
        teardown: function () {
            if (!c.throttleWindow &&
                this[l]) return false;
            var u = a(this);
            g = g.not(u);
            u.removeData(n);
            g.length || clearTimeout(b)
        },
        add: function (u) {
            function v(z, B, C) {
                var w = a(this),
                    G = a.data(this, n);
                G.w = B !== f ? B : w.width();
                G.h = C !== f ? C : w.height();
                x.apply(this, arguments)
            }
            if (!c.throttleWindow && this[l]) return false;
            var x;
            if (a.isFunction(u)) {
                x = u;
                return v
            } else {
                x = u.handler;
                u.handler = v
            }
        }
    }
})(jQuery, this);
(function (a) {
    a.plot.plugins.push({
        init: function (e) {
            function f() {
                var j = e.getPlaceholder();
                if (!(j.width() == 0 || j.height() == 0)) {
                    e.resize();
                    e.setupGrid();
                    e.draw()
                }
            }
            e.hooks.bindEvents.push(function (j) {
                j.getPlaceholder().resize(f)
            });
            e.hooks.shutdown.push(function (j) {
                j.getPlaceholder().unbind("resize", f)
            })
        },
        options: {},
        name: "resize",
        version: "1.0"
    })
})(jQuery);
(function (a) {
    function e(w, G, J) {
        var E = this;
        E.id = J;
        E.options = G;
        E.status = {
            animated: false,
            rendered: false,
            disabled: false,
            focused: false
        };
        E.elements = {
            target: w.addClass(E.options.style.classes.target),
            tooltip: null,
            wrapper: null,
            content: null,
            contentWrapper: null,
            title: null,
            button: null,
            tip: null,
            bgiframe: null
        };
        E.cache = {
            mouse: {},
            position: {},
            toggle: 0
        };
        E.timers = {};
        a.extend(E, E.options.api, {
            show: function (M) {
                function R() {
                    E.options.position.type !== "static" && E.focus();
                    E.onShow.call(E, M);
                    a.browser.msie && E.elements.tooltip.get(0).style.removeAttribute("filter")
                }
                var O;
                if (!E.status.rendered) return a.fn.qtip.log.error.call(E, 2, a.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "show");
                if (E.elements.tooltip.css("display") !== "none") return E;
                E.elements.tooltip.stop(true, false);
                if (E.beforeShow.call(E, M) === false) return E;
                E.cache.toggle = 1;
                E.options.position.type !== "static" && E.updatePosition(M, E.options.show.effect.length > 0);
                if (typeof E.options.show.solo == "object") O = a(E.options.show.solo);
                else if (E.options.show.solo === true) O = a("div.qtip").not(E.elements.tooltip);
                O && O.each(function () {
                    a(this).qtip("api").status.rendered ===
                        true && a(this).qtip("api").hide()
                });
                if (typeof E.options.show.effect.type == "function") {
                    E.options.show.effect.type.call(E.elements.tooltip, E.options.show.effect.length);
                    E.elements.tooltip.queue(function () {
                        R();
                        a(this).dequeue()
                    })
                } else {
                    switch (E.options.show.effect.type.toLowerCase()) {
                    case "fade":
                        E.elements.tooltip.fadeIn(E.options.show.effect.length, R);
                        break;
                    case "slide":
                        E.elements.tooltip.slideDown(E.options.show.effect.length, function () {
                            R();
                            E.options.position.type !== "static" && E.updatePosition(M, true)
                        });
                        break;
                    case "grow":
                        E.elements.tooltip.show(E.options.show.effect.length, R);
                        break;
                    default:
                        E.elements.tooltip.show(null, R)
                    }
                    E.elements.tooltip.addClass(E.options.style.classes.active)
                }
                return a.fn.qtip.log.error.call(E, 1, a.fn.qtip.constants.EVENT_SHOWN, "show")
            },
            hide: function (M) {
                function R() {
                    E.onHide.call(E, M)
                }
                if (E.status.rendered) {
                    if (E.elements.tooltip.css("display") === "none") return E
                } else return a.fn.qtip.log.error.call(E, 2, a.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "hide");
                clearTimeout(E.timers.show);
                E.elements.tooltip.stop(true, false);
                if (E.beforeHide.call(E, M) === false) return E;
                E.cache.toggle = 0;
                if (typeof E.options.hide.effect.type == "function") {
                    E.options.hide.effect.type.call(E.elements.tooltip, E.options.hide.effect.length);
                    E.elements.tooltip.queue(function () {
                        R();
                        a(this).dequeue()
                    })
                } else {
                    switch (E.options.hide.effect.type.toLowerCase()) {
                    case "fade":
                        E.elements.tooltip.fadeOut(E.options.hide.effect.length, R);
                        break;
                    case "slide":
                        E.elements.tooltip.slideUp(E.options.hide.effect.length, R);
                        break;
                    case "grow":
                        E.elements.tooltip.hide(E.options.hide.effect.length,
                            R);
                        break;
                    default:
                        E.elements.tooltip.hide(null, R)
                    }
                    E.elements.tooltip.removeClass(E.options.style.classes.active)
                }
                return a.fn.qtip.log.error.call(E, 1, a.fn.qtip.constants.EVENT_HIDDEN, "hide")
            },
            updatePosition: function (M, R) {
                var O, Y, na, qa, Na, pa, La;
                if (E.status.rendered) {
                    if (E.options.position.type == "static") return a.fn.qtip.log.error.call(E, 1, a.fn.qtip.constants.CANNOT_POSITION_STATIC, "updatePosition")
                } else return a.fn.qtip.log.error.call(E, 2, a.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "updatePosition");
                Y = {
                    position: {
                        left: 0,
                        top: 0
                    },
                    dimensions: {
                        height: 0,
                        width: 0
                    },
                    corner: E.options.position.corner.target
                };
                na = {
                    position: E.getPosition(),
                    dimensions: E.getDimensions(),
                    corner: E.options.position.corner.tooltip
                };
                if (E.options.position.target !== "mouse") {
                    if (E.options.position.target.get(0).nodeName.toLowerCase() == "area") {
                        qa = E.options.position.target.attr("coords").split(",");
                        for (O = 0; O < qa.length; O++) qa[O] = parseInt(qa[O]);
                        O = E.options.position.target.parent("map").attr("name");
                        Na = a('img[usemap="#' + O + '"]:first').offset();
                        Y.position = {
                            left: Math.floor(Na.left +
                                qa[0]),
                            top: Math.floor(Na.top + qa[1])
                        };
                        switch (E.options.position.target.attr("shape").toLowerCase()) {
                        case "rect":
                            Y.dimensions = {
                                width: Math.ceil(Math.abs(qa[2] - qa[0])),
                                height: Math.ceil(Math.abs(qa[3] - qa[1]))
                            };
                            break;
                        case "circle":
                            Y.dimensions = {
                                width: qa[2] + 1,
                                height: qa[2] + 1
                            };
                            break;
                        case "poly":
                            Y.dimensions = {
                                width: qa[0],
                                height: qa[1]
                            };
                            for (O = 0; O < qa.length; O++)
                                if (O % 2 == 0) {
                                    if (qa[O] > Y.dimensions.width) Y.dimensions.width = qa[O];
                                    if (qa[O] < qa[0]) Y.position.left = Math.floor(Na.left + qa[O])
                                } else {
                                    if (qa[O] > Y.dimensions.height) Y.dimensions.height =
                                        qa[O];
                                    if (qa[O] < qa[1]) Y.position.top = Math.floor(Na.top + qa[O])
                                }
                            Y.dimensions.width -= Y.position.left - Na.left;
                            Y.dimensions.height -= Y.position.top - Na.top;
                            break;
                        default:
                            return a.fn.qtip.log.error.call(E, 4, a.fn.qtip.constants.INVALID_AREA_SHAPE, "updatePosition")
                        }
                        Y.dimensions.width -= 2;
                        Y.dimensions.height -= 2
                    } else if (E.options.position.target.add(document.body).length === 1) {
                        Y.position = {
                            left: a(document).scrollLeft(),
                            top: a(document).scrollTop()
                        };
                        Y.dimensions = {
                            height: a(window).height(),
                            width: a(window).width()
                        }
                    } else {
                        Y.position =
                            typeof E.options.position.target.attr("qtip") !== "undefined" ? E.options.position.target.qtip("api").cache.position : E.options.position.target.offset();
                        Y.dimensions = {
                            height: E.options.position.target.outerHeight(),
                            width: E.options.position.target.outerWidth()
                        }
                    }
                    pa = a.extend({}, Y.position);
                    if (Y.corner.search(/right/i) !== -1) pa.left += Y.dimensions.width;
                    if (Y.corner.search(/bottom/i) !== -1) pa.top += Y.dimensions.height;
                    if (Y.corner.search(/((top|bottom)Middle)|center/) !== -1) pa.left += Y.dimensions.width / 2;
                    if (Y.corner.search(/((left|right)Middle)|center/) !== -1) pa.top += Y.dimensions.height / 2
                } else {
                    Y.position = pa = {
                        left: E.cache.mouse.x,
                        top: E.cache.mouse.y
                    };
                    Y.dimensions = {
                        height: 1,
                        width: 1
                    }
                } if (na.corner.search(/right/i) !== -1) pa.left -= na.dimensions.width;
                if (na.corner.search(/bottom/i) !== -1) pa.top -= na.dimensions.height;
                if (na.corner.search(/((top|bottom)Middle)|center/) !== -1) pa.left -= na.dimensions.width / 2;
                if (na.corner.search(/((left|right)Middle)|center/) !== -1) pa.top -= na.dimensions.height / 2;
                qa = a.browser.msie ? 1 : 0;
                a.browser.msie && parseInt(a.browser.version.charAt(0));
                if (E.options.style.border.radius > 0) {
                    if (na.corner.search(/Left/) !== -1) pa.left -= E.options.style.border.radius;
                    else if (na.corner.search(/Right/) !== -1) pa.left += E.options.style.border.radius;
                    if (na.corner.search(/Top/) !== -1) pa.top -= E.options.style.border.radius;
                    else if (na.corner.search(/Bottom/) !== -1) pa.top += E.options.style.border.radius
                }
                if (qa) {
                    if (na.corner.search(/top/) !== -1) pa.top -= qa;
                    else if (na.corner.search(/bottom/) !== -1) pa.top += qa;
                    if (na.corner.search(/left/) !== -1) pa.left -= qa;
                    else if (na.corner.search(/right/) !== -1) pa.left += qa;
                    if (na.corner.search(/leftMiddle|rightMiddle/) !== -1) pa.top -= 1
                }
                if (E.options.position.adjust.screen === true) pa = q.call(E, pa, Y, na);
                if (E.options.position.target === "mouse" && E.options.position.adjust.mouse === true) {
                    Y = E.options.position.adjust.screen === true && E.elements.tip ? E.elements.tip.attr("rel") : E.options.position.corner.tooltip;
                    pa.left += Y.search(/right/i) !== -1 ? -6 : 6;
                    pa.top += Y.search(/bottom/i) !== -1 ? -6 : 6
                }!E.elements.bgiframe && a.browser.msie && parseInt(a.browser.version.charAt(0)) == 6 && a("select, object").each(function () {
                    La =
                        a(this).offset();
                    La.bottom = La.top + a(this).height();
                    La.right = La.left + a(this).width();
                    pa.top + na.dimensions.height >= La.top && pa.left + na.dimensions.width >= La.left && C.call(E)
                });
                pa.left += E.options.position.adjust.x;
                pa.top += E.options.position.adjust.y;
                Y = E.getPosition();
                if (pa.left != Y.left || pa.top != Y.top) {
                    Y = E.beforePositionUpdate.call(E, M);
                    if (Y === false) return E;
                    E.cache.position = pa;
                    if (R === true) {
                        E.status.animated = true;
                        E.elements.tooltip.animate(pa, 200, "swing", function () {
                            E.status.animated = false
                        })
                    } else E.elements.tooltip.css(pa);
                    E.onPositionUpdate.call(E, M);
                    typeof M !== "undefined" && M.type && M.type !== "mousemove" && a.fn.qtip.log.error.call(E, 1, a.fn.qtip.constants.EVENT_POSITION_UPDATED, "updatePosition")
                }
                return E
            },
            updateWidth: function (M) {
                var R;
                if (E.status.rendered) {
                    if (M && typeof M !== "number") return a.fn.qtip.log.error.call(E, 2, "newWidth must be of type number", "updateWidth")
                } else return a.fn.qtip.log.error.call(E, 2, a.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "updateWidth");
                R = E.elements.contentWrapper.siblings().add(E.elements.tip).add(E.elements.button);
                if (!M)
                    if (typeof E.options.style.width.value == "number") M = E.options.style.width.value;
                    else {
                        E.elements.tooltip.css({
                            width: "auto"
                        });
                        R.hide();
                        a.browser.msie && E.elements.wrapper.add(E.elements.contentWrapper.children()).css({
                            zoom: "normal"
                        });
                        M = E.getDimensions().width + 1;
                        if (!E.options.style.width.value) {
                            if (M > E.options.style.width.max) M = E.options.style.width.max;
                            if (M < E.options.style.width.min) M = E.options.style.width.min
                        }
                    }
                if (M % 2 !== 0) M -= 1;
                E.elements.tooltip.width(M);
                R.show();
                E.options.style.border.radius && E.elements.tooltip.find(".qtip-betweenCorners").each(function () {
                    a(this).width(M -
                        E.options.style.border.radius * 2)
                });
                if (a.browser.msie) {
                    E.elements.wrapper.add(E.elements.contentWrapper.children()).css({
                        zoom: "1"
                    });
                    E.elements.wrapper.width(M);
                    E.elements.bgiframe && E.elements.bgiframe.width(M).height(E.getDimensions.height)
                }
                return a.fn.qtip.log.error.call(E, 1, a.fn.qtip.constants.EVENT_WIDTH_UPDATED, "updateWidth")
            },
            updateStyle: function (M) {
                var R, O, Y, na;
                if (E.status.rendered) {
                    if (typeof M !== "string" || !a.fn.qtip.styles[M]) return a.fn.qtip.log.error.call(E, 2, a.fn.qtip.constants.STYLE_NOT_DEFINED,
                        "updateStyle")
                } else return a.fn.qtip.log.error.call(E, 2, a.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "updateStyle");
                E.options.style = x.call(E, a.fn.qtip.styles[M], E.options.user.style);
                E.elements.content.css(u(E.options.style));
                E.options.content.title.text !== false && E.elements.title.css(u(E.options.style.title, true));
                E.elements.contentWrapper.css({
                    borderColor: E.options.style.border.color
                });
                if (E.options.style.tip.corner !== false)
                    if (a("<canvas>").get(0).getContext) {
                        M = E.elements.tooltip.find(".qtip-tip canvas:first");
                        O = M.get(0).getContext("2d");
                        O.clearRect(0, 0, 300, 300);
                        Y = M.parent("div[rel]:first").attr("rel");
                        na = z(Y, E.options.style.tip.size.width, E.options.style.tip.size.height);
                        b.call(E, M, na, E.options.style.tip.color || E.options.style.border.color)
                    } else if (a.browser.msie) {
                    M = E.elements.tooltip.find('.qtip-tip [nodeName="shape"]');
                    M.attr("fillcolor", E.options.style.tip.color || E.options.style.border.color)
                }
                if (E.options.style.border.radius > 0) {
                    E.elements.tooltip.find(".qtip-betweenCorners").css({
                        backgroundColor: E.options.style.border.color
                    });
                    if (a("<canvas>").get(0).getContext) {
                        R = B(E.options.style.border.radius);
                        E.elements.tooltip.find(".qtip-wrapper canvas").each(function () {
                            O = a(this).get(0).getContext("2d");
                            O.clearRect(0, 0, 300, 300);
                            Y = a(this).parent("div[rel]:first").attr("rel");
                            g.call(E, a(this), R[Y], E.options.style.border.radius, E.options.style.border.color)
                        })
                    } else a.browser.msie && E.elements.tooltip.find('.qtip-wrapper [nodeName="arc"]').each(function () {
                        a(this).attr("fillcolor", E.options.style.border.color)
                    })
                }
                return a.fn.qtip.log.error.call(E,
                    1, a.fn.qtip.constants.EVENT_STYLE_UPDATED, "updateStyle")
            },
            updateContent: function (M, R) {
                function O() {
                    E.updateWidth();
                    if (R !== false) {
                        E.options.position.type !== "static" && E.updatePosition(E.elements.tooltip.is(":visible"), true);
                        E.options.style.tip.corner !== false && l.call(E)
                    }
                }
                var Y, na, qa;
                if (E.status.rendered) {
                    if (!M) return a.fn.qtip.log.error.call(E, 2, a.fn.qtip.constants.NO_CONTENT_PROVIDED, "updateContent")
                } else return a.fn.qtip.log.error.call(E, 2, a.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "updateContent");
                Y = E.beforeContentUpdate.call(E, M);
                if (typeof Y == "string") M = Y;
                else if (Y === false) return;
                a.browser.msie && E.elements.contentWrapper.children().css({
                    zoom: "normal"
                });
                M.jquery && M.length > 0 ? M.clone(true).appendTo(E.elements.content).show() : E.elements.content.html(M);
                na = E.elements.content.find("img[complete=false]");
                if (na.length > 0) {
                    qa = 0;
                    na.each(function () {
                        a('<img src="' + a(this).attr("src") + '" />').load(function () {
                            ++qa == na.length && O()
                        })
                    })
                } else O();
                E.onContentUpdate.call(E);
                return a.fn.qtip.log.error.call(E, 1,
                    a.fn.qtip.constants.EVENT_CONTENT_UPDATED, "loadContent")
            },
            loadContent: function (M, R, O) {
                function Y(na) {
                    E.onContentLoad.call(E);
                    a.fn.qtip.log.error.call(E, 1, a.fn.qtip.constants.EVENT_CONTENT_LOADED, "loadContent");
                    E.updateContent(na)
                }
                if (!E.status.rendered) return a.fn.qtip.log.error.call(E, 2, a.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "loadContent");
                if (E.beforeContentLoad.call(E) === false) return E;
                O == "post" ? a.post(M, R, Y) : a.get(M, R, Y);
                return E
            },
            updateTitle: function (M) {
                if (E.status.rendered) {
                    if (!M) return a.fn.qtip.log.error.call(E,
                        2, a.fn.qtip.constants.NO_CONTENT_PROVIDED, "updateTitle")
                } else return a.fn.qtip.log.error.call(E, 2, a.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "updateTitle");
                returned = E.beforeTitleUpdate.call(E);
                if (returned === false) return E;
                if (E.elements.button) E.elements.button = E.elements.button.clone(true);
                E.elements.title.html(M);
                E.elements.button && E.elements.title.prepend(E.elements.button);
                E.onTitleUpdate.call(E);
                return a.fn.qtip.log.error.call(E, 1, a.fn.qtip.constants.EVENT_TITLE_UPDATED, "updateTitle")
            },
            focus: function (M) {
                var R,
                    O, Y;
                if (E.status.rendered) {
                    if (E.options.position.type == "static") return a.fn.qtip.log.error.call(E, 1, a.fn.qtip.constants.CANNOT_FOCUS_STATIC, "focus")
                } else return a.fn.qtip.log.error.call(E, 2, a.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "focus");
                R = parseInt(E.elements.tooltip.css("z-index"));
                O = 6E6 + a("div.qtip[qtip]").length - 1;
                if (!E.status.focused && R !== O) {
                    R = E.beforeFocus.call(E, M);
                    if (R === false) return E;
                    a("div.qtip[qtip]").not(E.elements.tooltip).each(function () {
                        if (a(this).qtip("api").status.rendered === true) {
                            Y =
                                parseInt(a(this).css("z-index"));
                            typeof Y == "number" && Y > -1 && a(this).css({
                                zIndex: parseInt(a(this).css("z-index")) - 1
                            });
                            a(this).qtip("api").status.focused = false
                        }
                    });
                    E.elements.tooltip.css({
                        zIndex: O
                    });
                    E.status.focused = true;
                    E.onFocus.call(E, M);
                    a.fn.qtip.log.error.call(E, 1, a.fn.qtip.constants.EVENT_FOCUSED, "focus")
                }
                return E
            },
            disable: function (M) {
                if (!E.status.rendered) return a.fn.qtip.log.error.call(E, 2, a.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "disable");
                if (M)
                    if (E.status.disabled) a.fn.qtip.log.error.call(E,
                        1, a.fn.qtip.constants.TOOLTIP_ALREADY_DISABLED, "disable");
                    else {
                        E.status.disabled = true;
                        a.fn.qtip.log.error.call(E, 1, a.fn.qtip.constants.EVENT_DISABLED, "disable")
                    } else if (E.status.disabled) {
                    E.status.disabled = false;
                    a.fn.qtip.log.error.call(E, 1, a.fn.qtip.constants.EVENT_ENABLED, "disable")
                } else a.fn.qtip.log.error.call(E, 1, a.fn.qtip.constants.TOOLTIP_ALREADY_ENABLED, "disable");
                return E
            },
            destroy: function () {
                var M, R;
                if (E.beforeDestroy.call(E) === false) return E;
                if (E.status.rendered) {
                    E.options.show.when.target.unbind("mousemove.qtip",
                        E.updatePosition);
                    E.options.show.when.target.unbind("mouseout.qtip", E.hide);
                    E.options.show.when.target.unbind(E.options.show.when.event + ".qtip");
                    E.options.hide.when.target.unbind(E.options.hide.when.event + ".qtip");
                    E.elements.tooltip.unbind(E.options.hide.when.event + ".qtip");
                    E.elements.tooltip.unbind("mouseover.qtip", E.focus);
                    E.elements.tooltip.remove()
                } else E.options.show.when.target.unbind(E.options.show.when.event + ".qtip-create"); if (typeof E.elements.target.data("qtip") == "object") {
                    R = E.elements.target.data("qtip").interfaces;
                    if (typeof R == "object" && R.length > 0)
                        for (M = 0; M < R.length - 1; M++) R[M].id == E.id && R.splice(M, 1)
                }
                delete a.fn.qtip.interfaces[E.id];
                if (typeof R == "object" && R.length > 0) E.elements.target.data("qtip").current = R.length - 1;
                else E.elements.target.removeData("qtip");
                E.onDestroy.call(E);
                a.fn.qtip.log.error.call(E, 1, a.fn.qtip.constants.EVENT_DESTROYED, "destroy");
                return E.elements.target
            },
            getPosition: function () {
                var M, R;
                if (!E.status.rendered) return a.fn.qtip.log.error.call(E, 2, a.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "getPosition");
                (M = E.elements.tooltip.css("display") !== "none" ? false : true) && E.elements.tooltip.css({
                    visiblity: "hidden"
                }).show();
                R = E.elements.tooltip.offset();
                M && E.elements.tooltip.css({
                    visiblity: "visible"
                }).hide();
                return R
            },
            getDimensions: function () {
                var M, R;
                if (!E.status.rendered) return a.fn.qtip.log.error.call(E, 2, a.fn.qtip.constants.TOOLTIP_NOT_RENDERED, "getDimensions");
                (M = !E.elements.tooltip.is(":visible") ? true : false) && E.elements.tooltip.css({
                    visiblity: "hidden"
                }).show();
                R = {
                    height: E.elements.tooltip.outerHeight(),
                    width: E.elements.tooltip.outerWidth()
                };
                M && E.elements.tooltip.css({
                    visiblity: "visible"
                }).hide();
                return R
            }
        })
    }

    function f() {
        var w, G, J;
        this.beforeRender.call(this);
        this.status.rendered = true;
        this.elements.tooltip = '<div qtip="' + this.id + '" class="qtip ' + (this.options.style.classes.tooltip || this.options.style) + '"style="display:none; -moz-border-radius:0; -webkit-border-radius:0; border-radius:0;position:' + this.options.position.type + ';">  <div class="qtip-wrapper" style="position:relative;  text-align:left;">    <div class="qtip-contentWrapper" style="">       <div class="qtip-content ' +
            this.options.style.classes.content + '"></div></div></div></div>';
        this.elements.tooltip = a(this.elements.tooltip);
        this.elements.tooltip.appendTo(this.options.position.container);
        this.elements.tooltip.data("qtip", {
            current: 0,
            interfaces: [this]
        });
        this.elements.wrapper = this.elements.tooltip.children("div:first");
        this.elements.contentWrapper = this.elements.wrapper.children("div:first").css({
            background: this.options.style.background
        });
        this.elements.content = this.elements.contentWrapper.children("div:first").css(u(this.options.style));
        a.browser.msie && this.elements.wrapper.add(this.elements.content).css({
            zoom: 1
        });
        this.options.hide.when.event == "unfocus" && this.elements.tooltip.attr("unfocus", true);
        typeof this.options.style.width.value == "number" && this.updateWidth();
        if (a("<canvas>").get(0).getContext || a.browser.msie) {
            this.options.style.border.radius > 0 ? j.call(this) : this.elements.contentWrapper.css({
                border: this.options.style.border.width + "px solid " + this.options.style.border.color
            });
            this.options.style.tip.corner !== false && c.call(this)
        } else {
            this.elements.contentWrapper.css({
                border: this.options.style.border.width + "px solid " + this.options.style.border.color
            });
            this.options.style.border.radius = 0;
            this.options.style.tip.corner = false;
            a.fn.qtip.log.error.call(this, 2, a.fn.qtip.constants.CANVAS_VML_NOT_SUPPORTED, "render")
        } if (typeof this.options.content.text == "string" && this.options.content.text.length > 0 || this.options.content.text.jquery && this.options.content.text.length > 0) w = this.options.content.text;
        else if (typeof this.elements.target.attr("title") == "string" && this.elements.target.attr("title").length > 0) {
            w = this.elements.target.attr("title").replace("\\n",
                "<br />");
            this.elements.target.attr("title", "")
        } else if (typeof this.elements.target.attr("alt") == "string" && this.elements.target.attr("alt").length > 0) {
            w = this.elements.target.attr("alt").replace("\\n", "<br />");
            this.elements.target.attr("alt", "")
        } else {
            w = " ";
            a.fn.qtip.log.error.call(this, 1, a.fn.qtip.constants.NO_VALID_CONTENT, "render")
        }
        this.options.content.title.text !== false && o.call(this);
        this.updateContent(w);
        n.call(this);
        this.options.show.ready === true && this.show();
        if (this.options.content.url !== false) {
            w =
                this.options.content.url;
            G = this.options.content.data;
            J = this.options.content.method || "get";
            this.loadContent(w, G, J)
        }
        this.onRender.call(this);
        a.fn.qtip.log.error.call(this, 1, a.fn.qtip.constants.EVENT_RENDERED, "render")
    }

    function j() {
        var w, G, J, E, M, R, O, Y, na;
        w = this;
        w.elements.wrapper.find(".qtip-borderBottom, .qtip-borderTop").remove();
        J = w.options.style.border.width;
        E = w.options.style.border.radius;
        M = w.options.style.border.color || w.options.style.tip.color;
        R = B(E);
        O = {};
        for (G in R) {
            O[G] = '<div rel="' + G + '" style="' +
                (G.search(/Left/) !== -1 ? "left" : "right") + ":0; position:absolute; height:" + E + "px; width:" + E + 'px;  line-height:0.1px; font-size:1px">';
            if (a("<canvas>").get(0).getContext) O[G] += '<canvas height="' + E + '" width="' + E + '" style="vertical-align: top"></canvas>';
            else if (a.browser.msie) {
                Y = E * 2 + 3;
                O[G] += '<v:arc stroked="false" fillcolor="' + M + '" startangle="' + R[G][0] + '" endangle="' + R[G][1] + '" style="width:' + Y + "px; height:" + Y + "px; margin-top:" + (G.search(/bottom/) !== -1 ? -2 : -1) + "px; margin-left:" + (G.search(/Right/) !== -1 ?
                    R[G][2] - 3.5 : -1) + 'px; vertical-align:top; display:inline-block; behavior:url(#default#VML)"></v:arc>'
            }
            O[G] += "</div>"
        }
        G = w.getDimensions().width - Math.max(J, E) * 2;
        G = '<div class="qtip-betweenCorners" style="height:' + E + "px; width:" + G + "px;  background-color:" + M + '; line-height:0.1px; font-size:1px;">';
        w.elements.wrapper.prepend('<div class="qtip-borderTop" dir="ltr" style="height:' + E + "px; margin-left:" + E + 'px; line-height:0.1px; font-size:1px; padding:0;">' + O.topLeft + O.topRight + G);
        w.elements.wrapper.append('<div class="qtip-borderBottom" dir="ltr" style="height:' +
            E + "px; margin-left:" + E + 'px; line-height:0.1px; font-size:1px; padding:0;">' + O.bottomLeft + O.bottomRight + G);
        if (a("<canvas>").get(0).getContext) w.elements.wrapper.find("canvas").each(function () {
            na = R[a(this).parent("[rel]:first").attr("rel")];
            g.call(w, a(this), na, E, M)
        });
        else a.browser.msie && w.elements.tooltip.append('<v:image style="behavior:url(#default#VML);"></v:image>');
        w.elements.contentWrapper.css({
            border: "0px solid " + M,
            borderWidth: Math.max(J - E, 0) + "px " + Math.max(E, E + (J - E)) + "px"
        })
    }

    function g(w, G,
        J, E) {
        w = w.get(0).getContext("2d");
        w.fillStyle = E;
        w.beginPath();
        w.arc(G[0], G[1], J, 0, Math.PI * 2, false);
        w.fill()
    }

    function c(w) {
        var G, J, E, M;
        this.elements.tip !== null && this.elements.tip.remove();
        G = this.options.style.tip.color || this.options.style.border.color;
        if (this.options.style.tip.corner !== false) {
            if (!w) w = this.options.style.tip.corner;
            J = z(w, this.options.style.tip.size.width, this.options.style.tip.size.height);
            this.elements.tip = '<div class="' + this.options.style.classes.tip + '" dir="ltr" rel="' + w + '" style="position:absolute; height:' +
                this.options.style.tip.size.height + "px; width:" + this.options.style.tip.size.width + 'px; margin:0 auto; line-height:0.1px; font-size:1px;">';
            if (a("<canvas>").get(0).getContext) this.elements.tip += '<canvas height="' + this.options.style.tip.size.height + '" width="' + this.options.style.tip.size.width + '"></canvas>';
            else if (a.browser.msie) {
                E = this.options.style.tip.size.width + "," + this.options.style.tip.size.height;
                M = "m" + J[0][0] + "," + J[0][1];
                M += " l" + J[1][0] + "," + J[1][1];
                M += " " + J[2][0] + "," + J[2][1];
                M += " xe";
                this.elements.tip +=
                    '<v:shape fillcolor="' + G + '" stroked="false" filled="true" path="' + M + '" coordsize="' + E + '" style="width:' + this.options.style.tip.size.width + "px; height:" + this.options.style.tip.size.height + "px; line-height:0.1px; display:inline-block; behavior:url(#default#VML); vertical-align:" + (w.search(/top/) !== -1 ? "bottom" : "top") + '"></v:shape>';
                this.elements.tip += '<v:image style="behavior:url(#default#VML);"></v:image>';
                this.elements.contentWrapper.css("position", "relative")
            }
            this.elements.tooltip.prepend(this.elements.tip +
                "</div>");
            this.elements.tip = this.elements.tooltip.find("." + this.options.style.classes.tip).eq(0);
            a("<canvas>").get(0).getContext && b.call(this, this.elements.tip.find("canvas:first"), J, G);
            w.search(/top/) !== -1 && a.browser.msie && parseInt(a.browser.version.charAt(0)) === 6 && this.elements.tip.css({
                marginTop: -4
            });
            l.call(this, w)
        }
    }

    function b(w, G, J) {
        w = w.get(0).getContext("2d");
        w.fillStyle = J;
        w.beginPath();
        w.moveTo(G[0][0], G[0][1]);
        w.lineTo(G[1][0], G[1][1]);
        w.lineTo(G[2][0], G[2][1]);
        w.fill()
    }

    function l(w) {
        var G;
        if (!(this.options.style.tip.corner === false || !this.elements.tip)) {
            w || (w = this.elements.tip.attr("rel"));
            G = positionAdjust = a.browser.msie ? 1 : 0;
            this.elements.tip.css(w.match(/left|right|top|bottom/)[0], 0);
            if (w.search(/top|bottom/) !== -1) {
                if (a.browser.msie) positionAdjust = parseInt(a.browser.version.charAt(0)) === 6 ? w.search(/top/) !== -1 ? -3 : 1 : w.search(/top/) !== -1 ? 1 : 2;
                if (w.search(/Middle/) !== -1) this.elements.tip.css({
                    left: "50%",
                    marginLeft: -(this.options.style.tip.size.width / 2)
                });
                else if (w.search(/Left/) !== -1) this.elements.tip.css({
                    left: this.options.style.border.radius - G
                });
                else w.search(/Right/) !== -1 && this.elements.tip.css({
                    right: this.options.style.border.radius + G
                });
                w.search(/top/) !== -1 ? this.elements.tip.css({
                    top: -positionAdjust
                }) : this.elements.tip.css({
                    bottom: positionAdjust
                })
            } else if (w.search(/left|right/) !== -1) {
                if (a.browser.msie) positionAdjust = parseInt(a.browser.version.charAt(0)) === 6 ? 1 : w.search(/left/) !== -1 ? 1 : 2;
                if (w.search(/Middle/) !== -1) this.elements.tip.css({
                    top: "50%",
                    marginTop: -(this.options.style.tip.size.height / 2)
                });
                else if (w.search(/Top/) !== -1) this.elements.tip.css({
                    top: this.options.style.border.radius - G
                });
                else w.search(/Bottom/) !== -1 && this.elements.tip.css({
                    bottom: this.options.style.border.radius + G
                });
                w.search(/left/) !== -1 ? this.elements.tip.css({
                    left: -positionAdjust
                }) : this.elements.tip.css({
                    right: positionAdjust
                })
            }
            w = "padding-" + w.match(/left|right|top|bottom/)[0];
            G = this.options.style.tip.size[w.search(/left|right/) !== -1 ? "width" : "height"];
            this.elements.tooltip.css("padding", 0);
            this.elements.tooltip.css(w, G);
            if (a.browser.msie && parseInt(a.browser.version.charAt(0)) == 6) {
                w = parseInt(this.elements.tip.css("margin-top")) ||
                    0;
                w += parseInt(this.elements.content.css("margin-top")) || 0;
                this.elements.tip.css({
                    marginTop: w
                })
            }
        }
    }

    function o() {
        var w = this;
        w.elements.title !== null && w.elements.title.remove();
        w.elements.title = a('<div class="' + w.options.style.classes.title + '">').css(u(w.options.style.title, true)).css({
            zoom: a.browser.msie ? 1 : 0
        }).prependTo(w.elements.contentWrapper);
        w.options.content.title.text && w.updateTitle.call(w, w.options.content.title.text);
        if (w.options.content.title.button !== false && typeof w.options.content.title.button ==
            "string") w.elements.button = a('<a class="' + w.options.style.classes.button + '" style="float:right; position: relative"></a>').css(u(w.options.style.button, true)).html(w.options.content.title.button).prependTo(w.elements.title).click(function (G) {
            w.status.disabled || w.hide(G)
        })
    }

    function n() {
        function w(Y) {
            if (J.status.disabled !== true) {
                if (J.options.hide.when.event == "inactive") {
                    a(R).each(function () {
                        M.bind(this + ".qtip-inactive", O);
                        J.elements.content.bind(this + ".qtip-inactive", O)
                    });
                    O()
                }
                clearTimeout(J.timers.show);
                clearTimeout(J.timers.hide);
                J.timers.show = setTimeout(function () {
                    J.show(Y)
                }, J.options.show.delay)
            }
        }

        function G(Y) {
            if (J.status.disabled !== true) {
                if (J.options.hide.fixed === true && J.options.hide.when.event.search(/mouse(out|leave)/i) !== -1 && a(Y.relatedTarget).parents("div.qtip[qtip]").length > 0) {
                    Y.stopPropagation();
                    Y.preventDefault();
                    clearTimeout(J.timers.hide);
                    return false
                }
                clearTimeout(J.timers.show);
                clearTimeout(J.timers.hide);
                J.elements.tooltip.stop(true, true);
                J.timers.hide = setTimeout(function () {
                        J.hide(Y)
                    },
                    J.options.hide.delay)
            }
        }
        var J, E, M, R;
        J = this;
        E = J.options.show.when.target;
        M = J.options.hide.when.target;
        if (J.options.hide.fixed) M = M.add(J.elements.tooltip);
        if (J.options.hide.when.event == "inactive") {
            R = ["click", "dblclick", "mousedown", "mouseup", "mousemove", "mouseout", "mouseenter", "mouseleave", "mouseover"];
            var O = function (Y) {
                if (J.status.disabled !== true) {
                    clearTimeout(J.timers.inactive);
                    J.timers.inactive = setTimeout(function () {
                        a(R).each(function () {
                            M.unbind(this + ".qtip-inactive");
                            J.elements.content.unbind(this +
                                ".qtip-inactive")
                        });
                        J.hide(Y)
                    }, J.options.hide.delay)
                }
            }
        } else J.options.hide.fixed === true && J.elements.tooltip.bind("mouseover.qtip", function () {
            J.status.disabled !== true && clearTimeout(J.timers.hide)
        }); if (J.options.show.when.target.add(J.options.hide.when.target).length === 1 && J.options.show.when.event == J.options.hide.when.event && J.options.hide.when.event !== "inactive" || J.options.hide.when.event == "unfocus") {
            J.cache.toggle = 0;
            E.bind(J.options.show.when.event + ".qtip", function (Y) {
                J.cache.toggle == 0 ? w(Y) : G(Y)
            })
        } else {
            E.bind(J.options.show.when.event +
                ".qtip", w);
            J.options.hide.when.event !== "inactive" && M.bind(J.options.hide.when.event + ".qtip", G)
        }
        J.options.position.type.search(/(fixed|absolute)/) !== -1 && J.elements.tooltip.bind("mouseover.qtip", J.focus);
        J.options.position.target === "mouse" && J.options.position.type !== "static" && E.bind("mousemove.qtip", function (Y) {
            J.cache.mouse = {
                x: Y.pageX,
                y: Y.pageY
            };
            J.status.disabled === false && J.options.position.adjust.mouse === true && J.options.position.type !== "static" && J.elements.tooltip.css("display") !== "none" && J.updatePosition(Y)
        })
    }

    function q(w, G, J) {
        var E, M, R;
        if (J.corner == "center") return G.position;
        E = a.extend({}, w);
        R = {
            x: false,
            y: false
        };
        M = {
            left: E.left < a.fn.qtip.cache.screen.scroll.left,
            right: E.left + J.dimensions.width + 2 >= a.fn.qtip.cache.screen.width + a.fn.qtip.cache.screen.scroll.left,
            top: E.top < a.fn.qtip.cache.screen.scroll.top,
            bottom: E.top + J.dimensions.height + 2 >= a.fn.qtip.cache.screen.height + a.fn.qtip.cache.screen.scroll.top
        };
        M = {
            left: M.left && (J.corner.search(/right/i) != -1 || J.corner.search(/right/i) == -1 && !M.right),
            right: M.right && (J.corner.search(/left/i) != -1 || J.corner.searc           clearTimeout(J.timers.hide);
                J.timers.show = setTimeout(function () {
                    J.show(Y)
                }, J.options.show.delay)
            }
        }

        function G(Y) {
            if (J.status.disabled !== true) {
                if (J.options.hide.fixed === true && J.options.hide.when.event.search(/mouse(out|leave)/i) !== -1 && a(Y.relatedTarget).parents("div.qtip[qtip]").length > 0) {
                    Y.stopPropagation();
                    Y.preventDefault();
                    clearTimeout(J.timers.hide);
                    return false
                }
                clearTimeout(J.timers.show);
                clearTimeout(J.timers.hide);
                J.elements.tooltip.stop(true, true);
                J.timers.hide = setTimeout(function () {
                        J.hide(Y)
                    },
                    J.options.hide.delay)
            }
        }
        var J, E, M, R;
        J = this;
        E = J.options.show.when.target;
        M = J.options.hide.when.target;
        if (J.options.hide.fixed) M = M.add(J.elements.tooltip);
        if (J.options.hide.when.event == "inactive") {
            R = ["click", "dblclick", "mousedown", "mouseup", "mousemove", "mouseout", "mouseenter", "mouseleave", "mouseover"];
            var O = function (Y) {
                if (J.status.disabled !== true) {
                    clearTimeout(J.timers.inactive);
                    J.timers.inactive = setTimeout(function () {
                        a(R).each(function () {
                            M.unbind(this + ".qtip-inactive");
                            J.elements.content.unbind(this +
                                ".qtip-inactive")
                        });
                        J.hide(Y)
                    }, J.options.hide.delay)
                }
            }
        } else J.options.hide.fixed === true && J.elements.tooltip.bind("mouseover.qtip", function () {
            J.status.disabled !== true && clearTimeout(J.timers.hide)
        }); if (J.options.show.when.target.add(J.options.hide.when.target).length === 1 && J.options.show.when.event == J.options.hide.when.event && J.options.hide.when.event !== "inactive" || J.options.hide.when.event == "unfocus") {
            J.cache.toggle = 0;
            E.bind(J.options.show.when.event + ".qtip", function (Y) {
                J.cache.toggle == 0 ? w(Y) : G(Y)
            })
        } else {
            E.bind(J.options.show.when.event +
                ".qtip", w);
            J.options.hide.when.event !== "inactive" && M.bind(J.options.hide.when.event + ".qtip", G)
        }
        J.options.position.type.search(/(fixed|absolute)/) !== -1 && J.elements.tooltip.bind("mouseover.qtip", J.focus);
        J.options.position.target === "mouse" && J.options.position.type !== "static" && E.bind("mousemove.qtip", function (Y) {
            J.cache.mouse = {
                x: Y.pageX,
                y: Y.pageY
            };
            J.status.disabled === false && J.options.position.adjust.mouse === true && J.options.position.type !== "static" && J.elements.tooltip.css("display") !== "none" && J.updatePosition(Y)
        })
    }

    function q(w, G, J) {
        var E, M, R;
        if (J.corner == "center") return G.position;
        E = a.extend({}, w);
        R = {
            x: false,
            y: false
        };
        M = {
            left: E.left < a.fn.qtip.cache.screen.scroll.left,
            right: E.left + J.dimensions.width + 2 >= a.fn.qtip.cache.screen.width + a.fn.qtip.cache.screen.scroll.left,
            top: E.top < a.fn.qtip.cache.screen.scroll.top,
            bottom: E.top + J.dimensions.height + 2 >= a.fn.qtip.cache.screen.height + a.fn.qtip.cache.screen.scroll.top
        };
        M = {
            left: M.left && (J.corner.search(/right/i) != -1 || J.corner.search(/right/i) == -1 && !M.right),
            right: M.right && (J.corner.search(/left/i) != -1 || J.corner.search(/left/i) == -1 && !M.left),
            top: M.top && J.corner.search(/top/i) == -1,
            bottom: M.bottom && J.corner.search(/bottom/i) == -1
        };
        if (M.left) {
            E.left = this.options.position.target !== "mouse" ? G.position.left + G.dimensions.width : this.cache.mouse.x;
            R.x = "Left"
        } else if (M.right) {
            E.left = this.options.position.target !== "mouse" ? G.position.left - J.dimensions.width : this.cache.mouse.x - J.dimensions.width;
            R.x = "Right"
        }
        if (M.top) {
            E.top = this.options.position.target !== "mouse" ? G.position.top + G.dimensions.height :
                this.cache.mouse.y;
            R.y = "top"
        } else if (M.bottom) {
            E.top = this.options.position.target !== "mouse" ? G.position.top - J.dimensions.height : this.cache.mouse.y - J.dimensions.height;
            R.y = "bottom"
        }
        if (E.left < 0) {
            E.left = w.left;
            R.x = false
        }
        if (E.top < 0) {
            E.top = w.top;
            R.y = false
        }
        if (this.options.style.tip.corner !== false) {
            E.corner = new String(J.corner);
            if (R.x !== false) E.corner = E.corner.replace(/Left|Right|Middle/, R.x);
            if (R.y !== false) E.corner = E.corner.replace(/top|bottom/, R.y);
            E.corner !== this.elements.tip.attr("rel") && c.call(this,
                E.corner)
        }
        return E
    }

    function u(w, G) {
        var J, E;
        J = a.extend(true, {}, w);
        for (E in J)
            if (G === true && E.search(/(tip|classes)/i) !== -1) delete J[E];
            else !G && E.search(/(width|border|tip|title|classes|user)/i) !== -1 && delete J[E];
        return J
    }

    function v(w) {
        if (typeof w.tip !== "object") w.tip = {
            corner: w.tip
        };
        if (typeof w.tip.size !== "object") w.tip.size = {
            width: w.tip.size,
            height: w.tip.size
        };
        if (typeof w.border !== "object") w.border = {
            width: w.border
        };
        if (typeof w.width !== "object") w.width = {
            value: w.width
        };
        if (typeof w.width.max == "string") w.width.max =
            parseInt(w.width.max.replace(/([0-9]+)/i, "$1"));
        if (typeof w.width.min == "string") w.width.min = parseInt(w.width.min.replace(/([0-9]+)/i, "$1"));
        if (typeof w.tip.size.x == "number") {
            w.tip.size.width = w.tip.size.x;
            delete w.tip.size.x
        }
        if (typeof w.tip.size.y == "number") {
            w.tip.size.height = w.tip.size.y;
            delete w.tip.size.y
        }
        return w
    }

    function x() {
        var w, G;
        G = [true, {}];
        for (w = 0; w < arguments.length; w++) G.push(arguments[w]);
        for (w = [a.extend.apply(a, G)]; typeof w[0].name == "string";) w.unshift(v(a.fn.qtip.styles[w[0].name]));
        w.unshift(true, {
            classes: {
                tooltip: "qtip-" + (arguments[0].name || "defaults")
            }
        }, a.fn.qtip.styles.defaults);
        w = a.extend.apply(a, w);
        G = a.browser.msie ? 1 : 0;
        w.tip.size.width += G;
        w.tip.size.height += G;
        if (w.tip.size.width % 2 > 0) w.tip.size.width += 1;
        if (w.tip.size.height % 2 > 0) w.tip.size.height += 1;
        if (w.tip.corner === true) w.tip.corner = this.options.position.corner.tooltip === "center" ? false : this.options.position.corner.tooltip;
        return w
    }

    function z(w, G, J) {
        G = {
            bottomRight: [
                [0, 0],
                [G, J],
                [G, 0]
            ],
            bottomLeft: [
                [0, 0],
                [G, 0],
                [0, J]
            ],
            topRight: [
                [0,
                    J
                ],
                [G, 0],
                [G, J]
            ],
            topLeft: [
                [0, 0],
                [0, J],
                [G, J]
            ],
            topMiddle: [
                [0, J],
                [G / 2, 0],
                [G, J]
            ],
            bottomMiddle: [
                [0, 0],
                [G, 0],
                [G / 2, J]
            ],
            rightMiddle: [
                [0, 0],
                [G, J / 2],
                [0, J]
            ],
            leftMiddle: [
                [G, 0],
                [G, J],
                [0, J / 2]
            ]
        };
        G.leftTop = G.bottomRight;
        G.rightTop = G.bottomLeft;
        G.leftBottom = G.topRight;
        G.rightBottom = G.topLeft;
        return G[w]
    }

    function B(w) {
        var G;
        if (a("<canvas>").get(0).getContext) G = {
            topLeft: [w, w],
            topRight: [0, w],
            bottomLeft: [w, 0],
            bottomRight: [0, 0]
        };
        else if (a.browser.msie) G = {
            topLeft: [-90, 90, 0],
            topRight: [-90, 90, -w],
            bottomLeft: [90, 270, 0],
            bottomRight: [90,
                270, -w
            ]
        };
        return G
    }

    function C() {
        var w;
        w = this.getDimensions();
        this.elements.bgiframe = this.elements.wrapper.prepend('<iframe class="qtip-bgiframe" frameborder="0" tabindex="-1" src="javascript:false" style="display:block; position:absolute; z-index:-1; filter:alpha(opacity=\'0\'); border: 1px solid red; height:' + w.height + "px; width:" + w.width + 'px" />').children(".qtip-bgiframe:first")
    }
    a.fn.qtip = function (w, G) {
        var J, E, M, R, O, Y, na, qa;
        if (typeof w == "string") {
            typeof a(this).data("qtip") !== "object" && a.fn.qtip.log.error.call(self,
                1, a.fn.qtip.constants.NO_TOOLTIP_PRESENT, false);
            if (w == "api") return a(this).data("qtip").interfaces[a(this).data("qtip").current];
            else if (w == "interfaces") return a(this).data("qtip").interfaces
        } else {
            w || (w = {});
            if (typeof w.content !== "object" || w.content.jquery && w.content.length > 0) w.content = {
                text: w.content
            };
            if (typeof w.content.title !== "object") w.content.title = {
                text: w.content.title
            };
            if (typeof w.position !== "object") w.position = {
                corner: w.position
            };
            if (typeof w.position.corner !== "object") w.position.corner = {
                target: w.position.corner,
                tooltip: w.position.corner
            };
            if (typeof w.show !== "object") w.show = {
                when: w.show
            };
            if (typeof w.show.when !== "object") w.show.when = {
                event: w.show.when
            };
            if (typeof w.show.effect !== "object") w.show.effect = {
                type: w.show.effect
            };
            if (typeof w.hide !== "object") w.hide = {
                when: w.hide
            };
            if (typeof w.hide.when !== "object") w.hide.when = {
                event: w.hide.when
            };
            if (typeof w.hide.effect !== "object") w.hide.effect = {
                type: w.hide.effect
            };
            if (typeof w.style !== "object") w.style = {
                name: w.style
            };
            w.style = v(w.style);
            R = a.extend(true, {}, a.fn.qtip.defaults,
                w);
            R.style = x.call({
                options: R
            }, R.style);
            R.user = a.extend(true, {}, w)
        }
        return a(this).each(function () {
            if (typeof w == "string") {
                Y = w.toLowerCase();
                M = a(this).qtip("interfaces");
                if (typeof M == "object")
                    if (G === true && Y == "J && J.status.rendered === true && (J.options.position.type !== "static" || J.options.position.adjust.scroll && G.type === "scroll" || J.options.position.adjust.resize && G.type === "resize")) J.updatePosition(G,
                            true)
                    }
                }, 100)
            });
        a(document).bind("mousedown.qtip", function (G) {
            a(G.target).parents("div.qtip").length === 0 && a(".qtip[unfocus]").each(function () {
                var J = a(this).qtip("api");
                a(this).is(":visible") && !J.status.disabled && a(G.target).add(J.elements.target).length > 1 && J.hide(G)
            })
        })
    });
    a.fn.qtip.interfaces = [];
    a.fn.qtip.log = {
        error: function () {
            return this
        }
    };
    a.fn.qtip.constants = {};
    a.fn.qtip.defaults = {
        content: {
            prerender: false,
            text: false,
            url: false,
            data: null,
            title: {
                text: false,
                button: false
            }
        },
        position: {
            target: false,
            corner: {
                target: "bottomRight",
                tooltip: "topLeft"
            },
            adjust: {
                x: 0,
                y: 0,
                mouse: true,
                screen: false,
                scroll: true,
                resize: true
            },
            type: "absolute",
            container: false
        },
        show: {
            when: {
                target: false,
                event: "mouseover"
            },
            effect: {
                type: "fade",
                length: 100
            },
            delay: 140,
            solo: false,
            ready: false
        },
        hide: {
            when: {
                target: false,
                event: "mouseout"
            },
            effect: {
                type: "fade",
                length: 100
            },
            delay: 0,
            fixed: false
        },
        api: {
            beforeRender: function () {},
            onRender: function () {},
            beforePositionUpdate: function () {},
            onPositionUpdate: function () {},
            beforeShow: function () {},
            onShow: function () {},
            beforeHide: function () {},
            onHide: function () {},
            beforeContentUpdate: function () {},
            onContentUpdate: function () {},
            beforeContentLoad: function () {},
            onContentLoad: function () {},
            beforeTitleUpdate: function () {},
            onTitleUpdate: function () {},
            beforeDestroy: function () {},
            onDestroy: function () {},
            beforeFocus: function () {},
            onFocus: function () {}
        }
    };
    a.fn.qtip.styles = {
        defaults: {
            background: "white",
            color: "#111",
            textAlign: "left",
            width: {
                min: 0,
                max: 250
            },
            padding: "5px 9px",
            border: {
                width: 1,
                radius: 0,
                color: "#d3d3d3"
            },
            tip: {
                corner: false,
                color: false,
                size: {
                    width: 13,
                    height: 13
                },
                opacity: 1
            },
            title: {
                background: "#e1e1e1",
                fontWeight: "bold",
                padding: "7px 12px"
            },
            button: {
                cursor: "pointer"
            },
            classes: {
                target: "",
                tip: "qtip-tip",
                title: "qtip-title",
                button: "qtip-button",
                content: "qtip-content",
                active: "qtip-active"
            }
        },
        cream: {
            border: {
                width: 3,
                radius: 0,
                color: "#F9E98E"
            },
            title: {
                background: "#F0DE7D",
                color: "#A27D35"
            },
            background: "#FBF7AA",
            color: "#A27D35",
            classes: {
                tooltip: "qtip-cream"
            }
        },
        light: {
            border: {
                width: 3,
                radius: 0,
                color: "#E2E2E2"
            },
            title: {
                background: "#f1f1f1",
                color: "#454545"
            },
            background: "white",
            color: "#454545",
            classes: {
                tooltip: "qtip-light"
            }
        },
        dark: {
            border: {
                width: 3,
                radius: 0,
                color: "#303030"
            },
            title: {
                background: "#404040",
                color: "#f3f3f3"
            },
            background: "#505050",
            color: "#f3f3f3",
            classes: {
                tooltip: "qtip-dark"
            }
        },
        red: {
            border: {
                width: 3,
                radius: 0,
                color: "#CE6F6F"
            },
            title: {
                background: "#f28279",
                color: "#9C2F2F"
            },
            background: "#F79992",
            color: "#9C2F2F",
            classes: {
                tooltip: "qtip-red"
            }
        },
        green: {
            border: {
                width: 3,
                radius: 0,
                color: "#A9DB66"
            },
            title: {
                background: "#b9db8c",
                color: "#58792E"
            },
            background: "#CDE6AC",
            color: "#58792E",
            classes: {
                tooltip: "qtip-green"
            }
        },
        blue: {
            border: {
                width: 3,
                radius: 0,
                color: "#ADD9ED"
            },
            title: {
                background: "#D0E9F5",
                color: "#5E99BD"
            },
            background: "#E5F6FE",
            color: "#4D9FBF",
            classes: {
                tooltip: "qtip-blue"
            }
        }
    }
})(jQuery);
(function (a) {
    var e = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
    a.fn.datetimeSlider = function (f) {
        var j, g = a(this);
        a('<div class="ui-slider-handle startHandle"><div class="startHandleLabel"></div></div><div class="ui-slider-handle endHandle"><div class="endHandleLabel"></div></div>').appendTo(g);
        if (f.type == "day") {
            f.min = 0;
            f.max = 6;
            j = function (b, l) {
                var o = [e[l.values[0]], e[l.values[1]]];
                if (l.values[1] < l.values[0]) {
                    o = [e[l.values[0]], e[l.values[1] - 1]];
                    if (l.values[1] == 0) o[1] = e[6]
                }
                g.find(".startHandleLabel").text(o[0]);
                g.find(".endHandleLabel").text(o[1]);
                if (l.values[0] == f.min && l.values[1] == f.max || l.values[0] == f.max && l.values[1] == f.min) a(f.displayTarget).text("Any Day");
                else l.values[0] == l.values[1] ? a(f.displayTarget).text(o[0] + "s") : a(f.displayTarget).text(o[0] + "-" + o[1])
            };
            if (!f.values) f.values = [1, 5]
        } else if (f.type == "15min" || f.type == "5min" || f.type == "1min") {
            var c;
            if (f.type == "15min") {
                f.min = 0;
                f.max = 96;
                c = 900;
                if (!f.values) f.values = [36, 68]
            } else if (f.type == "5min") {
                f.min = 0;
                f.max = 288;
                c = 300;
                if (!f.values) f.values = [108, 204]
            } else if (f.type ==
                "1min") {
                f.min = 0;
                f.max = 1440;
                c = 60;
                if (!f.values) f.values = [540, 1020]
            }
            j = function (b, l) {
                var o = [(new Date.today).addSeconds(l.values[0] * c).toString("hh:mmtt"), (new Date.today).addSeconds(l.values[1] * c).toString("hh:mmtt")],
                    n = g.find(".startHandleLabel"),
                    q = g.find(".endHandleLabel");
                n.text(o[0]);
                q.text(o[1]);
                l.values[0] == f.min && l.values[1] == f.max || l.values[0] == f.max && l.values[1] == f.min ? a(f.displayTarget).text("Any Time") : a(f.displayTarget).text(o[0] + "-" + o[1])
            }
        }
        f.range = true;
        a(this).slider(f).bind("slide", j).bind("slidestart",
            function () {
                a(".startHandleLabel", g).show();
                a(".endHandleLabel", g).show()
            }).bind("slidestop", function () {
            a(".startHandleLabel", g).hide();
            a(".endHandleLabel", g).hide()
        }).bind("slidestart slide", function () {
            setTimeout(function () {
                var b = g.find(".startHandleLabel"),
                    l = g.find(".endHandleLabel");
                b.offsetParent().position().left < b.outerWidth() ? b.addClass("offscreen") : b.removeClass("offscreen");
                l.outerWidth() + l.offsetParent().position().left > g.outerWidth() ? l.addClass("offscreen") : l.removeClass("offscreen")
            }, 5)
        });
        j({}, {
            values: [g.slider("values", 0), g.slider("values", 1)]
        });
        a(".startHandleLabel, .endHandleLabel", g).hide();
        return a(this)
    }
})(jQuery);
var plot;
(function () {
    var a = function (g) {
        return g > 1E9 ? Math.round(g / 1E9 * 100) / 100 + "GB" : g > 1E6 ? Math.round(g / 1E6 * 100) / 100 + "MB" : g > 1E3 ? Math.round(g / 1E3 * 100) / 100 + "KB" : Math.round(g * 100) / 100 + "B"
    }, e = (new Date).getTimezoneOffset() * 60 * 1E3,
        f = [];
    f.push({
        url: "/gui/graph/data",
        type: "lan",
        start: new Date - 432E5,
        end: (new Date).getTime(),
        dom: "#LANInterface",
        yaxisformat: a
    });
    f.push({
        url: "/gui/graph/data",
        type: "sessions",
        start: new Date - 432E5,
        end: (new Date).getTime(),
        dom: "#sessions",
        steps: true,
        yaxisformat: function (g) {
            return Math.round(g)
        }
    });
    var j =
        function (g) {
            var c = (new Date).getTime(),
                b;
            for (b in g) {
                if (c - g[b].end < 12E3) {
                    g[b].start += c - g[b].end;
                    g[b].end = c
                }
                $.ajax({
                    url: g[b].url,
                    data: {
                        type: g[b].type,
                        start: Math.round(g[b].start / 1E3),
                        end: Math.round(g[b].end / 1E3),
                        interpolation: g[b].interpolation || "AVERAGE",
                        action: "flot"
                    },
                    dataType: "json",
                    context: g[b],
                    success: function (l) {
                        for (var o = this, n = $(this.dom), q = [], u = 0;; u++)
                            if (l["v" + u]) {
                                l["v" + u].data = jQuery.map(l["v" + u].data, function (z) {
                                    return [[z[0] - e, z[1]]]
                                });
                                q.push(l["v" + u])
                            } else break;
                        if (n.is(":visible")) {
                            var v;
                            if (n.data("plot")) {
                                v = n.data("plot");
                                v.setData(q);
                                v.setupGrid();
                                v.draw()
                            } else {
                                v = $.plot(n, q, {
                                    xaxis: {
                                        mode: "time",
                                        twelveHourClock: true
                                    },
                                    yaxis: {
                                        tickFormatter: this.yaxisformat,
                                        minTickSize: 1,
                                        min: 0
                                    },
                                    crosshair: {
                                        mode: "x"
                                    },
                                    steps: this.steps ? true : false,
                                    grid: {
                                        hoverable: true,
                                        clickable: true
                                    },
                                    selection: {
                                        mode: "x"
                                    },
                                    legend: {
                                        position: "nw"
                                    }
                                });
                                n.data("plot", v)
                            } if (!$(".graphTooltip", n)[0]) {
                                var x = $('<div class="graphTooltip" style="position: absolute; left: -999em"></div>').appendTo(n).hide();
                                l = $('<a href="#" class="graphZoomOverlay">Zoom Out</a>').appendTo(n);
                                q = $('<select><option value="MIN">Minimum Value</option><option value="AVERAGE" selected="selected">Average Value</option><option value="MAX">Maximum Value</option></select>').appendTo($('<div class="graphInterpolation">Points Show </div>').appendTo(n));
                                u = $('<a href="#" class="graphResetOverlay">Reset</a>').appendTo(n);
                                l.bind("click", function (z) {
                                    z.preventDefault();
                                    if (o.zoomstack && o.zoomstack.length > 0) {
                                        z = o.zoomstack.pop();
                                        o.start = z[0];
                                        o.end = z[1]
                                    } else {
                                        z = (o.end - o.start) * 1.33;
                                        o.end = (new Date).getTime();
                                        o.start = o.end - z
                                    }
                                    j([o])
                                });
                                u.bind("click", function (z) {
                                    z.preventDefault();
                                    o.end = (new Date).getTime();
                                    o.start = o.end - 432E5;
                                    o.zoomstack = [];
                                    j([o])
                                });
                                q.bind("change", function () {
                                    o.interpolation = $(this).val();
                                    j([o])
                                });
                                n.unbind("mouseover.ttip").bind("mouseover.ttip", function () {
                                    x.show()
                                });
                                n.unbind("mouseout.ttip").bind("mouseout.ttip", function () {
                                    x.hide()
                                });
                                n.debounce("plothover", function (z, B) {
                                    var C = findClosestPoints(v, B.x),
                                        w = "",
                                              v.setData(q);
                                v.setupGrid();
                                v.draw()
                            } else {
                                v = $.plot(n, q, {
                                    xaxis: {
                                        mode: "time",
                                        twelveHourClock: true
                                    },
                                    yaxis: {
                                        tickFormatter: this.yaxisformat,
                                        minTickSize: 1,
                                        min: 0
                                    },
                                    crosshair: {
                                        mode: "x"
                                    },
                                    steps: this.steps ? true : false,
                                    grid: {
                                        hoverable: true,
                                        clickable: true
                                    },
                                    selection: {
                                        mode: "x"
                                    },
                                    legend: {
                                        position: "nw"
                                    }
                                });
                                n.data("plot", v)
                            } if (!$(".graphTooltip", n)[0]) {
                                var x = $('<div class="graphTooltip" style="position: absolute; left: -999em"></div>').appendTo(n).hide();
                                l = $('<a href="#" class="graphZoomOverlay">Zoom Out</a>').appendTo(n);
                                q = $('<select><option value="MIN">Minimum Value</option><option value="AVERAGE" selected="selected">Average Value</option><option value="MAX">Maximum Value</option></select>').appendTo($('<div class="graphInterpolation">Points Show </div>').appendTo(n));
                                u = $('<a href="#" class="graphResetOverlay">Reset</a>').appendTo(n);
                                l.bind("click", function (z) {
                                    z.preventDefault();
                                    if (o.zoomstack && o.zoomstack.length > 0) {
                                        z = o.zoomstack.pop();
                                        o.start = z[0];
                                        o.end = z[1]
                                    } else {
                                        z = (o.end - o.start) * 1.33;
                                        o.end = (new Date).getTime();
                                        o.start = o.end - z
                                    }
                                    j([o])
                                });
                                u.bind("click", function (z) {
                                    z.preventDefault();
                                    o.end = (new Date).getTime();
                                    o.start = o.end - 432E5;
                                    o.zoomstack = [];
                                    j([o])
                                });
                                q.bind("change", function () {
                                    o.interpolation = $(this).val();
                                    j([o])
                                });
                                n.unbind("mouseover.ttip").bind("mouseover.ttip", function () {
                                    x.show()
                                });
                                n.unbind("mouseout.ttip").bind("mouseout.ttip", function () {
                                    x.hide()
                                });
                                n.debounce("plothover", function (z, B) {
                                    var C = findClosestPoints(v, B.x),
                                        w = "",
                             ecksliderInner");
        a(".checksliderOnLabel", b).outerWidth(true);
        if (c.values[0] == l) f(b, 0);
        else c.values[1] == l && f(b, 1)
    });
    a(".checksliderContainer").live("updateChecksliderTarget",
        function (g, c) {
            var b = c.target,
                l = c.value;
            if (l === null && b.is("input[type=checkbox]")) b.removeAttr("checked");
            else if (l === null && b.is("input,select,textarea")) b.attr("disabled", "disabled");
            else if (b.is("input[type=checkbox]")) {
                b.val(l);
                b.attr("checked", "checked")
            } else if (b.is("input,select,textarea")) {
                b.val(l);
                b.removeAttr("disabled")
            }
            b.trigger("change", {
                csupdate: true
            });
            b.trigger("dirty")
        });
    a(".checksliderWrap").live("redraw", function (g) {
        if (!a(g.target).closest(".checksliderContainer")[0]) {
            g.stopPropagation();
            a(".checksliderContainer", a(this)).trigger("redraw")
        }
    });
    a(".checksliderContainer").live("redraw", function () {
        var g = a(this);
        g.find(".checksliderOnLabel, .checksliderOffLabel").css({
            width: ""
        });
        var c = Math.max(a(".checksliderOffLabel", g).innerWidth(), a(".checksliderOnLabel", g).innerWidth());
        a(".checksliderOnLabel,.checksliderOffLabel", g).css("width", c);
        c = a(".checksliderOnLabel", g).outerWidth(true);
        var b = a(".checksliderOnLabel", g).outerWidth(true) + a(".checksliderOffLabel", g).outerWidth(true) + a(".checksliderDrag",
            g).outerWidth(true);
        a(".checksliderConstraint", g).css({
            width: b + c + "px",
            left: -c + "px"
        });
        a(".checksliderInner", g).css("width", b);
        c = a(".checksliderOnLabel", g).outerWidth(true) + a(".checksliderDrag", g).outerWidth();
        a(".checksliderBgWrap", g).css({
            width: c
        });
        b = "rect(0," + c + "px," + a(".checksliderOuter", g).innerHeight() + "px,0)";
        a(".checksliderOuter", g).css({
            clip: b
        });
        g.css({
            width: c + "px"
        });
        g.data("target").trigger("csinit")
    });
    var j = {
        updateValue: function (g) {
            var c = this.data("options");
            c.target.val(g);
            if (c.target.is("input[type=checkbox]")) c.target.attr("checked",
                g ? true : false);
            this.trigger("updateCheckslider", {
                value: g
            })
        },
        disable: function () {},
        init: function (g) {
            return this.each(function () {
                var c = a(this),
                    b = a.extend(true, [], g);
                if (c.is("input,textarea,select")) {
                    c.wrap('<div class="checksliderWrap"></div>');
                    b.target = c;
                    c = c.parent()
                } else if (!b.target) b.target = false;
                if (b.target && b.target.is("input,textarea,select")) {
                    if (b.target.is("[type=checkbox]")) b.values = [b.target.val(), null];
                    else if (b.target.is("select")) {
                        var l = [b.target.find("option:eq(0)"), b.target.find("option:eq(1)")];
                        b.labels = [l[0].text(), l[1].text()];
                        b.values = [l[0].val(), l[1].val()]
                    }
                    b.showTarget || b.target.hide()
                }
                b.labels = b.labels || ["On", "Off"];
                b.values = b.values || ["on", null];
                if (b.target && b.target.is("input,textarea,select"))
                    for (l = 0; l < 1; l++) b.target.val();
                var o = a('<div class="checksliderContainer" style="position: relative"><div class="checksliderOuter" style="position:absolute; top: 0; left: 0;"><div class="checksliderConstraint"></div><div class="checksliderBgWrap"><div class="checksliderBgLeft"></div><div class="checksliderBgRight"></div></div><div class="checksliderInner"><div class="checksliderOnLabel"></div><div class="checksliderDrag"></div><div class="checksliderOffLabel"></div></div></div></div>');
                a(".checksliderContainer", o).attr("id", "jid-" + Math.floor(Math.random() * 1E5));
                a(".checksliderOnLabel", o).text(b.labels[0]);
                a(".checksliderOffLabel", o).text(b.labels[1]);
                b.noColor || o.addClass("color");
                o.data("options", b);
                if (!b.target) b.target = a('<input type="hidden" name="' + (b.name || "slider") + '" style="display: none" />').insertAfter(a(".checksliderOffLabel", o));
                c.append(o);
                o.data("target", b.target);
                b.target.data("widgetType", "checkslider");
                b.target.data("widget", o);
                a(".checksliderInner", o).draggable({
                    axis: "x",
                    containment: a(".checksliderConstraint", o),
                    handle: a(".checksliderDrag", o)
                });
                a(".checksliderInner", o).bind("dragstop", function (n, q) {
                    var u = -q.position.left > a(".checksliderOnLabel", o).outerWidth(true) / 2 ? 1 : 0;
                    f(a(this).closest(".checksliderContainer"), u);
                    a(this).trigger("updateChecksliderTarget", {
                        position: u,
                        value: b.values[u],
                        options: b,
                        source: o,
                        target: b.target
                    })
                }).bind("drag", e);
                a(".checksliderOnLabel,.checksliderOffLabel", o).bind("click", function () {
                    var n = a(this).closest(".checksliderInner"),
                        q = -n.position().left <=
                            a(".checksliderOnLabel", o).outerWidth(true) / 2 ? 1 : 0;
                    f(a(this).closest(".checksliderContainer"), q);
                    n.trigger("updateChecksliderTarget", {
                        position: q,
                        value: b.values[q],
                        options: b,
                        source: o,
                        target: b.target
                    })
                });
                if (b.value === null) b.target.is("input[type=checkbox]") ? b.target.removeAttr("checked") : b.target.attr("disabled", "disabled");
                else if (b.value !== undefined && (b.value == b.values[0] || b.value == b.values[1])) {
                    b.target.val(b.value);
                    b.target.is("input[type=checkbox]") && b.target.attr("checked", "checked");
                    b.target("originalValue",
                        b.value)
                }
                b.target.bind("change csinit csupdate", function (n, q) {
                    if (!(typeof q == "object" && q.csupdate)) {
                        var u;
                        if (a(this).is("input,textarea,select")) u = a(this).val();
                        if (a(this).is("input[type=checkbox]:not(:checked),[disabled]")) u = null;
                        o.trigger("updateCheckslider", {
                            value: u
                        })
                    }
                });
                o.trigger("redraw")
            })
        }
    };
    a.fn.checkslider = function (g) {
        if (j[g]) return j[g].apply(this, Array.prototype.slice.call(arguments, 1));
        else if (typeof g === "object" || !g) return j.init.apply(this, arguments);
        else a.error("Method " + g + " does not exist on jQuery.checkslider")
    }
})(jQuery);
(function (a) {
    var e = function (o) {
        var n = a(o).slider("option", "min"),
            q = a(o).slider("option", "max"),
            u = a(o).slider("values", 0);
        o = a(o).slider("values", 1);
        return u == n && o == q || u == q && o == n
    }, f = function (o, n, q) {
            var u = this.elements.content,
                v = this,
                x = "days",
                z = a(".slider-weekday", u).datetimeSlider({
                    wraparound: true,
                    type: "day",
                    displayTarget: a(".wdayDisplay", u),
                    values: [0, 6]
                }),
                B = a(".slider-minute", u).datetimeSlider({
                    type: "5min",
                    wraparound: true,
                    displayTarget: a(".minDisplay", u),
                    values: [0, 288]
                });
            a(".pickdates", u).bind("click",
                function (C) {
                    C.preventDefault();
                    a(this).hide();
                    a(".pickdays", u).show();
                    a(".slider-weekday", u).hide();
                    a(".wdayDisplay", u).hide();
                    C = a(".dates", u).show();
                    x = "dates";
                    C.find(".checksliderContainer").trigger("redraw")
                });
            a(".pickdays", u).bind("click", function (C) {
                C.preventDefault();
                a(this).hide();
                a(".pickdates", u).show();
                a(".slider-weekday", u).show();
                a(".wdayDisplay", u).show();
                a(".dates", u).hide();
                x = "days"
            }).hide();
            a(".fromDate, .toDate", u).datepicker({
                beforeShow: function () {
                    return {
                        showYear: a(".anyYear", u).val() == "thisyear"
                    }
                }
            });
            a(".anyYear", u).checkslider({
                noColor: true
            }).bind("change", function (C) {
                a(C.target).val() == "anyyear" ? a(".fromDate, .toDate", u).datepicker("option", "dateFormat", "mm/dd") : a(".fromDate, .toDate", u).datepicker("option", "dateFormat", "mm/dd/yy")
            }).trigger("change");
            a(".dates", u).hide();
            a(".filter_type", u).bind("change", function () {
                a(this).val() ? a(".filter_value", u).show() : a(".filter_value", u).hide()
            });
            a(".hideButton", u).bind("click", function (C) {
                C.preventDefault();
                C = {
                    bbx_router_condition_map_tod_wday: "",
                    bbx_router_condition_map_tod_min_day: "",
                    bbx_router_condition_map_specific_date: "",
                    bbx_router_condition_map_recurring_date: "",
                    filter_type: "",
                    filter_value: ""
                };
                if (x == "days") {
                    if (!e(z)) {
                        var w = [z.slider("values", 0) + 1, z.slider("values", 1) + 1];
                        if (w[0] > w[1]) {
                            w[1] -= 1;
                            if (w[1] < 1) w[1] = 7
                        }
                        C.bbx_router_condition_map_tod_wday = w[0] + "-" + w[1]
                    }
                } else {
                    w = a(".anyYear", u).val() == "thisyear" ? "bbx_router_condition_map_specific_date" : "bbx_router_condition_map_recurring_date";
                    C[w] = a(".fromDate", u).val() == a(".toDate", u).val() ? a(".fromDate",
                        u).val() : a(".fromDate", u).val() + "-" + a(".toDate", u).val()
                } if (!e(B)) C.bbx_router_condition_map_tod_min_day = B.slider("values", 0) * 5 + "-" + B.slider("values", 1) * 5;
                if (a(".filter_type", u).val() != "" && a(".filter_value", u).val() != "") {
                    C.filter_type = a(".filter_type", u).val();
                    C.filter_value = a(".filter_value", u).val()
                }
                if (C.filter_type && C.filter_type !== "cid_regex") C.filter_value = C.filter_value.replace(/[^0-9+]/g, "");
                C.bbx_router_condition_map_id = n;
                C.action = "modify_condition_map";
                C.template = "json";
                a.ajax({
                    url: "/gui/configure/dynamic/routers",
                    data: C,
                    dataType: "json",
                    success: function (G) {
                        g(q, G.data.bbx_router_condition_map)
                    }
                });
                v.hide()
            })
        }, j = function (o, n, q) {
            if (!q) return false;
            q = q.split("-", 2);
            var u = parseInt(q[0]),
                v = parseInt(q[1]);
            switch (n) {
            case "wday":
                var x = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
                u == v ? a('<div class="range">' + x[u - 1] + "s</div>").appendTo(o).data("range", q).data("type", n) : a('<div class="range">' + x[u - 1] + "-" + x[v - 1] + "</div>").appendTo(o).data("range", q).data("type", n);
                break;
            case "min_day":
                a('<div class="range">' +
                    (new Date.today).addSeconds(u * 60).toString("h:mmtt") + "-" + (new Date.today).addSeconds(v * 60).toString("h:mmtt") + "</div>").appendTo(o).data("range", q).data("type", n);
                break;
            case "specific_date":
                q[1] && q[1] != "" ? a('<div class="range">' + Date.parse(q[0]).toString("MMMM dd, yyyy") + "-" + Date.parse(q[1]).toString("MMMM dd, yyyy") + "</div>").appendTo(o).data("range", q).data("type", n) : a('<div class="range">' + Date.parse(q[0]).toString("MMMM dd, yyyy") + "</div>").appendTo(o).data("range", q).data("type", n);
                break;
            case "recurring_date":
                q[1] &&
                    q[1] != "" ? a('<div class="range">' + Date.parse(q[0]).toString("MMMM dd") + "-" + Date.parse(q[1]).toString("MMMM dd") + "</div>").appendTo(o).data("range", q).data("type", n) : a('<div class="range">' + Date.parse(q[0]).toString("MMMM dd") + "</div>").appendTo(o).data("range", q).data("type", n)
            }
            return true
        }, g = function (o, n) {
            o.empty();
            var q = false,
                u = false;
            if (!(q = j(o, "specific_date", n.bbx_router_condition_map_specific_date)))
                if (!(q = j(o, "recurring_date", n.bbx_router_condition_map_recurring_date))) q = j(o, "wday", n.bbx_router_condition_map_tod_wday);
            u = j(o, "min_day", n.bbx_router_condition_map_tod_min_day);
            !q && !u && o.append("(Any Time)");
            if (n.filter_type && n.filter_value) switch (n.filter_type) {
            case "cid_start":
                a('<div class="filter">Number Starts With <div>').append(document.createTextNode(n.filter_value)).appendTo(o).data("value", n.filter_value).data("type", n.filter_type);
                break;
            case "cid_end":
                a('<div class="filter">Number Ends With <div>').append(document.createTextNode(n.filter_value)).appendTo(o).data("value", n.filter_value).data("type", n.filter_type);
                break;
            case "cid_exact":
                a('<div class="filter">Number Is <div>').append(document.createTextNode(n.filter_value)).appendTo(o).data("value", n.filter_value).data("type", n.filter_type);
                break;
            case "cid_regex":
                a('<div class="filter">Number Matches <div>').append(document.createTextNode(n.filter_value)).appendTo(o).data("value", n.filter_value).data("type", n.filter_type)
            }
        }, c = function (o, n, q, u, v) {
            var x = a(n).clone().appendTo(a(".routerActions", o));
            x.data("bbx_router_condition_map_id", u.bbx_router_condition_map_id);
            var z = a(".routerTimes", x).empty();
            g(z, u);
            a("a.opChange", x).bind("click", function (B) {
                B.preventDefault()
            }).qtip({
                style: {
                    tip: "leftMiddle",
                    width: {
                        max: 650
                    }
                },
                content: q,
                show: {
                    when: {
                        event: "click"
                    }
                },
                hide: {
                    when: {
                        event: "click2"
                    }
                },
                position: {
                    target: a(".routerTimeBox", x),
                    corner: {
                        target: "rightMiddle",
                        tooltip: "leftMiddle"
                    }
                },
                api: {
                    onRender: function (B) {
                        f.call(this, B, u.bbx_router_condition_map_id, z)
                    },
                    beforeShow: function () {
                        var B = this.elements.content;
                        a(".filter", z).each(function () {
                            a(".filter_type", B).val(a(this).data("type")).trigger("change");
                            a(".filter_value", B).val(a(this).data("value"))
                        });
                        a(".range", z).each(function () {
                            switch (a(this).data("type")) {
                            case "wday":
                                a(".pickdays", B).trigger("click");
                                var C = a(".slider-weekday", B);
                                C.slider("values", 0, a(this).data("range")[0] - 1);
                                if (a(this).data("range")[0] > a(this).data("range")[1]) a(this).data("range")[1] == 7 ? C.slider("values", 1, 0) : C.slider("values", 1, a(this).data("range")[1]);
                                else C.slider("values", 1, a(this).data("range")[1] - 1);
                                C.trigger("slide", {
                                    values: [C.slider("values", 0), C.slider("values",
                                        1)]
                                });
                                break;
                            case "min_day":
                                C = a(".slider-minute", B);
                                C.slider("values", 0, a(this).data("range")[0] / 5);
                                C.slider("values", 1, a(this).data("range")[1] / 5);
                                C.trigger("slide", {
                                    values: [a(this).data("range")[0] / 5, a(this).data("range")[1] / 5]
                                });
                                break;
                            case "recurring_date":
                                a(".pickdates", B).trigger("click");
                                a(".fromDate", B).datepicker("option", "dateFormat", "mm/dd").datepicker("setDate", a(this).data("range")[0]);
                                if (!a(this).data("range")[1] || a(this).data("range")[1] == "") a(this).data("range")[1] = a(this).data("range")[0];
                                a(".toDate", B).datepicker("option", "dateFormat", "mm/dd").datepicker("setDate", a(this).data("range")[1]);
                                a(".anyYear", B).val("anyyear");
                                break;
                            case "specific_date":
                                a(".pickdates", B).trigger("click");
                                a(".fromDate", B).datepicker("option", "dateFormat", "mm/dd/yy").datepicker("setDate", a(this).data("range")[0]);
                                if (!a(this).data("range")[1] || a(this).data("range")[1] == "") a(this).data("range")[1] = a(this).data("range")[0];
                                a(".toDate", B).datepicker("option", "dateFormat", "mm/dd/yy").datepicker("setDate", a(this).data("range")[1]);
                                a(".anyYear", B).val("thisyear")
                            }
                        })
                    },
                    onShow: function () {
                        a(this.elements.content).find(".checksliderContainer").trigger("redraw")
                    }
                }
            });
            x.bind("remove", function () {
                var B = a("a.opChange", a(this));
                B.data("qtip") && B.qtip("destroy")
            });
            a("a.opDeleteRouter", x).bind("click", function (B) {
                B.preventDefault();
                confirm("This will delete this condition. Continue?") && a.ajax({
                    url: "/gui/configure/dynamic/routers",
                    data: {
                        action: "delete_condition_map",
                        bbx_router_condition_map_id: a(this).closest(".routerRule").data("bbx_router_condition_map_id"),
                        template: "json"
                    },
                    dataType: "json",
                    success: function () {
                        x.trigger("remove");
                        x.remove();
                        a(".routerRule:visible", o)[1] || o.removeClass("hasRouterRules")
                    }
                })
            });
            x.bind("click", function () {
                o.find(".routerRuleSelected").removeClass("routerRuleSelected");
                a(this).addClass("routerRuleSelected")
            });
            a(".routerList", x).callflowDetail({
                bbx_callflow_id: u.bbx_callflow_id,
                mode: v
            });
            o.addClass("hasRouterRules")
        }, b = function (o, n, q) {
            var u = o.find(".template > .routerRule"),
                v;
            for (v in q.conditions) c(o, u, n, q.conditions[v], q.bbx_user_id ?
                "user" : "standalone");
            q.conditions.length > 0 ? o.addClass("hasRouterRules") : o.removeClass("hasRouterRules");
            o = a(u).clone().appendTo(a(".routerDefaultAction", o));
            a(".routerList", o).callflowDetail({
                bbx_callflow_id: q.bbx_callflow_id_fallback.bbx_callflow_id,
                mode: q.bbx_user_id ? "user" : "standalone"
            });
            a(".routerTimeBox", o).text("Default Action")
        }, l = function (o, n, q, u) {
            var v = a(u);
            if (q.jsRouter) q.bbx_router_id = q.jsRouter.bbx_router_id;
            q.bbx_router_id && a.ajax({
                url: "/gui/configure/dynamic/routers",
                dataType: "json",
                data: {
                    action: "detail",
                    bbx_router_id: q.bbx_router_id,
                    template: "json"
                },
                success: function (x) {
                    q.jsRouter = x.data.routers[0];
                    v.empty().append(o).find(".routerActions").sortable({
                        axis: "y",
                        handle: ".routerTimeBox > .grippy",
                        update: function () {
                            var z = [];
                            a(this).find(".routerRule").each(function () {
                                z.push(a(this).data("bbx_router_condition_map_id"))
                            });
                            a.ajax({
                                url: "/gui/configure/dynamic/routers",
                                dataType: "json",
                                data: {
                                    action: "reorder",
                                    bbx_router_id: q.bbx_router_id,
                                    bbx_router_condition_map_id: z,
                                    template: "json"
                                }
                            })
                        }
                    });
                    a("a.opAddRouterAction", v).bind("click", function (z) {
                        z.preventDefault();
                        a.ajax({
                            url: "/gui/configure/dynamic/routers",
                            data: {
                                action: "create_default_condition_map",
                                template: "json",
                                bbx_router_id: q.jsRouter.bbx_router_id
                            },
                            dataType: "json",
                            success: function (B) {
                                c(v, v.find(".template > .routerRule"), n, B.data.result, q.jsRouter.bbx_user_id ? "user" : "standalone");
                                v.addClass("hasRouterRules")
                            }
                        })
                    });
                    b(v, n, x.data.routers[0])
                }
            })
        };
    a.fn.routerDetail = function (o) {
        var n = this;
        a.getTemplate(o.template || "/ajax-html/routers_template.html",
            function (q) {
                a.getTemplate("/ajax-html/rulerouterPopup.html", function (u) {
                    n.each(function () {
                        l(q, u, o, this)
                    })
                })
            })
    }
})(jQuery);
(function (a) {
    var e = {
        unknown: "/images/typeicons/phone.png",
        user: "/images/typeicons/user.png",
        group: "/images/typeicons/group.png",
        auto_attendant: "/images/typeicons/autoattend.png",
        queue: "/images/typeicons/queue.png",
        conference: "/images/typeicons/conference.png",
        phone: "/images/typeicons/phone.png",
        queue_service: "/images/typeicons/queue_service.png",
        auto_attendant_non_interactive: "/images/typeicons/listrouter.png",
        router: "/images/typeicons/branchrouter.png",
        gateway: "/images/typeicons/provider.png",
        parking: "/images/typeicons/parking.png"
    },
        f = {
            unknown: "Unknown Type",
            user: "Local Extension",
            group: "Group",
            auto_attendant: "Automated Attendant",
            queue: "Queue",
            conference: "Conference",
            phone: "Unassigned Phone",
            queue_service: "Queue Service Extension",
            router: "Call Router",
            gateway: "Gateway",
            parking: "Call Parking"
        }, j = function (u, v) {
            var x = /\{([-a-zA-X0-9_]+)}/,
                z = x.exec(u);
            if (z) {
                for (; z = x.exec(u);) u = u.replace(z[0], v[z[1]] || "");
                return u
            } else return v[u] || ""
        }, g = function (u, v) {
            var x = a();
            if (u.search(/^[0-9]+$/) > -1) u = u.replace(/([0-9])/g, "[x() -]?$1");
            for (var z =
                RegExp(u, "gi"), B, C = 0, w;
                (B = z.exec(v)) !== null;) {
                if (w = B.index - C) {
                    C = v.substr(C, w);
                    x = x.add(a(document.createTextNode(C)))
                }
                x = x.add(a('<span class="highlight" />').text(B[0]));
                C = B.index + B[0].length
            }
            if (w = v.length - C) x = x.add(a(document.createTextNode(v.substr(C, w))));
            return x
        }, c = function (u, v, x) {
            v = {};
            var z = 0,
                B = u.sort(function (w, G) {
                    return cmp(w.label.toLowerCase(), G.label.toLowerCase())
                }),
                C;
            for (C in u)
                if (v[u[C].category]) v[u[C].category].push(u[C]);
                else {
                    z += 1;
                    v[u[C].category] = [u[C]]
                }
            return B = B.slice(0, x.maxValues)
        },
        b = function (u, v, x, z) {
            var B = 0,
                C = a.map(v.searchTypes, function (w) {
                    if (w.match(/^contact/)) return null;
                    else if (w.search(/:primary/) > -1) {
                        B = 1;
                        return w.replace(/:primary/, "")
                    } else return w
                });
            if (C.length > 0) {
                C = {
                    rows: 30,
                    type: C,
                    search_string: u,
                    primary: B
                };
                if (v.directory) C.directory = 1;
                if (v.requirePhone) C.registered_phones = 1;
                a.getJSON("/gui/extension/list", C, function (w) {
                    a.each(w.list, function (G, J) {
                        result = {
                            label: J.show_name || "(Unnamed Extension)",
                            value: J.bbx_extension_id,
                            category: "Local Extensions",
                            number: J.bbx_extension_block_begin,
                            type: f[J.type] || f.unknown,
                            extension_type: J.type,
                            icon: e[J.type] || e.unknown,
                            object_type: "bbx_" + J.type + "_id",
                            object_id: J["bbx_" + J.type + "_id"],
                            bbx_extension_id: J.bbx_extension_id
                        };
                        if (!result[result.object_type]) result[result.object_type] = result.object_id;
                        z.push(result)
                    });
                    z = c(z, u, v);
                    x(z)
                })
            } else {
                z = c(z, u, v);
                x(z)
            }
        }, l = function (u, v, x, z) {
            var B = /^contact:(.+)$/,
                C = a.map(v.searchTypes, function (w) {
                    if (w == "contact") return "private,user,public";
                    else if (w = w.match(B)) return w[1];
                    return null
                });
            C.length > 0 ? a.getJSON("/gui/contact/search", {
                scope: C.join(","),
                template: "json",
                rows: 30,
                search_string: u,
                extra_search: u
            }, function (w) {
                var G = w.contact;
                a.each(G, function (J, E) {
                    a.each(a.grep(E.bbx_contact_labels || [], function (M) {
                        return M.bbx_contact_label_property === "TEL"
                    }), function (M, R) {
                        z.push({
                            label: E.bbx_contact_first_name + " " + E.bbx_contact_last_name,
                            value: E.bbx_contact_id,
                            type: R.bbx_contact_label_type,
                            number: R.bbx_contact_label_value,
                            icon: e[E.bbx_contact_scope] || e.unknown,
                            category: n[E.bbx_contact_scope],
                            object_type: "bbx_contact_id",
                            object_id: E.bbx_contact_id,
                            bbx_contact_id: G
                        })
                    })
                });
                b(u, v, x, z)
            }) : b(u, v, x, z)
        }, o = {
            searchTypes: ["all"],
            hiddenFormat: "{object_type}:{object_id}",
            textFormat: "number",
            validate: ["routable"],
            mustValidate: false,
            maxValues: 10,
            categories: true
        }, n = {
            "private": "Address Book",
            "public": "Global Contacts",
            user: "Local Users"
        }, q = {
            search: function (u) {
                var v = a(this);
                if (v.is(".extensionPickerReady")) {
                    var x = v.data("params");
                    a.getREST("/gui/extension/extension", u, function (z) {
                        if (z = z.extension[0]) {
                            z.value = z.bbx_extension_id;
                            z.number = z.bbx_extension_block_begin;
                            v.val(j(x.textFormat, z)).trigger("change", {
                                autoinit: true
                            });
                            x.hiddenElem.val
                C = {
                    rows: 30,
                    type: C,
                    search_string: u,
                    primary: B
                };
                if (v.directory) C.directory = 1;
                if (v.requirePhone) C.registered_phones = 1;
                a.getJSON("/gui/extension/list", C, function (w) {
                    a.each(w.list, function (G, J) {
                        result = {
                            label: J.show_name || "(Unnamed Extension)",
                            value: J.bbx_extension_id,
                            category: "Local Extensions",
                            number: J.bbx_extension_block_begin,
                            type: f[J.type] || f.unknown,
                            extension_type: J.type,
                            icon: e[J.type] || e.unknown,
                            object_type: "bbx_" + J.type + "_id",
                            object_id: J["bbx_" + J.type + "_id"],
                            bbx_extension_id: J.bbx_extension_id
                        };
                        if (!result[result.object_type]) result[result.object_type] = result.object_id;
                        z.push(result)
                    });
                    z = c(z, u, v);
                    x(z)
                })
            } else {
                z = c(z, u, v);
                x(z)
            }
        }, l = function (u, v, x, z) {
            var B = /^contact:(.+)$/,
                C = a.map(v.searchTypes, function (w) {
                    if (w == "contact") return "private,user,public";
                    else if (w = w.match(B)) return w[1];
                    return null
                });
            C.length > 0 ? a.getJSON("/gui/contact/search", {
                scope: C.join(","),
                template: "json",
                rows: 30,
                search_string: u,
                extra_search: u
            }, function (w) {
                var G = w.contact;
                a.each(G, function (J, E) {
                    a.each(a.grep(E.bbx_contact_labels || [], function (M) {
                        return M.bbx_contact_label_property === "TEL"
                    }), function (M, R) {
                        z.push({
                            label: E.bbx_contact_first_name + " " + E.bbx_contact_last_name,
                            value: E.bbx_contact_id,
                            type: R.bbx_contact_label_type,
                            number: R.bbx_contact_label_value,
                            icon: e[E.bbx_contact_scope] || e.unknown,
                            category: n[E.bbx_contact_scope],
                            object_type: "bbx_contact_id",
                            object_id: E.bbx_contact_id,
                            bbx_contact_id: G
                        })
                    })
                });
                b(u, v, x, z)
            }) : b(u, v, x, z)
        }, o = {
            searchTypes: ["all"],
            hiddenFormat: "{object_type}:{object_id}",
            textFormat: "number",
            validate: ["routable"],
            mustValidate: false,
            maxValues: 10,
            categories: true
        }, n = {
            "private": "Address Book",
            "public": "Global Contacts",
            user: "Local Users"
        }, q = {
            search: function (u) {
                var v = a(this);
                if (v.is(".extensionPickerReady")) {
                    var x = v.data("params");
                    a.getREST("/gui/extension/extension", u, function (z) {
                        if (z = z.extension[0]) {
                            z.value = z.bbx_extension_id;
                            z.number = z.bbx_extension_block_begin;
                            v.val(j(x.textFormat, z)).trigger("change", {
                                autoinit: true
                            });
                            x.hiddenElem.val(j(x.hiddenFormat, z)).trigger("change", {
                                autoinit: true
                            })
                        }
                    })
                } else v.one("extensionPickerReady", function () {
                    q.search.call(v[0], u)
                })
            },
            init: function (u) {
                u = a.extend({}, o, u);
                if (typeof u.searchTypes == "string") u.searchTypes = [u.searchTypes];
                var v = function (x, z) {
                    l(x.term, u, z, [])
                };
                return a(this).each(function () {
                    var x = a(this),
                        z;
                    if (!x.data("extensionPicker")) {
                        x.data("extensionPicker", true);
                        if (u.hidden) u.hiddenElem = a(u.hidden);
                        else {
                            z = a(this).next("input[type=hidden][name=" +
                                u.hiddenName + "]");
                            u.hiddenElem = u.hiddenName && z[0] ? a(this).next("input[type=hidden][name=" + u.hiddenName + "]") : u.hiddenName ? a('<input type="hidden">').attr("name", u.hiddenName).insertAfter(a(this)) : a('<input type="hidden"/>').insertAfter(a(this))
                        }
                        u.initialSearch && q.search.call(x[0], u.initialSearch);
                        var B = false,
                            C = false,
                            w = function (G) {
                                u.hiddenElem.val(j(u.hiddenFormat, G));
                                x.val(j(u.textFormat, G));
                                u.hiddenElem.trigger("dirty");
                                u.hiddenElem.trigger("selection", G);
                                x.trigger("dirty");
                                x.trigger("selection",
                                    G);
                                B = true
                            };
                        z = a(this).autocomplete({
                            source: v,
                            minLength: 1,
                            select: function (G, J) {
                                w(J.item);
                                return false
                            },
                            focus: function () {
                                return false
                            },
                            close: function () {
                                u.forcePickFirst && x.val() !== "" && !B && C && w(C)
                            },
                            open: function () {
                                B = false;
                                u.hiddenElem.val("");
                                if (a(this).data("autocomplete")) {
                                    var G = a(this).data("autocomplete").menu,
                                        J = G.element.find(".ui-menu-item:first");
                                    G.element.css("z-index", 99999);
                                    if (u.forcePickFirst && J.data("item.autocomplete")) C = J.data("item.autocomplete");
                                    u.autoSelectFirst && G.activate(a.Event({
                                            type: "mouseenter"
                                        }),
                                        J)
                                }
                            }
                        }).bind("focus", function (G) {
                            a(G.target).css("border-color", "")
                        }).bind("blur", function (G) {
                            u.mustValidate && !u.emptyTriggersSelection && !B && u.hiddenElem.val() == "" && a(G.target).css("border-color", "red");
                            if (u.emptyTriggersSelection && x.val() === "") w({});
                            else B || x.trigger("noselection")
                        }).data("autocomplete");
                        z._renderMenu = function (G, J) {
                            var E = this,
                                M;
                            a.each(J, function (R, O) {
                                if (O.elided) G.append("<li>And " + parseInt(O.elided, 10) + " more..</li>");
                                else {
                                    if (O.category != M && u.categories) {
                                        G.append(a('<li class="ui-autocomplete-category" />').text(O.category));
                                        M = O.category
                                    }
                                    E._renderItem(G, O)
                                }
                            })
                        };
                        z._renderItem = function (G, J) {
                            if (J.number && J.type != undefined) {
                                var E = a('<li><a><img /><span class="label" /><br /><span class="extPickerNumber" /> <span class="extPickerItemType" /></a></li>'),
                                    M = E.find("> a");
                                E.data("item.autocomplete", J);
                                M.find("> img").attr("src", J.icon);
                                M.find("> .label").append(g(this.term, J.label));
                                M.find("> .extPickerNumber").append(g(this.term, format_information(J.number)));
                                M.find("> .extPickerItemType").text(J.type)
                            } else {
                                E = a("<li><a /></li>");
                                E.data("item.autocomplete", J);
                                E.find("> a").text(J.label)
                            }
                            E.appendTo(G);
                            return E
                        };
                        x.data("params", u);
                        x.addClass("extensionPickerReady").trigger("extensionPickerReady")
                    }
                })
            }
        };
    a.fn.extensionPicker = function (u) {
        if (q[u]) return q[u].apply(this, Array.prototype.slice.call(arguments, 1));
        else if (typeof u === "object" || !u) return q.init.apply(this, arguments);
        else a.error("Method " + u + " does not exist on jQuery.extensionPicker")
    }
})(jQuery);
(function (a) {
    var e = {}, f = function (j, g) {
            if (j.data("longest")) {
                var c = Math.round((new Date).getTime() / 1E3) - j.data("longest");
                if (j.data("critical_seconds") && c > j.data("critical_seconds")) j.addClass("critical").removeClass("warning");
                else if (j.data("critical_calls") && g >= j.data("critical_calls")) j.addClass("critical").removeClass("warning");
                else if (j.data("warning_seconds") && c > j.data("warning_seconds")) j.addClass("warning").removeClass("critical");
                else j.data("warning_calls") && g >= j.data("warning_calls") ?
                    j.addClass("warning").removeClass("critical") : j.removeClass("warning critical")
            } else j.removeClass("warning critical")
        };
    a.fn.queueBoard = function (j) {
        console.log('here');
        var g = a(this);
        console.log(g);
        j = a.extend({}, e, j);
        a.getTemplate("/ajax-html/wallboard/queues.html", function (c) {
            g.each(function () {
                var b = a(this);
                a(this).append(a(c));
                b.addClass("queueBoard");
                a.getJSON("/gui/queue/list", {
                    template: "json"
                }, function (l) {
                    b.find(".queueWallCalls:eq(0)").queueCalls({
                        template: "/ajax-html/wallboard/queueCallsBoard.html",
                        data: l.data

                    });
                    l = l.data.fifo;
                    var o = [],
                        n;
                    for (n in l) {
                        l[n].keyname = n;);
                        a(".queueBox", x).bind("resize", function (z) {
                            z.stopPropagation();
                            a(this).css({
                                "font-size": a(this).innerHeight() / 5.5 + "px"
                            })
                        });
                        a(window).debounce("resize", function () {
                            x.fullHeight();
                            fitAll(x, a(".queueBox", x));
                            a(".queueWallCalls", b).css({
                                "font-size": a(window).width() / 70 + "px"
                            })
                        }).trigger("resize")
                    }
                    a(window).bind("tick",
                        function () {
                            a(".queueBox", b).each(function () {
                                if (a(this).data("longest")) {
                                    a(this).find(".queueTime").text(a.timeSince(a(this).data("longest"), {
                                        format: "short",
                                        precision: 4
                                    }));
                                    f(a(this), q[a(this).data("queuename")].length)
                                } else a(this).find(".queueTime").empty()
                            })
                        });
                    Ape.subscribe("user_status");
                    a(window).bind("meteor_user_status", function (z, B) {
                        if (B && B.json && B.json.action === "delete_user")
                            if (u[B.json.user_id]) {
                                agent = u[B.json.user_id];
                                var C = a(".queueBox", b).filter(function () {
                                    return a.inArray(a(this).data("queuename"),
                                        agent.queues) > -1
                                });
                                a(".queueAgentTotal, .queueAgentAvailable", C).each(function () {
                                    a(this).text(parseInt(a(this).text(), 10) - 1)
                                })
                            }
                    });
                    a(window).bind("meteor_queue_status", function (z, B) {
                        if (B.json.action == "refresh") location.reload();
                        else {
                            var C = b.find(".queueWallQueues > .queueBox").filter(function () {
                                return a(this).data("queuename") == B.json.fifo_name
                            });
                            if (C.length != 0) {
                                var w = B.json.fifo_action;
                                if (w == "push") {
                                    C.data("calls", C.data("calls") + 1);
                                    q[B.json.fifo_name].push({
                                        uuid: B.json.unique_id,
                                        timestamp: Math.round((new Date).getTime() /
                                            1E3)
                                    })
                                } else if (w == "abort" || w == "timeout" || w == "consumer_pop") {
                                    var G = B.json.unique_id;
                                    if (w == "consumer_pop") G = B.json.fifo_caller_uuid;
                                    q[B.json.fifo_name] = a.grep(q[B.json.fifo_name], function (O) {
                                        return O.uuid != G
                                    })
                                } else if (w == "bridge-consumer-start" || w == "bridge-consumer-stop") {
                                    var J;
                                    if (J = u[B.json.variable_fifo_outbound_uuid]) {
                                        if (w == "bridge-consumer-start") {
                                            w = -1;
                                            J.calls += 1;
                                            J.available = false
                                        } else if (w == "bridge-consumer-stop" && J.calls != 0) {
                                            w = 1;
                                            J.calls -= 1;
                                            J.available = true
                                        } else return; if (J.status != "1") {
                                            w = 0;
                                            J.available =
                                                false
                                        }
                                        J = uniqueArray(u[B.json.variable_fifo_outbound_uuid].queues);
                                        for (var E in J) {
                                            var M = J[E],
                                                R = b.find(".queueWallQueues > .queueBox").filter(function () {
                                                    return a(this).data("queuename") == M
                                                });
                                            a(".queueAgentAvailable", R).text((parseInt(a(".queueAgentAvailable", R).text()) + w).toString())
                                        }
                                    }
                                } else if (B.json.action == "queue_member_add") {
                                    if (J = u[B.json.user_id]) J.queues.push(B.json.fifo_name);
                                    else J = u[B.json.user_id] = {
                                        queues: B.json.fifo_name,
                                        available: B.json.status_id == "1",
                                        status: B.json.status_id,
                                        calls: 0
                                    };
                                    J.status !=
                                        "2" && a(".queueAgentTotal", C).text(parseInt(a(".queueAgentTotal", C).text()) + 1);
                                    J.calls == 0 && J.status == "1" && a(".queueAgentAvailable", C).text(parseInt(a(".queueAgentAvailable", C).text()) + 1)
                                } else if (B.json.action == "queue_member_delete") {
                                    if (J = u[B.json.user_id])
                                        if (a.inArray(B.json.fifo_name, J.queues) != -1) {
                                            J.queues.splice(a.inArray(B.json.fifo_name, J.queues), 1);
                                            J.status != "2" && a(".queueAgentTotal", C).text(parseInt(a(".queueAgentTotal", C).text()) - 1);
                                            J.calls == 0 && J.status == "1" && a(".queueAgentAvailable", C).text(parseInt(a(".queueAgentAvailable",
                                                C).text()) - 1)
                                        }
                                } else return;
                                E = a.map(q[B.json.fifo_name], function (O) {
                                    return O.timestamp
                                }).sort(function (O, Y) {
                                    return O - Y
                                });
                                E = E[0];
                                C.data("longest", E);
                                a(".queueCallerTotal", C).text(q[B.json.fifo_name].length.toString());
                                if (q[B.json.fifo_name].length > 0) {
                                    C.removeClass("empty");
                                    f(C, q[B.json.fifo_name].length)
                                } else {
                                    C.addClass("empty").removeClass("critical warning");
                                    C.removeData("longest")
                                }
                            }
                        }
                    });
                    a(window).bind("meteor_user_status", function (z, B) {
                        var C = 1;
                        if (B.json.status_id != "1") C = -1;
                        var w, G, J;
                        if (J = u[B.json.user_id]) {
                            J.queues =
                                B.json.queues;
                            w = J.available;
                            G = J.status;
                            J.available = B.json.status_id == "1";
                            J.status = B.json.status_id
                        } else {
                            J = u[B.json.user_id] = {
                                queues: B.json.queues,
                                available: B.json.status_id == "1",
                                status: B.json.status_id,
                                calls: 0
                            };
                            G = "2";
                            w = false
                        }
                        var E = 0;
                        if (G == "2" && J.status != "2") E = 1;
                        else if (G != "2" && J.status == "2") E = -1;
                        var M = uniqueArray(u[B.json.user_id].queues || []),
                            R;
                        for (R in M) {
                            var O = M[R],
                                Y = a.grep(u[B.json.user_id].queues, function (qa) {
                                    return qa == M[R]
                                }).length;
                            G = b.find(".queueWallQueues > .queueBox").filter(function () {
                                return a(this).data("queuename") ==
                                    O
                            });
                            if (E) {
                                var na = parseInt(a(".queueAgentTotal", G).text()) + E * Y;
                                a(".queueAgentTotal", G).text(na.toString());
                                na == 0 ? G.addClass("noagents") : G.removeClass("noagents")
                            }
                            if (w != J.available) {
                                Y = C * (Y - J.calls);
                                a(".queueAgentAvailable", G).text((parseInt(a(".queueAgentAvailable", G).text()) + Y).toString())
                            }
                        }
                    })
                })
            })
        });
        return g
    }
})(jQuery);
(function (a) {
    var e = {}, f = function (c) {
            if (c.is(".oncall")) return false;
            c.addClass("droppedCall dropWrap");
            for (var b = function () {
                c.addClass("droppedCall")
            }, l = function () {
                    c.removeClass("droppedCall")
                }, o = 0; o < 3; o++) {
                setTimeout(b, o * 1E3);
                setTimeout(l, o * 1E3 + 500)
            }
            setTimeout(b, 3E3)
        }, j = function (c, b) {
            return a(".agentBox", b).filter(function () {
                return a.isArray(c) ? a.inArray(a(this).data("bbx_user_id"), c) != -1 : a(this).data("bbx_user_id") == c
            })
        }, g = function (c, b, l) {
            var o = b.name,
                n = b.id,
                q = b.extension,
                u = b.status,
                v = typeof b.lastcall_age ==
                    "undefined" ? false : b.lastcall_age,
                x = b.status_age;
            if (v !== false && v < x) x = v;
            v = b.statuses;
            var z = a(".template .agentBox", c).clone();
            a(".agentName", z).text(o);
            a(".agentExtension", z).text(q);
            z.data("bbx_user_id", n);
            z.data("sort_name", b.sort_name);
            if (u == "1") z.addClass("idle");
            else u == "2" ? z.addClass("offline") : z.addClass("away");
            z.data("status", u);
            z.data("lag", b.lag);
            a(".status", z).text(v[u].bbx_user_status_name);
            o = unixTime() - x;
            z.data("statustime", o);
            a(".statusTime", z).text(a.timeSince(o, {
                format: "medium"
            }));
            if (l) {
                var B = false;
                a(".agentWallAgents .agentBox").each(function () {
                    if (a(this).data("sort_name") > b.sort_name) {
                        z.insertBefore(a(this));
                        B = true;
                        return false
                    }
                });
                B || z.appendTo(a(".agentWallAgents", c))
            } else z.appendTo(a(".agentWallAgents", c));
            return z
        };
    a.fn.agentBoard = function (c) {
        var b = a(this);
        c = a.extend({}, e, c);
        a.getTemplate("/ajax-html/wallboard/agents.html", function (l) {
            console.log(b);
            b.each(function () {
                var o = a(this),
                    n = 0,
                    q = function () {
                        n = 0;
                        a(".agentBoxInner > .sizer", o).each(function () {
                            var u = a(this).outerWidth();
                            if (u > n) n =
                                u
                        });
                        n = n || 150;
                        a(".agentBox", o).css({
                            width: n + 40 + "px"
                        })
                    };
                a(this).append(a(l));
                o.addClass("agentBoard");
                a.getJSON("/gui/queue/list", {
                    template: "json"
                }, function (u) {
                    console.log(u);
                    o.find(".agentWallCalls:eq(0)").queueCalls({
                        template: "/ajax-html/wallboard/queueCallsBoard.html",
                        data: u.data
                    });
                    var v = u.data.agents;
                    a.isEmptyObject(v) && o.addClass("noagents");
                    var x = u.data.status,
                        z = u.data.fifo,
                        B = [],
                        C;
                    for (C in v) B.push(v[C]);
                    B = B.sort(function (G, J) {
                        return G.sort_name < J.sort_name ? -1 : G.sort_name > J.sort_name ? 1 : 0
                    });
                    a.each(B, function () {
                        console.log(this);
                        console.log('here');
                        var G =
                            g(o, {
                                name: this.name,
                                id: this.bbx_user_id,
                                extension: this.extension_value,
                                status: this.status_id,
                                status_age: this.status_age,
                                statuses: x,
                                lastcall_age: this.avail_secs,
                                lag: this.lag,
                                sort_name: this.sort_name
                            });
                        if (this.bridges) {
                            var J = this.bridges[0];
                            G.addClass("oncall");
                            G.data("uuid", J.caller_uuid);
                            a(".cid", G).text(formatCID(J.caller.caller_id_name, J.caller.caller_id_number));
                            var E = unixTime() - J.bridge_start_epoch_ago;
                            G.data("calltime", E);
                            a(".callTime", G).text(a.timeSince(E, {
                                format: "medium"
                            }));
                            a(".callQueueName",
                                G).text(u.data.fifo[J.fifo_name].name)
                        } else if (this.avail_secs < 0) {
                            G.addClass("wrap");
                            J = unixTime() + this.avail_secs * -1;
                            G.data("wraptime", J);
                            a(".wrapTime", G).text(a.timeSince(J, {
                                format: "medium"
                            }));
                            setTimeout(function () {
                                G.removeClass("wrap")
                            }, this.avail_secs * -1E3)
                        }
                        G.data("statustime", unixTime() - this.status_age)
                    });
                    a.each(z, function () {
                        a.each(this.agents.bbx_user_ids, function () {
                            if (this.outbound_fail_count != "0") {
                                var G = j(this.bbx_user_id, a(".agentWallAgents", o));
                                a(".failcount", G).text((parseInt(a(".failcount",
                                    G).text()) + parseInt(this.outbound_fail_count)).toString());
                                G.addClass("droppedCall")
                            }
                        })
                    });
                    q();
                    if (c.autosize) {
                        v = a(".agentBox", o);
                        v.data("ratio", v.width() / v.height());
                        var w = a(".agentWallAgents", o);
                        a(".agentBox", w[0]).live("resize", function (G) {
                            G.stopPropagation();
                            a(this).css({
                                "font-size": a(this).innerHeight() / 5.5 + "px"
                            })
                        });
                        a(window).debounce("resize", function () {
                            w.fullHeight();
                            fitAll(w, a(".agentBox.idle, .agentBox.away", w));
                            a(".agentWallCalls", o).css({
                                "font-size": a(window).width() / 70 + "px"
                            })
                        }).trigger("resize")
                    }
                    a(window).bind("meteor_user_status",
                        function (G, J) {
                            if (J.json.action === "delete_user") {
                                var E = j(J.json.user_id, a(".agentWallAgents", o));
                                if (E && E[0]) {
                                    E.remove();
                                    a(window).trigger("resize")
                                }
                            } else {
                                E = j(J.json.user_id, a(".agentWallAgents", o));
                             	if(J.json.action != "JOIN_CHANNEL"){
	                                a(".status", E).text(x[J.json.status_id].bbx_user_status_name);
	                                var M = unixTime();
	                                E.data("statustime", M);
	                                E.data("status", J.json.status_id);
	                                a(".statusTime", E).text(a.timeSince(M, {
	                                    format: "medium"
	                                }));
	                                if (J.json.status_id == "1") E.addClass("idle").removeClass("offline away");
	                                else J.json.status_id == "2" ? E.addClass("offline").removeClass("idle away") : E.addClass("away").removeClass("idle offline");
	                                a(window).trigger("resize")
	                            }
	                        }
                        });
                    a(window).bind("meteor_queue_status", function (G, J) {
                        if (J.json.action == "refresh") location.reload();
                        else if (J.json.fifo_action == "bridge-consumer-start") {
                            var E = j(J.json.variable_fifo_outbound_uuid, a(".agentWallAgents", o));
                            if (E[0]) {
                                E.addClass("oncall").removeClass("droppedCall wrap ringing").find(".failcount").text("0");
                                var M = unixTime();
                                E.data("calltime", M);
                                E.data("uuid", J.json.unique_id);
                                a(".callTime", E).text(a.timeSince(M, {
                                    format: "medium"
                                }));
                                a(".cid", E).text(formatCID(J.json.caller_caller_id_name, J.json.caller_caller_id_number));
                                a(".callQueueName", E).text(z[J.json.fifo_name].name)
                            }
                        } else if (J.json.fifo_action == "bridge-consumer-stop") {
                            E = j(J.json.variable_fifo_outbound_uuid, a(".agentWallAgents", o));
                            if (E[0]) {
                                if (E.data("status") == 1) {
                                    M = unixTime();
                                    E.data("statustime", M)
                                }
                                E.removeClass("oncall");
                                if (E.data("lag")) {
                                    E.addClass("wrap");
                                    M = unixTime() + E.data("lag");
                                    E.data("wraptime", M);
                                    E.data("status") == 1 && E.data("statustime", M);
                                    a(".wrapTime", E).text(a.timeSince(M, {
                                        format: "medium"
                                    }));
                                    setTimeout(function () {
                                        E.removeClass("wrap dropWrap")
                                    }, E.data("lag") * 1E3)
                                }
                                E.removeData("uuid")
                            }
                        } else if (J.json.action == "queue_member_add") {
                            E = j(J.json.user_id, a(".agentWallAgents", o));
                            if (!E[0]) {
                                E = J.json;
                                g(o, {
                                    name: E.name,
                                    id: E.user_id,
                                    extension: E.extension_value,
                                    status: E.status_id,
                                    status_age: 0,
                                    statuses: x,
                                    sort_name: E.sort_name
                                }, true);
                                q();
                                a(window).trigger("resize")
                            }
                        } else if (J.json.action == "queue_member_delete") {
                            E = j(J.json.user_id, a(".agentWallAgents",
                                o));
                            if (E[0] && J.json.count == 0) {
                                E.remove();
                                a(window).trigger("resize")
                            }
                        } else if (J.json.fifo_action == "post-dial" && J.json.result == "failure" && J.json.acceptable == "false") {
                            M = J.json.fifo_outbound_uuid_list.split(",");
                            M = j(M, a(".agentWallAgents", o));
                            M.removeClass("ringing");
                            a.each(M, function () {
                                var O = a(this);
                                a(".failcount", O).text((parseInt(a(".failcount", O).text()) + 1).toString());
                                if (O.data("lag")) {
                                    O.addClass("wrap");
                                    var Y = unixTime() + O.data("lag");
                                    O.data("wraptime", Y);
                                    a(".wrapTime", O).text(a.timeSince(Y, {
                                        format: "medium"
                                    }));
                                    setTimeout(function () {
                                        O.removeClass("wrap dropWrap")
                                    }, O.data("lag") * 1E3)
                                }
                            });
                            f(M)
                        } else if (J.json.fifo_action == "post-dial" && J.json.result == "failure") {
                            M = J.json.fifo_outbound_uuid_list.split(",");
                            M = j(M, a(".agentWallAgents", o));
                            M.removeClass("ringing")
                        } else if (J.json.fifo_action == "post-dial" && J.json.result == "success") {
                            M = J.json.fifo_outbound_uuid_list.split(",");
                            var R = a.inArray(J.json.variable_bbx_user_id, M);
                            R != -1 && M.splice(R, 1);
                            M = j(M, a(".agentWallAgents", o));
                            M.removeClass("ringing")
                        } else if (J.json.fifo_action ==
                            "pre-dial") {
                            M = J.json.fifo_outbound_uuid_list.split(",");
                            M = j(M, a(".agentWallAgents", o));
                            a(".ringName", M).text(z[J.json.fifo_name].name);
                            a(".cid", M).text(formatCID(J.json.caller_caller_id_name, J.json.caller_caller_id_number));
                            M.removeClass("wrap").addClass("ringing")
                        }
                    });
                    Ape.subscribe("call_unhold");
                    a(window).bind("meteor_call_unhold", function (G, J) {
                        var E = j(J.json.variable_fifo_outbound_uuid, a(".agentWallAgents", o));
                        if (E[0]) {
                            E.data("calltime", parseInt(J.json.variable_fifo_epoch_start_bridge, 10));
                            E.data("uuid",
                                J.json["unique-id"]);
                            a(".callTime", E).text(a.timeSince(E.data("calltime"), {
                                format: "medium"
                            }));
                            a(".cid", E).text(formatCID(J.json["caller-caller-id-name"], J.json["caller-caller-id-number"]));
                            a(".callQueueName", E).text(J.json.bbx_queue_name);
                            E.addClass("oncall").removeClass("droppedCall wrap ringing")
                        }
                    });
                    Ape.subscribe("call_update");
                    a(window).bind("meteor_call_update", function (G, J) {
                        var E = J.json;
                        E.direction == "SEND" && o.find(".agentBox").filter(function () {
                            return a(this).data("uuid") && a(this).data("uuid") ==
                                E["unique-id"]
                        }).find(".cid").text(formatCID(E["sent-callee-id-name"], E["sent-callee-id-number"]))
                    });
                    a(window).bind("tick", function () {
                        a(".agentWallAgents .agentBox", o).each(function () {
                            a(".statusTime", this).text(a.timeSince(a(this).data("statustime"), {
                                format: "medium"
                            }));
                            a(".wrapTime", this).text(a.timeSince(a(this).data("wraptime"), {
                                format: "medium"
                            }));
                            a(".callTime", this).text(a.timeSince(a(this).data("calltime"), {
                                format: "medium"
                            }));
                            var G = a(this),
                                J = x[a(this).data("status")].bbx_user_status_warning_seconds,
                                E = x[a(this).data("status")].bbx_user_status_critical_seconds;
                            if (!G.hasClass("oncall")) {
                                var M = Math.round((new Date).getTime() / 1E3) - G.data("statustime");
                                if (E && M > E) G.addClass("critical").removeClass("warning");
                                else J && M >= J ? G.addClass("warning").removeClass("critical") : G.removeClass("warning critical")
                            }
                        })
                    })
                })
            })
        });
        return b
    }
})(jQuery);
(function (a) {
    var e = function (j, g, c) {
        var b = a(".queueAgentTable", g),
            l = a(".template .queueAgentRow", g).clone();
        a(".name", l).text(j.name);
        a(".status", l).val(j.status_id);
        a(".extension", l).text(format_information(j.extension_value));
        l.data("extension", j.extension_value);
        l.data("sort_name", j.sort_name);
        if (j.status_id == "1") l.addClass("online");
        else j.status_id == "2" ? l.addClass("offline") : l.addClass("away");
        a(".statustext", l).text(a(".status option:selected", l).text());
        l.addClass("userStatus" + j.status_id);
        g = Math.round((new Date).getTime() / 1E3) - j.status_age;
        a(".statusTime", l).text(a.timeSince(g, {
            precision: 2,
            format: "medium"
        }));
        l.data("time", g);
        a("a.opCall", l).bind("click", function (n) {
            n.preventDefault();
            a.getJSON("/gui/freeswitch/originate", {
                destination: j.extension_value,
                caller_id_name: j.name
            }, function () {})
        });
        a("input[name=bbx_user_id]", l).val(j.bbx_user_id);
        var o;
        c && a(".queueAgentRow", b).each(function () {
            if (a(this).data("sort_name") > j.sort_name) {
                l.insertBefore(this);
                o = true;
                return false
            }
        });
        o || l.appendTo(b);
        return l
    }, f = function (j) {
            var g = {}, c = {};
            a.getJSONCached("/gui/permission/check", {
                bbx_permission_name: "EAVESDROP"
            }, 36E5, function (b) {
                trueish(b.self.EAVESDROP) && j.addClass("eavesdropEnabled")
            });
            a(window).bind("tick", function () {
                j.find(".queueAgentTable .queueAgentRow").each(function () {
                    var b = a(this).data("time");
                    a(this).find(".statusTime").text(a.timeSince(b, {
                        precision: 2,
                        format: "medium"
                    }));
                    a(this).find(".queueAgentCallsRow").each(function () {
                        var l = a(this).data("time");
                        a(this).find(".callTime").text(a.timeSince(l, {
                            precision: 2,
                            format: "medium"
                        }))
                    })
                })
            });
            a(window).bind("meteor_user_status", function (b, l) {
                l && l.json && l.json.action === "delete_user" && g[l.json.user_id] && g[l.json.user_id].dom.remove()
            });
            a(window).bind("meteor_queue_status", function (b, l) {
                var o;
                if (o = g[l.json.variable_fifo_outbound_uuid]) {
                    var n = l.json.fifo_action,
                        q = l.json;
                    if (n == "bridge-consumer-start") {
                        o.dom.addClass("oncall");
                        var u = j.find(".queueAgentCallsRow").filter(function () {
                            return a(this).data("uuid") == q.unique_id
                        });
                        if (u[0]) a(".callName", u).text(formatCID(q.caller_caller_id_name,
                            q.caller_caller_id_number));
                        else {
                            u = a(".template .queueAgentCallsRow", j).clone();
                            u.data("uuid", q.unique_id);
                            n = Math.round((new Date).getTime() / 1E3);
                            u.data("time", n);
                            a(".callName", u).text(formatCID(q.caller_caller_id_name, q.caller_caller_id_number));
                            a(".callTime", u).text(a.timeSince(parseInt(n), {
                                format: "medium"
                            }));
                            c[l.json.fifo_name] && a(".queueName", u).text(c[l.json.fifo_name].name);
                            a(".qamCallsTable", o.dom).append(u);
                            a("a.eavesdrop", u).bind("click", function (v) {
                                v.preventDefault();
                                a.getJSON("/gui/freeswitch/eavesdrop", {
                                    template: "json",
                                    uuid: u.data("uuid")
                                }, function () {})
                            })
                        }
                    } else if (n == "bridge-consumer-stop") {
                        o.dom.find(".queueAgentCallsRow").filter(function () {
                            return a(this).data("uuid") == q.unique_id
                        }).remove();
                        o.dom.find(".queueAgentCallsRow").length == 0 && o.dom.removeClass("oncall")
                    }
                } else if (l.json.action == "queue_member_add") {
                    if (!g[l.json.user_id]) {
                        o = l.json;
                        o.bbx_user_id = o.user_id;
                        o.status_age = 0;
                        n = e(o, j, true);
                        g[o.bbx_user_id] = {
                            dom: n
                        }
                    }
                } else if (l.json.action == "queue_member_delete" && l.json.count == 0)
                    if (o = g[l.json.user_id]) {
                        o.dom.remove();
                        delete g[l.json.user_id]
                    }
            });
            Ape.subscribe(["user_status", "call_update"]);
            a(window).bind("meteor_user_status", function (b, l) {
                var o;
                if (l.json.action !== "JOIN_CHANNEL") {
                    if (o = g[l.json.user_id].dom) {
                        a(".status", o).val(l.json.status_id);
                        a(".statustext", o).text(a(".status option:selected", o).text());
                        o.attr("class", o.attr("class").replace(/ ?userStatus\d+ ?/g, " ")).addClass("userStatus" + l.json.status_id);
                        if (l.json.status_id == "1") o.addClass("online").removeClass("offline away");
                        else l.json.status_id == "2" ? o.addClass("offline").removeClass("online away") :
                            o.addClass("away").removeClass("online offline");
                        var n = Math.round((new Date).getTime() / 1E3);
                        o.data("time", n);
                        a(".statusTime", o).text(a.timeSince(n, {
                            precision: 2,
                            format: "medium"
                        }))
                    }
                }
            });
            a(window).bind("meteor_call_update", function (b, l) {
                var o = l.json;
                o.direction == "SEND" && j.find(".queueAgentCallsRow").filter(function () {
                    return a(this).data("uuid") == o["unique-id"]
                }).find(".callName").text(formatCID(o["sent-callee-id-name"], o["sent-callee-id-number"]))
            });
            a.getJSON("/gui/queue/list", {
                template: "json"
            }, function (b) {
                a.getJSONCached("/gui/permission/check", {
                    bbx_permission_name: ["EDIT_QUEUE_AGENT_STATUS"]
                }, 36E5, function (l) {
                    var o = [],
                        n = b.data.status;
                    c = b.data.fifo;
                    var q = a(".status", j);
                    a.each(n, function () {
                        a("option:first", q).attr("value") > this.bbx_user_status_id ? q.prepend(a("<option />").val(this.bbx_user_status_id).text(this.bbx_user_status_name)) : q.append(a("<option />").val(this.bbx_user_status_id).text(this.bbx_user_status_name))
                    });
                    trueish(l.self.EDIT_QUEUE_AGENT_STATUS) || q.disable("permission_queueAgentManager_js");
                    for (var u in b.data.agents) o.push(b.data.agents[u]);
                    o.sort(function (v, x) {
                        var z = v.sort_name,
                            B = x.sort_name;
                        return z < B ? -1 : z > B ? 1 : 0
                    });
                    a(".queueAgentTable", j);
                    a.each(o, function () {
                        var v = e(this, j);
                        g[this.bbx_user_id] = {
                            dom: v
                        };
                        if (this.bridges) {
                            v.addClass("oncall");
                            a.each(this.bridges, function () {
                                var x = a(".template .queueAgentCallsRow", j).clone();
                                x.data("uuid", this.consumer.uuid);
                                var z = Math.round((new Date).getTime() / 1E3 - this.bridge_start_epoch_ago);
                                x.data("time", z);
                                a(".callTime", x).text(a.timeSince(parseInt(z), {
                                    format: "medium"
                                }));
                                a(".callName", x).text(formatCID(this.caller.caller_id_name,
                                    this.caller.caller_id_number));
                                a(".queueName", x).text(b.data.fifo[this.fifo_name].name);
                                a("a.eavesdrop", x).bind("click", function (B) {
                                    B.preventDefault();
                                    a.getJSON("/gui/freeswitch/eavesdrop", {
                                        template: "json",
                                        uuid: x.data("uuid")
                                    }, function () {})
                                });
                                a(".qamCallsTable", v).append(x)
                            })
                        }
                    })
                })
            })
        };
    a.fn.queueAgentManager = function (j) {
        j || (j = {});
        var g = a(this);
        a.getTemplate(j.template || "/ajax-html/queueAgentManager.html", function (c) {
            g.each(function () {
                var b = a(c).appendTo(a(this));
                f(b)
            })
        });
        return g
    }
})(jQuery);
(function (a) {
    var e = function (f, j, g) {
        var c = a(g);
        a("a.opUnassign", f).live("click", function (b) {
            b.preventDefault();
            var l = a(this).closest(".routerItem");
            b = l.data("eem").bbx_extension_entity_map_id;
            var o = a(this).closest(".routerWrap");
            if (!confirm("This will permanently remove all forwarding actions and time-based rules associated with this extension. Continue?")) return false;
            b && a.getJSON("/gui/configure/dynamic/user_routers", {
                action: "unassign",
                bbx_extension_entity_map_id: b,
                template: "json"
            }, function () {
                o.empty().append(a(".noActions",
                    c).clone()).find(".extension").text(format_information(l.data("eem").bbx_extension_id.bbx_extension_value))
            })
        });
        a("a.opsAddRouter", f).live("click", function (b) {
            b.preventDefault();
            var l = a(this),
                o = l.closest(".routerItem"),
                n = o.data("eem");
            a.getJSON("/gui/configure/dynamic/user_routers", {
                action: "assign",
                bbx_extension_entity_map_id: n.bbx_extension_entity_map_id,
                template: "json"
            }, function (q) {
                if (q.data.bbx_router_id > 0) {
                    n.bbx_router_id = {
                        bbx_router_id: q.data.bbx_router_id
                    };
                    o.data("eem", n);
                    l.closest(".routerWrap").routerDetail({
                        mode: "user",
                        bbx_router_id: q.data.bbx_router_id,
                        template: "/ajax-html/routers_template_fmfm.html"
                    })
                }
            })
        });
        a.each(j, function () {
            var b = a(".routerItem", c).clone().appendTo(f);
            a(".extension", b).text(format_information(this.bbx_extension_id.bbx_extension_value));
            this.bbx_router_id.bbx_router_id ? a(".routerWrap", b).routerDetail({
                bbx_router_id: this.bbx_router_id.bbx_router_id,
                template: "/ajax-html/routers_template_fmfm.html"
            }) : a(".noActions", c).clone().appendTo(a(".routerWrap", b).empty()).find(".extension").text(format_information(this.bbx_extension_id.bbx_extension_value));
            b.data("eem", this)
        })
    };
    a.fn.userRouter = function (f) {
        elems = this;
        a.getTemplate(f.template || "/ajax-html/user_router.html", function (j) {
            elems.each(function () {
                f.json && e(this, f.json, j)
            })
        });
        return elems
    }
})(jQuery);
(function (a) {
    var e = function (f) {
        var j = f.replace(/\\;/g, "%ESCAPED_SEMICOLON%").split(";"),
            g = {};
        a.each(["pobox", "extended", "street", "city", "state", "postcode", "country"], function (c, b) {
            g[b] = j[c].replace(/%ESCAPED_SEMICOLON%/g, ";").replace(/\\(.)/g, "$1")
        });
        return g
    };
    (function () {
        var f = function (c, b, l, o) {
            o = o || {};
            var n = a('<div class="addressViewEdit"><div class="addressView addressOverlay"><div class="addressViewHeader"></div><div class="addressViewBody"></div></div><div class="addressEdit addressOverlay"><div class="addressEditHeader"></div><div class="addressEditBody"></div></div>').appendTo(b),
                q = a(".addressView", n),
                u = a(".addressViewHeader", q),
                v = a(".addressViewBody", q),
                x = a(".addressEdit", n),
                z = a(".addressEditHeader", x),
                B = a(".addressEditBody", x);
            a.getTemplate("/ajax-html/ccc_address_book_headers.html", function (C) {
                var w = a(C);
                C = a(".view", w);
                var G = a(".edit", w);
                a(".name", w).text(l.bbx_contact_first_name + " " + l.bbx_contact_last_name);
                q.add(x).bind("name", function (J, E) {
                    a(".name", u.add(z)).text(E.bbx_contact_first_name + " " + E.bbx_contact_last_name)
                });
                o.noDelete ? a(".opUnmapContact", w).remove() : a(".opUnmapContact",
                    w).bind("click", function (J) {
                    J.preventDefault();
                    confirm("Remove this contact from your address book?") && a.deleteREST("/gui/contact/map", {
                        bbx_contact_id: l.bbx_contact_id
                    }, function () {
                        b.empty().addressBook()
                    })
                });
                w = function (J) {
                    J && J.preventDefault();
                    B.empty().addressEdit(l.bbx_contact_id, o);
                    x.show();
                    q.hide()
                };
                a(".opEditContact", C).bind("click", w);
                a(".opBack", G).bind("click", function (J) {
                    J.preventDefault();
                    v.empty().addressView(l.bbx_contact_id, o);
                    q.show();
                    x.hide()
                });
                a(".opBack", C).bind("click", function (J) {
                    J.preventDefault();
                    b.empty().addressBook()
                });
                C.appendTo(u);
                G.appendTo(z);
                if (c == "edit") w();
                else {
                    x.hide();
                    v.addressView(l.bbx_contact_id, o)
                }
            })
        }, j = function (c) {
                c.preventDefault();
                var b = a(this).closest(".addressBook");
                a.getTemplate("/ajax-html/contactNewPopup.html", function (l) {
                    var o = a(l).appendTo(b);
                    a(".cancel", o).one("click", function (n) {
                        n.preventDefault();
                        o.remove()
                    });
                    a(".searchNewContact", o).extensionPicker({
                        searchTypes: ["user:primary"],
                        hiddenName: "bbx_user_id_contact",
                        hiddenFormat: "object_id",
                        textFormat: "label",
                        autoSelectFirst: true
                    });
                    a("form", o).ajaxForm({
                        accept: "application/json",
                        success: function (n) {
                            if (typeof n == "string") n = a.parseJSON(n);
                            n = n.contact;
                            o.remove();
                            f("edit", b, n)
                        }
                    })
                })
            }, g = function (c, b, l) {
                var o = a(l);
                a(c).empty();
                a.each(b, function (n, q) {
                    var u = a(".template > .addressRow", o).clone().appendTo(a(".addressList", o));
                    a(".firstName", u).text(q.bbx_contact_first_name);
                    a(".lastName", u).text(q.bbx_contact_last_name);
                    u.data("contact", q)
                });
                o.appendTo(c);
                a(".opAddContact", o).bind("click", j);
                a(".addressRow", o).bind("click", function (n) {
                    n.preventDefault();
                    f("view", o, a(this).data("contact"))
                });
                a(".opMyContact", o).bind("click", function (n) {
                    n.preventDefault();
                    a.getREST("/gui/contact/me", {}, function (q) {
                        f("view", o, q.me, {
                            noDelete: true
                        })
                    })
                })
            };
        a.fn.addressBook = function (c) {
            c = typeof c == "undefined" ? {} : c;
            elems = this;
            elems.addClass("addressBookWidget");
            a.getTemplate(c.template || "/ajax-html/ccc_address_book.html", function (b) {
                a.getJSON("/gui/vcard/types", {}, function () {
                    elems.each(function () {
                        var l = this;
                        c.json ? g(l, c.json, b, vcd) : a.getJSON("/gui/contact/addressbook", {
                                no_labels: 1
                            },
                            function (o) {
                                g(l, o.addressbook, b, c)
                            })
                    })
                })
            });
            return elems
        }
    })();
    (function () {
        var f = ["TEL", "ORG", "ADR", "EMAIL", "IMPP"],
            j = {}, g = function (b) {
                b.preventDefault();
                (b = a(this).data("number")) ? a.post("/gui/freeswitch/originate", {
                    destination: b,
                    caller_id_name: "Calling Contact..."
                }) : console_log('Error: a.call clicked, has no "number" data element', this)
            }, c = function (b, l, o, n) {
                var q = function (z) {
                    if (!j[z.bbx_contact_label_property].valid_types) return "";
                    var B = [];
                    a.each(j[z.bbx_contact_label_property].valid_types, function (C,
                        w) {
                        z.bbx_contact_label_type.indexOf(w.type) > -1 && B.push(w.display_name)
                    });
                    return B.join(", ")
                };
                b.addClass("view");
                a(".name", b).text(o.bbx_contact_first_name + " " + o.bbx_contact_last_name);
                n.noCall || a(".opCall", b[0]).live("click", g);
                var u = false,
                    v;
                for (v in o.bbx_contact_labels) {
                    u = true;
                    break
                }
                o.bbx_contact_labels_by_name = {};
                if (u) {
                    a(".noLabelMessage", b).remove();
                    a.each(o.bbx_contact_labels, function (z, B) {
                        o.bbx_contact_labels_by_name[B.bbx_contact_label_property] = o.bbx_contact_labels_by_name[B.bbx_contact_label_property] || [];
                        o.bbx_contact_labels_by_name[B.bbx_contact_label_property].push(B)
                    })
                }
                a.each(f, function (z, B) {
                    o.bbx_contact_labels_by_name[B] || a("tr." + B + "-TR", b).remove()
                });
                a("tr.name-TR", b).remove();
                if (o.extensions && !n.noLocal)
                    for (var x in o.extensions) {
                        n = o.extensions[x];
                        u = a(".local", l).clone().appendTo(a(".local-TR > td.content", b));
                        a(".value", u).text(format_information(n.bbx_extension_value));
                        a("a.opCall", u).data("number", n.bbx_extension_block_begin)
                    } else a("tr.local-TR", b).remove();
                a.each(o.bbx_contact_labels_by_name.TEL || [], function (z, B) {
                    var C = a(".TEL", l).clone().appendTo(a(".TEL-TR > td.content", b));
                    C.closest("tr").show();
                    a(".value", C).text(format_information(B.bbx_contact_label_value.replace(/[()-]/g, ""), {
                        no_auto_split: true
                    }));
                    a("a.opCall", C).data("number", B.bbx_contact_label_value);
                    a(".contactType", C).text(q(B))
                });
                a.each(o.bbx_contact_labels_by_name.ORG || [], function (z, B) {
                    var C = a(".ORG", l).clone().appendTo(a(".ORG-TR > td.content", b));
                    C.closest("tr").show();
                    a(".value", C).text(B.bbx_contact_label_value.replace(/\\(.)/g,
                        "$1"));
                    a(".contactType", C).text(q(B))
                });
                a.each(o.bbx_contact_labels_by_name.ADR || [], function (z, B) {
                    var C = a(".ADR", l).clone().appendTo(a(".ADR-TR > td.content", b));
                    C.closest("tr").show();
                    var w = e(B.bbx_contact_label_value),
                        G = "";
                    if (w.pobox) G += "P.O. Box " + w.pobox + "\n";
                    if (w.extended) G += w.extended + "\n";
                    if (w.street) G += w.street + "\n";
                    if (w.city || w.state || w.postcode) {
                        if (w.city) {
                            G += w.city;
                            G += w.state ? ", " : " "
                        }
                        if (w.state) G += w.state + " ";
                        if (w.postcode) G += w.postcode + "\n"
                    }
                    if (w.country) G += w.country;
                    w = G = G.replace(/&/,
                        "&amp;").replace(/</gm, "&lt;").replace(/>/gm, "&gt;").replace(/\n+$/m, "").replace(/\n/gm, "<br />");
                    a(".value", C).html(w);
                    a(".contactType", C).text(q(B))
                });
                a.each(o.bbx_contact_labels_by_name.EMAIL || [], f    var B = [];
                    a.each(j[z.bbx_contact_label_property].valid_types, function (C,
                        w) {
                        z.bbx_contact_label_type.indexOf(w.type) > -1 && B.push(w.display_name)
                    });
                    return B.join(", ")
                };
                b.addClass("view");
                a(".name", b).text(o.bbx_contact_first_name + " " + o.bbx_contact_last_name);
                n.noCall || a(".opCall", b[0]).live("click", g);
                var u = false,
                    v;
                for (v in o.bbx_contact_labels) {
                    u = true;
                    break
                }
                o.bbx_contact_labels_by_name = {};
                if (u) {
                    a(".noLabelMessage", b).remove();
                    a.each(o.bbx_contact_labels, function (z, B) {
                        o.bbx_contact_labels_by_name[B.bbx_contact_label_property] = o.bbx_contact_labels_by_name[B.bbx_contact_label_property] || [];
                        o.bbx_contact_labels_by_name[B.bbx_contact_label_property].push(B)
                    })
                }
                a.each(f, function (z, B) {
                    o.bbx_contact_labels_by_name[B] || a("tr." + B + "-TR", b).remove()
                });
                a("tr.name-TR", b).remove();
                if (o.extensions && !n.noLocal)
                    for (var x in o.extensions) {
                        n = o.extensions[x];
                        u = a(".local", l).clone().appendTo(a(".local-TR > td.content", b));
                        a(".value", u).text(format_information(n.bbx_extension_value));
                        a("a.opCall", u).data("number", n.bbx_extension_block_begin)
                    } else a("tr.local-TR", b).remove();
                a.each(o.bbx_contact_labels_by_name.TEL || [], function (z, B) {
                    var C = a(".TEL", l).clone().appendTo(a(".TEL-TR > td.content", b));
                    C.closest("tr").show();
                    a(".value", C).text(format_information(B.bbx_contact_label_value.replace(/[()-]/g, ""), {
                        no_auto_split: true
                    }));
                    a("a.opCall", C).data("number", B.bbx_contact_label_value);
                    a(".contactType", C).text(q(B))
                });
                a.each(o.bbx_contact_labels_by_name.ORG || [], function (z, B) {
                    var C = a(".ORG", l).clone().appendTo(a(".ORG-TR > td.content", b));
                    C.closest("tr").show();
                    a(".value", C).text(B.bbx_contact_label_value.replace(/\\(.)/g,
                        "$1"));
                    a(".contactType", C).text(q(B))
                });
                a.each(o.bbx_contact_labels_by_name.ADR || [], function (z, B) {
                    var C = a(".ADR", l).clone().appendTo(a(".ADR-TR > td.content", b));
                    C.closest("tr").show();
                    var w = e(B.bbx_contact_label_value),
                        G = "";
                    if (w.pobox) G += "P.O. Box " + w.pobox + "\n";
                    if (w.extended) G += w.extended + "\n";
                    if (w.street) G += w.street + "\n";
                    if (w.city || w.state || w.postcode) {
                        if (w.city) {
                            G += w.city;
                            G += w.state ? ", " : " "
                        }
                        if (w.state) G += w.state + " ";
                        if (w.postcode) G += w.postcode + "\n"
                    }
                    if (w.country) G += w.country;
                    w = G = G.replace(/&/,
                        "&amp;").replace(/</gm, "&lt;").replace(/>/gm, "&gt;").replace(/\n+$/m, "").replace(/\n/gm, "<br />");
                    a(".value", C).html(w);
                    a(".contactType", C).text(q(B))
                });
                a.each(o.bbx_contact_labels_by_name.EMAIL || [], function (z, B) {
                    var C = a(".EMAIL", l).clone().appendTo(a(".EMAIL-TR > td.content", b));
                    C.closest("tr").show();
                    var w = format_information(B.bbx_contact_label_value.replace(/\\(.)/g, "$1"));
                    a(".value", C).text(w).attr("href", "mailto:" + w);
                    a(".contactType", C).text(q(B))
                });
                a.each(o.bbx_contact_labels_by_name.IMPP || [], function (z, B) {
                    var C = a(".IMPP", l).clone().appendTo(a(".IMPP-TR > td.content", b));
                    C.closest("tr").show();
                    a(".value", C).text(format_information(B.bbx_contact_label_value.replace(/\\(.)/g, "$1")));
                    a(".contactType", C).text(q(B))
                })
            };
        a.fn.addressView = function (b, l) {
            l = a.extend({
                admin: false
            }, l || {});
            a.getREST("/gui/vcard/properties", {}, function (o) {
                j = o.properties
            });
            this.each(function () {
                var o = a(this);
                a.getTemplate(l.template || "/ajax-html/ccc_address_view_common.html", function (n) {
                    a.getTemplate(l.template || "/ajax-html/ccc_address_view.html",
                        function (q) {
                            q = a(q);
                            a(".staticBody", q).append(n);
                            o.empty().append("<div></div>");
                            staticBody = a(".staticBody", q).clone();
                            template = a(".template", q);
                            l.noCall ? a(".callable", template).remove() : a(".no-callable", template).remove();
                            a.getREST("/gui/contact/detail", {
                                bbx_contact_id: b
                            }, function (u) {
                                o.empty().append(staticBody);
                                c(staticBody, template, u.detail, l)
                            })
                        })
                })
            });
            return this
        }
    })();
    (function () {
        var f = ["TEL", "ORG", "ADR", "EMAIL", "IMPP"],
            j = {}, g = function (o) {
                var n = a('<div class="check-buttons-container">'),
                    q, u;
                a.each(j[o.bbx_contact_label_property].valid_types || [], function (v, x) {
                    var z = o.bbx_contact_label_type ? o.bbx_contact_label_type.indexOf(x.type) > -1 : false;
                    q = a('<label class="check-button-label" />');
                    u = a('<input type="checkbox" name="bbx_contact_label_type" />').val(x.type);
                    z && u.attr("checked", "checked");
                    q.append(u);
                    q.append(a('<span class="check-button-title" />').text(x.display_name));
                    n.append(q)
                });
                return n
            }, c = function (o) {
                o.preventDefault();
                if (confirm("Delete this contact information?")) {
                    var n = a(this).closest("form");
                    (o = a(this).closest(".hasLabelID").data("bbx_contact_label_id")) ?
                        a.deleteREST("/gui/contact/label", {
                            bbx_contact_label_id: o
                        }, function () {
                            var q = n.closest("td");
                            n.remove();
                            a("form", q)[0] || q.addClass("empty").append(a(".nothing", template).clone().css({
                                display: "block"
                            }))
                        }) : n.closest("td").addClass("empty").empty().append(a(".nothing", template).clone().css({
                            display: "block"
                        }))
                }
            }, b = function (o, n, q, u) {
                u.admin && !trueish(q.my_contact) ? a.getJSONCached("/gui/permission/check", {
                    bbx_permission_name: ["EDIT_CONTACT"]
                }, 36E5, function (v) {
                    if (trueish(v.self.EDIT_CONTACT)) u.admin = true;
                    else {
                        showError("Some editing features have been disabled because you do not have the proper permissions");
                        u.admin = false
                    }
                    l(o, n, q, u)
                }) : l(o, n, q, u)
            }, l = function (o, n, q, u) {
                a(".noLabelMessage", o).remove();
                q.bbx_contact_labels_by_name = {};
                a.each(q.bbx_contact_labels || [], function (x, z) {
                    q.bbx_contact_labels_by_name[z.bbx_contact_label_property] = q.bbx_contact_labels_by_name[z.bbx_contact_label_property] || [];
                    q.bbx_contact_labels_by_name[z.bbx_contact_label_property].push(z)
                });
                a("tr.local-TR", o).remove();
                o.addClass("edit").removeClass("view");
                a.each(f, function (x, z) {
                    a("." + z + "-TR").data("property", z)
                });
                a(".addressTypesTable td.legend", o).append('<a href="#" style="display:block" class="ops opNewLabel">Add Info</a>');
                a(".addressTypesTable td.legend > .opNewLabel", o[0]).live("click", function (x) {
                    x.preventDefault();
                    var z = a(this).closest("tr.propertyTR");
                    x = a("td.content", z);
                    z = z.data("property");
                    if (!a(".new", x)[0]) {
                        var B = a('<form action="/gui/contact/label" class="jsAutoSubmit" method="POST"></form>');
                        a(".nothing", x).remove();
                        a("." + z, n).clone().appendTo(B);
                        a(".types", B).append(g({
                            bbx_contact_label_property: z
                        }));
                        B.addClass("new").one("jsAutoSubmitComplete", function (C, w) {
                            a(this).data("method", "PUT").removeAttr("method").removeClass("new").data("extraFormData", {
                                bbx_contact_label_id: w.label.bbx_contact_label_id
                            });
                            a(".labelDetail", this).data("bbx_contact_label_id", w.label.bbx_contact_label_id).addClass("hasLabelID")
                        }).data("extraFormData", {
                            bbx_contact_id: q.bbx_contact_id,
                            bbx_contact_label_property: z,
                            scope: u.admin ? "global" : "private"
                        }).data("accept", "application/json");
                        x.append(B);
                        a("input[type=text]:eq(0)", B).focus()
                    }
                });
                a(".name", o).text(q.bbx_contact_first_name + " " + q.bbx_contact_last_name);
                if (q.bbx_contact_scope === "private") {
                    var v = a(".nameForm", n).clone().appendTo(a(".name-TR > td.content", o)).data("accept", "application/json").bind("autoSubmitSuccess", function (x, z) {
                        o.trigger("name", z.contact)
                    });
                    a("input[name=bbx_contact_id]", v).val(q.bbx_contact_id);
                    a("input[name=bbx_contact_first_name]", v).val(q.bbx_contact_first_name);
                    a("input[name=bbx_contact_last_name]", v).val(q.bbx_contact_last_name);
                    v.addClass("jsAutoSubmit")
                } else a(".addressTypesTable > tbody > tr.name-TR").remove();
                a.each(["TEL", "ORG", "EMAIL", "IMPP"], function (x, z) {
                    a.each(q.bbx_contact_labels_by_name[z] || [], function (B, C) {
                        if (C.my_label || u.admin && C.global_label) {
                            var w = a("." + z, n).clone().appendTo(a("." + z + "-TR > td.c""];
            n.find(".callStatus").text(b);
            n.find(".cidname").text(l[0] || "");
            n.find(".cidnum").text(l[1] || "");
            n.find(".ceidname").text(o[0] || "");
            n.find(".ceidnum").text(o[1] || "");
            c === "active" && n.contextMenu([{
                title: "Listen In...",
                fn: function () {
                    var q = a(this).data("call");
                    eavesdropUI(q)
                }
            }, {
                title: "End Call...",
                fn: function () {
                    var q = a(this).data("call");
                    showBlanker({
                        title: "End Call?",
                        text: "Are you would like to end this call?",
                        buttons: ["End Call", "Cancel"],
                        callbacks: [
                            function () {
                                a.post("/gui/freeswitch/uuid/uuid_kill", {
                                    uuid: q.uuid,
                                    template: "json"
                                });
                                blankerCancel.call(this)
                            },
                            blankerCancel
                        ]
                    })
                }
            }], {
                doubleClickFirst: false
            });
            return n
        }, j = function (c, b) {
            var l = c.data("callInfo") || {};
            a.each(["caller-callee-id-name", "caller-callee-id-number", "sent-callee-id-name", "sent-callee-id-number",
                "direction", "caller-caller-id-name", "caller-caller-id-number", "unique-id", "click_to_call_destination"
            ], function (q, u) {
                if (b[u]) l[u] = b[u]
            });
            c.data("callInfo", l);
            var o, n;
            o = b.click_to_call ? formatCID("", l.click_to_call_destination, true) : formatCID(l["sent-callee-id-name"] || l["caller-callee-id-name"], l["sent-callee-id-number"] || l["caller-callee-id-number"] || b.caller_destination_number, true);
            n = formatCID(l["caller-caller-id-name"] || b.cid_name, l["caller-caller-id-number"] || b.cid_number, true);
            if (DEBUG_ACTIVE_RECENT) o = [o[0] + "-USI", o[1] + "-USI"];
            o[0] && a(".ceidname", c).text(o[0]);
            o[1] && a(".ceidnum", c).text(o[1]);
            n[0] && a(".cidname", c).text(n[0]);
            n[1] && a(".cidnum", c).text(n[1])
        }, g = function (c) {
            Ape.subscribe(["channel_hangup", "call_update"]);
            var b = a(".activeRecentTable", c);
            a.ajax({
                url: "/gui/calls/list",
                accept: "application/json",
                dataType: "json",
                success: function (l) {
                    var o = l.list;
                    a.getJSON("/gui/cdr/cdr", {
                        rows: 20 - o.length,
                        page: 1,
                        sortby: "end_timestamp",
                        since: "7 days"
                    }, function (n) {
                        n = n.cdr;
                        a.each(o, function () {
                            if (this.callstate !=
                                "RINGING") {
                                var q = formatCID(this.cid_name, this.cid_num, true),
                                    u = formatCID(this.callee_name, this.callee_num, true);
                                if (DEBUG_ACTIVE_RECENT) {
                                    q = [q[0] + "-BOOTLIVE", q[1] + "-BOOTLIVE"];
                                    u = [u[0] + "-BOOTLIVE", u[1] + "-BOOTLIVE"]
                                }
                                f("active", "Active", q, u).appendTo(b).data("uuid", this.uuid || "").data("call", this).data("call_uuid", this.call_uuid || "").data("aleg", this.bridge_a_unique_id || "").data("bleg", this.bridge_b_unique_id || "")
                            }
                        });
                        a.each(n, function () {
                            var q = formatCID(this.caller_id_name, this.caller_id_number, true),
                                u =
                                    formatCID(this.destination_name, this.destination_number, true);
                            if (DEBUG_ACTIVE_RECENT) {
                                q = [q[0] + "-BOOT", q[1] + "-BOOT"];
                                u = [u[0] + "-BOOT", u[1] + "-BOOT"]
                            }
                            f("completed", "Completed", q, u).appendTo(b).data("uuid", this.uuid)
                        });
                        a(window).bind("meteor_call_event", function (q, u) {
                            var v = u.json;
                            if (v.caller_destination_number !== "voicemail")
                                if (v.call_event === "channel_create") {
                                    x = f("active", "Active", x, z);
                                    var x = formatCID(v.cid_name, v.cid_number, true),
                                        z = formatCID(v.ceid_name, v.ceid_number, true);
                                    if (DEBUG_ACTIVE_RECENT) {
                                        x = [x[0] +
                                            "-CREATE", x[1] + "-CREATE"
                                        ];
                                        z = [z[0] + "-CREATE", z[1] + "-CREATE"]
                                    }
                                    x = f("active", "Active", x, z);
                                    j(x, v);
                                    x.prependTo(b).show().data("uuid", v.uuid || "").data("call", v).data("call_uuid", v.call_uuid || "")
                                } else if (v.call_event === "channel_state" && v["channel-state"] === "CS_EXECUTE" && (v["channel-hit-dialplan"] === "true" || v["call-direction"] === "inbound")) {
                                x = a("tr", b).filter(function () {
                                    return a(this).data("uuid") === v["unique-id"]
                                });
                                x.show()
                            } else if (!(v.call_event === "channel_state" && v["channel-state"] === "CS_EXECUTE"))
                                if (v.call_event ===
                                    "channel_bridge") {
                                    x = a("tr", b);
                                    z = x.filter(function () {
                                        return a(this).data("uuid") === v.bridge_b_unique_id
                                    });
                                    z.hide();
                                    x.filter(function () {
                                        return a(this).data("uuid") === v.bridge_a_unique_id
                                    }).show().data("aleg", v.bridge_a_unique_id || "").data("bleg", v.bridge_b_unique_id || "");
                                    x = formatCID(v.cid_name, v.cid_number, true);
                                    z = formatCID(v.ceid_name, v.ceid_number, true);
                                    if (DEBUG_ACTIVE_RECENT) {
                                        x = [x[0] + "-BRIDGE", x[1] + "-BRIDGE"];
                                        z = [z[0] + "-BRIDGE", z[1] + "-BRIDGE"]
                                    }
                                } else if (v.call_event === "channel_destroy") {
                                v = u.json;
                                z =
                                    a("tr", b).filter(function () {
                                        return a(this).data("uuid") == v.uuid
                                    });
                                a(".callStatus", z).text("Completed");
                                z.removeClass("active").addClass("completed");
                                z.unbind("click");
                                z.css("cursor", "")
                            }
                        });
                        a(window).bind("meteor_call_update", function (q, u) {
                            var v = u.json;
                            if (v.direction == "SEND") {
                                var x = a("tr", b).filter(function () {
                                    return a(this).data("uuid") == v["unique-id"]
                                });
                                x[0] && j(x, v)
                            }
                        })
                    })
                }
            })
        };
    a.fn.recentActiveCalls = function () {
        elems = this;
        a.getTemplate("/ajax-html/recentActiveCalls.html", function (c) {
            elems.each(function () {
                var b =
                    a(c).appendTo(a(this));
                g(b)
            })
        });
        return elems
    }
})(jQuery);
(function (a) {
    var e = function (j, g, c, b) {
        var l = a(".template .secondaryExtItem", j).clone();
        a(".ext", l).text(format_information(g.bbx_extension_id.bbx_extension_value));
        l.data("eem", g);
        if (c && a(".secondaryExtList", j)[0]) {
            var o = false;
            a(".secondaryExtList > .secondaryExtItem", j).each(function () {
                var n = a(this).data("eem");
                if (g.bbx_extension_id.bbx_extension_block_begin <= n.bbx_extension_id.bbx_extension_block_begin) {
                    l.insertBefore(a(this));
                    o = true;
                    return false
                }
            });
            o == false && l.appendTo(a(".secondaryExtList", j))
        } else l.appendTo(a(".secondaryExtList",
            j));
        b && b.readonly || l.contextMenu([{
            title: "Remove secondary extension",
            fn: function () {
                var n = a(this),
                    q = n.data("eem");
                a.post("/gui/configure/dynamic/secondary", {
                    action: "remove_extension_entity_map",
                    bbx_extension_entity_map_id: q.bbx_extension_entity_map_id,
                    template: "json"
                }, function () {
                    n.remove()
                })
            }
        }], {
            doubleClickFirst: false
        })
    }, f = function (j, g, c, b) {
            var l = {
                action: "detail",
                template: "json"
            };
            l[g] = c;
            if (b.agent_access) l.bbx_extension_entity_map_metadata = "out";
            else if (g == "bbx_queue_id") l.bbx_extension_entity_map_metadata =
                "in";
            a.getJSON("/gui/configure/dynamic/secondary", l, function (o) {
                o = o.data;
                var n = a(".secondaryExtForm", j);
                if (b && b.readonly) a(".secondaryExtForm", j).hide();
                else {
                    a(".addExtension", n).extensionValidator({
                        allow: b.allow || ["nextfree", "single", "block", "external"]
                    });
                    a(".secondaryExtForm", j).bind("valid", function () {
                        a(".submitAddSecondary", j).removeAttr("disabled")
                    }).bind("invalid", function () {
                        a(".submitAddSecondary", j).attr("disabled", "disabled")
                    });
                    a(".secondary-hiddens", n).append('<input type="hidden" name="' +
                        g + '" value="' + c + '" />');
                    if (b.agent_access) a(".secondary-hiddens", n).append('<input type="hidden" name="bbx_extension_entity_map_metadata" value="out" />');
                    else g == "bbx_queue_id" && a(".secondary-hiddens", n).append('<input type="hidden" name="bbx_extension_entity_map_metadata" value="in" />');
                    n.bind("submit", function (u) {
                        u.preventDefault();
                        u = a(this).serialize();
                        a.post("/gui/configure/dynamic/secondary", u, function (v) {
                            if (typeof v == "string") v = a.parseJSON(v).data;
                            e(j, v, true, b)
                        })
                    })
                }
                for (var q in o) e(j, o[q],
                    false, b)
            })
        };
    a.fn.secondaryExt = function (j, g, c) {
        c = c || {};
        elems = this;
        if (!(j && g)) {
            console_log("No object or object ID given to create secondary-editing UI", j, g);
            return elems
        }
        elems.each(function () {
            var b = a(this);
            a.getTemplate("/ajax-html/secondary.html", function (l) {
                f(a(l).appendTo(b), j, g, c)
            })
        });
        return elems
    }
})(jQuery);
(function (a) {
    a("a.smListCatsItem").live("click", function (o) {
        o.preventDefault();
        o = a(this);
        o.blur();
        o.closest("ul").find("a.smListCatsItem").removeClass("active");
        o.addClass("active")
    });
    var e = {}, f = {}, j = false,
        g = function () {
            for (var o in f) {
                a.post("/gui/freeswitch/cancel_record", {
                    uuid: o,
                    template: "json"
                });
                delete f[o];
                c()
            }
        }, c = function () {
            for (var o in e)
                if (f[o]) {
                    j || (j = showBlanker({
                        spinner: true,
                        icon: "/images/recording_large.png",
                        iconCSS: {
                            width: "100px",
                            height: "100px"
                        },
                        title: "Recording in Progress",
                        text: "The automated assistant will phone you in a moment to assist you in recording the sound file",
                        buttons: ["Cancel Recording"],
                        callbacks: [g]
                    }));
                    return true
                }
            if (j) {
                j.trigger("closeBlanker");
                j = false
            }
            return false
        };
    a(window).bind("meteor_sound_recording", function (o, n) {
        if (n.json.start_recording) {
            e[n.json.uuid] = true;
            c()
        } else if (n.json.end_recording) {
            var q = n.json.uuid;
            delete e[q];
            a(window).trigger("recording_complete", {
                uuid: q
            });
            c()
        }
    });
    a(".smListSoundCats a.smListCatsItem").live("click", function () {
        var o = a(this),
            n = o.closest(".soundMusic"),
            q = o.data("bbx_sound_category"),
            u = a(".smMainContent", n);
        a(".smCategoryOptions",
            n).hide();
        var v = a(".soundCategoryOptions").show().data("bbx_sound_category", q).unbind("updateCategory").bind("updateCategory", function () {
            a.getREST("/gui/sound/category", {
                bbx_sound_category_id: q.bbx_sound_category_id
            }, function (x) {
                if (x && x.category && x.category[0]) {
                    x = x.category[0];
                    o.data("bbx_sound_category", x).text(x.bbx_sound_category_name);
                    o.trigger("click")
                }
            })
        });
        a(".catName", v).text(q.bbx_sound_category_name || "(Untitled)");
        u.unbind("refreshCategory").bind("refreshCategory", function (x) {
            x.stopPropagation();
            a.getREST("/gui/sound/file", {
                bbx_sound_category_id: q.bbx_sound_category_id
            }, function (z) {
                z = z.file;
                u.empty();
                a.each(z, function () {
                    var B = a(".template .soundItem", n).clone().appendTo(a(".smMainContent", n));
               a.post("/gui/configure/dynamic/secondary", u, function (v) {
                            if (typeof v == "string") v = a.parseJSON(v).data;
                            e(j, v, true, b)
                        })
                    })
                }
                for (var q in o) e(j, o[q],
                    false, b)
            })
        };
    a.fn.secondaryExt = function (j, g, c) {
        c = c || {};
        elems = this;
        if (!(j && g)) {
            console_log("No object or object ID given to create secondary-editing UI", j, g);
            return elems
        }
        elems.each(function () {
            var b = a(this);
            a.getTemplate("/ajax-html/secondary.html", function (l) {
                f(a(l).appendTo(b), j, g, c)
            })
        });
        return elems
    }
})(jQuery);
(function (a) {
    a("a.smListCatsItem").live("click", function (o) {
        o.preventDefault();
        o = a(this);
        o.blur();
        o.closest("ul").find("a.smListCatsItem").removeClass("active");
        o.addClass("active")
    });
    var e = {}, f = {}, j = false,
        g = function () {
            for (var o in f) {
                a.post("/gui/freeswitch/cancel_record", {
                    uuid: o,
                    template: "json"
                });
                delete f[o];
                c()
            }
        }, c = function () {
            for (var o in e)
                if (f[o]) {
                    j || (j = showBlanker({
                        spinner: true,
                        icon: "/images/recording_large.png",
                        iconCSS: {
                            width: "100px",
                            height: "100px"
                        },
                        title: "Recording in Progress",
                        text: "The automated assistant will phone you in a moment to assist you in recording the sound file",
                        buttons: ["Cancel Recording"],
                        callbacks: [g]
                    }));
                    return true
                }
            if (j) {
                j.trigger("closeBlanker");
                j = false
            }
            return false
        };
    a(window).bind("meteor_sound_recording", function (o, n) {
        if (n.json.start_recording) {
            e[n.json.uuid] = true;
            c()
        } else if (n.json.end_recording) {
            var q = n.json.uuid;
            delete e[q];
            a(window).trigger("recording_complete", {
                uuid: q
            });
            c()
        }
    });
    a(".smListSoundCats a.smListCatsItem").live("click", function () {
        var o = a(this),
            n = o.closest(".soundMusic"),
            q = o.data("bbx_sound_category"),
            u = a(".smMainContent", n);
        a(".smCategoryOptions",
            n).hide();
        var v = a(".soundCategoryOptions").show().data("bbx_sound_category", q).unbind("updateCategory").bind("updateCategory", function () {
            a.getREST("/gui/sound/category", {
                bbx_sound_category_id: q.bbx_sound_category_id
            }, function (x) {
                if (x && x.category && x.category[0]) {
                    x = x.category[0];
                    o.data("bbx_sound_category", x).text(x.bbx_sound_category_name);
                    o.trigger("click")
                }
            })
        });
        a(".catName", v).text(q.bbx_sound_category_name || "(Untitled)");
        u.unbind("refreshCategory").bind("refreshCategory", function (x) {
            x.stopPropagation();
            a.getREST("/gui/sound/file", {
                bbx_sound_category_id: q.bbx_sound_category_id
            }, function (z) {
                z = z.file;
                u.empty();
                a.each(z, function () {
                    var B = a(".template .soundItem", n).clone().appendTo(a(".smMainContent", n));
              Delete", "Cancel"],
            callbacks: [
                function () {
                    a.deleteREST("/gui/moh/file", {
                        bbx_moh_file_id: q.bbx_moh_file_id
                    }, function () {
                        n.remove()
                    });
                    blankerCancel.call(this)
                },
                blankerCancel
            ]
        }) : console_log("DOM element had no attached bbx_moh_file_id: ", q)
    });
    a(".musicItem .opRename, .soundItem .opRename").live("click", function (o) {
        o.preventDefault();
        var n = a(this).closest(".musicItem, .soundItem");
        a(".smItemName", n).hide();
        o = a(".smItemRename", n).show();
        var q = a("input[type=text]", o);
        if (n.data("bbx_moh_file")) {
            var u = n.data("bbx_moh_file");
            q.val(u.bbx_moh_file_name).focus().bind("blur", function () {
                a.putREST("/gui/moh/file", {
                    bbx_moh_file_name: q.val(),
                    bbx_moh_file_id: u.bbx_moh_file_id
                }, function () {
                    n.trigger("refreshCategory")
                })
            })
        } else if (n.data("bbx_sound")) {
            var v = n.data("bbx_sound");
            q.val(v.bbx_sound_name).focus().bind("blur", function () {
                a.putREST("/gui/sound/file", {
                    bbx_sound_name: q.val(),
                    bbx_sound_id: v.bbx_sound_id
                }, function () {
                    n.trigger("refreshCategory")
                })
            })
        }
    });
    a(".smCategoryOptions .opUpload").live("click", function (o) {
        o.preventDefault();
        o = a(this).closest(".smContent").find(".smMainContent");
        if (!a(".smUpload", o)[0]) {
            o.find(".smAddStream, .smRecord").remove();
            var n = a(this).closest(".soundMusic").find(".template .smUpload").clone().prependTo(o);
            o = a("form", n);
            var q = o.find("button[type=submit]");
            q.disable("no_file");
            o.delegate("input[type=file]", "change", function () {
                a(this).val() ?
                    q.enable("no_file") : q.disable("no_file")
            });
            var u = a(this).closest(".smCategoryOptions"),
                v, x;
            if (u.data("bbx_sound_category")) {
                v = "sound";
                x = u.data("bbx_sound_category")
            } else if (u.data("bbx_moh")) {
                v = "moh";
                x = u.data("bbx_moh")
            }
            if (v) {
                u = a('<input type="hidden" />');
                u.attr("name", v === "sound" ? "bbx_sound_category_id" : "bbx_moh_id");
                u.attr("value", v === "sound" ? x.bbx_sound_category_id : x.bbx_moh_id);
                o.append(u);
                o.append(a('<input type="hidden" name="sessionid" />').val(getSessionID()));
                o.attr("action", v == "sound" ?
                    "/gui/sound_file/upload" : "/gui/moh_file/upload");
                a("input[type=file]", o);
                var z;
                o.ajaxForm({
                    iframe: true,
                    beforeSerialize: function () {
                        a("form", n).hide();
                        a(".uploading", n).show();
                        z = showUploadBlanker()
                    },
                    success: function (B) {
                        try {
                            B = B.match(/\{.*\}/)[0];
                            var C = a.parseJSON(B);
                            z.trigger("closeBlanker");
                            C.error && showError("There was a problem uploading the file: " + C.error)
                        } catch (w) {
                            z.trigger("closeBlanker");
                            showError("The upload handler returned a result in an unexpected format. Upload may have failed.")
                        } finally {
                            n.trigger("refreshCategory")
                        }
                    },
                    error: function (B, C, w) {
                        z.trigger("closeBlanker");
                        w == "timeout" ? showError("File upload timed out.") : showError("File upload failed.");
                        n.trigger("refreshCategory")
                    }
                })
            }
        }
    });
    a(".smCategoryOptions .opAddStream").live("click", function (o) {
        o.preventDefault();
        var n = a(this);
        o = a(this).closest(".smContent").find(".smMainContent");
        if (!a(".smAddStream", o)[0]) {
            o.find(".smUpload, .smRecord").remove();
            var q = a(this).closest(".soundMusic").find(".template .smAddStream").clone().prependTo(o),
                u = q.find("form"),
                v = u.find("input"),
                x = u.find("button[type=submit]");
            x.disable("no_stream");
            u.delegate("input", "change", function () {
                v.eq(0).val() && v.eq(1).val() ? x.enable("no_stream") : x.disable("no_stream")
            });
            u.bind("submit", function (z) {
                z.preventDefault();
                a.putREST("/gui/moh_stream/add", a.extend(u.serializeObject() || {}, {
                    bbx_moh_id: n.closest(".smCategoryOptions").data("bbx_moh").bbx_moh_id
                }), function () {
                    q.trigger("refreshCategory")
                })
            })
        }
    });
    a(".smCategoryOptions .opRecord").live("click", function (o) {
        o.preventDefault();
        var n = a(this).closest(".smContent").find(".smMainContent");
        if (!a(".smRecord", n)[0]) {
            n.find(".smUpload, .smAddStream").remove();
            var q = a(this).closest(".soundMusic").find(".template .smRecord").clone().prependTo(n);
            o = a("form", q);
            data = a(this).closest(".smCategoryOptions").data("bbx_sound_category");
            a("input[name=bbx_sound_category_id]").val(data.bbx_sound_category_id);
            a("input[name=bbx_extension_value]", o).extensionPicker({
                searchTypes: ["user:primary"],
                hidden: false,
                textFormat: "number",
                autoSelectFirst: true
            });
            o.ajaxForm({
                accept: "application/json",
                beforeSubmit: function () {},
                success: function (u) {
                    q.remove();
                    if (typeof u === "string")
                        if ((u = u.match(/\{[\s\S]*\}/)) && u[0]) u = a.parseJSON(u[0]);
                    var v = u.uuid;
                    f[v] = true;
                    c();
                    var x = Math.floor(Math.random() * 1E5);
                    a(window).bind("recording_complete.bind" + x, function (z, B) {
                        if (B.uuid == v) {
                            a(window).unbind("recording_complete.bind" + x);
                            n.trigger("refreshCategory")
                        }
                    })
                }
            })
        }
    });
    a(".smCategoryOptions .opRename").live("click", function (o) {
        o.preventDefault();
        var n = a(this).closest(".smCategoryOptions");
        a(".catName", n).hide();
        var q = a(".smCategoryRename",
            n).show(),
            u = a("input[type=text]", q);
        if (n.data("bbx_moh")) {
            var v = n.data("bbx_moh");
            u.val(v.bbx_moh_name).focus().unbind("blur").bind("blur", function () {
                a.putREST("/gui/moh/class", {
                    bbx_moh_name: u.val(),
                    bbx_moh_id: v.bbx_moh_id
                }, function () {
                    q.hide();
                    a(".catName", n).show();
                    n.trigger("updateCategory", u.val())
                })
            })
        } else if (n.data("bbx_sound_category")) {
            var x = n.data("bbx_sound_category");
            u.val(x.bbx_sound_category_name).focus().unbind("blur").bind("blur", function () {
                a.putREST("/gui/sound/category", {
                    bbx_sound_category_name: u.val(),
                    bbx_sound_category_id: x.bbx_sound_category_id
                }, function () {
                    q.hide();
                    a(".catName", n).show();
                    n.trigger("updateCategory")
                })
            })
        }
    });
    a(".musicClassOptions .opDelete").live("click", function (o) {
        o.preventDefault();
        var n = a(this).closest(".musicClassOptions"),
            q = n.data("bbx_moh");
        q && q.bbx_moh_id ? showBlanker({
            title: "Delete this music class?",
            text: "This will also delete the music files. This operation cannot be undone.",
            buttons: ["Delete", "Cancel"],
            callbacks: [
                function () {
                    a.deleteREST("/gui/moh/class", {
                            bbx_moh_id: q.bbx_moh_id
                        },
                        function () {
                            var u = n.closest(".soundMusic").find(".smListMohClasses").find("li > a").filter(function () {
                                return a(this).data("bbx_moh").bbx_moh_id == q.bbx_moh_id
                            }),
                                v = u.closest("li").next("li");
                            v[0] || (v = u.closest("li").prev("li"));
                            u.closest("li").remove();
                            a("a", v).trigger("click")
                        });
                    blankerCancel.call(this)
                },
                blankerCancel
            ]
        }) : console_log("DOM element had no attached bbx_moh_id: ", q)
    });
    a(".soundCategoryOptions .opDelete").live("click", function (o) {
        o.preventDefault();
        var n = a(this).closest(".soundCategoryOptions"),
            q = n.data("bbx_sound_category");
        q && q.bbx_sound_category_id ? showBlanker({
            title: "Delete this sound category?",
            text: "This will also delete the sound files. This operation cannot be undone.",
            buttons: ["Delete", "Cancel"],
            callbacks: [
                function () {
                    a.deleteREST("/gui/sound/category", {
                        bbx_sound_category_id: q.bbx_sound_category_id
                    }, function () {
                        var u = n.closest(".soundMusic").find(".smListSoundCats").find("li > a").filter(function () {
                            return a(this).data("bbx_sound_category").bbx_sound_category_id == q.bbx_sound_category_id
                        }),
                            v = u.closest("li").next("li");
                        v[0] || (v = u.closest("li").prev("li:not(.smNewSoundCat)"));
                        u.closest("li").remove();
                        v[0] ? a("a", v).trigger("click") : n.closest(".soundMusic").find(".smTabSound").trigger("click")
                    });
                    blankerCancel.call(this)
                },
                blankerCancel
            ]
        }) : console_log("DOM element had no attached bbx_sound_category_id: ", q)
    });
    a(".soundItem .opMove, .musicItem .opMove").live("click", function (o) {
        o.preventDefault();
        o = a(this).closest(".smItem");
        var n = a(".mover", o),
            q;
        if (o.data("bbx_moh_file")) q = o.data("bbx_moh_file").bbx_moh_file_name;
        else if (o.data("bbx_sound")) q = o.data("bbx_sound").bbx_sound_name;
        n.show().find(".opCancelMove").one("click", function (u) {
            u.preventDefault();
            n.hide()
        });
        n.draggable({
            helper: function () {
                return a(sprintf('<div class="dragSound"><img src="/images/sound_button.png" width="30" height="20" /><br />%s</div>', q))
            },
            cursorAt: {
                top: 0,
                left: 0
            }
        })
    });
    var b = function (o) {
        o.droppable({
            tolerance: "pointer",
            drop: function (n, q) {
                var u = q.draggable.closest(".soundItem, .musicItem"),
                    v = a(this);
                if (u.data("bbx_moh_file")) {
                    var x = u.data("bbx_moh_file"),
                        z = v.data("bbx_moh");
                    a.putREST("/gui/moh/file", {
                        bbx_moh_id: z.bbx_moh_id,
                        bbx_moh_file_id: x.bbx_moh_file_id
                    }, function () {
                        u.find(".mover").hide();
                        v.trigger("click")
                    })
                } else if (u.data("bbx_sound")) {
                    x = u.data("bbx_sound");
                    z = v.data("bbx_sound_category");
                    a.putREST("/gui/sound/file", {
                        bbx_sound_category_id: z.bbx_sound_category_id,
                        bbx_sound_id: x.bbx_sound_id
                    }, function () {
                        u.find(".mover").hide();
                        v.trigger("click")
                    })
                }
            },
            hoverClass: "dropActive"
        })
    }, l = function (o) {
            var n = "jContext" + Math.floor(Math.random() * 1E5);
            a(window).debounce("resize." +
                n, function () {
                    var q = a(".smCategories", o);
                    if (o.closest("body")[0]) {
                        var u = a(window).height() - q.offset().top;
                        q.css("min-height", u + "px")
                    } else a(window).unbind("resize." + n)
                }).trigger("resize");
            a(".smTabSound, .smTabMusic", o).bind("click", function (q) {
                q.preventDefault();
                q = a(this);
                a("a", q.closest("ul")).removeClass("active");
                q.addClass("active");
                q.blur()
            });
            a(".smTabSound", o).bind("click", function () {
                var q = a(".smList", o).empty(),
                    u = a(".template > .smListSoundCats", o).clone().appendTo(q),
                    v = function (x) {
                        return sprintf('<li><a href="#" class="smListCatsItem">%s</a></li>',
                            x.replace(/[<>]/g, "") || "(Untitled)")
                    };
                a.getREST("/gui/sound/category", {}, function (x) {
                    a(".opNewSoundCategory", u).bind("click", function (B) {
                        B.preventDefault();
                        var C = a(".smNew > input[type=text]", u);
                        C.val("");
                        a(".smNew", u).show();
                        C.focus();
                        C.unbind("blur").unbind("keyup").bind("blur", function () {
                            C.val() ? a.postREST("/gui/sound/category", {
                                bbx_sound_category_name: C.val()
                            }, function (w) {
                                a(".smNew", u).hide();
                                w = w.category;
                                var G = a(v(w.bbx_sound_category_name)).insertAfter(a(".smNew", u));
                                a(".smListCatsItem", G).data("bbx_sound_category",
                                    w);
                                b(a(".smListCatsItem", G))
                            }) : a(".smNew", u).hide();
                            C.val("")
                        }).bind("keyup", function (w) {
                            w.which === a.ui.keyCode.ENTER && a(this).triggerHandler("blur")
                        })
                    });
                    x = x.category;
                    a.each(x, function () {
                        var B = a(v(this.bbx_sound_category_name)).appendTo(a(".smListCats", u));
                        a(".smListCatsItem", B).data("bbx_sound_category", this)
                    });
                    if (!x || !x.length) {
                        x = q.closest(".smContent");
                        var z = x.find(".smMainContent");
                        x.find(".smCategoryOptions").hide();
                        z.empty().html('<div class="hasNone">No sound categories are configured</div>')
                    }
                    b(a(".smListCatsItem",
                        u));
                    a(".smListCatsItem:eq(0)", u).click()
                })
            });
            a(".smTabMusic", o).bind("click", function () {
                var q = a(".smList", o).empty(),
                    u = a(".template > .smListMohClasses", o).clone().appendTo(q);
                a.getREST("/gui/moh/class", {
                    bbx_moh_hidden: 0
                }, function (v) {
                    a(".opNewMohClass", u).bind("click", function (x) {
                        x.preventDefault();
                        var z = a(".smNew > input[type=text]", u);
                        z.val("");
                        a(".smNew", u).show();
                        z.focus();
                        z.unbind("blur").unbind("keyup").bind("blur", function () {
                            z.val() ? a.postREST("/gui/moh/class", {
                                bbx_moh_name: z.val()
                            }, function (B) {
                                a(".smNew",
                                    u).hide();
                                B = B["class"];
                                var C = a(sprintf('<li><a href="#" class="smListCatsItem">%s</a></li>', B.bbx_moh_name.replace(/[<>]/g, "") || "(Untitled)")).insertAfter(a(".smNew", u));
                                a(".smListCatsItem", C).data("bbx_moh", B);
                                b(a(".smListCatsItem", C))
                            }) : a(".smNew", u).hide();
                            z.val("")
                        }).bind("keyup", function (B) {
                            B.which === a.ui.keyCode.ENTER && a(this).triggerHandler("blur")
                        })
                    });
                    a.each(v["class"], function () {
                        var x = a(sprintf('<li><a href="#" class="smListCatsItem">%s</a></li>', this.bbx_moh_name.replace(/[<>]/g, "") || "(Untitled)")).appendTo(a(".smListCats",
                            u));
                        a(".smListCatsItem", x).data("bbx_moh", this)
                    });
                    b(a(".smListCatsItem", u));
                    a(".smListCatsItem:eq(0)", u).click()
                })
            });
            a(".tabs > li:eq(0) > a").click()
        };
    a.fn.soundMusicScreen = function () {
        elems = this;
        a.getTemplate("/ajax-html/soundMusic.html", function (o) {
            elems.each(function () {
                var n = a(o).appendTo(a(this));
                l(n)
            })
        });
        return elems
    }
})(jQuery);
(function (a) {
    a.fn.soundPicker = function (e, f) {
        var j = this,
            g = {
                disable: function () {
                    var b = j.data("soundPicker") || {};
                    b.disabled = true;
                    j.data("soundPicker", b);
                    a("select", j).disable("wdisable")
                },
                enable: function () {
                    var b = j.data("soundPicker") || {};
                    b.disabled = false;
                    j.data("soundPicker", b);
                    a("select", j).enable("wdisable")
                }
            };
        if (typeof e === "string" && g[e]) {
            g[e]();
            return this
        } else f = e || {};
        f = a.extend({
            name: "bbx_sound_id",
            allowNone: false
        }, f);
        var c = f.bbx_sound_id;
        a.getJSONCached("/gui/sound/category_populated", {
            "content-type": "application/json",
            _sortby: "bbx_sound_category_name",
            _sortorder: "asc"
        }, 3E3, function (b) {
            var l = b.category_populated,
                o = {};
            a.each(b.category_populated, function (n, q) {
                o[q.bbx_sound_category_id] = q
            });
            j.each(function () {
                var n = a(this),
                    q = a('<span class="staticBody soundPicker"></span>');
                if (f.allowNone || l && l.length) {
                    var u = a('<select class="soundPickerCategory"></select>').appendTo(q),
                        v = false;
                    f.allowNone && u.append('<option class="categoryNone" value="">(None)</option>');
                    a.each(l, function (x, z) {
                        $catOpt = a("<option></option>").val(z.bbx_sound_category_id).text(z.bbx_sound_category_name ||
                            "(Untitled)").appendTo(u);
                        f.bbx_sound_id && !v && a.each(z.bbx_sound_ids, function (B, C) {
                            if (parseInt(C.bbx_sound_id || 0, 10) === parseInt(f.bbx_sound_id || 0, 10)) {
                                v = z.bbx_sound_category_id;
                                return false
                            }
                        })
                    });
                    u.bind("change keyup", function () {
                        var x = u.val();
                        if (u.data("was") !== x) {
                            u.data("was", x);
                            a(".selSoundFile", q).remove();
                            a(".soundPickerPlayer", q).remove();
                            if (x && o[x]) {
                                var z = a('<select class="selSoundFile"></select>').attr("name", f.name);
                                a.each(o[x].bbx_sound_ids, function (B, C) {
                                    a("<option></option>").val(C.bbx_sound_id).text(C.bbx_sound_name).appendTo(z)
                                });
                                z.bind("change keyup", function () {
                                    var B = z.val();
                                    if (z.data("was") !== B) {
                                        z.data("was", B);
                                        a(".soundPickerPlayer", q).remove();
                                        B && a('<span class="soundPickerPlayer"></span>').appendTo(q).miniSoundWidget("/gui/sound_file/playback?sessionid=" + getSessionID() + "&bbx_sound_id=" + B)
                                    }
                                });
                                if (c) {
                                    z.val(c);
                                    c = false
                                }
                                z.appendTo(q).trigger("change")
                            } else a('<select class="selSoundFile"><option class="optNoSoundFile" value="">(None)</option></select>').attr("name", f.name).appendTo(q).trigger("change")
                        }
                    });
                    v && u.val(v);
                    u.triggerHandler("change")
                } else {
                    q.html('<span class="soundPickerNoSounds">(No Sounds Installed)</span>');
                    n.trigger("noSounds noSoundSelected")
                }
                n.empty().append(q);
                typeof f.ready === "function" && f.ready()
            })
        });
        this.data("soundPicker", f);
        return this
    }
})(jQuery);
(function (a) {
    a.fn.mohPicker = function (e) {
        e = e || {};
        this.each(function () {
            var f = a('<span class="mohPicker fmWidget"></span>').appendTo(this),
                j = a(sprintf('<select name="%s" class="mohPickerSelect"></select>', e.name || "bbx_moh_id")).appendTo(f),
                g = e.bbx_moh_id || j.data("originalValue") || 1;
            e.id && j.attr("id", e.id);
            a.getJSONCached("/gui/moh/class", {
                "content-type": "application/json",
                _sortby: "bbx_moh_name",
                _sortorder: "asc"
            }, 3E3, function (c) {
                c = c["class"];
                var b = a(".mohPickerSelect", f);
                a.each(c, function () {
                    if (this.bbx_moh_system) {
                        var l =
                            a("<option />");
                        l.text(this.bbx_moh_name);
                        l.val(this.bbx_moh_id);
                        l.addClass("sys");
                        a(".sys", b)[0] ? l.insertAfter(a(".sys:last", b)) : b.prepend(l)
                    } else {
                        l = a("<option />");
                        l.text(this.bbx_moh_name);
                        l.val(this.bbx_moh_id);
                        l.appendTo(b)
                    }
                });
                if (a.browser.msie) {
                    b.css("width", "200px");
                    b.css("width", "auto");
                    b.show()
                }
                b.val(g);
                b.trigger("mohPickerBuilt")
            })
        });
        return this
    }
})(jQuery);
$(window).bind("meteor_all", function (a, e) {
    try {
        var f = e.json;
        if (e.json) f = e.json;
        f.restart && showRestartBlanker(f.title, f.message);
        if (f.errorText) {
            errorPriority = f.errorPriority ? f.errorPriority : 0;
            showError(f.errorText, errorPriority)
        }
        var j = 0;
        if (f.displayPriority) j = f.displayPriority;
        if (j < 2) f.displayText && popupMessage(f.displayText, j);
        else if (j == 2) showBlanker({
            title: f.displayTitle || "Warning",
            text: f.displayText
        });
        else j == 3 && showError(f.displayText, 0)
    } catch (g) {}
});
$(window).bind("meteor_restore", function (a, e) {
    if (e.json.status == "running") showRestoreBlanker(e.json.text);
    else if (e.json.status == "failed") {
        showRestoreBlanker("Restore failed: " + e.json.text);
        setTimeout(hideRestoreBlanker, 3E3)
    } else if (e.json.status == "success") {
        showRestoreBlanker("Restore Successful");
        setTimeout(hideRestoreBlanker, 3E3)
    }
});

function getMessageCache(a, e) {
    a && e && $.ajax({
        url: "/gui/jsoncache/cache?channel=" + e,
        accept: "application/json",
        dataType: "json",
        success: function (f) {
            $(window).trigger("meteor_" + a, {
                json: f
            })
        },
        error: function () {}
    })
};
(function (a) {
    var e = function (f, j, g) {
        var c = a(".template", f),
            b = a(".staticBody", f),
            l = a(".agentList", b),
            o = function () {
                a.getREST("/gui/queue2/agent", {
                    bbx_queue_id: j.bbx_queue_id
                }, function (G) {
                    G = G.agent;
                    l.empty();
                    G.length || l.html('<div class="hasNone">This queue has no agents</div>');
                    a.each(G, function () {
                        a(sprintf('<div class="agentItem"><span class="number">%s</span> - <span class="name">%s</span></div>', this.bbx_extension_value, this.show_name)).data("bbx_queue_extension_map_id", this.bbx_queue_extension_map_id).appendTo(l).contextMenu([{
                            title: "Remove Agent Extension",
                            fn: function () {
                                var J = this,
                                    E = a(this).data("bbx_queue_extension_map_id");
                                a.deleteREST("/gui/queue2/agent", {
                                    bbx_queue_extension_map_id: E
                                }, function () {
                                    a(J).remove()
                                })
                            }
                        }], {
                            doubleClickFirst: false
                        })
                    })
                })
            };
        o();
        var n = a(".addAgentForm", b);
        a(".addAgentInput", n).extensionPicker({
            searchTypes: ["user"],
            hidden: a(".addAgentHidden", n),
            hiddenFormat: "bbx_extension_id",
            textFormat: "number",
            autoSelectFirst: true
        }).bind("selection", function () {
            var G = a(".addAgentHidden", n).val();
            a(".addAgentHidden, .addAgentInput", n).val("");
            G && a.postREST("/gui/queue2/agent", {
                bbx_extension_id: G,
                bbx_queue_id: j.bbx_queue_id
            }, function () {
                o()
            })
        });
        a(".mohForm > .mohPicker", b).mohPicker({
            bbx_moh_id: j.bbx_moh_id
        });
        a(".chimeFreq", b).val(j.bbx_queue_chime_freq);
        var q = a(".chimeList", b),
            u = function () {
                a.getREST("/gui/queue2/chime", {
                    bbx_queue_id: j.bbx_queue_id
                }, function (G) {
                    G = G.chime;
                    q.empty();
                    G = G.sort(function (J, E) {
                        return cmp(J.bbx_queue_chime_map_order, E.bbx_queue_chime_map_order)
                    });
                    a(".noChimes", b).remove();
                    G.length ? a.each(G, function () {
                        var J = a(".chimeItem",
                            c).clone().data("bbx_queue_chime_map", this);
                        a(".soundName", J).text(this.bbx_sound_id.bbx_sound_name);
                        J.appendTo(q);
                        a(".chimePlayer", J).miniSoundWidget("/gui/sound_file/playback?bbx_sound_id=" + this.bbx_sound_id.bbx_sound_id + "&sessionid=" + getSessionID())
                    }) : a(".noChimes", c).clone().appendTo(a(".chimeList", b));
                    if (q.closest(".onlyIfFullEdit")[0] && !g.hasEditPermission) {
                        a("a", q).hide();
                        a("a, input, select", q).unbind("click change").bind("click", function (J) {
                            J.preventDefault()
                        })
                    }
                })
            };
        a("a.opDeleteChime", q[0]).live("click",
            function (G) {
                G.preventDefault();
                var J = a(this).closest(".chimeItem");
                G = J.data("bbx_queue_chime_map");
                a.deleteREST("/gui/queue2/chime", {
                    bbx_queue_chime_map_id: G.bbx_queue_chime_map_id
                }, {
                    success: function () {
                        J.remove();
                        var E = a(".chimeList", b);
                        a(".chimeItem", E)[0] || a(".noChimes", c).clone().appendTo(E)
                    },
                    error: function () {
                        showError("Internal error deleting the announcement");
                        u()
                    }
                })
            });
        u();
        q.sortable({
            handle: ".grippy",
            stop: function () {
                var G = [];
                a(".chimeList > .chimeItem", b).each(function () {
                    G.push(a(this).data("bbx_queue_chime_map").bbx_queue_chime_map_id)
                });
                a.putREST("/gui/queue2/chime_order", {
                    bbx_queue_id: j.bbx_queue_id,
                    bbx_queue_chime_map_id: G
                }, {
                    error: function () {
                        showError("Could not re-arrange the announcement order: announcements may have changed. Please try again.");
                        u()
                    }
                })
            }
        });
        a("a.opAddChime", ()
                                })
                            }
                        }], {
                            doubleClickFirst: false
                        })
                    })
                })
            };
        o();
        var n = a(".addAgentForm", b);
        a(".addAgentInput", n).extensionPicker({
            searchTypes: ["user"],
            hidden: a(".addAgentHidden", n),
            hiddenFormat: "bbx_extension_id",
            textFormat: "number",
            autoSelectFirst: true
        }).bind("selection", function () {
            var G = a(".addAgentHidden", n).val();
            a(".addAgentHidden, .addAgentInput", n).val("");
            G && a.postREST("/gui/queue2/agent", {
                bbx_extension_id: G,
                bbx_queue_id: j.bbx_queue_id
            }, function () {
                o()
            })
        });
        a(".mohForm > .mohPicker", b).mohPicker({
            bbx_moh_id: j.bbx_moh_id
        });
        a(".chimeFreq", b).val(j.bbx_queue_chime_freq);
        var q = a(".chimeList", b),
            u = function () {
                a.getREST("/gui/queue2/chime", {
                    bbx_queue_id: j.bbx_queue_id
                }, function (G) {
                    G = G.chime;
                    q.empty();
                    G = G.sort(function (J, E) {
                        return cmp(J.bbx_queue_chime_map_order, E.bbx_queue_chime_map_order)
                    });
                    a(".noChimes", b).remove();
                    G.length ? a.each(G, function () {
                        var J = a(".chimeItem",
                            c).clone().data("bbx_queue_chime_map", this);
                        a(".soundName", J).text(this.bbx_sound_id.bbx_sound_name);
                        J.appendTo(q);
                        a(".chimePlayer", J).miniSoundWidget("/gui/sound_file/playback?bbx_sound_id=" + this.bbx_sound_id.bbx_sound_id + "&sessionid=" + getSessionID())
                    }) : a(".noChimes", c).clone().appendTo(a(".chimeList", b));
                    if (q.closest(".onlyIfFullEdit")[0] && !g.hasEditPermission) {
                        a("a", q).hide();
                        a("a, input, select", q).unbind("click change").bind("click", function (J) {
                            J.preventDefault()
                        })
                    }
                })
            };
        a("a.opDeleteChime", q[0]).live("click",
            function (G) {
                G.preventDefault();
                var J = a(this).closest(".chimeItem");
                G = J.data("bbx_queue_chime_map");
                a.deleteREST("/gui/queue2/chime", {
                    bbx_queue_chime_map_id: G.bbx_queue_chime_map_id
                }, {
                    success: function () {
                        J.remove();
                        var E = a(".chimeList", b);
                        a(".chimeItem", E)[0] || a(".noChimes", c).clone().appendTo(E)
                    },
                    error: function () {
                        showError("Internal error deleting the announcement");
                        u()
                    }
                })
            });
        u();
        q.sortable({
            handle: ".grippy",
            stop: function () {
                var G = [];
                a(".chimeList > .chimeItem", b).each(function () {
                    G.push(a(this).data("bbx_queue_chime_map").bbx_queue_chime_map_id)
                });
                a.putREST("/gui/queue2/chime_order", {
                    bbx_queue_id: j.bbx_queue_id,
                    bbx_queue_chime_map_id: G
                }, {
                    error: function () {
                        showError("Could not re-arrange the announcement order: announcements may have changed. Please try again.");
                        u()
                    }
                })
            }
        });
        a("a.opAddChime", b).bind("click", function (G) {
            G.preventDefault();
            G = a(".newChime", b);
            if (!G.is("visible")) {
                a(".newChimePicker", G).text("Loading...");
                a(".newChimePicker", G).soundPicker({
                    name: "bbx_sound_id",
                    allowNone: false
                });
                G.show()
            }
        });
        a("a.newChimeApply", b).bind("click", function (G) {
            G.preventDefault();
            G = a(this).closest(".newChime");
            var J = a("[name=bbx_sound_id]", G).val();
            G.hide();
            a.postREST("/gui/queue2/chime", {
                bbx_queue_id: j.bbx_queue_id,
                bbx_sound_id: J
            }, {
                complete: function () {
                    u()
                }
            })
        });
        a(".ringTime", b).val(j.bbx_queue_ring_timeout || "").mask("?9999999999", {
            placeholder: ""
        });
        var v = j.params.orbit_exten_timeout;
        f = j.params.orbit_exten_id;
        var x = {
            searchTypes: ["bbx_user_id", "bbx_group_id", "bbx_queue_id", "bbx_conference_id", "bbx_auto_attendant_id", "bbx_router_id", "unassignedphone"],
            hidden: a(".orbitDestHidden",
                b),
            hiddenFormat: "bbx_extension_id",
            textFormat: "number",
            mustValidate: true,
            autoSelectFirst: true
        };
        if (v && f) x.initialSearch = {
            bbx_extension_id: f
        };
        a(".orbitDest", b).extensionPicker(x);
        var z = 1;
        if (v) {
            a(".orbitMultiplier > option", b).each(function () {
                v % a(this).val() || (z = a(this).val())
            });
            a(".orbitMultiplier", b).val(z);
            a(".orbitTimeout", b).val(v / z)
        }
        a(".orbitForm .opClearSubmit", b).bind("click", function (G) {
            G.preventDefault();
            a.deleteREST("/gui/queue2/queue_orbit", {
                bbx_queue_id: j.bbx_queue_id
            }, function () {
                a(".orbitDestHidden, .orbitDest, .orbitTimeout",
                    b).val("")
            })
        });
        a(".orbitForm", b).bind("autoSubmitSuccess", function (G, J) {
            if (J && !J.result) {
                var E = a(this).find(".orbitDest"),
                    M = a(this).find(".orbitTimeout");
                E.val() == "" ? E.markInvalid("No extension selected") : E.clearInvalid();
                M.val() == "" ? M.markInvalid("No timeout specified") : M.clearInvalid()
            } else a("input", a(this)).clearInvalid()
        });
        if (j.params.record_calls) {
            f = a("input[name=record_calls]", b).attr("checked", true);
            var B = a("input[name=record_keep_days]", b);
            B.val(j.params.record_keep_days || "");
            B.add(f).bind("change",
                function () {
                    var G = B.val();
                    if (!parseInt(G, 10) || isNaN(parseInt(G, 10)) && a("input[name=record_calls]", b).is(":checked")) B.val("7").qtipMessage({
                        style: "notice",
                        message: "Default value inserted"
                    })
                });
            a("input[name=recording-mailto]", b).val(j.params["recording-mailto"])
        }
        a(".outboundPerCycle", b).val(j.outbound_per_cycle);
        var C = ["Not Set", "Highest", "High", "High", "Medium", "Default", "Medium", "Low", "Low", "Low", "Lowest"];
        f = j.outbound_priority || 5;
        a(".prioritySliderValue", b).text(f + " (" + C[f] + ")");
        a(".outboundPriority",
            b).val(f);
        a(".prioritySlider", b).slider({
            min: 1,
            max: 10,
            value: j.outbound_priority,
            slide: function (G, J) {
                a(".prioritySliderValue", b).text(J.value + " (" + C[J.value] + ")")
            },
            change: function (G, J) {
                a(".outboundPriority", b).val(J.value);
                a(".outboundPriority", b).trigger("change")
            }
        });
        a(".warningSeconds", b).val(j.bbx_queue_warning_seconds);
        a(".warningCalls", b).val(j.bbx_queue_warning_calls);
        a(".criticalSeconds", b).val(j.bbx_queue_critical_seconds);
        a(".criticalCalls", b).val(j.bbx_queue_critical_calls);
        a(".outboundName",
            b).val(j.outbound_name);
        a(".popupURL", b).val(j.bbx_queue_popup_url);
        a(".secondary", b).secondaryExt("bbx_queue_id", j.bbx_queue_id, {
            readonly: !g.hasEditPermission
        });
        a(".aa", b).secondaryExt("bbx_queue_id", j.bbx_queue_id, {
            agent_access: true,
            readonly: !g.hasEditPermission
        });
        if (!g.hasEditPermission) {
            f = a(".onlyIfFullEdit", b);
            a("input, select", f).attr("disabled", "disabled");
            a(".ui-sortable", f).sortable("disable");
            a(".ui-slider", f).slider("disable");
            a("a", f).hide();
            a("a, input, select", f).unbind("click change").bind("click",
                function (G) {
                    G.preventDefault()
                })
        }
        a("input[value={bbx_queue_id}]", b).val(j.bbx_queue_id);
        var w = a("[name=bbx_queue_popup_url]", b);
        w.data("autoSubmitBeforeSerialize", function () {
            var G = w.val();
            G = G.replace(/^ +/, "").replace(/ +$/, "");
            var J = G.match(/^([^ ]+) +(.+)/);
            if (J && !J[2].match(/^[-a-zA-Z]+:\/\//)) w.val(J[1] + " http://" + J[2]);
            else !J && G && !G.match(/^[-a-zA-Z]+:\/\//) && w.val("http://" + G)
        })
    };
    a.fn.queueDetail = function (f, j) {
        var g = this;
        j = j || {};
        a.getTemplate("/ajax-html/queue_detail.html", function (c) {
            var b =
                function (l, o) {
                    g.each(function () {
                        var n = a(c).replaceAll(this);
                        o = o || {};
                        e(n, l, o)
                    })
            };
            if (typeof f == "object")
                if (f.jsQueue) f = f.jsQueue.bbx_queue_id;
                else if (f.bbx_queue_id) f = f.bbx_queue_id;
            a.getREST("/gui/queue2/queue", {
                bbx_queue_id: f
            }, function (l) {
                a.getREST("/gui/queue2/param", {
                    bbx_queue_id: f
                }, function (o) {
                    a.getREST("/gui/permission/check", {
                        bbx_permission_name: "EDIT_QUEUE"
                    }, function (n) {
                        var q = l.queue[0];
                        q.params = o.param;
                        j.hasEditPermission = n.self.EDIT_QUEUE ? true : false;
                        b(q, j)
                    })
                })
            })
        })
    }
})(jQuery);
(function (a) {
    var e = function (f, j, g) {
        var c = j.registrations,
            b = j.group,
            l = a(".staticBody", f);
        j = a(".template", f);
        var o = a(".switchboardUL", l),
            n = [],
            q = {}, u = {};
        b ? a(".filterDescription", l).text("Filtered by Group: " + b).show() : a(".filterDescription", l).hide();
        g.popupLink ? a(".opPopup", l).show().bind("click", function (w) {
            w.preventDefault();
            windowOpen({
                preset: "fullscreen",
                url: g.popupLink + (g.bbx_group_id ? "#bbx_group_id=" + g.bbx_group_id : "")
            })
        }) : a(".opPopup", l).hide();
        a(".groupFilterText", l).extensionPicker({
            hidden: a(".groupFilterHidden",
                l).eq(0),
            hiddenFormat: "object_id",
            searchTypes: ["group"],
            textFormat: "number",
            autoSelectFirst: true
        }).bind("selection", function () {disable("novalue") : n.enable("novalue")
                });
                a("form", l).bind("submit", function (q) {
                    q.preventDefault();
                    q = {};
                    q[j.prefix + "_id"] = j[j.prefix + "_id"];
                    q[j.name_param || j.prefix + "_name"] = o.val();
                    a.putREST(j.restURL, q, function (u) {
                        var v, x;
                        for (x in u)
                            if (x != "error" && u[x][j.prefix + "_id"]) {
                                v = u[x];
                                break
                            }
                        u = v[j.name_param || j.prefix + "_name"];
                        a(".name", f).text(u);
                        j.name = u;
                        l.trigger("close_request")
                    })
                })
            })
        }) : a(".opRename", f).remove();
        g.migrate && j.bbx_extension_id ?
            a(".opMigrate", f).show().bind("click", function (b) {
                b.preventDefault();
                var l = showPopup("extension_migrate", {}, true);
                l.bind("popup_ready", function () {
                    l.bind("close_request", function () {
                        f.trigger("refreshDetail")
                    });
                    a(".newNameInput", l).val(j.name);
                    a(".migrateExtensionPicker", l).bind("valid", function () {
                        l.find("button[type=submit]").enable("extension_ok")
                    }).bind("invalid", function () {
                        l.find("button[type=submit]").disable("extension_ok")
                    }).extensionValidator({
                        allow: ["nextfree", "single"]
                    });
                    a("form", l).bind("submit",
                        function (o) {
                            o.preventDefault();
                            o = a(this).serialize() + "&bbx_extension_id=" + j.bbx_extension_id;
                            a.putREST("/gui/extension/migrate", o, function () {
                                l.trigger("close_request")
                            })
                        })
                })
            }) : a(".opMigrate", f).remove();
        g["delete"] ? a(".opDelete", f).show().bind("click", function (b) {
            b.preventDefault();
            var l = showPopup("extension_delete", {}, true);
            l.bind("popup_ready", function () {
                a(".name", l).text(j.name);
                a(".opDelete", l).bind("click", function (o) {
                    o.preventDefault();
                    o = {};
                    o[j.prefix + "_id"] = j[j.prefix + "_id"];
                    a(this).disable("working");
                    a.deleteREST(j.restURL, o, function () {
                        l.trigger("close_request");
                        f.trigger("close_request")
                    })
                })
            })
        }) : a(".opDelete", f).remove();
        a(".edmOps > a", f).not(":last").after(document.createTextNode(", "))
    };
    a.fn.extensionDetailMasthead = function (f) {
        var j = this;
        f = f || {};
        f.buttons = f.buttons || ["rename", "migrate", "delete"];
        if (!(f.prefix && f[f.prefix + "_id"] && f.restURL && f.name)) return false;
        a.getTemplate("/ajax-html/extension_detail_masthead.html", function (g) {
            j.each(function () {
                var c = a(g).replaceAll(this);
                e(c, f)
            })
        })
    }
})(jQuery);
(function (a) {
    var e = [{
        name: "total",
        display: "Total time"
    }, {
        name: "average",
        display: "Average time"
    }, {
        name: "averageWait",
        display: "Average wait"
    }, {
        name: "n_in",
        display: "Calls In"
    }, {
        name: "n_out",
        display: "Calls Out"
    }, {
        name: "last_call_start",
        display: "Last Call"
    }],
        f = {
            bbx_report_json: {
                time: "0",
                since: "same day",
                filter_by_group: "0",
                leader_sort: "",
                leader_rows: "",
                leader_refresh: "10000"
            }
        }, j = function (g) {
            var c = a(".staticBody", g),
                b = a(".template", g),
                l = function (q) {
                    var u = a(".reportLoadSelect", c);
                    a(".opDelete, .opEdit",
                        c).attr("disabled", "disabled");
                    u.bind("change.undisable", function () {
                        if (trueish(a(this).val())) {
                            a(".opDelete, .opEdit", c).removeAttr("disabled");
                            a(this).unbind("change.undisable")
                        }
                    });
                    u.empty();
                    a.getREST("/gui/report/report", {
                        bbx_report_type: "group",
                        sortby: "bbx_report_name",
                        sortorder: "asc"
                    }, function (v) {
                        if (v.report.length) {
                            v.report = v.report.sort(function (x, z) {
                                return cmp(x.bbx_report_name.toLowerCase(), z.bbx_report_name.toLowerCase())
                            });
                            a.each(v.report, function () {
                                u.append(sprintf('<option value="%s">%s</option>',
                                    this.bbx_report_id, this.bbx_report_name))
                            });
                            q && u.val(q).trigger("change")
                        } else u.append(sprintf('<option value="0">There are no saved reports on this system</option>', this.bbx_report_id, this.bbx_report_name))
                    })
                };
            l();
            var o = function (q, u) {
                n(q, u);
                a(".reportSettingsForm .settingTable > tbody", u).append(a(".reportSettingsEdit", b).clone());
                a(".reportNameInput", u).val(q.bbx_report_name);
                if (q.bbx_report_id) {
                    a(".reportWrapReportName", c).text(q.bbx_report_name);
                    a(".report", c).empty().groupActivity({
                        bbx_report_id: q.bbx_report_id
                    });
                    a(".opCSV", c).attr("href", "/gui/group_report/member_csv?bbx_report_id=" + q.bbx_report_id)
                } else {
                    a(".reportWrapReportName", c).text("No Saved Report Loaded");
                    a(".report", c).empty().append(a(".noReportLoaded", b).clone())
                }
            }, n = function (q, u) {
                    var v = q.bbx_report_json;
                    if (typeof v == "string") try {
                        v = JSON.parse(v)
                    } catch (x) {
                        showError("Internal error: Report specification data is malformed")
                    }
                    u.empty().data("bbx_report", q);
                    var z = function (E) {
                        var M = a(".reportScheduleRow", b).clone().appendTo(a(".reportScheduleTable", u));
                        M.data("bbx_report_schedule", E);
                        var R = E.bbx_report_schedule_when.match(/^(\d\d?):(\d\d)/);
                        R = R[1] > 12 ? (R[1] - 12 || 12) + ":" + R[2] + "PM" : (parseInt(R[1]) || 12) + ":" + R[2] + " AM";
                        a(".emailAddress", M).text(E.bbx_report_schedule_email);
                        a(".time", M).text(R);
                        M.contextMenu([{
                            title: "Remove",
                            fn: function () {
                                var O = a(this),
                                    Y = O.data("bbx_report_schedule");
                                a.deleteREST("/gui/report/schedule", {
                                    bbx_report_schedule_id: Y.bbx_report_schedule_id
                                }, function () {
                                    O.remove()
                                })
                            }
                        }], {
                            doubleClickFirst: false
                        })
                    };
                    if (q.bbx_report_id) {
                        a(".reportScheduleForm",
                            b).clone().appendTo(u);
                        var B = function () {
                            a.getREST("/gui/report/schedule", {
                                bbx_report_id: q.bbx_report_id
                            }, function (E) {
                                if (E.schedule.length) {
                                    a(".reportScheduleTable > tbody", u).empty();
                                    a.each(E.schedule, function () {
                                        z(this)
                                    })
                                }
                            })
                        };
                        B();
                        a(".btnAddReportTime", u).bind("click", function () {
                            var E = a(".newReportEmail", u).val(),
                                M = a(".newReportTime", u).val();
                            if (E) {
                                a.postREST("/gui/report/schedule", {
                                    bbx_report_id: q.bbx_report_id,
                                    bbx_report_schedule_when: M,
                                    bbx_report_schedule_email: E
                                }, function () {
                                    B()
                                });
                                a(".newReportEmail",
                                    u).val("");
                                a(".newReportTime", u).find("option:first").attr("selected", "selected")
                            } else alert("You must enter an email address")
                        })
                    } else a(".notSavedReport", b).clone().appendTo(u);
                    var C = a(".reportSettingsForm", b).clone().appendTo(u);
                    a("input.leaderboardLimit, input[name=min_time]", C).mask("?999999", {
                        placeholder: ""
                    });
                    a.each(e, function () {
                        a(".leaderboardColumn", C).append('<option value="' + this.name + '">' + this.display + "</option>")
                    });
                    C.unserializeObject(v);
                    if (a.isArray(v.between)) {
                        var w = v.between;
                        a(".dateStart",
                            C).val(w[0]);
                        a(".dateEnd", C).val(w[1])
                    }
                    trueish(v.sort_is_fallback) && a(".leaderboardSort", u).val(a(".leaderboardSort > option:eq(0)").val());
                    var G = a(".customDateRange", C);
                    a(".selSince", C).bind("change", function () {
                        a(this).val() === "RANGE" ? G.show().find("input[disabled]").removeAttr("disabled") : G.hide().find("input").attr("disabled", "disabled");
                        a(".dateEnd.hasDatepicker", G).datepicker("destroy");
                        a(".dateStart.hasDatepicker", G).datepicker("destroy");
                        var E = {
                            showAnim: "",
                            changeMonth: true,
                            changeYear: true,
                            dateFormat: "MM d, yy"
                        };
                        a(".dateEnd", G).attr("id", getUnique("dp")).datepicker(E).datepicker("setDate", a(".dateEnd", G).val() || new Date);
                        a(".dateStart", G).attr("id", getUnique("dp")).datepicker(E).datepicker("setDate", a(".dateStart", G).val() || new Date)
                    }).trigger("change");
                    a(".leaderboardSort", C).bind("change", function () {
                        var E = a(this);
                        if (E.val()) {
                            E.closest("td.form").find("input, select").removeAttr("disabled");
                            a(".fallbackSort", u).attr("disabled", "disabled")
                        } else {
                            E.closest("td.form").find("input, select").not(E).attr("disabled",
                                "disabled");
                            a(".fallbackSort", u).removeAttr("disabled")
                        }
                    }).trigger("change");
                    a(".filterGroupRadio", C).bind("click", function () {
                        var E = a(this).closest("td.form");
                        if (a(this).is(":checked"))
                            if (trueish(a(this).val())) {
                                E.find("button, input:not([type=radio])").removeAttr("disabled");
                                E.find(".disabled").removeClass("disabled")
                            } else {
                                E.find("button, input:not([type=radio])").attr("disabled", "disabled");
                                E.find(".disableable").addClass("disabled")
                            }
                    }).filter(":checked").trigger("click");
                    var J = function (E) {
                        var M =
                            a(".groupFilterItem", b).clone();
                        M.appendTo(a(".groupFilterList", u));
                        M.contextMenu([{
                            title: "Remove",
                            fn: function () {
                                a(this).remove()
                            }
                        }], {
                            doubleClickFirst: false
                        });
                        a(".groupFilterItemHidden", M).val(E);
                        a.getREST("/gui/group/basic", {
                            bbx_group_id: E
                        }, function (R) {
                            R = R.basic[0];
                            a(".groupItemName", M).text(R.bbx_group_name).data("bbx_group", R)
                        })
                    };
                    a(".groupFilterInput", u).extensionPicker({
                        hidden: a(".groupFilterID", u),
                        hiddenFormat: "object_id",
                        searchTypes: ["group"],
                        textFormat: "number",
                        autoSelectFirst: true
                    }).bind("selection",
                        function () {
                            var E = a(".groupFilterID", u).val();
                            J(E);
                            a(this).val("")
                        });
                    if (v.bbx_group_id) {
                        if (!a.isArray(v.bbx_group_id)) v.bbx_group_id = [v.bbx_group_id];
                        a.each(v.bbx_group_id, function () {
                            J(this)
                        })
                    }
                };
            (function () {
                a(".reportLoadSelect", c).bind("change", function () {
                    if (trueish(a(this).val())) {
                        a(this).closest("form");
                        var q = a(this).val();
                        q ? a.getREST("/gui/report/report", {
                            bbx_report_id: q,
                            bbx_report_type: "group"
                        }, function (u) {
                            u.report.length ? o(u.report[0], a(".reportSettings", c)) : showError("This is not a valid report. The report may have been deleted.")
                        }) :
                            showError("This is not a valid report name")
                    }
                });
                a(".opNew", c).bind("click", function () {
                    n(f, a(".newReport", c));.trigger("change");
                    a(".leaderboardSort", C).bind("change", function () {
                        var E = a(this);
                        if (E.val()) {
                            E.closest("td.form").find("input, select").removeAttr("disabled");
                            a(".fallbackSort", u).attr("disabled", "disabled")
                        } else {
                            E.closest("td.form").find("input, select").not(E).attr("disabled",
                                "disabled");
                            a(".fallbackSort", u).removeAttr("disabled")
                        }
                    }).trigger("change");
                    a(".filterGroupRadio", C).bind("click", function () {
                        var E = a(this).closest("td.form");
                        if (a(this).is(":checked"))
                            if (trueish(a(this).val())) {
                                E.find("button, input:not([type=radio])").removeAttr("disabled");
                                E.find(".disabled").removeClass("disabled")
                            } else {
                                E.find("button, input:not([type=radio])").attr("disabled", "disabled");
                                E.find(".disableable").addClass("disabled")
                            }
                    }).filter(":checked").trigger("click");
                    var J = function (E) {
                        var M =
                            a(".groupFilterItem", b).clone();
                        M.appendTo(a(".groupFilterList", u));
                        M.contextMenu([{
                            title: "Remove",
                            fn: function () {
                                a(this).remove()
                            }
                        }], {
                            doubleClickFirst: false
                        });
                        a(".groupFilterItemHidden", M).val(E);
                        a.getREST("/gui/group/basic", {
                            bbx_group_id: E
                        }, function (R) {
                            R = R.basic[0];
                            a(".groupItemName", M).text(R.bbx_group_name).data("bbx_group", R)
                        })
                    };
                    a(".groupFilterInput", u).extensionPicker({
                        hidden: a(".groupFilterID", u),
                        hiddenFormat: "object_id",
                        searchTypes: ["group"],
                        textFormat: "number",
                        autoSelectFirst: true
                    }).bind("selection",
                        function () {
                            var E = a(".groupFilterID", u).val();
                            J(E);
                            a(this).val("")
                        });
                    if (v.bbx_group_id) {
                        if (!a.isArray(v.bbx_group_id)) v.bbx_group_id = [v.bbx_group_id];
                        a.each(v.bbx_group_id, function () {
                            J(this)
                        })
                    }
                };
            (function () {
                a(".reportLoadSelect", c).bind("change", function () {
                    if (trueish(a(this).val())) {
                        a(this).closest("form");
                        var q = a(this).val();
                        q ? a.getREST("/gui/report/report", {
                            bbx_report_id: q,
                            bbx_report_type: "group"
                        }, function (u) {
                            u.report.length ? o(u.report[0], a(".reportSettings", c)) : showError("This is not a valid report. The report may have been deleted.")
                        }) :
                            showError("This is not a valid report name")
                    }
                });
                a(".opNew", c).bind("click", function () {
                    n(f, a(".newReport", c));           var l = a(b).replaceAll(this);
                    help_activate(l);
                    j(l, g)
                })
            })
    }
})(jQuery);
(function (a) {
    var e = ["lastname", "n_out", "total_out_secs", "average_out_secs", "total_wait_secs", "average_wait_secs", "n_in", "total_in_secs", "average_in_secs", "n", "total", "average", "last_call_start"],
        f = {}, j;
    for (j in e) f[e[j]] = parseInt(j);
    var g = function (c, b, l) {
        var o = a(".template", c),
            n = a(".staticBody", c),
            q = {}, u = {};
        if (typeof b.bbx_report_json == "string") try {
            b.bbx_report_json = JSON.parse(b.bbx_report_json)
        } catch (v) {
            console_log("jquery.groupActivity.js: error parsing report JSON")
        }
        var x = function (E, M) {
            if (E) {
                E.data("calls") ||
                    E.data("calls", []);
                M.bindNamespace = getUnique("ns");
                M.offsetStart = unixTime() - M.time;
                E.data("calls", E.data("calls").concat([M]));
                var R = M.uuid;
                q[R] = q[R] || [];
                q[R].push(E);
                C(E)
            } else console_log("jquery.groupActivity.js: addCall called without a proper row parameter")
        }, z = function (E) {
                var M = a(".tableRow", o).clone();
                a(".nameStatus", M).data("sort", E.sort_name);
                u[E.bbx_user_id] = M;
                E.calls && E.calls.length ? a.each(E.calls, function (R, O) {
                    x(M, {
                        callee_name: trueish(O.i_am_caller) ? O.callee_name : O.cid_name || O.caller_name,
                        callee_num: trueish(O.i_am_caller) ? O.callee_num : O.cid_num || O.caller_num,
                        uuid: trueish(O.i_am_caller) ? O.uuid : O.other_uuid,
                        time: O.age
                    })
                }) : w(M);
                M.data("rowData", E);
                a(".name", M).text(E.show_name);
                a(".outgoing", M).text(E.n_out + "");
                a(".outTime", M).text(a.formatInterval(E.total_out_secs || 0, {
                    format: "medium"
                }));
                a(".outTime", M).data("sort", parseInt(E.total_out_secs || 0));
                a(".outAvg", M).text(a.formatInterval(E.average_out_secs || 0, {
                    format: "medium"
                }));
                a(".outAvg", M).data("sort", parseInt(E.average_out_secs || 0));
                a(".incoming",
                    M).text(E.n_in + "");
                a(".inTime", M).text(a.formatInterval(E.total_in_secs || 0, {
                    format: "medium"
                }));
                a(".inTime", M).data("sort", parseInt(E.total_in_secs || 0));
                a(".inAvg", M).text(a.formatInterval(E.average_in_secs || 0, {
                    format: "medium"
                }));
                a(".inAvg", M).data("sort", parseInt(E.average_in_secs));
                a(".totalCount", M).text(parseInt(E.n) || "0");
                a(".total", M).text(a.formatInterval(E.total_secs || 0, {
                    format: "medium"
                }));
                a(".total", M).data("sort", parseInt(E.total_secs || 0));
                a(".average", M).text(a.formatInterval(E.average_secs ||
                    0, {
                        format: "medium"
                    }));
                a(".average", M).data("sort", parseInt(E.average_secs || 0));
                a(".totalWait", M).text(a.formatInterval(E.total_wait_secs || 0, {
                    format: "medium"
                }));
                a(".totalWait", M).data("sort", parseInt(E.total_wait_secs || 0));
                a(".averageWait", M).text(a.formatInterval(E.average_wait_secs || 0, {
                    format: "medium"
                }));
                a(".averageWait", M).data("sort", parseInt(E.average_wait_secs || 0));
                if (trueish(E.last_call_secs)) {
                    a(".lastTime", M).text(format_age(E.last_call_start_ago));
                    a(".lastSecs", M).text(E.last_call_secs ? " (" +
                        a.formatInterval(E.last_call_secs) + ")" : "");
                    a(".last", M).data("sort", E.last_call_start)
                } else a(".last", M).text("(No calls)").data("sort", 0);
                return M
            }, B = function (E) {
                var M = E.data("rowData");
                M && M.bbx_user_id && l.bbx_report_id ? a.getJSON("/gui/group_report/member_status", {
                    bbx_report_id: l.bbx_report_id,
                    bbx_user_id: M.bbx_user_id
                }, function (R) {
                    if (R && R.member_status && R.member_status[0]) {
                        R = z(R.member_status[0]);
                        E.replaceWith(R);
                        R.closest("table").trigger("update").trigger("applyWidgets")
                    }
                }) : console_log("Error: No row User ID found to reload")
            },
            C = function (E) {
                a(".currentCall", E).empty().append(a(".callDetail", o).clone());
                a("td.nameStatus", E).addClass("oncall");
                var M = E.data("calls");
                if (M && M.length) {
                    var R = M[M.length - 1];
                    M = formatCID(R.callee_name, R.callee_num);
                    a(".cidName", E).text(M);
                    a(window).bind("tick." + R.bindNamespace, function () {
                        var O = E.data("calls");
                        O && O.length && O[O.length - 1].bindNamespace == R.bindNamespace ? a(".callTime", E).text(a.timeSince(R.offsetStart, {
                            precision: 2,
                            format: "medium"
                        })) : a(window).unbind("tick." + R.bindNamespace)
                    });
                    a(".callTime",
                        E).text()
                } else w(E)
            }, w = function (E) {
                a("td.oncall", E).removeClass("oncall");
                a(".currentCall", E).empty().append(a(".noCall", o).clone())
            }, G = function (E) {
                var M = q[E];
                if (!M) return false;
                for (var R in M) {
                    var O = M[R],
                        Y = O.data("calls"),
                        na;
                    for (na in Y)
                        if (Y[na].uuid == E) {
                            Y.splice(na, 1);
                            setTimeout(function () {
                                B(O);
                                C(O)
                            }, 5E3)
                        }
                }
            }, J = function (E, M, R) {
                tbody = a("tbody.gaTableBody", n);
                tbody.empty();
                M.length == 0 ? tbody.append("<tr><td>No results found.</td><td></td><td></td><td></td><td></td><td></td></tr>") : a.each(M, function () {
                    z(this).appendTo(tbody)
                });
                M = function (qa) {
                    qa = a(qa);
                    var Na = qa.data("sort");
                    return Na ? Na.toString() : qa.text()
                };
                var O = E.data("events");
                if (O && O.applyWidgets) E.trigger("update").trigger("applyWidgets");
                else {
                    O = [
                        [f[b.bbx_report_json.sortby] || 0, b.bbx_report_json.sortorder == "asc" ? 0 : 1]
                    ];
                    var Y = R ? {
                        sorter: false
                    } : {
                        sorter: "digit"
                    };
                    E.tablesorter({
                        widgets: ["zebra"],
                        textExtraction: M,
                        sortList: R ? false : O,
                        headers: [R ? {
                                sorter: false
                            } : {},
                            Y, Y, Y, Y, Y, Y, Y, Y, Y, Y
                        ]
                    });
                    if (n.closest(".groupActivityWrap")[0]) {
                        var na = n.closest(".groupActivityWrap").children(".staticBody");
                        E.bind("sortStart", function () {
                            var qa;
                            qa = E[0].config.sortList;
                            qa = qa[0] ? {
                                sortby: e[qa[0][0]],
                                sortorder: qa[0][1] ? "desc" : "asc"
                            } : {
                                sortby: e[0],
                                sortorder: "asc"
                            };
                            a(".fallbackSortorder", na).val(qa.sortorder);
                            a(".fallbackSortby", na).val(qa.sortby)
                        })
                    }
                }
            };
        a.getJSON("/gui/group_report/member_status", {
            bbx_report_id: l.bbx_report_id
        }, function (E) {
            data = E.member_status;
            table = a("table.gaTable", n);
            J(table, data, b.bbx_report_json.leader_refresh);
            if (b.bbx_report_json.leader_refresh && parseInt(b.bbx_report_json.leader_refresh) >=
                1E4) var M = setInterval(function () {
                n.closest("body")[0] ? a.getJSON("/gui/group_report/member_status", {
                    bbx_report_id: l.bbx_report_id
                }, function (O) {
                    J(table, O.member_status, b.bbx_report_json.leader_refresh)
                }) : clearInterval(M)
            }, parseInt(b.bbx_report_json.leader_refresh));
            Ape.subscribe("channel_hangup");
            var R = getUnique("ns");
            a(window).bind("meteor_channel_hangup." + R, function (O, Y) {
                c.closest("body") ? G(Y.json.uuid) : a(window).unbind("meteor_channel_hangup." + R)
            });
            a(window).bind("meteor_call_event", function (O, Y) {
                Y =
                    Y.json;
                var na = Y.variable_call_uuid == Y.uuid ? true : false;
                if (Y.call_event == "channel_answer" && Y.bbx_user_id && u[Y.bbx_user_id]) x(u[Y.bbx_user_id], {
                    callee_name: na ? Y.caller_destination_formatted : Y.cid_name,
                    callee_num: na ? Y.caller_destination_number : Y.cid_number,
                    uuid: Y.uuid,
                    time: 0
                })
            })
        })
    };
    a.fn.groupActivity = function (c) {
        var b = this;
        c = c || {};
        a.getTemplate("/ajax-html/group_activity.html", function (l) {
            a.getREST("/gui/report/report", {
                bbx_report_id: c.bbx_report_id
            }, function (o) {
                b.each(function () {
                    var n = a(l);
                    a(this).empty().append(n);
                    g(n, o.report[0], c)
                })
            })
        })
    }
})(jQuery);
(function (a) {
    a.fn.providersTable = function (j) {
        var g = this;
        Ape.subscribe(["provider_status"]);
        this.jsonTable("destroy").jsonTable({
            url: "/gui/gateway/siplist",
            type: "GET",
            rows: 10,
            page: 1,
            sortby: "bbx_provider_gateway_name",
            sortorder: "asc",
            rowDataRoot: "siplist",
            columnData: [{
                header: "",
                value: 'static:<img src="/images/typeicons/provider.png" width="20" height="20" />',
                render: "html"
            }, {
                header: "Name",
                value: "bbx_provider_gateway_name",
                sortby: "bbx_provider_gateway_name"
            }, {
                header: "Account",
                value: function (c) {
         ders: [R ? {
                                sorter: false
                            } : {},
                            Y, Y, Y, Y, Y, Y, Y, Y, Y, Y
                        ]
                    });
                    if (n.closest(".groupActivityWrap")[0]) {
                        var na = n.closest(".groupActivityWrap").children(".staticBody");
                        E.bind("sortStart", function () {
                            var qa;
                            qa = E[0].config.sortList;
                            qa = qa[0] ? {
                                sortby: e[qa[0][0]],
                                sortorder: qa[0][1] ? "desc" : "asc"
                            } : {
                                sortby: e[0],
                                sortorder: "asc"
                            };
                            a(".fallbackSortorder", na).val(qa.sortorder);
                            a(".fallbackSortby", na).val(qa.sortby)
                        })
                    }
                }
            };
        a.getJSON("/gui/group_report/member_status", {
            bbx_report_id: l.bbx_report_id
        }, function (E) {
            data = E.member_status;
            table = a("table.gaTable", n);
            J(table, data, b.bbx_report_json.leader_refresh);
            if (b.bbx_report_json.leader_refresh && parseInt(b.bbx_report_json.leader_refresh) >=
                1E4) var M = setInterval(function () {
                n.closest("body")[0] ? a.getJSON("/gui/group_report/member_status", {
                    bbx_report_id: l.bbx_report_id
                }, function (O) {
                    J(table, O.member_status, b.bbx_report_json.leader_refresh)
                }) : clearInterval(M)
            }, parseInt(b.bbx_report_json.leader_refresh));
            Ape.subscribe("channel_hangup");
            var R = getUnique("ns");
            a(window).bind("meteor_channel_hangup." + R, function (O, Y) {
                c.closest("body") ? G(Y.json.uuid) : a(window).unbind("meteor_channel_hangup." + R)
            });
            a(window).bind("meteor_call_event", function (O, Y) {
                Y =
                    Y.json;
                var na = Y.variable_call_uuid == Y.uuid ? true : false;
                if (Y.call_event == "channel_answer" && Y.bbx_user_id && u[Y.bbx_user_id]) x(u[Y.bbx_user_id], {
                    callee_name: na ? Y.caller_destination_formatted : Y.cid_name,
                    callee_num: na ? Y.caller_destination_number : Y.cid_number,
                    uuid: Y.uuid,
                    time: 0
                })
            })
        })
    };
    a.fn.groupActivity = function (c) {
        var b = this;
        c = c || {};
        a.getTemplate("/ajax-html/group_activity.html", function (l) {
            a.getREST("/gui/report/report", {
                bbx_report_id: c.bbx_report_id
            }, function (o) {
                b.each(function () {
                    var n = a(l);
                    a(this).empty().append(n);
                    g(n, o.report[0], c)
                })
            })
        })
    }
})(jQuery);
(function (a) {
    a.fn.providersTable = function (j) {
        var g = this;
        Ape.subscribe(["provider_status"]);
        this.jsonTable("destroy").jsonTable({
            url: "/gui/gateway/siplist",
            type: "GET",
            rows: 10,
            page: 1,
            sortby: "bbx_provider_gateway_name",
            sortorder: "asc",
            rowDataRoot: "siplist",
            columnData: [{
                header: "",
                value: 'static:<img src="/images/typeicons/provider.png" width="20" height="20" />',
                render: "html"
            }, {
                header: "Name",
                value: "bbx_provider_gateway_name",
                sortby: "bbx_provider_gateway_name"
            }, {
                header: "Account",
                value: function (c) {
                    c = c.rowData;
                    var b = c.bbx_provider_gateway_port;
                    return c.bbx_provider_gateway_username + "@" + c.bbx_provider_gateway_host + (b == "5060" || b === null || b === "" ? "" : ":" + c.bbx_provider_gateway_port)
                },
                sortby: "bbx_provider_gateway_host"
            }, {
                header: "Provider",
                value: "bbx_provider_name",
                sortby: "bbx_provider_name"
            }, {
                header: "Services",
                value: function (c) {
                    c = c.rowData;
                    var b = [];
                    trueish(c.bbx_provider_gateway_flag_inbound) && b.push("In");
                    trueish(c.bbx_provider_gateway_flag_outbound) && b.push("Out");
                    return b.join(" | ")
                }
            }, {
                header: "Status",
                value: function (c) {
                    c =
                        c.rowData;
                    return a("<span></span>").gatewayRegState({
                        bbx_provider_gateway_id: c.bbx_provider_gateway_id,
                        bbx_provider_gateway_state: c.bbx_provider_gateway_state
                    })
                },
                render: "html"
            }]
        }).addClass("clickable");
        this.each(function () {
            a("td", this).die("click").live("click", function () {
                var c = a(this).closest("tr").data("row").bbx_provider_gateway_id;
                showOverlay("gateway_edit", {
                    bbx_provider_gateway_id: c,
                    close: function () {
                        g.providersTable(j)
                    }
                })
            })
        });
        return this
    };
    a.fn.newGatewayProviderPicker = function (j) {
        var g = this;
        j = j || {};
        a.getREST("/gui/provider/provider", {}, function (c) {
            g.each(function () {
                var b = a(this),
                    l = b.closest("form"),
                    o = c.provider,
                    n = a('<select name="bbx_provider_id"></select>');
                a.each(o, function (q, u) {
                    var v = a('<option value="' + u.bbx_provider_id + '">' + u.bbx_provider_name + "</option>");
                    delete u.gateways;
                    delete u.bbx_provider_template;
                    var x = {
                        presets: {},
                        attributes: {}
                    };
                    a.each(u, function (z, B) {
                        if (z == "bbx_provider_direction") {
                            B = B || "both";
                            if (B.indexOf("LOCKED:") > -1) {
                                x.attributes.bbx_provider_gateway_flag_inbound = "readonly";
                                x.attributes.bbx_provider_gateway_flag_outbound = "readonly"
                            }
                            if (B.indexOf("inbound") > -1) x.presets.bbx_provider_gateway_flag_inbound = 1;
                            else if (B.indexOf("outbound") > -1) x.presets.bbx_provider_gateway_flag_outbound = 1;
                            else if (B.indexOf("both") > -1) {
                                x.presets.bbx_provider_gateway_flag_inbound = 1;
                                x.presets.bbx_provider_gateway_flag_outbound = 1
                            }
                        } else if (B === null) return true;
                        else if (z.indexOf("bbx_provider") > -1) {
                            var C = z.replace(/_provider_/, "_provider_gateway_");
                            if (B == "NONE") {
                                x.presets[C] = "";
                                x.attributes[C] = "disabled"
                            } else if (B.indexOf("LOCKED:") ===
                                0) {
                                x.presets[C] = B.replace(/^LOCKED:/, "");
       essage({
                    message: b.text
                });
                else b.text && alert(b.text)
            })
        };
    a.fn.gatewayCreate = function () {
        var j = function (g, c) {
            a(".editOnly", c).remove();
            a(".title", c).html("<h3>New SIP Provider Account</h3>");
            var b = a(".gatewayForm", c);
            a(".provider", c).newGatewayProviderPicker();
            a(".mohOut", b).mohPicker();
            var l = a("input[name=bbx_provider_gateway_host]", b),
                o = a("input[name=bbx_provider_gateway_realm]", b);
            l.bind("keyup.linking", function () {
                o.val(l.val())
            });
            o.bind("keyup.linking", function () {
                l.add(o).unbind("keyup.linking")
            });
            var n = a("input[name=bbx_provider_gateway_username]", b),
                q = a("input[name=bbx_provider_gateway_auth_username]", b);
            n.bind("keyup.linking", function () {
                q.val(n.val())
            });
            q.bind("keyup.linking", function () {
                n.add(q).unbind("keyup.linking")
            });
            a(".codecs", b).codecPicker({
                inputName: "absolute_codec_string",
                selected: []
            });
            a(".cidSelector", c).cidNumberSelector({
                name: {
                    force: "bbx_provider_gateway_flag_force_caller_id",
                    number: "bbx_provider_gateway_caller_id"
                },
                force: false,
                number: ""
            });
            b.bind("revalidate", f);
            b.delegate("input:not([name=bbx_provider_id])", "change", f);
            a(".localRegDisplay",
                c).remove();
            a("[name=local_registration]", b).bind("change", function () {
                this.checked ? a(".localRegPending", c).show() : a(".localRegPending", c).hide()
            });
            b.ajaxForm({
                url: "/gui/gateway/sip",
                type: "POST",
                accept: "application/json",
                success: function () {
                    g.trigger("close_request")
                },
                error: function (u) {
                    var v = {
                        required: "This value is required"
                    };
                    try {
                        var x = a.parseJSON(u.responseText),
                            z = Infinity;
                        if (x.error && a.isPlainObject(x.error)) {
                            var B = c.closest(".popup"),
                                C = a();
                            a.each(x.error, function (G) {
                                G = a(":input[name=" + G + "]", b);
                                if (G.offset().top < z) z = G.offset().top;
                                C = C.add(G)
                            });
                            z < Infinity && B.scrollTop() > z - 20 && B.scrollTop(z - 20);
                            a.each(x.error, function (G, J) {
                                var E = a(":input[name=" + G + "]", b);
                                E.qtipMessage({
                                    style: "failure",
                                    message: v[J] || J
                                });
                                E.addClass("invalid")
                            })
                        }
                    } catch (w) {}
                }
            });
            c.appendTo(g.empty());
            b.trigger("revalidate")
        };
        return this.each(function (g, c) {
            c = a(c);
            a.getTemplate("/ajax-html/gateway.html", function (b) {
                var l = a(b);
                b = a(".template", l);
                l = a(".staticBody", l);
                j(c, l, b)
            })
        })
    };
    a.fn.gatewayEdit = function (j) {
        var g = j.bbx_provider_gateway_id,
            c = function (l, o) {
                var n = a(".gatewayForm", o);
                a("[name=local_registration]", n).unbind("change.sir");
                a(".localRegDisplay", n).hide();
                a(".chkAdvanced", o).bind("click change", function () {
                    o.toggleClass("expertMode", a(this).is(":checked"))
                });
                if (l.bbx_registration_username) {
                    var q = a(".localRegDisplay", o);
                    a("[name=local_registration]", n).attr("checked", "checked");
                    a(".username", q).val(l.bbx_registration_username);
                    a(".password", q).val(l.bbx_registration_password);
                    a.getREST("/gui/sysinfo/ip_port_info", function (u) {
                        u =
                            u.ip_port_info;
                        a(".port", q).val(u.registration_port);
                        a(".internal", q).val(u.system_ip);
                        a(".external", q).val(u.external_ip)
                    });
                    q.show();
                    a("[name=local_registration]", n).bind("change.sir", function () {
                        this.checked ? q.show() : q.hide()
                    })
                } else a("[name=local_registration]", n).bind("change.sir", function () {
                    this.checked ? a(".localRegPending", o).show() : a(".localRegPending", o).hide()
                })
            }, b = function (l, o, n) {
                a(".createOnly", n).remove();
                a(".changeProvider", n).newGatewayProviderPicker({
                    noTrackChange: true
                });
                a(".title",
                    n).extensionDetailMasthead({
                    prefix: "bbx_provider_gateway",
                    restURL: "/gui/gateway/sip",
                    bbx_provider_gateway_id: l.bbx_provider_gateway_id,
                    name: l.bbx_provider_gateway_name,
                    buttons: ["rename", "delete"]
                });
                var q = a(".gatewayForm", n);
                q.unserializeObject(l);
                q.one("providerPickerReady", function () {
                    a("[name=bbx_provider_id]", q).val(l.bbx_provider_id)
                });
                a("input[name=bbx_provider_gateway_flag_inbound]", q).checks({
                    offValue: "0"
                });
                a("input[name=bbx_provider_gateway_flag_outbound]", q).checks({
                    offValue: "0"
                });
                a("input[name=outbound_fax]",
                    q).checks({
                    offValue: "0"
                });
                a("input[name=fax_enable_t38_request]", q).checks({
                    offValue: "0"
                });
                a("input[name=ignore_display_updates]", q).checks({
                    offValue: "0"
                });
                a(".provider", n).text(l.bbx_provider_name);
                var u = a("input[name=bbx_provider_gateway_host]", q),
                    v = a("input[name=bbx_provider_gateway_realm]", q);
                if (u.val() == v.val()) {
                    u.bind("keyup.linking", function () {
                        v.val(u.val())
                    });
                    v.bind("keyup.linking", function () {
                        u.add(v).unbind("keyup.linking")
                    })
                }
                var x = a("input[name=bbx_provider_gateway_username]", q),
                    z = a("input[name=bbx_provider_gateway_auth_username]",
                        q);
                if (x.val() == z.val()) {
                    x.bind("keyup.linking", function () {
                        z.val(x.val())
                    });
                    z.bind("keyup.linking", function () {
                        x.add(z).unbind("keyup.linking")
                    })
                }
                var B = [];
                if (l.absolute_codec_string) B = l.absolute_codec_string.split(/,/);
                a(".codecs", q).codecPicker({
                    inputName: "absolute_codec_string",
                    selected: B
                });
                a(".externalForm", n);
                if (trueish(l.bbx_provider_gateway_flag_inbound)) {
                    B = l.bbx_provider_gateway_exten_maps;
                    a(".externals", n).providerExternals({
                        maps: B,
                        bbx_provider_gateway_id: l.bbx_provider_gateway_id
                    })
                } else a(".inboundOnly",
                    n).hide();
                trueish(l.bbx_provider_gateway_flag_outbound) ? a("td.form.outboundRouting", n).miniRoute({
                    bbx_provider_gateway_id: l.bbx_provider_gateway_id
                }) : a(".outboundOnly", n).hide();
                a(".cidSelector", n).cidNumberSelector({
                    name: {
                        force: "bbx_provider_gateway_flag_force_caller_id",
                        number: "bbx_provider_gateway_caller_id"
                    },
                    force: trueish(l.bbx_provider_gateway_flag_force_caller_id),
                    number: l.bbx_provider_gateway_caller_id
                });
                a(".mohOut", q).mohPicker({
                    bbx_moh_id: l.bbx_moh_id,
                    allowNone: true
                });
                a("input.idAutoFill[name=bbx_provider_gateway_id]",
                    n).val(l.bbx_provider_gateway_id);
                a(".opRefreshReg", q).bind("click", function (C) {
                    C.preventDefault();
                    a.putREST("/gui/gateway/sip", {
                        bbx_provider_gateway_state: "REFRESH",
                        bbx_provider_gateway_id: l.bbx_provider_gateway_id
                    })
                });
                a(".regStatus", q).gatewayRegState({
                    bbx_provider_gateway_state: l.bbx_provider_gateway_state,
                    bbx_provider_gateway_id: l.bbx_provider_gateway_id
                });
                q.ajaxForm({
                    dataType: "json",
                    accept: "application/json",
                    beforeSerialize: function (C) {
                        a(C).formQtipMessage({
                            style: "notice"
                        })
                    },
                    success: function (C) {
                        a(q).formQtipMessage({
                            style: "success"
                        });
                        c(C.sip, n)
                    },
                    afterError: function () {
                        q.formQtipMessage({
                            style: "failure"
                        })
                    }
                });
                q.bind("revalidate", f);
                q.bind("change", f);
                c(l, n);
                n.appendTo(o.empty());
                e(q, {
                    neverOnMissingCID: true
                });
                a("input[name=local_registration]", n).checks({
                    offValue: "0"
                });
                a("input[name=bbx_provider_gateway_flag_register]", n).checks({
                    offValue: "0"
                })
            };
        return this.each(function (l, o) {
            o = a(o);
            a.getTemplate("/ajax-html/gateway.html", function (n) {
                a.getREST("/gui/gateway/sip", {
                    bbx_provider_gateway_id: g
                }, function (q) {
                    var u = a(n),
                        v = a(".template", u);
                    u = a(".staticBody", u);
                    b(q.sip, o, u, v)
                })
            })
        })
    }
})(jQuery);
(function (a) {
    a.fn.hardwareProvidersTable = function (e) {
        e = e || {};
        var f = this;
        this.jsonTable("destroy").jsonTable({
            url: "_codec_string) B = l.absolute_codec_string.split(/,/);
                a(".codecs", q).codecPicker({
                    inputName: "absolute_codec_string",
                    selected: B
                });
                a(".externalForm", n);
                if (trueish(l.bbx_provider_gateway_flag_inbound)) {
                    B = l.bbx_provider_gateway_exten_maps;
                    a(".externals", n).providerExternals({
                        maps: B,
                        bbx_provider_gateway_id: l.bbx_provider_gateway_id
                    })
                } else a(".inboundOnly",
                    n).hide();
                trueish(l.bbx_provider_gateway_flag_outbound) ? a("td.form.outboundRouting", n).miniRoute({
                    bbx_provider_gateway_id: l.bbx_provider_gateway_id
                }) : a(".outboundOnly", n).hide();
                a(".cidSelector", n).cidNumberSelector({
                    name: {
                        force: "bbx_provider_gateway_flag_force_caller_id",
                        number: "bbx_provider_gateway_caller_id"
                    },
                    force: trueish(l.bbx_provider_gateway_flag_force_caller_id),
                    number: l.bbx_provider_gateway_caller_id
                });
                a(".mohOut", q).mohPicker({
                    bbx_moh_id: l.bbx_moh_id,
                    allowNone: true
                });
                a("input.idAutoFill[name=bbx_provider_gateway_id]",
                    n).val(l.bbx_provider_gateway_id);
                a(".opRefreshReg", q).bind("click", function (C) {
                    C.preventDefault();
                    a.putREST("/gui/gateway/sip", {
                        bbx_provider_gateway_state: "REFRESH",
                        bbx_provider_gateway_id: l.bbx_provider_gateway_id
                    })
                });
                a(".regStatus", q).gatewayRegState({
                    bbx_provider_gateway_state: l.bbx_provider_gateway_state,
                    bbx_provider_gateway_id: l.bbx_provider_gateway_id
                });
                q.ajaxForm({
                    dataType: "json",
                    accept: "application/json",
                    beforeSerialize: function (C) {
                        a(C).formQtipMessage({
                            style: "notice"
                        })
                    },
                    success: function (C) {
                        a(q).formQtipMessage({
                            style: "success"
                        });
                        c(C.sip, n)
                    },
                    afterError: function () {
                        q.formQtipMessage({
                            style: "failure"
                        })
                    }
                });
                q.bind("revalidate", f);
                q.bind("change", f);
                c(l, n);
                n.appendTo(o.empty());
                e(q, {
                    neverOnMissingCID: true
                });
                a("input[name=local_registration]", n).checks({
                    offValue: "0"
                });
                a("input[name=bbx_provider_gateway_flag_register]", n).checks({
                    offValue: "0"
                })
            };
        return this.each(function (l, o) {
            o = a(o);
            a.getTemplate("/ajax-html/gateway.html", function (n) {
                a.getREST("/gui/gateway/sip", {
                    bbx_provider_gateway_id: g
                }, function (q) {
                    var u = a(n),
                        v = a(".template", u);
                    u = a(".staticBody", u);
                    b(q.sip, o, u, v)
                })
            })
        })
    }
})(jQuery);
(function (a) {
    a.fn.hardwareProvidersTable = function (e) {
        e = e || {};
        var f = this;
        this.jsonTable("destroy").jsonTable({
            url: "/gui/gateway/hardwarelist",
            type: "GET",
            rows: 10,
            page: 1,
            sortby: "bbx_tdm_card_port_name",
            sortorder: "asc",
            rowDataRoot: "hardwarelist",
            columnData: [{
                header: "",
                value: function (j) {
                    return '<img src="/images/typeicons/hw' + (j.rowData.bbx_tdm_card_port_type === "ANALOG" ? "analog" : "digital") + '.png" width="20" height="20" />'
                },
                css: {
                    width: "25px"
                },
                render: "html"
            }, {
                header: "Name",
                value: "bbx_tdm_card_port_name",
                render: "text",
                sortby: "bbx_tdm_card_port_name"
            }, {
                header: "Status",
                value: function (j) {
                    return a("<div />").hardwareState(j.rowData)
                },
                render: "html"
            }],
            fixed: true
        }).addClass("clickable");
        a(window).unbind("meteor_port_status.hwproviders").bind("meteor_port_status.hwproviders", function (j, g) {
            if (typeof g.json.digital_port_status_flags != "undefined") {
                var c = [{
                    key: "RED",
                    img: "/images/alarms/red.png",
                    color: "#f00#fff",
                    txt: "No connection"
                }, {
                    key: "BLUE",
                    img: "images/alarms/blue.png",
                    color: "#00f#fff",
                    txt: "Intermediate equipment failure"
                }, {
                    key: "YELLOW",
                    img: "images/alarms/yellow.png",
                    color: "#fc0#000",
                    txt: "Remote side offline"
                }],
                    b = a(".status-" + g.json.bbx_tdm_card_port_id, f);
                b.empty();
                g.json.digital_port_status_flags ? a.each(c, function (l, o) {
                    if (g.json.digital_port_status_flags.indexOf(o.key) > -1) {
                        colors = o.color.match(/^(#[^#]+)(#.+)$/);
                        b.append(a('<span class="st"></span>').text(o.txt).css({
                            "background-color": colors[1],
                            color: colors[2],
                            padding: "0 0.5em"
                        }))
                    }
                }) : b.append('<span class="st">Online</span>')
            }
        });
        this.each(function () {
            a("td", this).die("click").live("click.hwp",
                function () {
                    var j = a(this).closest("tr").data("row");
                    showOverlay("tdm_" + (j.bbx_tdm_card_port_type == "ANALOG" ? "analog" : "digital") + "_edit", {
                        bbx_tdm_card_port_id: j.bbx_tdm_card_port_id,
                        close: function () {
                            f.hardwareProvidersTable(e)
                        }
                    })
                })
        });
        return this
    }
})(jQuery);
(function (a) {
    var e = function (f, j, g) {
        a(".title", j).text(g.bbx_tdm_card_port_name);
        var c = g.bbx_tdm_card_port_exten_maps[0];
        c = c ? {
            bbx_extension_id: c.bbx_extension_id
        } : undefined;
        a(".tdmAnalogDest", j).extensionPicker({
            hidden: a(".tdmAnalogDestHidden", j),
            hiddenFormat: "bbx_extension_id",
            value: "bbx_extension_id",
            initialSearch: c,
            autoSelectFirst: true,
            forcePickFirst: true,
            searchTypes: ["all"],
            emptyTriggersSelection: true
        });
        var b = a(".gatewayForm", j);
        b.checks();
        b.unserializeObject(g);
        a(".moh", b).mohPicker({
            name: "bbx_moh_id",
            bbx_moh_id: g.bbx_moh_id
        });
        b.ajaxForm({
            data: {
                bbx_tdm_card_port_id: g.bbx_tdm_card_port_id
            },
            beforeSerialize: function (l) {
                a(l).formQtipMessage({
                    style: "notice"
                })
            },
            success: function () {
                a(b).formQtipMessage({
                    style: "success"
                })
            },
            afterError: function () {
                b.formQtipMessage({
                    style: "failure"
                })
            },
            accept: "application/json"
        });
        a("td.form.outboundRouting", j).miniRoute({
            bbx_tdm_card_port_id: g.bbx_tdm_card_port_id
        });
        f.html(j)
    };
    a.fn.tdmAnalogEdit = function (f) {
        var j = this;
        a.getTemplate("/ajax-html/tdm_analog.html", function (g) {
            j.each(function () {
                var c =
                    a(this),
                    b = a(g),
                    l = a(".staticBody", b);
                a.getREST("/gui/gateway/hardware", {
                    bbx_tdm_card_port_id: f
                }, function (o) {
                    e(c, l, o.hardware)
                })
            })
        });
        return this
    }
})(jQuery);
(function (a) {
    var e = function (f, j, g) {
        a(".title", j).text(g.bbx_tdm_card_port_name);
        var c = a("form.gatewayForm", j);
        c.checks();
        c.unserializeObject(g).ajaxForm({
            data: {
                bbx_tdm_card_port_id: g.bbx_tdm_card_port_id
            },
            beforeSerialize: function (o) {
                a(o).formQtipMessage({
                    style: "notice"
                })
            },
            success: function () {
                a(c).formQtipMessage({
                    style: "success"
                })
            },
            afterError: function () {
                c.formQtipMessage({
                    style: "failure"
                })
            },
            accept: "application/json"
        });
        var b = a(".channelsSelect", j).tdmChannelSelector({
            value: g.tdm_channels || false,
            type: g.bbx_tdm_card_port_signal_type
        }),
            l = a("select[name=bbx_tdm_card_port_signal_type]", j).val() === "euroisdn" ? "e1" : "t1";
        a("select[name=bbx_tdm_card_port_signal_type]", j).bind("change", function () {
            var o = a(this),
                n = o.val() === "euroisdn" ? "e1" : "t1";
            if (n !== o.data("signalType")) {
                a("select option:gt(0):selected", b)[0] && b.qtipMessage({
                    message: "The selected signal type has a different number of channels"
                });
                if (l !== n) {
                    var q = n === "e1" ? " to " : " from ";
                    b.tdmChannelSelector({
                        type: n
                    });
                    o.qtipMessage({
                        message: "Changing" + q + "Euro ISDN will change signaling on all digital ports"
                    })
                }
            }
            o.data("signalType",
                n)
        }).data("signalType", a("select[name=bbx_tdm_card_port_signal_type]", j).val() === "euroisdn" ? "e1" : "t1");
        a(".cidSelector", j).cidNumberSelector({
            name: {
                force: "bbx_tdm_card_port_flag_force_caller_id",
                number: "bbx_tdm_card_port_caller_id"
            },
            force: trueish(g.bbx_tdm_card_port_flag_force_caller_id),
            number: g.bbx_tdm_card_port_caller_id
        });
        a(".externals", j).providerExternals({
            maps: g.bbx_tdm_card_port_exten_maps,
            bbx_tdm_card_port_id: g.bbx_tdm_card_port_id
        });
        a("td.form.outboundRouting", j).miniRoute({
            bbx_tdm_card_port_id: g.bbx_tdm_card_port_id
        });
        f.html(j)
    };
    a.fn.tdmDigitalEdit = function (f) {s
                        });
                        var C = u.clone().data("extraFormData", {
                            bbx_outbound_route_map_id: v.bbx_outbound_route_map_id
                        }).addClass("delayed");
                        thisGWSelect =
                            $("select", C);
                        if (v.bbx_provider_gateway_id) thisGWSelect.val("bbx_provider_gateway_id:" + v.bbx_provider_gateway_id);
                        else v.bbx_tdm_card_port_id ? thisGWSelect.val("bbx_tdm_card_port_id:" + v.bbx_tdm_card_port_id) : thisGWSelect.val("blocked:1");
                        thisGWSelect.bind("change", function () {
                            var w = $(this).val();
                            if (w.indexOf("gateway") > -1) C.data("extraFormData", {
                                bbx_outbound_route_map_id: v.bbx_outbound_route_map_id,
                                bbx_provider_gateway_id: w.match(/\d+$/)[0]
                            });
                            else w.indexOf("card_port") > -1 ? C.data("extraFormData", {
                                bbx_outbound_route_map_id: v.bbx_outbound_route_map_id,
                                bbx_tdm_card_port_id: w.match(/\d+$/)[0]
                            }) : C.data("extraFormData", {
                                bbx_outbound_route_map_id: v.bbx_outbound_route_map_id,
                                bbx_tdm_card_port_id: "",
                                bbx_provider_gateway_id: ""
                            })
                        });
                        $(">td.destination", z).append(C);
                        return x
                    },
                    render: "html"
                },
                reorder: function (v, x) {
                    $.putREST("/gui/route/map", {
                        bbx_outbound_route_map_id: x.moved.bbx_outbound_route_map_id,
                        bbx_outbound_route_map_priority: x.position + 1
                    })
                },
                remove: function (v, x) {
                    var z = x.success,
                        B = x.error;
                    showBlanker({
                        title: "Delete this routing entry?",
                        text: "Some calls may be routed differently or fail to complete if this routing entry is removed.",
                        buttons: ["Delete", "Cancel"],
                        callbacks: [
                            function () {
                                var C = $(this);
                                C.add(C.siblings("button")).attr("disabled", "disabled");
                                $.deleteREST("/gui/route/map", {
                                    bbx_outbound_route_map_id: x.row.bbx_outbound_route_map_id
                                }, {
                                    success: function () {
                                        z();
                                        C.trigger("closeBlanker")
                                    },
                                    afterError: function () {
                                        B();
                                        C.trigger("closeBlanker")
                                    }
                                })
                            },
                            function () {
                                B();
                                $(this).trigger("closeBlanker")
                            }
                        ]
                    })
                },
                addLink: {
                    value: $('<a class="ops addLink" href="#">Add a routing entry...</a>'),
                    render: "html",
                    position: "last"
                },
                addForm: {
                    value: function () {
                        var v =
                            $('<form action="/gui/route/map" method="POST"></form>').html(n.clone()),
                            x = $(">table > tbody > tr", v);
                        $(">td.callType", x).find("a").remove();
                        var z = q.find("select").clone().prepend('<option value="" selected="selected"></option>').prependTo($(">td.callType", x));
                        $(">td.restrictTo", x).html($(".restrictNotAvailable", g).clone());
                        var B = u.find("select").clone().prepend('<option value="" selected="selected"></option>').appendTo($(">td.destination", x));
                        z.add(B).bind("change", function () {
                            if (z.val() && B.val()) {
                                var C =
                                    v.serializeObject(),
                                    w = B.val().match(/^([^:]+):(\d+)$/);
                                C[w[1]] = w[2];
                                $("select", v).attr("disabled", "disabled");
                                $.postREST("/gui/route/map", C, function (G) {
                                    v.trigger("add", {
                                        data: G.map,
                                        last: true
                                    })
                                })
                            }
                        });
                        B.val("");
                        z.val("");
                        return v
                    },
                    position: "last",
                    prepare: function () {
                        $(this)
                    }
                }
            });
            f.html(j)
        };
    $.fn.routeMapList = function (f) {
        var j = this,
            g = f || {};
        $.getTemplate("/ajax-html/routeMapList.html", function (c) {
            $.getREST("/gui/route/map", {}, function (b) {
                $.getREST("/gui/route/route", {}, function (l) {
                    $.getREST("/gui/gateway/combined", {
                        bbx_provider_gateway_flag_outbound: 1
                    }, function (o) {
                        (function () {
                            j.each(function () {
                                var n = $(this),
                                    q = $(c),
                                    u = $(".staticBody", q);
                                a = a || $(".template", q);
                                e(n, u, a, b.map, l.route, o.combined, g)
                            })
                        })()
                    })
                })
            })
        });
        this.data("routeMapList", g);
        return this
    }
})();
(function () {
    var a, e = function (f, j, g, c, b) {
            var l = $(".systemPassForm", j).hide(),
                o = b.bbx_outbound_route_map_id;
            $(".rmid", l).val(o);
            $(".scCxbox", l).checks();
            var n = function () {
                $.getREST("/gui/route/map", {
                    bbx_outbound_route_map_id: o
                }, function (q) {
                    if (q.map.restrictions[0]) {
                        l.show();
                        trueish(q.map.bbx_outbound_route_map_allow_system) ? $(".scCxbox", l).attr("checked", "checked") : $(".scCxbox", l).removeAttr("checked")
                    } else l.hide()
                })
            };
            n();
            $(".restrictionList", j).sortList({
                data: c,
                allow: ["add", "remove"],
                rowData: {
                    value: function (q) {
                        if (q.bbx_site_name) return $("<div></div>").text(q.bbx_site_name).prepend('<img src="/images/typeicons/site.png" style="vertical-align: middle; padding-right: 1em" width: "20" height="20" />');
                        else if (q.bbx_group_name) return $("<div></div>").text(q.bbx_group_name).prepend('<img src="/images/typeicons/group.png" style="vertical-align: middle; padding-right: 1em" width: "20" height="20" />');
                        return q.bbx_group_name || q.bbx_site_name || "Unknown restriction"
                    },
                    render: "html"
                },
                addForm: {
                    value: function () {
                        var q = $("<div>Please wait...</div>"),
                            u = $(".restrictionAddForm", g).clone();
                        $.getREST("/gui/group/group_count", {
                            rows: 1
                        }, function (v) {
                            $.getREST("/gui/site/site", {}, function (x) {
                                var z = function () {
                                    $(".picker > *",
                                        u).remove();
                                    $(".picker", u).html($(".groupInput", g).clone());
                                    $(".picker > .groupInput", u).extensionPicker({
                                        searchTypes: ["group"],
                                        hiddenName: "bbx_group_id",
                                        hiddenFormat: "object_id",
                                        autoSelectFirst: true
                                    })
                                }, B = function () {
                                        $(".picker > *", u).remove();
                                        var w = $('<select name="bbx_site_id"></select>');
                                        $.each(x.site, function (G, J) {
                                            $('<option value="' + J.bbx_site_id + '"></option>').text(J.bbx_site_name).appendTo(w)
                                        });
                                        w.appendTo($(".picker", u)).trigger("change")
                                    }, C = $(".addGoLink", u).bind("click", function (w) {
                                        var G =
                                            $(this).closest("form").serializeObject();
                                        G.bbx_outbound_route_map_id = b.bbx_outbound_route_map_id;
                                        $.postREST("/gui/route/restriction", G, function (J) {
                                            n();
                                            u.trigger("add", {
                                                data: J.restriction,
                                                last: true
                                            })
                                        });
                                        w.preventDefault()
                                    });
                                $(".picker", u).bind("selection", function (w, G) {
                                    $(".label", C).text("\u201c" + G.label + "\u201d");
                                    C.show()
                                });
                                $(".picker", u).delegate("select", "change", function () {
                                    $(".label", C).text("\u201c" + $("option:selected", this).text() + "\u201d");
                                    C.show()
                                });
                                if (x.site.length && trueish(v.group_count)) {
                                    $(".type",
                                        u).remove();
                                    $(".restrictionType", u).bind("change", function () {
                                        switch ($(this).val()) {
                                        case "bbx_site_id":
                                            B();
                                            break;
                                        case "bbx_group_id":
                                            z()
                                        }
                                        setTimeout(function () {
                                            $(".picker input[type=text], .picker select", u).focus()
                                        }, 100)
                                    }).triggerHandler("change")
                                } else if (x.site.length) {
                                    $(".restrictionType", u).remove();
                                    $(".type", u).html('<img src="/images/typeicons/site.png" style="vertical-align: middle" width="20" height="20" /> Site:');
                                    B()
                                } else if (trueish(v.group_count)) {
                                    $(".restrictionType", u).remove();
                                    $(".type",
                                        u).html('<img src="/images/typeicons/group.png" style="vertical-align: middle" width="20" height="20" /> Group:');
                                    z()
                                } else u = $(".cannotRestrict", g).clone();
                                q.html(u)
                            })
                        });
                        return q
                    },
                    render: "html",
                    position: "last"
                },
                addLink: {
                    value: $('<a class="ops" href="#">Add a Restriction</a>'),
                    position: "last"
                },
                hasNoneText: "(All Calls)",
                remove: function (q, u) {
                    var v = u.success,
                        x = u.error,
                        z = u.row.bbx_group_name || u.row.bbx_site_name || "this entry";
                    showBlanker({
                        title: "Remove " + z + "?",
                        text: u.rows.length == 1 ? "Unless new restrictions are added, all calls that match the Call Type will be able to use this route." : "Callers from " + z + " will no longer use this route.",
                        buttons: ["Remove", "Cancel"],
                        callbacks: [
                            function () {
                                var B = $(this);
                                B.add(B.siblings("button")).attr("disabled", "disabled");
                                $.extend(u.row, {
                                    bbx_outbound_route_map_id: b.bbx_outbound_route_map_id
                                });
                                $.deleteREST("/gui/route/restriction", u.row, {
                                    success: function () {
                                        v();
                                        B.trigger("closeBlanker");
                                        n()
                                    },
                                    afterError: function () {
                                        x();
                                        B.trigger("closeBlanker")
                                    }
                                })
                            },
                            function () {
                                x();
                                $(this).trigger("closeBlanker")
                            }
                        ]
                    })
                }
            });
            f.html(j)
        };
    $.fn.routeMapRestrictions = function (f) {
        var j =
            this,
            g = f || {};
        $.getTemplate("/ajax-html/routeMapRestrictions.html", function (c) {
            j.each(function () {
                var b = $(this),
                    l = $(c),
                    o = $(".staticBody", l);
                a = a || $(".template", l);
                e(b, o, a, g.restrictions, g)
            })
        });
        this.data("routeMapRestrictions", g);
        return this
    }
})();
(function (a) {
    a.fn.growable = function () {
        this.each(function () {
            var e = a(this),
                f = e.innerWidth(),
                j = f - e.width();
            e.bind("keyup grow", function () {
                if (e.val()) {
                    var g = '<div style="position: absolute; left: -999em;';
                    a.each(["font-name", "font-family", "font-size", "font-weight", "font-style"], function () {
                        if (e.css(this)) g += " " + this + ":" + e.css(this) + ";"
                    });
                    g += '"></div>';
                    var c = a(g).text(e.val()).appendTo("body");
                    c.innerWidth() > f - j ? e.css("width", c.innerWidth() + j + 5 + "px") : e.css("width", "");
                    c.remove()
                }
            })
        }).trigger("grow");
        return this
    }
})(jQuery);
(function (a) {
    a.fn.blink = function (e, f) {
        var j = this;
        j.css("visibility", "visible");
        var g = 0,
            c = "visible";
        for (i = 0; i < 2 * e; i++) setTimeout(function () {
            c = c == "visible" ? "hidden" : "visible";
            j.css("visibility", c)
        }, g += f)
    }
})(jQuery);
(function (a) {
    a.fn.serializeObject = function () {
        var e = this.serializeArray(),
            f = {}, j;
        for (j in e) {
            var g = e[j].name,
                c = e[j].value;
            if (g in f)
                if (a.isArray(f[g])) f[g].push(c);
                else f[g] = [f[g], c];
                else f[g] = a(".forceArray[name=" + g + "]", this)[0] ? [c] : c
        }
        return f
    };
    a.fn.unserializeObject = function (e, f) {
        var j = this;
        f || (f = {});
        var g = function (b, l, o) {
            var n = a("input[type=radio][name=" + b + "]", j).filter(function () {
                return a(this).val() == l
            }),
                q = a("select[multiple][name=" + b + "]", j),
                u = a("input[type=checkbox][name=" + b + "]", j);
            b = a("input[name=" +
                b + "][type!=checkbox], select[name=" + b + "]", j);
            if (!(typeof l !== "string" && typeof l !== "number" && typeof l !== "boolean"))
                if (n[0]) {
                    n.attr("checked", "checked");
                    f.trigger && n.triggerHandler("change")
                } else if (q[0]) {
                o = q.val();
                if (a.isArray(o)) o.push(l);
                else o = o ? [o, l] : [l];
                q.val(currentValue)
            } else if (u[0]) {
                trueish(l) ? u.attr("checked", "checked") : u.removeAttr("checked");
                f.trigger && u.triggerHandler("change")
            } else if (b.data("widget") && b.data("widgetType")) {
                b.data("widget")[b.data("widgetType")]("updateValue", l);
                b.triggerHandler("change")
            } else b.eq(o).val(l)
        },
            c = f.flatten ? "|" + f.flatten + "|" : false;
        a.each(e, function (b, l) {
            if (a.isArray(l)) a.each(l, function (o) {
                g(b, this, o)
            });
            else f.flatten && stringContains("|" + b + "|", c) && a.isPlainObject(l) ? a.each(l, function (o, n) {
                e[o] === undefined && g(o, n, 0)
            }) : g(b, l, 0)
        });
        return this
    }
})(jQuery);
(function (a) {
    var e = function (j, g, c, b, l, o) {
        var n = a(".template .boardBox", j).clone();
        n.data("uuid", l.uuid);
        if (b) {
            n.data("agent_uuid", b.uuid);
            a(".agentName", n).text(b.name);
            a(".agentExtension", n).text(b.extension_value);
            n.addClass("oncall")
        } else {
            a(".agentName", n).text("(Waiting)");
            a(".agentExtension", n).text("")
        }
        a(".callerID", n).text(formatCID(l.caller_id_name, l.caller_id_number));
        var q = unixTime() - o;
        a(".callTime", n).timeDisplay(q);
        if (c.warning_seconds || c.critical_seconds) {
            var u = getUnique("call");
            a(window).bind("tick." +
                u, function () {
                    if (n.is(".removed,.oncall") || !n.closest("body")[0]) a(window).unbind("tick." + u);
                    else {
                        var v = unixTime() - q;
                        if (c.warning_seconds && v > c.warning_seconds) {
                            n.addClass("warning");
                            if (c.warning_seconds >= (c.critical_seconds || 0)) a(window).unbind("tick." + u)
                        }
                        if (c.critical_seconds && v > c.critical_seconds) {
                            n.addClass("critical");
                            if (c.critical_seconds >= (c.warning_seconds || 0)) a(window).unbind("tick." + u)
                        }
                    }
                })
        }
        a(".queueCalls", g).append(n)
    }, f = function (j) {
            var g = a(".queueCallList", j),
                c, b;
            a.getJSON("/gui/queue/list", {
                template: "json"
            }, function (l) {
                b = l.data.agents;bridge
                c = l.data.fifo;
                l = [];
                for (var o in c) l.push(a.extend({}, c[o], {
                    key: o
                }));
                l = l.sort(function (C, w) {
                    aa = parseInt((C.extension_value || "0").replace(/-[0-9]+$/, ""));
                    bb = parseInt((w.extension_value || "0").replace(/-[0-9]+$/, ""));
                    return cmp(aa, bb)
                });
                var n = a(".template .queueRow", j),
                    q;
                for (q in l) {
                    o = l[q].key;
                    if (o != "manual_calls") {
                        o = c[o];
                        var u = n.clone();
                        o.row = u;
                        a(".queueName", u).text(o.name).bind("click", function () {
                            a(this).closest(".queueRow").toggleClass("expanded collapsed")
                        });
                        var v = 0;
                        if (o.callers) {
                            v = o.callers.length;
                            for (var x in o.callers) e(j, u, o, undefined, o.callers[x], o.callers[x].age);
                            u.removeClass("empty")
                        }
                        var z = v;
                        if (o.bridges) {
                            z += o.bridges.length;
                            for (x in o.bridges) {
                                var B = b[o.bridges[x].bbx_user_id];
                                B.uuid = o.bridges[x].consumer_uuid;
                                e(j, u, o, B, o.bridges[x].caller, o.bridges[x].bridge_start_epoch_ago)
                            }
                            u.removeClass("empty")
                        }
                        a(".queueWaitingCount", u).numberDisplay(v);
                        a(".queueCallCount", u).numberDisplay(z);
                        a(".queueActiveAgents", u).numberDisplay(Math.abs(o.agents.available -
                            o.agents.number));
                        a(".queueTotalAgents", u).numberDisplay(o.agents.number);
                        a(".queueExtension", u).text(format_information(o.extension_value));
                        u.appendTo(g)
                    }
                }
            });
            a(window).bind("meteor_queue_status", function (l, o) {
                var n = o.json.fifo_action,
                    q;
                if (n == "push" && (q = c[o.json.fifo_name]) && q.row) {
                    e(j, q.row, q, undefined, {
                        caller_id_name: o.json.caller_caller_id_name,
                        caller_id_number: o.json.caller_caller_id_number,
                        uuid: o.json.unique_id
                    }, 0);
                    q.row.removeClass("empty");
                    a(".queueWaitingCount", q.row).numberDisplay("increment");
                    a(".queueCallCount", q.row).numberDisplay("increment")
                } else if (n == "consumer_pop" && (q = c[o.json.fifo_name]) && q.row) {
                    n = q.row.find(".boardBox").filter(function () {
                        return a(this).data("uuid") == o.json.fifo_caller_uuid
                    });
                    n.data("agent_uuid", o.json.unique_id);
                    a(".agentName", n).text(o.json.bbx_caller_id_name);
                    a(".agentExtension", n).text(o.json.bbx_caller_id_number);
                    n.removeClass("warning").removeClass("critical");
                    n.addClass("oncall");
                    a(".callTime", n).timeDisplay(unixTime());
                    a(".queueWaitingCount", q.row).numberDisplay("decrement");
                    a(".queueActiveAgents", q.row).numberDisplay("increment")
                } else if (n == "timeout" || n == "abort") {
                    if ((q = c[o.json.fifo_name]) && q.row) {
                        n = q.row.find(".boardBox").filter(function () {
                            return a(this).data("uuid") == o.json.unique_id
                        });
                        if (n[0]) {
                            a(".queueWaitingCount", q.row).numberDisplay("decrement");
                            a(".queueCallCount", q.row).numberDisplay("decrement");
                            n.addClass("removed").remove()
                        }
                        q.row.find(".boardBox").length == 0 && q.row.addClass("empty")
                    }
                } else if (n == "bridge-consumer-stop")
                    if ((q = c[o.json.fifo_name]) && q.row) {
                        n = q.row.find(".boardBox").filter(function () {
                            return a(this).data("agent_uuid") ==
                                o.json.unique_id
                        });
                        if (n[0]) {
                            a(".queueCallCount", q.row).numberDisplay("decrement");
                            a(".queueActiveAgents", q.row).numberDisplay("decrement");
                            n.addClass("removed").remove()
                        }
                        q.row.find(".boardBox").length == 0 && q.row.addClass("empty")
                    }
            });
            a(window).bind("meteor_user_status", function (l, o) {
                console.log('status');
                var n, q;
                if (n = b[o.json.user_id]) {
                    var u = undefined;
                    if (o.json.last_status_id == "2") u = "increment";
                    else if (o.json.status_id == "2") u = "decrement";
                    if (u)
                        for (var v in n.fifos)
                            if ((q = c[n.fifos[v]]) && q.row) a(".queueTotalAgents", q.row).numberDisplay(u)
                }
            })
        };
    a.fn.queueManager = function () {
        var j = a(this);
        a.getTemplate("/ajax-html/queueManager.html", function (g) {
            j.each(function () {
                var c = a(g).appendTo(a(this));
                c.find(".agentList").queueAgentManager({
                    template: "/ajax-html/queueManagerAgentList.html"
                });
                a(".qamNameTD .name").live("click", function () {
                    a(this).parent().find(".qamStatusTD").toggle()
                });
                a(".opToggleAll", c).bind("click", function (b) {
                    b.preventDefault();
                    c.find(".queueRow.expanded")[0] ? a(".queueRow", c).removeClass("expanded").addClass("collapsed") : a(".queueRow",
                        c).removeClass("collapsed").addClass("expanded")
                });
                f(c)
            })
        });
        return j
    }
})(jQuery);
(function (a) {
    var e = {
        init: function (f) {
            this.data("numberDisplay", {
                value: f
            });
            this.text(f.toString())
        },
        increment: function () {
            var f = this.data("numberDisplay").value + 1;
            this.data("numberDisplay", {
                value: f
            });
            this.text(f.toString())
        },
        decrement: function () {
            var f = this.data("numberDisplay").value - 1;
            this.data("numberDisplay", {
                value: f
            });
            this.text(f.toString())
        },
        set: function (f) {
            this.data("numberDisplay", {
                value: f
            });
            this.text(f.toString())
        }
    };
    a.fn.numberDisplay = function (f) {
        var j = arguments;
        return this.each(function () {
            if (a(this).data("numberDisplay"))
                if (e[f]) return e[f].apply(a(this),
                    Array.prototype.slice.call(j, 1));
            return e.init.apply(a(this), j)
        })
    }
})(jQuery);
(function (a) {
    var e = {
        precision: 2,
        format: "medium"
    };
    a.fn.timeDisplay = function (f, j) {
        return this.each(function () {
            j || (j = {});
            j = a.extend(e, j);
            a(this).text(a.timeSince(f, j));
            a(this).data("timeDisplay") || a(window).bind("tick", {
                target: a(this)
            }, function (g) {
                g = g.data.target;
                g.text(a.timeSince(g.data("timeDisplay"), j))
            });
            a(this).data("timeDisplay", f)
        })
    }
})(jQuery);
(function (a) {
    a.fn.markInvalid = function () {
        return this.each(function () {
            a(this).css("border-color", "red")
        })
    };
    a.fn.clearInvalid = function () {
        return this.each(function () {
            a(this).css("border-color", "")
        })
    }
})(jQuery);
(function (a) {
    var e = function (f) {
        var j = a(".template", f),
            g = a(".staticBody", f),
            c = function () {
                a.getREST("/gui/phone/cisco/list", function (o) {
                    o.list.sort(function (q, u) {
                        return cmp(q.model, u.model)
                    });
                    var n = a(".ciscoFirmwareList > tbody", g).empty();
                    a.each(o.list, function () {
                        var q = this.is_installed == "1" ? '<img src="/images/monitor/online.png" alt="Yes" title="Installed">' : "",
                            u = a(".ciscoRow", j).clone();
                        this.is_installed == "1" && u.addClass("isInstalled");
                        a(".model", u).text(this.model);
                        a(".cfFile", u).text(this.file);
                        a(".installed", u).html(q);
                        u.appendTo(n)
                    })
                })
            };
        c();
        a(".ciscoFileInput", g).clone();
        var b = a("button[type=submit]", g);
        b.attr("disabled", "disabled");
        var l;
        a(".ciscoUploadForm", g).ajaxForm({
            iframe: true,
            data: {
                sessionid: getSessionID()
            },
            beforeSubmit: function () {
                l = showUploadBlanker();
                b.attr("disabled", "disabled")
            },
            success: function (o) {
                l.trigger("closeBlanker");
                if (typeof o === "string") {
                    var n = o.match(/\{.*\}/);
                    if (n && n[0]) o = n[0]
                }
                try {
                    var q = a.parseJSON(o);
                    q.error && showError("Cisco Firmware file upload failed: " + q.error)
                } catch (u) {
                    showError("Cisco Firmware file upload failed")
                } finally {
                    c()
                }
            },
            error: function (o, n, q) {
                console_log("Failure");
                l.trigger("closeBlanker");
                q == "timeout" ? showError("Cisco Firmware file upload failed: Upload timed out") : showError("Cisco Firmware file upload failed");
                c()
            }
        });
        a(".ciscoFileInput", g).bind("change", function () {
            a("button[type=submit]", g).removeAttr("disabled")
        })
    };
    a.fn.ciscoFirmware = function (f) {
        var j = this;
        f = f || {};
        a.getTemplate("/ajax-html/settings/cisco.html", function (g) {
            j.each(function () {
                var c = a(g).replaceAll(this);
                e(c, f)
            })
        });
        return this
    }
})(jQuery);
(function (a) {
    var e = function (g, c, b, l) {
        if (!c) l = b = c = "";
        g.find(".hasNone").hide();
        var o = g.find(".staticRoute").length;
        c = a("<div class='staticRoute'>IP Address:<input type='text' class='requiredIfDirty' name='subnet_ip" + o + "' value='" + c + "'/> Subnet Mask: <input class='requiredIfDirty' type='text' name='subnet_mask" + o + "' value='" + b + "'/> Gateway <input class='requiredIfDirty' type='text' name='subnet_gateway" + o + "' value='" + l + "'><button type='button' class='delete'>Delete</button>").appendTo(g);
        c.find(".delete").bind("click",
            function (n) {
                a(n.target).closest("div").hide().find("input[type=hidden]").each(function () {
                    a(this).addClass("dirty").data("widget").ipv4Input("updateValue", "")
                });
                g.find("div.staticRoute:visible")[0] || g.find(".hasNone").show()
            });
        c.find("input").ipv4Input()
    }, f = function (g, c) {
            g.data("widget") && g.data("widgetType") ? g.data("widget")[g.data("widgetType")]("disable", !c) : g.attr("disabled", !c)
        }, j = function (g) {
            f(a("input[name=external_inet_ip]", this), trueish(g.lan_behind_nat));
            f(a("input[name=wan_ip]", this), trueish(g.wan_enabled));
            f(a("input[name=wan_netmask]", this), trueish(g.wan_enabled));
            f(a("input[name=wan_gateway]", this), trueish(g.wan_enabled) && !trueish(g.system_force_internal));
            f(a("input[name=system_gateway]", this), !trueish(g.wan_enabled) || trueish(g.wan_enabled) && trueish(g.system_force_internal));
            f(a("input[name=wan_behind_nat]", this), trueish(g.wan_enabled));
            f(a("input[name=system_force_internal]", this), trueish(g.wan_enabled));
            f(a("input[name=external_wan_ip]", this), trueish(g.wan_behind_nat));
            g.lan_behind_nat && a("input[name=external_inet_ip]").data("originalValue",
                "");
            g.wan_behind_nat && a("input[name=external_wan_ip]").data("originalValue", "")
        };
    a.fn.networkSettings = function (g) {
        g = g || {};
        return this.each(function () {
            var c = a(this);
            a.getREST("/gui/ha_ip/ha_ip", {}, function (b) {
                var l = trueish(b.ha_ip.ha_active) || trueish(b.ha_ip.ha_in_progress);
                a.getTemplate("/ajax-html/settings/network_settings.html", function (o) {
                    o = a(o);
                    var n = a(".staticBody", o);
                    a(".template", o);
                    a("input[type=checkbox]", n).checkbox();
                    a.mask.definitions.n = "[-a-zA-Z0-9]";
                    o = [];
                    for (var q = 255; q--;) o.push("n");
                    o = o.join("");
                    a("input[name=system_default_hostname]", n).mask("?" + o, {
                        placeholder: ""
                    });
                    a("form", n).toggleClass("alwaysDirty", g.alwaysDirty).formModule({
                        dirty: j
                    }).bind("built", function () {
                        if (l) {
                            a(".cannotProceedWarning", n).text("Network settings cannot be changed while a High Availability Pair is active.").show();
                            a(this).find("input,textarea,select,button").disable("haPair");
                            a(this).find(".IPv4Input").addClass("disabled")
                        } else a(".cannotProceedWarning", n).empty().hide();
                        a(".continue", n).bind("click",
                            function (u) {
                                u.preventDefault();
                                u.stopPropagation();
                                var v = function () {
                                    a("form", n).formModule("submit", {
                                        success: function () {
                                            n.trigger("submitted")
                                        }
                                    })
                                };
                                c.closest("#screen-firstrun1")[0] ? v() : showBlanker({
                                    title: "Apply Settings?",
                                    text: "Applying network settings may drop any calls currently in progress. Continue?",
                                    buttons: ["Apply Settings", "Cancel"],
                                    callbacks: [
                                        function () {
                                            v();
                                            blankerCancel.call(this)
                                        },
                                        blankerCancel
                                    ]
                                })
                            });
                        n.delegate("button.delete", "click", function () {
                            a(this).trigger("dirtyForm")
                        });
                        a(".addStaticRoute",
                            n).bind("click", function (u) {
                            u.preventDefault();
                            u = a(".staticRoutes .list", n);
                            e(u)
                        });
                        a(".opAutoLan", n).bind("click", function (u) {
                            u.preventDefault();
                            a.getREST("/gui/system/stun", {
                                ip: a("input[name=system_ip]", n).val()
                            }, function (v) {
                                a("input[name=external_inet_ip]", n).addClass("dirty").data("widget").ipv4Input("updateValue", v.ip)
                            })
                        });
                        a(".opAutoWan", n).bind("click", function (u) {
                            u.preventDefault();
                            a.getREST("/gui/system/stun", {
                                ip: a("input[name=wan_ip]", n).val()
                            }, function (v) {
                                a("input[name=external_wan_ip]",
                                    n).addClass("dirty").data("widget").ipv4Input("updateValue", v.ip)
                            })
                        });
                        c.append(n)
                    }).bind("deserialize", function (u, v) {
                        a(".staticRoutes .list .staticRoute", n).remove();
                        if (v.subnet_ip.length)
                            for (var x = a(".staticRoutes .list", n), z = v.subnet_ip.length, B = 0; B < z; B++) e(x, v.subnet_ip[B], v.subnet_mask[B], v.subnet_gateway[B]);
                        else a(".staticRoutes .list .hasNone", n).show()
                    })
                })
            })
        })
    }
})(jQuery);
(function (a) {
    var e = function (f, j) {
        f.find(".pleaseWait").hide();
        if (j.activated == 1) {
            f.find(".activated").show();
            f.trigger("activated")
        } else {
            var g = f.find(".notactivated");
            if (j.activation_online) {
                a(".activationLinkWrapper", f).html('<a href="' + j.activation_url.replace(/&amp;/g, "&") + '&connected_update=1" target="_blank">Click here to complete the activation form (opens in a new window)</a>').show();
                var c = setInterval(function () {
                    a.getREST("/gui/sysinfo/activation", function (b) {
                        if (b.activation.activated == 1) {
                            f.find(".notactivated").hide();
                            f.find(".activated").show();
                            f.trigger("activated");
                            clearInterval(c)
                        }
                    })
                }, 2E3)
            } else {
                a(".serialNumber", f).text(j.system_serial);
                a(".activationURL", f).attr("href", j.activation_url.replace(/&amp;/g, "&"));
                a(".offlineActivationForm", f).bind("submit", function (b) {
                    b.preventDefault();
                    a.postREST("/gui/sysinfo/activation", a(this).serializeObject(), {
                        success: function () {
                            f.find(".notactivated").hide();
                            f.find(".activated").show();
                            f.trigger("activated")
                        }
                    })
                });
                a(".offlineActivation", f).show()
            }
            g.show();
            f.trigger("notactivated")
        }
    };
    a.fn.activation = function () {
        return this.each(function () {
            var f = a(this);
            a.getTemplate("/ajax-html/settings/activation.html", function (j) {
                f.html(j);
                a.getREST("/gui/sysinfo/activation", function (g) {
                    e(f, g.activation)
                })
            })
        })
    }
})(jQuery);

function eavesdropUI(a) {
    var e = showPopup("eavesdrop", {}, true);
    e.bind("popup_ready", function () {
        var f = false;
        $(".listener", e).extensionPicker({
            searchTypes: ["user", "phone"],
            hiddenName: "listener",
            hiddenFormat: "number",
            autoSelectFirst: true
        }).bind("selection", function () {
            $("button[type=submit]", e).removeAttr("disabled");
            f = true
        }).bind("noselection", function () {
            $("button[type=submit]", e).attr("disabled", "disabled");
            f = false
        });
        $("form", e).bind("submit", function (j) {
            j.preventDefault();
            f && $.postREST("/gui/calls/eavesdrop", {
                listener: $("input[name=listener]", e).val(),
                uuid: a.uuid,
                cid_number: a.cid_number,
                ceid_number: a.ceid_number
            }, function () {
                e.trigger("close_request")
            })
        })
    })
};
(function (a) {
    var e = {
        init: function () {
            return this.each(function () {
                var f = a(this);
                a(this).wrap('<span class="checkboxWrap"/>');
                var j = f.attr("checked") ? 1 : 0;
                f.attr("disabled");
                var g = a(this).parent();
                g.html('<input type="checkbox"/><input type="hidden" name="' + f.attr("name") + '" value="' + j + '"' + (f.attr("id") ? ' id="' + f.attr("id") + '"' : "") + " />");
                var c = a("input[type=hidden]", g);
                a.each(["dirty", "required", "requiredIfDirty"], function (b, l) {
                    f.hasClass(l) && c.addClass(l)
                });
                a("input[type=checkbox]", g).attr("checked",
                    f.attr("checked")).bind("change", function (b, l) {
                    b.preventDefault();
                    g.find("input[type=hidden]").val(b.target.checked ? 1 : 0);
                    g.trigger("change", l);
                    a("input[type=hidden]", g).trigger("dirty").trigger("change")
                });
                a("input[type=hidden]", g).data("widget", g).data("widgetType", "checkbox").data("originalValue", j)
            })
        },
        updateValue: function (f) {
            a("input[type=hidden]", this).val(f ? 1 : 0).data("originalValue", !! f);
            a("input[type=checkbox]", this).attr("checked", trueish(f)).trigger("change")
        },
        disable: function (f) {
            a("input[type=checkbox], input[type=hidden]",
                this).attr("disabled", !! f)
        }
    };
    a.fn.checkbox = function (f) {
        if (e[f]) return e[f].apply(this, Array.prototype.slice.call(arguments, 1));
        else if (typeof f === "object" || !f) return e.init.apply(this, arguments);
        else a.error("Method " + f + " does not exist on jQuery.checkbox")
    }
})(jQuery);
(function (a) {
    var e = function (g) {
        return g.split("/").pop()
    }, f = function (g, c) {
            g || (g = this.data("formModule") || {});
            var b = this;
            if (!b.hasClass("dirty") && !b.find("input.required")) g.success && g.success();
            else {
                var l = b.data("preSubmit");
                if (a.isFunction(l) && !c)
                    if (!l(function () {
                        f.call(b, g, true)
                    })) return;
                var o = {};
                a("input[name]:checkbox:not(:checked)", b).filter(".dirty, .required, .requiredIfDirty").each(function (q, u) {
                    var v = a(u),
                        x = v.data("unchecked");
                    x = x === undefined ? g.unchecked : x;
                    o[v.attr("name")] = x
                });
                l = a.extend(true, {}, o, b.data("formData") || {});
                var n = b.getFormMethod() || "POST";
                if (n === "get" && a.browser.msie && parseInt(a.browser.version) <= 7) n = (n = b[0].outerHTML.match(/method="?([^ "]+)/)) ? n[1] : "POST";
                b.ajaxSubmit({
                    accept: "application/json",
                    type: n,
                    dataType: "json",
                    data: l,
                    filterSubmit: function (q, u) {
                        for (var v = q.length, x = [], z = 0; z < v; z++)
                            if (a("[name=" + q[z].name + "].dirty, [name=" + q[z].name + "].required, [name=" + q[z].name + "].requiredIfDirty", u).length) x.push(q[z]);
                            else b.data("formData") && b.data("formData")[q[z].name] && x.push(q[z]);
                        return x
                    },
                    success: function (q) {
                        var u;
                        if (u = q[e(b.attr("action"))]) {
                            b.unserializeObject(u);
                            b.tagOriginalValues();
                            b.triggerHandler("deserialize", u);
                            b.removeClass("dirty");
                            b.find("input").removeClass("dirty invalid");
                            b.triggerHandler("undirtyForm");
                            g.success && g.success();
                            b.trigger("formModuleSuccess", q)
                        } else console_log("unexpected result ", q)
                    },
                    error: function (q, u, v) {
                        try {
                            var x = a.parseJSON(q.responseText);
                            if (x.error && a.isPlainObject(x.error)) {
                                var z = Infinity;
                                a.each(x.error, function (C, w) {
                                    var G = a(":input[name=" +
                                        C + "]", b);
                                    if (G.offset().top < z) z = G.offset().top;
                                    if (G.data("widget")) G = G.data("widget").addClass("invalid");
                                    G.addClass("invalid");
                                    G.qtipMessage({
                                        style: "failure",
                                        message: w
                                    })
                                });
                                z < Infinity && a(window).scrollTop() > z - 130 && a(window).scrollTop(z - 130)
                            } else typeof x.error === "string" ? showError(x.error) : console_log("unexpected json error data", x)
                        } catch (B) {
                            _defaultAJAXErrorHandler(q, u, v)
                        }
                        g.error && g.error()
                    }
                })
            }
        }, j = {
            init: function (g) {
                g = a.extend(true, {
                    getCurrent: true,
                    unchecked: "0",
                    formData: {}
                }, g || {});
                this.data("formModule",
                    g);
                return this.each(function () {
                    var c = a(this);
                    if (!c.data("widgetType")) {
                        c.data("widgetType", "formModule");
                        c.data("formData", g.formData);
                        c.data("preSubmit", g.preSubmit);
                        var b = function (l) {
                            g.dirty && g.dirty.call(c, l);
                            c.find("select.checkslider").checkslider();
                            c.find("input.ipv4").ipv4Input();
                            a(".fmWidget", c).find("input,select,textarea").addClass("inFmWidget");
                            a("input,select,textarea").not(".inFmWidget").addClass("notInFmWidget");
                            l = function (o) {
                                a(o.target).trigger("dirty")
                            };
                            c.delegate("input[name]", "keyup change",
                                l).delegate("select[name]", "change", l).delegate(":checkbox", "click", l);
                            c.delegate("input[name], select[name]", "dirty", function (o) {
                                o.preventDefault();
                                o = a(o.target);
                                if (g.dirty) {
                                    if (g.dirty.call(c, c.serializeObject()) === false) {
                                        c.find(".dirty").removeClass("dirty");
                                        c.triggerHandler("undirtyForm");
                                        return
                                    }
                                    a.each(c.serializeObject(), function (u) {
                                        u = a("[name=" + u + "]", c);
                                        if (u.is(":checkbox")) {
                                            var v = u.data("wasChecked"),
                                                x = u.is(":checked");
                                            u.data("wasChecked", !! x);
                                            !v == !! x && u.addClass("dirty")
                                        } else if (!u.data("originalValue") !==
                                            undefined && u.val() != u.data("originalValue") || u.data("originalValue") === undefined && u.val() !== undefined) {
                                            u.addClass("dirty");
                                            u.data("widget") && u.data("widget").addClass("dirty")
                                        }
                                    })
                                }
                                if (o.is(":checkbox")) {
                                    var n = o.data("wasChecked"),
                                        q = o.is(":checked");
                                    n = !n === !! q;
                                    o.toggleClass("dirty", n);
                                    o.removeClass("invalid");
                                    c.triggerHandler((n ? "" : "un") + "dirtyForm")
                                } else if (o.data("originalValue") != o.val() || o.data("originalValue") === undefined) {
                                    o.addClass("dirty").removeClass("invalid");
                                    o.data("widget") && o.data("widget").addClass("dirty").removeClass("invalid");
                                    c.trigger: console_log("unexpected json error data", x)
                        } catch (B) {
                            _defaultAJAXErrorHandler(q, u, v)
                        }
                        g.error && g.error()
                    }
                })
            }
        }, j = {
            init: function (g) {
                g = a.extend(true, {
                    getCurrent: true,
                    unchecked: "0",
                    formData: {}
                }, g || {});
                this.data("formModule",
                    g);
                return this.each(function () {
                    var c = a(this);
                    if (!c.data("widgetType")) {
                        c.data("widgetType", "formModule");
                        c.data("formData", g.formData);
                        c.data("preSubmit", g.preSubmit);
                        var b = function (l) {
                            g.dirty && g.dirty.call(c, l);
                            c.find("select.checkslider").checkslider();
                            c.find("input.ipv4").ipv4Input();
                            a(".fmWidget", c).find("input,select,textarea").addClass("inFmWidget");
                            a("input,select,textarea").not(".inFmWidget").addClass("notInFmWidget");
                            l = function (o) {
                                a(o.target).trigger("dirty")
                            };
                            c.delegate("input[name]", "keyup change",
                                l).delegate("select[name]", "change", l).delegate(":checkbox", "click", l);
                            c.delegate("input[name], select[name]", "dirty", function (o) {
                                o.preventDefault();
                                o = a(o.target);
                                if (g.dirty) {
                                    if (g.dirty.call(c, c.serializeObject()) === false) {
                                        c.find(".dirty").removeClass("dirty");
                                        c.triggerHandler("undirtyForm");
                                        return
                                    }
                                    a.each(c.serializeObject(), function (u) {
                                        u = a("[name=" + u + "]", c);
                                        if (u.is(":checkbox")) {
                                            var v = u.data("wasChecked"),
                                                x = u.is(":checked");
                                            u.data("wasChecked", !! x);
                                            !v == !! x && u.addClass("dirty")
                                        } else if (!u.data("originalValue") !==
                                            undefined && u.val() != u.data("originalValue") || u.data("originalValue") === undefined && u.val() !== undefined) {
                                            u.addClass("dirty");
                                            u.data("widget") && u.data("widget").addClass("dirty")
                                        }
                                    })
                                }
                                if (o.is(":checkbox")) {
                                    var n = o.data("wasChecked"),
                                        q = o.is(":checked");
                                    n = !n === !! q;
                                    o.toggleClass("dirty", n);
                                    o.removeClass("invalid");
                                    c.triggerHandler((n ? "" : "un") + "dirtyForm")
                                } else if (o.data("originalValue") != o.val() || o.data("originalValue") === undefined) {
                                    o.addClass("dirty").removeClass("invalid");
                                    o.data("widget") && o.data("widget").addClass("dirty").removeClass("invalid");
                                    c.triggerHandler("dirtyForm")
                                } else if (o.hasClass("dirty")) {
                                    o.removeClass("dirty invalid");
                                    o.data("widget") && o.data("widget").removeClass("dirty invalid");
                                    c.triggerHandler("undirtyForm")
                                }
                            });
                            if (!c.hasClass("alwaysDirty")) {
                                c.find("button.submit,button[type=submit]").attr("disabled", true);
                                c.find("a.module_save_button").addClass("state-disabled")
                            }
                            c.bind("dirtyForm", function () {
                                c.find("button.submit,button[type=submit]").attr("disabled", false);
                                c.find("a.module_save_button").removeClass("state-disabled");
                                c.addClass("dirty")
                            });
                            c.bind("undirtyForm", function () {
                                if (!c.find("input.dirty").length && !c.hasClass("alwaysDirty")) {
                                    c.removeClass("dirty");
                                    c.find("a.module_save_button").addClass("state-disabled");
                                    c.find("button.submit,button[type=submit]").attr("disabled", true)
                                }
                            });
                            c.bind("submit", function (o) {
                                o.preventDefault();
                                o.stopPropagation()
                            });
                            a("button.submit,button[type=submit]", c).bind("mouseup", function (o) {
                                if (o.button == 0 || a.browser.msie) f.call(c)
                            });
                            a("a.module_save_button", c).bind("click", function (o) {
                                o.preventDefault();
                                f.call(c)
                            });
                            c.bind("submitEvent", function () {
                                f.call(c)
                            });
                            c.triggerHandler("built")
                        };
                        if (g.getCurrent) a.getREST(c.attr("action"), g.formData, function (l) {
                            l = g.dataInRoot ? l : l[e(c.attr("action"))];
                            c.unserializeObject(l);
                            c.tagOriginalValues();
                            c.triggerHandler("deserialize", l);
                            b(l)
                        });
                        else {
                            c.triggerHandler("deserialize", {});
                            b({})
                        }
                    }
                })
            },
            submit: function (g) {
                f.call(this, g)
            }
        };
    a.fn.formModule = function (g) {
        if (j[g]) return j[g].apply(this, Array.prototype.slice.call(arguments, 1));
        else if (typeof g === "object" || !g) return j.init.apply(this,
            arguments);
        else a.error("Method " + g + " does not exist on jQuery.formModule")
    }
})(jQuery);
(function (a) {
    var e = function (j, g) {
        var c = j.pop();
        a(c).formModule("submit", {
            success: function () {
                j.length == 0 ? a(g).trigger("success") : e(j, g)
            },
            error: function () {
                a(g).trigger("error")
            }
        })
    }, f = {
            submit: function () {},
            init: function (j) {
                var g = this.find("form").each(function () {
                    a(this).formModule()
                });
                j.button && a(j.button).bind("click", function (c) {
                    c.preventDefault();
                    e(g.toArray(), this)
                });
                return this
            }
        };
    a.fn.superForm = function (j) {
        if (f[j]) return f[j].apply(this, Array.prototype.slice.call(arguments, 1));
        else if (typeof j ===
            "object" || !j) return f.init.apply(this, arguments);
        else a.error("Method " + j + " does not exist on jQuery.superForm")
    }
})(jQuery);
(function (a) {
    a.fn.qtip.styles.success = {
        border: {
            radius: 3,
            width: 1,
            color: "#209920"
        },
        tip: "rightBottom",
        background: "#209920",
        color: "#fff"
    };
    a.fn.qtip.styles.notice = {
        border: {
            color: "#f9e9a0"
        },
        background: "#f9e9a0",
        color: "#000",
        name: "success"
    };
    a.fn.qtip.styles.failure = {
        border: {
            color: "#a00"
        },
        background: "#a00",
        color: "#fff",
        name: "success"
    };
    var e = function (f) {
        f = f.filter(function () {
            return a(this).data("qtip") ? true : false
        });
        f[0] && f.qtip("destroy")
    };
    a.fn.formQtipMessage = function (f) {
        var j = {
            success: "Settings applied",
            notice: "Please wait...",
            failure: "Settings were not applied"
        };
        f = f || {};
        f.style = f.style || "notice";
        f.message = f.message || j[f.style];
        j = a("button[type=submit]", this);
        j[0] || (j = this);
        a(j).qtipMessage(f);
        return this
    };
    a.fn.qtipMessage = function (f) {
        f = f || {
            style: "notice"
        };
        f.style = f.style || "notice";
        f.message = f.message || "Your attention is required";
        e(this);
        f = f || {};
        this.each(function () {
            $elem = a(this);
            var j = {
                content: f.message,
                style: {
                    name: f.style,
                    tip: f.tip || "bottomRight"
                },
                position: {
                    corner: f.position || {
                        target: "leftMiddle",
                        tooltip: "bottomRight"
                    }
                },
                show: {
                    ready: true
                },
                hide: {
                    when: {
                        event: "dummy_null_event"
                    }
                },
                api: {
                    onHide: function () {
                        this.destroy()
                    },
                    onShow: function () {
                        var g = this;
                        setTimeout(function () {
                            g.hide()
                        }, 5E3)
                    }
                }
            };
            $elem.offset().left < 200 && a.extend(true, j, {
                style: {
                    tip: "leftBottom"
                },
                position: {
                    corner: {
                        target: "rightMiddle",
                        tooltip: "bottomLeft"
                    }
                }
            });
            a(this).qtip(j)
        });
        return this
    }
})(jQuery);
(function (a) {
    a.fn.includeList = function () {
        var e = this;
        a.getTemplate("/ajax-html/widget/includeList.html", function (f) {
            e.each(function () {
                var j = a(this),
                    g = a(f),
                    c = a(".staticBody", g);
                a(".template", g);
                j.empty().append(c)
            })
        });
        return this
    }
})(jQuery);
(function (a) {
    var e = {
        e1: [31, 15],
        t1: [23, false]
    };
    e.euroisdn = e.e1;
    e["5ess"] = e.t1;
    e.national = e.t1;
    e.dms100 = e.t1;
    (function () {
        var f = function (g, c, b '" type="radio" class="' + o + '" value="' + (n ? "1" : "0") + '" />');
            l.replaceWith(o)
        });
        if (trueish(c.force)) a(".radioAlways", g).attr("checked", "checked");
        else c.number ? a(".radioSometimes",
            g).attr("checked", "checked") : a(".radioNever", g).attr("checked", "checked");
        var b = a('<input type="text" class="txtNumber" name="' + c.name.number + '" />').val(c.number || "");
        b.mask("?99999999999999999999", {
            placeholder: ""
        });
        a(".txtNumber", g).replaceWith(b);
        a("input", g).bind("change", function () {
            j.cidNumberSelector("rescan")
        });
        j.html(g).cidNumberSelector("rescan")
    }, f = function () {
            if (a("input.radioNever:checked", this).not("[disabled]")[0]) {
                var j = a(".txtNumber", this);
                j.attr("disabled", "disabled");
                a(".hidNumber",
                    this)[0] || j.after('<input class="hidNumber" type="hidden" name="' + j.attr("name") + '" value="" />')
            } else {
                a(".txtNumber", this).removeAttr("disabled");
                a(".hidNumber", this).remove()
            }
            return this
        };
    a.fn.cidNumberSelector = function (j) {
        var g = this,
            c = {
                rescan: f
            };
        if (c[j]) {
            var b = this.data("cidNumberSelector");
            if (typeof b === "undefined") {
                this.data("cidNumberSelector", {});
                b = this.data("cidNumberSelector")
            }
            return c[j].apply(this, [].concat(b, Array.prototype.slice.call(arguments, 1)))
        } else if (j && typeof j !== "object") {
            console_log("Method does not exist in plugin cidNumberSelector");
            return this
        }
        var l = j || {};
        a.getTemplate("/ajax-html/cidNumberSelector.html", function (o) {
            g.each(function () {
                var n = a(this),
                    q = a(o);
                e(n, q, l)
            })
        });
        this.data("cidNumberSelector", l);
        return this
    }
})(jQuery);
(function (a) {
    var e = function (j, g, c, b) {
        c = b.url || "/gui/gateway/external";
        var l = {};
        if (b.bbx_provider_gateway_id) l.bbx_provider_gateway_id = b.bbx_provider_gateway_id;
        else if (b.bbx_tdm_card_port_id) l.bbx_tdm_card_port_id = b.bbx_tdm_card_port_id;
        var o = a(".externalForm", g);
        o.ajaxForm({
            url: c,
            data: l,
            beforeSerialize: function () {
                o.formQtipMessage({
                    style: "notice"
                })
            },
            success: function (n) {
                o.formQtipMessage({
                    style: "success"
                });
                a("input[type=text],textarea", o).val("");
                n.error > 0 && showError(n.error + " external numbers could not be created");
                a.getREST("/gui/gateway/external", l, function (q) {
                    j.providerExternals("refresh", {
                        maps: q.external
                    })
                })
            },
            afterError: function () {
                o.formQtipMessage({
                    style: "failure"
                })
            },
            accept: "application/json"
        });
        a(".opAddNumbers", g).one("click", function (n) {
            n.preventDefault();
            a(this).remove();
            o.show()
        });
        j.html(g);
        j.providerExternals("refresh")
    }, f = function (j, g) {
            a.extend(j, g || {});
            var c = j.maps,
                b = this,
                l = a(".providerExternals", b),
                o = j.template,
                n = j.url || "/gui/gateway/external",
                q = {};
            if (j.bbx_provider_gateway_id) q.bbx_provider_gateway_id =
                j.bbx_provider_gateway_id;
            else if (j.bbx_tdm_card_port_id) q.bbx_tdm_card_port_id = j.bbx_tdm_card_port_id;
            if (c && c[0]) {
                var u = a(".extNums", o).clone();
                a.each(c, function (v, x) {
                    var z = a('<li class="hlButton"></li>');
                    z.text(format_information(x.bbx_extension_value));
                    z.appendTo(u);
                    z.contextMenu([{
                        title: "Remove External Number",
                        fn: function () {
                            var B = {};
                            if (x.bbx_provider_gateway_id && x.bbx_extension_id) {
                                B.bbx_provider_gateway_id = x.bbx_provider_gateway_id;
                                B.bbx_extension_id = x.bbx_extension_id
                            } else if (x.bbx_tdm_card_port_id &&
                                x.bbx_extension_id) {
                                B.bbx_tdm_card_port_id = x.bbx_tdm_card_port_id;
                                B.bbx_extension_id = x.bbx_extension_id
                            }
                            a.deleteREST(n, B, {
                                complete: function () {
                                    a.getREST("/gui/gateway/external", q, function (C) {
                                        b.providerExternals("refresh", {
                                            maps: C.external
                                        })
                                    })
                                }
                            })
                        }
                    }], {
                        autoSelectFirst: false
                    })
                });
                a(".externals", l).html(u)
            } else a(".noExts", o).clone().appendTo(a(".externals", l).empty());
            return this
        };
    a.fn.providerExternals = function (j) {
        var g = this,
            c = {
                refresh: f
            };
        if (c[j]) {
            var b = this.data("providerExternals");
            if (typeof b === "undefined") {
                this.data("providerExternals", {});
                b = this.data("providerExternals")
            }
            return c[j].apply(this, [].concat(b, Array.prototype.slice.call(arguments, 1)))
        } else if (j && typeof j !== "object") {
            console_log("Method does not exist in plugin providerExternals");
            return this
        }
        var l = j || {};
        this.data("providerExternals", l);
        a.getTemplate("/ajax-html/providerExternals.html", function (o) {
            g.each(function () {
                var n = a(this),
                    q = a(o),
                    u = a(".staticBody", q);
                q = a(".template", q);
                l.template = q;
                e(n, u, q, l)
            })
        });
        return this
    }
})(jQuery);
(function (a) {
    var e, f = function (o, n, q, u) {
            var v = "|" + (n.allow || []).join("|") + "|",
                x = o.children("ul");
            a.isArray(q) || (q = [q]);
            a.each(q, function (B, C) {
                var w = a('<li class="sortListNormalRow"></li>').html(a(".row", e).clone()).addClass("new");
                w.data("rowData", C);
                u ? w.appendTo(x) : w.prependTo(x);
                var G;
                G = typeof n.rowData.value === "function" ? n.rowData.value(C) : n.rowData.value ? C[n.rowData.value] : C;
                n.rowData.render === "html" ? a(".content", w).html(G) : a(".content", w).text(G)
            });
            var z = a(">ul > li.new", o);
            if (stringContains("|remove|",
                v)) {
                a.isFunction(n.remove) && a(">.row", z).bind("sortListRemove", n.remove);
                a(">.row > .operations > .opRemove", z).bind("click", function (B) {
                    B.preventDefault();
                    var C = a(this).closest(".row").parent("li");
                    B = C.data("rowData");
                    var w = q,
                        G = false;
                    a(this).trigger("sortListRemove", {
                        row: B,
                        rows: w,
                        success: function () {
                            if (!G) {
                                G = true;
                                C.remove();
                                g(o, n)
                            }
                        },
                        error: function () {
                            G || (G = true)
                        }
                    })
                })
            } else a(">.row > .operations > .opRemove", z).remove();
            z.removeClass("new");
            g(o, n)
        }, j = function (o, n, q) {
            f(this.closestDesc(".staticBody"),
                o, n, q);
            return this
        }, g = function (o, n) {
            if (a(">ul > li:not(.hasNone)", o)[0]) a(">ul > li.hasNone", o).remove();
            else if (!a(">ul > li.hasNone", o)[0]) {
                var q = "The list is empty";
                if (n && n.hasNoneText) q = n.hasNoneText;
                q = a('<li class="hasNone"></li>').text(q);
                a(">ul", o).append(q)
            }
        }, c = function (o, n) {
            var q = a(this);
            q.is(".staticBody.sortList") || (q = a(">.staticBody.sortList", q));
            var u = false;
            a(">ul > li", q).each(function (v, x) {
                var z = a(x).data("rowData");
                if (z) {
                    a.each(n, function (B, C) {
                        if (z[B] && z[B] == C) {
                            u = a(x);
                            return false
                        }
                    });
                    return !u
                }
            });
            return u
        }, b = function () {
            var o = a(this);
            o.is(".staticBody.sortList") || (o = a(">.staticBody.sortList", o));
            var n = [];
            a(">ul > li", o).each(function (q, u) {
                var v = a(u).data("rowData");
                typeof v !== "undefined" && n.push(v)
            });
            return n
        }, l = function (o, n, q) {
            var u, v = "|" + (q.allow || []).join("|") + "|";
            u = q.dataRoot ? q.data[dataRoot] : q.data;
            stringContains("|remove|", v) && !q.eventsPropogate && o.bind("sortListRemove", function (B) {
                B.stopPropagation()
            });
            var x = n.children("ul");
            f(n, q, u, true);
            if (stringContains("|reorder|", v)) {
                q.eventsPropogate ||
                    o.bind("sortListReorder", function (B) {
                        B.stopPropagation()
                    });
                x.sortable({
                    axis: "y",
                    containment: "parent",
                    handle: ">.row > .grippy",
                    tolerance: "pointer",
                    items: ">li:not(.add)",
                    update: function (B, C) {
                        var w = [],
                            G = C.item;
                        G = G.closest("ul").children("li:not(.add)").index(G);
                        a(this).children("li:not(.add)").each(function (J, E) {
                            w.push(a(E).data("rowData"))
                        });
                        a(this).trigger("sortListReorder", {
                            rows: w,
                            position: G,
                            moved: w[G]
                        })
                    }
                });
                q.reorder && a(x).bind("sortListReorder", q.reorder)
            } else n.addClass("noReorder"); if (stringContains("|add|",
                v)) {
                q.eventsPropogate || o.bind("add", function (B) {
                    B.stopPropagation()
                });
                var z;
                if (q.addLink) {
                    u = q.addLink.value;
                    if (typeof u === "string") {
                        z = a('<a href="#"></a>');
                        q.addLink.render === "html" ? z.html(u) : z.text(u)
                    } else if (u.jquery) {
                        z = u.clone();
                        if (!a("a[href]", z)[0] && !z.is("a[href]")) z = a('<a href="#" class="ops"></a>').html(u)
                    }
                } else z = a('<a href="#" class="ops">Add More</a>');
                u = a(".addLinkRow", e).clone();
                z.appendTo(u);
                q.addLink.position === "last" ? u.appendTo(n) : u.prependTo(n);
                g(n, q);
                u.find("a[href=#],a.addLink").bind("click",
                    function (B) {
                        B.preventDefault();
                        if (!a(">ul > li.add", n)[0]) {
                            B = q.addForm;
                            var C = a('<li class="add row"></li>');
                            if (B)
                                if (typeof B.value === "string") B.render === "text" ? C.text(B.value) : C.html(B.value);
                                else if (B.value.jquery) C.html(B.value.clone());
                            else if (typeof B.value === "function") {
                                var w = B.value();
                                if (!w) return false;
                                B.render === "text" ? C.text(w) : C.html(w)
                            }
                            B.prepare && B.prepare.call(C);
                            B.position === "last" ? C.appendTo(a(">ul", n)) : C.prependTo(a(">ul", n));
                            g(n, q)
                        }
                    });
                o.bind("add", function (B, C) {
                    var w = C.data,
                        G = C.last ||
                            false;
                    a(">ul > li.add", n).remove();
                    f(n, q, w, G)
                });
                o.bind("addCancel", function () {
                    a(">ul > li.add", n).remove()
                })
            }
            o.html(n)
        };
    a.fn.sortList = function (o) {
        var n = this,
            q = {
                add: j,
                rowData: b,
                exists: c
            };
        if (q[o]) {
            var u = this.data("sortList");
            if (typeof u === "undefined") u = this.data("sortList", {}).data("sortList");
            return q[o].apply(this, [].concat(u, Array.prototype.slice.call(arguments, 1)))
        } else if (o && typeof o !== "object") {
            console_log("Method does not exist in plugin sortList");
            return this
        }
        var v = a.extend({}, {
            data: [],
            rowDataRoot: null,
            allow: ["add", "remove", "reorder"],
            rowData: {
                value: null,
                render: "text"
            },
            newRow: {
                value: "params.newRow.value not defined",
                render: "text"
            },
            reorder: null,
            remove: null,
            addForm: null,
            add: null,
            eventsPropogate: false
        }, o || {}, true);
        a.getTemplate("/ajax-html/sortList.html", function (x) {
            n.each(function () {
                var z = a(this),
                    B = a(x),
                    C = a(".staticBody", B);
                e = a(".template", B);
                l(z, C, v)
            })
        });
        this.data("sortList", v);
        return this
    }
})(jQuery);
(function (a) {
    var e, f = function (g, c, b, l, o) {
            var n = a(">.routeList", c),
                q = a(">.routeManagerBody", c),
                u = false,
                v = false;
            a.each(l, function (B, C) {
                var w = a('<a href="#"></a>').data("bbx_outbound_route", C).text(C.bbx_outbound_route_name);
                if (o.preselect && o.preselect == C.bbx_outbound_route_id) v = w;
                n.append(a("<li></li>").append(w))
            });
            o.applyAndSelect || a(".opApplySelect", c).remove();
            a(".opNew", c).bind("click", function (B) {
                B.preventDefault();
                u = false;
                a(".routeName", q).text("New Call Type");
                a(".createOnly", q).show();
                a(".editOnly",
                    q).hide();
                a("form", q)[0].reset();
                a("form input:eq(0)", q).focus();
                a("a", n).removeClass("active")
            });
            n.delegate("li > a", "click", function (B) {
                B.preventDefault();
                B = a(this);
                a("a", n).removeClass("active");
                B.addClass("active");
                B.blur()
            }).delegate("li > a:not(.new)", "click", function () {
                var B = a(this).data("bbx_outbound_route");
                u = B;
                a(".createOnly", q).hide();
                a(".editOnly", q).show();
                a(".routeName", q).text(B.bbx_outbound_route_name);
                a(">.routeForm", q).unserializeObject(B);
                a("form input:eq(0)", q).focus()
            });
            a("a:eq(0)",
                n).trigger("click");
            a(".opDelete", q).bind("click", function (B) {
                B.preventDefault();
                var C = a("a.active", n).data("bbx_outbound_route");
                showBlanker({
                    title: "Delete this call type?",
                    text: "This will remove any routes that use this call type. This operation cannot be undone.",
                    buttons: ["Delete", "Cancel"],
                    callbacks: [
                        function () {
                            var w = a(this);
                            w.add(w.siblings("button")).attr("disabled", "disabled");
                            a.deleteREST("/gui/route/route", {
                                bbx_outbound_route_id: C.bbx_outbound_route_id
                            }, function () {
                                a("a.active", n).closest("li").remove();
                                a("a:eq(0)", n).trigger("click");
                                w.trigger("closeBlanker")
                            })
                        },
                        blankerCancel
                    ]
                })
            });
            a("form", q).bind("submit", function (B) {
                B.preventDefault();
                B = a(this).serializeObject();
                if (u) {
                    B = a.extend({
                        bbx_outbound_route_id: u.bbx_outbound_route_id
                    }, B);
                    var C = a("a.active", n);
                    a.putREST("/gui/route/route", B, function (G) {
                        C.text(G.route.bbx_outbound_route_name);
                        C.data("bbx_outbound_route", G.route)
                    })
                } else {
                    C = a('<a class="active" href="#"></a>');
                    var w = a("<li></li>").append(C);
                    a.postREST("/gui/route/route", B, function (G) {
                        C.text(G.route.bbx_outbound_route_name);
                        C.data("bbx_outbound_route", G.route);
                        w.appendTo(n);
                        C.trigger("click");
                        n.scrollTop(99999)
                    })
                }
            });
            a("input[name=bbx_outbound_route_name]", q).bind("keyup", function () {
                a("a.new.active", n)[0] || a(".routeName", q).text(a(this).val())
            });
            var x = 0,
                z = {
                    NO_ANCHOR: 'This will match "%" anywhere in the dialed number. Use "^%$" to match the complete number.'
                };
            a("input[name=bbx_outbound_route_regex]", q).debounce("keyup", function () {
                var B = a(".regexCheck", q),
                    C = a(this).val(),
                    w = function (G) {
                        a.getREST("/gui/regex/test", {
                                test: C
                            },
                            function (J) {
                                if (G === x)
                                    if (trueish(J.test.valid))
                                        if (J.test.warning && J.test.warning.length) {
                                            B.empty();
                                            a.each(J.test.warning, function (E, M) {
                                                if (z[M]) {
                                                    var R = a('<div class="rxMsg rxWarning"></div>');
                                                    R.text(z[M].replace(/%/g, C));
                                                    B.append(R)
                                                }
                                            })
                                        } else B.empty();
                                        else {
                                            J = a('<div class="rxMsg rxError"></div>');
                                            J.text("This is not a valid regular expression. It will not match.");
                                            B.empty();
                                            B.append(J)
                                        }
                            })
                    };
                C ? w(++x) : a(".regexCheck").empty()
            }, 200);
            g.html(c);
            v && v.trigger("click")
        }, j = function () {
            return this
        };
    a.fn.routeManager =
        function (g) {
            var c = this,
                b = {
                    secondarymethod: j
                };
            if (b[g]) {
                var l = this.data("routeManager");
                if (typeof l === "undefined") {
                    this.data("routeManager", {});
                    l = this.data("routeManager")
                }
                return b[g].apply(this, [].concat([l], Array.prototype.slice.call(arguments, 1)))
            } else if (g && typeof g !== "object") {
                console_log("Method does not exist in plugin routeManager");
                return this
            }
            var o = g || {};
            a.getTemplate("/ajax-html/routeManager.html", function (n) {
                c.each(function () {
                    var q = a(this),
                        u = a(n),
                        v = a(".staticBody", u);
                    e = e || a(".template",
                        u);
                    a.getREST("/gui/route/route", {
                        bbx_outbound_route_flag_locked: 0
                    }, function (x) {
                        f(q, v, e, x.route, o)
                    })
                })
            });
            this.data("routeManager", o);
            return this
    }
})(jQuery);
(function (a) {
    a.fn.selectFrom = function (e) {
        var f = this;
        e = e || {};
        f.data("selectFromInitialValue", e.val);
        a.getREST(e.url, e.data, function (j) {
            var g = [];
            f.each(function () {
                var b = a(this),
                    l = a("<select></select>");
                e.name && l.attr("name", e.name);
                e.classes && l.addClass(e.classes);
                var o = e.rowDataRoot ? j[e.rowDataRoot] : j;
                e.firstEmpty && l.prepend("<option></option>");
                a.each(o, function (n, q) {
                    var u = "",
                        v = "";
                    if (typeof e.rowData.value === "function") u = e.rowData.value({
                        index: n,
                        data: o,
                        rowData: q
                    });
                    else if (e.rowData.value) u = q[e.rowData.value];
                    if (typeof e.rowData.text === "function") v = e.rowData.text({
                        index: n,
                        data: o,
                        rowData: q
                    });
                    else if (e.rowData.text) v = q[e.rowData.text];
                    l.append(a("<option></option>", {
                        value: u
                    }).text(v))
                });
                g.push(l[0]);
                b.html(l)
            });
            g = a(g);
            var c = f.data("selectFromInitialValue");
            c !== undefined && g.val(c);
            e.complete && e.complete.apply(g)
        });
        this.data("selectFrom", e);
        return this
    }
})(jQuery);
(function (a) {
    a.fn.localTime = function () {
        var e = this;
        a.getJSON("/gui/system/timezone", {}, function (f) {
            Ape.subscribe("meteor_alive");
            e.data("offset", (f.timezone.offset + (new Date).getTimezoneOffset() * 60) * -1);
            e.data("timezone", f.timezone.timezone);
            e.data("time", f.timezone.time);
            a(window).bind("meteor_meteor_alive", function (j, g) {
                e.data("time", g.json.alive)
            });
            a(window).bind("tick", function () {
                e.data("time", parseInt(e.data("time")) + 1);
                var j = new Date;
                j.setTime((e.data("time") - e.data("offset")) * 1E3);
                e.text(j.toString("MMM d, yyyy, HH:mm") +
                    " " + e.data("timezone"))
            });
            a(window).bind("meteor_system_status", function (j, g) {
                if (g.json.action == "time") {
                    e.data("offset", (g.json.offset + (new Date).getTimezoneOffset() * 60) * -1);
                    e.data("timezone", g.json.zone)
                }
            })
        })
    }
})(jQuery);
(function (a) {
    a.fn.paginate = function (e, f, j, g) {
        e = parseInt(e, 10);
        f = parseInt(f, 10);
        j = parseInt(j, 10);
        if (f > 1) {
            j = a('<ul class="paginator">');
            var c = a('<li class="special prev"></li>').appendTo(j);
            if (e == 1) {
                c.addClass("disabled");
                c.text("Previous")
            } else a('<a href="#">Previous</a>').data("page", e - 1).appendTo(c);
            for (c = 1; c <= f; c++)
                if (c == e) a('<li class="current">' + c + "</li>").appendTo(j);
                else if (c <= 5 || c > f - 5 || c >= e - 2 && c <= e + 2) a('<li><a href="#">' + c + "</a></li>").appendTo(j).find("a").data("page", c);
            else if (c == 6 && e >
                8 || c == e + 5 && e < 6 || c == f - 5 && e > 5 && e < f - 7) a("<li>...</li>").appendTo(j);
            c = a('<li class="special next"></li>').appendTo(j);
            if (e == f) {
                c.addClass("disabled");
                c.text("Next")
            } else a('<a href="#">Next</a>').data("page", e + 1).appendTo(c);
            j.find("a").bind("click", function (b) {
                b.preventDefault();
                a.isFunction(g.changePage) && g.changePage(a(b.target).data("page"))
            });
            a(this).html(j)
        } else a(this).empty()
    }
})(jQuery);
(function (a) {
    var e = {
        init: function (f) {
            f || (f = {});
            var j = this;
            f = a.extend(true, {
                data: {
                    primary: 1
                }
            }, f);
            a(this).jsonTable({
                url: "/gui/extension/list",
                data: f.data,
                hasNoneText: f.hasNoneText,
                rowDataRoot: "$.list",
                sortby: "bbx_extension_value",
                sortorder: "asc",
                rows: 25,
                searchParam: "search_string",
                paginator: true,
                paginatorToTop: true,
                paginatorToTopAdditional: 200,
                columnData: [{
                    header: "",
                    render: "html",
                    value: function (g) {
                        return '<img src="/images/typeicons/' + g.rowData.type + '.png" />'
                    }
                }, {
                    header: "Ext.",
                    value: function (g) {
                        return format_information(g.rowData.bbx_extension_value, {
                            no_extension: true
                        })
                    },
                    sortby: "bbx_extension_value"
                }, {
                    header: "Name",
                    value: "show_name",
                    sortby: "name"
                }]
            }).addClass("clickable");
            f.search && f.search.searchBox().bind("search", function (g, c) {
                a(j).jsonTable("refresh", {
                    search: c
                })
            }).bind("enterKeyPress", function () {
                a("td.col1.row1", j).trigger("click")
            });
            this.each(function () {
                a("tr:not(.nonDataRow) > td", this).die("click").live("click", function () {
                    var g = a(this).closest("tr").data("row"),
                        c = {
                            bbx_extension_id: g.bbx_extension_id,
                            key: "bbx_" + g.type + "_id",
                            close: function () {}
                        };
                    c["bbx_" + g.type + "_id"] = g["bbx_" + g.type + "_id"];
                    showOverlay(g.type, c)
                })
            });
            return this
        },
        refresh: function () {
            a(this).jsonTable("refresh")
        }
    };
    a.fn.extensionList = function (f) {
        if (e[f]) return e[f].apply(this, Array.prototype.slice.call(arguments, 1));
        else if (typeof f === "object" || !f) return e.init.apply(this, arguments);
        else a.error("Method " + f + " does not exist on jQuery.extensionList")
    }
})(jQuery);
(function (a) {
    var e = function (f, j) {
        var g = a(this),
            c = function (l) {
                a(">.staticBody.miniRoute .providerRoutingList", g).sortList({
                    data: l,
                    allow: [],
                    rowData: {
                        value: "bbx_outbound_route_name",
                        render: "text"
                    },
                    hasNoneText: "No routes assigned: This gateway/port will not be used for outbound calls"
                })
            };
        if (j) c(j);
        else {
            var b = {};
            if (f.bbx_provider_gateway_id) b.bbx_provider_gateway_id = f.bbx_provider_gateway_id;
            else if (f.bbx_tdm_card_port_id) b.bbx_tdm_card_port_id = f.bbx_tdm_card_port_id;
            a.getREST("/gui/route/map", b, function (l) {
                c(l.map)
            })
        }
        return this
    };
    a.fn.miniRoute = function (f) {
        var j = this,
            g = {
                refresh: e
            };
        if (g[f]) {
            var c = this.data("miniRoute");
            if (typeof c === "undefined") {
                this.data("miniRoute", {});
                c = this.data("miniRoute")
            }
            return g[f].apply(this, [].concat([c], Array.prototype.slice.call(arguments, 1)))
        } else if (f && typeof f !== "object") {
            console_log("Method does not exist in plugin miniRoute");
            return this
        }
        var b = f || {};
        a.getTemplate("/ajax-html/miniRoute.html", function (l) {
            j.each(function () {
                var o = a(this),
                    n = a(l);
                n = a(".staticBody", n);
                a("a.opRoutePopup", n).bind("click",
                    function (q) {
                        q.preventDefault();
                        showOverlay("routemapmanager").one("close_request", function () {
                            o.miniRoute("refresh")
                        })
                    });
                a(this).html(n)
            });
            e.call(j, b)
        });
        this.data("miniRoute", b);
        return this
    }
})(jQuery);
(function (a) {
    var e, f = {
            common: {
                paginator: true,
                rows: 100,
                paginatorToTopAdditional: 200
            },
            active: {
                url: "/gui/freeswitch/registrations/select_active",
                rowDataRoot: "select_active",
                hasNoneText: "No active registrations to show",
                columnData: [{
                    header: "Extension",
                    sortby: "extension",
                    value: "$.extension",
                    render: "text"
                }, {
                    header: "Name",
                    sortby: "name",
                    value: "$.name",
                    render: "text"
                }, {
                    header: "User Agent",
                    sortby: "model",
                    value: "$.model",
                    render: "text"
                }, {
                    header: "IP:Port",
                    sortby: "network_ip",
                    value: function (c) {
                        return a('<span class="regIP">' +
                            c.rowData.network_ip + '</span><span>:</span><span class="regPort">' + c.rowData.network_port + "</span>")
                    },
                    render: "html"
                }, {
                    header: "MAC",
                    sortby: "mac",
                    value: function (c) {
                        return c.rowData.mac || "(Generic SIP Device)"
                    },
                    render: "text"
                }, {
                    header: "Expires",
                    sortby: "expires",
                    value: function (c) {
                        return a('<span class="time"></span>').text(a.timeSince(c.rowData.expires))
                    },
                    render: "html"
                }]
            },
            inactive: {
                url: "/gui/freeswitch/registrations/select_inactive",
                type: "GET",
                rowDataRoot: "select_inactive",
                hasNoneText: "No inactive registrations to show",
                columnData: [{
                    header: "Extension",
                    sortby: "extension",
                    value: "$.extension",
                    render: "text"
                }, {
                    header: "Name",
                    sortby: "name",
                    value: "$.name",
                    render: "text"
                }, {
                    header: "User Agent",
                    sortby: "model",
                    value: "$.model",
                    render: "text"
                }, {
                    header: "MAC",
                    sortby: "mac",
                    value: function (c) {
                        return c.rowData.mac || "(Generic SIP Device)"
                    },
                    render: "text"
                }, {
                    header: "Last Registered",
                    sortby: "last_registered",
                    value: function (c) {
                        var b = a('<span class="time"></span>');
                        c.rowData.last_registered ? b.text(a.timeSince(Date.parse(c.rowData.last_registered.split(".")[0])) +
                            " ago") : b.text("(Never Registered)");
                        return b
                    },
                    render: "html"
                }]
            },
            restricted: {
                url: "/gui/freeswitch/registrations/select_jailed",
                rowDataRoot: "select_jailed",
                hasNoneText: "No restricted registrations to show",
                columnData: [{
                    header: "Username",
                    sortby: "server_user",
                    value: "server_user",
                    render: "text"
                }, {
                    header: "Auth Username",
                    sortby: "sip_username",
                    value: "sip_username",
                    render: "text"
                }, {
                    header: "User Agent",
                    sortby: "user_agent",
                    value: "user_agent",
                    render: "text"
                }, {
                    header: "IP",
                    sortby: "network_ip",
                    value: "network_ip",
                    render: "text"
                }, {
                    header: "Expires",
                    sortby: "expires",
                    value: function (c) {
                        return a('<span class="time"></span>').text(a.timeSince(c.rowData.reg.expires))
                    },
                    render: "html"
                }]
            }
        }, j = function (c, b) {
            var l = a("select.show", b);
            l.bind("change", function () {
                a(".regList", b).jsonTable("refreshTable", a.extend(true, {}, f.common, f[l.val()]))
            });
            a(".regList", b).jsonTable(a.extend(true, {}, f.common, f[l.val()]));
            a("a.opRefresh", b).bind("click", function (o) {
                o.preventDefault();
                a(".show", b).triggerHandler("change")
            });
            c.html(b)
        }, g = function () {
            return this
        };
    a.fn.activeRegScreen = function (c) {
        var b = this,
            l = {
                secondarymethod: g
            };
        if (l[c]) {
            var o = this.data("activeRegScreen");
            if (typeof o === "undefined") {
                this.data("activeRegScreen", {});
                o = this.data("activeRegScreen")
            }
            return l[c].apply(this, [].concat([o], Array.prototype.slice.call(arguments, 1)))
        } else if (c && typeof c !== "object") {
            console_log("Method does not exist in plugin activeRegScreen");
            return this
        }
        var n = c || {};
        a.getTemplate("/ajax-html/activeRegScreen.html", function (q) {
            b.each(function () {
                var u = a(this),
                    v = a(q),
                    x = a(".staticBody",
                        v);
                e = e || a(".template", v);
                j(u, x, e, n)
            })
        });
        this.data("activeRegScreen", n);
        return this
    }
})(jQuery);
(function (a) {
    var e, f = function (g, c, b, l) {
            a(".selRows", c).bind("change", function () {
                j.call(g, l)
            });
            a(".selTime", c).bind("change", function () {
                a(".customDateRange", c).toggle(a(this).val() === "RANGE");
                j.call(g, l)
            });
            a("a.opRefresh", c).bind("click", function (o) {
                o.preventDefault();
                j.call(g, l)
            });
            a("a.opDownload", c).bind("click", function (o) {
                o.preventDefault();
                o = a(".cdrTable", c).jsonTable("getRequestParams");
                delete o.page;
                delete o.rows;
                o = "/gui/cdr/csv?" + a.param(o);
                location.href = o
            });
            a(".search", c).searchBox().bind("search",
                function (o, n) {
                    j.call(g, l, {
                        search: n
                    })
                });
            g.html(c);
            j.call(g, l);
            a(".dateEnd, .dateStart", c).datepicker({
                showAnim: "fadeIn",
                changeMonth: true,
                changeYear: true,
                dateFormat: "MM d, yy",
                onSelect: function () {
                    j.call(g, l)
                }
            }).datepicker("setDate", new Date)
        }, j = function (g, c) {
            g = g || {};
            a.extend(true, g, c || {});
            var b = a(">.staticBody.cdrList", this),
                l = {
                    url: "/gui/cdr/cdr",
                    type: "GET",
                    rowDataRoot: "cdr",
                    hasNoneText: "No records matching your search",
                    rows: a(".selRows", b).val(),
                    sortby: "end_timestamp",
                    sortorder: "desc",
                    searchParam: "search_string",
                    columnData: [{
                        header: "Call Answered",
                        sortby: "answer_timestamp",
                        value: "answer_timestamp",
                        render: "text"
                    }, {
                        header: "Call End",
                        sortby: "end_timestamp",
                        value: "end_timestamp",
                        value: function (q) {
                            return a("<div></div>").text(q.rowData.end_timestamp || " ").attr("title", q.rowData.hangup_cause || "UNKNOWN")
                        },
                        render: "html"
                    }, {
                        header: "Caller Name",
                        sortby: "caller_id_name",
                        value: "caller_id_name",
                        render: "text"
                    }, {
                        header: "Caller Number",
                        sortby: "caller_id_number",
                        value: "caller_id_number",
                        render: "text"
                    }, {
                        header: "Destination Name",
                        sortby: "destination_name",
                        value: "destination_name",
                        render: "text"
                    }, {
                        header: "Destination Number",
                        sortby: "destination_number",
                        value: function (q) {
                            return a("<div></div>").text(q.rowData.destination_number || " ").attr("title", q.rowData.gateway_name || "No Gateway")
                        },
                        render: "html"
                    }, {
                        header: "Billable Time (h:m:s)",
                        sortby: "billsec",
                        value: function (q) {
                            return hhmmss(parseInt(q.rowData.billsec, 10) || 0)
                        },
                        render: "text"
                    }, {
                        header: "Recorded File/Fax",
                        value: function (q) {
                            if (q.rowData.bbx_fax_outbound_id || q.rowData.bbx_fax_inbound_id) {
                                var u =
                                    q.rowData.bbx_fax_outbound_id ? "outbound" : "inbound",
                                    v = q.rowData.bbx_fax_outbound_id ? q.rowData.bbx_fax_outbound_id : q.rowData.bbx_fax_inbound_id,
                                    x = "fax_" + u + "_" + v,
                                    z = "bbx_fax_" + u,
                                    B = z + "_id",
                                    C = a("<div></div>"),
                                    w = a('<a class="cdrFaxView" href="/gui/fax/file?sessionid=' + getSessionID() + "&format=png&" + B + "=" + v + '&page=1" rel="' + x + '"><img src="/images/client/bar/fax.png" width="20" height="20" alt="View Fax" title="View Fax" /></a>');
                                q = a('<a href="/gui/fax/file?sessionid=' + getSessionID() + "&format=pdf&" + B + "=" + v +
                                    '"><img src="/images/pdficon_small.gif" width="15" height="15" alt="Download Fax" title="View Fax" /></a>');
                                w.one("click", function (G) {
                                    G.preventDefault();
                                    G = {};
                                    G[B] = v;
                                    a.getJSONCached("/gui/fax/fax", G, 5E3, function (J) {
                                        J = J.fax;
                                        J = J[z + "_pages_sent"];
                                        if (J > 1)
                                            for (var E = 2; E <= J; E++) {
                                                var M = a('<a class="cdrFaxView cdrFaxViewHidden" style="display: none" href="/gui/fax/file?sessionid=' + getSessionID() + "&format=png&" + B + "=" + v + "&page=" + E + '" rel="' + x + '"> </a>');
                                                C.append(M)
                                            }
                                        C.find(".cdrFaxView").picbox({
                                                margins: 60
                                            }, null,
                                            function (R) {
                                                return this == R || this.rel == R.rel
                                            });
                                        w.triggerHandler("click")
                                    })
                                });
                                C.append(w);
                                C.append(q);
                                return C
                            } else if (q.rowData.record_file_name) {
                                if (q.rowData.record_file_name.match(/\.wav$/i)) return '<div class="cdrTranscoding" title="A recorded file exists, but is being processed. Refresh the listing to play the file.">(File is Processing)</div>';
                                C = a("<div></div>");
                                q = "/gui/cdr/recording?sessionid=" + getSessionID() + "&record_file_name=" + escape(q.rowData.record_file_name);
                                a("<span></span>").appendTo(C).miniSoundWidget(q +
                                    "&disposition=inline");
                                a('<a href="' + q + '&disposition=attachment"><img src="/images/download.png" /></a>').appendTo(C);
                                return C
                            } else return ""
                        },
                        render: "html"
                    }]
                }, o = {
                    rows: a(".selRows", b).val(),
                    search: g.search || ""
                }, n = a(".selTime", b).val();
            o.data = n === "RANGE" ? {
                since: "RANGE",
                between: [a(".dateStart", b).val(), a(".dateEnd", b).val()]
            } : {
                since: n
            };
            g.hasRun ? a(".cdrTable", b).jsonTable("refresh", a.extend(true, {
                clear_existing_data: true
            }, o)) : a(".cdrTable", b).jsonTable(a.extend(true, {}, l, o));
            if (!g.hasRun) g.hasRun = true;
            a(this).data("cdrList", g);
            return this
        };
    a.fn.cdrList = function (g) {
        var c = this,
            b = {
                refresh: j
            };
        if (b[g]) {
            var l = this.data("cdrList");
            if (typeof l === "undefined") {
                this.data("cdrList", {});
                l = this.data("cdrList")
            }
            return b[g].apply(this, [].concat([l], Array.prototype.slice.call(arguments, 1)))
        } else if (g && typeof g !== "object") {
            console_log("Method does not exist in plugin cdrList");
            return this
        }
        var o = g || {};
        a.getTemplate("/ajax-html/cdr.html", function (n) {
            c.each(function () {
                var q = a(this),
                    u = a(n),
                    v = a(".staticBody", u);
                e = e ||
                    a(".template", u);
                f(q, v, e, o)
            })
        });
        this.data("cdrList", o);
        return this
    }
})(jQuery);
(function (a) {
    a.fn.searchBox = function (e) {
        var f = {};
        if (f[e]) {
            var j = this.data("searchBox");
            if (typeof j === "undefined") {
                this.data("searchBox", {});
                j = this.data("searchBox")
            }
            return f[e].apply(this, [].concat([j], Array.prototype.slice.call(arguments, 1)))
        } else if (e && typeof e !== "object") {
            console_log("Method does not exist in plugin searchBox");
            return this
        }
        f = e || {};
        this.each(function () {
            var g = a(this),
                c = a('<div class="searchBoxWrap inline-block"></div>'),
                b = a('<div style="position: relative; width: 0; height: 0"></div>').appendTo(c);
            b = a('<div style="position: absolute; top: 2px; left: 2px"></div>').appendTo(b);
            var l = a('<img src="/images/searchIcon.png" width="20" height="20" alt="" />').appendTo(b),
                o = a('<a href="#"><img src="/images/searchXIcon.png" width="20" height="20" alt="" /></a>').appendTo(b),
                n = a('<input type="text" style="padding-left: 20px" />').appendTo(c);
            o.hide();
            var q = function () {
                var u = n.val();
                n.trigger("search", u);
                o.toggle(u !== "");
                l.toggle(u === "")
            };
            n.debounce("keyup", q);
            n.bind("keyup", function (u) {
                if (u.which === a.ui.keyCode.ENTER) n.trigger("enterKeyPress");
                else if (u.which === a.ui.keyCode.ESCAPE) {
                    n.trigger("escKeyPress");
                    o.trigger("click")
                }
            });
            o.bind("click", function (u) {
                u.preventDefault();
                n.val("");
                q()
            });
            c.appendTo(g.empty())
        });
        this.data("searchBox", f);
        return this
    }
})(jQuery);
(function (a) {
    var e = function (j) {
        var g = function () {
            a(".demoCurrent", j).text("Demo mode is active.");
            a(".activateDemoGo", j).attr("disabled", "disabled");
            a(".activateDemoStop", j).removeAttr("disabled")
        }, c = function () {
                a(".demoCurrent", j).text("Demo mode is not active.");
                a(".activateDemoStop", j).attr("disabled", "disabled");
                a(".activateDemoGo", j).removeAttr("disabled")
            };
        a(".activateDemoGo", j).bind("click", function () {
            a(this).is(":disabled") || a.postREST("/gui/demo/active", {
                active: 1
            }, function (b) {
                if (b.active ==
                    "ACTIVE") g();
                else {
                    c();
                    a(".demoCurrent").text("There was a problem activating demo mode. Please try again.")
                }
            })
        });
        a(".activateDemoStop", j).bind("click", function () {
            a(this).is(":disabled") || a.postREST("/gui/demo/active", {
                active: 0
            }, function (b) {
                if (b.active == "INACTIVE") c();
                else {
                    g();
                    a(".demoCurrent").text("There was a problem stopping demo mode. Please try again.")
                }
            })
        });
        a.getREST("/gui/demo/active", {}, function (b) {
            b.active == "ACTIVE" ? g() : c()
        })
    }, f = function (j) {
            a(".insertDemoGo", j).bind("click", function () {
                a(".insertDemoGo",
                    j).attr("disabled", "disabled");
                a.postREST("/gui/demo/data", {}, function (g) {
                    var c = a(".result", j);
                     ||
                    a(".template", u);
                f(q, v, e, o)
            })
        });
        this.data("cdrList", o);
        return this
    }
})(jQuery);
(function (a) {
    a.fn.searchBox = function (e) {
        var f = {};
        if (f[e]) {
            var j = this.data("searchBox");
            if (typeof j === "undefined") {
                this.data("searchBox", {});
                j = this.data("searchBox")
            }
            return f[e].apply(this, [].concat([j], Array.prototype.slice.call(arguments, 1)))
        } else if (e && typeof e !== "object") {
            console_log("Method does not exist in plugin searchBox");
            return this
        }
        f = e || {};
        this.each(function () {
            var g = a(this),
                c = a('<div class="searchBoxWrap inline-block"></div>'),
                b = a('<div style="position: relative; width: 0; height: 0"></div>').appendTo(c);
            b = a('<div style="position: absolute; top: 2px; left: 2px"></div>').appendTo(b);
            var l = a('<img src="/images/searchIcon.png" width="20" height="20" alt="" />').appendTo(b),
                o = a('<a href="#"><img src="/images/searchXIcon.png" width="20" height="20" alt="" /></a>').appendTo(b),
                n = a('<input type="text" style="padding-left: 20px" />').appendTo(c);
            o.hide();
            var q = function () {
                var u = n.val();
                n.trigger("search", u);
                o.toggle(u !== "");
                l.toggle(u === "")
            };
            n.debounce("keyup", q);
            n.bind("keyup", function (u) {
                if (u.which === a.ui.keyCode.ENTER) n.trigger("enterKeyPress");
                else if (u.which === a.ui.keyCode.ESCAPE) {
                    n.trigger("escKeyPress");
                    o.trigger("click")
                }
            });
            o.bind("click", function (u) {
                u.preventDefault();
                n.val("");
                q()
            });
            c.appendTo(g.empty())
        });
        this.data("searchBox", f);
        return this
    }
})(jQuery);
(function (a) {
    var e = function (j) {
        var g = function () {
            a(".demoCurrent", j).text("Demo mode is active.");
            a(".activateDemoGo", j).attr("disabled", "disabled");
            a(".activateDemoStop", j).removeAttr("disabled")
        }, c = function () {
                a(".demoCurrent", j).text("Demo mode is not active.");
                a(".activateDemoStop", j).attr("disabled", "disabled");
                a(".activateDemoGo", j).removeAttr("disabled")
            };
        a(".activateDemoGo", j).bind("click", function () {
            a(this).is(":disabled") || a.postREST("/gui/demo/active", {
                active: 1
            }, function (b) {
                if (b.active ==
                    "ACTIVE") g();
                else {
                    c();
                    a(".demoCurrent").text("There was a problem activating demo mode. Please try again.")
                }
            })
        });
        a(".activateDemoStop", j).bind("click", function () {
            a(this).is(":disabled") || a.postREST("/gui/demo/active", {
                active: 0
            }, function (b) {
                if (b.active == "INACTIVE") c();
                else {
                    g();
                    a(".demoCurrent").text("There was a problem stopping demo mode. Please try again.")
                }
            })
        });
        a.getREST("/gui/demo/active", {}, function (b) {
            b.active == "ACTIVE" ? g() : c()
        })
    }, f = function (j) {
            a(".insertDemoGo", j).bind("click", function () {
                a(".insertDemoGo",
                    j).attr("disabled", "disabled");
                a.postREST("/gui/demo/data", {}, function (g) {
                    var c = a(".result", j);
                    g.data == "SUCCESS" ? c.text("Demonstration data created") : c.text("There was an error creating demo data");
                    a(".insertDemoGo", j).removeAttr("disabled");
                    c.show();
                    setTimeout(function () {
                        c.fadeOut()
                    }, 3E3)
                })
            })
        };
    a.fn.demoModeSettings = function (j, g) {
        var c = this;
        g = g || {};
        a.getTemplate("/ajax-html/demo_settings.html", function (b) {
            c.each(function () {
                var l = a(b).replaceAll(this);
                e(l, g)
            })
        })
    };
    a.fn.demoModeSetup = function (j, g) {
        var c =
            this;
        g = g || {};
        a.getTemplate("/ajax-html/demo_setup.html", function (b) {
            c.each(function () {
                var l = a(b).replaceAll(this);
                f(l, g)
            })
        })
    }
})(jQuery);
(function (a) {
    var e, f = {
            init: function (j) {
                j = j || {};
                j = a.extend({}, {
                    selected: [],
                    inputName: "codec"
                }, j);
                selected = j.selected;
                var g = {};
                a.each(selected, function (c, b) {
                    g[b] = true
                });
                this.each(function () {
                    elem = a(this);
                    var c = a('<div class="staticBody codecPicker"></div>'),
                        b = a('<div class="checkDropWrap"></div>').appendTo(c);
                    b = a('<div class="checkDrop"></div>').appendTo(b);
                    var l = a('<table class="checkDropHidden"><tbody><tr></tr></tbody></table>').appendTo(b),
                        o = a("tr", l);
                    a.each(e, function (n, q) {
                        var u = a("<td></td>").appendTo(o),
                            v = a('<div class="codecCategoryTitle"></div>').appendTo(u),
                            x = a('<ul class="codecCategory"></ul>').appendTo(u);
                        u = q.items;
                        v.text(q.set);
                        a.each(u, function (z, B) {
                            var C = a('<li class="codec"><label><input type="checkbox" class="codecCxbox" /> <span class="codecName"></span></label></li>');
                            a(".codecName", C).text(B.printed_name);
                            var w = a(".codecCxbox", C).attr("name", j.inputName).val(B.value);
                            g[B.value] && w.attr("checked", "checked");
                            x.append(C)
                        })
                    });
                    b.checkDrop();
                    elem.html(c)
                })
            }
        };
    a.fn.codecPicker = function (j) {
        var g =
            a(this),
            c = function () {
                if (f[j]) return f[j].apply(g, Array.prototype.slice.call(arguments, 1));
                else if (typeof j === "object" || !j) {
                    var b = j || {};
                    g.data("codecPicker", b);
                    return f.init.call(g, b)
                } else a.error("Method " + j + " does not exist on jQuery.codecPicker")
            };
        e ? c() : a.getJSONCached("/gui/system/available_codecs", {}, 1E3, function (b) {
            e = b.available_codecs;
            c()
        })
    }
})(jQuery);
(function (a) {
    var e, f = function (g, c, b, l, o) {
            a(".conferenceMemberList", c).sortList({
                allow: ["add", "remove"],
                data: l,
                rowDataRoot: "member",
                rowData: {
                    value: function (n) {
                        var q = a(".conferenceMember", b).clone();
                        trueish(n.bbx_conference_group_map_moderator) && a(".isModerator", q).attr("checked", "checked");
                        a(".memberName", q).text(n.bbx_group_name || "Unknown");
                        a(".isModerator", q).bind("click", function () {
                            a.putREST("/gui/conference2/member", {
                                bbx_conference_group_map_id: n.bbx_conference_group_map_id,
                                bbx_conference_group_map_moderator: a(this).is(":checked") ? "1" : "0"
                            })
                        });
                        return q
                    },
                    render: "html"
                },
                remove: function (n, q) {
                    a.deleteREST("/gui/conference2/member", {
                        bbx_conference_group_map_id: q.row.bbx_conference_group_map_id
                    }, function () {
                        q.success()
                    })
                },
                addForm: {
                    value: function () {
                        var n = a(".conferenceMemberAdd", b).clone();
                        a(".memberName", n).extensionPicker({
                            searchTypes: ["group"],
                            hiddenName: "bbx_group_id",
                            hiddenFormat: "{object_id}",
                            autoSelectFirst: true
                        }).bind("selection", function () {
                            a.postREST("/gui/conference2/member", n.serialize() + "&bbx_conference_id=" + o.bbx_conference_id,
                                function (q) {
                                    q.member ? n.trigger("add", {
                                        data: q.member,
                                        last: true
                                    }) : n.trigger("addCancel")
                                })
                        });
                        return n
                    },
                    position: "last"
                },
                addLink: {
                    value: "Add a group",
                    render: "text",
                    position: "last"
                }
            });
            g.html(c)
        }, j = function () {
            return this
        };
    a.fn.conferenceMember = function (g) {
        var c = this,
            b = {
                secondarymethod: j
            };
        if (b[g]) {
            var l = this.data("conferenceMember");
            if (typeof l === "undefined") {
                this.data("conferenceMember", {});
                l = this.data("conferenceMember")
            }
            return b[g].apply(this, [].concat([l], Array.prototype.slice.call(arguments, 1)))
        } else if (g &&
            typeof g !== "object") {
            console_log("Method does not exist in plugin conferenceMember");
            return this
        }
        var o = g || {};
        a.getTemplate("/ajax-html/conferenceMember.html", function (n) {
            a.getREST("/gui/conference2/member", {
                bbx_conference_id: o.bbx_conference_id
            }, function (q) {
                c.each(function () {
                    var u = a(this),
                        v = a(n),
                        x = a(".staticBody", v);
                    e = e || a(".template", v);
                    f(u, x, e, q.member, o)
                })
            })
        });
        this.data("conferenceMember", o);
        return this
    }
})(jQuery);
(function (a) {
    var e, f = function (j, g, c, b, l) {
            a(".usersGroupsList", g).sortList({
                allow: ["add", "remove"],
                data: b,
                rowDataRoot: "group",
                rowData: {
                    value: function (o) {
                        var n = a(".usersGroup", c).clone();
                        o.bbx_user_id = l.bbx_user_id;
                        a(".usersGroupName", n).text(o.bbx_group_name || "Unknown");
                        return n
                    },
                    render: "html"
                },
           header: "Ext.",
                    sortby: "bbx_extension_value",
                    value: "bbx_extension_value",
                    render: "text"
                }, {
                    header: "Name",
                    sortby: "name",
                    value: "show_name",
                    render: "text"
                }, {
                    header: "",
                    value: 'static:<a class="ops opUnmapMembership" href="#">Remove from group</a>',
                    metadata: "bbx_user_id",
                    render: "html"
                }]
            });
            a(".addGroupMember", c).extensionPicker({
                hidden: false,
                searchTypes: ["user:primary"],
                hiddenFormat: "{object_id}",
                autoSelectFirst: true
            }).bind("selection", function (n, q) {
                var u = a(this);
                a.postREST("/gui/group/members", {
                    bbx_group_id: l.bbx_group_id,
                    bbx_user_id: q.bbx_user_id
                }, function () {
                    u.val("");
                    o.jsonTable("refresh")
                })
            });
            a(".opUnmapMembership", o[0]).live("click", function (n) {
                n.preventDefault();
                n = a(this).closest("td").data("metadata");
                a.deleteREST("/gui/group/members", {
                    bbx_group_id: l.bbx_group_id,
                    bbx_user_id: n
                }, function () {
                    o.jsonTable("refresh")
                })
            });
            a(".col2, .col3", o[0]).live("click", function () {
                var n = a(this).closest("tr").data("row");
                a(window).scrollTop(0);
                showOverlay("user", {
                    bbx_extension_id: n.bbx_extension_id,
                    key: "bbx_user_id",
                    bbx_user_id: n.bbx_user_id,
                    close: function () {
                        o.jsonTable("refresh")
                    }
                })
            });
            g.html(c)
        }, j = function (g, c) {
            $elems = this;
            a(">.staticBody.yournamhere", $elems);
            a.extend(true, g, c);
            elems.data("groupMembership", g);
            return this
        };
    a.fn.groupMembership = function (g) {
        var c =
            this,
            b = {
                secondarymethod: j
            };
        if (b[g]) {
            var l = this.data("groupMembership");
            if (typeof l === "undefined") {
                this.data("groupMembership", {});
                l = this.data("groupMembership")
            }
            return b[g].apply(this, [].concat([l], Array.prototype.slice.call(arguments, 1)))
        } else if (g && typeof g !== "object") {
            console_log("Method does not exist in plugin groupMembership");
            return this
        }
        var o = g || {};
        a.getTemplate("/ajax-html/groupMembership.html", function (n) {
            c.each(function () {
                var q = a(this),
                    u = a(n),
                    v = a(".staticBody", u);
                e = e || a(".template", u);
                f(q, v, e, o)
            })
        });
        this.data("groupMembership", o);
        return this
    }
})(jQuery);
(function (a) {
    var e, f, j = function (c, b, l, o, n) {
            b.sortList({
                allow: ["add", "remove"],
                data: o.group_class,
                rowData: {
                    value: function (q) {
                        var u = a(".view", l).clone();
                        a(".groupPermissionClassName", u).text(q.bbx_permission_class_name);
                        a(".groupPermissionClassDesc", u).text(q.bbx_permission_class_description);
                        return u
                    },
                    render: "html"
                },
                addForm: {
                    value: function () {
                        var q = a(".add", l).clone(true),
                            u = b.sortList("rowData");
                        a.each(u, function (v, x) {
                            a("option[value=" + x.bbx_permission_class_id + "]", q).remove()
                        });
                        if (!a("option", q)[0]) {
                            showError("This group has all possible Permission Roles applied");
                            return false
                        }
                        a(".opAddPermission", q).bind("click", function (v) {
                            v.preventDefault();
                            a(this).remove();
                            v = a("select.classes", q).val();
                            b.sortList("exists", {
                                bbx_permission_class_id: v
                            }) || a.postREST("/gui/permission_class/group_class", {
                                bbx_group_id: n.bbx_group_id,
                                bbx_permission_class_id: v
                            }, function (x) {
                                b.trigger("add", {
                                    data: x.group_class,
                                    last: true
                                })
                            })
                        });
                        return q
                    },
                    position: "last"
                },
                addLink: {
                    value: '<a href="#" class="ops">Add new permission</a>',
                    render: "html",
                    position: "last"
                },
                remove: function (q, u) {
                    a.deleteREST("/gui/permission_class/group_class", {
                        bbx_group_id: n.bbx_group_id,
                        bbx_permission_class_id: u.row.bbx_permission_class_id
                    }, u.success)
                },
                hasNoneText: "This group has no special permissions."
            });
            c.html(b)
        }, g = function (c, b) {
            $elems = this;
            a(">.staticBody.yournamhere", $elems);
            a.extend(true, c, b);
            elems.data("groupPermissionClass", c);
            return this
        };
    a.fn.groupPermissionClass = function (c) {
        var b = this,
            l = {
                secondarymethod: g
            };
        if (l[c]) {
            var o = this.data("groupPermissionClass");
            if (typeof o === "undefined") {
                this.data("groupPermissionClass", {});
                o = this.data("groupPermissionClass")
            }
            return l[c].apply(this, [].concat([o], Array.prototype.slice.call(arguments, 1)))
        } else if (c && typeof c !== "object") {
            console_log("Method does not exist in plugin groupPermissionClass");
            return this
        }
        var n = c || {}, q = function (v, x) {
                b.each(function () {
                    var z = a(this),
                        B = a(x),
                        C = a(".staticBody", B);
                    e || (e = a(".template", B));
                    if (!a("select.classes > option", e)[0]) {
                        var w = a(".add select.classes", e);
                        a.each(f, function (G, J) {
                            var E = a("<option></option>").val(J.bbx_permission_class_id).text(J.bbx_permission_class_name).data("desc", J.bbx_permission_class_description);
                            w.append(E);
                            w.bind("change keyup", function () {
                                var M = a("option:selected", this).data("desc");
                                a(this).closest(".add").find(".groupPermissionClassDesc").text(M || "")
                            }).triggerHandler("change")
                        })
                    }
                    j(z, C, e,   addForm: {
                    value: function () {
                        var q = a(".add", l).clone(true),
                            u = b.sortList("rowData");
                        a.each(u, function (v, x) {
                            a("option[value=" + x.bbx_permission_class_id + "]", q).remove()
                        });
                        if (!a("option", q)[0]) {
                            showError("This group has all possible Permission Roles applied");
                            return false
                        }
                        a(".opAddPermission", q).bind("click", function (v) {
                            v.preventDefault();
                            a(this).remove();
                            v = a("select.classes", q).val();
                            b.sortList("exists", {
                                bbx_permission_class_id: v
                            }) || a.postREST("/gui/permission_class/group_class", {
                                bbx_group_id: n.bbx_group_id,
                                bbx_permission_class_id: v
                            }, function (x) {
                                b.trigger("add", {
                                    data: x.group_class,
                                    last: true
                                })
                            })
                        });
                        return q
                    },
                    position: "last"
                },
                addLink: {
                    value: '<a href="#" class="ops">Add new permission</a>',
                    render: "html",
                    position: "last"
                },
                remove: function (q, u) {
                    a.deleteREST("/gui/permission_class/group_class", {
                        bbx_group_id: n.bbx_group_id,
                        bbx_permission_class_id: u.row.bbx_permission_class_id
                    }, u.success)
                },
                hasNoneText: "This group has no special permissions."
            });
            c.html(b)
        }, g = function (c, b) {
            $elems = this;
            a(">.staticBody.yournamhere", $elems);
            a.extend(true, c, b);
            elems.data("groupPermissionClass", c);
            return this
        };
    a.fn.groupPermissionClass = function (c) {
        var b = this,
            l = {
                secondarymethod: g
            };
        if (l[c]) {
            var o = this.data("groupPermissionClass");
            if (typeof o === "undefined") {
                this.data("groupPermissionClass", {});
                o = this.data("groupPermissionClass")
            }
            return l[c].apply(this, [].concat([o], Array.prototype.slice.call(arguments, 1)))
        } else if (c && typeof c !== "object") {
            console_log("Method does not exist in plugin groupPermissionClass");
            return this
        }
        var n = c || {}, q = function (v, x) {
                b.each(function () {
                    var z = a(this),
                        B = a(x),
                        C = a(".staticBody", B);
                    e || (e = a(".template", B));
                    if (!a("select.classes > option", e)[0]) {
                        var w = a(".add select.classes", e);
                        a.each(f, function (G, J) {
                            var E = a("<option></option>").val(J.bbx_permission_class_id).text(J.bbx_permission_class_name).data("desc", J.bbx_permission_class_description);
                            w.append(E);
                            w.bind("change keyup", function () {
                                var M = a("option:selected", this).data("desc");
                                a(this).closest(".add").find(".groupPermissionClassDesc").text(M || "")
                            }).triggerHandler("change")
                        })
                    }
                    j(z, C, e, v, n)
                })
            }, u = function () {
                a.getTemplate("/ajax-html/groupPermissionClass.html", function (v) {
                    n.data ? q(n.data, v) : a.getREST("/gui/permission_class/group_class", {
                        bbx_group_id: n.bbx_group_id
                    }, function (x) {
                        q(x, v)
                    })
                })
            };
        f ? u() : a.getREST("/gui/permission_class/classes", function (v) {
            f = v.classes;
            u()
        });
        this.data("groupPermissionClass",
            n);
        return this
    }
})(jQuery);
(function (a) {
    var e, f = false,
        j = {
            OK: "Valid extension selected",
            NO_EBLOCK: "No blocks are available for use",
            NO_EXTERNAL: "No external numbers are available for use",
            EXTRA: "The specified extension is not appropriate for this operation",
            UNKNOWN_REASON: "Internal error validating this extension (No information)",
            LOADING: "One moment...",
            BLOCK_LOCKED: "This extension is in a locked block",
            CONTAINS: "A locked block cannot contain objects",
            INTERNAL_ERROR: "Internal error validating this extension",
            INTERSECTS: "Intersects an existing block boundary",
            INVALID: "Not a valid extension",
            IN_USE: "This extension is already in use",
            NO_EXT: "No extension selected",
            NO_INTERIOR: "This block is inside another block",
            MIXED: "This block contains an existing External Number",
            LOCKED_CONTAINS_OBJECTS: "Extensions already exist within the given range"
        }, g = function (b, l, o, n) {
            var q = a("select.extType", l),
                u = a(".selector", l),
                v = a(".hiddens", l),
                x = "|" + n.allow.join("|") + "|";
            f ? a(".blocksList", l).text(f.join(", ") || "Please wait...") : a(".blocksList", l).text("Please wait...");
            a.getREST("/gui/extension/containers", {}, function (w) {
                w = w.containers;
                if (n.showValid) {
                    f = a.map(w, function (G) {
                        return G.bbx_extension_value
                    });
                    a(".blocksList", l).text(f.join(", ") || "(No available extensions)")
                } else a(".blocks", l).remove()
            });
            var z = false,
                B = function (w, G) {
                    var J = {
                        valid: true
                    };
                    if (a.isFunction(G.extraValidation)) {
                        var E = G.extraValidation(w);
                        if (E && E !== true && j[E]) {
                            w.result = {
                                why: E,
                                why_desc: j[E]
                            };
                            C(w);
                            return
                        } else if (E && E !== true) {
                            w.result = {
                                why: "EXTRA",
                                why_desc: E || j.EXTRA
                            };
                            C(w);
                            return
                        }
                    }
                    if (w.begin && w.end) {
                        a(".beginHidden", v).val(w.begin);
                        a(".endHidden", v).val(w.end);
                        a(".singleHidden", v).val(w.begin + "-" + w.end);
                        J.bbx_extension_block_begin = w.begin;
                        J.bbx_extension_block_begin = w.end;
                        J.bbx_extension_value = w.begin + "-" + w.end
                    }
                    if (w.single) {
                        a(".singleHidden", v).val(w.single);
                        J.bbx_extension_value = w.single
                    }
                    if (w.id) {
                        a(".idHidden", v).val(w.id).enable("novalue");
                        J.bbx_extension_id = w.id
                    } else a(".idHidden", v).val("").disable("novalue");
                    l.trigger("validate", J);
                    l.trigger("valid", J);
                    l.data("extensionValidatorState", J);
                    J = a('<div class="extValid"><img src="/images/valid.png" width="15" height="15" alt="Invalid" style="vertical-align: middle; padding-right: 1em;" /><span class="validMessage"></span></div>');
                    a(".validMessage", J).text(j.OK);
                    a(".validity", l).empty().append(J)
                }, C = function (w) {
                    a(".beginHidden, .endHidden, .singleHidden", l).val("");
                    var G = {
                        valid: false,
                        bbx_extension_value: w.single,
                        bbx_extension_block_begin: w.begin,
                        bbx_extension_block_end: w.end
                    };
                    l.trigger("validate", G);
                    l.trigger("invalid", G);
                    l.data("extensionValidatorState", G);
                    G = a('<div class="extInvalid"><img src="/images/invalid.png" width="15" height="15" alt="Invalid" style="vertical-align: middle; padding-right: 1em;" /><span class="validMessage"></span></div>');
                    w.result = !w.result || !w.result.why ? {
                        why: "UNKNOWN_REASON",
                        why_desc: j.UNKNOWN_REASON
                    } : w.result.why === "EXTRA" ? {
                        why: "EXTRA",
                        why_desc: w.result.why_desc || j.EXTRA
                    } : {
                        why: w.result.why,
                        why_desc: j[w.result.why] || j.UNKNOWN_REASON
                    };
                    a(".validMessage", G).text(w.result.why_desc);
                    a(".validity", l).empty().append(G)
                };
            a("option", q).each(function (w, G) {
                var J = a(G);
                stringContains("|" + a(G).val() + "|", x) || J.remove()
            });
            a("option", q).length === 1 && q.hide();
            q.bind("change keyup", function () {
                var w = q.val();
                if (w !== z) {
                    z = w;
                    var G = a(".selector-" +
                        w, o).clone();
                    u.empty().append(G);
                    v.empty();
                    stringContains("|id|", x) && a('<input type="hidden" class="idHidden" />', {
                        name: n.hiddens.id
                    }).appendTo(v);
                    C({
                        result: {
                            valid: false,
                            why: "LOADING"
                        }
                    });
                    var J = {};
                    if (n.allowUserSecondaries) {
                        J.test = "add_line";
                        J.bbx_user_id = n.allowUserSecondaries
                    }
                    switch (w) {
                    case "nextfree":
                        if (n.hiddens.nextfree) a('<input type="hidden" />').attr("name", n.hiddens.nextfree).val(n.nextFreeValue || "").appendTo(v);
                        B({
                            nextfree: true
                        }, n);
                        break;
                    case "single":
                        if (n.hiddens.single) a('<input type="hidden" class="singleHidden" />').attr({
                            name: n.hiddens.single || "bbx_extension_value"
                        }).appendTo(v);
                        a("input.single", G).debounce("keyup", function () {
                            var R = a(this).val();
                            a.getREST("/gui/extension/valid", a.extend({}, J, {
                                bbx_extension_value: R
                                                a(".blocks", G).trigger("change")
                            })
                        } else a(".blockLock", G).remove(); if (n.hiddens.block) {
                            a('<input type="hidden" class="beginHidden" />').attr({
                                name: n.hiddens.block[0] || "bbx_extension_block_begin"
                            }).appendTo(v);
                            a('<input type="hidden" class="endHidden" />').attr({
                                name: n.hiddens.block[1] || "bbx_extension_block_end"
                            }).appendTo(v)
                        }
                        if (n.hiddens.single) a('<input type="hidden" class="singleHidden" />').attr({
                            name: n.hiddens.single || "bbx_extension_value"
                        }).appendTo(v);
                        if (n.hiddens.id) a('<input type="hidden" class="idHidden" />').attr({
                            name: n.hiddens.id || "bbx_extension_id"
                        }).appendTo(v);
                        var E = a(".blocks", G);
                        E.append("<option>Please wait...</option>");
                        a.getREST("/gui/extension/availableblocks", {}, function (R) {
                            if ((R = R.availableblocks) && R.length) {
                                E.empty();
                                a.each(R, function (O, Y) {
                                    var na = Y.bbx_extension_value,
                                        qa = format_information(na, {
                                            ndash: true
                                        });
                                    a("<option></option>").attr("value", na).text(qa).data("extension", {
                                        block: true,
                                        begin: Y.bbx_extension_block_begin,
                                        end: Y.bbx_extension_block_end,
                                        single: na,
                                        id: Y.bbx_extension_id
                                    }).appendTo(E)
                                });
                                E.bind("change keyup", function () {
                                    var O = a("option:selected", E).data("extension");
                                    a(".blockLockCheck", G).is(":checked") ? a.getREST("/gui/extension/lockable", {
                                        bbx_extension_block_begin: O.begin,
                                        bbx_extension_block_end: O.end,
                                        flag_locked: true
                                    }, function (Y) {
                                        Y.lockable ? B(O, n) : C({
                                            begin: O.begin,
                                            end: O.end,
                                            single: "",
                                            result: {
                                                why: "CONTAINS"
                                            }
                                        })
                                    }) : B(O, n)
                                }).triggerHandler("change")
                            } else {
                                M.empty().html('<option value="">No available blocks</option>').attr("disabled", "disabled");
                                C({
                                    block: false,
                                    begin: "",
                                    end: "",
                                    single: "",
                                    result: {
                                        why: "NO_EBLOCK"
                                    }
                                })
                            }
                        });
                        break;
                    case "external":
                        if (n.hiddens.block) {
                            a('<input type="hidden" class="beginHidden" />').attr({
                                name: n.hiddens.block[0] || "bbx_extension_block_begin"
                            }).appendTo(v);
                            a('<input type="hidden" class="endHidden" />').attr({
                                name: n.hiddens.block[1] || "bbx_extension_block_end"
                            }).appendTo(v)
                        }
                        if (n.hiddens.single) a('<input type="hidden" class="singleHidden" />').attr({
                            name: n.hiddens.single || "bbx_extension_value"
                        }).appendTo(v);
                        if (n.hiddens.id) a('<input type="hidden" class="idHidden" />').attr({
                            name: n.hiddens.id || "bbx_extension_id"
                        }).appendTo(v);
                        var M = a(".externals", G);
                        M.append('<option value="">Please wait...</option>');
                        a.getREST("/gui/extension/availableexternals", {}, function (R) {
                            R =
                                R.availableexternals;
                            if (!(R.blocks && R.blocks.length) && !(R.singles && R.singles.length)) {
                                M.empty().html('<option value="">No available numbers</option>').attr("disabled", "disabled");
                                C({
                                    block: false,
                                    begin: "",
                                    end: "",
                                    single: "",
                                    result: {
                                        why: "NO_EXTERNAL"
                                    }
                                })
                            } else {
                                M.empty();
                                if (R.blocks && R.blocks.length) {
                                    var O = R.singles && R.singles.length ? a('<optgroup label="Block Numbers"></optgroup>').appendTo(M) : M;
                                    a.each(R.blocks, function (na, qa) {
                                        var Na = qa.bbx_extension_id,
                                            pa = qa.bbx_extension_value,
                                            La = format_information(pa, {
                                                ndash: true
                                            });
                                        a("<option></option>").attr("value", pa).text(La).data("extension", {
                                            block: true,
                                            begin: qa.bbx_extension_block_begin,
                                            end: qa.bbx_extension_block_end,
                                            id: Na,
                                            single: pa
                                        }).appendTo(O)
                                    })
                                }
                                if (R.singles && R.singles.length) {
                                    var Y = R.blocks && R.blocks.length ? a('<optgroup label="Individual Numbers"></optgroup>').appendTo(M) : M;
                                    a.each(R.singles, function (na, qa) {
                                        var Na = format_information(qa);
                                        a("<option></option>").attr("value", qa).text(Na).data("extension", {
                                            block: false,
                                            begin: qa,
                                            end: qa,
                                            single: qa
                                        }).appendTo(Y)
                                    })
                                }
                                M.bind("change keyup",
                                    function () {
                                        B(a("option:selected", M).data("extension"), n)
                                    }).triggerHandler("change")
                            }
                        })
                    }
                    G.appendTo(a(".selector", l))
                }
            }).triggerHandler("change");
            b.html(l)
        }, c = function () {
            return a(">.staticBody", this).data("extensionValidatorState")
        };
    a.fn.extensionValidator = function (b) {
        var l = this,
            o = {
                getState: c
            };
        if (o[b]) {
            var n = this.data("extensionValidator");
            if (typeof n === "undefined") {
                this.data("extensionValidator", {});
                n = this.data("extensionValidator")
            }
            return o[b].apply(this, [].concat([n], Array.prototype.slice.call(arguments,
                1)))
        } else if (b && typeof b !== "object") {
            console_log("Method does not exist in plugin extensionValidator");
            return this
        }
        var q = b || {};
        q.allow = q.allow || ["nextfree", "single", "block", "existingblock", "external"];
        q = a.extend(true, {
            lockedBlock: "flag_locked",
            hiddens: {
                nextfree: false,
                single: "bbx_extension_value",
                block: ["bbx_extension_block_begin", "bbx_extension_block_end"],
                id: "bbx_extension_id"
            },
            nextFreeValue: "",
            showValid: true
        }, q);
        a.getTemplate("/ajax-html/extensionValidator.html", function (u) {
            l.each(function () {
                var v =
                    a(this),
                    x = a(u),
                    z = a(".staticBody", x);
                e = e || a(".template", x);
                g(v, z, e, q)
            })
        });
        this.data("extensionValidator", q);
        return this
    };
    a.fn.fmExtensionValidator = function (b) {
        return this.extensionValidator(b).bind("valid", function () {
            a("input[type=hidden]", this).trigger("dirty")
        })
    }
})(jQuery);
(function (a) {
    var e, f = {
            bbx_user_id: {
                idColumn: "bbx_user_id",
                get: "/gui/user/user",
                rename: {
                    field: ["bbx_contact_first_name", "bbx_contact_last_name"],
                    action: "/gui/user/user"
                },
                "delete": {
                    action: "/gui/user/user",
                    extraText: "This will remove all of the user's Address Book entries, Voice Mail, and Fax files."
                },
                migrate: {
                    action: "/gui/extension/migrate"
                },
                impersonate: {
                    action: "/gui/login/impersonate"
                }
            },
            bbx_group_id: {
                idColumn: "bbx_group_id",
                get: "/gui/extension/group",
                rename: {
                    field: "bbx_group_name",
                    action: "/gui/extension/group"
                },
                "delete": {
                    action: "/gui/extension/group"
                },
                migrate: {
                    action: "/gui/extension/migrate"
                }
            },
            bbx_queue_id: {
                idColumn: "bbx_queue_id",
                get: "/gui/queue/queue",
                rename: {
                    field: "bbx_queue_name",
                    action: "/gui/queue2/queue"
                },
                "delete": {
                    action: "/gui/queue2/queue"
                },
                migrate: {
                    action: "/gui/extension/migrate"
                }
            },
            bbx_conference_id: {
                idColumn: "bbx_conference_id",
                get: "/gui/conference/conference",
                rename: {
                    field: "bbx_conference_name",
                    action: "/gui/conference/conference"
                },
                "delete": {
                    action: "/gui/conference/conference"
                },
                migrate: {
                    action: "/gui/extension/migrate"
                }
            },
            bbx_valet_parking_id: {
                idColumn: "bbx_valet_parking_id",
                get: "/gui/valet_parking/valet_parking",
                rename: {
                    field: "bbx_valet_parking_name",
                    action: "/gui/valet_parking/valet_parking"
                },
                "delete": {
                    action: "/gui/valet_parking/valet_parking"
                },
                migrate: {
                    action: "/gui/extension/migrate"
                }
            },
            bbx_auto_attendant_id: {
                idColumn: "bbx_auto_attendant_id",
                get: "/gui/auto_attendant/auto_attendant",
                rename: {
                    field: "bbx_auto_attendant_name",
                    action: "/gui/auto_attendant/auto_attendant"
                },
                "delete": {
                    action: "/gui/auto_attendant/auto_attendant"
                }
            },
            bbx_router_id: {
                idColumn: "bbx_router_id",
                get: "/gui/router/router",
                rename: {
                    field: "bbx_router_name",
                    action: "/gui/router/router"
                },
                "delete": {
                    action: "/gui/router/router"
                },
                migrate: {
                    action: "/gui/extension/migrate"
                }
            },
            bbx_phone_id: {
                idColumn: "bbx_phone_id",
                get: "/gui/phone/phone",
                rename: {
                    field: "bbx_phone_name",
                    action: "/gui/phone/phone"
                },
                "delete": {
                    action: "/gui/phone/phone"
                },
                migrate: {
                    action: "/gui/extension/migrate"
                }
            }
        }, j = function (g, c, b, l, o) {
            var n = l,
                q = o.get.replace(/^.*\//, "");
            if (n[q] && a.isArray(n[q])) n = n[q];
            if (a.isArray(n) &&
                n[o.idColumn]) n = n[0];
            if (a.isPlainObject(n) && n[o.idColumn]) {
                q = format_information(n.bbx_extension_value, {
                    dash: true
                });
                a(".extensionNumber", c).text(q);
                if (!n.show_name)
                    if (o.type === "bbx_user_id") n.show_name = n.bbx_contact_first_name + " " + n.bbx_contact_last_name;
                    else if (n[o.type.replace(/_id$/, "_name")]) n.show_name = n[o.type.replace(/_id$/, "_name")];
                a(".extensionName", c).text(n.show_name);
                a.each(["rename", "delete", "impersonate"], function (u, v) {
                    o[v] && a("." + v, b).clone().appendTo(a(".edmOps", c))
                });
                o.migrate && n.bbx_extension_block_begin ===
                    n.bbx_extension_block_end && a(".migrate", b).clone().appendTo(a(".edmOps", c));
                q = a(".edmOps > a", c);
                q.not(":last").after('<span class="comma">, </span>');
                q.bind("click", function (u) {
                    u.preventDefault()
                });
                o.rename && a("a.rename", c).bind("click", function () {
                    var u = a(".extensionName", c),
                        v, x = function (w) {
                            a.isArray(o.rename.field) ? u.text(a.map(o.rename.field, function (G, J) {
                                return w[J]
                            }).join(" ")) : u.text(w[o.rename.field]);
                            w[o.idColumn] = n[o.idColumn];
                            a.putREST(o.rename.action || o.get, w, function () {});
                            z()
                        }, z = function () {
                            v.remove();
                            u.show()
                        };
                    if (a.isArray(o.rename.field) && o.rename.field[1]) {
                        v = a('<span class="inlineEditWrap"></span>');
                        var B = a();
                        u.hide().after(v);
                        a.each(o.rename.field, function (w, G) {
                            var J = a('<input type="text" class="inlineEdit" name="' + G + '"/>');
                            J.val(l[G]).sizedText().appendTo(v);
                            B = B.add(J)
                        });
                        B.bind("blur", function () {
                            var w = setTimeout(function () {
                                x(B.serializeObject())
                            }, 100);
                            B.one("focus", function () {
                                clearTimeout(w)
                            })
                        });
                        B.bind("keyup", function (w) {
                            if (w.which === a.ui.keyCode.ENTER) {
                                B.unbind("blur");
                                x(B.serializeObject())
                            } else if (w.which ===
                                a.ui.keyCode.ESCAPE) {
                                B.unbind("blur");
                                z()
                            }
                        });
                        B[0].focus();
                        B[0].select();
                        B.trigger("keyup")
                    } else {
                        var C = a('<input type="text" class="inlineEdit" name="' + o.rename.field + '"/>');
                        v = C;
                        C.sizedText();
                        C.val(n[o.rename.field]);
                        u.hide().after(C);
                        C.bind("blur", function () {
                            x(C.serializeObject())
                        });
                        C.bind("keyup", function (w) {
                            if (w.which === a.ui.keyCode.ENTER) {
                                C.unbind("blur");
                                x(C.serializeObject())
                            } else if (w.which === a.ui.keyCode.ESCAPE) {
                                C.unbind("blur");
                                z()
                            }
                        });
                        C[0].focus();
                        C[0].select();
                        C.trigger("keyup")
                    }
                });
                o["delete"] &&
                    a("a.delete", c).bind("click", function () {
                        var u = a(this),
                            v = {};
                        v[o.idColumn] = n[o.idColumn];
                        showBlanker({
                            title: "Delete " + entity.ldquo + n.show_name + entity.rdquo + "?",
                            text: "This extension, its configuration options, and all secondary extensions bound to it will be removed. " + (o["delete"].extraText ? o["delete"].extraText + " " : "") + "This cannot be undone.",
                            buttons: ["Delete", "Cancel"],
                            callbacks: [
                                function () {
                                    var x = a(this).closest(".blankerPanel");
                                    a("button", x).attr("disabled", "disabled");
                                    a.deleteREST(o["delete"].action ||
                                        o.get, v, {
                                            complete: function () {
                                                u.trigger("close_request");
                                                blankerCancel.call(x)
                                            }
                                        })
                                },
                                blankerCancel
                            ]
                        })
                    });
                o.migrate && a("a.migrate", c).bind("click", function () {
                    showPopup({
                        init: function (u) {
                            var v = a(".migratePopup", b).clone(),
                                x = a(".migrateForm", v);
                            a(".migratePicker", v).extensionValidator({
                                allow: ["nextfree", "single"]
                            }).bind("invalid", function () {
                                a(".migrateForm button", v).disable("valid")
                            }).bind("valid", function () {
                                a(".migrateForm button", v).enable("valid")
                            });
                            x.bind("submit", function (z) {
                                z.preventDefault();
                                z = x.serializeObject();
                                z.bbx_extension_id = n.bbx_extension_id;
                                a.putREST(o.migrate.action, z, {
                                    complete: function () {
                                        u.trigger("close_request")
                                    },
                                    success: function (B) {
                                        a(".extensionNumber", c).text(format_information(B.migrate.bbx_extension_value, {
                                            dash: true
                                        }));
                                        c.trigger("extensionMigrated", B.migrate)
                                    }
                                })
                            });
                            u.html(v)
                        }
                    })
                });
                o.impersonate && a("a.impersonate", c).bind("click", function () {
                    showBlanker({
                        title: "Impersonate " + entity.ldquo + n.show_name + entity.rdquo + "?",
                        text: "Are you sure you want to impersonate this user? This action will log off your current user, and log you in as " + entity.ldquo + n.show_name + "." + entity.rdquo + " You will need to logout and log back in as your current user when you are finished.",
                        buttons: ["Impersonate", "Cancel"],
                        callbacks: [
                            function () {
                                blankerCancel.call(this);
                                showBlanker({
                                    title: "Logout in progress",
                                    text: "Please wait while you are logged out and logged back in as " + entity.ldquo + n.show_name + "." + entity.rdquo,
                                    icon: false,
                                    spinner: true,
                                    buttons: false
                                });
                                a.post(o.impersonate.action, {
                                    bbx_user_id: n.bbx_user_id
                                }, function () {
                                    SUPPRESS_ERROR_DISPLAY = true;
                                    window.location.hash =
                                        "";
                                    window.location.reload()
                                })
                            },
                            blankerCancel
                        ]
                    })
                });
                g.html(c)
            } else console_log("jquery.detailMasthead.js: Unsupported data structure. Could not unwrap ", l, " to find ", o.idColumn, " in ", q)
        };
    a.fn.detailMasthead = function (g) {
        var c = this,
            b = {};
        if (b[g]) {
            var l = this.data("detailMasthead");
            if (typeof l === "undefined") {
                this.data("detailMasthead", {});
                l = this.data("detailMasthead")
            }
            return b[g].apply(this, [].concat([l], Array.prototype.slice.call(arguments, 1)))
        } else if (g && typeof g !== "object") {
            console_log("Method does not exist in plugin detailMasthead");
            return this
        }
        var o = g || {};
        if (f[o.type]) o = a.extend(true, {}, f[o.type], o);
        if (o.type && !o.idColumn) o.idColumn = o.type;
        if (!o.type) {
            console_log("jquery.detailMasthead.js: No type parameter given");
            return this
        }
        if (!o.get) {
            b = o.type.match(/bbx_(.+)_id/);
            if (b[1]) {
                o.get = "/gui/" + b[1] + "/" + b[1];
                console_log('jquery.detailMasthead.js: No get parameter given: assuming "' + o.get + '" from type definition')
            } else console_log("jquery.detailMasthead.js: No get parameter given, and the type is an unknown format")
        }
        var n = function (q,
            u) {
            c.each(function () {
                var v = a(this),
                    x = a(u),
                    z = a(".staticBody", x);
                e = e || a(".template", x);
                j(v, z, e, q, o)
            })
        };
        c.html('<div><h2 class="detailMasthead stillLoading">&nbsp;</h2></div>');
        a.getTemplate("/ajax-html/detailMasthead.html", function (q) {
            if (o.data) n(o.data, q);
            else {
                gd[o.idColumn] = o.id;
                a.getREST(o.get, {}, function (u) {
                    n(u, q)
                })
            }
        });
        this.data("detailMasthead", o);
        return this
    }
})(jQuery);
(function (a) {
    var e, f = function (j, g, c, b) {
            var l = b.status.split(": ");
            switch (l[0]) {
            case "HA Not Available":
                l = l[1].split(",");
                a(".haContent", g).html(a(".haNotAvailable", c).clone());
                a.each(l, function (n, q) {
                    a(".haContent", g).append(a(".haNA" + q, c).clone())
                });
                break;
            case "HA Capable":
            case "HA Ready":
                var o = a(".haContent", g).replaceWith(a(".haAvailable", c).clone());
                a(".pairForm", g).bind("submit", function (n) {
                    n.preventDefault();
                    showBlanker({
                        title: "Create High Availability Pair?",
                        text: "Creating the High Availability Pair will remove all data on the other (secondary) Communication Server",
                        buttons: ["Create Pair", "Cancel"],
                        callbacks: [
                            function () {
                                waitBlanker = showBlanker({
                                    title: "High Availability Pairing in progress",
                                    text: "High Availability Pairing is currently in progress. Please wait.",
                                    spinner: true,
                                    icon: "/images/ha_peer_icon.png",
                                    buttons: false
                                });
                                var q = a(".pairForm").serializeObject();
                                a.postREST("/gui/ha/pair", q, {
                                    afterError: function () {
                                        waitBlanker && waitBlanker.trigger("closeBlanker")
                                    },
                                    success: function () {
                                        SUPPRESS_ERROR_DISPLAY = true;
                                        APE_ALIVE_TIMEOUT = 99999999;
                                        setInterval(function () {
                                            a.getREST("/gui/ha/status", {}, function (u) {
                                                u.status === "HA Active: stable" && setTimeout(function () {
                                                    location.reload()
                                                }, 15E3)
                                            })
                                        }, 5E3)
                                    }
                                });
                                blankerCancel.call(this)
                            },
                            blankerCancel
                        ]
                    })
                });
                break;
            case "HA Pairing":
                a(".haContent", g).replaceWith(a(".haPairing", c).clone());
                break;
            case "HA Active":
                a(".haContent", g).replaceWith(a(".haActive", c).clone());
                a.getJSONCached("/gui/ha_ip/ha_ip", {}, 3E3, function (n) {
                    if (n.ha_ip.ha_system_ip) {
                        var q = n.ha_ip.ha_system_ip.replace(/[^0-9\.]/g, "");
                        a(".haSharedIP", o).text(q).attr("href", "http://" + q)
                    }
                    if (n.ha_ip.ha_wan_ip) {
                        n =
                            n.ha_ip.ha_wan_ip.replace(/[^0-9\.]/g, "");
                        a(".haSharedWAN", o).text(n).attr("href", "http://" + n)
                    } else a(".haHasWAN", o).remove()
                });
                a(".unpairForm", g).bind("submit", function (n) {
                    n.preventDefault();
                    showBlanker({
                        title: "Unpair High Availability Pair?",
                        text: "This will remove High Availability from this pair.",
                        buttons: ["Stop High Availability", "Cancel"],
                        callbacks: [
                            function () {
                                waitBlanker = showBlanker({
                                    title: "High Availability Unpairing in progress",
                                    text: "High Availability Unpairing is currently in progress. Please wait.",
                                    spinner: true,
                                    icon: false,
                                    buttons: false
                                });
                                a.postREST("/gui/ha/unpair", {}, {
                                    afterError: function () {
                                        waitBlanker && waitBlanker.trigger("closeBlanker")
                                    },
                                    success: function () {
                                        SUPPRESS_ERROR_DISPLAY = true;
                                        APE_ALIVE_TIMEOUT = 99999999;
                                        setInterval(function () {
                                            a.getREST("/gui/ha/status", {}, function (q) {
                                                if (q.status === "HA Capable" || q.status === "HA Ready") setTimeout(function () {
                                                    location.reload()
                                                }, 15E3)
                                            })
                                        }, 5E3)
                                    }
                                });
                                blankerCancel.call(this)
                            },
                            blankerCancel
                        ]
                    })
                });
                break;
            default:
                showError("Unknown HA status");
                console_log("Unknown HA Status:",
                    b, b.status)
            }
            trueish(b.has_wan) || a(".ifWanIP", g).remove();
            j.html(g);
            a(".pairForm", g).find("input[name=ip], input[name=wan_ip]").ipv4I                             a.getREST("/gui/ha/status", {}, function (u) {
                                                u.status === "HA Active: stable" && setTimeout(function () {
                                                    location.reload()
                                                }, 15E3)
                                            })
                                        }, 5E3)
                                    }
                                });
                                blankerCancel.call(this)
                            },
                            blankerCancel
                        ]
                    })
                });
                break;
            case "HA Pairing":
                a(".haContent", g).replaceWith(a(".haPairing", c).clone());
                break;
            case "HA Active":
                a(".haContent", g).replaceWith(a(".haActive", c).clone());
                a.getJSONCached("/gui/ha_ip/ha_ip", {}, 3E3, function (n) {
                    if (n.ha_ip.ha_system_ip) {
                        var q = n.ha_ip.ha_system_ip.replace(/[^0-9\.]/g, "");
                        a(".haSharedIP", o).text(q).attr("href", "http://" + q)
                    }
                    if (n.ha_ip.ha_wan_ip) {
                        n =
                            n.ha_ip.ha_wan_ip.replace(/[^0-9\.]/g, "");
                        a(".haSharedWAN", o).text(n).attr("href", "http://" + n)
                    } else a(".haHasWAN", o).remove()
                });
                a(".unpairForm", g).bind("submit", function (n) {
                    n.preventDefault();
                    showBlanker({
                        title: "Unpair High Availability Pair?",
                        text: "This will remove High Availability from this pair.",
                        buttons: ["Stop High Availability", "Cancel"],
                        callbacks: [
                            function () {
                                waitBlanker = showBlanker({
                                    title: "High Availability Unpairing in progress",
                                    text: "High Availability Unpairing is currently in progress. Please wait.",
                                    spinner: true,
                                    icon: false,
                                    buttons: false
                                });
                                a.postREST("/gui/ha/unpair", {}, {
                                    afterError: function () {
                                        waitBlanker && waitBlanker.trigger("closeBlanker")
                                    },
                                    success: function () {
                                        SUPPRESS_ERROR_DISPLAY = true;
                                        APE_ALIVE_TIMEOUT = 99999999;
                                        setInterval(function () {
                                            a.getREST("/gui/ha/status", {}, function (q) {
                                                if (q.status === "HA Capable" || q.status === "HA Ready") setTimeout(function () {
                                                    location.reload()
                                                }, 15E3)
                                            })
                                        }, 5E3)
                                    }
                                });
                                blankerCancel.call(this)
                            },
                            blankerCancel
                        ]
                    })
                });
                break;
            default:
                showError("Unknown HA status");
                console_log("Unknown HA Status:",
                    b, b.status)
            }
            trueish(b.has_wan) || a(".ifWanIP", g).remove();
            j.html(g);
            a(".pairForm", g).find("input[name=ip], input[name=wan_ip]").ipv4Input()
        };
    a.fn.haSettings = function (j) {
        var g = this,
            c = j || {}, b = function (l, o) {
                g.each(function () {
                    var n = a(this),
                        q = a(o),
                        u = a(".staticBody", q);
                    e = e || a(".template", q);
                    f(n, u, e, l, c)
                })
            };
        a.getTemplate("/ajax-html/haSettings.html", function (l) {
            c.data ? b(c.data, l) : a.getREST("/gui/ha/status", {}, function (o) {
                b(o, l)
            })
        });
        this.data("haSettings", c);
        return this
    }
})(jQuery);
(function (a) {
    var e = {
        build: function () {
            var f = this,
                j = function () {
                    a("button.smtpError", f).attr("disabled", "disabled");
                    closePopupMessage("last_mail_error");
                    a(".lastMailError", f).empty();
                    a.postREST("/gui/mail/test", {});
                    popupMessage("A test message has been sent to the notification E-mail address. It may take some time to determine whether the test was successful.", 0);
                    setTimeout("getMessageCache('system_status', 'last_mail_error', true);", 5E3)
                };
            a.getTemplate("/ajax-html/settings/smtp.html", function (g) {
                f.html(g);
                var c = a("form", f);
                c.formModule();
                a("button.smtpTest", f).bind("click", function () {
                    if (c.hasClass("dirty")) confirm("You have unsaved SMTP settings. Are you sure you want to send a test message with the old settings instead of these unsaved settings?") && j();
                    else j()
                });
                a("button.smtpFlush", f).bind("click", function () {
                    a.postREST("/gui/mail/flush", {})
                });
                a("button.smtpError", f).bind("click", function () {
                    a.getREST("/gui/jsoncache/cache", {
                        channel: "last_mail_error"
                    }, function (b) {
                        a(".lastMailError", f).html("<pre>" +
                            b.last_mail_error + "</pre>")
                    })
                })
            })
        },
        enter: function () {
            var f = this,
                j = getHashParam("showlasterror");
            a.getREST("/gui/jsoncache/cache", {
                channel: "last_mail_error"
            }, function (g) {
                if (!g || !g.last_mail_error || g.last_mail_error.length == 0) a("button.smtpError", f).attr("disabled", "disabled");
                else j == 1 && g.last_mail_error.length > 0 && a(".lastMailError", f).html("<pre>" + g.last_mail_error + "</pre>")
            });
            getMessageCache("system_status", "last_mail_error", true)
        }
    };
    a.fn.smtpSettings = function (f) {
        var j = a(this);
        if (e[f]) return e[f].apply(j);
        else a.error("Method " + f + " does not exist on JQuery.smtpSettings")
    }
})(jQuery);
(function (a) {
    a.fn.disable = function (e) {
        if (typeof e === "string") e = {
            key: e
        };
        e = a.extend({
            key: "_unspecified"
        }, e || {});
        this.each(function () {
            var f = a(this),
                j = f.data("disableKeys") || {};
            j[e.key] = true;
            f.data("disableKeys", j).attr("disabled", "disabled").trigger("enable-disable", e.key)
        });
        return this
    };
    a.fn.enable = function (e) {
        if (typeof e === "string") e = {
            key: e
        };
        e = a.extend({
            key: "_unspecified"
        }, e || {});
        this.each(function () {
            var f = a(this),
                j = f.data("disableKeys") || {};
            delete j[e.key];
            a.isEmptyObject(j) && f.removeAttr("disabled").trigger("enable-disable",
                e.key);
            f.data("disableKeys", j)
        });
        return this
    }
})(jQuery);
$.fn.getCss = function (a) {
    var e = this,
        f = {};
    $.each(a, function (j, g) {
        f[g] = e.css(g)
    });
    return f
};
(function (a) {
    var e, f = function (j, g, c, b) {
            g.sortList({
                allow: ["add", "remove"],
                data: b.block,
                rowData: {
                    value: function (l) {
                        $row = a(".extBlock", c).clone();
                        a(".numbers", $row).text(format_information(l.bbx_extension_value, {
                            ndash: true
                        }));
                        var o = txt("type_name_" + (l.type || "alloc"));
                        a(".icon", $row).append('<img src="' + txt("type_icon_" + (l.type || "alloc")) + '" alt="' + o + '" title="' + o + '" />');
                        if (l.type) {
                            a(".isPrimary", $row).text(trueish(l.flag_primary) ? "Primary" : "Secondary");
                            a(".name", $row).text(l.show_name)
                        }
                        return $row
                    },
                    render: "html"
                },
                addForm: {
                    value: function () {
                        var l = a(".newExtBlock", c).clone();
                        l.ajaxForm({
                            url: "/gui/extension/block",
                            type: "POST",
                            dataType: "json",
                            accept: "application/json",
                            success: function (o) {
                                g.trigger("add", {
                                    data: o.block,
                                    last: true
                                })
                            }
                        });
                        a(".extPicker", l).extensionValidator({
                            lockedBlock: false,
                            showValid: false,
                            allow: ["block"],
                            extraValidation: function (o) {
                                return o.why === "SUPER" ? true : "Block is within an existing block"
                            }
                        }).bind("valid", function () {
                            a("button[type=submit]", l).enable("extensionValidator")
                        }).bind("invalid",
                            function () {
                                a("button[type=submit]", l).disable("extensionValidator")
                            }).trigger("invalid");
                        return l
                    },
                    render: "html",
                    position: "last"
                },
                addLink: {
                    value: "Add an extension block",
                    position: "last"
                },
                remove: function (l, o) {
                    var n;
                    n = {
                        title: "Delete Extension Block",
                        text: "This will delete the block " + format_information(o.row.bbx_extension_value, {
                            ndash: true
                        }) + " and all existing extensions and blocks within this range. This action cannot be undone.",
                        buttons: ["Delete", "Cancel"],
                        callbacks: [
                            function () {
                                a.deleteREST("/gui/extension/block", {
                                    bbx_extension_id: o.row.bbx_extension_id
                                }, function () {
                                    o.success();
                                    j.empty().extensionBlockMgr()
                                });
                                blankerCancel.call(this)
                            },
        (true);
            switch (g) {
            case "alert":
                a("#popup_message").after('<div id="popup_panel"><input type="button" value="' + a.alerts.okButton + '" id="popup_ok" /></div>');
                a("#popup_ok").click(function () {
                    a.alerts._hide();
                    c(true)
                });
                a("#popup_ok").focus().keypress(function (o) {
                    if (o.keyCode ==
                        13 || o.keyCode == 27) a("#popup_ok").trigger("click")
                });
                break;
            case "confirm":
                a("#popup_message").after('<div id="popup_panel"><input type="button" value="' + a.alerts.okButton + '" id="popup_ok" /> <input type="button" value="' + a.alerts.cancelButton + '" id="popup_cancel" /></div>');
                a("#popup_ok").click(function () {
                    a.alerts._hide();
                    c && c(true)
                });
                a("#popup_cancel").click(function () {
                    a.alerts._hide();
                    c && c(false)
                });
                a("#popup_ok").focus();
                a("#popup_ok, #popup_cancel").keypress(function (o) {
                    o.keyCode == 13 && a("#popup_ok").trigger("click");
                    o.keyCode == 27 && a("#popup_cancel").trigger("click")
                });
                break;
            case "prompt":
                a("#popup_message").append('<br /><input type="text" size="30" id="popup_prompt" />').after('<div id="popup_panel"><input type="button" value="' + a.alerts.okButton + '" id="popup_ok" /> <input type="button" value="' + a.alerts.cancelButton + '" id="popup_cancel" /></div>');
                a("#popup_prompt").width(a("#popup_message").width());
                a("#popup_ok").click(function () {
                    var o = a("#popup_prompt").val();
                    a.alerts._hide();
                    c && c(o)
                });
                a("#popup_cancel").click(function () {
                    a.alerts._hide();
                    c && c(null)
                });
                a("#popup_prompt, #popup_ok, #popup_cancel").keypress(function (o) {
                    o.keyCode == 13 && a("#popup_ok").trigger("click");
                    o.keyCode == 27 && a("#popup_cancel").trigger("click")
                });
                j && a("#popup_prompt").val(j);
                a("#popup_prompt").focus().select()
            }
            if (a.alerts.draggable) try {
                a("#popup_container").draggable({
                    handle: a("#popup_title")
                });
                a("#popup_title").css({
                    cursor: "move"
                })
            } catch (l) {}
        },
        _hide: function () {
            a("#popup_container").remove();
            a.alerts._overlay("hide");
            a.alerts._maintainPosition(false)
        },
        _overlay: function (e) {
            switch (e) {
            case "show":
                a.alerts._overlay("hide");
                a("BODY").append('<div id="popup_overlay"></div>');
                a("#popup_overlay").css({
                    position: "absolute",
                    zIndex: 99998,
                    top: "0px",
                    left: "0px",
                    width: "100%",
                    height: a(document).height(),
                    background: a.alerts.overlayColor,
                    opacity: a.alerts.overlayOpacity
                });
                break;
            case "hide":
                a("#popup_overlay").remove()
            }
        },
        _reposition: function () {
            var e = a(window).height() / 2 - a("#popup_container").outerHeight() / 2 + a.alerts.verticalOffset,
                f = a(window).width() / 2 - a("#popup_container").outerWidth() / 2 + a.alerts.horizontalOffset;
            if (e < 0) e = 0;
            if (f < 0) f =
                0;
            if (a.browser.msie && parseInt(a.browser.version) <= 6) e += a(window).scrollTop();
            a("#popup_container").css({
                top: e + "px",
                left: f + "px"
            });
            a("#popup_overlay").height(a(document).height())
        },
        _maintainPosition: function (e) {
            if (a.alerts.repositionOnResize) switch (e) {
            case true:
                a(window).bind("resize", a.alerts._reposition);
                break;
            case false:
                a(window).unbind("resize", a.alerts._reposition)
            }
        }
    };
    jAlert = function (e, f, j) {
        a.alerts.alert(e, f, j)
    };
    jConfirm = function (e, f, j) {
        a.alerts.confirm(e, f, j)
    };
    jPrompt = function (e, f, j, g) {
        a.alerts.prompt(e,
            f, j, g)
    }
})(jQuery);
(function (a) {
    var e = {
        LOADING: ["#666", "Unknown", "Waiting for a status update"],
        UNREGED: ["red", "Failed", "Unregistered"],
        REFRESH: ["#666", "Refresh", "Registration is being refreshed"],
        TRYING: ["#666", "Trying", "Registering"],
        REGISTER: ["#666", "Trying", "Registering"],
        REGED: ["", "Registered", "Registered"],
        UNREGISTER: ["#666", "Reset", "Unregistering"],
        FAILED: ["red", "Failed", "Registration Failed"],
        FAIL_WAIT: ["#666", "Trying", "Retrying Registration"],
        EXPIRED: ["red", "Failed", "Registration Expired"],
        NOREG: ["", "Available",
            "Registration is not required"
        ]
    }, f = function (g, c) {
            var b = e[g] || ["red", "Unknown", "An unknown state has been reported"];
            c.css("color", b[0]).text(b[1]).attr("title", b[2])
        }, j = function (g, c, b) {
            var l = b.bbx_provider_gateway_id;
            b = b.bbx_provider_gateway_state || "LOADING";
            Ape.subscribe("provider_status");
            a(window).bind("meteor_provider_status", function (o, n) {
                a.isPlainObject(n.json) && n.json.action == "modify" && n.json.bbx_provider_gateway_id == l && f(n.json.bbx_provider_gateway_state, c)
            });
            f(b, c);
            g.html(c)
        };
    a.fn.gatewayRegState =
        function (g) {
            g = g || {};
            this.each(function () {
                var c = a(this),
                    b = a('<span class="staticBody gatewayRegState"></span>');
                j(c, b, g)
            });
            this.data("gatewayRegState", g);
            return this
    }
})(jQuery);
(function (a) {
    var e = {
        ok: ["OK", "#fff", "#060", "No equipment failure has been reported"],
        missing: ["Hardware Failure: Port Offline", "#fff", "#600", "Due to a hardware failure, the port is offline"],
        red: ["Local Failure", "#fff", "#f00", "A local equipment failure has been reported"],
        yellow: ["Remote Failure", "#000", "#fc0", "A remote equipment failure has been reported"],
        blue: ["Intermediate Equipment Failure", "#fff", "#00c", "A failure has been reported with equipment between your system and the provider"],
        rai: ["Remote Failure",
            "#d00", "", "The remote side of the connection is reporting a failure (RAI)"
        ],
        ais: ["Provider Repeater Failure", "#d00", "", "An upstream repeater is reporting a failure (AIS)"],
        general: ["General Failure", "#f44", "#000", "A general failure has been reported"]
    }, f = ["missing", "red", "yellow", "blue", "rai", "ais", "general", "ok"],
        j = function (c, b, l) {
            a(".alarm", l).remove();
            if (b = e[c || "ok"] || false) {
                c = a('<span class="tdmAlarm alarm alarm-' + c + '"></span>').css({
                    color: b[1],
                    "background-color": b[2] || ""
                }).text(b[0]).attr("title",
                    b[3]);
                l.prepend(c)
            }
        }, g = function (c, b, l) {
            var o = l.bbx_tdm_card_port_id;
            Ape.subscribe("tdm_status");
            a(window).bind("meteor_tdm_status", function (n, q) {
                a.isPlainObject(q.json) && q.json.bbx_tdm_card_port_id == o && j(q.json.alarm, q.json.alarm_state, b)
            });
            j("ok", true, b);
            a.each(f, function (n, q) {
                trueish(l["bbx_tdm_card_port_alarm_" + q]) && j(q, true, b)
            });
            l.bbx_tdm_card_port_status === "missing" && j("missing", true, b);
            c.html(b)
        };
    a.fn.hardwareState = function (c) {
        c = c || {};
        this.each(function () {
            var b = a(this),
                l = a('<span class="staticBody hardwareState"></span>');
            g(b, l, c)
        });
        this.data("hardwareState", c);
        return this
    }
})(jQuery);
(function (a) {
    a.fn.tagOriginalValues = function () {
        this.find(":input").each(function (e, f) {
            var j = a(f),
                g = j.filter(":checkbox[name],:radio[name]");
            j = j.filter("input[name][type!=checkbox], select[name]", f);
            if (g[0]) {
                g.filter(":checked").data("wasChecked", true);
                g.filter(":not(:checked)").data("wasChecked", false)
            }
            j.each(function (c, b) {
                $elm = a(b);
                $elm.data("originalValue", $elm.val())
            })
        });
        return this
    }
})(jQuery);
(function (a) {
    a.fn.sizedText = function () {
        this.filter("input[type=text],input[type=password],input:not([type])").bind("keyup sizedTextboxInit", function () {
            $input = a(this);
            this.value = this.value;
            var e = $input.getCss(["font-family", "font-face", "font-weight", "font-size", "font-style"]),
                f = a("<div></div>");
            e = f.text($input.val() + "W").css(a.extend({}, e, {
                position: "absolute",
                left: "-999em",
                "white-space": "nowrap"
            })).appendTo("body").width();
            $input.css("width", e + "px");
            f.remove()
        }).triggerHandler("sizedTextboxInit");
        return this
    }
})(jQuery);
(function (a) {
    a.fn.gatewayStatus = function () {
        Ape.subscribe(["provider_status"]);
        this.jsonTable({
            url: "/gui/gateway/combined",
            type: "GET",
            rowDataRoot: "combined",
            columnData: [{
                header: "",
                value: function (e) {
                    var f = "";
                    if (e.rowData.bbx_tdm_card_port_type === "ANALOG") f = "hwanalog";
                    else if (e.rowData.bbx_tdm_card_port_type === "DIGITAL") f = "hwdigital";
                    else if (e.rowData.bbx_provider_gateway_id) f = "provider";
                    return a('<img src="/images/typeicons/' + f + '.png" width="20" height="20" />')
                },
                render: "html"
            }, {
                header: "Name",
                value: function (e) {
                    return e.rowData.bbx_provider_gateway_name ||
                        e.rowData.bbx_tdm_card_port_name || ""
                }
            }, {
                header: "Status",
                value: function (e) {
                    e = e.rowData;
                    return e.bbx_provider_gateway_id ? a("<span></span>").gatewayRegState({
                        bbx_provider_gateway_id: e.bbx_provider_gateway_id,
                        bbx_provider_gateway_state: e.bbx_provider_gateway_state
                    }) : a("<div />").hardwareState(e)
                },
                render: "html"
            }]
        });
        return this
    }
})(jQuery);
(function (a) {
    var e = function (f, j, g, c) {
        var b = {}, l = 0,
            o = false,
            n = false;
        c.wallboard ? a(".removeIfWallboard", j).hide() : a(".popGroupActivity", j).bind("click", function (v) {
            v.preventDefault();
            v = a(".groupSelected", j).val();
            var x = a(".filterSelector", j).val();
            windowOpen({
                preset: "fullscreen",
                url: "/ajax-html/wallboard/liveGroupActivity.shtml#" + (v ? "bbx_group_id=" + v : "") + ";filters=" + x
            })
        });
        Ape.subscribe("channel_hangup");
        Ape.subscribe("call_event");
        a(window).bind("debug_dirty_lga", function () {
            o = true
        });
        a(window).bind("meteor_channel_hangup",
            function (v, x) {
                var z = x.json.uuid;
                if (b[z] && a(".uid-" + b[z], j)[0]) {
                    delete b[z];
                    o = true
                }
            });
        a(window).bind("meteor_call_event", function (v, x) {
            var z = x.json;
            b[z.uuid] = z.bbx_user_id
        });
        var q = function (v) {
            v = v || {};
            var x = v.bbx_group_id || a(".groupSelected", j).val();
            v = v.filters || a(".filterSelector", j).val();
            if (x) {
                a(".groupSelected", j).val(x);
                a(".filterSelector", j).val(v);
                v = v.split(",");
                var z = {
                    sortorder: v[0],
                    sortby: "total",
                    rows: v[1],
                    bbx_group_id: x,
                    since: "same day"
                };
                if (l != x) {
                    a.getREST("/gui/group/basic", {
                            bbx_group_id: x
                        },
                        function (C) {
                            a(".groupTitle", j).text("Statistics For: " + C.basic[0].bbx_group_name)
                        });
                    l = x
                }
                a(".filterDisplay").text(" / " + a(".filterSelector :selected", j).text() + " Today");
                if (z.sortorder == "both") {
                    z.sortorder = "desc";
                    var B = a();
                    a.getREST("/gui/group_report/member_status", z, function (C) {
                        B = B.add(u(C, true, true).addClass("highest").addClass("double").addClass("rows" + z.rows));
                        z.sortorder = "asc";
                        a.getREST("/gui/group_report/member_status", z, function (w) {
                            B = B.add(u(w, false, true).addClass("lowest").addClass("double").addClass("rows" +
                                z.rows));
                            a(".lgaTablesWrap", j).html(B)
                        })
                    })
                } else a.getREST("/gui/group_report/member_status", z, function (C) {
                    u(C, true).addClass(z.sortorder == "asc" ? "lowest" : "highest").addClass("single").addClass("rows" + z.rows)
                })
            }
        }, u = function (v, x, z) {
                var B = v.member_status,
                    C = a();
                v = a(".lgaTable", g).clone();
                var w = a("tbody", v);
                a.each(B, function (G, J) {
                    var E = a(".row", g).clone();
                    a.each(J.calls, function () {
                        b[trueish(J.i_am_caller) ? J.uuid : J.other_uuid] = J.bbx_user_id
                    });
                    E.addClass("uid-" + J.bbx_user_id);
                    a(".name", E).text(J.show_name);
                    a(".extensionValue", E).text(format_information(J.bbx_extension_value));
                    a(".outCalls", E).text(J.n_out || "0");
                    a(".outTime", E).text(a.formatInterval(J.total_out_secs || 0, {
                        format: "medium"
                    }));
                    a(".totalCalls", E).text(J.n || "0");
                    a(".totalTime", E).text(a.formatInterval(J.total_secs || 0, {
                        format: "medium"
                    }));
                    C = C.add(E)
                });
                w.empty().append(C);
                if (!z) {
                    z = a(".lgaTablesWrap", j);
                    x ? z.html(v) : z.append(v)
                }
                return v
            };
        c.bbx_group_id && q(c);
        setInterval(function () {
            if (o) {
                o = false;
                if (n) {
                    clearTimeout(n);
                    n = setTimeout(function () {
                            o = true
                        },
                        3E4)
                }
                q()
            }
        }, 5E3);
        a(".groupSelector", j).extensionPicker({
            searchTypes: ["group"],
            hidden: a(".groupSelected", j),
            hiddenFormat: "object_id",
            autoSelectFirst: true,
            textFormat: "label"
        }).bind("selection", function () {
            a(this).blur();
            q()
        }).bind("focus", function () {
            a(this).css({
                position: "static",
                left: ""
            });
            a(".groupSelectorValue", j).hide()
        }).bind("blur", function () {
            a(this).css({
                position: "absolute",
                left: "-999em"
            });
            a(".groupSelectorValue", j).text(a(".groupSelector", j).val() || "(No Group Selected)").show()
        }).triggerHandler("blur");
        a(".groupSelectorValue", j).bind("click", function () {
            a(".groupSelector", j).focus()
        });
        a(".filterSelector", j).bind("blur", function () {
            a(this).css({
                position: "absolute",
                left: "-999em"
            });
            a(".filterSelectorValue", j).text(a(":selected", this).text()).show()
        }).bind("focus", function () {
            a(this).css({
                position: "static",
                left: ""
            });
            a(".filterSelectorValue", j).hide()
        }).triggerHandler("blur");
        a(".filterSelectorValue", j).text(a(".filterSelector :selected", j).text()).bind("click", function () {
            a(".filterSelector", j).focus()
        });
        a(".filterSelector", j).bind("change", function () {
            q()
        })
    };
    a.fn.liveGroupActivity = function (f) {
        var j = this;
        f = f || {};
        a.getTemplate("/ajax-html/liveGroupActivity.html", function (g) {
            var c = a(g);
            g = a(".template", c);
            c = a(".staticBody", c).appendTo(j.empty());
            e(j, c, g, f)
        })
    }
})(jQuery);
(function (a) {
    var e, f = function (b, l) {
            b.html(l);
            a("form", l).ajaxForm({
                beforeSubmit: function () {
                    a(".mustSubmitWarning", b).slideUp()
                },
                complete: function () {
                    b.ipAcl("refresh")
                }
            });
            a(".resetChanges", l).bind("click", function () {
                a(".mustSubmitWarning", b).slideUp();
                b.ipAcl("refresh")
            });
            l.delegate(":input", "change", function () {
                b.ipAcl("requireSubmit")
            });
            b.ipAcl("refresh")
        }, j = function () {
            var b = a(">.staticBody", this);
            a(".mustSubmitWarning", b).slideDown()
        }, g = function (b) {
            b.which === 13 && b.preventDefault()
        }, c = function () {
            var b =
                this,
                l = a("> .staticBody", b);
            a.getREST("/gui/system/ip_acl", {}, function (o) {
                a(".ipAclList", l).empty().sortList({
                    allow: ["add", "remove", "reorder"],
                    addLink: {
                        value: "Add a Rule",
                        position: "last"
                    },
                    data: o.ip_acl,
                    rowData: {
                        value: function (n) {
                            var q = a(".row", e).clone();
                            q.unserializeObject(n);
                            a(".ipv4", q).ipv4Input();
                            a(":input", q).bind("keydown", g);
                            return q
                        },
                        render: "html"
                    },
                    addForm: {
                        position: "last",
                        value: function () {
                            var n = false,
                                q = function () {
                                    n && clearTimeout(n)
                                }, u = a('<div class="addRow"></div>').append(a(".row", e).clone());
                            u.append(a('<a href="#">Cancel</a>').bind("click", function (v) {
                                v.preventDefault();
                                q();
                                u.trigger("addCancel")
                            }));
                            a(".ipv4", u).ipv4Input();
                            a(":input", u).bind("keydown", g);
                            a("input,a", u).bind("blur", function () {
                                n = setTimeout(function () {
                                    u.trigger("add", {
                                        last: true,
                                        data: a(":input", u).serializeObject()
                                    });
                                    b.ipAcl("requireSubmit")
                                }, 200)
                            });
                            a("input,a", u).bind("focus", q);
                            return u
                        },
                        render: "html"
                    },
                    remove: function (n, q) {
                        b.ipAcl("requireSubmit");
                        q.success()
                    },
                    reorder: function () {
                        b.ipAcl("requireSubmit")
                    }
                })
            });
            return this
        };
    a.fn.ipAcl = function (b) {
        var l = this,
            o = {
                refresh: c,
                requireSubmit: j
            };
        if (o[b]) {
            var n = this.data("ipAcl");
            if (typeof n === "undefined") {
                this.data("ipAcl", {});
                n = this.data("ipAcl")
            }
            return o[b].apply(this, [].concat([n], Array.prototype.slice.call(arguments, 1)))
        } else if (b && typeof b !== "object") {
            console_log("Method does not exist in plugin ipAcl");
            return this
        }
        var q = b || {};
        a.getTemplate("/ajax-html/ip_acl.html", function (u) {
            l.each(function () {
                var v = a(this),
                    x = a(u),
                    z = a(".staticBody", x);
                e = e || a(".template", x);
                f(v, z, e, q)
            })
        });
        this.data("ipAcl", q);
        return this
    }
})(jQuery);
(function (a) {
    var e = function (f, j) {
        var g = 1,
            c = f;
        if (f)
            for (var b = 0; b < j.length; b++)
                if (!(f % j[b].multiplier)) {
                    g = j[b].multiplier;
                    c = f / g;
                    break
                }
        return {
            multiplier: g,
            value: c
        }
    };
    a.fn.multipliedInput = function (f) {
        f = f || {};
        f.multipliers = f.multipliers || [{
            text: "Minutes",
            multiplier: "60"
        }, {
            text: "Seconds",
            multiplier: "1"
        }];
        if (this.is("input[name]") && !f.name) {
            f.name = this.attr("name");
            f.value = this.attr("value") || f.value || "";
            f.from_input = true
        } else f.value = f.value || 0;
        var j = a('<span class="multipliedInputWrap"><input type="hidden" class="multipliedInputHidden" /><input type="text" size="3" class="multipliedInputText" />&nbsp;<select class="multipliedInputSelect"></select></span>'),
            g = a(".multipliedInputHidden", j);
        a(".multipliedInputText", j);
        var c = a(".multipliedInputSelect", j);
        f.name ? g.attr("name", f.name) : console_log("jquery.multipliedInput.js: No name specified for the control", f, this);
        for (g = 0; g < f.multipliers.length; g++) c.append(a("<option />").val(f.multipliers[g].multiplier).text(f.multipliers[g].text));
        var b = e(parseInt(f.value || 0, 10), f.multipliers),
            l;
        this.each(function () {
            var o = a(this),
                n = j.clone();
            if (f.from_input) {
                o.replaceWith(n);
                l = l ? l.add(o) : a().add(o)
            } else o.empty().html(n);
            if (f.value || !f.zero_blank) n.find(".multipliedInputSelect").val(b.multiplier);
            a(".multipliedInputText", o).mask("?99999999", {
                placeholder: ""
            });
            if (!f.value && f.zero_blank) {
                o.find(".multipliedInputText").val("");
                o.find(".multipliedInputHidden").val("")
            } else {
                o.find(".multipliedInputText").val(b.value);
                o.find(".multipliedInputHidden").val(f.value)
            }
        });
        a(".multipliedInputText, .multipliedInputSelect", this).bind("change", function () {
            var o = a(this).closest(".multipliedInputWrap"),
                n = o.find(".multipliedInputText"),
                q = o.find(".multipliedInputHidden");
            o = o.find(".multipliedInputSelect");
            f.zero_blank && !n.val() ? q.val("") : q.val(parseInt(n.val(), 10) * parseInt(o.val(), 10));
            q.trigger("change")
        });
        return l || this
    }
})(jQuery);
(function (a) {
    var e = function (f) {
        f.preventDefault()
    };
    a.widget("cui2.userPhones", a.extend(true, {}, CUI.liveTableBase, {
        options: {
            bbx_user_id: false,
            live_table: "bbx_phone"
        },
        _create: function () {
            var f = this,
                j = this.element;
            if (f.options.bbx_user_id) {
                a.extend(true, f.options.user_info, {
                    search: {
                        bbx_user_id: "^" + f.options.bbx_user_id + "$"
                    }
                });
                f._live_table_base_create();
                var g = a('<div class="phoneItems"><div class="newPhoneItem"><a href="javascript:void(0)"><span class="phoneImageWrap"><img class="phoneImage" src="/images/icons/phone_new.png" /></span><span class="phoneItemCaption">Add a Phone</span></span></a></div></div>');
                g.delegate(".editPhoneItem", "click", function (c) {
                    f._phoneItem_click(c, this)
                }).delegate(".newPhoneItem", "click", function () {
                    showPopup("phone_add", {
                        bbx_user_id: f.options.bbx_user_id
                    })
                });
                j.empty().append(g)
            } else console_log("jquery.userPhones.js: No bbx_user_id parameter set.")
        },
        _process_row_data: function (f, j) {
            var g = this.options.processed_data[j];
            return g && g.bbx_phone_id === f.bbx_phone_id ? a.extend({}, this.options.processed_data[j], f) : f
        },
        _insert_row: function (f, j) {
            var g = this.element,
                c = this._create_$row(f);
            f._$row = c;
            if (j < this.options.processed_data.length - 2) g.find(".phoneItems > .phoneItem").eq(j).before(c);
            else j ? g.find("> .phoneItems").append(c) : g.find(".newPhoneItem").after(c)
        },
        _update_row: function (f, j) {
            var g = this._create_$row(j);
            j._$row.replaceWith(g);
            j._$row = g
        },
        _before_delete_row: function (f) {
            f._$row.remove()
        },
        _clear: function () {
            for (var f = this.options.processed_data.length; f--;) this.options.processed_data[f]._$row.remove();
            this.options.processed_data = []
        },
        _create_$row: function (f) {
            var j = a('<div class="phoneItem editPhoneItem"><a href="javascript:void(0)"><span class="phoneImageWrap"><img class="phoneImage" src="/images/icons/phone_generic.png" /></span><span class="phoneItemCaption" /></span></a></div>');
            j.data("bbx_phone_id", f.bbx_phone_id);
            j.find(".phoneItemCaption").text(f.bbx_phone_desc || "(Unknown Phone)");
            j.find("> a").bind("click", e);
            switch (f.phone_state) {
            case "UNREG":
                var g = a('<img class="phoneStatus phoneStatusNE" src="/images/icons/phone_notfound.png" alt="Offline" />');
                j.find("> a > .phoneImageWrap").append(g);
                break;
            case "INUSE":
                g = a('<img class="phoneStatus phoneStatusNW" src="/images/icons/phone_inuse.png" alt="In Use" />');
                j.find("> a > .phoneImageWrap").append(g)
            }
            f.bbx_phone_mac === null &&
                j.find("> a > .phoneImageWrap").append('<img class="phoneStatus phoneStatusSE" src="/images/icons/phone_genericsip.png" alt="Generic SIP device" />');
            return j
        },
        _phoneItem_click: function (f, j) {
            var g = this,
                c = this.element,
                b = a(j).data("bbx_phone_id");
            showOverlay("phone_edit", {
                bbx_phone_id: b
            }).one("close_request", function () {
                a.postREST("/gui/phone/reboot", {
                    bbx_phone_id: b,
                    if_scheduled: 1
                });
                g.destroy();
                c.trigger("refreshUsers")
            })
        }
    }))
})(jQuery);
(function (a) {
    var e, f;
    a.getTemplate("/ajax-html/settings/sites_templates.html", function (j) {
        e = a(j)
    });
    a.fn.sitesTable = function (j) {
        var g = this;
        a.getJSONCached("/gui/ha_ip/ha_ip", {}, 1E4, function (c) {
            f = [c.ha_ip.definitive_system_ip, c.ha_ip.definitive_external_ip]
        });
        if (!e) {
            setTimeout(function () {
                g.sitesTable(j)
            }, 100);
            return g
        }
        a.getREST("/gui/site/site", {}, function (c) {
            g.sortList({
                data: c.site,
                allow: ["add", "remove"],
                rowData: {
                    render: "html",
                    value: function (b) {
                        var l = a(".sitesRow", e).clone(),
                            o = "unknown";
                        a.each(["bbx_provider_gateway_id",
                            "bbx_tdm_card_port_id", "bbx_acl_id", "bbx_phone_registration_id"
                        ], function (z, B) {
                            if (b[B]) {
                                o = B;
                                return false
                            }
                        });
                        a(".siteName > .name", l).text(b.bbx_site_name);
                        a(".siteName > .opRename", l).bind("click", function (z) {
                            z.preventDefault();
                            if (!a(".siteNameEdit", l)[0]) {
                                var B = a(".siteNameEdit", e).clone();
                                a("input[name=bbx_site_id]", B).val(b.bbx_site_id);
                                a("input[name=bbx_site_name]", B).val(a(".siteName > .name", l).text());
                                B.insertAfter(a(".siteName > .name", l).hide());
                                B.data("accept", "application/json");
   var g = this._create_$row(j);
            j._$row.replaceWith(g);
            j._$row = g
        },
        _before_delete_row: function (f) {
            f._$row.remove()
        },
        _clear: function () {
            for (var f = this.options.processed_data.length; f--;) this.options.processed_data[f]._$row.remove();
            this.options.processed_data = []
        },
        _create_$row: function (f) {
            var j = a('<div class="phoneItem editPhoneItem"><a href="javascript:void(0)"><span class="phoneImageWrap"><img class="phoneImage" src="/images/icons/phone_generic.png" /></span><span class="phoneItemCaption" /></span></a></div>');
            j.data("bbx_phone_id", f.bbx_phone_id);
            j.find(".phoneItemCaption").text(f.bbx_phone_desc || "(Unknown Phone)");
            j.find("> a").bind("click", e);
            switch (f.phone_state) {
            case "UNREG":
                var g = a('<img class="phoneStatus phoneStatusNE" src="/images/icons/phone_notfound.png" alt="Offline" />');
                j.find("> a > .phoneImageWrap").append(g);
                break;
            case "INUSE":
                g = a('<img class="phoneStatus phoneStatusNW" src="/images/icons/phone_inuse.png" alt="In Use" />');
                j.find("> a > .phoneImageWrap").append(g)
            }
            f.bbx_phone_mac === null &&
                j.find("> a > .phoneImageWrap").append('<img class="phoneStatus phoneStatusSE" src="/images/icons/phone_genericsip.png" alt="Generic SIP device" />');
            return j
        },
        _phoneItem_click: function (f, j) {
            var g = this,
                c = this.element,
                b = a(j).data("bbx_phone_id");
            showOverlay("phone_edit", {
                bbx_phone_id: b
            }).one("close_request", function () {
                a.postREST("/gui/phone/reboot", {
                    bbx_phone_id: b,
                    if_scheduled: 1
                });
                g.destroy();
                c.trigger("refreshUsers")
            })
        }
    }))
})(jQuery);
(function (a) {
    var e, f;
    a.getTemplate("/ajax-html/settings/sites_templates.html", function (j) {
        e = a(j)
    });
    a.fn.sitesTable = function (j) {
        var g = this;
        a.getJSONCached("/gui/ha_ip/ha_ip", {}, 1E4, function (c) {
            f = [c.ha_ip.definitive_system_ip, c.ha_ip.definitive_external_ip]
        });
        if (!e) {
            setTimeout(function () {
                g.sitesTable(j)
            }, 100);
            return g
        }
        a.getREST("/gui/site/site", {}, function (c) {
            g.sortList({
                data: c.site,
                allow: ["add", "remove"],
                rowData: {
                    render: "html",
                    value: function (b) {
                        var l = a(".sitesRow", e).clone(),
                            o = "unknown";
                        a.each(["bbx_provider_gateway_id",
                            "bbx_tdm_card_port_id", "bbx_acl_id", "bbx_phone_registration_id"
                        ], function (z, B) {
                            if (b[B]) {
                                o = B;
                                return false
                            }
                        });
                        a(".siteName > .name", l).text(b.bbx_site_name);
                        a(".siteName > .opRename", l).bind("click", function (z) {
                            z.preventDefault();
                            if (!a(".siteNameEdit", l)[0]) {
                                var B = a(".siteNameEdit", e).clone();
                                a("input[name=bbx_site_id]", B).val(b.bbx_site_id);
                                a("input[name=bbx_site_name]", B).val(a(".siteName > .name", l).text());
                                B.insertAfter(a(".siteName > .name", l).hide());
                                B.data("accept", "application/json");
                                B.bind("jsAutoSubmitSuccess",
                                    function () {
                                        a(".siteName > .name", l).text(a("input[name=bbx_site_name]", B).val())
                                    }).bind("jsAutoSubmitComplete", function () {
                                    B.remove();
                                    a(".siteName > .name", l).show()
                                })
                            }
                        });
                        var n = {
                            bbx_acl_id: "IP Addresses",
                            bbx_tdm_card_port_id: "Provider/Port",
                            bbx_provider_gateway_id: "Provider/Port",
                            bbx_phone_registration_id: "Inbound Authorization",
                            unknown: "Invalid Site"
                        };
                        a(".siteSourceType", l).text(n[o] || n.unknown);
                        var q;
                        if (b.bbx_acl_id) {
                            q = a('<div><div class="authForm"></div><div class="list"></div></div>');
                            n = a(".siteACLAuthForm",
                                e).clone().appendTo(a(".authForm", q));
                            n.unserializeObject(b);
                            n.checks();
                            a(".list", q).sortList({
                                data: b.bbx_acl_ips,
                                allow: ["add", "remove"],
                                rowData: {
                                    value: function (z) {
                                        return z.bbx_acl_ip_ip + " / " + z.bbx_acl_ip_mask
                                    },
                                    render: "text"
                                },
                                addLink: {
                                    value: "Add a range",
                                    position: "last"
                                },
                                addForm: {
                                    value: function () {
                                        var z = e.find(".newAclRow").clone();
                                        a(".ipv4", z).ipv4Input();
                                        z.ajaxForm({
                                            data: {
                                                bbx_acl_id: b.bbx_acl_id
                                            },
                                            accept: "application/json",
                                            dataType: "json",
                                            success: function (B) {
                                                z.trigger("add", {
                                                    data: B.ip,
                                                    last: true
                                                })
                                            },
                                            error: function (B) {
                                                var C = false;
                                                try {
                                                    var w = JSON.parse(B.responseText);
                                                    w.error && a.each(w.error, function (J, E) {
                                                        var M = a("[name=" + J + "]", z);
                                                        if (M[0]) {
                                                            C = true;
                                                            if (E === "INVALID") E = "Not a valid value";
                                                            if (M.eq(0).is(":hidden") && M.eq(0).closest(".IPv4Input")[0]) M = M.eq(0).closest(".IPv4Input");
                                                            M.qtipMessage({
                                                                style: "failure",
                                    z.qtipMessage({
                                        style: "success",
                                        message: "Setting applied"
                                    })
                                })
                            })
                        } else if (b.bbx_phone_registration_id) {
                            q = a(".registrationDetail", e).clone();
                            var u = 1E3,
                                v = function (z) {
                                    if (--u)
                                        if (f) {
                                            a(".localIP", z).val(f[0]);
                                            a(".externalIP", z).val(f[1])
                                        } else setTimeout(function () {
                                                v(z)
                                            },
                                            150)
                                };
                            v(q);
                            a(".username", q).val(b.bbx_registration_username);
                            a(".pass", q).val(b.bbx_registration_password)
                        }
                        a(".siteSource", l).html(q);
                        q = a('<form class="jsAutoSubmit" action="/gui/site/site" method="PUT"></form>');
                        q.data("extraFormData", {
                            bbx_site_id: b.bbx_site_id
                        });
                        var x = a('<select name="bbx_site_timezone"></select>').appendTo(q);
                        x.hide();
                        a.getJSONCached("/gui/system/timezones", {}, 6E4, function (z) {
                            x.append(a('<option value=""></option>').text("Default (" + z.timezone_lookup[z.timezone] + ")"));
                            a.each(z.timezones,
                                function (B, C) {
                                    var w = a("<option />").val(C.value).text(C.name);
                                    b.bbx_site_timezone === C.value && w.attr("selected", "selected");
                                    w.appendTo(x)
                                });
                            x.show()
                        });
                        a(".siteTimeZone", l).html(q);
                        return l
                    }
                },
                addForm: {
                    value: function () {
                        var b = a(".newSiteRow", e).clone();
                        a(".siteType", b).bind("change", function () {
                            var l = a(this),
                                o = a(".newSiteSource-" + l.val(), e).clone().appendTo(a(".newSiteSourceSettings", b).empty());
                            a(".newSiteSourceSettings", b).empty().html(o);
                            switch (l.val()) {
                            case "gateway":
                                a(".gatewaySelect", o).selectFrom({
                                    url: "/gui/gateway/combined",
                                    classes: "gatewayOrPortSelect",
                                    rowDataRoot: "combined",
                                    rowData: {
                                        value: function (n) {
                                            if (n.rowData.bbx_provider_gateway_id) return "bbx_provider_gateway_id:" + n.rowData.bbx_provider_gateway_id;
                                            else if (n.rowData.bbx_tdm_card_port_id) return "bbx_tdm_card_port_id:" + n.rowData.bbx_tdm_card_port_id
                                        },
                                        text: function (n) {
                                            if (n.rowData.bbx_provider_gateway_id) return n.rowData.bbx_provider_gateway_name;
                                            else if (n.rowData.bbx_tdm_card_port_type === "ANALOG") return "Analog port " + n.rowData.bbx_tdm_card_port_number;
                                            else if (n.rowData.bbx_tdm_card_port_type ===
                                                "DIGITAL") return "Digital port " + n.rowData.bbx_tdm_card_port_number
                                        }
                                    },
                                    complete: function () {
                                        a(this).bind("change", function () {
                                            var n = a(this).val().split(":");
                                            a("input[type=hidden]", o).remove();
                                            a('<input type="hidden" />').attr("name", n[0]).val(n[1] || "").insertAfter(a(".gatewaySelect", o))
                                        }).triggerHandler("change")
                                    }
                                })
                            }
                        }).trigger("change");
                        b.ajaxForm({
                            data: {},
                            accept: "application/json",
                            dataType: "json",
                            beforeSubmit: function () {
                                var l = a("[name=bbx_site_name]", b);
                                if (!l.val()) {
                                    l.qtipMessage({
                                        style: "failure",
                                        message: "No name was specified"
                                    });
                                    return false
                                }
                            },
                            success: function (l) {
                                b.trigger("add", {
                                    data: l.site,
                                    last: true
                                })
                            },
                            afterError: function () {
                                b.trigger("addCancel")
                            }
                        });
                        a(".opSubmit", b).bind("click", function (l) {
                            b.trigger("submit");
                            l.preventDefault()
                        });
                        return b
                    },
                    position: "last"
                },
                addLink: {
                    value: a('<a class="ops" href="#">Add a Site</a>'),
                    render: "html",
                    position: "last"
                },
                remove: function (b, l) {
                    a.deleteREST("/gui/site/site", {
                        bbx_site_id: l.row.bbx_site_id
                    }, function () {
                        l.success()
                    })
                }
            })
        });
        return this
    }
})(jQuery);
(function (a) {
    var e = {
        options: {
            list: "/gui/fax/inbound",
            root: "inbound",
            prefix: "bbx_fax_inbound",
            number: "bbx_fax_inbound_fax_from",
            number_header: "From",
            unit: "page/pages"
        },
        _create: function () {
            var f = this,
                j = this.element;
            f.options.widget_id = getUnique("faxList");
            var g = f.options.prefix === "bbx_fax_inbound" ? "bbx_fax_inbound_timestamp_completed" : "bbx_fax_outbound_timestamp_last_attempt",
                c = [{
                    header: f.options.number_header || "Number",
                    sortby: f.options.number,
                    value: function (b) {
                        return format_information(b.rowData[f.options.number])
                    },
                    render: "text"
                }, {
                    header: "Length",
                    sortby: f.options.prefix + "_pages_total",
                    value: function (b) {
                        b = b.rowData[f.options.prefix + "_pages_total"];
                        var l = f.options.unit.split(/\//);
                        b += " " + l[b == 1 ? 0 : 1];
                        return b
                    }
                }, {
                    header: "Time",
                    "class": "sentTime",
                    sortby: g,
                    value: function (b) {
                        if (f.options.prefix === "bbx_fax_inbound") return f._parseSentTime(b.rowData.bbx_fax_inbound_timestamp_completed);
                        else {
                            var l = f._parseSentTime(b.rowData.bbx_fax_outbound_timestamp_last_attempt);
                            if (b.rowData.bbx_fax_outbound_timestamp_last_attempt) {
                                if (trueish(b.rowData.bbx_fax_outbound_error_string) && !b.rowData.bbx_fax_outbound_success) l = "<i>" + l + " (failed)</i>"
                            } else l = "<i>(Not sent yet)</i>";
                            return l
                        }
                    },
                    render: "html"
                }];
            f.options.prefix === "bbx_fax_outbound" && c.push({
                header: "Status",
                value: function (b) {
                    b = b.rowData;
                    var l = a('<div class="status"></div>');
                    if (trueish(b.bbx_fax_outbound_success)) l.text("Success");
                    else if (b.bbx_fax_outbound_error_string == "SEND") l.text("Sending");
                    else trueish(b.bbx_fax_outbound_error_string) ? l.text("Failed: " + b.bbx_fax_outbound_error_string) : l.text("Queued");
                    return l
                },
                render: "html"
            });
            c = c.concat([{
                header: "Actions",
                "class": "actionsColumn",
                value: function (b) {
                    var l = b.rowData,
                        o = b.$row;
                    b = a('<div class="ops"><a href="#" class="opView faxPreview">View</a> | <a href="#" target="_blank" class="opDownload">Download</a> | <a href="#" class="opForward">Forward</a> | <span class="ifMarkRead"><a href="#" class="opMark">Mark</a> | </span><a href="#" class="opDelete">Delete</a><div style="display: none" class="faxPictureHolder"></div></div>');
                    var n = l[f.options.prefix + "_pages_total"];
                    if (n) {
                        if (n >
                            1)
                            for (var q = a(".faxPictureHolder", b), u = 2; u <= n; u++) {
                                var v = "/gui/fax/file?sessionid=" + getSessionID() + "&" + f.options.prefix + "_id=" + l[f.options.prefix + "_id"] + "&page=" + u + "&format=png";
                                q.append(a('<a rel="faximg' + l[f.options.prefix + "_id"] + '" class="faxPreview thickbox"></a>').attr("href", v))
                            }
                        a(".opView", b).attr("href", "/gui/fax/file?sessionid=" + getSessionID() + "&" + f.options.prefix + "_id=" + l[f.options.prefix + "_id"] + "&page=1&format=png").attr("rel", "faximg" + l[f.options.prefix + "_id"]);
                        a("a.faxPreview", b).picbox({
                                margins: 60
                            },
                            null, function (x) {
                                return this == x || this.rel == x.rel
                            });
                        a(".opView", b).one("click", function () {
                            f._setReadState(o, true)
                        });
                        a(".opDownload", b).attr("href", "/gui/fax/file?sessionid=" + getSessionID() + "&" + f.options.prefix + "_id=" + l[f.options.prefix + "_id"] + "&format=pdf").one("click", function () {
                            f._setReadState(o, true)
                        })
                    } else a(".opView, .opDownload", b).each(function (x, z) {
                        $el = a(z);
                        $el.replaceWith(a("<span />").text($el.te                      var l = f.options.unit.split(/\//);
                        b += " " + l[b == 1 ? 0 : 1];
                        return b
                    }
                }, {
                    header: "Time",
                    "class": "sentTime",
                    sortby: g,
                    value: function (b) {
                        if (f.options.prefix === "bbx_fax_inbound") return f._parseSentTime(b.rowData.bbx_fax_inbound_timestamp_completed);
                        else {
                            var l = f._parseSentTime(b.rowData.bbx_fax_outbound_timestamp_last_attempt);
                            if (b.rowData.bbx_fax_outbound_timestamp_last_attempt) {
                                if (trueish(b.rowData.bbx_fax_outbound_error_string) && !b.rowData.bbx_fax_outbound_success) l = "<i>" + l + " (failed)</i>"
                            } else l = "<i>(Not sent yet)</i>";
                            return l
                        }
                    },
                    render: "html"
                }];
            f.options.prefix === "bbx_fax_outbound" && c.push({
                header: "Status",
                value: function (b) {
                    b = b.rowData;
                    var l = a('<div class="status"></div>');
                    if (trueish(b.bbx_fax_outbound_success)) l.text("Success");
                    else if (b.bbx_fax_outbound_error_string == "SEND") l.text("Sending");
                    else trueish(b.bbx_fax_outbound_error_string) ? l.text("Failed: " + b.bbx_fax_outbound_error_string) : l.text("Queued");
                    return l
                },
                render: "html"
            });
            c = c.concat([{
                header: "Actions",
                "class": "actionsColumn",
                value: function (b) {
                    var l = b.rowData,
                        o = b.$row;
                    b = a('<div class="ops"><a href="#" class="opView faxPreview">View</a> | <a href="#" target="_blank" class="opDownload">Download</a> | <a href="#" class="opForward">Forward</a> | <span class="ifMarkRead"><a href="#" class="opMark">Mark</a> | </span><a href="#" class="opDelete">Delete</a><div style="display: none" class="faxPictureHolder"></div></div>');
                    var n = l[f.options.prefix + "_pages_total"];
                    if (n) {
                        if (n >
                            1)
                            for (var q = a(".faxPictureHolder", b), u = 2; u <= n; u++) {
                                var v = "/gui/fax/file?sessionid=" + getSessionID() + "&" + f.options.prefix + "_id=" + l[f.options.prefix + "_id"] + "&page=" + u + "&format=png";
                                q.append(a('<a rel="faximg' + l[f.options.prefix + "_id"] + '" class="faxPreview thickbox"></a>').attr("href", v))
                            }
                        a(".opView", b).attr("href", "/gui/fax/file?sessionid=" + getSessionID() + "&" + f.options.prefix + "_id=" + l[f.options.prefix + "_id"] + "&page=1&format=png").attr("rel", "faximg" + l[f.options.prefix + "_id"]);
                        a("a.faxPreview", b).picbox({
                                margins: 60
                            },
                            null, function (x) {
                                return this == x || this.rel == x.rel
                            });
                        a(".opView", b).one("click", function () {
                            f._setReadState(o, true)
                        });
                        a(".opDownload", b).attr("href", "/gui/fax/file?sessionid=" + getSessionID() + "&" + f.options.prefix + "_id=" + l[f.options.prefix + "_id"] + "&format=pdf").one("click", function () {
                            f._setReadState(o, true)
                        })
                    } else a(".opView, .opDownload", b).each(function (x, z) {
                        $el = a(z);
                        $el.replaceWith(a("<span />").text($el.text()).addClass($el.attr("class") + " disabled"))
                    });
                    a(".opForward", b).bind("click", function (x) {
                        x.preventDefault();
                        x = {};
                        x[f.options.prefix + "_id"] = l[f.options.prefix + "_id"];
                        showPopup("forward", x)
                    });
                    f.options.allow_mark_read ? a(".opMark", b).bind("click", function (x) {
                        x.preventDefault();
                        f._flipReadState(o, l)
                    }) : a(".ifMarkRead", b).remove();
                    a(".opDelete", b).bind("click", function (x) {
                        x.preventDefault();
                        showBlanker({
                            title: "Delete this fax?",
                            text: "Are you sure you want to remove this fax? This operation cannot be undone.",
                            buttons: ["Delete", "Cancel"],
                            callbacks: [
                                function () {
                                    var z = {};
                                    z[f.options.prefix + "_id"] = l[f.options.prefix +
                                        "_id"];
                                    a.deleteREST("/gui/fax/fax", z, function () {
                                        j.jsonTable("refresh")
                                    });
                                    blankerCancel.call(this)
                                },
                                blankerCancel
                            ]
                        })
                    });
                    f._updateReadState(b, !! l[f.options.prefix + "_read_time"]);
                    return b
                },
                render: "html"
            }]);
            j.jsonTable("destroy").jsonTable({
                url: f.options.list,
                type: "GET",
                rowDataRoot: f.options.root,
                sortby: g,
                sortorder: "desc",
                columnData: c
            });
            Ape.subscribe("user_" + validUsername);
            a(window).bind("meteor_user_" + validUsername + "." + f.options.widget_id, function (b, l) {
                var o = l.json;
                if (o.fax_action)
                    if (!(o.direction ===
                        "inbound" && f.options.prefix === "bbx_fax_inbound"))
                        if (o.direction === "outbound" && f.options.prefix === "bbx_fax_outbound") switch (o.fax_action) {
                        case "create":
                            f._handle_fax_create(o);
                            break;
                        case "delete":
                            f._handle_fax_delete(o);
                            break;
                        case "update":
                            f._handle_fax_update(o)
                        } else console_log("jquery.faxList.js: Recieved a fax event without a proper direction:", o, " -- ", j)
            })
        },
        _handle_fax_update: function () {},
        _handle_fax_delete: function () {
            this.element.jsonTable("refresh")
        },
        _handle_fax_create: function () {
            this.element.jsonTable("refresh")
        },
        _parseSentTime: function (f) {
            if (f) {
                f = f.split(/[- :]/);
                return (new Date(f[0], f[1] - 1, f[2], f[3], f[4], f[5])).toLocaleString()
            } else return ""
        },
        _updateReadState: function (f, j) {
            if (this.options.allow_mark_read) {
                if (j) {
                    a(".opMark", f).text("Mark Unread");
                    f.removeClass("unread")
                } else {
                    a(".opMark", f).text("Mark Read");
                    f.addClass("read")
                }
                f.data("readState", j)
            }
        },
        _setReadState: function (f, j) {
            var g = this;
            if (g.options.allow_mark_read) {
                var c = {};
                c[g.options.prefix + "_id"] = f.data("row")[g.options.prefix + "_id"];
                c[g.options.prefix +
                    "_read_time"] = j ? 1 : 0;
                a.putREST("/gui/fax/fax", c, function (b) {
                    g._updateReadState(f, !! b.fax[g.options.prefix + "_read_time"])
                });
                g._updateReadState(f, j)
            }
        },
        _flipReadState: function (f) {
            if (this.options.allow_mark_read) {
                var j = !(f.data("readState") || false);
                this._setReadState(f, j)
            }
        },
        _destroy: function () {
            a("window").unbind("meteor_user_" + validUsername + "." + self.options.widget_id)
        }
    };
    a.widget("cuiv2.faxInList", a.extend(true, {}, e, {
        options: {
            list: "/gui/fax/inbound",
            root: "inbound",
            prefix: "bbx_fax_inbound",
            number: "bbx_fax_inbound_fax_from",
            number_header: "From",
            allow_mark_read: true
        },
        _handle_fax_update: function (f) {
            var j = a(">.jsDataTable > tbody > tr", $self).filter(function () {
                return a(this).data("row").bbx_fax_inbound_id == f.bbx_fax_inbound_id
            }),
                g = j.find(".status");
            j = j.find(".sentTime");
            if (f.bbx_fax_inbound_success) {
                g.text("Success");
                j.text(self._parseSentTime(f[self.options.prefix + "_timestamp_completed"]))
            } else f.bbx_fax_inbound_error_string ? g.text("Failed: " + f.bbx_fax_inbound_error_string) : g.text("In Progress")
        }
    }));
    a.widget("cuiv2.faxOutList",
        a.extend(true, {}, e, {
            options: {
                list: "/gui/fax/outbound",
                root: "outbound",
                prefix: "bbx_fax_outbound",
                number: "bbx_fax_outbound_fax_to",
                number_header: "To",
                allow_mark_read: false
            },
            _handle_fax_update: function (f) {
                var j = a(">.jsDataTable > tbody > tr", $self).filter(function () {
                    return a(this).data("row").bbx_fax_outbound_id == f.bbx_fax_outbound_id
                }),
                    g = j.find(".status");
                j = j.find(".sentTime");
                if (f.bbx_fax_outbound_success) {
                    g.text("Success");
                    j.text(self._parseSentTime(f[self.options.prefix + "_timestamp_completed"]))
                } else f.bbx_fax_outbound_error_string ?
                    g.text("Failed: " + f.bbx_fax_outbound_error_string) : g.text("Queued")
            }
        }))
})(jQuery);
(function (a) {
    a.widget("cuiv2.faxSendForm", {
        options: {
            template: "/ajax-html/fax_send_form.html"
        },
        _create: function () {
            var e = this;
            a.getTemplate(e.options.template, function (f) {
                e.options.$staticBody = a(f);
                e._afterTemplateLoad()
            })
        },
        _afterTemplateLoad: function () {
            var e = this.element,
                f = this.options.$staticBody;
            a(".txtFromFaxNumber", f).mask("?9999999999999999999999999999999999999999", {
                placeholder: ""
            });
            a(".txtToFaxNumber", f).mask("?9999999999999999999999999999999999999999", {
                placeholder: ""
            });
            a(".sendAnotherLink",
                f).attr("href", a(".sendAnotherLink", f).attr("href") + getUnique(";refresh="));
            a(".txtFaxFile", f).bind("change", function () {
                a(this).val() ? a("button[type=submit]", f).enable("no_file") : a("button[type=submit]", f).disable("no_file")
            }).triggerHandler("change");
            f.ajaxForm({
                iframe:         a(this),
                        v = a(q),
                        x = a(".staticBody", v);
                    e = e || a(".template", v);
                    f(u, x, e, n, l)
                })
            };
        a.getTemplate("/ajax-html/valetParking.html", function (n) {
            l.data ? o(l.data, n) : a.getREST("/gui/extension/valet_parking", {
                bbx_valet_parking_id: l.bbx_valet_parking_id
            }, function (q) {
                o(q, n)
            })
        });
        this.data("valetParking", l);
        return this
    }
})(jQuery);
(function (a) {
    var e, f = function (j, g) {
            a(".parkingMohPicker", g).mohPicker({
                name: "bbx_moh_id"
            });
            a(".parkingExtensionValidator", g).extensionValidator({
                allow: ["block"],
                alwaysLocked: true,
                extraValidation: function (c) {
                    return Math.abs(c.end - c.begin) > 4 ? true : "Parking blocks must have at least 5 extensions"
                }
            }).bind("valid", function () {
                a(".submit", g).enable("badext")
            }).bind("invalid", function () {
                a(".submit", g).disable("badext")
            });
            a(".parkingHoldTime", g).multipliedInput({
                name: "bbx_valet_parking_timeout",
                zero_blank: true
            });
            a(".parkingOrbitExten", g).extensionPicker({
                searchTypes: ["all"],
                directory: true,
                hidden: false,
                textFormat: "number",
                emptyTriggersSelection: true
            });
            g.ajaxForm({
                accept: "application/json",
                beforeSubmit: function () {
                    a(".submit", g).disable("inprogress")
                },
                complete: function () {
                    a(".submit", g).enable("inprogress")
                },
                success: function () {
                    g.trigger("close_request", {
                        refresh: true
                    })
                }
            });
            j.html(g);
            j.data("widgetReady", true);
            j.one("widgetReady", function (c) {
                c.stopPropagation()
            }).trigger("widgetReady")
        };
    a.fn.valetParkingCreate =
        function (j) {
            var g = this,
                c = {};
            if (c[j]) {
                var b = this.data("valetParkingCreate");
                if (typeof b === "undefined") {
                    this.data("valetParkingCreate", {});
                    b = this.data("valetParkingCreate")
                }
                return c[j].apply(this, [].concat([b], Array.prototype.slice.call(arguments, 1)))
            } else if (j && typeof j !== "object") return this;
            var l = j || {}, o = function (n) {
                    g.each(function () {
                        var q = a(this),
                            u = a(n),
                            v = a(".staticBody", u);
                        e = e || a(".template", u);
                        f(q, v, e, l)
                    })
                };
            a.getTemplate("/ajax-html/valetParkingCreate.html", function (n) {
                o(n)
            });
            this.data("valetParkingCreate",
                l);
            return this
    }
})(jQuery);
(function (a) {
    var e = function (f, j) {
        var g = j.closest("tr"),
            c = g.find("a.opMarkRead")[0] ? g : j;
        if (f) {
            c.find("a.opMarkRead").hide().siblings("a.opMarkUnread").show();
            g.addClass("read").removeClass("unread")
        } else {
            c.find("a.opMarkUnread").hide().siblings("a.opMarkRead").show();
            g.addClass("unread").removeClass("read")
        }
    };
    a.fn.voicemailList = function () {
        var f = this;
        f.jsonTable("destroy").jsonTable({
            url: "/gui/voicemail/list",
            type: "GET",
            rowDataRoot: "voicemail",
            paginator: true,
            paginatorToTop: true,
            rows: 30,
            page: 1,
            sortby: "created_epoch",
            sortorder: "desc",
            columnData: [{
                header: "Caller Name",
                value: "cid_name",
                render: "text"
            }, {
                header: "Caller Number",
                value: function (g) {
                    return format_information(g.rowData.cid_number)
                },
                render: "text"
            }, {
                header: "Time",
                value: function (g) {
                    return format_age(unixTime((new Date).getTime()) - g.rowData.created_epoch)
                },
                render: "text"
            }, {
                header: "Listen",
                value: function (g) {
                    var c = a('<div class="voicemailPlayerWrap"></div>');
                    c.css("min-width", "200px");
                    var b = g.rowData;
                    c.soundWidget("/gui/voicemail/file?sessionid=" + getSessionID() +
                        "&voicemail_msgs_id=" + b.voicemail_msgs_id);
                    c.bind("soundWidgetPlay", function () {
                        a.putREST("/gui/voicemail/voicemail", {
                            voicemail_msgs_id: b.voicemail_msgs_id,
                            read_epoch: 1
                        }, function (l) {
                            e(trueish(l.voicemail.read_epoch), c)
                        })
                    });
                    return c
                },
                render: "html"
            }, {
                header: "Actions",
                value: function (g) {
                    var c = a('<div><span class="voicemailMark"><a href="#" class="opMarkRead">Mark Read</a><a href="#" class="opMarkUnread">Mark Unread</a></span> | <a class="opForward" href="#">Forward</a> | <a class="opDelete" href="#">Delete</a></div>'),
                        b = g.$row,
                        l = g.rowData;
                    l.read_epoch ? b.addClass("read") : b.addClass("unread");
                    b = c.find(".voicemailMark");
                    b.find("a").hide().bind("click", function (o) {
                        o.preventDefault()
                    });
                    b.find("a.opMarkRead").bind("click", function () {
                        a(this).hide().siblings("a").show();
                        a.putREST("/gui/voicemail/voicemail", {
                            voicemail_msgs_id: l.voicemail_msgs_id,
                            read_epoch: 1
                        }, function (o) {
                            e(trueish(o.voicemail.read_epoch), c)
                        })
                    });
                    b.find("a.opMarkUnread").bind("click", function () {
                        a(this).hide().siblings("a").show();
                        a.putREST("/gui/voicemail/voicemail", {
                            voicemail_msgs_id: l.voicemail_msgs_id,
                            read_epoch: ""
                        }, function (o) {
                            e(trueish(o.voicemail.read_epoch), c)
                        })
                    });
                    e(g.rowData.read_epoch, c);
                    c.find("a.opForward").bind("click", function (o) {
                        o.preventDefault();
                        showPopup("forward", {
                            voicemail_msgs_id: g.rowData.voicemail_msgs_id
                        })
                    });
                    c.find("a.opDelete").bind("click", function (o) {
                        o.preventDefault();
                        jConfirm("This action will delete the voicemail from the system. This action cannot be undone.", "Delete This Voicemail?", function (n) {
                            n &).jsonTable({
            url: "/gui/voicemail/list",
            type: "GET",
            rowDataRoot: "voicemail",
            paginator: true,
            paginatorToTop: true,
            rows: 30,
            page: 1,
            sortby: "created_epoch",
            sortorder: "desc",
            columnData: [{
                header: "Caller Name",
                value: "cid_name",
                render: "text"
            }, {
                header: "Caller Number",
                value: function (g) {
                    return format_information(g.rowData.cid_number)
                },
                render: "text"
            }, {
                header: "Time",
                value: function (g) {
                    return format_age(unixTime((new Date).getTime()) - g.rowData.created_epoch)
                },
                render: "text"
            }, {
                header: "Listen",
                value: function (g) {
                    var c = a('<div class="voicemailPlayerWrap"></div>');
                    c.css("min-width", "200px");
                    var b = g.rowData;
                    c.soundWidget("/gui/voicemail/file?sessionid=" + getSessionID() +
                        "&voicemail_msgs_id=" + b.voicemail_msgs_id);
                    c.bind("soundWidgetPlay", function () {
                        a.putREST("/gui/voicemail/voicemail", {
                            voicemail_msgs_id: b.voicemail_msgs_id,
                            read_epoch: 1
                        }, function (l) {
                            e(trueish(l.voicemail.read_epoch), c)
                        })
                    });
                    return c
                },
                render: "html"
            }, {
                header: "Actions",
                value: function (g) {
                    var c = a('<div><span class="voicemailMark"><a href="#" class="opMarkRead">Mark Read</a><a href="#" class="opMarkUnread">Mark Unread</a></span> | <a class="opForward" href="#">Forward</a> | <a class="opDelete" href="#">Delete</a></div>'),
                        b = g.$row,
                        l = g.rowData;
                    l.read_epoch ? b.addClass("read") : b.addClass("unread");
                    b = c.find(".voicemailMark");
                    b.find("a").hide().bind("click", function (o) {
                        o.preventDefault()
                    });
                    b.find("a.opMarkRead").bind("click", function () {
                        a(this).hide().siblings("a").show();
                        a.putREST("/gui/voicemail/voicemail", {
                            voicemail_msgs_id: l.voicemail_msgs_id,
                            read_epoch: 1
                        }, function (o) {
                            e(trueish(o.voicemail.read_epoch), c)
                        })
                    });
                    b.find("a.opMarkUnread").bind("click", function () {
                        a(this).hide().siblings("a").show();
                        a.putREST("/gui/voicemail/voicemail", {
                            voicemail_msgs_id: l.voicemail_msgs_id,
                            read_epoch: ""
                        }, function (o) {
                            e(trueish(o.voicemail.read_epoch), c)
                        })
                    });
                    e(g.rowData.read_epoch, c);
                    c.find("a.opForward").bind("click", function (o) {
                        o.preventDefault();
                        showPopup("forward", {
                            voicemail_msgs_id: g.rowData.voicemail_msgs_id
                        })
                    });
                    c.find("a.opDelete").bind("click", function (o) {
                        o.preventDefault();
                        jConfirm("This action will delete the voicemail from the system. This action cannot be undone.", "Delete This Voicemail?", function (n) {
                            n && a.deleteREST("/gui/voicemail/voicemail", {
                                voicemail_msgs_id: l.voicemail_msgs_id
                            }, function () {
                                f.jsonTable("refresh")
                            })
                        })
                    });
                    return c
                },
                render: "html"
            }]
        });
        var j = "user_" + validUsername;
        Ape.subscribe(j);
        a(window).bind("meteor_" + j, function (g, c) {
            c.json["event-subclass"] === "vm::maintenance" && c.json["vm-action"] !== "mwi-update" && f.jsonTable("refresh")
        })
    }
})(jQuery);
(function (a) {
    for (var e = [{
        text: "Nothing",
        value: "blank"
    }, {
        text: "Line",
        value: "line"
    }, {
        text: "Repeat Line",
        value: "repeat",
        require: "button_type_repeat"
    }, {
        text: "BLF/Line Monitor",
        value: "blf",
        param: "Extension to Monitor",
        picker: {
            searchTypes: ["user", "phone", "conference", "valet_parking", "queue"]
        },
        require: "button_type_blf"
    }, {
        text: "Parking",
        value: "park",
        param: "Parking Extension",
        picker: {
            searchTypes: "valet_parking",
            mustValidate: true,
            autoSelectFirst: true,
            forcePickFirst: true
        },
        require: "button_type_park"
    }, {
        text: "Speed Dial",
        value: "speed_dial",
        param: "Extension or Number",
        picker: {
            searchTypes: "all"
        },
        require: "button_type_speeddial"
    }, {
        text: "Transfer",
        value: "transfer",
        param: "Extension or Number",
        picker: {
            searchTypes: "all"
        },
        require: "button_type_transfer"
    }, {
        text: "Do Not Disturb",
        value: "dnd",
        require: "button_type_dnd"
    }], f = {}, j = e.length; j--;) f[e[j].value] = e[j];
    var g = function (b, l) {
        switch (b.bbx_phone_button_type) {
        case "":
        case "blank":
            return l ? "" : "blank";
        case "line":
        case "repeat":
            return "line";
        default:
            return "util"
        }
    }, c = function (b) {
            var l = {
                na: {
                    text: " ",
                    bgcolor: "#ccc",
                    fgcolor: "#000"
                },
                UNREG: {
                    text: "Offline",
                    bgcolor: "#800",
                    fgcolor: "#fff"
                },
                IDLE: {
                    text: "Idle",
                    bgcolor: "#080",
                    fgcolor: "#0f0"
                },
                HELD: {
                    text: "On Hold",
                    bgcolor: "#060",
                    fgcolor: "#0f0"
                },
                INUSE: {
                    text: "On Call",
                    bgcolor: "#060",
                    fgcolor: "#0f0"
                }
            };
            b = l[b] || l.na;
            l = a('<span class="phoneLineButtonState" />');
            l.text(b.text || "???").css({
                color: b.fgcolor,
                "background-color": b.bgcolor
            });
            return l
        };
    a.widget("cui2.phoneEdit", a.extend(true, {}, {
        options: {},
        _setup_sidecars: function (b) {
            var l = this,
                o = l.options.$staticBody;
            if (b.sidecar_types) {
                var n = o.find("select[name=sidecar_type]"),
                    q = o.find("select[name=installed_sidecars]");
                if (b.sidecar_types > 1) {
                    for (var u = 1; u <= b.sidecar_types; u++) n.append(a("<option />").text(b["sidecar" + u + "_name"]).val(u));
                    n.val(b.sidecar_type || "");
                    n.bind("change", function () {
                        l.options.sidecar_changed = true
                    })
                } else o.find(".sidecarTypeTR").remove(); if (b.max_sidecars) {
                    for (u = 0; u <= b.max_sidecars; u++) q.append(a("<option />").text(u || "None").val(u || ""));
                    q.val(b.installed_sidecars);
                    q.bind("change", function () {
                        l.options.sidecar_changed =
                            true;
                        q.val() ? n.enable("no_sc") : n.disable("no_sc")
                    });
                    q.val() || n.disable("no_sc")
                } else o.find(".sidecarNumTR").remove()
            } else o.find("tr.sidecarTR").remove()
        },
        _setup_dect: function (b) {
            var l = this.options.$staticBody;
            trueish(b.allow_radio_id) || l.find("tr.dectTR").remove()
        },
        _setup_fax_method: function (b) {
            var l = this.options.$staticBody;
            b.allow_fax || l.find("tr.faxmethodTR").remove()
        },
        _setup_generic: function (b) {
            var l = this,
                o = l.options.$staticBody;
            trueish(b.generic_device) ? o.find("[name=generic_lines]").bind("change",
                function () {
                    var n = a(this),
                        q = n.val();
                    q = q.replace(/[^0-9]/g, "");
                    if (!q.match(/^[0-9]+$/) || q == 0) q = 1;
                    n.val(q);
                    l.options.phone.max_lines = q;
                    l.options.sidecar_changed = true
                }) : o.find("tr.genericTR").remove()
        },
        _fill_basic_info: function (b) {
            var l = this,
                o = this.element,
                n = l.options.$staticBody;
            l.options.phone = b;
            l.options.sidecar_changed = false;
            n.find(".phoneEditedWarning").phoneButtonMonitor({
                bbx_phone_id: l.options.phone.bbx_phone_id,
                $jsdt: n.find(".phoneEditButtonList")
            });
            n.find(".opRemovePhone").unbind("click").bind("click",
                function (q) {
                    q.preventDefault();
                    showBlanker({
                        title: "Remove Phone?",
                        text: "The phone will no longer be associated with this user. All line and button settings for this phone will be deleted." + (b.bbx_phone_mac ? "" : " If the phone is currently connected, it will reboot be assigned a new extension as an Unassigned Phone."),
                        buttons: ["Remove Phone", "Cancel"],
                        callbacks: [
                            function () {
                                a.deleteREST("/gui/phone/phone", {
                                    bbx_phone_id: l.options.bbx_phone_id
                                });
                                blankerCancel.call(this);
                                o.trigger("close_request")
                            },
                            blankerCancel
                        ]
                    })
                });
            n.find(".phoneInfoName").text(b.bbx_phone_desc);
            n.find(".phoneInfoModel").text((b.bbx_phone_manufacturer_name || "") + " " + (b.bbx_phone_model_name || ""));
            n.find(".phoneInfoMAC").text(b.bbx_phone_mac ? b.bbx_phone_mac.replace(/^([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i, "$1:$2:$3:$4:$5:$6") : "Generic SIP Device");
            n.find(".phoneInfoLastReg").text(b.bbx_phone_last_registered);
            n.find(".phoneInfoLastIP").text(b.bbx_phone_last_ip)
        },
        _create_button_list: function () {
            var b = this,
                l = b.options.$staticBody.find(".phoneEditButtonList"),
                o = {
                    url: "/gui/phone/phone",
                    type: "GET",
                    rowDataRoot: "$.phone.b                        $row.find(".buttonEditLabel").enable()
                            }
                            return $row
                        },
                        render: "html"
                    }, {
                        header: "Function and Extension",
                        "class": "typeCol",
                        value: function (u) {
                            var v = a('<form action="/gui/phone/button" method="PUT" accept="application/json" class="reassignForm"><select class="buttonEditType" name="bbx_phone_button_type" /> <span class="buttonEditView" /><span class="buttonEditEdit" /></form>'),
                                x = v.find("select.buttonEditType");
                            v.find("button");
                            var z = v.find(".buttonEditView"),
                                B = v.find(".buttonEditEdit");
                            b._render_button_view(u.rowData, u.rowData.bbx_phone_button_type, z).appendTo(z);
                            if (u.rowData.bbx_phone_button_position === 1) {
                                x.removeAttr("name");
                                x.disable("is_primary")
                            }
                            for (var C = 0; C < e.length; C++)
                                if (trueish(b.options.phone[e[C].require]) || !e[C].require)(e[C].value === "line" || e[C].value === "repeat") && u.rowData.bbx_phone_button_position > b.options.phone.max_lines || x.append(a("<option />").text(e[C].text).val(e[C].value));
                            x.val(u.rowData.bbx_phone_button_type);
                            x.bind("change", function () {
                                if (x.val() === u.rowData.bbx_phone_button_type) {
                                    B.empty().hide();
                                    z.show();
                                    u.rowData.bbx_phone_button_type === "repeat" ? v.closest("tr").find(".buttonEditLabel").disable().val(v.closest("tr").prevAll(1).find(".buttonEditLabel").val()) : v.closest("tr").find(".buttonEditLabel").show()
                                } else {
                                    z.hide();
                                    b._render_button_edit(u.rowData, x.val(), v).appendTo(B.empty());
                                    B.show()
                                }
                            });
                            v.delegate("a.doEdit", "click", function (w) {
                                w.preventDefault();
                                z.hide();
                                b._render_button_edit(u.rowData, x.val(), v).appendTo(B.empty());
                                B.show()
                            });
                            v.delegate("button.cancel", "click", function () {
                                B.empty().hide();
                                x.val(u.rowData.bbx_phone_button_type);
                                z.show()
                            });
                            v.bind("form_cancel", function () {
                                x.val(u.rowData.bbx_phone_button_type).trigger("change")
                            });
                            v.ajaxForm({
                                data: {
                                    bbx_phone_button_id: u.rowData.bbx_phone_button_id
                                },
                                accept: "application/json",
                                beforeSubmit: function () {
                                    v.find("button").disable()
                                },
                                success: function () {
                                    l.sortableJSONTable("refresh")
                                }
                            });
                            return v
                        },
                        render: "html"
                    }, {
                        header: "Line Aliases",
                        "class": "buttonForwards",
                        value: function (u) {
                            var v = a('<a href="#" />');
                            if (u.rowData.forwarded && u.rowData.forwarded[0]) {
                                for (var x = u.rowData.forwarded.concat([]).sort(function (B, C) {
                                    return cmp(Number(B.bbx_extension_value), Number(C.bbx_extension_value))
                                }), z = x.length; z--;) x[z] = format_information(x[z].bbx_extension_value);
                                v.text(x.join(", "))
                            } else if (u.rowData.bbx_phone_button_type === "line") v.text("(No Aliases)");
                            else return "";
                            v.bind("click", function (B) {
                                B.preventDefault();
                                showPopup("line_forwards", {
                                    bbx_phone_button_id: u.rowData.bbx_phone_button_id,
                                    forwarded: u.rowData.forwarded,
                                    bbx_extension_id: u.rowData.bbx_extension_id
                                }).one("close_request", function () {
                                    l.sortableJSONTable("refresh")
                                })
                            });
                            return v
                        },
                        render: "html"
                    }, {
                        header: "Shared Line",
                        "class": "sla",
                        value: function (u) {
                            var v, x = u.rowData;
                            if (x.bbx_phone_button_type !== "line") return "";
                            v = a('<select><option value="off">SLA Off</option><option value="sla">SLA On</option></select>');
                            trueish(b.options.phone.allow_sla_barge) && a('<option value="slab">SLA+Barge</option>').appendTo(v);
                            if (x.shared_line_appearance) x.shared_line_appearance_barge ? v.val("slab") : v.val("sla");
                            else v.val("off");
                            v.bind("change", function () {
                                var z = {
                                    bbx_phone_button_id: x.bbx_phone_button_id
                                };
                                switch (v.val()) {
                                case "off":
                                    a.extend(z, {
                                        shared_line_appearance: "",
                                        shared_line_appearance_barge: ""
                                    });
                                    break;
                                case "sla":
                                    a.extend(z, {
                                        shared_line_appearance: "1",
                                        shared_line_appearance_barge: ""
                                    });
                                    break;
                                case "slab":
                                    a.extend(z, {
                                        shared_line_appearance: "1",
                                        shared_line_appearance_barge: "1"
                                    })
                                }
                                a.putREST("/gui/phone/button", z)
                            });
                            return v
                        },
                        render: "html"
                    }, {
                        header: "Utilities",
                        "class": "utilsCol",
                        value: function (u) {
                            if (u.rowData.bbx_phone_button_type !== "line") return "";
                            $row = a("<span />");
                            if (b.options.phone.bbx_phone_softphone) {
                                $sip_info = a('<a href="#">Reg. Info</a>').appendTo($row);
                                $sip_info.bind("click", function (v) {
                                    v.preventDefault();
                                    showPopup("line_reg_info", {
                                        bbx_phone_button_id: u.rowData.bbx_phone_button_id
                                    })
                                });
                                a(document.createTextNode(" ")).insertAfter($sip_info)
                            }
                            $echo_test = a('<a href="#">Echo Test</a>').appendTo($row);
                            $echo_test.bind("click",
                                function (v) {
                                    v.preventDefault();
                                    showBlanker({
                                        title: "Calling...",
                                        text: "The system is calling the selected line to make an echo test.",
                                        buttons: ["OK"],
                                        callbacks: [blankerCancel]
                                    });
                                    a.post("/gui/phone/line/echo_test", {
                                        bbx_phone_id: b.options.phone.bbx_phone_id,
                                        line: u.rowData.bbx_phone_button_position
                                    })
                                });
                            return $row
                        },
                        render: "html"
                    }]
                };
            if (!trueish(b.options.phone.allow_sla))
                for (var n = false, q = o.columnData.length; q-- && !n;)
                    if (o.columnData[q]["class"] === "sla") {
                        o.columnData.splice(q, 1);
                        n = true
                    }
            l.sortableJSONTable(o)
        },
        _render_button_view: function (b, l, o) {
            var n = a('<span class="buttonEditView" />');
            switch (l) {
            case "repeat":
                o.closest("tr").find(".buttonEditLabel").disable();
                n.html("This button repeats the line above.");
                break;
            case "":
                o.closest("tr").find(".buttonEditLabel").enable();
                break;
            case "line":
                o.closest("tr").find(".buttonEditLabel").enable();
                l = a(b.bbx_phone_button_position == 1 ? "<span />" : '<a class="doEdit" href="#"></a>');
                l.html('<span class="lineExt" /> <span class="lineDesc" />');
                l.find(".lineExt").text(format_information(b.bbx_extension_value ||
                    "(unknown extension)"));
                b.clone_line_number && l.find(".lineDesc").text("(Shared from " + entity.ldquo + b.clone_phone_name + entity.rdquo + ")");
                l.appendTo(n);
                break;
            case "park":
            case "blf":
            case "transfer":
            case "speed_dial":
                o.closest("tr").find(".buttonEditLabel").enable();
                l = a('<a href="#" class="doEdit" />');
                b = format_information(b.bbx_phone_button_value);
                l.text(b);
                l.appendTo(n)
            }
            return n.contents()
        },
        _render_button_edit: function (b, l, o) {
            var n = this,
                q = this.element,
                u = a("<span />");
            switch (l) {
            case "repeat":
                o.closest("tr").find(".buttonEditLabel").disable().val(o.closest("tr").prevAll(1).find(".buttonEditLabel").val());
                u.html('<button type="submit">Apply</button> <button type="button" class="cancel">Cancel</button>');
                break;
            case "":
            case "dnd":
            case "blank":
                o.closest("tr").find(".buttonEditLabel").enable().val();
                u.html('<button type="submit">Apply</button> <button type="button" class="cancel">Cancel</button>');
                break;
            case "line":
                o.closest("tr").find(".buttonEditLabel").enable();
                l = showPopup("button_line_edit", {
                    bbx_phone_button_id: b.bbx_phone_button_id,
                    bbx_user_id: n.options.phone.bbx_user_id
                });
                l.one("submit_form", function (z,
                    B) {
                    a.putREST("/gui/phone/button", a.extend({
                        bbx_phone_button_type: "line",
                        bbx_phone_button_id: b.bbx_phone_button_id
                    }, B), function () {
                        q.find(".phoneEditButtonList").sortableJSONTable("refresh")
                    })
                });
                l.one("close_request", function (z) {
                    z.has_data || u.trigger("form_cancel")
                });
                break;
            case "park":
            case "blf":
            case "transfer":
            case "speed_dial":
                o.closest("tr").find(".buttonEditLabel").enable();
                u.html('<span class="buttonEditCaption" /><input class="buttonEditExtPicker" type="text" name="bbx_phone_button_value" size="8" /> <button type="submit">Apply</button> <button type="button" class="cancel">Cancel</button>');
                o = l in f ? f[l] : {
                    value: "(Unknown)",
                    param: "Extension?"
                };
                var v = u.find(".buttonEditExtPicker"),
                    x = u.find("button[type=submit]");
                l === "blf" && v.bind("keyup selection", function () {
                    x.disable("not_blf");
                    if (n.options._blf_xhr) {
                        n.options._blf_xhr.abort();
                        delete n.options._blf_xhr
                    }
                    n.options._blf_xhr = a.getREST("/gui/extension/valid_blf", {
                        bbx_extension_value: v.val()
                    }, function (z) {
                        trueish(z.valid_blf.valid) && x.enable("not_blf")
                    })
                });
                u.find(".buttonEditCaption").text(o.param + ": ");
                v.extensionPicker(a.extend({
                        hidden: false
                    },
                    o.picker));
                if (o.picker.mustValidate) {
                    v.bind("selection", function () {
                        u.find("button[type=submit]").enable("noext")
                    });
                    v.bind("noselection", function () {
                        u.find("button[type=submit]").disable("noext")
                    });
                    u.find("button[type=submit]").disable("noext")
                } else v.bind("keyup selection", function () {
                    v.val().search(/^[0-9*#]+$/) === -1 ? u.find("button[type=submit]").disable("nonnumeric") : u.find("button[type=submit]").enable("nonnumeric")
                }).triggerHandler("keyup")
            }
            return u
        },
        _create: function () {
            var b = this,
                l = this.element;
            a.getTemplate("/ajax-html/phone_edit.html", function (o) {
                var n = a(o).children(".staticBody");
                b.options.$staticBody = n;
                a.getREST("/gui/phone/phone", {
                    bbx_phone_id: b.options.bbx_phone_id
                }, function (q) {
                    b._setup_sidecars(q.phone);
                    b._setup_dect(q.phone);
                    b._setup_generic(q.phone);
                    b._setup_fax_method(q.phone);
                    b._fill_basic_info(q.phone);
                    n.appendTo(l);
                    b._create_button_list()
                });
                n.find(".phoneEditBasicForm").formModule({
                    formData: {
                        bbx_phone_id: b.options.bbx_phone_id
                    },
                    success: function () {
                        if (b.options.sidecar_changed) {
                            b.options.sidecar_changed =
                                false;
                            n.find(".phoneEditButtonList").sortableJSONTable("refresh")
                        }
                        a.getREST("/gui/phone/phone", {
                            bbx_phone_id: b.options.bbx_phone_id
                        }, function (q) {
                            b._fill_basic_info(q.phone)
                        })
                    }
                });
                n.find(".phoneEditRebootButton").bind("click", function (q) {
                    q.preventDefault();
                    showBlanker({
                        title: "Reboot Phone?",
                        text: "The phone will not be usable during the reboot process, which usually lasts about 1" + entity.ndash + "3 minutes. If a call is currently active, the phone may reboot after the active call is complete.",
                        buttons: ["Reboot Phone",
                            "Cancel"
                        ],
                        callbacks: [
                            function () {
                                a.postREST("/gui/phone/reboot", {
                                    bbx_phone_id: b.options.bbx_phone_id
                                });
                                blankerCancel.call(this)
                            },
                            blankerCancel
                        ]
                    })
                })
            })
        }
    }));
    a.widget("cui2.buttonLineEdit", a.extend(true, {}, {
        options: {},
        _create: function () {
            var b = this,
                l = this.element;
            a.getTemplate("/ajax-html/phone_edit_line.html", function (o) {
                var n = a(o).find(".staticBody"),
                    q, u = n.find("select.lineType");
                n.find(".newLineExtSelector").extensionValidator({
                    allow: ["nextfree", "single", "block", "external"],
                    hiddens: {
                        nextfree: "extension_next_free"
                    },
                    nextFreeValue: 1
                }).bind("valid", function () {
                    q === "new" && n.find("button[type=submit]").enable("invalid_new")
                }).bind("invalid", function () {
                    q === "new" && n.find("button[type=submit]").disable("invalid_new")
                });
                n.find(".cloneLineExtSelector").extensionPicker({
                    searchTypes: ["user"],
                    hiddenName: "clone_extension_id",
                    hiddenFormat: "{bbx_extension_id}",
                    textFormat: "number",
                    autoSelectFirst: true,
                    requirePhone: true
                }).bind("selection", function () {
                    q === "clone" && n.find("button[type=submit]").enable("invalid_clone")
                }).bind("noselection",
                    function () {
                        q === "clone" && n.find("button[type=submit]").disable("invalid_clone")
                    });
                var v = false;
                a.getREST("/gui/extension/user/secondaries", {
                    bbx_user_id: b.options.bbx_user_id
                }, function (x) {
                    var z = n.find(".secondarySelector");
                    x = x.secondaries;
                    if (x.length)
                        for (var B = 0; B < x.length; B++) {
                            var C = x[B];
                            z.append(a("<option />").val(C.bbx_extension_id).text(format_information(C.bbx_extension_value)))
                        } else {
                            z.disable("none");
                            v = true
                        }
                });
                u.bind("change", function () {
                    n.find("button[type=submit]").enable("invalid_new").enable("invalid_clone").enable("invalid_sec");
                    n.find(".lineTypeTR").hide();
                    switch (u.val()) {
                    case "new":
                        q = "new";
                        n.find(".newLineTR").show();
                        n.find(".newLineExtSelector").extensionValidator("getState").valid ? n.find("button[type=submit]").enable("invalid_new") : n.find("button[type=submit]").disable("invalid_new");
                        break;
                    case "sec":
                        q = "sec";
                        n.find(".secondaryLineTR").show();
                        v && n.find("button[type=submit]").disable("invalid_sec");
                        break;
                    case "clone":
                        q = "clone";
                        n.find(".cloneLineTR").show();
                        n.find("button[type=submit]").disable("invalid_clone")
                    }
                }).trigger("change");
                n.children("form").bind("submit", function (x) {
                    x.preventDefault();
                    if (a(this).find("button[type=submit]:enabled")[0]) {
                        x = n.find("form").serializeObject();
                        var z = {};
                        switch (q) {
                        case "new":
                            delete x.clone_extension_id;
                            delete x.secondary_extension_id;
                            z = x;
                            break;
                        case "sec":
                            z = {
                                bbx_extension_id: x.secondary_extension_id
                            };
                            break;
                        case "clone":
                            z = {
                                bbx_extension_id: x.clone_extension_id
                            }
                        }
                        l.trigger("submit_form", z);
                        l.trigger("close_request", {
                            has_data: true
                        })
                    }
                });
                l.append(n)
            })
        }
    }));
    a.widget("cui2.buttonLineForwards", a.extend(true, {}, {
        options: {},
        _create: function () {
            var b = this,
                l = this.element;
            a.getTemplate("/ajax-html/phone_edit_line_forwards.html", function (o) {
                o = a(o).find(".staticBody");
                o.find(".lineSorter").sortList({
                    data: b.options.forwarded,
                    rowDataRoot: null,
                    allow: ["add", "remove"],
                    rowData: {
                        value: function (n) {
                            return format_information(n.bbx_extension_value)
                        },
                        render: "text"
                    },
                    addForm: {
                        value: function () {
                            $form = a('<form action="/gui/phone/line/alias" method="POST"><div class="validator" /><br /><button type="submit">Add Alias Extension</button></form>');
                            $form.find(".validator").extensionValidator({
                                allow: ["nextfree", "single", "block", "external"],
                                allowUserSecondaries: b.options.bbx_user_id
                            }).bind("valid", function () {
                                $form.find("button[type=submit]").enable("invalid")
                            }).bind("invalid", function () {
                                $form.find("button[type=submit]").disable("invalid")
                            });
                            $form.ajaxForm({
                                data: {
                                    bbx_phone_button_id: b.options.bbx_phone_button_id
                                },
                                accept: "application/json",
                                success: function (n) {
                                    var q = {};
                                    try {
                                        q = JSON.parse(n)
                                    } catch (u) {}
                                    $form.trigger("add", {
                                        data: q.alias,
                                        last: true
                                    })
                                }
                            });
                            return $form
                        },
                        render: "html",
                        position: "last"
                    },
                    addLink: {
                        value: "Add an Alias Extension",
                        render: "text",
                        position: "last"
                    },
                    remove: function (n, q) {
                        a.deleteREST("/gui/phone/line/alias", {
                            bbx_extension_id: q.row.bbx_extension_id,
                            bbx_phone_button_id: b.options.bbx_phone_button_id
                        }, function () {
                            q.success()
                        })
                    },
                    hasNoneText: "No Alias Extensions configured"
                });
                o.appendTo(l)
            })
        }
    }));
    a.widget("cui2.buttonLineRegInfo", a.extend(true, {}, {
        options: {},
        _create: function () {
            var b = this,
                l = this.element;
            a.getTemplate("/ajax-html/phone_edit_reg_info.html",
                function (o) {
                    a.getREST("/gui/phone/button", {
                        bbx_phone_button_id: b.options.bbx_phone_button_id
                    }, function (n) {
                        var q = a(o).find(".staticBody");
                        q.find(".username").text(n.button.bbx_extension_value);
                        q.find(".password").text(n.button.bbx_registration_password);
                        q.find(".authUsername").text(n.button.bbx_registration_username);
                        a.getREST("/gui/ha_ip/ha_ip", function (u) {
                            q.find(".intDomain").text(u.ha_ip.definitive_system_ip);
                            q.find(".extDomain").text(u.ha_ip.definitive_external_ip)
                        });
                        q.appendTo(l)
                    })
                })
        }
    }));
    a.widget("cui2.phoneButtonMonitor",
        a.extend(true, {}, CUI.dataTableClass, CUI.liveTableBase, {
            options: {
                live_table: "bbx_phone_button",
                stash: []
            },
            _create: function () {
                this.options.user_info = {
                    search: {
                        bbx_phone_id: this.options.bbx_phone_id
                    }
                };
                this._live_table_base_create()
            },
            _beforeLABootstrap: function () {
                this.options.in_bootstrap = true
            },
            _afterLABootstrap: function () {
                this.options.in_bootstrap = false
            },
            _insert_row: function () {
                this.options.in_bootstrap || this._throw_change_warning()
            },
            _before_delete_row: function () {
                this._throw_change_warning()
            },
            _update_row: function (b,
                l) {
                this.options.$jsdt.find("> .jsDataTable").find("> tbody > tr").each(function () {
                    var o = a(this),
                        n = o.data("row");
                    n && n.bbx_phone_button_id === l.bbx_phone_button_id && o.find(".phoneLineButtonState").replaceWith(c(l.line_state))
                })
            },
            _throw_change_warning: function () {}
        }))
})(jQuery);
(function (a) {
    a.widget("cui2.phoneAdd", a.extend(true, {}, {
        options: {},
        _fill_basic_info: function () {},
        _create: function () {
            var e = this,
                f = this.element;
            a.getTemplate("/ajax-html/phone_add.html", function (j) {
                $staticBody = a(j).children(".staticBody");
                var g = $staticBody.find("form.assignForm"),
                    c = g.find(".txtMacManual"),
                    b = false;
                $staticBody.find(".phoneAddTypeRadios input[type=radio]").bind("click change", function () {
                    a(this).is(".rdoMacManual:checked") ? c.enable("radio_select") : c.disable("radio_select");
                    if (a(this).is(".rdoSelectExisting:checked")) {
                        $staticBody.find(".selectPhone").show();
                        b = true
                    } else if (b) {
                        $staticBody.find("input[name=bbx_phone_id]:radio:checked").removeAttr("checked");
                        $staticBody.find(".selectPhone").hide();
                        b = false
                    }
                }).filter(":checked").triggerHandler("change");
                c.bind("keyup change", function () {
                    g.find(".rdoMacManual").val(this.value)
                });
                g.ajaxForm({
                    data: {
                        bbx_user_id: e.options.bbx_user_id
                    },
                    accept: "application/json",
                    beforeSerialize: function (o) {
                        var n = g.find(".rdoMacManual");
                        if (n.is(":checked")) {
                            var q = c.val();
                            q = q.replace(/[^0-9a-f]/ig, "");
                            if (q.length === 12) {
                                n.val(q);
                                c.val(q)
                            } else {
                                alert("The manually-entered MAC address is not valid.");
                                return false
                            }
                        }
                        if (o.find("input[name=bbx_phone_id]:checked")[0]) o.find("input[name=bbx_phone_mac]").disable("no_mac_and_id");
                        else if (o.find("input.rdoSelectExisting:checked")[0]) {
                            alert("No phone was selected.");
                            return false
                        }
                    },
                    beforeSubmit: function () {
                        g.find("input[name=bbx_phone_mac]").enable("no_mac_and_id")
                    },
                    success: function () {
                        f.trigger("close_request")
                    }
                });
                $staticBody.appendTo(f);
                var l = f.find(".phoneAddUnassigned").jsonTable({
                    url: "/gui/extension/list",
                    data: {
                        type: "phone"
                    },
                    hasNoneText: "No unassigned phones are available for use. To use an assigned phone, remove it from the assigned user and try again.",
                    rowDataRoot: "$.list",
                    sortby: "bbx_extension_value",
                    sortorder: "asc",
                    rows: 10,
                    searchParam: "search_string",
                    paginator: true,
                    paginatorToTop: true,
                    paginatorToTopAdditional: 200,
                    columnData: [{
                        header: "",
                        render: "html",
                        value: function (o) {
                            return a('<input type="radio" name="bbx_phone_id" />').val(o.rowData.bbx_phone_id)
                        }
                    }, {
                        header: "Ext.",
                        value: function (o) {
                            return format_information(o.rowData.bbx_extension_value, {
                                no_extension: true
                            })
                        },
                        sortby: "bbx_extension_value"
                    }, {
                        header: "Name",
                        value: "show_name",
                        sortby: "name"
                    }]
                });
                l.delegate("td:not(.col1)",
                    "click", function () {
                        a(this).closest("tr").find(":radio").attr("checked", "checked")
                    }).addClass("clickable");
                $staticBody.find(".phoneSearch").searchBox().bind("search", function (o, n) {
                    l.jsonTable("refresh", {
                        search: n
                    })
                })
            })
        }
    }))
})(jQuery);
(function (a) {
    a.widget("cui2.phoneDetail", a.extend(true, {}, {
        options: {},
        _init: function () {
            var e = this,
                f = this.element;
            a.getTemplate("/ajax-html/phone_detail.html", function (j) {
                e.options.$staticBody = a(j).find(".staticBody");
                var g = e.options.$staticBody;
                a.getREST("/gui/phone/phone", {
                    bbx_phone_id: e.options.bbx_phone_id
                }, function (c) {
                    try {
                        c.phone.bbx_extension_id = c.phone.buttons[0].bbx_extension_id;
                        c.phone.bbx_extension_value = c.phone.buttons[0].bbx_extension_value;
                        c.phone.bbx_extension_block_begin = c.phone.buttons[0].bbx_extension_block_begin;
                        c.phone.bbx_extension_block_end = c.phone.buttons[0].bbx_extension_block_end
                    } catch (b) {
                        console_log("screens/jquery.phoneDetail.js: Could not find the first line's extension information. ", b)
                    }
                    var l = {
                        name: c.phone.bbx_phone_desc,
                        name_param: "bbx_phone_desc",
                        number: c.phone.bbx_extension_value,
                        prefix: "bbx_phone",
                        bbx_phone_id: c.phone.bbx_phone_id,
                        bbx_extension_id: c.phone.bbx_extension_id,
                        restURL: "/gui/phone/phone",
                        buttons: ["migrate", "delete", "rename"]
                    };
                    g.find(".masthead").extensionDetailMasthead(l);
                    g.find(".phoneInfoModel").text((c.phone.bbx_phone_manufacturer_name ||
                        "") + " " + (c.phone.bbx_phone_model_name || ""));
                    g.find(".phoneInfoMfgr").text(c.phone.bbx_phone_manufacturer_name || "");
                    g.find(".phoneInfoMAC").text(c.phone.bbx_phone_mac ? c.phone.bbx_phone_mac.replace(/^([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i, "$1:$2:$3:$4:$5:$6") : "Generic SIP Device");
                    g.find(".phoneInfoLastReg").text(c.phone.bbx_phone_last_registered);
                    g.find(".phoneInfoLastIP").text(c.phone.bbx_phone_last_ip);
                    f.html(g)
                })
            });
            f.one("refreshDetail", function () {
                f.phoneDetail()
            })
        }
    }))
})(jQuery);
(function (a) {
    var e = [{
        name: "answer",
        className: "opAnswer",
        src: "/images/client/calls/call.png",
        title: "Answer Call",
        fn: "_answer"
    }, {
        name: "transfer",
        className: "opTransfer",
        src: "/images/client/calls/transfer.png",
        title: "Transfer Call",
        fn: "_show_transfer_popup"
    }, {
        name: "hold",
        className: "opHold",
        src: "/images/client/calls/hold.png",
        title: "Hold",
        fn: "_hold"
    }, {
        name: "unhold",
        className: "opResume",
        src: "/images/client/calls/resume.png",
        title: "Resume",
        fn: "_unhold"
    }, {
        name: "kill",
        className: "opKill",
        src: "/images/client/calls/kill.png",
        title: "Hang Up",
        fn: "_kill"
    }, {
        name: "killmulti",
        className: "opKillMulti",
        src: "/images/client/calls/kill.png",
        title: "Hang Up",
        fn: "_kill_multi"
    }],
        f = {
            incoming: {
                className: "stateIncoming",
                src: "/images/client/state/incoming.png",
                title: "Call In"
            },
            outgoing: {
                className: "stateOutgoing",
                src: "/images/client/state/outgoing.png",
                title: "Call Out"
            },
            onhold: {
                className: "stateOnhold",
                src: "/images/client/state/onhold.png",
                title: "On Hold"
            },
            ringin: {
                className: "stateRingin",
                src: "/images/client/state/ringin.png",
                title: "Ringing"
            },
            ringout: {
                className: "stateRingout",
                src: "/images/client/state/ringout.png",
                title: "Waiting"
            }
        }, j = function (b) {
            b.preventDefault()
        }, g = 0,
        c = function (b) {
            if (!b || Number(b) === NaN) {
                console_log("jquery.callMonitor.js: No server time given to update_server_offset, using system time without an offset");
                b = (new Date).getTime()
            }
            b = Number(b);
            b = b - (new Date).getTime();
            if (Math.abs(b - g) > 1E3) g = b;
            return g
        };
    a.widget("cui2.callMonitorBar", a.extend({}, CUI.dataTableClass, {
        options: {
            call_monitor_data: [],
            destroy_cb: [],
            to: [],
            interval: [],
            user_info: {}
        },
        _init: function () {
            var b = this.element;
            this.options.$container = a('<div class="callMonitorContainer" />').appendTo(b);
            this.options.live_ident = getUnique("ltref");
            this.options.widget_id = getUnique("callMonitor");
            this.options.live_table = "live_calls";
            this.options.live_table_key = "";
            this.options.user_info.search = {
                a_bbx_user_id: "^" + validUserID + "$",
                b_bbx_user_id: "^" + validUserID + "$"
            };
            this._dataTableInit();
            this._liveDataTableSubscribe("liveTable_live_calls__", undefined, this.options.user_info)
        },
        _generate_answer_list: function () {},
        _afterAddRow: function (b, l) {
            var o = this;
            c(b.current_time ? parseInt(b.current_time, 10) * 1E3 : undefined);
            b = o._process_row_data(b);
            b._index = l;
            o.options.call_monitor_data.splice(l, 0, b);
            if (!o.options._in_bootstrap) {
                var n = o._insert_row(b, l);
                if (n) {
                    n.hide();
                    o._update_height();
                    setTimeout(function () {
                        if (n.closest("body")[0]) {
                            n.show();
                            o._update_height()
                        }
                    }, 750)
                }
            }
        },
        _afterSetOriginalRowData: function () {
            this._afterSetRowData.apply(this, arguments)
        },
        _afterSetRowData: function (b, l) {
            var o = this.options.call_monitor_data[b].$row,
                n = this.options.call_monitor_data[b]._ringing;
            l = this._process_row_data(l);
            l._index = b;
            l._ringing = n;
            l.$row = o;
            this.options.call_monitor_data[b] = l;
            l._my_leg && this._update_row(b, l)
        },
        _afterDeleteRow: function (b) {
            var l = this.options.call_monitor_data[b];
            if (l) {
                l._ticker && a(window).unbind("halfTick." + l._ticker.bind_ns);
                this._delete_row(b);
                this.options.call_monitor_data.splice(b, 1)
            }
        },
        _clear: function () {
            for (var b = this.options.call_monitor_data, l = b.length; l--;) {
                b[l].ticker && a(window).unbind("halfTick." + b[l].ticker.bind_ns);
                this._delete_row(l)
            }
            this.options.call_monitor_data = []
        },
        _validateRESTContainer: function () {
            return this.options.rest_container || ""
        },
        _setTimeout: function (b, l) {
            var o = setTimeout(b, l);
            this.options.to.push(o);
            return o
        },
        _setInterval: function (b, l) {
            var o = setInterval(b, l);
            this.options.to.push(o);
            return o
        },
        _clearTimeout: function (b) {
            return clearTimeout(b)
        },
        _clearInterval: function (b) {
            return clearInterval(b)
        },
        _addDestroyCallback: function (b) {
            this.options.destroy_cb.push(b)
        },
        _insert_row: function (b, l) {
            var o = this.options.$container,
                n = this._match_existing_ringing(b);
            if (n !== false) this._add_ringing_phone(b, n);
            else {
                b.$row = this._create_$row(b);
                if (l == 0) b.$row.prependTo(o);
                else {
                    n = o.children(".callObject");
                    n.length <= l ? b.$row.appendTo(o) : b.$row.insertAfter(n[l])
                }
                this._update_height();
                return b.$row
            }
        },
        _update_row: function (b, l) {
            var o = l.$row;
            if (o) {
                l.$row = this._create_$row(l);
                l.$row.replaceAll(o);
                this._update_height()
            } else this._match_existing_ringing(l) === false && this._insert_row(l, b)
        },
        _delete_row: function (b) {
            if (b = this.options.call_monitor_data[b].$row) {
                b.remove();
                this._update_height()
            }
        },
        _update_height: function () {
            this.element.height(this.options.$container.outerHeight())
        },
        _process_row_data: function (b) {
            if (b._processed) return b;
            b._a_leg = {
                _leg: "a"
            };
            b._b_leg = {
                _leg: "b"
            };
            b._processed = true;
            for (var l in b)
                if (b.hasOwnProperty(l)) {
                    var o = l.match(/^([ab])_(.+)/);
                    if (o) b["_" + o[1] + "_leg"][o[2]] = b[l]
                }
            if (!b._b_leg.uuid) {
                b._other_leg = undefined;
                delete b._b_leg
            }
            if (b._a_leg.bbx_user_id == validUserID) {
                b._my_leg = b._a_leg;
                b._other_leg = b._b_leg
            } else {
                b._my_leg = b._b_leg;
                b._other_leg =
                    b._a_leg
            }
            b._other_leg && b._other_leg.popup_url && this._do_popup(b._other_leg.popup_url);
            if (!b._my_leg) return b;
            l = b._my_leg._leg === "b" ? "cid" : "ceid";
            b._my_leg._cid_in = {
                name: b[l + "_name"],
                number: b[l + "_number"],
                formatted: format_information(b[l + "_number"], null)
            };
            return b
        },
        _do_popup: function (b) {
            var l = "ccc_popup";
            if (b.match(/ /)) {
                l = b.replace(/ .*$/, "");
                b = b.replace(/^[^ ]* /, "")
            }
            var o = new Date;
            o.setDate(o.getDate() + 1);
            b = escape(b) + "; expires=" + o.toUTCString() + "; path=/";
            document.cookie = "popup_url=" + b;
            setTimeout(function () {
                window.open("/popup.html",
                    l, "status=1,toolbar=1,resizable=1,location=1,menubar=1,titlebar=1,scrollbars=1,left=0,top=0,height=740,width=960")
            }, 100)
        },
        _match_existing_ringing: function (b) {
            if (!(b._my_leg.callstate in {
                RINGING: 1,
                EARLY: 1,
                DOWN: 1
            })) return false;
            for (var l = 0; l < this.options.call_monitor_data.length; l++) {
                var o = this.options.call_monitor_data[l];
                if (b.row_id !== o.row_id && (b.originator && b.originator === o.originator || b.other_uuid && b.other_uuid === o.other_uuid || b._my_leg.click_to_call_uuid && b._my_leg.click_to_call_uuid === o._my_leg.click_to_call_uuid)) return l
            }
            return false
        },
        _add_ringing_phone: function (b, l) {
            var o = this.options.call_monitor_data[l];
            o._ringing = o._ringing || [];
            o._ringing.push(b);
            this._update_row(l, o)
        },
        _create_$row: function (b) {
            var l = a('<div class="callObject"><span class="state" /><span class="name" /><span class="number" /><div class="callMonitorOps" /><div class="callMonitorTimer" /><div class="callMonitorMulti" />');
            return l = this._fill_row(b, l)
        },
        _fill_row: function (b, l) {
            var o = this,
                n = this.element;
            b._ticker = {
                $element: l.find(".callMonitorTimer"),
                start: parseInt(b._my_leg.created_epoch,
                    10) / 1E3 || b.current_time * 1E3,
                bind_ns: getUnique("ticker")
            };
            a(window).bind("tick." + b._ticker.bind_ns, function () {
                b._ticker.$element.text(hhmmss(((new Date).getTime() + g - b._ticker.start) / 1E3))
            });
            for (var q = {}, u = a.extend(true, [], e), v = u.length; v--;) q[u[v].name] = u[v];
            var x;
            switch (b._my_leg.callstate) {
            case "RINGING":
            case "EARLY":
            case "DOWN":
                x = b._my_leg.direction === "inbound" ? "ringout" : "ringin";
                n.addClass("ringing");
                if (b._ringing) {
                    n = a.extend([], b._ringing);
                    v = false;
                    n.push(b);
                    n = n.sort(function (w, G) {
                        return cmp(w._my_leg.phone_name,
                            G._my_leg.phone_name)
                    });
                    for (var z = l.find(".callMonitorMulti"), B = 0; B < n.length; B++) {
                        var C = n[B];
                        if (trueish(C._my_leg.click_to_answer, {
                            allowStringFalse: true
                        })) {
                            v = true;
                            C = a('<a href="javascript:false"></a>').append(document.createTextNode(unescape(C._my_leg.phone_name) || "Unknown Phone")).data("uuid", C._my_leg.uuid);
                            C.bind("click", function (w) {
                                w.preventDefault();
                                o._answer_uuid(a(this).data("uuid"))
                            });
                            z.append(C)
                        }
                    }
                    if (v) {
                        l.addClass("ringingMulti");
                        q.killmulti.show = true
                    } else q.kill.show = true;
                    q.answer.show = false
                } else {
                    q.kill.show =
                        true;
                    q.answer.show = trueish(b._my_leg.click_to_answer, {
                        allowStringFalse: true
                    }) && b._my_leg.direction === "outbound"
                }
                break;
            case "HELD":
                x = "onhold";
                n.addClass("held");
                q.kill.show = true;
                q.unhold.show = true;
                if (b._other_leg) q.transfer.show = true;
                break;
            case "ACTIVE":
            case "UNHOLD":
                x = b._my_leg.click_to_call_uuid ? b._my_leg.direction === "inbound" ? "incoming" : "outgoing" : b._my_leg.direction === "inbound" ? "outgoing" : "incoming";
                n.addClass("answered");
                q.kill.show = true;
                if (b._other_leg) q.transfer.show = true;
                q.hold.show = trueish(b._my_leg.click_to_hold, {
                    allowStringFalse: true
                });
                break;
            default:
                console_log("Unknown call state: ", b._my_leg.callstate, " on ", b)
            }
            if (b._my_leg._cid_in.name || b._my_leg._cid_in.formatted || b._my_leg._cid_in.number) {
                l.find(".name").text(titleCase(unescape(b._my_leg._cid_in.name || "")));
                if (!b._my_leg._cid_in.name || b._my_leg._cid_in.name && b._my_leg._cid_in.name == b._my_leg._cid_in.number) l.find(".name").hide();
                l.find(".number").text(b._my_leg._cid_in.formatted || format_information(b._my_leg._cid_in.number) || "")
            } else l.find(".name").html('<span class="noValue">No Information</div>');
            x && a('<img width="15" height="15" />').attr({
                src: f[x].src,
                title: f[x].title,
                "class": f[x].className
            }).appendTo(l.children(".state"));
            for (v = 0; v < u.length; v++) u[v].show && function (w) {
                var G = a('<a href="javascript:false" class="op"><img width="15" height="15" /></a>');
                G.attr("title", w.title).addClass(w.className).children("img").attr("src", w.src);
                G.bind("click", function (J) {
                    J.preventDefault();
                    o[w.fn](b)
                });
                l.find(".callMonitorOps").append(G)
            }(u[v]);
            return l
        },
        _kill: function (b) {
            var l;
            switch (b._my_leg.callstate) {
            case "RINGING":
                l =
                    "CALL_REJECTED";
                break;
            default:
                l = "NORMAL_CLEARING"
            }
            a.ajax({
                url: "/gui/freeswitch/uuid/uuid_kill",
                data: {
                    uuid: b._my_leg.uuid,
                    cause: l,
                    template: "json"
                },
                error: function () {},
                success: function () {}
            })
        },
        _kill_multi: function (b) {
            b = [b].concat(b._ringing || []);
            for (var l = 0; l < b.length; l++) a.ajax({
                url: "/gui/freeswitch/uuid/uuid_kill",
                data: {
                    uuid: b[l]._my_leg.uuid,
                    cause: "CALL_REJECTED",
                    template: "json"
                },
                error: function () {},
                success: function () {}
            })
        },
        _answer: function (b) {
            this._answer_uuid(b._my_leg.uuid)
        },
        _answer_uuid: function (b) {
            a.post("/gui/freeswitch/uuid/uuid_phone_talk", {
                uuid: b,
                template: "json"
            })
        },
        _hold: function (b) {
            a.post("/gui/freeswitch/uuid/uuid_phone_hold", {
                uuid: b._my_leg.uuid,
                template: "json"
            })
        },
        _unhold: function (b) {
            this._answer(b)
        },
        _show_transfer_popup: function (b) {
            var l = this;
            a.getTemplate("/ajax-html/callMonitorTransferPopup.html", function (o) {
                var n = a(o).appendTo("body");
                a(".destination", n).focus().extensionPicker({
                    directory: true
                });
                a(".callerUUID", n).val(b._my_leg.uuid);
                a(".callerName", n).text(unescape(b._my_leg._cid_in.name));
                a(".transferForm", n).bind("submit",
                    j).one("submit", function () {
                    a.post("/gui/freeswitch/uuid/uuid_transfer", {
                        template: "json",
                        uuid: b._my_leg.uuid,
                        extension: a(".destination", n).val(),
                        bleg: 1
                    });
                    n.remove()
                });
                a(".cancel", n).bind("click", function (v) {
                    v.preventDefault();
                    n.remove()
                });
                for (o = 0; o < l.options.call_monitor_data.length; o++) {
                    var q = l.options.call_monitor_data[o];
                    if (q !== b) switch (q._my_leg.callstate) {
                    case "RINGING":
                    case "EARLY":
                    case "DOWN":
                        break;
                    default:
                        has_bridgable = true;
                        var u = a('<li><a class="uuidUuidTransfer" href="javascript:false">' +
                            (q._my_leg._cid_in.name || q._my_leg._cid_in.number) + "</a></li>");
                        u.find("a").data("transfer_uuid", q._other_leg ? q._other_leg.uuid : q._my_leg.uuid);
                        a(".uuidUuidBridgeList", n).append(u)
                    }
                }
                o = a(".uuidUuidBridgeList a.uuidUuidTransfer", n);
                if (o[0]) {
                    a(".uuidBridgeListNoOtherCalls", n).remove();
                    o.bind("click", function (v) {
                        v.preventDefault();
                        a(this).data("transfer_uuid");
                        console.log(a(this).data("transfer_uuid"));
                        v = b._other_leg.uuid || b._my_leg.uuid;
                        a.post("/gui/freeswitch/uuid/uuid_bridge", {
                            template: "json",
                            destination: a(this).data("transfer_uuid"),
                            source: v
                        });
                        n.empty().remove()
                    })
                }
            })
        },
        destroy: function () {
            var b = this.element,
                l;
            if (this.options.destroy_cb && this.options.destroy_cb.length)
                for (l = 0; l < this.options.destroy_cb.length; l++) this.options.destroy_cb[l].call(this);
            b.empty();
            b.removeClass("ringing ringingMulti held answered");
            a.Widget.prototype.destroy.apply(this, arguments)
        }
    }))
})(jQuery);
(function (a) {
    var e = function (b, l, o, n, q, u, v) {
        var x = a(".queueCallList", v),
            z = null;
        x.find(".queueCallItem").each(function () {
            if (a(".waittime", this).data("time") > u) {
                z = v.find(".template > .queueCallItem").clone().insertBefore(a(this)).data("uuid", b);
                return false
            }
        });
        z || (z = v.find(".template > .queueCallItem").clone().appendTo(x).data("uuid", b));
        z.data("queue", l);
        a(".cidname", z).text(formatCID(n, q));
        a(".waittime", z).data("time", u).text(a.timeSince(u, {
            format: "short",
            precision: 4
        }));
        a(".queue", z).text(o);
        a("a.opPop",
            z).bind("click", function (B) {
            var C = a(this).closest("td").addClass("disabled"),
                w = a(this).closest("div.queueCallItem").data("uuid"),
                G = getUnique("bind");
            B.preventDefault();
            a(window).bind("meteor_channel_hangup." + G, function (J, E) {
                if (E.json.call_uuid === w) {
                    C.removeClass("disabled");
                    a(window).unbind("meteor_channel_hangup." + G)
                }
            });
            a.ajax({
                url: "/gui/freeswitch/queue_pick",
                data: {
                    uuid: w,
                    template: "json",
                    queue_key_name: l,
                    caller_id_name: n,
                    caller_id_number: q
                },
                dataType: "json",
                success: function (J) {
                    J.failure && C.removeClass("disabled").addClass("failed")
                }
            })
        });
        a(".queueCallNoCalls", v).hide()
    }, f = function (b, l, o) {
            var n = l.find(".queueCallItem").filter(function () {
                return a(this).data("uuid") == b
            });
            n.addClass("removed");
            a(".ownerName", n).text(o);
            setTimeout(function () {
                n.remove();
                l.find(".queueCallList .queueCallItem").length < 1 && a(".queueCallNoCalls", l).show()
            }, 5E3)
        }, j = function (b, l, o, n) {
            b = l.json.fifo_action;
            if (b == "push" && n[l.json.fifo_name]) e(l.json.unique_id, l.json.fifo_name, n[l.json.fifo_name].name, l.json.caller_caller_id_name, l.json.caller_caller_id_number, Math.round((new Date).getTime() /
                1E3), o);
            else if (b == "abort" || b == "timeout" || b == "consumer_pop") {
                n = "";
                var q = l.json.unique_id;
                if (b == "consumer_pop") {
                    n = formatCID(l.json.bbx_caller_id_name, l.json.bbx_caller_id_number);
                    q = l.json.fifo_caller_uuid
                } else if (b == "timeout") n = "Timed Out";
                else if (b == "abort") n = "Abandoned";
                f(q, o, n)
            }
        }, g = function (b, l, o) {
            var n = b.status,
                q = a(".queueSignIn > .bbx_user_status_id", l);
            a.each(n, function () {
                a("option:first", q).attr("value") > this.bbx_user_status_id ? q.prepend('<option value="' + this.bbx_user_status_id + '">' + this.bbx_user_status_name +
                    "</option>") : q.append('<option value="' + this.bbx_user_status_id + '">' + this.bbx_user_status_name + "</option>")
            });
            a.ajax({
                url: "/gui/user/status",
                type: "GET",
                data: {
                    template: "json"
                },
                dataType: "json",
                success: function (z) {
                    q.val(parseInt(z.data.bbx_user_status_id));
                    l.parent().data("status", parseInt(z.data.bbx_user_status_id))
                }
            });
            for (var u in b.fifo) {
                n = b.fifo[u].name;
                o[u] = {
                    name: n,
                    warning_seconds: b.fifo[u].warning_seconds,
                    critical_seconds: b.fifo[u].critical_seconds
                };
                if (b.fifo[u].callers) {
                    var v = b.fifo[u].callers,
                        x;
                    for (x in v) e(v[x].uuid, u, n, v[x].caller_id_name, v[x].caller_id_number, Math.round((new Date).getTime() / 1E3) - v[x].age, l)
                }
            }
        }, c = {
            template: "/ajax-html/queueCalls.html"
        };
    jQuery.fn.queueCalls = function (b) {
        if (b == "getstatus") return this.data("status");
        console.log(b);
        
        b = a.extend({}, c, b);
        var l = this;
        a.getTemplate(b.template, function (o) {
            a(l).each(function () {
                var n = a(o).appendTo(a(this).empty());
                n.find(".template > .queueCallItem");
                var q = {};
                a(window).bind("tick", function () {
                    a(".waittime", n).each(function () {
                        var v;
                        if (v = a(this).data("time")) {
                            a(this).text(a.timeSince(v, {
                                format: "short",
                                precision: 4
                            }));
                            var x = a(this).closest(".queueCallItem"),
                                z = q[x.data("queue")].critical_seconds,
                                B = q[x.data("queue")].warning_seconds;
                            if (B || z) {
                                v = Math.round((new Date).getTime() / 1E3) - v;
                                if (z && v > z) x.addClass("critical").removeClass("warning");
                                else B && v > B ? x.addClass("warning").removeClass("critical") : x.removeClass("warning critical")
                            }
                        }
                    })
                });
                if (b.data) {
                    g(b.data, n, q);
                    a(window).bind("meteor_queue_status", function (v, x) {
                        j(v, x, n, q)
                    })
                } else a.ajax({
                    url: "/gui/queue/userlist",
                    data: {
                        template: "json",
                        verbose: 1
                    },
                    dataType: "json",
                    success: function (v) {
                        g(v.data, n, q);
                        a(window).bind("meteor_queue_status", function (x, z) {
                            j(x, z, n, q)
                        })
                    }
                });
                var u = a(".queueSignIn > .bbx_user_status_id", n);
                a(window).bind("meteor_user_" + validUsername, function (v, x) {
                    if (x.json.action == "set_user_status") {
                        n.parent().data("status", parseInt(x.json.status_id));
                        u.val(parseInt(x.json.status_id))
                    }
                })
            })
        });
        return a(this)
    }
})(jQuery);
(function (a) {
    a.widget("cui2.conferenceManager", {
        options: {
            conferences: [],
            html: '<div class="confman-select-conf-wrap"><select class="confman-select-conf"></select></div><div class="confman-conferences-pane"></div>'
        },
        _create: function () {
            var e = this.element,
                f, j;
            e.html(this.options.html);
            e.addClass("cccConferenceManager");
            j = CUI.FunctionFactory.build(this._populate, this, {
                context: "argument"
            });
            this.options.$select = f = e.find(".confman-select-conf");
            this.options.$confs = e.find(".confman-conferences-pane");
            f.append('<option value="">(Show all conferences)</option>').disable("no-conferences").bind("change",
                CUI.FunctionFactory.build(this._switchHandler, this, {
                    context: "argument"
                }));
            a.getREST("/gui/conference/list", {}, j);
            a(window).bind("meteor_conference_status", CUI.FunctionFactory.build(this._conferenceStatusHandler, this, {
                context: "argument"
            }));
            e.delegate("li.sconfman-member-item", "click", CUI.FunctionFactory.build(this._activateClickHandler, this, {
                context: "argument",
                first: "context"
            }))
        },
        _activateClickHandler: function (e, f) {
            var j = this.element,
                g = a(e);
            if (!a(f.target).closest(".sconfman-mops")[0])
                if (g.hasClass("active")) g.removeClass("active").trigger("conferenceManagerMemberDeactivate");
                else {
                    j.find("li.sconfman-member-item.active").removeClass("active");
                    g.addClass("active").trigger("conferenceManagerMemberActivate")
                }
        },
        _conferenceStatusHandler: function (e, f) {
            var j, g, c;
            j = f.json;
            g = 0;
            a: for (; g < this.options.conferences.length; g++)
                if (this.options.conferences[g].conference_name === j.conference_name) {
                    c = g;
                    break a
                }
            switch (j.action) {
            case "conference-create":
                this._eventCreateConference(j);
                break;
            case "conference-destroy":
                this._eventDestroyConference(j);
                break;
            case "add-member":
                this._eventAddMember(c,
                    j);
                break;
            case "del-member":
                this._eventDeleteMember(c, j)
            }
        },
        _eventCreateConference: function (e) {
            a.getREST("/gui/conference/single", {
                template: "json",
                conference_name: e.conference_name
            }, CUI.FunctionFactory.build(this._gotNewConferenceData, this, {
                context: "argument"
            }, [e]))
        },
        _eventDestroyConference: function (e) {
            this._removeConference(e)
        },
        _gotNewConferenceData: function (e, f) {
            this._addConference(this._normalizeBootstrapConferences(f.data)[0])
        },
        _eventAddMember: function (e, f) {
            if (!e) {
                this.options._defer_add = this.options._defer_add || {};
                this.options._defer_add[f.conference_name] = this.options._defer_add[f.conference_name] || [];
                this.options._defer_add[f.conference_name].push(f)
            }
        },
        _eventDeleteMember: function (e, f) {
            var j = this.options.conferences[e];
            if (j) {
                j = j.members;
                m_idx = 0;
                a: for (; m_idx < j.length; m_idx++)
                    if (f.member_id === j[m_idx].member_id) {
                        j.splice(m_idx, 1);
                        break a
                    }
            }
        },
        _normalizeBootstrapConferences: function (e) {
            var f, j, g, c, b;
            conferences = [];
            for (f in e) {
                j = a.extend({
                    conference_name: f,
                    _m_tmp: []
                }, e[f]);
                for (g in j.members.member) {
                    c = a.extend({
                            member_id: g
                        },
                        j.members.member[g]);
                    for (b in c.flags) c[b.replace(/^can_/, "")] = c.flags[b];
                    delete c.flags;
                    c._source = "bootstrap-normalized";
                    j._m_tmp.push(c)
                }
                j.members = j._m_tmp || [];
                delete j._m_tmp;
                j.members.sort(function (l, o) {
                    return cmp(l.caller_id_name.toLowerCase(), o.caller_id_name.toLowerCase())
                });
                conferences.push(j)
            }
            conferences.sort(function (l, o) {
                return cmp(Number(l.conference_ext.ext), Number(o.conference_ext.ext))
            });
            return conferences
        },
        _populate: function (e) {
            var f;
            e = this._normalizeBootstrapConferences(e.data.conference);
            if (e[0])
                for (f = 0; f < e.length; f++) this._addConference(e[f], true);
            this.options.$select.triggerHandler("change")
        },
        _cmpConf: function (e, f) {
            return cmp(Number(e.conference_ext.ext.replace(/^([0-9]+).*/, "$1")), Number(f.conference_ext.ext.replace(/^([0-9]+).*/, "$1")))
        },
        _addConference: function (e, f) {
            var j, g, c, b, l, o, n;
            c = this.options.conferences = this.options.conferences || [];
            $confs = this.options.$confs;
            o = this.options.$select;
            o.enable("no-conferences");
            if (f) {
                j = c.length;
                g = true
            } else if (c.length)
                if (this._cmpConf(e, c[0]) <
                    1) {
                    if (e.uuid === c[0].uuid) return;
                    j = 0
                } else {
                    b = 0;
                    a: for (; b < c.length - 1; b++) {
                        if (e.uuid === c[b].uuid) return;
                        if (this._cmpConf(e, c[b + 1]) < 1) {
                            j = b;
                            break a
                        }
                    }
                    if (j === undefined) {
                        j = c.length;
                        g = true
                    }
                } else {
                    j = 0;
                    g = true
                }
            l = a('<div class="confman-conf-item" />').singleConferenceManager({
                conference: e
            }).addClass(this._getConferenceClassName(e.conference_name));
            n = a("<option />").text(format_information(e.conference_ext.ext) + " " + entity.mdash + " " + e.name).val(e.conference_name);
            if (g) {
                l.appendTo($confs);
                n.appendTo(o)
            } else if (j) {
                l.insertBefore($confs.find(".confman-conf-item:eq(" +
                    j + ")"));
                n.insertBefore(o.find("option:eq(" + (j + 1) + ")"))
            } else {
                l.prependTo($confs);
                n.insertAfter(o.find("option:first"))
            }
            o.val() && l.hide().addClass("conf-man-hidden");
            c.splice(b, 0, e)
        },
        _removeConference: function (e) {
            var f, j, g;
            f = this.options.conferences;
            for (j = 0; j < f.length; j++)
                if (f[j].conference_name === e.conference_name) {
                    e = this.options.$confs.find(".confman-conf-item." + this._getConferenceClassName(f[j].conference_name));
                    g = this.options.$select.find("option");
                    g.length === 2 && this.options.$select.disable("no-conferences");
                    g.filter("[value=" + f[j].conference_name + "]").remove();
                    this.options.$select.val("").trigger("change");
                    e.remove();
                    this.options.conferences.splice(j, 1);
                    break
                }
        },
        _switchHandler: function () {
            var e, f;
            e = this.options.show = this.options.$select.val();
            f = this.options.$confs;
            if (e) {
                f.find(".confman-conf-item").hide().addClass("conf-man-hidden");
                f.find(".confman-conf-item." + this._getConferenceClassName(e)).show().removeClass("conf-man-hidden")
            } else f.find(".confman-conf-item").show().removeClass("conf-man-hidden")
        },
        _getConferenceClassName: function (e) {
            return "conference-item-id-" + e.replace(/[^-_a-zA-Z0-9]/g, "-")
        },
        _destroy: function () {}
    });
    a.widget("cui2.singleConferenceManager", {
        options: {
            html: '<div class="sconfman-conference">  <div class="sconfman-conf-title">    <span class="sconfman-conf-number-formatted" /> ' + entity.mdash + ' <span class="sconfman-conf-name"></span>    <div class="sconfman-conf-ops" />  </div>  <ul class="sconfman-member-list" /></div>',
            ops_html: '<a href="#" title="Lock" class="sconfman-op-lock hide-closed"><img src="/images/client/calls/open.png" alt="Lock" width="15" height="15" /></a><a href="#" title="Unlock" class="sconfman-op-unlock hide-open"><img src="/images/client/calls/closed.png" alt="Unlock" width="15" height="15" /></a><a href="#" title="Invite" class="sconfman-op-invite"><img src="/images/client/calls/call.png" alt="Invite" width="15" height="15" /></a><a href="#" title="Mute All" class="sconfman-op-muteall"><img src="/images/client/calls/muted.png" alt="Mute" width="15" height="15" /></a><a href="#" title="Unmute All" class="sconfman-op-unmuteall"><img src="/images/client/calls/unmuted.png" alt="Unmute" width="15" height="15" /></a>',
            item_html: '<div class="sconfman-legend"><div class="sconfman-name sconfman-cid-name" /><div class="confman-subtitle"><span class="sconfman-cid-number-formatted" /> <span class="sconfman-member-states" /></div><div class="sconfman-mops" />',
            member_ops_html: '<a href="#" title="Kick" class="sconfman-mop-kick"><img src="/images/client/calls/kill.png" alt="Kick" width="15" height="15" /></a><a href="#" title="Transfer" class="sconfman-mop-transfer"><img src="/images/client/calls/transfer.png" alt="Transfer" width="15" height="15" /></a><a href="#" title="Volume" class="sconfman-mop-volume"><img src="/images/client/calls/volume.png" alt="Volume" width="15" height="15" /></a><a href="#" title="Mute" class="sconfman-mop-mute hide-muted"><img src="/images/client/calls/unmuted.png" alt="Mute" width="15" height="15" /></a><a href="#" title="Unmute" class="sconfman-mop-unmute hide-not-muted"><img src="/images/client/calls/muted.png" alt="Unmute" width="15" height="15" /></a>',
            conference: undefined,
            max_energy: 7,
            energy_multiplier: 250
        },
        _create: function () {
            var e = this.element,
                f, j;
            (f = this.options.conference) || this.destroy();
            e.html(this.options.html);
            j = e.find(".sconfman-conf-ops");
            j.append(a(this.options.ops_html));
            e.addClass("cccSingleConferenceManager");
            e.toggleClass("moderator", trueish(f.moderator));
            e.find(".sconfman-conf-name").text(f.name);
            e.find(".sconfman-conf-number-formatted").text(format_information(f.conference_ext.ext));
            this.options.members = [];
            this.options.$members =
                e.find(".sconfman-member-list");
            if (f.members)
                for (e = 0; e < f.members.length; e++) this.addMember(f.members[e], true);
            a(window).bind("meteor_conference_status", CUI.FunctionFactory.build(this._sconferenceStatusHandler, this, {
                context: "argument"
            }));
            j.find("a.sconfman-op-lock").bind("click", CUI.FunctionFactory.build(this._lockHandler, this, {
                context: "argument"
            }));
            j.find("a.sconfman-op-unlock").bind("click", CUI.FunctionFactory.build(this._unlockHandler, this, {
                context: "argument"
            }));
            j.find("a.sconfman-op-invite").bind("click",
                CUI.FunctionFactory.build(this._inviteHandler, this, {
                    context: "argument"
                }));
            j.find("a.sconfman-op-muteall").bind("click", CUI.FunctionFactory.build(this._muteAllHandler, this, {
                context: "argument"
            }));
            j.find("a.sconfman-op-unmuteall").bind("click", CUI.FunctionFactory.build(this._unmuteAllHandler, this, {
                context: "argument"
            }))
        },
        _lockHandler: function (e) {
            var f = this.options.conference;
            e.preventDefault();
            a.postREST("/gui/conference/lock", {
                conference_name: f.conference_name
            })
        },
        _unlockHandler: function (e) {
            var f = this.options.conference;
            e.preventDefault();
            a.postREST("/gui/conference/unlock", {
                conference_name: f.conference_name
            })
        },
        _muteAllHandler: function (e) {
            var f = this.options.conference;
            e.preventDefault();
            a.postREST("/gui/conference/member/mute", {
                conference_name: f.conference_name,
         src="/images/client/calls/call.png" alt="Invite" width="15" height="15" /></a><a href="#" title="Mute All" class="sconfman-op-muteall"><img src="/images/client/calls/muted.png" alt="Mute" width="15" height="15" /></a><a href="#" title="Unmute All" class="sconfman-op-unmuteall"><img src="/images/client/calls/unmuted.png" alt="Unmute" width="15" height="15" /></a>',
            item_html: '<div class="sconfman-legend"><div class="sconfman-name sconfman-cid-name" /><div class="confman-subtitle"><span class="sconfman-cid-number-formatted" /> <span class="sconfman-member-states" /></div><div class="sconfman-mops" />',
            member_ops_html: '<a href="#" title="Kick" class="sconfman-mop-kick"><img src="/images/client/calls/kill.png" alt="Kick" width="15" height="15" /></a><a href="#" title="Transfer" class="sconfman-mop-transfer"><img src="/images/client/calls/transfer.png" alt="Transfer" width="15" height="15" /></a><a href="#" title="Volume" class="sconfman-mop-volume"><img src="/images/client/calls/volume.png" alt="Volume" width="15" height="15" /></a><a href="#" title="Mute" class="sconfman-mop-mute hide-muted"><img src="/images/client/calls/unmuted.png" alt="Mute" width="15" height="15" /></a><a href="#" title="Unmute" class="sconfman-mop-unmute hide-not-muted"><img src="/images/client/calls/muted.png" alt="Unmute" width="15" height="15" /></a>',
            conference: undefined,
            max_energy: 7,
            energy_multiplier: 250
        },
        _create: function () {
            var e = this.element,
                f, j;
            (f = this.options.conference) || this.destroy();
            e.html(this.options.html);
            j = e.find(".sconfman-conf-ops");
            j.append(a(this.options.ops_html));
            e.addClass("cccSingleConferenceManager");
            e.toggleClass("moderator", trueish(f.moderator));
            e.find(".sconfman-conf-name").text(f.name);
            e.find(".sconfman-conf-number-formatted").text(format_information(f.conference_ext.ext));
            this.options.members = [];
            this.options.$members =
                e.find(".sconfman-member-list");
            if (f.members)
                for (e = 0; e < f.members.length; e++) this.addMember(f.members[e], true);
            a(window).bind("meteor_conference_status", CUI.FunctionFactory.build(this._sconferenceStatusHandler, this, {
                context: "argument"
            }));
            j.find("a.sconfman-op-lock").bind("click", CUI.FunctionFactory.build(this._lockHandler, this, {
                context: "argument"
            }));
            j.find("a.sconfman-op-unlock").bind("click", CUI.FunctionFactory.build(this._unlockHandler, this, {
                context: "argument"
            }));
            j.find("a.sconfman-op-invite").bind("click",
                CUI.FunctionFactory.build(this._inviteHandler, this, {
                    context: "argument"
                }));
            j.find("a.sconfman-op-muteall").bind("click", CUI.FunctionFactory.build(this._muteAllHandler, this, {
                context: "argument"
            }));
            j.find("a.sconfman-op-unmuteall").bind("click", CUI.FunctionFactory.build(this._unmuteAllHandler, this, {
                context: "argument"
            }))
        },
        _lockHandler: function (e) {
            var f = this.options.conference;
            e.preventDefault();
            a.postREST("/gui/conference/lock", {
                conference_name: f.conference_name
            })
        },
        _unlockHandler: function (e) {
            var f = this.options.conference;
            e.preventDefault();
            a.postREST("/gui/conference/unlock", {
                conference_name: f.conference_name
            })
        },
        _muteAllHandler: function (e) {
            var f = this.options.conference;
            e.preventDefault();
            a.postREST("/gui/conference/member/mute", {
                conference_name: f.conference_name,
                member_id: "all"
            })
        },
        _unmuteAllHandler: function (e) {
            var f = this.options.conference;
            e.preventDefault();
            a.postREST("/gui/conference/member/unmute", {
                conference_name: f.conference_name,
                member_id: "all"
            })
        },
        _inviteHandler: function (e) {
            e.preventDefault();
            this.invitePopup()
        },
        addMember: function (e, f) {
            var j, g, c;
            j = this.options.members;
            if (f) {
                index = j.length;
                g = true
            } else if (j.length)
                if (this._cmpMember(e, j[0]) < 1) index = 0;
                else {
                    c = 0;
                    a: for (; c < j.length - 1; c++)
                        if (this._cmpMember(e, j[c + 1]) < 1) {
                            index = c;
                            break a
                        }
                    if (index === undefined) {
                        index = j.length;
                        g = true
                    }
                } else {
                    index = 0;
                    g = true
                }
            $member = a('<li class="sconfman-member-item" />').addClass("member-id-" + e.member_id).html(this.options.item_html);
            $member.find(".sconfman-cid-name").text(unescape(e.caller_id_name));
            $member.find(".sconfman-cid-number-formatted").text(format_information(e.caller_id_number));
            if (g) $member.appendTo(this.options.$members);
            else index ? $member.insertBefore(this.options.$members.find(".sconfman-conf-item:eq(" + index + ")")) : $member.prependTo(this.options.$members);
            j.splice(c, 0, e);
            this.updateMemberState(e.member_id, e);
            this._addMemberOps(e, $member)
        },
        _addMemberOps: function (e, f) {
            var j;
            if (trueish(this.options.conference.moderator) || trueish(e.current_user)) {
                j = f.find(".sconfman-mops");
                j.html(this.options.member_ops_html);
                j.find(".sconfman-mop-kick").bind("click", CUI.FunctionFactory.build(this._memberKickHandler,
                    this, {
                        context: "argument"
                    }, [e]));
                j.find(".sconfman-mop-transfer").bind("click", CUI.FunctionFactory.build(this._memberTransferHandler, this, {
                    context: "argument"
                }, [e]));
                j.find(".sconfman-mop-mute").bind("click", CUI.FunctionFactory.build(this._memberMuteHandler, this, {
                    context: "argument"
                }, [e]));
                j.find(".sconfman-mop-unmute").bind("click", CUI.FunctionFactory.build(this._memberUnmuteHandler, this, {
                    context: "argument"
                }, [e]));
                j.find(".sconfman-mop-volume").one("click", CUI.FunctionFactory.build(this._memberVolumeSetupHandler,
                    this, {
                        context: "argument",
                        first: "context"
                    }, [e]));
                j.find(".sconfman-mop-volume").bind("click", CUI.FunctionFactory.build(this._memberVolumeHandler, this, {
                    context: "argument",
                    first: "context"
                }))
            }
        },
        _memberKickHandler: function (e, f) {
            f.preventDefault();
            if (confirm("Remove " + (unescape(e.caller_id_name) || "this person") + " from the conference?")) a.postREST("/gui/conference/member/kick", {
                conference_name: this.options.conference.conference_name,
                member_id: e.member_id
            })
        },
        _memberTransferHandler: function (e, f) {
            f.preventDefault();
            this.memberTransferPopup(e)
        },
        _memberVolumeHandler: function (e) {
            e options.conference.conference_name,
                volume_in: f
            })
        },
        _memberMuteHandler: function (e, f) {
            f.preventDefault();
            a.postREST("/gui/conference/member/mute", {
                conference_name: this.options.conference.conference_name,
                member_id: e.member_id
            })
        },
        _memberUnmuteHandler: function (e, f) {
            f.preventDefault();
            a.postREST("/gui/conference/member/unmute", {
                conference_name: this.options.conference.conference_name,
                member_id: e.member_id
            })
        },
        _cmpMember: function (e, f) {
            return cmp((e.caller_id_name || e.caller_id_number).toLowerCase(), (f.caller_id_name || f.caller_id_number).toLowerCase())
        },
        _action_map: {
            "add-member": "eventAddMember",
            "del-member": "eventDeleteMember",
            "start-talking": "eventUpdateMemberState",
            "stop-talking": "eventUpdateMemberState",
            "mute-member": "eventUpdateMemberState",
            "unmute-member": "eventUpdateMemberState",
            "floor-change": "eventChangeFloor",
            lock: "eventLockState",
            unlock: "eventLockState",
            "energy-level-member": "eventEnergy",
            "volume-in-member": "eventGain"
        },
        _sconferenceStatusHandler: function (e, f) {
            d = f.json;
            d.conference_name === this.options.conference.conference_name && d.action in this._action_map && this._action_map[d.action] in this && this[this._action_map[d.action]](d)
        },
        eventAddMember: function (e) {
            e.caller_id_name = e.caller_caller_id_name;
            e.caller_id_number = e.caller_caller_id_number;
            e._source = "event";
            this.addMember(e)
        },
        eventDeleteMember: function (e) {
            var f = this.element,
                j = f.find(".member-id-" + e.member_id),
                g = this.options.members,
                c;
            c = 0;
            a: for (; c < g.length; c++)
                if (g[c].member_id == e.member_id) {
                    g.splice(c, 1);
                    break a
                }
            e = j.find(".sconfman-mop-volume");
            e.data("qtip") && e.qtip("destroy");
            j.remove();
            if (!g.length) {
                f.trigger("sconfman_delete", this.options.conference);
                this.destroy()
            }
        },
        eventUpdateMemberState: function (e) {
            this.updateMemberState(e.member_id, e)
        },
        updateMemberState: function (e, f) {
            var j = this.element,
                g, c, b, l, o = [];
            g = [{
                flag: "talking",
                class_name: "talking",
                text: "Talking",
                invert: false
            }, {
                flag: "speak",
                class_name: "muted",
                text: "Muted",
                invert: true
            }, {
                flag: "hear",
                class_name: "deafed",
                text: "Cannot Hear",
                invert: true
            }, {
                flag: "has_video",
                class_name: "video",
                text: "Video Enabled",
                invert: false
            }];
            j = j.find(".member-id-" + e);
            for (c = 0; c < g.length; c++) {
                b = g[c];
                l = this._trueish(f[b.flag]) !== b.invert;
                j.toggleClass(b.class_name, l);
                l && b.text && o.push(b.text)
            }
            o.length ? j.find(".sconfman-member-states").text(entity.mdash + " " + o.join(", ")) : j.find(".sconfman-member-states").empty()
        },
        memberTransferPopup: function (e) {
            var f = this,
                j;
            j = this.element.closest(".cccConferenceManager").data("conferenceManager").options.conferences || [];
            a.getTemplate("/ajax-html/conferenceTransferPopup.html", function (g) {
                var c = a(g).appendTo("body");
                c.find(".destination").focus().extensionPicker();
                c.find(".callerUUID").val(e.uuid || e["unique-id"]);
                c.find(".callerName").text(unescape(e.calller_id_name));
                c.find(".transferForm").one("submit", function (b) {
                    b.preventDefault();
                    a.postREST("/gui/freeswitch/uuid/uuid_transfer", {
                        template: "json",
                        uuid: e.uuid || e["unique-id"],
                        extension: c.find(".destination").val()
                    });
                    c.remove()
                });
                c.find(".cancel").bind("click", function (b) {
                    b.preventDefault();
                    c.remove()
                });
                if (j[0]) {
                    c.find(".uuidUuidBridgeList").empty();
                    for (g = 0; g < j.length; g++) j[g].uuid !== f.options.conference.uuid && c.find(".uuidUuidBridgeList").append(a("<li />").append(a('<a class="uuidUuidTransfer" />').data("dest", j[g].conference_name).text(j[g].conference_ext.ext + " " + entity.mdash + " " + j[g].name)))
                }
                c.delegate("a.uuidUuidTransfer",
                    "click", function (b) {
                        b.preventDefault();
                        b = a(this).data("dest");
                        a.postREST("/gui/conference/member/transfer", {
                            template: "json",
                            member_id: e.member_id,
                            conference_name: f.options.conference.conference_name,
                            new_conference_name: b
                        });
                        c.remove()
                    })
            })
        },
        invitePopup: function () {
            var e = this.options.conference;
            a.getTemplate("/ajax-html/conferenceCalloutPopup.html", function (f) {
                var j = a(f).appendTo("body");
                j.find(".destination").focus().extensionPicker();
                j.find(".transferForm").one("submit", function (g) {
                    g.preventDefault();
                    g = j.find(".destination").val();
                    if (g !== "") {
                        a.postREST("/gui/conference/dial", {
                            template: "json",
                            caller_id_name: e.name,
                            caller_id_number: e.conference_ext.ext,
                            conference_name: e.conference_name,
                            destination: g
                        });
                        j.remove()
                    }
                });
                j.find(".cancel").one("click", function (g) {
                    g.preventDefault();
                    j.remove()
                })
            })
        },
        eventEnergy: function (e) {
            var f = this.element,
                j = this.options.members,
                g, c, b;
            b = this.options.energy_multiplier;
            for (c = 0; c < j.length; c++)
                if (j[c].member_id == e.member_id) g = j[c];
            if (g) {
                g.energy = e.energy;
                f = f.find(".member-id-" +
                    g.member_id + " .sconfman-mop-volume");
                f.data("qtip") && f.qtip("api").elements.wrapper.find(".sconfman-member-level-flyout .energy-slider").slider("value", e.energy / b)
            }
        },
        eventGain: function (e) {
            var f = this,
                j = this.element;
            f = this;
            j = this.element;
            f = f.options.members;
            var g, c;
            for (c = 0; c < f.length; c++)
                if (f[c].member_id == e.member_id) g = f[c];
            if (g) {
                g.volume_in = e.volume_in;
                j = j.find(".member-id-" + g.member_id + " .sconfman-mop-volume");
                j.data("qtip") && j.qtip("api").elements.wrapper.find(".sconfman-member-level-flyout .gain-slider").slider("value",
                    Number(e.volume_in))
            }
        },
        eventLockState: function (e) {
            this.element.toggleClass("locked", e.action === "lock")
        },
        _destroy: function () {},
        _trueish: function (e) {
            return e === "true"
        }
    })
})(jQuery);
(function (a) {
    a.fn.recentCalls = function (e) {
        var f = a(this);
        if (e.registrationData) registrations = e.registrationData.registrations;
        a.getTemplate("/ajax-html/client/recentCalls.html", function (j) {
            f.each(function () {
                var g = a(this);
                a.ajax({
                    url: "/gui/configure/dynamic/user_dashboard",
                    data: {
                        action: "calls",
                        direction: "combined",
                        template: "json",
                        rows: 20
                    },
                    dataType: "json",
                    success: function (c) {
                        j = a(j);
                        var b = j.find(".template > .recentCallsItem");
                        b.find("a.opCall").bind("click", function (u) {
                            u.preventDefault();
                            u = a(this).closest(".recentCallsItem");
                            a.getJSON("/gui/freeswitch/originate", {
                                caller_id_name: u.data("name"),
                                destination: u.data("number")
                            }, function () {})
                        });
                        var l, o;
                        for (o in c.data.combined) {
                            l = c.data.combined[o];
                            var n = l.direction_from_phone == "incoming" ? "caller_id" : "destination";
                            if (l[n + "_name"] !== "Voicemail") {
                                var q = b.clone(true).appendTo(j.find(".recentCallsList"));
                                q.addClass(l.direction_from_phone);
                                q.data("number", l[n + "_number"]);
                                q.data("name", l[n + "_name"]);
                                q.find(".cid").text(formatCID(l[n + "_name"], l[n + "_number"]));
                                q.find(".time").text(l.start_time_past);
                                q.find(".duration").text(a.timeSince(Math.round((new Date).getTime() / 1E3) - l.duration, {
                                    format: "medium"
                                }))
                            }
                        }
                        c.data.combined.length != 0 && j.find(".recentCallsNoCalls").hide();
                        j.appendTo(g);
                        a(window).bind("meteor_channel_hangup", function (u, v) {
                            if (v.json.accountcode == validUsername || v.json.bbx_user_id == validUserID || registrations[parseInt(v.json.bbx_phone_registration_id, 10)]) {
                                var x = v.json,
                                    z = "outgoing";
                                if (trueish(v.json.click_to_call)) z = "outgoing";
                                else if (v.json.accountcode != validUsername && v.json.direction ===
                                    "outbound") z = "incoming";
                                var B = z == "incoming" ? "caller_id" : "destination";
                                if (x[B + "_name"] !== "Voicemail") {
                                    var C = b.clone(true).prependTo(j.find(".recentCallsList"));
                                    C.addClass(z == "incoming" ? "incoming" : "outgoing");
                                    C.data("number", x[B + "_number"]);
                                    C.find(".cid").text(formatCID(x[B + "_name"], x[B + "_number"]));
                                    C.find(".time").text((new Date(x.start_timestamp / 1E3)).toString("dddd, h:mm tt"));
                                    C.find(".duration").text(a.timeSince(Math.round((new Date).getTime() / 1E3) - x.duration, {
                                        format: "medium"
                                    }));
                                    a(".recentCallsList > .recentCallsItem:gt(19)",
                                        g).remove()
                                }
                            }
                        })
                    }
                })
            })
        });
        return f
    }
})(jQuery);